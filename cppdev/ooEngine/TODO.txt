- Add mouse and joystick support in the input manager
- Add the support of every event such as application events via keycodes in SDL_events.h
- Add a collision detection algorithm in 2D : line projection with rectangles
- Add collision info for circle collisions
- Add collision info for line projection collisions
- Handle events for a specific window
- Add 2D Physics
- Add a tiny configuration file usable for each game project
	* the load of assets will then not look like Load( GetPath() + ... )
- Add dynamic zordering for 2D objects in the scene. Use collision and bounding boxes. What about layer management then ?
- Add CreateRenderObject to the sdl2drenderManager ?
- too much use of dynamic_pointer_cast ?
- Scenes
	* Add rotation property on scene objects
	* Add opacity property to affect transparency of all scene objects from a given layer
	* Add Export To Xml method to the Scene Manager : export objects and layers in a xml file ?
- Try to get rid of the singleton
	* in particular the SLD2DRenderManager that holds a window and a renderer : what if we have multiple windows ?
- Make a map to store resource in the Resource manager. it will decrease search time :
	* std::map< unsigned int,  std::map< std::string, Resource*> > resourceByScope_; (for example)
	* no search by id but by name. or put the index as an id...
- Write functional tests :
	* unicity of EngineObject ids
	* Correct loads of resources
	* Corrent draw of an image at screen by picking specified pixels at given positions and testing its color
	* Sprite tests : (rough one done)
- (in progress) use of unique and shared pointers when possible (for the Resource in the ResourceManager..)
- Create a list of error number to use with the ErrorLogManager
- Make automatic the move of the dll files needed for the exe into the right folder
- Create a package delivery system containing all the dll, exe and data files needed to launch
- Supports json data format