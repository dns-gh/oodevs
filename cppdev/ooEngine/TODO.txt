- Try to get rid of the singleton
	* in particular the SLD2DRenderManager that holds a window and a renderer : what if we have multiple windows ?
- Make a map to store resource in the Resource manager. it will decrease search time :
	* std::map< unsigned int,  std::map< std::string, Resource*> > resourceByScope_; (for example)
	* no search by id but by name. or put the index as an id...
- Write functional tests :
	* unicity of EngineObject ids
	* Correct loads of resources
	* Corrent draw of an image at screen by picking specified pixels at given positions and testing its color
	* Sprite tests : (rough one done)
- add of an Input Manager to deals with inputs and events in a generic way
	* support of keyboard, mouse, 360 xbox
- use of unique and shared pointers when possible (for the Resource in the ResourceManager..)
- Create a list of error number to use with the ErrorLogManager
- Add a (multiple?) propre OOLOGs to report what's going on when the app is loading/running/leaving
or as a tool for debugging
- Make automatic the move of the dll files needed for the exe into the right folder
- Create a package delivery system containing all the dll, exe and data files needed to launch