use_priority        =   no;
max_instances       =   10;
max_activations     =   10;

actuators = deplacement, ordre;

default Default()
{
    
    behavior BEH_GererOrdreConduite(); 
}

behavior BEH_Defaut( id nDummy )
{   
    when updated:
    {      
        //persistent T_Action actionFire;
        
        DEC_Debug( "BEH_Defaut" );
        
        if( DIA_ModuleBegins() )
        {
          //  actionFire = DEC_StartTirSurPions();
        }
        
        // DEC_Population_RalentissementPion_ChangeVitesse   (  5 );
        //    V              A::DEC_Population_RalentissementPion_VitesseParDefaut();
    }
    
    on spontaneous end:
    {
//        if( actionFire != 0 )
//            DEC_StopAction( actionFire );    
    }        
}

behavior MIS_Population_FaireMouvement( T_Mission_Population_FaireMouvement mission, id nDummy )
{
    when updated:
    {
        persistent T_Action                actionMove;
        persistent T_Action                actionFire;
        persistent E_EtatActionDeplacement nEtatDeplacement;
        persistent float  rDummy = 0;
        
        if( DIA_ModuleBegins() )
        {
            DEC_Debug( "MIS_Population_FaireMouvement - DIA_ModuleBegins" );
            actionMove = DEC_StartDeplacement( mission.destination_ );
            actionFire = DEC_StartTirSurPions( 1 );
        }
        
        if( rDummy == 53 )
        {
            DEC_StopAction( actionMove );
            T_Point pointFusse = DEC_Geometrie_PositionAleatoireSurCercle( mission.destination_, 2000 );
            actionMove = DEC_StartDeplacement( pointFusse );
            
        }
        ++ rDummy;
    }

    on spontaneous end:
    {
        if( actionMove != 0 )
            DEC_StopAction( actionMove );    
        if( actionFire != 0 )
            DEC_StopAction( actionFire );
    }    
}
// 22 + 53 

behavior BEH_GererOrdreConduite()
{
    when updated:
    {
        if( DIA_ModuleBegins() )
            DEC_Debug( "init ordres popu" );
        
    	selection ordres_recus = DIA_GetCategory( "ordres_recus" );
    	DEC_Debug( "glouglou" );
    	with ( x in ordres_recus)
    	{
    		Rep_OrdreConduite ordre = x;
			switch ( ordre.eOrdre_ )
			{
                case eOrdreConduite_Population_ChangerAttitude:
                {
                    Rep_OrderConduite_Population_ChangerAttitude ordreAtt = ordre;
                    DEC_Debug( "changement attitude" );
                    DEC_Population_ChangerAttitude( ordreAtt.orderConduitePopulationChangerAttitude_ );
            		// on a finit de traiter l'ordre, on le supprime
            		DIA_RemoveFromCategory( "ordres_recus", ordre );
            		DIA_DeleteRepresentation( ordre );
                    break;
                }
            }
        }
    }
    on spontaneous end:
    {
    }  
}