TODO
    - HLA
        -> tester convois
        -> tester prisonniers
    - Checker que la mission 'convoyer' ne prend aucun paramètre
    - Voir pourcentage disponibilité avec les convois qu'on voit => NON
    - CheckPoints :
        -> renforcements
        -> transports       
    - MOS_Light2 : création magique des rotas/itineraire log  
    - Virer les types de terrain 'bord de' dans ADN
    - Bugs : suppression des consignes maintenance/santé quand un des automates de la chaine n'a pas de supérieur (Cf. Suppression des liens logistiques d'un TC2 ...)
    
    - GGR : PENSER A METTRE LES FICHERS MISSIONS ALAT A JOUR
    
TODO de merde
    - Délais de construction des camps / piste
    - Mode de rejoignure d'itinéraire dépendant du type d'itinéraire (recon/infiltration ...)    
    - Dangerosité / dotations
    - Leviers de performance
        -> + DIA   

Next Version - Codename ''
    - NLD / SBO - Bug fix : crash dans thread pathfind quand destruction de la mission automate alors qu'un calcul est en cours
            => Le fuseau automate est maintenant copié dans DEC_Path
    - NLD / SBO - Bug fix : les directions par défaut sont maintenant valides (au nord)
    - NLD - Nouvelle fonction DEC : DEC_Copie_LocalisationDansListeLocalisations()

Version 0.116 [17/08/2005] - Codename 'himaix'
    - NLD - Les pions débarqués en mouvement sont maintenant en posture 'posteReflexe' à la place de 'mouvement'
                (bDummy pour l'infanterie ... a virer le jour ou le débarquement n'existera plus (1 pion INF => 2 pions))
    - NLD / SBO - Update de l'action magique de recomplétement 'partiel' => gestion plus fine des équipements et des humains
    - AGE - Il est maintenant possible de spécifier le comportement du pathfind vis à vis du fuseau d'automate
    - NLD - Les fonctions de Tir direct (DEC_StartTirDirectXXX) prennent maintenant en paramètre optionnel le type de munition à utiliser.
            Par défaut, tous les types de munitions sont utilisés.    
    - NLD - Nouvelles fonctions pour l'IMEX 
                V DEC_InterdireEvacuationAutomatiqueBlesses( A /*T_Pion*/ );
                V DEC_AutoriserEvacuationAutomatiqueBlesses( A /*T_Pion*/ );   
    - NLD - Un pion ne possédant QUE des composantes réparables peut à nouveau se déplacer
    - NLD - Connaissances agents : envoi de la pertinence à MOS tous les n%
    - NLD - Nettoyage dans la gestion des 'avants points' et autres 'points speciaux' 
                => Plus de points ni d'avants points avant les plantations et les marais (no comment ...)
                => Plus d'avants points sortie de forêt
                => Plus de points spéciaux (ni d'avants points) au niveau des ponts sur les ruisseaux
                => Pas plus de 1 avant point tous les 2000 mètres
                => Pas plus de 1 point spécial tous les 500 mètres
    - NLD - Les fonctions suivantes
                B DEC_NecessiteEvacuationBlesses( A /*T_Pion pion interrogé*/ );
                V DEC_EvacuerBlessesVersTC2     ( A /*T_Pion pion possèdant les blessés à transférer*/, A /*T_Automate tc2 destinataire*/ );    
              sont maintenant déclarées dans workspace.hal (=> dispo pour pions et automates)
    
Version 0.115 [10/08/2005] - Codename 'pathfind rulz'
    - AGE - Ajout de regles de pathfind pour les unités autonomes ( => les drones vont en ligne droite ). 
    - NLD - Bug fix : la fonction DEC_Geometrie_CalculerPositionsParRapportALima() crashait quand la lima ne coupe pas le fuseau ...
    - NLD - Gestion des drônes :
                * Dans les données, on peut maintenant spécifier '0' hommes constituant l'équipage
                * Données : nouveau champ optionnel pion :
                        <EstAutonome/>
                * Les drones ne sont plus brouillés       
    - NLD/AGE - Bug fix : pb de précision dans DEC_Geometrie_CalculePointProcheLocalisationDansFuseau + nettoyage
    - NLD - Fonctions DEC
                * Renommage DEC_TransfererBlessesVersTC2() en DEC_EvacuerBlessesVersTC2()
                * new  B DEC_NecessiteEvacuationBlesses( A /*T_Pion pion interrogé*/ )
    - NLD - Nouveaux RCS gérés par le moteur : 
                - CR-RavitaillementDotationsEffectue
                - CR-RavitaillementStockEffectue
                - CR-HumainRetourDeSante
    - NLD - Les zones de tirs ne devraient plus être evitées par le pathfind    
    - AGE - Externalisation des poids de la règle de pathfind -> Fichier PathfindRules.xml
    - AGE - Ajout d'un helper pour gerer les changements de répertoires pour la lecture des archives
    - NLD - Découpage du type d'objet 'pont flottant' en 'pont flottant continu' et 'pont flottant discontinu'
    - NLD - Nettoyage dans les objets + envoi des infos sur les dotations de construction/valorisation des objets reels ) à MOS
    - NLD - Bug fix : pb corruption fichier workspace.ddi (DIA + debugger)        
    - SBO - MOS_Light 1 utilise la lib ENT
    - NLD - Le message 'StartIndirectFire' indique maintenant quelle est la munition utilisée par le tir indirect
    - NLD - Le magic move est à nouveau actif sur les pions prisonniers/rendus (attention, il n'est plus possible de leur donner de mission par la suite)
    - AGE - Refactors dans la règle du pathfind, modifications des poids pour le type d'itinéraire 'Assault'
    - NLD - Gestion des 'PHs' dans les tirs indirects, dépendant de la posture de la cible
                - Données au niveau des dotations munitions
                            <TirIndirect type="explosif">
                                <InterventionType>6</InterventionType>
                                <DispersionX>300</DispersionX>
                                <DispersionY>200</DispersionY>
                                <CoefficientNeutralisation>1.5</CoefficientNeutralisation>
                                <PHs>
                                    <PostureCible>
                                        <Mouvement>1</Mouvement>
                                        <MouvementDiscret>1</MouvementDiscret>
                                        <Arret>1</Arret>
                                        <PosteReflexe>1</PosteReflexe>
                                        <Poste>1</Poste>
                                        <PosteAmenage>0.2</PosteAmenage>
                                        <PostePrepareGenie>0.2</PostePrepareGenie>
                                    </PostureCible>     
                                </PHs>                    
                            </TirIndirect>
                - Un PH est tiré pour chaque composante suspectible d'être touchée par le tir, lors de l'application des effets
    
Version 0.114 [01/08/2005] - Codename 'svn'
    - NLD - Logistique - santé : nouvelle fonction DEC_TransfererBlessesVersTC2() qui, subtilement combinée à l'action magique de changement
            de liens logisitiques (permettant ainsi à un automate de ne plus avoir de TC2) permet à guigui de faire un IMEX simplifié.
                    V A::DEC_TransfererBlessesVersTC2( A /*T_Pion pion possèdant les blessés à transférer*/, A /*T_Automate tc2 destinataire*/ )
    - NLD/SBO - Nouvelle action magique : recomplétement partiel
    - NLD - ASN / Scripts : Fusion des énums E_RC_TypeDotation et E_TypeDotation en E_TypeDotation, et déplacement de cette énum de Common/Types.hal dans Common/Moteur/Types_Enums.hal
    - NLD - Bug fix : le temps 'SIM' renvoyé par la fonction DEC_SimTime() était en retard d'un pas de temps
    - NLD - Gestion de la sauvegarde du 'transport' 
                * Les infos transportés / transporteur sont sauvegardées
                * Nouvelle fonction DEC "B A::DEC_Transport_EnCoursDeTransport()" permettant de savoir, après une reprise, si l'hélico a des pions à débarquer
    - NLD - Ajout d'un bool 'ravitaillement-debut-mission' en paramètre de toutes les missions ALAT (pions/automates)
    - NLD - Gestion des prisonniers : le paramètre 'camp' a été enlevé de l'action magique 'Se Rendre' 
                => même fonctionnement que les réfugiés
                => DEC_FairePrisonnier() prends un camp de prisonniers en paramètre
    - NLD - Bug fix : Update réseau des dotations des pions inutiles (quand donnée pour un mode de consommation vaut 0)
    - NLD - Afin de ne plus 'flooder' Thales, les pourcentages de postures ne sont plus envoyés que tous les 5 % (valeur configurable dans fichier de conf .cpp)
    - NLD - Bug fix : mise à jour des pourcentages / postures / hauteur quand un pion meurt / quand un pion renforce un autre
    - NLD - Gestion des morts (bDummy demandé par DSRO) : quand un pion détecte une unité détruite, le niveau de perception
                passe automatiquement à 'reconnu'. Le but étant de ne pas avoir 'peur' des unités détruites que l'on ne fait
                que détecter ..
    - NLD - MOS_Light2 :
                * Suppression de l'onglet 'Cargo'
                * Ajout de l'action magique 'Destruction totale'
                * L'enum des niveaux de perception par automate dans les connaissances agents était invalide
    - NLD - Gestion de l'état opérationnel :
                - Nouvelles fonctions DEC (pions/automates)
                    V A::DEC_Agent/Automate_ChangeEtatOperationnel( I /*E_E_EtatOperationnel*/ );
                - 2 infos sont maintenant envoyées à Thales 
                        * la valeur brute de l'état opérationnel (le pourcentage déjà envoyé actuellement)
                        * l'enum issue des scripts (=> comme ça plus de pb d'interprétation foireuse de la part de Thales)
    - NLD - Bug fix : les pions prisonniers ne pouvaient plus se déplacer
    - NLD - ASN : 
              * Remplacement de l'attribut d'unité 'etat' (enum débile) par un booléen 'mort' et 'neutralise'
              * Suppression des attributs d'unité 'capa op materiel' et 'capa op personnel'
              * Remontée de l'info concernant la disponibilité des transporteurs d'hommes (les vabs dans les sacs à dos ...)
    - NLD - La fonction DEC_ActiverObjet() est maintenant disponible pour les automates. Attention, elle retourne un bool, maintenant, à la place de E_EtatActionObjet
    - NLD - Suppression de l'ordre de conduite 'AssignerPositionEmbarquement'
    - NLD - Nouveaux ordres de conduite :
                - 'RecupererTransporteurs' dispo même sans missions
                - 'ChangerPositionDebarquement'
    - NLD - Changement du fonctionnement de remplissage des camions constituant les convois : passage des unités 'U' génériques à des données + opérationnelles
                   - Composantes.xml                                                 
                        <Transporteur>                                                          <Transporteur>
                            <Capacite>33</Capacite> // en U                                         <Capacite>
                            <TempsChargementMoyen>60s</TempsChargementMoyen>            =>              <Masse>33</Masse>   // En tonnes
                            <TempsDechargementMoyen>300s</TempsDechargementMoyen>                       <Volume>10</Volume> // En m3
                        </Transporteur>                                                             </Capacite>
                                                                                                    <TempsChargementMoyen>60s</TempsChargementMoyen>
                                                                                                    <TempsDechargementMoyen>300s</TempsDechargementMoyen>
                                                                                                </Transporteur>
                    - Dotations.xml
                            <NombreDansVolumeUnitaire>3</NombreDansVolumeUnitaire>
                        devient 
                            <Conditionnement>
                                <Nombre>5</Nombre>
                                <Masse>0.2</Masse>  // En tonnes
                                <Volume>0.2</Volume> // En m3
                            </Conditionnement>                                                                    
                Les camions sont remplis selon un algorithme subtil bourrin de type 'dès que c'est plein en volume ou en masse, on prend un autre camion'
    - NLD - Modif ASN : le nombre d'humains 'totalement operationnels' est envoyé
    - SBO - Ajout d'une option -conffile permettant de spécifier le chemin des données dans MOS_Light et MOS_Light2
				Syntaxe: MOS_Light2 -conffile path/to/scipio.xml
    
Version 0.113.1 [21/07/2005] - Codename 'bDummy && pbt || bFired && bAssHole'
    - NLD - Bug fix : le barycentre d'une localisation était 'un peu' décalé ... (poids double sur le premier point)                
    - NLD - CrashCatcher(TM) affiche maintenant la mission du pion/automate qui vautre
    - NLD - Le path find n'évite plus les obstacles dans lesquels se trouve un point de passage obligé
    - NLD - Bug fix : Erreur dans consommation dotations lors des opérations sur les objets
    - NLD - Ajout type de path find : 'eTypePathDeminage'

Version 0.113 [08/07/2005] - Codename 'logisticien de masa'
    - NLD / SBO - Nouveaux messages DIN pour TIC (infos sur environnements itineraires parcourus + forwarding des 'debug draw points' à tous les MOS_Lights )
    - NLD - Bug fix mal corrigé la dernière fois (booooouh) : l'action de déplacement retournait 'eFinished' dans des cas 'extrèmes' lors de la rejoignure d'itinéraire
    - JVT - Bug fix : la fonction DEC_Path::InsertPointAvant considérait que tous les points du path étaient distincts. Ce qui
            n'est plus vrai depuis l'ajout des 'Points avant lima'
    - NLD - Les fonctions 'DistanceAvantLigneAvant et Arriere' retournent désormais des valeurs signées
                => distance négative tant que la ligne (avant ou arriere) n'est pas atteinte
                => distance positive quand la ligne a été dépassée
    - NLD - Mos_light 1 et 2 : affichage des liens logistiques, pour les automates  
    - NLD - Par défaut, les pions ont maintenant le fuseau de leur automate (ce n'était pas le cas quand l'automate n'affectait aucune mission à un de ses pions pendant la MRT)
    - JVT - Bug fix : la fonction DEC_Path::InsertPointAvant insert bien un point avant le point voulu et plus avant le point
            qui se trouve après le point voulu (comprenne qui pourra :) )

Version 0.112 [04/07/2005] - Codename 'de-organizer'
    - AGE - Ajout d'une option -pathdebug qui permet de logger les demandes de pathfind
    - AGE - Divers fix sur la gestion des objets dans MOS_Light2
    - AGE - Gros bug fix sur la gestion des fuseaux d'automate dans le pathfinder
    - NLD - Nouveaux RCs 
                eRC_MissionImpossiblePionsSubordonnesNonOperationnels,
                eRC_MissionImpossibleLimaInvalide,
                eRC_MissionImpossibleZoneHorsFuseau,
                eRC_RapportDeForceDefavorable,
                eRC_TerrainDifficile,
                eRC_PlusDeCarburant,
                eRC_DispositifDisperse,
                eRC_PionNeutralise,
                eRC_SilenceRadio,
                eRC_TirRestreint,
                eRC_TirInterdit,
                eRC_TirLibre,    
    - NLD - Nouvelle 'famille' de RCs : warning => DEC_Warning() pour les pions et les automates
    - NLD - RC 'Terrain Difficile' envoyé automatiquement par le moteur quand déplacement (ou reprise de déplacement) sur un itinéraire partiel
    - NLD - RC 'Pas de carburant' envoyé automatiquement par le moteur
    - NLD - Modif dans la gestion des RCs de la LOG (demande de maintenance/santé/rav) => plus de flooding (au pire une fois par pion par tick quand la log est activée)
                    
Version 0.111 [01/07/2005] - Codename 'singapouri'
    - JVT - Bug fix : DEC_GeometryFunctions::GetInterceptionPosition : La vitesse donnée en paramètre n'était pas convertie
            dans la bonne unité.
    - AGE - Changements dans la règle du pathfinder
                * Poids de la direction dangereuse, des routes, ...
                * Prise en compte des fuseaux d'automate
                * Bug fix dans l'évitement des objets
                * Modifs dans la génération pour améliorer les chemins des chalands
    - NLD - Bug fix : le message 'Start/StopIndirectFire' était envoyé à MOS même quand le tir ne pouvait pas être effectué
                (suite à un pb de dotations par ex ...)
    - NLD - Un pion ne possédant QUE des composantes réparables (donc plus une seule composante fully operational) ne peut plus se déplacer                
    - NLD - Bug fix : l'action de déplacement retournait 'eFinished' dans des cas 'extrèmes' lors de la rejoignure d'itinéraire
    - NLD - L'état ops tient maintenant compte des capacités en personnel, nouvelle données dans Decisionnel.xml (et donc nouvel ADN)
                  <EtatOps>
                    <PoidsComposantesNonMajeures>0.1</PoidsComposantesNonMajeures>
                    <PoidsComposantesMajeures>0.4</PoidsComposantesMajeures>
                    <PoidsPersonnel>0.5</PoidsPersonnel>                        <------ 
                  </EtatOps>
            C'est optionnel pour assurer la compatibilité avec les data DSRO, et ça vaut 1 - (PoidsComposantesNonMajeures + PoidsComposantesMajeures) par défaut.
            (donc 0 avec les données actuelles de la base et de la DSRO ...)                  
    - NLD - Le moteur gère maintenant l'évitement automatique des obstacles dans l'action de déplacement 
                * Tout nouvel obstacle présent sur l'itinéraire est éviter
                * Un essai de contournement, par obstacle, par action de déplacement,
                * Si l'obstacle ne peut pas être contournée, le déplacement continue, et la fonction DEC 'ProchainObjetSurIti' renvoit l'obstacle

Version 0.110.7 [23/06/2005] - Codename 'vieux'
    - NLD/JVT - Bug fix : pb de précision dans le 'unload' du transport + algos foireux
    - NLD - CrashCatcher(TM) actif également dans tous les 'DIA_DeactivateOrder()' appelé quand une mission est arrêtée

Version 0.110.6 [17/06/2005] - Codename 'nld chez lui'
    - AGE - Suppression de la triangulation
    - NLD - Suppression des recyclers dans DIN (=> stop à la RAM folle) (=> plus de crashs DIA debugger)

Version 0.110.5 [10/06/2005] - Codename 'chier'
    - NLD - Bug fix : memory leak dans DIA/SIM à l'appel d'ExecuteScriptpFonction()
    - NLD - Bug fix : memory leaks de 0 bytes (! cf purify) dans l'envoi de certains messages réseaux 
    
Version 0.110.4 [06/06/2005] - Codename 'Jean-Marc'
    - NLD - Bug fix : Erreur de lecture des délais d'acquisition des PCs dans les types de radars
    - NLD - Bug fix : Bug dans la différenciation PC / pas PC dans l'execution de la perception des radars
    - NLD - Ajout de _clearfp() dans tous les try/catch( ... ) (Cf. erreur fpu apres une triangulation qui crashe)
    
Version 0.110.3 [??/05/2005] - Codename 'Carreux de SDE qui oublie tout'
    - JVT - Modification des position en nasse : Toutes les positions sont équidistantes ( avant / 2 pour les 2 première dans le cas pair )
    - ??

Version 0.110.2 [24/05/2005] - Codename 'nld les doigts de pieds en éventail en train de se la couler douce'
    - JVT - modification de la fonction DEC_ALAT_ActiverReconnaissance :
                V A::DEC_ALAT_ActiverReconnaissance ( U /*T_Localisation*/ );
    - AGE/JVT - Ajout d'un allocateur dans boost pour la gestion des checkpoints
    - JVT - Bug fix : DEC_GeometryFunctions::ComputePosDeploiementASANasse : l'angle étant donné en degré et pris en compte en radian
    - JVT - Bug fix : DEC_GeometryFunctions::RotateDirection : erreur de conversion degrés vers radians 
    - JVT - Bug fix : DEC_GeometryFunctions::CopyAndRotateDirection : erreur de conversion degrés vers radians
    - JVT - Modification de la fonction Automate ASA 
                U /*T_ListePoints*/ DEC_Geometrie_PosDeploiementDoubleRideau( R /*nbPositions*/, U /*T_Point*/ /*position a défendre*/, R /*distence entre sections*/, U /*T_Direction*/ );
                =>
                U /*T_ListePoints*/ DEC_Geometrie_PosDeploiementDoubleRideau( R /*nbPositions*/, U /*T_Point*/ /*position a défendre*/, R /*distance point à défendre*/, R/*distance entre rideaux*/, R /*distance entre sections*/, U /*T_Direction*/ );
    - JVT - Nouvelles fonctions DEC Automate ALAT :
                DEC_ConnaissanceAgent_DangerositeSurPion et DEC_ConnaissanceAgent_DangerositeSurConnaissance
            idem les mêmes fonctions pour les pions ;)

Version 0.110.1 [18/05/2005] - Codename 'limas tordues'
    - JVT - Nouvelle fonction DEC globale :
                V DEC_ListePoints_Clear( U /*T_ListePoints*/ );
    - JVT - Bug fix : Les fonctions DEC_Geometrie_CalculerPositionsParRapportALima et DEC_Geometrie_CalculerPositionParRapportALima prennent maintenant
            correctement en compte les limas tordues
    - NLD - Nouvelle fonction DEC : 
                R A::DEC_ConnaissanceAgent_DangerositeSurConnaissance( U /*T_ConnaissanceAgent*/ , U /*T_ConnaissanceAgent*/, I /*E_ValiditeRequete&*/ ); // Retourne la dangerosité, entre 1 et 2
    - NLD - Bug fix : Crash dans le crash catcher (TM) (!) quand 'crash catche' du à une exception virgule flottante
                => _clearfp()
    
Version 0.110 [16/05/2005] - Codename 'non non non !!'
    - AGE - MOS_Light ==> 3D ! <==
    - AGE - Pathfind : nouvelle passe sur la regle : 
        . Sorties de fuseaux autorisees pour l'alat, pour un point d'arrivee specifiquement hors du fuseau, pour les itineraires de repli
        . Bidouillage des poids de la regle
    - NLD - Prisonniers : Quand un pion P1 'rendu' est fait prisonnier par autre pion P1, le TC2 de P1 est celui de P2 jusqu'à ce que P1 arrive au camp de prisonnier
    - JVT - Sauvegarde des pions transportés : au load, ils sont repositionnés à leur position de départ ( même effet qu'une annulation du
            transport en cours de SIM )
    - JVT - Modification de la fonction de prêt de composante ( LOG Santé ) :
                _ Suppression de la fonction DEC_Sante_PreterVSRAM
                _ Ajout de la fonction U /*T_Action*/ A::DEC_Sante_StartPreterVSRAM( A /*T_Pion*/, R /*nombre*/, B /*action terminee ?*/ );
    - NLD - Les dotations d'un objet en cours de destruction sont maintenant récupérées par le pion 'destructeur' si le destructeur et l'objet sont du même camp
                (Principalement implémenté pour les ponts flottants ...)
    - NLD - La création des objets 'ponts flottants' peut prendre un paramètre (fonction DEC_StartCreerObjet( .... param ... )) spécifiant le nombre de dotations (ponts ...) 
                nécessaire à la construction.
    - JVT - Nouvelle fonction DEC Pions :
            U /*T_ListeConnaissancesObjet*/ A::DEC_Itineraire_ProchainsObjets( * /*Liste de E_TypeObject à prendre en compte*/ );
            Fonctionne comme DEC_ItineraireProchainObjet mais renvoi TOUT les objets sur l'itinéraire
    - NLD - DEC_Geometrie_EchantillonnerListePoints renommée en DEC_Geometrie_DecouperListePoints()
    - NLD - Nouvelle fonction : U /*T_ListePoints*/  DEC_Geometrie_DecouperItineraire( U /*T_Itineraire*/, R /*nb parts*/ ); // Effacer résultat   
    - JVT - La connaissance des attaquants (prises à partie) est mise à jour (ou créée) uniquement lorsque 
            l'attaquant est à une distance inférieure à la distance maximum des capteurs du tiré.
    - NLD - Fonction pour obtenir la liste des connaissances amies dans une zone (pour pions et automates)
                S /*T_ListeConnaissancesAgent*/  A::DEC_Connaissances_AmisDansZone( U /*T_Localisation*/ );
    - NLD - Pseudo gestion des ruptures des chaines logistiques => possibilité de supprimer un lien logistique
                (Cf. Changement de liens logistiques dans MOS_Lights)
    - JVT - Facteur d'accélération de mise en posture ( en dur ) dans le cas des zones d'implantations.
            Pour l'instant, en entrant dans une zone d'implantations, le facteur est de 2
    - JVT - Nouvelle fonction DEC globale ( workspace ) :
            U /*T_Localition*/ DEC_Geometrie_CreerLocalisation();
            B                  DEC_Geometrie_DirectionEgales  ( U /*T_Direction*/, U /*T_Direction*/ );
    - JVT - Modification des effets de la neutralisation : lorsqu'un pion est neutralisé il peut bouger mais ne peut plus tirer.
    - JVT - Ajout d'un nouvel avant point pointant sur eTypePointLima
    - JVT - Modification Pion.xml : on peut rentrer les distance avant lima :
                <Point type="lima">100</Point>
    - JVT - Bug fix : les avants points insérés à la position de départ de l'itinéraire n'étaient pas pris en compte.
    - JVT - Nouvelle fonction DEC automate ( accesseur sur pion ):
            B A::DEC_Automate_PionEstTransporte( A /*T_Pion*/ );
    - NLD - Mise à jour des missions RENS + missions génériques (!)
    - NLD - Comptes rendus :
                eRC_Ecoute      renommé en eRC_EnEcoute
                eRC_EnEcouteRadar
                eRC_DebutMiseEnOeuvreDrone      
                eRC_FinMiseEnOeuvreDrone        
                eRC_VehiculeLaisseSurPosition   
                eRC_RejointPositionEmbarquement
                eRC_EnAttenteTransporteurs      

Version 0.109 [10/05/2005] - Codename 'loi de poisson'
    - AGE - Nouvelle regle pour le pathfinder. 
                Types de chemin pour les unites au sol :
                    . eInfoMovement privilegie les routes,
                    . eInfoRecon privilegie les routes, les lisieres et les points hauts,
                    . eInfoInflitration privilegie les forets et les points bas, evite les villes,
                    . eInfoAssault privilegie rien du tout,
                    . eInfoRetreat evite les ennemis,
                    . eInfoBackup evite les ennemis,
                Types de chemin pour les unites volantes :
                    . eInfoMovement evite les routes, les liseres et les villes,
                    . eInfoRecon evite les villes,
                    . eInfoInflitration evite les routes, les liseres et les villes et privilegie les points bas
                    . eInfoAssault privilegie rien du tout,
                    . eInfoRetreat evite les ennemis,
                    . eInfoBackup evite les ennemis,
                Meilleure prise en compte des objets (mais en dur)
                Prise en compte de l'altitude : 
                    . Nouveau champ facultatif dans une composante : pente max entre 0 et 1. Defaut : 0.6
                        <DeniveleMaximum>0.50</DeniveleMaximum>
    - NLD - Modif de l'API DEC du path find :
            U /*T_Itineraire*/  A::DEC_CreerItineraire     ( U /*T_Point : point d'arrivée*/, I /*E_TypeItineraire*/ );
            U /*T_Itineraire*/  A::DEC_CreerItineraireListe( U /*T_ListePoints : liste des points de l'itinéraire*/, I /*E_TypeItineraire*/ );
    - NLD - Modifs ASN :
                - Renommage missions LOG
                - Nouvelle mission ASA HAWK
                - Nouvel ordre de conduite 'Automate-TransfererRenfort'                
                              
Version 0.108 [04/05/2005] - Codename 'Quatre moitiés font deux touts.'
    - JVT - Nouvelle fonction DEC Pion Infanterie :
                * U /*T_Action*/ A::DEC_StartAttenteTransporteursSurPosition( I /*E_EtatEmbarquementDebarquement*/, U /*T_Position*/ );
                    Idem DEC_StartAttenteTransporteurs mais en prenant en compte un point de rencontre au lieu de la position courrante
                    et l'accesseur dorrespondant :
                * R A::DEC_Agent_DureeRecuperationTranporteursSurPosition( U /*T_Point*/ ); // En minutes
                    Puis quelques fusses "magiques" :
                * V A::DEC_LaisserTransporteursSansDelai   ();
                * V A::DEC_RecupererTransporteursSansDelai();
    - JVT - Prise en compte des priorités tactiques dans les chaines Maintenance et Santé de la Logistique
    - NLD - Mise à jour des ASN 
                - Missions ALAT/ASA/ASS/INF 
                - Nouveaux RCS
                    CR-TransportEnCours                 
                    CR-TransportEmbarquement            
                    CR-TransportDebarquement            
                    CR-ZoneImplantationOccupee          
                    CR-InsallationSurZoneImplantation   
                    CR-TirHorsDePortee                  
                    CR-TirAnnule        
                - Nouveaux ordres de conduite
                    PasserEnSilenceRadar
                    ArreterSilenceRadar                 
    - NLD - Mise à jour de l'enum 'E_DotationMunitionClasse' 
                - renommage (missile => missileSol / missileAirAir => missileAir)
                - l'enum est maintenant définie dans Type_Enums.hal de Moteur/
                - Les valeurs dans les données (dotations.xml) changent donc de même ...

Version 0.107 [04/05/2005] - Codename 'porte'
    - NLD - Les fonctions suivantes sont disponibles pour tous les types de pions
            U /*T_Action*/ A::DEC_StartEmbarquement                  ( I /*E_EtatEmbarquementDebarquement*/ );
            U /*T_Action*/ A::DEC_StartDebarquement                  ( I /*E_EtatEmbarquementDebarquement*/ );
            U /*T_Action*/ A::DEC_StartAttenteTransporteurs          ( I /*E_EtatEmbarquementDebarquement*/ );
            U /*T_Action*/ A::DEC_StartTirDirectDebarques            ( I /*E_EtatActionTirDirect*/, U /*T_ConnaissanceAgent*/, R /*pourcentage de composantes à utiliser*/, I /*E_ModeTirDirect*/ );
            U /*T_Action*/ A::DEC_StartTirDirectTransporteurs        ( I /*E_EtatActionTirDirect*/, U /*T_ConnaissanceAgent*/, R /*pourcentage de composantes à utiliser*/, I /*E_ModeTirDirect*/ );    
            U /*T_Action*/ A::DEC_StartControlerZone                 ( U /*T_Localisation*/, R /*distance max en metres*/, B /*Tir autorisé*/ );
            B              A::DEC_Agent_EstEmbarque                  ();    
            R              A::DEC_Agent_DureeEmbarquement            (); // En minutes
            R              A::DEC_Agent_DureeDebarquement            (); // En minutes         
            R              A::DEC_Agent_DureeRecuperationTranporteurs(); // En minutes
            B              A::DEC_Agent_TransporteursPret            ();    
    - JVT - Modification du calcul du PH : les distances prises en compte sont maintenant en 3D
            ( impacte l'action de tir mais aussi les calculs de dangerosité )
    - NLD - Refonte de la gestion des radars => maintenant équivalent aux senseurs
                => Données 'capteurs.xml'
                        <Radars>
                            <Radar nom="radar doppler" type="radar"> <!--- type : radar / ecoute / ecoute radar -->
                                <Portee>
                                    <RayonAction>10000</RayonAction>
                                    <HauteurMinimale>20</HauteurMinimale>       <!-- optionnel : -infini par defaut -->
                                    <HauteurMaximale>150</HauteurMaximale>      <!-- optionnel : +infini par defaut -->
                                </Portee>            
                                <DureesAcquisition>                                     <!-- optionnel : reconnu par defaut -->
                                    <DureeDetection>300s</DureeDetection>
                                    <DureeReconnaissance>900s</DureeReconnaissance>
                                    <DureeIdentification>900s</DureeIdentification>
                                    <DureesSpecifiquesPionPC>                           <!-- optionnel : tous par defaut -->
                                        <DureeDetection>60s</DureeDetection>
                                        <DureeReconnaissance>120s</DureeReconnaissance>
                                        <DureeIdentification>198s</DureeIdentification>
                                    </DureesSpecifiquesPionPC>        
                                </DureesAcquisition>    
                                <ActivitePionsDetectables>                  <!-- optionnel : tous par defaut    -->
                                    <Deplacement/>
                                    <EnTravaux/>
                                </ActivitePionsDetectables>        
                            </Radar>    
                            ...
                        </Radars>
                => Données 'composantes.xml'
                        <Composante Commentaire="" nom="CompTest">
                            <Senseurs>
                                ...
                            </Senseurs>
                            <Radars>
                                <Radar>Radar doppler</Radar>
                                <Radar>Ecoute</Radar>
                            </Radars>
                        </Composante>
                => Types DEC
                        typedef enum E_RadarType
                        {
                            eRadarType_Radar,
                            eRadarType_Ecoute,
                            eRadarType_EcouteRadar
                        };
                       Suppression types
                            T_PerceptionRadarDoppler
                            T_PerceptionEcouteRadar
                            T_PerceptionEcoute
                => Fonctions DEC
                    V                       A::DEC_Perception_ActiverRadar                        ( I /*E_RadarType*/ );
                    V                       A::DEC_Perception_DesactiverRadar                     ( I /*E_RadarType*/ );    
                    U /*T_PerceptionRadar*/ A::DEC_Perception_ActiverRadarSurLocalisation         ( I /*E_RadarType*/, U /*T_Localisation*/    );
                    V                       A::DEC_Perception_DesactiverRadarSurLocalisation      ( I /*E_RadarType*/, U /*T_PerceptionRadar*/ );    
    - JVT - Nouvelle enum DIA Moteur : E_TypeObus
    - JVT - Ajout de deux nouveaux tags dans les Tag <Armements>/<Armement>/<Indirect> :
                <PorteeMin>200</PorteeMin>
                <PorteeMax>10000</PorteeMax>
            Rq : ces distances sont en mètre
    - JVT - Nouvelles fonction DEC :
            R A::DEC_Tir_PorteeMaxTirIndirect( I /*E_TypeObus*/ );
            R A::DEC_Tir_PorteeMinTirIndirect( I /*E_TypeObus*/ );
    - JVT - Pannes différenciées :
                * Suppression des tags <PannesAleatoires> et <PannesAttritions> du fichier des pannes
                * Ajout des tag de panne sur chacun des types de composantes :
                    <Pannes>
                        <PannesAleatoires>
                        <Panne nom="Panne 1" pourcentage="30"/>
                        <Panne nom="Panne 2" pourcentage="30"/>
                        <Panne nom="Panne 4" pourcentage="30"/>
                        <Panne nom="Panne 5" pourcentage="10"/>
                        </PannesAleatoires>
                
                        <PannesAttritions>
                        <Panne nom="Panne 1" pourcentage="30"/>
                        <Panne nom="Panne 2" pourcentage="30"/>
                        <Panne nom="Panne 3" pourcentage="40"/>
                        </PannesAttritions>
                    </Pannes>
                    RQ : Au moins un panne est obligatoire dans les deux tags pour toutes les composantes
                        Exception : les composantes combattant ne DOIVENT pas avoir ce tag <Pannes>
    - JVT - Bug fix : Logistique Maintenance - Les composantes en panne EA n'ont de nouveau plus besoin de remorqueurs
                    pour aller dans les différents points de la chaine logistique ( vrai pour TTA->TC2 mais aussi TC2->BLD et BLD->BLT )
    - JVT - Les humains entrés dans la chaine logistique uniquement car réact mentaux sont renvoyés sur le terrain après
                soin approprié (un bon coup de pied au cul).
                Rq : Pour l'instant, le retour sur le terrain est instantané...
    - JVT - Nouvelles fonctions DEC :
                * V A::DEC_Perception_DesactiverSenseurs();
                * V A::DEC_Perception_ActiverSenseurs   ();
            Permettent d'activer/désactiver les senseurs "classiques", ne modifie pas toutes les perceptions lancées dans les
            scripts (DEC_Perception_*)
    - NLD - Gestion de la connaissance : possibilite de 'verrouiller' une connaissance
                => active une triche qui met la position de la connaissance à la position de l'unité réelle, même s'il
                    il n'y a pas perception ...
                => à utiliser avec parcimonie, pour l'escorte et l'alat    
    - NLD - Modifs / new fonctions DEC de partage de connaissance
                V A::DEC_Connaissances_PartageConnaissancesAvec        ( A /*T_Automate*/, R /*delai en minutes*/ );
                V A::DEC_Connaissances_PartageConnaissancesDansZoneAvec( A /*T_Automate*/, U /*centre du cercle de la zone*/, R /*rayon du cercle de la zone*/ );    
    - NLD - Nettoyage / refonte gestion du transport/heliportage
                => Simplification utilisation depuis les scripts 
                => Plus flexible
                => Intégration des fonctions de transport 'magique'
                =>                  
                    V                                A::DEC_Transport_AjouterPions            ( S /*T_ListePions*/, B /*Transporte seulement embarquables*/ );
                    V                                A::DEC_Transport_AjouterPion             ( A /*T_Pion*/      , B /*Transporte seulement embarquables*/ );          
                    U /*T_Action*/                   A::DEC_Transport_StartEmbarquer          ( I /*E_EtatActionTransport*/ );
                    U /*T_Action*/                   A::DEC_Transport_StartDebarquer          ( I /*E_EtatActionTransport*/ );              
                    V                                A::DEC_Transport_EmbarquerPionsSansDelais( S /*T_ListePions*/, B /*Transporte seulement embarquables*/ );    
                    V                                A::DEC_Transport_EmbarquerPionSansDelais ( A /*T_Pion*/      , B /*Transporte seulement embarquables*/ );    
                    V                                A::DEC_Transport_DebarquerPionsSansDelais( S /*T_ListePions*/ ); 
                    V                                A::DEC_Transport_DebarquerPionSansDelais ( A /*T_Pion*/ );        
                    B                                A::DEC_Transport_EstTermine              ();   
                    V                                A::DEC_Transport_Annuler                 ();
                => Suppression du type T_Transport
                => Utilisation en mode 'normal' (comme avant)
                        1. DEC_TransportAjouterPion(s)          => remplace DEC_StartTransport/DEC_StartHeliportage + PEUT ETRE APPELE EN COURS DE TRANSPORT
                        2. DEC_Transport_StartEmbarquer         => remplace DEC_StartEmbarquerPourTransport/DEC_StartEmbarquerPourHeliportage
                        3. DEC_Transport_StartDebarquer         => remplace DEC_StartDebarquerPourTransport/DEC_StartDebarquerPourHeliportage
                        4. tant que !DEC_Transport_EstTermine   => remplace la valeur de retour de DEC_StartTransport/DEC_StartHeliportage
                        5. DEC_Transport_Annuler si halt()      => remplace DEC_StopTransport/DEC_StopHeliportage
                => Utilisation en mode 'magique' 
                        1. DEC_Transport_EmbarquerPion(s)SansDelais
                        2. DEC_Transport_DebarquerPion(s)SansDelais
    - NLD - Nouveaux RC envoyés automatiquement par la SIM
                Deces des humains : eRC_DecesBlessePendantTransport,
                                    eRC_DecesBlessePendantHospitalisation,                                
                RC 'pion décontaminé' envoyé par les animateurs d'un site de décontamination                                    
    - NLD - Modifications objets                         
                - Suppression de la zone de sécurité du ROTA
                - Ajout de paramètres pour itinéraire logistique
                        Format ODB : 
                            <PoidsSupporte>9</PoidsSupporte>
                            <Largeur>123</Largeur>
                            <Longueur>1596</Longueur>
                            <Debit>5</Debit>
    - NLD - Bug fix : la fonction d'échantillonage d'itinéraire gère correctement la découpe en '0' (!) parts et la découpe 
                        d'une liste de point contenant moins de 2 points                            
    - NLD - Nouvelle fonction DEC pions/automates                        
                R A::DEC_ConnaissanceAgent_Vitesse( U /*T_ConnaissanceAgent*/ , I /*E_ValiditeRequete&*/ ); 
    - NLD - Log : gestion des priorités tactiques dans la santé et la maintenance
                    => 2 nouveaux ordres de conduite
                    => 2 nouvelles fonctions DEC DEC_Sante_ChangerPrioritesTactiques et DEC_Maintenance_ChangerPrioritesTactiques

Version 0.106.3 [20/04/2005] - Codename 'bDummy'
    - NLD - Le myself.mission_ de l'automate n'était jamais remis à 0
    - NLD - Bug fix : (et gros ménage ...) Les fonctions de calcul de dangerosité et de distance min/max de tir ne tenaient pas compte
            de l'état des dotations quand le tireur est un agent réel (pas une connaissance ...)
    
Version 0.106.2 [18/04/2005] - Codename 'crc'
    - JVT - Diminution des poids des fichiers de sauvegarde ( chaines -> IDs )
    - NLD - Bug fix : erreur dans bornage des valeurs des PHs
    - NLD - Nouvelle option ligne de commande : -nocheckpointcrc, pour forcer le chargement d'un checkpoint si les données ont changé
    - NLD/JVT - Bug fix : erreur dans calcul/comparaison CRC quand la SIM est lancée avec un '-conffile' dans un répertoire différent
                    ou quand certains fichiers de données (terrain par exemple) étaient spécifiés dans scipio.xml avec un chemin
                    absolu
    
Version 0.106.1 [14/04/2005] - Codename 'stack'
    - NLD - Bug fix : l'etat ops des convois valait 0.
    - NLD - myself.automate_ des pions n'était pas mis à jour après des changements d'automates
    - NLD - Le myself.mission_ de l'automate n'était jamais remis à 0
    - JVT - Ajout d'un système de CRC pour vérifier que les données statiques sont compatibles avec les sauvegardes.
            ( Rq : actuellement les scripts ne sont pas pris en compte )
    - NLD - La SIM est maintenant compilée avec la judicieuse option permettant à l'application d'adresser 3GB au lieu de 2GB max
    - NLD - Bug fix - MOS_Light : mise à jour des missions lues dans modeles.xml
    - NLD - Nettoyage DEC_Workspace
    - NLD - Affichage taille du terrain au démarrage de la SIM
    - JVT - Bug fix : ComputePosDeploiementASADoubleRideau ne modifie plus la direction passée en paramétre
    - JVT - Bug fix : ComputePosDeploiementASANasse est maintenant toujours décalée de la distance initiale
    - JVT - Suppression des warnings de boost
    - JVT - Sauvegarde :
            -> sauvegarde correcte des senseurs
            -> ajout de la sauvegarde des chaines logistiques
            -> bug divers et avariés
            -> la sauvegarde ne peut plus crasher la sim en cas de pb ;)
            -> limitation du nombre de sauvegarde autoimatiques par instance de SIM (definit dans scipio.xml)
                    <SauvegardesAutomatiques>
                        <TempsEntreSauvegardes>1000</TempsEntreSauvegardes>
                        <NombreMax>10</NombreMax>
                    </SauvegardesAutomatiques>
            -> bug divers et avariés 
            -> les missions des réfugiés, des prisonniers et des convois sont relancées automatiquement
    - NLD/JVT - Bug fix : les perceptions de type 'ecoute radar' ne sont pas effacées
    - NLD/JVT - Modif de l'option /STACK:15000000 pour que les sauvegardes avec beaucoup de pions ne plantent pas 

Version 0.106 [11/04/2005] - Codename 'pointcheque'
    - JVT - Retour tant attendu des CheckPoints.... Même fonctionnement que la première version
            [Par contre, n'esperez plus les modifier à la main ;)]
    - NLD - Bug fix : etat ops bien initialisé à 0% quand un pion n'a pas de composantes

Version 0.105 [06/04/2005] - Codename 'bermuda'
    - JVT - Bug fix : lorsque les pions n'avaient rien devant être transporté PHY_TransportData::IsPionTransportable
            renvoyait vrai. Maintenant, c'est faux dans ce cas là ...
    - NLD - Bug fix : resynchronisation des valeurs des enums des natures des pions
    - NLD - Mise à jour des valeurs possibles du champ 'nature level'
    - NLD - Bug fix : bug envoi ASN des consignes santé (à la connexion de MOS)
    - NLD - La 'portion' de chemin ajoutée par le pathfind permettant de rejoindre le point d'entrée du fuseau est désormais
                de type 'short'
    - JVT - Bug fix : dans calcul position interception
    - NLD - Les hélicos en vol stationnaire sont maintenant en posture mouvement                
                    
Version 0.104 [05/04/2005] - Codename 'livingdead'
    - NLD - Bug fix : division par 0 dans le tir quand les modificateurs de PHs des lanceurs valent 0
    - NLD - Nouvelle fonction DEC : U /*T_ListePoints*/  DEC_Geometrie_EchantillonnerListePoints( U /*T_ListePions*/, R /*nb parts*/ ); // Effacer résultat
    - NLD - Mise à jour classes IDs (data / MOS_Light / ADN)
    - NLD - Remodification de la précision (bug des ponts flottants sur lesquels on se déplace sans le savoir ...)
    - NLD - Le 'BEH_Defaut()' des pions morts est évalué. Par ailleurs un pion mort ne peut plus recevoir de missions de MOS
    - NLD - Bug fix : Gros bug dans gestions des IDs des objets (assert() + objets/connaissances avec le même ID)
    - NLD - Renommage des objets dans l'enum DIA
    - NLD - Modif ASN : envoi du nombre de path finds en attente de calcul
    - NLD - Bug fix : Envoi des natures Atlas SIM->MOS foireux
        
Version 0.103 [04/04/2005] - Codename 'cock'
    - NLD - Changement de la gestion des 'MOS IDs' (classes IDs) pour les objets
                => dans IDClasses.xml, un ID par type d'objet
    - NLD - Pour Thales (...) les ordres recus par le PC quand l'automate est embraye ne sont plus envoyés à MOS
    - NLD - Inversion des valeurs des enums des objets 'zone interdite au tir' et 'zone interdite au mouvement'
    - NLD - Bug fix : gestion des zones interdites au tir/mouvement
                => les agents peuvent 'collisionner' avec ces objets quand ils sont du même camp
    
Version 0.102.3 [01/04/2005] - Codename 'memory leaker'
    - JVT - Bug fix : DEC_GeometryFunction::ComputeBackestAgent inversait la direction donnée par le script
    - NLD - Memory leaks :
                * Quand automate donne mission pion prenant un itineraire en paramètre (paramètre pas effacé)
                * Destructions de reco point / localisation /radars ...
                * Path find
                * Modifs de quelques scripts 
    - NLD - Affichage de debug du path find virés en release
    - NLD - Ajout de l'affidu nombre de path finds dans la file d'attente
    - NLD - Ajout de la fonction DEC 'DEC_ConnaissanceObjet_BergesAAmenagerSiteFranchissement' pour les automates
    - NLD - Bug fix : le CrashCatcher(tm) faisait crasher (!) la SIM quand le script responsable avait activé des reconnaissances de points/localisations ...
    - NLD - Bug fix : problèmes de précision (MT_Line::ClosestPointOnLine, const MT_Float TER_Localisation::rPrecision_ = 0.1;)
                   
Version 0.102.2 [30/03/2005] - Codename 'block delimiters'
    - NLD - Changement de la largeur des itinéraires log (10m => 1000m)
    - NLD - Il n'y plus d'interactions entre les obstacles d'un camp et les pions du même camp
                => ils restent dans la connaissance
                => le path find va quand même les éviter
                => plus d'effets si collision (modif vitesse / attrition)
    - AGE - Bug fix : dans les vitesses et passabilités
    - NLD - Envoi des évenements exceptionnels suivants lors des tirs directs
                - CR-TirSurCampAmi        
                - CR-TireParCampAmi       
                - CR-TirSurCampNeutre     
                - CR-TireParCampNeutre    
                - CR-TirSurCivil  
                - CR-TireParCivil     

Version 0.102.1 [29/03/2005] - Codename 'forme plate'
    - NLD - La capacité de transport de pion des composantes ne peut plus valoir 0
    - NLD - Les tirs indirects de type 'obus explosif' n'ont plus d'effet sur les pions qui volent.
    - NLD - Modif maintenance : les remorqueurs ont maintenant un poids max transportable. Le 'meilleur' remorqueur (en terme de
                rapport poids max transporable / poids à transporter) dispo est choisi.
             modifs composantes.xml
                    <Maintenance>
                        <Remorqueur>
                            <Capacite>2</Capacite>                      <---------------------
                            <TempsChargementParTonne>15s</TempsChargementParTonne>
                            ...
    - NLD - La fonction DEC_Geometrie_PositionsEgales() tient maintenance compte des pbs de précisions
                (avant les positions devaient être identiques)                            

Version 0.102 [25/03/2005] - Codename 'leak'
    - AGE - Améliorations dans l'enrichissement du pathfinder par un fuseau
    - NLD - Bug fix : memory leak (les itinéraires n'étaient pas détruits)
    - NLD - La SIM ne démarre plus si une composante à <Equipage> == 0
    - NLD - Renommage du 'RadarAntiRadar' en 'EcouteRadar'
              T_PerceptionRadarAntiRadar => T_PerceptionEcouteRadar
                U /*T_PerceptionRadarAntiRadar*/    A::DEC_Perception_ActiverRadarAntiRadar   ( U /*T_Localisation*/ );
                V                                   A::DEC_Perception_DesactiverRadarAntiRadar( U /*T_PerceptionRadarAntiRadar*/ );    
              =>
                U /*T_PerceptionEcouteRadar*/       A::DEC_Perception_ActiverEcouteRadar      ( U /*T_Localisation*/ );
                V                                   A::DEC_Perception_DesactiverEcouteRadar   ( U /*T_PerceptionEcouteRadar*/ );    
    - NLD - Ajout d'un rayon d'action pour les radars suivants :
                Ecoute
                Radar
                RadarDoppler
                EcouteRadar
              => Dans les données concernées, ajout de <RayonAction>
    - NLD - Renforcements et objets : les dotations sont maintenant prélevées en priorité sur les renforts en non plus au hasard :)
    - NLD - Nouvelle fonction DEC pour les pions NBC : DEC_Agent_SeDecontaminer()
    - NLD - La fonction DEC_Perception_Furtivite() est dispo pour tous les pions
    - NLD - Modif dans l'update de la connaissance à la suite d'une collision avec un objet => moins de triangulations inutiles
        
Version 0.101 [25/03/2005] - Codename 'parsheure'
    - NLD - Nouvelle fonction DEC : DEC_Connaissances_AgentsPercus
    - NLD - Correction de quelques memory leaks (dans ASN + triangulation)
    - NLD/AGE - Optims dans le parseur DIA  (=> Nouvelle version de DIA => New ScriptCompiler + rapide)
    - AGE - Bug fix : plantage à la suppression de données dynamiques
     
Version 0.100.2 [23/03/2005] - Codename 'vos papiers svp !'
    - AGE - Script compiler et lecture des archives un peu plus rapide
    - NLD - Nouvelles fonctions DEC de debug : (pions/automates)
                V A::DEC_DebugAffichePoint ( U /*T_Point*/ );
                V A::DEC_DebugAffichePoints( U /*T_ListePoints*/ );   
             => Affiche des points dans MOS_Light 1 (affichage par pion quand pion sélectionné)
    - NLD - Décontamination des zones NBC : 
                A::DEC_DecontaminerZone( U /*T_Localisation*/ ) (dispo pour les pions NBC)
    - NLD - Réactivation de l'enrichissement du path find en milieu de fuseau
    - NLD - Nouvelle fonction DEC automate : S /*T_ListeLocalisations*/ A::DEC_Geometrie_DecoupeFuseauEnTroncons( R /*profondeur des segments en m*/ );                    
    - AGE - Bug fix : le bug 'JCR' du pathfinder est corrigé
    - NLD - Généralisation de la notion "d'animation" d'objets 
                Suppression (spécifique pions NBC)
                        U /*T_Action*/ A::DEC_StartAnimerSiteDeDecontamination( U /*connaissance objet*/ );
                        B              A::DEC_SiteDecontaminationPeutEtreAnime( U /*connaissance objet*/ );
                Ajout (pour tous les pions)
                        U /*T_Action*/ A::DEC_StartAnimerObjet               ( U /*connaissance objet*/ );
                        B              A::DEC_ConnaissanceObjet_PeutEtreAnime( U /*connaissance objet*/ );
    - NLD - Gestion du 'poste de controle' => toutes les unités se trouvant dedans sont identifiées par les pions qui animents le poste
            (NE PAS OUBLIER DE MODIFIER NombreAnimateursMax du poste de controle)
    - NLD - Modifs DEC 
                - DEC_ConnaissanceObjet_PeutOccuperObjet => DEC_ConnaissanceObjet_PeutEtreOccupe
                - DEC_ModulationVitesse() => DEC_ModulationVitesseMax()
                                          => DEC_ModulationVitesseCourante()
    - NLD - Nouvelle fonction DEC : DEC_Geometrie_AireLocalisation                                          
               
Version 0.100.1 [22/03/2005] - Codename 'time machine'
    - NLD - Les types T_Mission_Automate et T_Mission_Pion possèdent maintenant un membre missionType_ correspondant
            à la valeur des enums E_TypeMissionAutomate et E_TypeMissionPion
    - NLD - Nouveaux objets :
                "zone implantation mortier"
                "zone interdite tir"
                "zone interdite mouvement"
    - NLD - MAJ missions
    - NLD - Bug fix : freeze quand changement d'heure du PC 'en avance' (remontée dans le temps)
    - NLD - Bug fix : Les références aux armées dans l'ODB n'étaient pas case insensitive
    - NLD - Bug fix : La perception des objets est bien désactivée quand le modificateur de distance vaut 0 (avant l'objet était vu
                quand le pion se trouvait SUR l'objet)
             
Version 0.100 [21/03/2005] - Codename 'youhou'
    - NLD - Bug fix : exception DIA quand copie de paramètre de mission de type T_ListePions et/ou T_ListeAutomates
    - AGE - MOS_Light2 est de retour ! Avec des couleurs encore plus belles !
    - AGE - Bug fix : tools::thread::Sleep etait foireux, la SIM prenait 100% du cpu
    - NLD - Gestion de la LOG de l'ALAT : 
                - Données : pour chaque type de munition, il faut spécifier un 'type' parmi l'énum suivantes (dans dotations.xml)
                    "Obus"         
                    "MissileAirAir"
                    "Missile"      
                    "Mitraille"    
                    
                   exemple : 
                        <Categorie nom="Obus fumigene">
                        <MosID>1509</MosID>
                        <Type>Obus</Type>           <=================
                            ...
                - DEC :                             
                        V A::DEC_ChangeValeurDotations  ( I /*E_TypeDotation*/, R /* ratio (0..1) par rappor    t aux capacités du pion*/, * /*I E_DotationMunitionClasse*/ );
                - Notes : les dotations sont ajoutées ou enlevée au TC2 de l'automate du pion demandeur. Si il n'y a pas de TC2 
                          ou si la chaine rav n'est pas activée ou si le TC2 n'a pas de stocks => Rien ne se passe pour la dotation concernée
    - AGE - Bug fix : plus de points spéciaux (carrefours) apparaissant n'importe ou
    - AGE - Bug fix : l'alat devrait voler en ligne droite...                       
    - NLD - Nouveau type Atlas : ASA (ASN + données + scripts)
    - NLD - Modifs fonctions DEC :
                Renommage
                    DEC_ALAT_PionDevant                    => DEC_Geometrie_PionDevant
                    DEC_ALAT_PionDerriere                  => DEC_Geometrie_PionDerrier
                    DEC_ASA_PionDevant                     => DEC_Geometrie_PionDevant
                    DEC_Pion_NiveauInstallation            => DEC_Agent_NiveauInstallation
                    DEC_ALAT_TempsVolRestant               => DEC_Agent_AutonomieEnDeplacement
                    DEC_ALAT_TempsVolPourParcourirDistance => DEC_Agent_TempsPourParcourirDistanceEnLigneDroite
                    DEC_PionEstHeliportable                => DEC_Agent_PeutTransporterPion    
                New automates
                    DEC_Connaissances_Objets
                    DEC_Automate_PionAutonomieEnDeplacement
                    DEC_Automate_PionPeutTransporterPion
                    DEC_Automate_PionTempsPourParcourirDistanceEnLigneDroite
                New Pions
                    DEC_ConnaissanceAgent_DangerositePour
                Workspace
                    DEC_Geometrie_RotateDirection
                    DEC_Geometrie_PionEstCoordonne
                    DEC_Geometrie_CopieEtInverseDirection
                    DEC_Geometrie_CopieEtRotateDirection
                        
    - NLD - Nouveaux comptes-rendus : CR-TransportUnitePasPrete ::= Agent                    
    - NLD - CrashCatcher(TM) technology(c) is back (r)
    - NLD - MAJ missions ALAT / RENS
        
Version 0.99.1 [16/03/2005] - Codename 'certif'
    - NLD - Bug fix : la fonction 'ProchainObjetSurItineraire' (et ses copines) renvoyait qqchose quand le pion n'avait plus aucune 
                action de déplacement active.
    - NLD - Mise à jour missions ALAT + RENS
    - NLD - Ajout Rcs popuuuuuuuuuu
    - AGE - HLA v1.3v6 à la place v1.3v5
    - AGE - Modifs dans pathfinder (génération graph) => pleins de petits bugs corrigés => NOUVEAU TERRAIN A REPRENDRE   

Version 0.99 [16/03/2005] - Codename 'regis'
    - NLD - Bug fix : le check de consitution des automates ne fonctionnait pas (tenait compte du PC ...)
    - NLD - Nouvelle fonction DEC pions et automtes : DEC_ConnaissanceObjet_EstPrepare()
    - NLD - La fonction DEC_Connaissances_Objets() retourne maintenant aussi les objets préparés
    - NLD - Le mode 'profiling' est activable/désactivable depuis MOS_Light (cependant, le profiling des 
            fonctions DEC n'est possible que si la SIM est lancée avec l'option '-profiling')
    - NLD - Les réfugiés et les milices ne sont plus dans la listes des agents potentiellement dangereux
    - NLD - Mise à jour missions GEN / LOG
    - NLD - Objets :
                * Renommage de 'zone logistique' en 'aire logistique'
                * Nouvel objet : 'terrain largage'
    - NLD - Bug fix : ramage au démarrage de la SIM quand les IDs de types était grands (suppression MT_IdentifierManager)
    - NLD - Bug fix : crash dans la fonction DEC_ALAT_TempsVolPourParcourirDistance() quand la vitesse max d'un agent vaut 0   
    - NLD - Bug fix : MOS_Light : bug affichage quand vitesse > 255
    - NLD - Bug fix : Plus de flood des comptes-rendus de la LOG (demandes log)
    - NLD/PBT - Bug fix : Mauvais type de retour de la fonction DEC_ConnaissanceObjet_BergesAAmenagerSiteFranchissement

Version 0.98.1 [14/03/2005] - Codename 'integrafion'
    - NLD - Mise à jour missions (INF/MILICE/JOINT AIR/JOINT MARINE)

Version 0.98 [11/03/2005] - Codename 'bombinette'
    - AGE - Le fichier Terrain.xml ne permet plus de configurer que le nom des répertoires
    - AGE - MOS_Light Bug fix : les tailles des objets, des marqueurs RC, de la distance sont maintenant plus humaines
    - AGE - Bug fix : acces concurrent potentiel dans le code réseau avec le launcher
    - AGE - Refactor partiel du DEC_Path
    - NLD - Remontée des ordres automates données automatiquement par la SIM (ajout message ASN)
    
Version 0.97 [11/03/2005] - Codename 'hervait'
    - NLD - Bug fix : les humains partent dans la maintenance
                Modif données:
                    Le pourcentage d'humains touchés quand une composante passe en EVA ou NEVA se trouve dans les protections
                    (avant, données globales dans sante.xml)
                    Ajout d'un type pour qualifier les protections : materiel / humain                    
                        <Protection nom="Aeronef" type="materiel">
                            <Neutralisation tempsMoyen="15m" variance="3m"/>
                            <ProbabilitePanneAleatoire EVA="1" NEVA="2"/> <!-- Pourcentage par jour -->        
                            <BlessureHumainsDansMateriel>
                                <MaterielReparableAvecEvacuation>75</MaterielReparableAvecEvacuation> <!-- Pourcentage d'humains blessés -->
                                <MaterielReparableSansEvacuation>50</MaterielReparableSansEvacuation>
                            </BlessureHumainsDansMateriel>                           
                        </Protection>
                => Les composantes humains ne seront jamais dans l'état EVA et NEVA, mais les dégats                         
                    
Version 0.96 [11/03/2005] - Codename 'fugee'
    - NLD - Nouvelles requêtes DEC sur les connaissances
                S /*T_ListeConnaissancesAgent*/  A::DEC_Connaissances_Milices     ();
                S /*T_ListeConnaissancesAgent*/  A::DEC_Connaissances_Refugies    ();
                S /*T_ListeConnaissancesAgent*/  A::DEC_Connaissances_AgentsRendus();        
                                                    DEC_Connaissances_ObjetLePlusProche( * ) 
    - NLD - Nouvelle fonction DEC :
                B A::DEC_Agent_EstPC();                
    - NLD - Ajout attributs spécifique 'tc2' pour les camps de réfugiés
    - NLD - Refugiés / Milices : 
                - Remplacement des types 'Pion CIVIL' et 'Automate CIVIL' par 'Pion/Automate REFUGIE' et 'Pion/Automate MILICE'
                - Fonctions DEC : 
                        Pions
                            DEC_Agent_EstRefugie
                            DEC_Agent_EstMilice                            
                            DEC_OrienterRefugies                            
                        Automates
                            DEC_PositionCampRefugies                        
                            DEC_Automate_ChangeEtatPriseEnCompteRefugies                            
                        Pions/automates
                            DEC_ConnaissanceAgent_EstMilice
                            DEC_ConnaissanceAgent_EstRefugie
                            DEC_ConnaissanteAgent_EstRefugiePrisEnCompte                        
                - Modif 'missions.xml' pour ajouter la mission 'se rendre vers camp de réfugiés pour les réfugiés'                            
    - NLD - RCs automatiques
                - MaterielRetourDeMaintenance
                - ObservationTirIndirect
                - DemandeRavitaillement
                - DemandeEvacuationSanitaire
                - DemandeEvacuationMateriel
                - DecesBlesse
                - AllocationConsentieBientotEpuisee
	- PBT - Nouvelle fonction DEC_ConnaissanceObjet_BergesAAmenagerSiteFranchissement

Version 0.95 [10/03/2005] - Codename 'rerb'
    - NLD - Ajout check de l'unicité des 'MOS IDs' par la SIM
    - NLD - Mise à jour des comptes-rendus (Ajout notamment des comptes rendus 'Trace' et 'TraceID' pour l'adptation)
    - NLD - Mise à jour missions INT/ALAT/LOG/GEN
    - NLD - Synchronisation de la gestion des IDs avec Thales : le format (classe/instance) des IDs a changé
                => des IDs plus long, plus imbitables, plus débiles ...
                => pour les IDs de pion/automate dans l'ODB, je vous conseille de les faire commencer à 5 000 000
        
Version 0.94 [08/03/2005] - Codename 'msh'
    - NLD - Bug fix : pb de precision dans la fonctionnalité permettant de rejoindre son itineraire principal automatiquement
                => boucle infini = pion ne bougeant pas
    - NLD - Mise à jour missions INF / LOG / ALAT
    - NLD - Changement du format des données de type 'duree' ou 'temps' : il faut maintenant préciser l'unité de temps
                Avant 
                    <Contamines tempsSoin="0.2"/> ?? quelle unité
                Après
                           <Contamines tempsSoin="0.2s"/> 
                        ou <Contamines tempsSoin="0.2m"/>
                        ou <Contamines tempsSoin="0.2h"/>
                Et lave plus blanc !
            Dans la phase de conversion de données, n'oubliez pas les données de temps optionnelles :                
                Tous les temps dans les radars    
                "tempsMaxReparation" dans Composantes.xml
                "esperanceVie" dans Sante.xml
                "TempsDeRemontee" du rapport de force, dans Pions.xml et Automates.xml    
                "TempsInterpolation", dans GroupesConnaissances.xml
                Les données des objets dans les composantes ( "TempsInitialConstruction", "TempsInitialDestruction", "TempsValorisation", "TempsDevalorisation", "TempsConstructionCoef", "TempsDestructionCoef" )
            (Changement de format oublié = donnée non lue, mais pas d'erreur, car donnée optionnelle ...)

Version 0.93 [08/03/2005] - Codename 'volet'
    - NLD - Bug fix : crash dans la maintenance
    - AGE - HLA_Manager ! 2 boutons, une tonne de fonctionnalités
    - AGE - Changement de l'initialisation d'HLA. Le fichier HLA.xml est obligatoire et contient un champ UseHLA
    - AGE - Nettoyage rapide de triangle.cpp
    - AGE - L'enrichissement du pathfinder se fait maintenant sur les limites
    - JVT - Bug fix : Fonction d'interpolation renvoyait un résultat faux quand on demandant le Y min pour un X dépassé par la première valeur...
    - AGE - Bug fix : Le pathfinder ramait lorsque on enrichissait plusieurs fois la même ligne. Il rame moins.
    - AGE - Suppression des set< TER_DynaObject_ABC* >
    - JVT - Bug fix : Resynchronisation des enums de transport entre PHY_TransportData et DEC...    
    - NLD - Suppression du type de pion 'Pion RENS Drone'
    - NLD - Nouveau type de pion/automate 'Pion CIRCULATION' et 'Automate CIRCULATION'
    - NLD - Modifs des données : nouveau tag optionnel : NE PAS OUBLIER POUR LES DRONES ET PIONS ALAT
                <PeutVoler/>
    - NLD - Fonctions DEC ALAT/Drones:
                Suppression     
                        DEC_ALAT_EstEnVol    
                        DEC_ALAT_HauteurDeVol
                        DEC_Drone_EstEnVol    
                        DEC_Drone_HauteurDeVol
                Ajout
                        DEC_Agent_EstEnVol
                        DEC_Agent_HauteurDeVol                        
                Deplacement (PionsALAT.hal => Pions.hal)
                        DEC_StartHeliportage   
                        DEC_StopHeliportage    
                        DEC_PionEstHeliportable
                        DEC_StartEmbarquerPourHeliportage
                        DEC_StartDebarquerPourHeliportage
    - NLD - Renommage de 'composantes' en 'equipements' dans odb pour la surcharge
    - NLD - Bug fix : Inversion dans envoi des 'chefs de convois' et des 'transporteurs' pour la chaine RAV
    - NLD - Gestion des prisonnniers : 
                * Nouvelles fonctions DEC 
                    Automates
                        "DEC_Automate_SEstRendu"
                        "DEC_Automate_EstPrisonnier"
                        "DEC_ConnaissanceAgent_SEstRendu"
                        "DEC_ConnaissanceAgent_EstPrisonnier"    
                        "DEC_PositionCampPrisonnier"
                    Pions    
                        "DEC_ConnaissanceAgent_SEstRendu"
                        "DEC_ConnaissanceAgent_EstPrisonnier"    
                        "DEC_Agent_SEstRendu"
                        "DEC_Agent_EstPrisonnier"
                        "DEC_FairePrisonnier"               <====
                * Nouveaux attributs remontés à MOS (unités réelles + connaissances)     
                        - prisonnier 
                        - rendu
                * Nouvel état des composantes : 'prisonniers'
                * Camps de prisonniers, associés à un TC2
                * Action magique : 'Se Rendre'
                * Nouveau fichier : mission.xml, référencant la mission appelée quand un automate s'est rendu
                  Il n'est pas nécessaire d'ajouter cette mission dans modeles.xml. Par contre, elle doit être obligatoirement
                  implémentée
    - NLD - la SIM checke maintenant à l'init que tous les comportements associés aux missions des modèles sont présents
    - NLD - ASN : 
                Suppression du paramètre 'gdh' dans les 'stubs' communs des ordres pions et automates
                Renommage 'pertinance' en 'pertinence'
    - NLD - Modifs des données du mode 'profiling'

Version 0.92.2 [03/03/2005] - Codename 'tatayer'
    - AGE - Thread réseau modifié
    - AGE - MT_DiscreteEllipse supprimée
    - AGE - Refactor TerrainData / PHY_Speeds
    - AGE - Ajout d'un fichier Pathfind.xml qui permet de configurer le nombre de thread et la politique de répartition des requetes
    - NLD - MOS_Light - Bug fix : erreur dans lecture nouvelles missions logs dans modeles.xml
    - NLD - Nouvelles missions LOG
    - NLD - Les fonctions DEC de gestions des transports sont maintenant disponibles pour tous les pions et plus uniquement pour les pions RENS
    - NLD - Nouvelle fonction DEC : DEC_DemandeDeRavitaillement()
    - NLD - Les stocks sont maintenant disponibles pour la chaine RAV si la chaine est activée au niveau du pion stock OU si le pion est mort (stocks à terre ...)

Version 0.92.1 [01/03/2005] - Codename 'pot'
    - NLD/AGE - Bug fix : crash en release lors de l'init des données (La vitesse dans les 'carrefours' est inutile dans les composantes)    
    - NLD - La SIM est maintenant livrée en 'Release Debug' => Ca va vite, et on peut un peu déboguer (un peu ...)

Version 0.92 [01/03/2005] - Codename 'nioutair1'
    - NLD - L'option en ligne de commande '-networkthread' a été remplacée par le champ "ThreadReseauActif" dans Data/Reseau.xml
                avec comme valeur 'true' ou 'false'
    - NLD - Nouveau type de dotations : 'rations', pour la bouffe et la flotte
    - NLD - MOS_Light - Bug fix : impossiblité de changer le supérieur LOG de la chaine RAV
    - NLD - Bug fix : assert() dans la log inutile
                (assert() sur la 'localisation' des humains quand une composante qui a fait une demande de maintenance et qui attend le
                 remorqueur meurt => tant qu'elle n'est pas prise en compte par le remorqueur, la composante reste vulnérable et ne passe
                 pas en 'maintenance' => les humains restent sur le 'battlefield')
    - NLD - Bug fix : crash dans la log - gestion du cancel() de consignes imparfaite
                (crash lors de l'insertion d'une nouvelle consigne, alors qu'une ancienne est en état 'finished' car annulée durant le pas
                 de temps => suppression des consignes de la liste dès qu'elles sont cancelées)
    - NLD - Début gestion des prisonniers 
    - NLD - Ajout du Reset des motivations après un magic move
    - NLD - Nettoyage / refactor partiel du path find    
    - NLD - Mise à jour missions LOG / ASA
    - NLD - Paramètre pour objet 'camp de prisonnier' : TC2 (pas géré par MOS_Light pour l'instant)
                <Objet id="10" type="camp prisonniers">
                <Armee>bleu</Armee>
                    <Forme>
                        <Localisation type="cercle">
                            <Points>
                                <Point>30TYT1239137998</Point>
                                <Point>30TYT1243038819</Point>
                            </Points>
                        </Localisation>
                    </Forme>
                    <TC2>530000</TC2>       <!----------------------------------
                </Objet>    
    - AGE - Nouveau Terrain !
            * Plus fort, plus rapide, plus puissant que les autres pathfinds
            * Changements des fichiers terrain
            * Types de terrain : inconnu,foret, plantation, marais, dune, urbain, etendue eau, glace, lisiere, banlieue, cote, bord de plantation, 
                                 bord de marais, bord de dune, bord de glace, chemin, autoroute, nationale, departementale, ruisseau, riviere, 
                                 riviere importante, pont, falaise, voie ferree, carrefour.
            * Un warning est donne au lancement de la sim quand des vitesses ne sont pas définies. Il sera supprimé par la suite. 
              Les vitesses sur bords de X sont mises par défaut à X.
            * MOS_Light fonctionne avec le nouveau terrain. Avec MOS_Light2, Il faut utiliser l'ancien.
    
Version 0.91.2 [23/02/2005] - Codename 'fredastair'
    - NLD - Bug fix : Les positions renvoyées par DEC_Geometrie_PositionAleatoireDansCercle et DEC_Geometrie_PositionAleatoireSurCercle
            sont maintenance clippées dans le monde
    - NLD - Quand erreur 'no more memory', affichage de la taille demandée
    - NLD - Bug fix : erreur de check sur les paramètres par défaut de DEC_StartHeliportage() / DEC_StartTransport()
    - NLD - ASN - Envoi de l'attribut 'radar actif' à MOS
    - NLD - Bug fix : Les objets créés par la fonction DEC_CreerObjetSansDelais() n'étaient pas ajoutés dans la connaissance
    - NLD - Gestion du radar anti-radar => comme le radar classique, mais ne percoit que les pions qui utilisent un radar
            -  Data <RadarAntiRadar>
                        <!-- En minutes -->
                        <TempsDetection>0.1</TempsDetection>
                        <TempsReconnaissance>0.6</TempsReconnaissance>
                        <!--TempsIdentification  : Les tags sont optionnels -->
                    </RadarAntiRadar>
            - DEC
                DEC_Perception_ActiverRadarAntiRadar
                DEC_Perception_DesactiverRadarAntiRadar

Version 0.91.1 [23/02/2005] - Codename 'cassepipe'
    - NLD - Bug fix : erreur dans le SetValue() de ComputeFrontestAgent() et ComputeBackestAgent() ( DEC_ALAT_PionDevant ...)
    - NLD - Bug fix : Mauvaise init des données liées au brouillage (communications.xml)
    - NLD - Nouvelle fonction DEC : U /*T_Localisation*/ DEC_Geometrie_CreerLocalisationCercle      ( U /*T_Point centre*/, R /*rayon*/ );

Version 0.91 [22/02/2005] - Codename 'mia ne rentrera pas chez lui ce soir'
    - NLD - Bug fix : Oubli d'un update dans la partie automate
                => le RC 'mission terminée' n'arrêtait pas les missions automates
    - NLD - Bug fix : La fonction 'PositionAleatoireSurCercle' ne convertissait pas la distance donnée en distance 'SIM'
    - NLD - La fonction DEC_Geometrie_CalculerPositionAleatoire est renommée en DEC_Geometrie_PositionAleatoireDansCercle
            et est maintenance dans workspace
    - NLD - Bug fix : Erreur d'init des radars ASA            
    - NLD - Mise à jour des missions RENS (alors mia, on est à la bourre ??)

Version 0.90.3 [21/02/2005] - Codename 'cobra'
    - NLD - Ajout de la detection des tirs indirects pour le cobra
                => Nouveau type T_PerceptionTirIndirect
                =>  U /*T_PerceptionTirIndirect*/       A::DEC_Perception_ActiverPerceptionTirsIndirect       ( U /*T_Localisation*/ );
                    V                                   A::DEC_Perception_DesactiverPerceptionTirsIndirect    ( U /*T_PerceptionTirIndirect*/ );    
                => Le RC est envoyé automatiquement par la SIM                    

Version 0.90.2 [21/02/2005] - Codename 'shit'
    - NLD - Bug fix : mauvaise generation des missions
    - NLD - Renommage de 'abatti' en 'abattis'
    
Version 0.90.1 [18/02/2005] - Codename 'hawkeyes'
    - NLD - Nouveaux radar pour l'ASA
                - DEC : V  A::DEC_Perception_ActiverRadarASA   ( I /*E_PerceptionRadarASAType*/ );
                        V  A::DEC_Perception_DesactiverRadarASA( I /*E_PerceptionRadarASAType*/ );            
                - Data, dans capteurs.xml
                    <RadarsASA>
                        <RadarHAWK>
                            <RayonAction>15000</RayonAction>
                            <HauteurMinimale>20</HauteurMinimale>
                            <HauteurMaximale>150</HauteurMaximale>
                            <ActivitePionsDetectables>
                                <Deplacement/>
                                <EnTravaux/>
                            </ActivitePionsDetectables>    
                        </RadarHAWK>
                        <RadarMISTRAL>
                            <RayonAction>5000</RayonAction>
                            <HauteurMinimale>20</HauteurMinimale>
                            <HauteurMaximale>150</HauteurMaximale>
                            <ActivitePionsDetectables>
                                <Deplacement/>
                                <EnTravaux/>
                            </ActivitePionsDetectables>            
                        </RadarMISTRAL>
                        <RadarROLAND>
                            <RayonAction>6000</RayonAction>
                            <HauteurMinimale>20</HauteurMinimale>
                            <HauteurMaximale>150</HauteurMaximale>
                            <ActivitePionsDetectables>
                                <Deplacement/>
                                <EnTravaux/>
                            </ActivitePionsDetectables>            
                        </RadarROLAND>                
                    </RadarsASA>                

Version 0.90 [18/02/2005] - Codename 'drone is not alat'
    - NLD - Nouveau type de pion 'Pion RENS Drone' qui peut voler comme l'ALAT :)
    - JVT - Nouvelles fonctions pion :
            U /*T_Point*/      A::DEC_Agent_PositionInterception ( U /*T_ConnaissanceAgent*/ ); // Attention, le résultat peut être nul
            U /*T_Point*/      A::DEC_Geometrie_PositionInterception ( U /*T_ConnaissanceAgent*/, U /*T_Point position ini missile*/, R /*vitesse missile*/ ) // Attention, le résultat peut être nul
            S /*T_ListePions*/ A::DEC_Pion_PionsDeAutomateSansPC( A /*T_Automate*/ );
    - NLD - Modifs missions ASA / ASS
    - NLD - Nouveaux objets             
                itineraire-logistique       (29),
                camp-prisonniers            (30),
                camp-refugies               (31),
                poste-controle              (32)
    - NLD - Nouvelles fonctionnalités dans le paramètrage de l'impact des objets sur la vitesse des pions
                - Nouveau tag obligatoire dans objets.xml
                    <ModeImpactSurVitessePion type="AuPlusLent"/>                                       => vitesse = plus lente entre vitesse max / vitesse environnement / vitesse dans objet
                    <ModeImpactSurVitessePion type="VitesseMaxObjet"/>                                  => vitesse = vitesse définie par l'objet bornée par vitesse max de l'agent
                    <ModeImpactSurVitessePion type="VitesseMaxAgent" pourcentageVitesseMaxAgent="10"/>  => vitesse = vitesse max de l'agent * pourcentage
                - Nouveau tag obligatoire pour les composantes, spécifiant leur vitesse maximum                    
                    <Vitesses maximum="90">
                        <Terrain type="urbain">20</Terrain>
                        ...
    - NLD - Gestion des itinéraires logistiques
                V A::DEC_ConnaissanceObjet_ItineraireLogEstEquipe( U /*T_ConnaissanceObjet*/, I /*E_ValiditeRequete&*/ );
                V A::DEC_Circulation_EquiperItineraireLogistique ( U /*T_ConnaissanceObjet*/, I /*E_ValiditeRequete&*/ );   -> sur pions LOG                    
             Pas de collisions entre l'itineraire logistique et les agents quand l'itineraire n'est pas équipé
                => La vitesse des agents n'est pas impactée par l'iti log
              
Version 0.89.1 [16/02/2005] - Codename 'rideau'
    - NLD - Bug fix : Erreur dans l'ordre d'envoi des données à l'init
    - NLD - Bug fix : Erreur de mapping dans les enums Atlas
    - NLD - Renommage du champ <TypeUnite type="Pion Convoi"/> en <TypeUnite nom="Pion Convoi"/> dans Ravitaillement.xml
    - NLD - MOS_Light - Bug fix : erreur lecture des missions ASA
    - JVT - Suppression de fonctions DEC ASA :
                DEC_Geometrie_PosDeploiementASAUniSimpleRideau 
                DEC_Geometrie_PosDeploiementMistralOmniPointVulnerable
                DEC_Geometrie_PosDeploiementMistralOmniPointItineraire
                DEC_Geometrie_PosDeploiementMistralUniRideau
                DEC_Geometrie_PosDeploiementMistralUniNasse
    - JVT - Nouvelles fonctions DEC ASA
                A A::DEC_ASA_PionDevant  ( S /*T_ListePions*/, U /*T_Direction*/ );
                U /*T_ListePoints*/ DEC_Geometrie_PosDeploiementASAOmni     ( R /*nbPositions*/, U /*T_Point*/ /*position centrale*/  , R /*distance au centre*/ );
                U /*T_ListePoints*/ DEC_Geometrie_PosDeploiementMistralNasse( R /*nbPositions*/, U /*T_Point*/ /*position a défendre*/, R /*angle*/, R /*distance de la position a défendre*/, R /*distance entre sections*/, U /*T_Direction*/ );
                U /*T_ListePoints*/ DEC_Geometrie_PosDeploiementDoubleRideau( R /*nbPositions*/, U /*T_Point*/ /*position a défendre*/, R /*distence entre sections*/, U /*T_Direction*/ );
    - JVT - Nouvelle fonction DEC Globale
                U /*T_Point*/       DEC_Geometrie_PositionAleatoireSurCercle   ( U /*T_Point centre*/, R /*rayon*/ );  
    - NLD - Dans les contenances en dotations des composantes et du TC1, il faut ajouter un attribut
                "consommationNormalisee", qui sert à Thales pour remplir les stocks initiaux des TC2/BLD/BLT. 
            La SIM se fout de cet attribut.
                    <Categorie nom="gasoil" contenance="100" seuilLogistique="10" consommationNormalisee="10"/>

Version 0.89 [15/02/2005] - Codename 'joint'
    - NLD - Nouveaux types de pions et automates : 
                "Automate CIVIL"      => Pour les refugiés, milices ...
                "Pion CIVIL"
                "Automate JOINT"      => Pour les chalands de débarquement, les raids aériens
                "Pion JOINT"    
    - NLD - Mise à jour missions ALAT
    - NLD/JVT - Bug fix : modif dans gestion seuils logistiques
    - NLD/JVT - Bug fix : assert() dans maintenance
    - NLD/JVT - Bug fix : erreur dans changement de TC2
    - JVT - Bug fix : la fonction "DEC_Pion_NiveauInstallation" fonctionne maintenant même pur la dernière posture
    - JVT - Nouvelle fonction DEC ALAT :
                B A::DEC_ALAT_EstEnVol();
    - JVT - Nouvelle fonction DEC globale :
                U /*T_Point*/ DEC_Geometrie_CalculerPositionCouverture( S /*T_ListePions*/, U /*T_Direction*/, R /*distance*/ );
    - JVT - Les pions convoi inutilisés ( vide, mort, en attente de recyclage ) sont attachés à la position du PC de leur automate
    - NLD - Modif gestion de l'initialisation SIM -> MOS
                * Les 'armées' sont envoyées dans un message DIN, MOS_Light ne les extrait plus de l'ODB
                * Les liens diplomatiques entre les armées sont également envoyés à la connexion avec un message ASN (MsgChangeDiplomacy)
                * Les pions et automates sont envoyés par un message ASN, et plus par un message DIN (MsgPionCreation / MsgAutomateCreation)
                        => MOS_Light lit directement les types de pions/automates des données
            Nouveaux champs dans pions.xml et automates.xml 
                    <Pions> ou <Automates>
                    <Unite nom ....>
                        <MosID>6565</MosID> <======== Ils doivent être uniques                        
                        ...
                        

Version 0.88 [11/02/2005] - Codename 'konvoa'
    - NLD - Modif mission génie
    - NLD - Bug fix : Les objets créés à 0% étaient ajoutés dans la connaissance
    - NLD - Bug fix : Mauvaise init des temps de construction/destruction des objets quand la valeur vaut '-1'
    - NLD - Renommage de certains objets, dans les données
                "site de franchissement"      =>  "site franchissement"                                   
                "plot ravitaillement"         =>  "plot ravitaillement"       
                "zone de brouillage brod"     =>  "zone brouillage brod"      
                "zone de brouillage bromure"  =>  "zone brouillage bromure"   
                "plate-forme"                 =>  "plateforme"				        
    - NLD/JVT - Ravitaillement
                    - Les stocks sont désormais disponibles en libre-service, même si la chaine rav n'est pas activée sur 
                    - Gestion des convois qu'on voit :
                        Fonctions DEC
                            B                A::DEC_Ravitaillement_Convoi_RavitaillementEffectue();
                            A /*T_Automate*/ A::DEC_Ravitaillement_Convoi_AutomateARavitailler  ();
                            U /*T_Action*/   A::DEC_Ravitaillement_Convoi_StartRavitailler      ( I /*E_EtatActionRavConvoiRavitailler*/ );
                            V                A::DEC_Ravitaillement_Convoi_FinMission            ();
                            (Cf. \Data Test\Data\Modeles\Sources\For Tests\Tests\Pion LOG mission convoyer pour exemple d'utilisation)
                        Données : modifications format ravitaillement.xml
                            <Ravitaillement>    
                                <Convois>
                                    <TempsConstitution>
                                        <Temps nbCamions="1">1</Temps> <!-- En minutes -->
                                        <Temps nbCamions="30">2</Temps>
                                        <Temps nbCamions="100">50</Temps>
                                        <Temps nbCamions="500">300</Temps>
                                        <Temps nbCamions="5000">900</Temps>    
                                    </TempsConstitution> 
                                    <TypeUnite type="Pion Convoi"/>                     
                                    <Mission nom="Pion LOG Convoyer"/>              <!---- La mission DOIT être implémentée par 'Pion Convoi', et ne DOIT PAS prendre de paramètres
                                </Convois>
                            </Ravitaillement>
                        Mode de fonctionnement:
                            - La mission 'Convoyer' est automatiquement appelée par le moteur quand le convoi est formé ET chargé
                            - Le déchargement et le ravitaillement effectif se font par DEC_Ravitaillement_Convoi_StartRavitailler()
                            - Le convoi est désagrégé/désactivé quand DEC_Ravitaillement_Convoi_FinMission() est appelée
                                si le ravitaillement n'avait pas été effectué, la demande de rav est annulée                                                        
                                
                    
Version 0.87 [09/02/2005] - Codename 'steria'
    - NLD/JVT - Renommage du tag <CoupDeSonde><Longeur> en <Longueur> 
    - NLD - Bug fix : Le UserType renvoyé par la fonction DEC_Geometrie_CalculerPositionsParRapportALima() n'était pas du bon type => asserts()
    - NLD - La fonction 'DEC_Connaissances_Objets' ne retourne plus les objets qui ne sont que préparés
    - NLD - Mise à jour missions génie
    - NLD - Renommage objet 'Zone poser helicopter' en 'Zone poser helicoptere'
    - NLD - Nouvel objet genie : 'Zone Logistique'
    - NLD - Modif mission ABC Automate RecueillirUnite
    - NLD/JVT - Debut code gestion dynamique de création de pions
    
Version 0.86.1 [08/02/2005] - Codename 'thesis'
    - NLD/JVT - Nouveau type de pion : 'Pion LOG Convoi', ne pouvant être créé que par la SIM (donc non autorisé dans l'ODB ...)
    - NLD/JVT - Nouvelle données dans ravitaillement.xml, précisant le type de pion utilisé pour les convois :
                    <Ravitaillement>    
                        ...
                        <UniteTypeConvoi type="Pion Convoi"/>
                    </Ravitaillement>
    - NLD/JVT/AGE - Bug fix : crash dans l'enrichissement du path find lors de la création des fuseaux
    - NLD/JVT - Bug fix : Fusse dans le ravitaillement
    - NLD/JVT - Gestion de l'activation/désactivation de la chaine ravitaillement. Fonctions DEC pour les pions/automates :
                    V A::DEC_Ravitaillement_ActiverChaine   ();
                    V A::DEC_Ravitaillement_DesactiverChaine();

Version 0.86 [07/02/2005] - Codename 'rooooooooh'
	- PBT/NLD/AGN - Nouvelles fonctions pour créer et détruire des objets dérivants du type Thing
								DEC_CreerDIAThing( /* Type */ )
								DEC_DetruireDIAThing( /* Objet à détruire */ )
    - PBT - Nouveaux objets : Aire de poser, Piste, Plate-Forme, Zone à mobilité améliorée, Zone de poser hélicopter
    - NLD - Bug fix : Mauvaise init du temps de réference pour DEC_TempsReel()
    - AGE - Refactors dans TER / MIL pour faciliter l'interface avec le nouveau TER
    - JVT - Nouvelle fonction DEC sur Pion INF :
            B A::DEC_Agent_TransporteursPret();
    - JVT - Bug fix : le temps de retour des transporteur après débarquement prend correctement en compte les composantes non utilisables.
    - JVT - Nouvelle enum DEC :
                E_EtatNiveauInstallation (correspond aux postures du moteur)
    - JVT - Nouvelle fonction DEC globale :
                I /*E_EtatNiveauInstallation*/ A::DEC_Pion_NiveauInstallation();
                (renvoie la posture précédente de la posture en cours de mise en place)
    - JVT - Modification de la fonctionnalité d'héliportage. Lors d'un héliportage de pion complet, le poids de chaque composante à
            transporté est vérifié par rapport à la capacité max de transport de chaque hélicoptère. Les composantes ne sont donc
            plus 'découpées' par morceaux lors du transport. (impact les fonctions DEC_StartHeliportage et DEC_PionEstHeliportable)
    - JVT - Ajout de fonctionnalité sur les tags Pion dans les composition d'automates. Ces tag acceptent les formats suivants :
                *    -> un nombre indéfini de fois ce pion ( 0 inclu )
                +    -> un nombre indéfini de fois ce pion ( 0 exclu )
                n..m -> entre n et m fois ce pion
                n    -> même fonctionnalité qu'auparavent
    - JVT - Suppression des infos de debug de tir dans la console
    - JVT - Composantes.xml : Ajout d'un attribut optionnel dans les déclarations des NTI : "tempsMaxReparation" ( exprimé en heure )
            Modification de la log maintenance pour prendre en compte les composantes NTI réparant du NTIx mais avec un temps de 
            réparation limité. Rq si le tag n'est pas mis, il n'y a pas de limitation de temps ;)
    - JVT - Le temps de déplacement (retour) des VABs dans les sacs à dos des fantassins après héliportage est maintenant la même
            approximation que les temps de déplacement des camions et ambulances de la log ( ... comprenne qui pourra ... )
    - NLD/JVT - Gestion du ravitaillement               
                    * Notes:
                        - A la différence des autres chaines log, c'est l'automate qui gére entièrement la chaine RAV
                        - Gestion du TC2 courant / TC2 nominal
                    * ASN / MOS
                        - Remontée de l'etat des chaines, de l'état des quotas et des stocks pour les pions/automates log rav 
                        - Remontée des consignes et de leur état (affichées dans les automates logs et pions/automates melées concernés)
                        - Possibilité de modifier les quotas attribués à une unité
                        - Possibilité de déclencher un 'flux poussé' entre automates logistiques                      
                    * Données physiques
                        - Nouveau fichier 'ravitaillement.xml' pour paramètrer les temps de constitution des convois
                        - Nouveaux tags optionnels dans les composantes pour préciser les capacités logs santé
                            <FonctionsLogistiques>
                               <Ravitaillement>
                                    <Transporteur>                                                              <!-- Camion
                                        <Capacite>100</Capacite> <!-- En 'U' -->
                                        <TempsChargementMoyen>15</TempsChargementMoyen> <!-- En minutes -->
                                        <TempsDechargementMoyen>10</TempsDechargementMoyen>
                                    </Transporteur>
                                    <ChefDeConvoi/>
                                </Ravitaillement>
                            </FonctionsLogistiques>
                        - Nouveaux tags optionnels dans les pions pour préciser les capacités de stockage (Même format que les contenances TC1)
                            <Stocks>
                                <Dotation nom="carburant">
                                    <Categories>    
                                        <Categorie nom="gasoil" contenance="60000" seuilLogistique="90"/> <!-- Seuil = pourcentage -->
                                    </Categories>        
                                </Dotation>
                                
                                <Dotation nom="munition">
                                    <Categories>    
                                        <Categorie nom="Balle Classique 12,7" contenance="800" seuilLogistique="20"/>
                                        <Categorie nom="Obus fumigene"  contenance="100" seuilLogistique="20"/>
                                        <Categorie nom="Obus eclairant" contenance="100" seuilLogistique="20"/>
                                        <Categorie nom="Obus 120 mm" contenance="2" seuilLogistique="20"/>
                                        <Categorie nom="Obus mine" contenance="50" seuilLogistique="20"/>
                                        <Categorie nom="Fusse a ailettes 50mm" contenance="5" seuilLogistique="0"/>
                                        <Categorie nom="Fusse a jupette 53mm" contenance="4" seuilLogistique="0"/>
                                    </Categories>        
                                </Dotation>
                            </Stocks>
                        - Dans ODB.xml : possibilité de surcharger les stocks (uniquement les valeurs, pas les seuils logistiques)
                            <Automate id="524288" type="TC2">
                                <Stocks>              
                                    <Dotation nom="munition">
                                        <Categories>    
                                            <Categorie nom="Balle Classique 12,7">1</Categorie>
                                        </Categories>        
                                    </Dotation>
                                </Stocks>
                            </Automate>
                        - Dans ODB.xml : Specifications des quotas rav 
                                <LiensHierarchiques>
                                    ...
                                    <Logistique>
                                        ...
                                        <Ravitaillement automate="529000">
                                            <Quotas>
                                                <Dotation nom="carburant">
                                                    <Categories>    
                                                        <Categorie nom="gasoil" quota="6000"/>
                                                    </Categories>        
                                                </Dotation>
                                        
                                                <Dotation nom="munition">
                                                    <Categories>    
                                                        <Categorie nom="Balle Classique 12,7" quota="1000"/>
                                                    </Categories>        
                                                </Dotation>
                                            </Quotas>
                                        </Ravitaillement>
                                    </Logistique>                            
                                </LiensHierarchiques>                            
                        - Dans dotations.xml, nouveau tag spécifiant le nombre de dotations pour faire 1 U
                                <NombreDansVolumeUnitaire>1</NombreDansVolumeUnitaire>                                
    - NLD/JVT - Changement du format des liens hiérarchiques des automates dans l'ODB
                    <LiensHierarchiques>
                        <Armee>bleu</Armee>
                        <GroupeConnaissance>1</GroupeConnaissance>
                        <TC2 automate="524288"/>                        <-------- Avant <TC2>524288</TC2>
                        <Logistique>
                            <Maintenance automate="524296"/>            <-------- Avant <Maintenance>524296</Maintenance>
                            <Sante automate="524298"/>                  <-------- Avant <Sante>524298</Sante>
                            <Ravitaillement automate="529000">          <-------- Avant <Ravitaillement>529000</Ravitaillement>
                                <Quotas>
                                    ...
                                </Quotas>
                            </Ravitaillement>
                        </Logistique>                            
            </LiensHierarchiques>                                       
    - JVT - Bug fix : Fonction DEC demandant si  les transporteurs sont prêts
    - JVT - Nouvelles fonctions DEC ALAT :
                R /* temps en minutes */ A::DEC_ALAT_TempsVolRestant              ();
                R /* temps en minutes */ A::DEC_ALAT_TempsVolPourParcourirDisatnce( R /*distance en m*/ );
    - JVT - Nouvelles fonctions DEC globales :
                V DEC_UserTypeList_DeleteAll( S /*liste*/ ); -> efface la liste et delete tous les objets en mémoire
                V DEC_UserTypeList_Clear    ( S /*liste*/ ); -> vide la liste, mais les objets contenus restent valides
            
Version 0.85.1 [26/01/2005] - Codename 'isreconby'
    - NLD - Bug fix : Erreur dans DEC_ConnaissanceObjet_EstReconnu()
    - NLD/JVT - Bug fix : Erreur dans calcul barycentre de connaissances
    - NLD/JVT - Bug fix : Les fonctions
                                DEC_Agent_DureeRecuperationTranporteurs
                                DEC_Agent_DureeEmbarquement
                                DEC_Agent_DureeDebarquement
                            renvoyaient un temps en 'pas de temps' => transformé en minutes
    - NLD/JVT - Bug fix : Crash dans DEC_Geometrie_CalculeBarycentreListeConnaissancesAgents()
    - NLD - Bug fix : Nettoyage dans gestion des attributs spécifiques des objets 'site de franchissement'/rota/nuage nbc/zone nbc
    - NLD - Nouvelle fonction DEC pion et automate : DEC_ConnaissanceObjet_EstReconnu
    
Version 0.85 [25/01/2005] - Codename 'sedrules'
    - NLD - Mise à jour missions ALAT + conduite
    - NLD - MOS_Light : Le nom de l'agent NBC est affiché, et non plus son ID
    - NLD - MOS_Light : La liste des points permettant de spécifier la localisation d'un objet créé magiquement est réinitialisée après un OK ou un Cancel
    - NLD - Bug fix : fonctions automates LOG non enregistrées
    - NLD - Les limas/limites sont envoyées à MOS lors de la connexion
    - NLD - Objets : 
            * Nouvelle action : DEC_StartReprendreTravauxObjet()    
                  -> Reprend la construction ou la préparation si le pourcentage de l'objet n'est pas à 100%
                  -> Reprend la valorisation si l'objet peut l'être
            * 'Actions magiques' de création/destruction immédiates depuis les scripts                              
                DEC_CreerObjetSansDelais
                DEC_DetruireObjetSansDelais
    - NLD - Envoi des priorités de la chaine santé à MOS
    - NLD/JVT - Gestion des prêts
                    * Remontée des infos du côté prêteur
                    * Il n'est plus possible de préter sa dernière composante
                        (sinon pion => mort => plus de mission => plus d'ordre de conduite => fait technique majeur => aaah => snake => parapluie => masa caca)
                    * Changement paramètre ordres de conduite pret (paramètre automate transformé en pion)
                    * Annulation des demandes logistiques d'une composante prétée avant le prêt
    - NLD - Nouveau type de lima : 'ligne-identification-accueil'
    - NLD - Mise à jour paramètres missions MIA/JCR
    - JVT - Nouvelle perception (objets sur localisation) :
                    nouveau type DIA : 
                        T_PerceptionLocalisationObjet
                    nouvelles fonctions Pion :
                            U /*T_PerceptionLocalisationObjet*/ A::DEC_Perception_ActiverDetectionObjetLocalisation   ( U /*T_Localisation*/, U/*T_Point center*/, B/*ack taille max obtenue*/, * /*R : vitesse de progression en km.h-1, par défaut 5 km.h-1*/ );  
                            V                                   A::DEC_Perception_DesactiverDetectionObjetLocalisation( U /*T_PerceptionLocalisationObjet*/ );
    - JVT - Les UserType inserés dans une liste sont correctement typés ( DEC_UserType_PushBack )
    - JVT - Nouveau type global : typedef list<T_Direction> T_ListeDirections;
    - JVT - Nouvelle fonction DEC globale : U /*T_Direction*/ DEC_Geometrie_DirectionMoyenne( U /*T_ListeDirections*/ );
            Renvoie la direction moyenne ( ATTENTION, renvoie la première direction si la moyenne est nulle)
    - JVT - La fonction de création de direction renvoie une direction invalide ( T_Direction = 0 ) si les deux points passés en
            paramètre sont égaux
    - NLD/JVT - Modification des données physiques des dotations pour le ravitaillement (dans composantes.xml et pions.xmls)
                        <Categorie nom="gasoil">600</Categorie>
                    =>  <Categorie nom="gasoil" contenance="600" seuilLogistique="10"/>
                Pour convertir les données autrement qu'à la main : 
                    Taper la commande suivante sous cygwin dans le répertoire data (faite une sauvegarde de composantes.xml et pions.xml avant ...)
                        sed -r  -i s/'>(.*)<\/Categorie>'/' contenance="\1" seuilLogistique="10"\/>'/g Pions.xml
                        sed -r  -i s/'>(.*)<\/Categorie>'/' contenance="\1" seuilLogistique="10"\/>'/g Composantes.xml                       
                    Là, il faut reprendre les consommations des composantes à la main (désolé, c'est pas magique, mais ça fait quand même gagner du temps ...)
                        
    
Version 0.84 [18/01/2005] - Codename 'foireauxfusses'
    - NLD/JVT - Ajout des IDs de classes suivants : 
            <Class id="213" name="TraitementLogMaintenance"/>
            <Class id="214" name="TraitementLogSante"/>
    - NLD - ASN : 
             - Suppression du paramètre 'eo' dans missions automates
             - Suppression du paramètre 'consigne de tir' dans missions pions
             - Nouveaux ordres de conduite : 
                OrderConduite-ChangerReglesEngagament ::= EnumReglesEngagement
                OrderConduite-Deboucher               ::= NULL
                OrderConduite-Decrocher               ::= NULL             
             - Suppression des attributs suivants dans les attributs des unités
                situation-munition
                situation-sante   
    - NLD - L'évenement 'DEC_Pion_RC' n'est plus envoyé - CHECKEZ VOS SCRIPTS !
    - NLD - Suppressions des fonctions DEC : 
                DEC_Automate_ChangeEtatMunitions
                DEC_Automate_ChangeEtatSante
                DEC_Pion_ChangeEtatMunitions
                DEC_Pion_ChangeEtatSante                
    - NLD/JVT - Bug fix : mauvaise initialisation d'un paramètre lors de la copie des fuseaux
    - NLD - Gestion du changement dynamique des liens logistiques
                ASN : MsgChangeLienLogistique / MsgChangeLienLogistiqueAck
                IHM dans MOS_Light
    - JVT - Gestion du transfert de composante (pour pions LOG ).
                Nouvelles fonctions DEC :
                    V A::DEC_Sante_PreterVSRAM   ( A /*T_Pion*/, R /*nombre*/ );
                    V A::DEC_Sante_RecupererVSRAM( A /*T_Pion*/, R /*nombre*/ );
    - JVT - Nouvelle fonction DEC globale :
                U /*T_Direction*/ DEC_Geometrie_CalculeBarycentreLocalisation( U /*T_Localisation*/ );
    - JVT - Nouvelles fonctions DEC Pion :
                A /*T_Automate*/ A::DEC_Pion_TC2(); // ATTENTION : La valeur de retour peut être nulle
                U /*T_Point*/    A::DEC_Geometrie_CalculeBarycentreListeConnaissancesAgents( S /*T_ListeConnaissancesAgent*/ );
                A /*T_Pion*/     A::DEC_Pion_PionPCDeAutomate( A /*T_Automate*/ );    
    - JVT - Nouvelles fonctions DEC_Automate :
                A /*T_Automate*/ A::DEC_Automate_TC2(); // ATTENTION : La valeur de retour peut être nulle     
                A /*T_Pion*/     A::DEC_Automate_PionPCDeAutomate     ( A /*T_Automate*/ );
    - JVT - Nouvelle fonction DEC Pion ALAT :
                B                A::DEC_PionEstHeliportable( A /*T_Pion*/, B /*Transporte seulement embarquables*/ );
   
Version 0.83 [14/01/2005] - Codename 'healthshell'
    - NLD/JVT - Bug fix : Erreur dans copie des paramètres de type 'Polygone' lors de la copie de missions (utilisée dans la relève)
    - NLD - Mise à jour missions ALAT
    - NLD/JVT - Gestion de la chaine santé
                  * Gestion de la durée de vie des humains blessés (Cf sante.xml)
                  * Fonctions DEC (pions et automates) 
                        V A::DEC_Sante_ActiverChaine     ();
                        V A::DEC_Sante_DesactiverChaine  ();
                        V A::DEC_Sante_ChangerPriorites  ( U /*T_SantePriorites*/ );
                        V A::DEC_Sante_ChangerTempsBordee( I /*E_TempsBordee*/ );                   
                  * Ordres de conduite 
                        OrderConduite-ModifierTempsBordeeSante
                        OrderConduite-ModifierPrioritesBlesses
                  * Remontée des infos à MOS
                        - Remontée de l'etat des chaines pour les pions log
                        - Remontée des consignes et de leur état (affichées dans les pions/automates logs et pions/automates melées concerncés)
                  * Données
                      - Nouvelles données dans 'sante.xml' : 
                            <TempsDiagnostique>10</TempsDiagnostique> <!-- En minutes -->
                            <TempsTri>10</TempsTri>                   <!-- En minutes -->
                            <CategoriesBlesse>
                                <U3 esperanceVie="200000" tempsSoin="5" pourcentage="40"/> <!-- Temps en heures -->
                                <U2 esperanceVie="200000" tempsSoin="1" pourcentage="30"/>
                                <U1 esperanceVie="200000" tempsSoin="0.5" pourcentage="25"/>
                                <UE esperanceVie="200000" tempsSoin="5" pourcentage="5"/>
                            </CategoriesBlesse>
                            <ReacMental tempsSoin="0.3" pourcentage="50"/>
                            <Contamines tempsSoin="0.2"/>
                      - Nouveaux tags optionnels dans les composantes pour préciser les capacités logs santé
                            <FonctionsLogistiques>
                                <Sante>
                                    <Medecin>
                                        <Tri/>
                                        <SoinNBC/>
                                        <SoinReacMental/> 
                                        <SoinBlessures>
                                            <U2/>
                                            <U3/>
                                        </SoinBlessures>
                                    </Medecin>
                                    <AmbulanceReleve>
                                        <Capacite>3</Capacite>
                                        <TempsChargementParHumain>15</TempsChargementParHumain> <!-- En secondes -->
                                        <TempsDechargementParHumain>10</TempsDechargementParHumain>
                                    </AmbulanceReleve>
                                    <AmbulanceRamassage>
                                        <Capacite>5</Capacite>
                                        <TempsChargementParHumain>25</TempsChargementParHumain> <!-- En secondes -->
                                        <TempsDechargementParHumain>5</TempsDechargementParHumain>
                                    </AmbulanceRamassage>                                    
                                </Sante>
                            </FonctionsLogistiques>
                        - Nouvelles données relatives aux temps de bordée dans 'logistique.xml'
                            <Logistique>
                                <TempsDeBordee>
                                    <Bordee8Heures>
                                        <CoefTempsReparation>1</CoefTempsReparation>
                                        <CoefTempsSoin>1</CoefTempsSoin>
                                        <CoefTempsTri>1</CoefTempsTri>
                                    </Bordee8Heures>            
                                    <Bordee12Heures>
                                        <CoefTempsReparation>0.75</CoefTempsReparation>
                                        <CoefTempsSoin>0.75</CoefTempsSoin>
                                        <CoefTempsTri>0.75</CoefTempsTri>
                                    </Bordee12Heures>            
                                    <Bordee16Heures>
                                        <CoefTempsReparation>0.5</CoefTempsReparation>
                                        <CoefTempsSoin>0.5</CoefTempsSoin>
                                        <CoefTempsTri>0.5</CoefTempsTri>
                                    </Bordee16Heures>            
                                    <Bordee20Heures>
                                        <CoefTempsReparation>0.4</CoefTempsReparation>
                                        <CoefTempsSoin>0.4</CoefTempsSoin>
                                        <CoefTempsTri>0.4</CoefTempsTri>
                                    </Bordee20Heures>            
                                    <Bordee24Heures>
                                        <CoefTempsReparation>0.3</CoefTempsReparation>
                                        <CoefTempsSoin>0.3</CoefTempsSoin>
                                        <CoefTempsTri>0.3</CoefTempsTri>
                                    </Bordee24Heures>            
                                </TempsDeBordee>        
                            </Logistique>                            
       
Version 0.82.2 [10/01/2005] - Codename 'weldvalue'
    - NLD/JVT - Bug fix : Pb de precision dans l'action de déplacement

Version 0.82.1 [07/01/2005] - Codename 'oups'
    - NLD - Les messages 'Trace' ne sont plus préfixés par le nom de l'agent/automate émetteur
    - NLD/JVT - Bug fix : l'état de l'automate (embraye/debraye) n'était plus remonté à MOS
    - NLD/JVT - Gestion des pannes aléatoires
    - NLD/JVT - Bug fix : boucle infinie quand des humains étaient surchargés dans l'ODB, dans la catégorie 'NonBlesse'
    - NLD/JVT - Bug fix : assert() dans l'application des tirs directs quand la cible est déjà morte
    - NLD - Les fonctions suivantes n'assertent plus quand un UserType valant '0' leur est passé en paramètre (dans ce cas, elles ne font rien ...)
                DEC_Geometrie_DetruireLocalisation
                DEC_Geometrie_DetruireListePoints 
                DEC_Geometrie_DetruirePoint       
                DEC_Geometrie_DetruireDirection   
        
Version 0.82 [06/01/2005] - Codename 'maintenancebackfromhell'
    - NLD/JVT - Bug fix : Cohérence état 'transporté' quand le transporteur est detruit
    - NLD/JVT - Bug fix : Bug dans l'application des blessures sur les humains embarqués quand un 'VAB' se prend un obus.   
    - NLD/JVT - Bug fix : assert() foireuse à cause d'un pb de précision dans DEC_Geometrie_CreateOrthoDirection
    - NLD/JVT - Bug fix : pas de message d'erreur à l'init de la SIM quand une composante utilisait un couple lanceur/munition
                non valide
    - NLD/JVT - Les objets 'MarkedForDestruction' sont virés de TER_World (Cf. MIL_Object_ABC::MarkForDestruction() )
    - NLD/JVT - Changement du nom généré pour les unités    
    - NLD/JVT - Modification de certaines missions ALAT
    - NLD/JVT - Modification de la remontée de l'état du personnel pour les pions
                    - la distinction U1/U2/U3/UE ne sera visible qu'au niveau de la chaine santé
                    - nouveaux états :
                            - humains contaminés
                            - humains débiles mentaux
                            - humains utilisés dans la chaine maintenance
                            - humains utilisés dans la chaine santé
    - NLD/JVT - Gestion de la chaine maintenance
                  * Fonctions DEC (pions et automates) 
                        V A::DEC_Maintenance_ActiverChaine     ();
                        V A::DEC_Maintenance_DesactiverChaine  ();
                        V A::DEC_Maintenance_ChangerPriorites  ( U /*T_MaintenancePriorites*/ );
                        V A::DEC_Maintenance_ChangerTempsBordee( I /*E_TempsBordee*/ );                   
                  * Ordres de conduite 
                        OrderConduite-ModifierTempsBordeeMaintenance
                        OrderConduite-ModifierPrioritesReparations
                  * Remontée des infos à MOS
                        - Remontée de l'etat des chaines pour les pions log
                        - Remontée des consignes et de leur état (affichées dans les pions/automates logs et pions/automates melées concerncés)
                        - L'état 'maintenance' des composantes est de nouveau actif
                        - RC quand une composante revient de la maintenance
                  * Données
                      - Nouveaux types de pions/automates   
                            Pion LOG TC2               
                            Pion LOG BLD Sante         
                            Pion LOG BLD Maintenance   
                            Pion LOG BLD Ravitaillement
                            Pion LOG BLT Sante         
                            Pion LOG BLT Maintenance   
                            Pion LOG BLT Ravitaillement
                            Automate LOG TC2                
                            Automate LOG BLD Sante          
                            Automate LOG BLD Maintenance    
                            Automate LOG BLD Ravitaillement 
                            Automate LOG BLT Sante          
                            Automate LOG BLT Maintenance    
                            Automate LOG BLT Ravitaillement
                      - Nouveaux fichiers 'pannes.xml' et 'logistique.xml'
                      - Nouveaux tags optionnels dans les composantes pour préciser les capacités logs
                            <FonctionsLogistiques>
                                <Maintenance>
                                    <NTI1>
                                        <M/>
                                    </NTI1>            
                                    <NTI2>
                                        <M/>
                                        <EA/>
                                    </NTI2> 
                                    <Remorqueur>
                                        <TempsChargementParTonne>15</TempsChargementParTonne> <!-- En secondes -->
                                        <TempsDechargementParTonne>10</TempsDechargementParTonne>
                                    </Remorqueur>                                                   
                                </Maintenance>
                            </FonctionsLogistiques>
                      - Nouveaux tags dans l'ODB
                            <LiensHierarchiques>
                                <Armee>bleu</Armee>
                                <GroupeConnaissance>1</GroupeConnaissance>
                                <TC2>524288</TC2>                           <------- OPTIONNEL, A PRECISER POUR TOUS LES AUTOMATES
                                <Logistique>                                <------- OPTIONNEL, A PRECISER POUR TOUS LES AUTOMATES LOGS
                                    <Maintenance>524297</Maintenance>
                                    <Sante>524288</Sante>
                                    <Ravitaillement>524288</Ravitaillement>
                                </Logistique>                                            
                            </LiensHierarchiques>
                                                           
Version 0.81 [04/01/2005] - Codename 'jesépo'
    - NLD - Bug fix : La perception reco point pouvait voir les objets en instance de destruction
    - NLD/JVT - Bug fix : assert() lors du tir direct ( uint PHY_DirectFireData::GetNbrWeaponsUsable() )
    - NLD - Bug fix : Test invalide pour vérifier la possibilité de créer un contournement sur un obstacle
    - NLD/JVT - Bug fix : le recomplètement en humains recomplétait les composantes mortes $$$$ A TESTER (void PHY_ComposantePion::ResupplyHumans() )
    - JVT - Nouvelles fonctions DEC globale : 
                U /*T_Direction*/ DEC_Geometrie_CreerDirectionPerpendiculaire( U /*T_Direction*/, * /* B = sens trigo ?*/ );
                V                 DEC_UserTypeList_PushBack                  ( S /*liste*/, U /*elt*/ ); 
                V                 DEC_UserTypeList_Remove                    ( S /*liste*/, U /*elt*/ );
                V                 DEC_Geometrie_InverseDirection             ( U /*T_Direction*/ );
    - JVT - Nouvelle Fonction DEC pion :
                B                  A::DEC_Pion_ChangeAutomate( A /*T_Automate*/ );
    - JVT - Nouvelles fonctions DEC Automate :
                B                   A::DEC_Automate_Debrayer                                         ();
                S /*T_ListePions*/  A::DEC_Automate_PionsDeAutomateAvecPC                            ( A /*T_Automate*/ );
                S /*T_ListePions*/  A::DEC_Automate_PionsDeAutomateSansPC                            ( A /*T_Automate*/ );
                B                   A::DEC_Automate_EstPointDansFuseauPion                           ( U /*T_Position*/, A /*T_Pion*/ );
                U /*T_Point*/       A::DEC_Automate_CalculerPositionParRapportALimaPourPion          ( U /*T_Lima*/, R /*dist avant lima*/, B /*retour*/, A /*T_Pion*/);
                B                   A::DEC_Automate_CalculePointProcheLocalisationDansFuseauPourPion ( U /*T_Localisation localisation*/, U /*T_Point result*/, A /*T_Pion*/ );
                B                   A::DEC_Geometrie_CalculePointProcheLocalisationDansFuseau        ( U /*T_Localisation localisation*/, U /*T_Point result*/ );

Version 0.80 [20/12/2004] - Codename 'fartout'
    - NLD - Bug fix : la composante majeure n'était pas mise à jour quand seul l'état embarqué/débarqué changeait
    - NLD - Bug fix : la composante majeure n'était pas mise à jour quand seul l'état transporté changeait
    - NLD - Bug fix : les surfaces actives de visions n'étaient pas mises à jour quand seul l'état transporté changeait
    - NLD - Bug fix : Non bijectivité entre GetDistanceForPH( ph ) et GetPh( distance )
                => Erreur lors de l'application des coefficients modificateurs dans GetPh()
                => NB : Dans les scripts, pour vous esquiver, vous devriez vous écarter de GetDistanceForPH(0) + EPSILON
                    afin : d'éviter les oscillations, et surtout, d'éviter des problèmes de précision                           
    - AGE - Threads : Changed the main loop to sleep more when the network is threaded. Tuned the synchronisation parameters.
    - NLD - Bug fix : Dans les RCs, notamment, les ID de pions et d'automates passés en paramètres étaient invalides
    - JVT - Bug fix : Les distances avant point sont correctement lues dans pions.xml ( facteur 100; conversion m->px )
    - AGE - HLA : Status 'pc', gestion plus souple de l'état opérationnel. 
                  Les objets distants ne sont plus envoyés à MOS
    - JVT - Appel du BEH_Default des scripts automates
    - JVT - Nouvelle fonction DEC globale : DEC_UserTypeList_Size
    - JVT - Nouvelles Fonctions DEC pion :
                R                  A::DEC_Tir_PorteeMinPourTirerSurAgent( U /*T_ConnaissanceAgent*/ , I /*E_ValiditeRequete&*/, * /* ph voulu, par défaut 0.8 */ );
                S /*T_ListePions*/ A::DEC_Pion_PionsAvecPC();
                S /*T_ListePions*/ A::DEC_Pion_PionsSansPC();
                A /*T_Pion*/       A::DEC_Pion_PionPC     ();
    - JVT - Nouvelle fonction DEC Automate :
                B A::DEC_Automate_ProchainObjetSurItinerairePion      ( A /*T_Pion*/, U /*OUT T_ConnaissanceObjet*/, R /*OUT Distance*/, * /*Liste de E_TypeObject à prendre en compte*/ );
                B A::DEC_ConnaissanceObjet_EstContourne               ( U /*T_Connaissance*/ )
                I /*E_TypeObject*/ A::DEC_ConnaissanceObjet_Type      ( U /*T_ConnaissanceObjet*/ , I /*E_ValiditeRequete&*/ );
                B A::DEC_Automate_PionPeutConstruireObjet             ( A /*T_Pion*/, I /*E_TypeObject*/ );         
                B A::DEC_Automate_PionPeutConstruireContournementObjet( A /*T_Pion*/, I /*E_TypeObject*/ );
                B A::DEC_Automate_PionPeutDetruireObjet               ( A /*T_Pion*/, I /*E_TypeObject*/ );
    - NLD - Modification paramètre de mission 'Mission-Pion-ALAT-ReconnaitreContourEnnemi'
    - NLD - Path find : le chemin peut traverser un objet, même quand un path de type 'évitement d'objets' est demandé, 
            cela afin d'autoriser des déplacements DANS les objets. (Cf. Zone NBC de MIA) 
            Le coût des noeuds se trouvant dans des objets est très élevé, et non plus infini.
    - JVT - Nouvelle fonction DEC ALAT ( pion et automate ) :
                A A::DEC_ALAT_PionDerriere( S /*T_ListePions*/, U /*T_Direction*/ );

Version 0.79 [09/12/2004] - Codename 'barnum'
    - NLD - Ajout d'un paramètre dans les missions 'Pion ALAT Heliporter et Helitransporter'
    - NLD - Nouvelle action magique : destruction TOTALE d'un pion
    - NLD - Bug fix : Erreur dans la génération des missions par AGR => La relève ne pouvait pas fonctionner
    - NLD - Nouvelles fonctions DEC : 
                B A::DEC_PeutReleverPion            ( A /*T_Pion*/ );                pour les pions
                B A::DEC_Automate_PionPeutRelevePion( A /*T_Pion*/, A /*T_Pion*/ );  pour les automates
    - JVT - Bug fix : Les points intéressants de type lima et spécial n'étaient plus envoyés ( il n'y avait que les avant-points )
    - AGE - HLA : Ajout des statuts "furtif" et "transporte"
    - JVT - Nouveau type de nature débile pour MOS : E_NatureCapaciteMissionType
            Cette nature est renseignée dans Pions.xml :
            <Nature>
                ...
                <CapaciteMission type="Non renseigne" />
                ...
            </Nature>
            Remarque : Cette info est remontée vers MOS dans les connaissances Identifiées.
            Les valeurs acceptées sont :
                    Civilian law enforcement                    
                    Command operations                          
                    Couverture aerienne                         
                    Joint intelligence                          
                    Morale, welfare recreation                  
                    Reglage electronique                        
                    Remplacement                                
                    Service mortuaire                           
                    Signals intelligence (SIGINT)               
                    Theatre missile defence                     
                    Utilitaire                                  
                    Aeroporte                                   
                    Affaires publiques                          
                    Affaires publiques, communication           
                    Affaires publiques, joint information       
                    Alpin                                       
                    Amphibie                                    
                    Arctique                                    
                    Artillerie - reconnaissance                 
                    Attaque                                     
                    Attaque aerienne                            
                    C2                                          
                    Chemin de fer                               
                    Ciblage                                     
                    Contre espionnage                           
                    Eclairage                                   
                    Entretien                                   
                    Entretien, materiel                         
                    Entretien, missile                          
                    Entretien, opto-electronique                
                    Espionnage                                  
                    Espionnage militaire, aerial exploitation   
                    Espionnage militaire, operation             
                    Espionnage militaire, tactical exploitation 
                    Evacuation sanitaire                        
                    Finance                                     
                    Genie, combat                               
                    Genie, construction                         
                    Genie, construction navale                  
                    Guerre electronique                         
                    Guerre electronique, interception           
                    Guerre electronique, brouillage             
                    Guerre electronique, detection              
                    Interrogation                               
                    Main d'oeuvre                               
                    Maintien de la paix                         
                    Marine                                      
                    Mine de contre-mesure                       
                    NBC, biologique                             
                    NBC, chimique                               
                    NBC, chimique, fumee                        
                    NBC, decontamination                        
                    NBC, decontamination chimique               
                    NBC, nucleaire                              
                    Non renseigne                               
                    Observation                                 
                    Observation, capteur                        
                    Observation, longue portee                  
                    Observation, meteo                          
                    Observation, module terrestre               
                    Purification de l'eau                       
                    Ravitaillement (class I)                    
                    Ravitaillement (class II)                   
                    Ravitaillement (class III aviation)         
                    Ravitaillement (class III)                  
                    Ravitaillement (class IV)                   
                    Ravitaillement (class V)                    
                    Ravitaillement (eau)                        
                    Ravitaillement, blanchisserie/bain          
                    Recherche & sauvetage                       
                    Reconnaissance                              
                    Reconnaissance aerienne tactique            
                    Recuperation                                
                    Service du personnel                        
                    Service juridique                           
                    Support aerien rapproche                    
                    Transmissions, forward communications       
                    Transmissions, node centre                  
                    Transmissions, node, large extension        
                    Transmissions, node, small extension        
                    Transmissions, radio relay                  
                    Transmissions, radio tactical satellite     
                    Transmissions, radio teletype               
                    Transmissions, support                      
                    Transmissions, radio                        
                    Transport, allocation des mouvements        
                    Transport, APOD/APOE                        
                    Transport, SPOD/SPOE                        
                    Transport, missile                          
                    Verrouillage de cible                       
                    Verrouillage de cible, flash                
                    Verrouillage de cible, radar                
                    Verrouillage de cible, sonore
    - JVT - Transformation de toutes les enums de nature en classes              

Version 0.78 [07/12/2004] - Codename 'rohumroim ?'
    - NLD - Bug fix : Pb dans l'envoi des attributs NBC
    - AGE : HLA : Gestion des interactions avec les objets :
                    * Creation/Destruction
                    * Valorisation/Deminage
                    * Contournement
                    * Preparation/Activation     
    - NLD/JVT - Bug fix : les 'surfaces de vision' n'étaient pas remises à jour quand seul l'état d'embarquement d'un pion changeait
    - NLD/JVT - Bug fix : MOS_Light - L'affichage de la surface de vision ne tenait pas compte des facteurs humains
    - NLD - Mise à jour ASN des missions :               
                RENOMMAGE
                    Mission-Automate-ALAT-ControlerSecteur           => Mission-Automate-ALAT-Controler
                    Mission-Automate-ALAT-SurveillerSecteur          => Mission-Automate-ALAT-Surveiller
                    Mission-Automate-ALAT-ReconaitreContourEnnemi   +
                    Mission-Automate-ALAT-ReconaitreDansLaProfondeur => Mission-Automate-ALAT-Reconaitre
                    Mission-Pion-ALAT-ReconnaitreSurContourEnnemi    => Mission-Pion-ALAT-ReconnaitreContourEnnemi
                    Mission-Pion-ALAT-DetruireDansZone               => Mission-Pion-ALAT-DetruireNeutraliserDansZone
                    Mission-Pion-ALAT-RechercherEtSecourir           => Mission-Pion-ALAT-EffectuerRechercheEtSauvetage                         
                DELETED
                    OrderConduite-Automate-ActiverSecteur,
                    OrderConduite-Automate-Renforcer,
                    OrderConduite-Automate-ReprendreAuxOrdres,
                    Mission-Automate-ALAT-DetruireDansSecteur,
                    Mission-Automate-ALAT-NeutraliserDansSecteur
                    Mission-Automate-GEN-Renforcer,
                    Mission-Automate-GEN-CreerObstaclesPonctuels
                    Mission-Automate-RENS-RenseignerSur,
                    Mission-Automate-RENS-SExfiltrer,
                    Mission-Automate-RENS-OrienterGuider,
                    Mission-Automate-RENS-AcquerirUnObjectifMobile,
                    Mission-Automate-RENS-AcquerirUnObjectifFixe,
                    Mission-Automate-RENS-Appuyer
                    Mission-Pion-GEN-ElargirTrouee
                    Mission-Pion-RENS-RenseignerSur,
                    Mission-Pion-RENS-SExfiltrer,
                    Mission-Pion-RENS-Guider,
                    Mission-Pion-RENS-MettreEnOeuvre
                NEW
                    Mission-Automate-GEN-SeDeployer
                    Mission-Automate-TRANS-Commander
                    Mission-Automate-ALAT-Attaquer,
                    Mission-Automate-ALAT-AttaquerFormationAeromobile,
                    Mission-Automate-ALAT-RecueillirFormationAeromobile,
                    Mission-Automate-ALAT-DetruireNeutraliserDansProfondeur,
                    Mission-Automate-ALAT-ExtrairePersonnel,
                    Mission-Automate-ALAT-DonnerCoupArret,
                    Mission-Automate-ALAT-EffectuerRechercheEtSauvetage
                    Mission-Automate-ABC-ArmerPointDeControle, 
                    Mission-Automate-ABC-OrganiserAccueilColonneRefugies, 
                    Mission-Automate-ABC-ProtegerPC
                    Mission-Automate-GEN-RealiserPlatesformesSommairesDeDeploiementInitial,
                    Mission-Automate-GEN-RealiserTravauxSommairesAuProfitPopulation
                    Mission-Automate-RENS-ROHUM-RenseignerSur,
                    Mission-Automate-RENS-ROHUM-OrienterGuider,
                    Mission-Automate-RENS-ROHUM-SExfiltrer,
                    Mission-Automate-RENS-ROIM-AcquerirObjectifFixe,
                    Mission-Automate-RENS-ROIM-AcquerirObjectifMobile,
                    Mission-Automate-RENS-ROIM-RenseignerSur
                    Mission-Pion-ALAT-EvacuationSanitaire
                    Mission-Pion-ABC-ArmerPointDeControle, 
                    Mission-Pion-ABC-OrganiserAccueilColonneRefugies
                    Mission-Pion-GEN-RenforcerCompagnie,
                    Mission-Pion-GEN-RealiserZonePoserHelicoptere
                    Mission-Pion-INF-Recueillir
                    Mission-Pion-RENS-ROHUM-RenseignerSur,
                    Mission-Pion-RENS-ROHUM-SExfiltrer,
                    Mission-Pion-RENS-ROHUM-OrienterGuider,
                    Mission-Pion-RENS-ROIM-AcquerirObjectifFixe,
                    Mission-Pion-TRANS-EtablirGererLiaison
                    Mission-Pion-RENS-ROIM-AcquerirObjectifMobile,
                    Mission-Pion-RENS-ROIM-RenseignerSur,
                    Mission-Pion-RENS-ROIM-MettreEnOeuvre
    - JVT - Pion RENS : Gestion du transport de pion ( pour les drônes )
            => Fonctions DEC : 
                U /*T_Transport*/ A::DEC_StartTransport             ( I /*E_EtatActionTransport*/, S /*T_ListePions*/ );   
                V                 A::DEC_StopTransport              ( U /*T_Transport*/ );    
                U /*T_Action*/    A::DEC_StartEmbarquerPourTransport( I /*E_EtatActionTransport*/ );
                U /*T_Action*/    A::DEC_StartDebarquerPourTransport( I /*E_EtatActionTransport*/ );
            => Fonctionnement : idem héliportage...
    - AGE - HLA : Gestion des status des pions (contaminé, neutralisé, brouillé). Ajout de l'interaction de neutralisation
    - AGE - HLA : Meilleure gestion des objects : 
                    * Partage des objets existants dans l'odb
                    * les rotas sont correctement sérialisés
    - JVT - Pion ALAT : Nouvelle fonction DEC
                B A::DEC_ALAT_ReconnaissanceNonVuTerminee();
    - JVT - Les DEC_Rep_PathPoint sont maitnenant flagés pour qu'ils ne soient pas envoyés plusieurs fois par évenement vers les scripts
    - JVT - Nouvelle fonction DEC sur les automates :
                 U /*T_Point*/ A::DEC_Geometrie_CalculePointArriveePourPion ( A /*T_Pion*/ );
    - JVT - Nouvelle fonction DEC sur les pions :
                 B             A::DEC_Geometrie_ConnaissanceDansDirectionPoint ( U /*T_ConnaissanceAgent*/, U /*T_Point*/ );

Version 0.77.1 [02/12/2004] - Codename 'fêteducafé'
    - AGE/MCO - HLA : Gestion partielle des objets.
                        * Les objets existant dans l'odb ne sont pas partagés. 
                        * Les contaminants et le niveau de dangerosité d'un rota ne sont pas sérialisés
                        * Les paramètres d'un site de franchissement ne sont pas sérialisés
                        * Il n'est pas possible de construire/détruire/valoriser/déminer/activer un objet distant
    - NLD - Bug fix : Retour de la fonction 
                A::DEC_ReleverPion( A /*T_Pion*/ );                            
    - NLD - Bug fix : Les noms des agents dans le debuggeur DirectIA(c) est de nouveau correct.

Version 0.77 [01/12/2004] - Codename 'moralès'
    - NLD - La gestion des 'embossements' a été refaite (Même fonctionnement que les sites de décontamination)
                * Suppression de la fonction DEC_ConnaissanceObjet_EstOccupe
                * Nouvelles fonctions : 
                    DEC_ConnaissanceObjet_PeutOccuperObjet
                    DEC_StartOccuperObjet
             Un objet ne peut être occupé que par un pion
             Les effets de certains objets (pour l'instant les postes du génie) ne sont appliqués QUE sur les pions
                qui l'occupent
    - NLD - Mise à jour de l'ASN (extraction des enumérations 'inlines')
    - NLD/JVT - Le temps de remontée du rapport de force (local et global) peut être paramétré dans les données :
                    => Dans les types de pions pour le rapport de force local
                    => Dans les types d'automates pour le rapport de force global
                    => Format
                            <RapportDeForce>
                                <TempsDeRemontee>100</TempsDeRemontee> <!-- En minutes -->
                            </RapportDeForce>
                    => Ces paramètres sont optionnels, les valeurs par défault étant définies dans decisionnel.xml
    - JVT : Nouvelles énums pour la gestion des facteurs humains :
                E_FacteurHumain_Fatigue
                E_FacteurHumain_Moral
                E_FacteurHumain_Experience
    - JVT : Nouvelles fonctions DEC Automate
                B                 A::DEC_Automate_EstEmbraye                 ();
                B                 A::DEC_Automate_PionEstContamine           ( A /*T_Pion*/ );
                B                 A::DEC_Automate_PionEstEnTenueProtectionNBC( A /*T_Pion*/ );
                B                 A::DEC_Automate_PionEstEnMouvement         ( A /*T_Pion*/ );
                B                 A::DEC_Automate_PionEstNeutralise          ( A /*T_Pion*/ );
                B                 A::DEC_Automate_PionEtatOps                ( A /*T_Pion*/ );
                U /*T_Position*/  A::DEC_Automate_PionPosition               ( A /*T_Pion*/ );
                U /*T_Direction*/ A::DEC_Automate_PionDirection              ( A /*T_Pion*/ );
                B                 A::DEC_Automate_PionRelevePion             ( A /*T_Pion*/, A /*T_Pion*/ );
    - JVT - Suppression d'une fonction DEC pion : DEC_ReleverUnite
    - JVT - Nouvelles fonctions DEC Pion
            * Gestion itinéraire
                U /*T_Position*/  A::DEC_Itineraire_DernierPoint     ( U /*T_Itineraire*/ );
                B                 A::DEC_Itineraire_EstEnMouvementSur( U /*T_Itineraire*/ );
            * Gestion facteurs humains
                I /*E_FacteurHumain_Fatigue*/    A::DEC_FacteurHumain_Fatigue   ();
                I /*E_FacteurHumain_Moral*/      A::DEC_FacteurHumain_Moral     ();
                I /*E_FacteurHumain_Experience*/ A::DEC_FacteurHumain_Experience();
                R                                A::DEC_ForceFacteursHumains    ();
    - JVT - Nouvelles fonction DEC Pion ALAT :
                A                 A::DEC_ALAT_PionDevant( S /*T_ListePions*/, U /*T_Direction*/ );
    - AGE/MCO - HLA : gestion des pions. 
    - AGE/MCO - HLA : gestion des tirs directs.
    - AGE/MCO - HLA : gestion des tirs indirects. 
    - JVT - Gestion d'une "extrapolation" sur la position d'une connaissance qui vient d'être perdu de vue ( GroupesConnaissance.xml )
                <TempsInterpolation>60</TempsInterpolation> <!-- en secondes -->
                Definit le temps ( à partir de la perte de vue) pendant laquelle la position de la connaissance sera mise à jour
            Remarque : le tag est optionnel. S'il est absent il n'y a pas d'interpolation ( i.e. c'est comme les versions d'avant )
    - NLD - Gestion des facteurs humains (Moral / Fatigue / Experience)
            => Nouveau fichier "FacteursHumains.xml dans lequel il est paramètrer l'influence de la fatigue et de l'experience
                sur le moteur physique (PAS le moral, il sera géré entièrement dans les scripts)
            => Par défaut, tous les pions ont les facteurs suivants : 
                    Moral      : bon
                    Experience : vétéran
                    Fatigue    : normal
               Ces facteurs peuvent être surchargés dans l'ODB : 
                    <FacteursHumains>
                        <Fatigue>Fatigue</Fatigue>
                        <Moral>Fanatique</Moral>
                        <Experience>Experimente</Experience>
                    </FacteursHumains>
            => Nouvelle action magique, pour permettre à nos amis de la Direx de changer dynamiquement (!) ces facteurs
            => Note sur les valeurs des coefficients (pour les distraits... ou les quiches, les glanches, et les nazes au choix )
                Pour dégrader les performances physiques, il faut mettre des valeurs entre 0 et 1 pour  :
                    - La vitesse max
                    - Le PH
                    - La distance de perception
                ET des valeurs > 1 pour:
                    - Temps de mise en posture
                    - Temps de rechargement
            => L'impact des facteurs humains sur la perception est visible dans MOS_Light premier du nom
    - NLD/JVT - Modif dans gestion de l'envoi des cônes de vision à MOS_Light
    - NLD - Bug fix : mauvais retour de l'action de tir direct (eNoAmmo sans raison ...)

Version 0.76 [25/11/2004] - Codename 'kermesse'
    - NLD/JVT - Bug fix : assert() quand création d'une zone NBC par action magique avec message ASN invalide                    
    - NLD/JVT - Changement format data, "composantes.xml"
                    - Dans composantes.xml, changement du format de déclaration du personnel
                        (englobé dans un tag 'transports' global)
                        <Transport>
                            <Personnel>
                                <Equipage>4</Equipage>
                                <Temps>
                                    <TempsEmbarquementParHomme>3</TempsEmbarquementParHomme> <!-- En secondes -->
                                    <TempsDebarquementParHomme>6</TempsDebarquementParHomme>
                                </Temps>
                            </Personnel>
                        </Transport>
                    - Pour l'héliportage, il faut spécifier le poids des composantes, en tonnes 
                        <Poids>5</Poids> <!-- En tonnes -->
    - NLD/JVT - Gestion de l'héliportage 
                    - Data pour le transporteur :
                        <Transport>
                            <Personnel>
                                ...
                            </Personnel>
                            
                            <Pion>
                                <Capacite>5</Capacite> <!-- En tonnes -->
                                <Temps>
                                    <TempsChargementParTonne>15</TempsChargementParTonne> <!-- En secondes -->
                                    <TempsDechargementParTonne>10</TempsDechargementParTonne>
                                </Temps>
                            </Pion>
                        </Transport>                       
                    - Nouvelles fonctions DEC : 
                            U /*T_Transport*/              A::DEC_StartHeliportage             ( I /*E_EtatActionTransport*/, S /*T_ListePions*/, B /*Transporte seulement embarquables*/ );   
                            V                              A::DEC_StopHeliportage              ( U /*T_Transport*/ );    
                            U /*T_Action*/                 A::DEC_StartEmbarquerPourHeliportage( I /*E_EtatActionTransport*/ );
                            U /*T_Action*/                 A::DEC_StartDebarquerPourHeliportage( I /*E_EtatActionTransport*/ );                        
                       * Les fonctions DEC_Start/StopHeliportage permettent d'initialiser 'globalement' l'action d'héliportage
                       * Les fonctions DEC_StartEmbarquer/DebarquerPourHeliportage utilisent les données dec DEC_StartHeliportage pour fonctionner 
                          (Elles ne font rien, si DEC_StartHeliportage n'a pas été appelé)
                       * Quand seuls les composantes débarquables sont héliportées, les composantes non débarquables se trouvent virtuellement à l'endroit de
                            l'embarquement, et elles sont 'recupérées' par l'intermédiaire de l'action 'DEC_StartAttenteTransporteurs' (Infanterie)    
                    - Les infos 'transporteur' et 'transportés' sont envoyés à MOS                            
                    - Notes : 
                        - La posture 'transporté' n'existe plus
    - NLD/JVT - Bugs fixes dans gestion du renforcement
                    - L'action renvoit 'non autorisé' quand un pion renforcant essaye de se déplacer
                    - Les interactions entre les pions renforcants et les objets n'étaient pas gérées    
    - NLD/JVT - Bug fix : itinéraire de 'rejoignement' avec 0/0 comme point d'arrivée, dans certains cas tordus ...
    - NLD/JVT - Gestion de la reconnaissance (avec non vus) ALAT :
                    V A::DEC_ALAT_ActiverReconnaissance()
                    V A::DEC_ALAT_DesactiverReconnaissance()
                Les connaissances des nons-vu apparaissent à partir de l'appel à Desactiver et avec un timing identique au timing de leur
                enregistrement.
    - NLD/JVT - Gestion de la surveillance de Zone ALAT :
                    - Fonctions DEC :
                        U /*T_PerceptionSurveillance*/ A::DEC_Perception_ActiverSurveillance   ( U /*T_Localisation*/ );
                        V                              A::DEC_Perception_DesactiverSurveillance( U /*T_PerceptionSurveillance*/ );
                    - Données dans capteurs.xml
                        <SurveillanceALAT>
                            <TempsSurveillance> <!-- Exprimé en secondes par hectare -->
                                <Vide>1</Vide>
                                <Foret>5</Foret>
                                <Urbain>7</Urbain>
                            </TempsSurveillance>
                        <SurveillanceALAT>
                        Ces valeurs permettent de calculer le temps nécessaire pour "parcourir" toute les zones (vide, foret,...) de
                        la localisation, lorsque ces valeurs sont dépassées, il y a vision sur tous les points de chaque zone.
   
Version 0.75 [15/11/2004] - Codename 'dronesucks'
    - NLD/JVT - Bug fix : Mauvaise répartition des officiers/sous-officiers
    - NLD/JVT - Bug fix : le champ 'automate_' des pions n'était pas initialisé
    - NLD/JVT - Partage de connaissance (sur les pions et les automates)
                  V A::DEC_Connaissances_PartageConnaissanceAvec( S /*T_ListeAutomates*/, R /*Distance Max*/, R /*delai en minutes*/ );
    - NLD/JVT - Gestion du radar doppler :
                  - Fonctions DEC
                        U /*T_PerceptionRadarDoppler*/ A::DEC_Perception_ActiverRadarDoppler    ( U /*T_Localisation*/ );
                        V                              A::DEC_Perception_DesactiverRadarDoppler ( U /*T_PerceptionRadarDoppler*/ );
                  - Données dans capteurs.xml
                        <RadarDoppler>
                            <TempsDetection>5</TempsDetection>
                            <TempsReconnaissance>15</TempsReconnaissance>
                            <!--TempsIdentification  : Les tags sont optionnels -->
                            <ActivitePionsDetectables>
                                <Deplacement/>
                                <EnTravaux/>
                            </ActivitePionsDetectables>
                        </RadarDoppler>
    - NLD/JVT - Gestion du silence radio
                => 2 nouveaux ordres de conduite 'PasserEnSilenceRadio' et 'ArreterSilenceRadio', pouvant être reçues tout le temps
                        (même sans mission), comme les ordres de conduite NBC
                => 2 fonctions DEC : DEC_Agent_PasserEnSilenceRadio() et DEC_Agent_ArreterSilenceRadio()
                => Les effets du silence radio et du brouillage (qui sont identiques ...) sont définis dans le fichier 'communications.xml'
    - NLD/JVT - Bug fix : problème dans l'algo permettant de rejoindre les itinéraires qd déplacement sur position courante
                    => Déplacement en 0,0 
    - NLD/JVT - Bug fix : Changement d'un paramètre de la mission 'Mission-Automate-ABC-Appuyer'
    - NLD/JVT - Refonte système de mise à jour des connaissances
    - NLD/JVT - Gestion de la perception en mode 'cassette vidéo' des drones (les perceptions dans ce mode sont représentées en 
                        violet dégueu dans MOS_Light premier du nom ...)
                    => Nouvelles fonctions DEC 
                        V A::DEC_Perception_ActiverModeEnregistrement   ();
                        V A::DEC_Perception_DesactiverModeEnregistrement();
                    => La connaissance est updatée quand DEC_Perception_DesactiverModeEnregistrement est appelée
    - NLD/JVT - Modifications des données :
                    => Creation de nouveaux types : les types de groupes de connaissance ('GroupesConnaissance.xml')
                    => Par type de groupe de connaissance, il faut préciser les paramètres d'évolution de la pertinance
                        des connaissances
                            <GroupeConnaissance nom="Rens">
                                <Connaissance>
                                    <DureeDeVieMax>720</DureeDeVieMax>
                                    <DistanceMaxEntreUniteReelleEtUniteConnue>-1</DistanceMaxEntreUniteReelleEtUniteConnue>
                                </Connaissance>
                            </GroupeConnaissance>
                    => Dans l'ODB : 
                            <Armee id="2621442" nom="bleu">
                                <GroupesConnaissance>
                                    <GroupeConnaissance id="1" type="Standard"/>
                                
Version 0.74 [05/11/2004] - Codename 'bromure'
    - AGE/MCO - Début d'HLA => plein de nouvelles dlls à prendre dans Releases/Tools
    - JVT - Nouvelles fonctions Pion :
                * V A::DEC_Elongation( R /*facteur d'élongation du pion*/ )
            Exemple avec un facteur 2., le pion voit et peut toucher des ennemis 2 fois plus loin que les données ADN
                * S /*T_ListeLocalisations*/ A::DEC_Geometrie_DecoupeLocalisationSurface( U /*T_Localisation*/, R /*surface moyenne*/, I /*E_LocalisationFunctionsReturnCode*/ )
            Fonctionne de la même manière que DEC_Geometrie_DecoupeLocalisation, mais en précisant la surface moyenne voulue pour
            chaque partie plutôt que le nombe de parties
                * S /*T_ListeLocalisations*/ A::DEC_Geometrie_DecoupeFuseauEnTroncons( R /*profondeur des segments en m*/ )
            Créé des tronçons dans le fuseau du pion de longueur donnée dans la direction moyenne du fuseau
    - NLD - Bug fix : Les attributs armée/nature d'une connaissance n'étaient jamais mis à jour
    - NLD - Bug fix : Crash lors du lancement d'un calcul d'itineraire sur un point
    - NLD - Bug fix : Crash à l'initialisation quand un pion ne possède que des humains de commandement (par exemple un seul homme par composante, une composante, et un officier => Crash)
    - NLD - Bug fix : Lors de la création d'un objet, il n'y avait pas de collision avec les agents se trouvant initialement à l'intérieur
    - NLD - Bug fix : La gestion de l'interactions avec les objets n'étaient pas gérée dans le cas du changement de hauteur d'un pion 
    - NLD - Bug fix : Renommage du tag "CoefModifiationTempsRechargement" en "CoefModificationTempsRechargement" dans NBC.xml
    - NLD - Brouillage : 
                * 2 nouveaux objets "zone brouillage brod" et "zone brouillage bromure"
                * Attributs spécifiques de ces types d'objets : 
                    <CoefModificationVitesse>0.2</CoefModificationVitesse>
                    <CoefModificationTempsRechargement>1.5</CoefModificationTempsRechargement>
                * Modif ASN : ajout de l'état du brouillage
    - NLD - Renommage fonctions DEC : DEC_Perception_Start/StopXXX => DEC_Perception_Activer/DesactiverXXX
    - NLD - Radar : 
                * Nouvelles donnees : le fichier senseurs.xml est renommé en capteurs.xml
                    <Radar> (les temps sont en minutes)
                        <TempsDetection>5</TempsDetection>
                        <TempsReconnaissance>8.2639</TempsReconnaissance>
                        <TempsIdentification>548</TempsIdentification>
                    </Radar>
                    <Ecoute>
                        <PionPC>
                            <TempsDetection>5</TempsDetection>
                            <TempsReconnaissance>8</TempsReconnaissance>
                            <TempsIdentification>15</TempsIdentification>
                        </PionPC>
                        <PionNonPC>
                            <TempsDetection>1</TempsDetection>
                            <TempsReconnaissance>2</TempsReconnaissance>
                            <TempsIdentification>3.3</TempsIdentification>
                        </PionNonPC>
                    </Ecoute>
                * Nouvelles fonctions DEC : 
                    U /*T_PerceptionRadar*/  A::DEC_Perception_ActiverRadar    ( U /*T_Localisation*/ );
                    V                        A::DEC_Perception_DesactiverRadar ( U /*T_PerceptionRadar*/ );                        
                    U /*T_PerceptionEcoute*/ A::DEC_Perception_ActiverEcoute   ( U /*T_Localisation*/ );
                    V                        A::DEC_Perception_DesactiverEcoute( U /*T_PerceptionEcoute*/ );                    
   
Version 0.73 [03/11/2004] - Codename 'ilfautquetuchangesderolesurleprojet'
    - NLD/JVT - Bug fix : boucle infinie quand tir indirect de '0' intervention type
    - NLD/JVT - Bug fix : Incohérence de l'état embarqué/débarqué lors du recomplétement
    - NLD/JVT - Bug fix : la vitesse et la posture étaient incorrectes quand l'action de déplacement se terminait inopinément
    - NLD/JVT - Le controle de zone a été rebranché
                    => les données se trouvent dans le fichier Objets.xml
                    => Fonction DEC : U /*T_Action*/ A::DEC_StartControlerZone( U /*T_Localisation*/, R /*distance max en metres*/, B /*Tir autorisé*/ );
                Changement au niveau de l'algo de tir : plutot que de fixer une famille de munitions à utiliser, on fait tirer uniquement
                    les composantes débarquées
    - JVT - Ajout d'info dans NBC.xml :
            Pour chaque type d'agentsNBC
              <DureeDeVie>30</DureeDeVie>                                 : Duree de vie en minute du nuage NBC
              <AngleDePropagation unite="degre">20</AngleDePropagation>   : Angle du cône lors de la propagation du nuage par le vent
            Globalement :
              <VitesseVentLimiteAvantPropagationDirectionnelle>5</VitesseVentLimiteAvantPropagationDirectionnelle> en km.h-1
    - NLD - Nouveaux objets :   
                - ROTA, avec attributs spécifiques (danger / agents nbc / zone de sécurité)
                - Zone de brouillage (pas d'effet pour l'instant)
                - Zone NBC => création d'un nuage NBC
                - Zone de brouillage (pas d'effet, pas de paramètres)
                - Renommage de 'plot de décontamination' en 'site de décontamination'
    - JVT - Gestion de l'évolution du nuage NBC
                => Le nuage 'grossit' tant que la vitesse du vent au centre de la zone est inférieure à "VitesseVentLimiteAvantPropagationDirectionnelle"
                        dans NBC.xml
                => Au dessus de cette vitesse, le nuage prend une forme 'ventue' dans la direction du vent, et à la vitesse du vent d'ailleurs ...
                => L'agent NBC composant le nuage définit : 
                     - L'angle de propagation de la forme 'ventue' ("AngleDePropagation")
                     - La durée de vie du nuage ("DureeDeVie" minutes)
    - NLD - Gestion du site de décontamination :
            - Renommage du 'plot' en 'site', dans les objets, et dans les RCs
            - Nouvelles données : "NombreAnimateursMax" dans objet NBC
                                  "DelaiDecontaminationNBC" par pion 
            - Nouvelles fonctions DEC spécifiques pions NBC
                    U /*T_Action*/ A::DEC_StartAnimerSiteDeDecontamination( U /*connaissance objet*/ )
                    B              A::DEC_SiteDecontaminationPeutEtreAnime( U /*connaissance objet*/ )
            - Nouvelles fonctions DEC globales
                    I /*E_ValiditeRequete&*/ A::DEC_ConnaissanceObjet_DemandeDeDecontamination ( U /*T_ConnaissanceObjet*/ );                        
            - Nouvel état renvoyé à MOS : état de contamination (0-100%)                     
    - NLD - Nouvelle gestion des attributs spécifiques des objets : la reconnaissance de ces attributs doit être activée par les scripts avec la fonction:
                V A::DEC_ConnaissanceObjet_Reconnaitre( U /*T_ConnaissanceObjet*/ , I /*E_ValiditeRequete&*/ );
              NB : Cela active la reconnaissance pour tous les pions du même type que celui (ou ceux) qui ont activé la reconnaissance
                    (sections NBC ...)
    - NLD - ASN : 
                - Modification du message ASN NET_ASN_MsgChangeGroupeConnaissanceAck (ajout du groupe de connaissance et de l'armée)
                - Modification du message ASN MsgChangeDiplomatieAck, pour renvoyer la diplomatie
                - Intégration des nouvelles missions
    - NLD/JVT - Correction d'une fusse dans DIA (Cf. SM/JCR)    
    - NLD - Bug fix : la position d'une connaissance objet était invalide dans le cas où un agent ne percoit un objet QUE parce qu'il
                      entre en collisiona avec lui, ET qu'un magic move de cet agent était effectué
    - JVT - Suppression des fonctions DEC ALAT :
            * DEC_Decoller
            * DEC_Atterir                
    - JVT - Nouvelle fonction DEC Pion ALAT :
            * V A::DEC_ALAT_HauteurDeVol( R )
    - JVT - Nouvelle fonction DEC Automate ALAT :
            * A A::DEC_ALAT_PionDevant( S /*T_ListePions*/, U /*T_Direction*/ );
                    
Version 0.72 [26/10/2004] - Codename 'auboulot'
    - NLD/JVT - Les fumigènes sont à nouveaux gérés : (on tire systèmatiquement 2 obus en dur dans le code pour l'instant)
                    DEC_Tir_LancerFumigeneSurConnaissance()
    - AGE - Thread réseau. Il est désactivé par défaut. Nouvelle option sur la ligne de commande : -networkthread, qui l'active.
    - JVT - Rebranchement de la reconnaissance sur localisation :
                U /*T_PerceptionLocalisation*/ A::DEC_Perception_StartReconnaissanceLocalisation( U /*T_Localisation*/, * );
                    [ * = rien => utilisation comme rayon max de détection le rayon max des capteurs du pion ]
                    [ * = R    => = rayon max de détection ]
                V                              A::DEC_Perception_StopReconnaissanceLocalisation( U /*T_PerceptionLocalisation*/ );
    - NLD - Bug fix : Le UserType de la connaissance objet renvoyée dans DEC_Itineraire_ProchainObjet() était invalide
    - NLD - Nettoyage :
                Suppression T_ObjectTypeBitSet dans MIL.h
                Suppression de E_ObjectTypeID de MT_Scipio_Enum.h
    - NLD/JVT - Gestion des changements de liens hiérarchiques
                    * Changement d'automate pour un pion (msg ASN : MsgChangeAutomate) (NB : le changement d'automate n'est possible que si les armées sont les mêmes)
                        => Fonction DEC pour les automates : DEC_Pion_ChangeAutomate()
                    * Changement de groupe de connaissance pour un automate( msg ASN : MsgChangeGroupeConnaissance) (pas de restriction ...)
                    * Changement de la diplomatie entre 2 armées (msg ASN : MsgChangeDiplomatie)
                Tout est disponible dans MOS_Light (drag & drop pour le changement d'automate et de groupe de connaissance / bouton dans 'settings' pour changement de diplomatie)
    - NLD/JVT - Suppression de la valeur 'en_renforcement' pour les equipements, dans l'ASN
                
Version 0.71 [21/10/2004] - Codename 'couragelesgars'
    - NLD - La déclaration du pion PC dans les types d'automates réference désormais un vrai type de pion.
                <Unite nom="Compagnie GEN Lourde" type="Automate INF">           
                    <Automate>
                        <ModelDecisionnel>Automate Test</ModelDecisionnel>
                        <Constitution>
                            <Pion nom="Section Combat GEN">3</Pion>
                        </Constitution>                
                    </Automate>
                    <PionPC type="Section Combat GEN"/>
                </Unite>
    - JVT - Modification du système de gestion d'erreur lors de l'init de la SIM
    - JVT - Renommage de tags xml dans les fichiers de conf :
                Dotations.xml : DureeDeployement => DureeDeploiement
                Pions.xml     : ModelDecisionnel => ModeleDecisionnel
                Automates.xml : ModelDecisionnel => ModeleDecisionnel
    - JVT - Bug fix : Enregistrement des coups de sonde
    - JVT - Bug fix : Vitesse correcte lorsque le pion est en panne de carburant ( consommation )
    - JVT - Bug fix : Direction des senseurs correctes lorsque la direction principale est lockée
    - JVT - Bug fix : Répartition correctes des directions des senseurs autout de la direction principale
    - JVT - Rebranchement de la reconnaissance de point :
                U /*T_PerceptionPoint*/ A::DEC_Perception_StartReconnaissancePoint( U /*T_Point*/, R /*rayon de la reconnaissance*/, B/* ack taille max obtenue */, * /* R : vitesse de progression en km.h-1, par défaut : 5 km.h-1*/ );
                V                       A::DEC_Perception_StopReconnaissancePoint ( U /*T_PerceptionPoint*/ );
    - NLD - Ajout de checks 'faschistes' sur les types (UserTypes, T_Pion/T_Automate et selections) passées                    
            en paramètres aux différentes fonctions DEC 
                => assert() si vous donnez un T_Direction à la place d'un T_Point dans DEC_DetruirePoint() par exemple...
    - NLD - Nouvelles fonctions DEC:
                DEC_Agent_Position()
                DEC_Agent_Direction()
                                

Version 0.70 [19/10/2004] - Codename 'pastroptot'
    - JVT - Réécriture de l'algorithme de lancé de rayon ( supprime le bug du seuillage apparu sur les radars )
    - JVT - Les distances dans les senseurs peuvent maintenant être égales. Exemple :
                DD = DR = DI = 5000 ou DD = 5000, DR = 0, DI = 0 sont maintenant des distances valides...
    - JVT - Encapsulation des MT_Archive afin de traiter automatiquement les erreurs ( sauvegarde du contexte courrant )
    - NLD - Nettoyage du code : suppressions des 'recyclers' dans les perceptions
    - NLD - Modification dans gestion de la vision : intégration de la fonctionnalité 'FollowAgent()' directement avec l'activation
            ou non de la vision périphérique.
    - NLD - Nouvelle option en ligne de commande : -profiling, qui active le mode 'profiling' sur les fonctions DEC appelées par les agents
            => un fichier est crée dans /profiling/ contenant les infos suivants :
                    # Tick - # Agent - Nom fonction DEC - Durée en ms
            => Les données pourront être importées dans access pour en extraire des infos intéressantes 	
    - NLD / JVT : REFACTORING
        - Changement complet du format des données 
            => La notion de GTIA n'existe plus, et a été remplacée par la notion de 'groupe de connaissance'                                                
            => Idem pour le 'camp' qui s'appelle désormais 'armée'
            => Les données ne se trouvent plus dans MVW_v10/build/sdk/SIM_Data, mais dans MVW_V10/build/Data
            => Nouvelle arborescence
                    scipio.xml
                    data/
                        Armements.xml   
                        Automates.xml   
                        Composantes.xml 
                        Decisionnel.xml 
                        Dotations.xml               
                        IDClasses.xml               <== Uniquement les IDs de classes utilisés pour la communication MOS<->SIM
                        Lanceurs.xml    
                        Meteo.xml       
                        NBC.xml         
                        Objets.xml      
                        ODB.xml         
                        Pions.xml       
                        Protections.xml 
                        Reseau.xml      
                        Sante.xml       
                        Senseurs.xml    
                        Volumes.xml     
                        Terrain/                    
                                Terrain.xml         <== NB : Le fichier scipio.xml peut réferencer un fichier terrain.xml situé à n'importe quel endroit du disque
                                *.dat
                                *.txt
                        Modeles/
                            Modeles.xml
                            Binaires/
                                        Files/
                                        Models/
                            Sources/                      
                                    Common/
                                            Moteur/
                                                    Types.hal                   
                                                    Types_Actions.hal           
                                                    Types_Entites.hal           
                                                    Types_Enums.hal             
                                                    Types_Enums_Generated.hal   
                                                    Types_Missions_Automate.hal 
                                                    Types_Missions_Pion.hal     
                                                    Types_Objet.hal             
                                                    Types_Ordres.hal             
                                                    Types_OrdresConduite.hal    
                                                    Types_PathFind.hal          
                                                    Types_RC.hal                
                                                    Workspace.hal              
                                                    Functions/Automates.hal
                                                            AutomatesASA.hal
                                                            Pions.hal
                                                            PionsALAT.hal
                                                            PionsINF.hal
                                                            PionsRENS.hal
                                                              
                                    Debug/...
                                    For Tests/...                                        
                                     
        - Modification scripts                                           
            => Nouvelle base de scripts, les fichiers se trouvant dans Common/Moteur ne peuvent être modifiés que par les développeurs
            => Les inclusions de scripts DIA prennent maintenant Data/Modeles/Sources comme reference : les inclusions auront donc la forme 
                    include "Common/Moteur/Types.hal et non plus 
                    include "DEC/Common/Moteur/Types.hal"
            => Renommage et normalisation des types de base
                    - Tous les types 'listes' ont été renommés en T_ListeXXX
                    - T_ListeItineraire => T_ListeListePoints
                    - T_PionCont => T_ListePions
                    - T_OrdresConduiteCont => T_ListeOrdresConduite
                    - T_Liste_Objet => T_ListeGenObjets
            => Les types T_Pion et T_Automate sont 'privés' pour les développeurs (histoire d'éviter les questions du genre "c'est un paramètre du moteur ou des scripts ?"
                    -> Vous devez creer un type T_PionScript héritant de T_Pion, duquel hériteront tous les types spécifiques (T_Pion_SectionINF ...)
            => Actions : 
                    - Les fonctions DEC de démarrage des actions (DEC_StartXXX) renvoient maintenant un 'UserType' de type T_Action
                    Toutes les fonctions DEC de gestion des actions sont désormais de la forme
                            U /*T_Action*/ DEC_StartXXXX( I /*E_EtatActionXXX*/, ....... ) 
                        => Il n'est plus nécessaire de donner 'myself' en 1er paramètre
                        => Le premier paramètre est toujours la valeur de retour de l'action, les énumérations étant définies dans Common/Moteur/Types_Actions.hal
                    - Le type T_Action doit être utilisé dans les fonctions : 
                            V DEC_StopAction     ( U )
                            V DEC_PauseAction    ( U )
                            V DEC_ReprendreAction( U )
                        => Il n'y a plus de fonctions Stop/Pause/Resume spécifiques par type d'actions       
            => Missions
                    - Les types de missions T_Mission_Pion_XXXX sont désormais généré par un outil, à partir des fichiers ASN
                        => Les noms des paramètres des missions sont maintenant calqués sur ceux provenant de l'ASN
                                (=> nom asn débile = nom de paramètre dans les scripts débile ...)
                        => Pour l'instant, tous les types 'enumeration' de l'ASN sont convertis en type générique 'id' dans 
                                les types DirectIA
            => Séparation PC / Automate totale
                    - Le type T_Automate n'hérite plus de T_Pion 
                        => ATTENTION AUX FONCTIONS DEC QUI PRENAIENT INDIFFEREMENT UN PION OU UN AUTOMATE
                        => ATTENTION AUX RCS QUI PRENAIENT INDIFFEREMENT UN PION OU UN AUTOMATE
                    - Il y a donc 2 modeles decisionnels, un pour le pion, un pour l'automate (Cf. automates.xml)                    
                    - L'automate doit donner des missions à son pion PC
                    - NB : la séparation PC / Automate ne transparait pas au niveau de MOS                             
            => Suppression de pleins de champs dans T_Pion / T_Automate, remplacés par des fonctions DEC
            => Gestion du renfort
                    - La catégorie DIA 'renforts' n'existe plus, et est remplacée par une fonction DEC_Renforts
       
        - Fonctionnalités moteur
            => Refactoring global
                - Nouvelles données => nouvelles hiérarchie de classes, plus claire
                - Plus d'énumerations
                - Prise en compte de la future intégration de HLA
                    -> Roles avec interface 
                    -> Agents abstraits manipulés lors des interactions
                - Séparation déclencheurs d'actions / execution d'actions / application des effets des actions
            => Gestion du renfort
                    - Les composantes d'un pion renforcant ne sont plus transférées dans le pion renforcé
                        => les 2 pions ont bien leur 'vie' propre, et le renfort n'a d'impact que :
                            - Dans le déplacement : la position du renforcant est toujours celle du renforcé
                                                    les vitesses de déplacement sont calculées par rapport à l'aggrégat renforcé/renforcants
                            - Dans la gestion des objets : Temps de construction/destruction/XXX cumulés
            => Séparation PC / Automate (2 modèles décisionnels)
            => Gestion des actions
            => Perception
                - Refonte de l'algo de perception (optimisations)
            => Tir
                - Refonte de l'algo de tir direct (Choix des couples de composantes tireur<->cible)
                - Un même armement peut maintenant faire du tir direct et du tir indirect
                - Les temps de rechargement des armements sont globaux à l'armement            
            => Dotations
                - Toutes les dotations ont maintenant un type global (carburant/munition/mine ...) et une categorie (balle classique 12.7 ...)
                - Nouvelle gestion des consommations (4 modes : a l'arret moteur eteint / a l'arret moteur allume / en deplacement / en travaux)
                - Système de reservation interne des dotations            
            => Objets            
                - Les types de dotations consommés pour la création / valorisation des objets sont spécifiés dans les données            
            => NBC
                - Les effets NBC sont maintenant appliqués quand la combinaison NBC est mise (coef de déplacement / de temps de rechargement)
                    et non plus quand l'agent est contaminé par un agent NBC
            => Emarquement / débarquement
                - Séparation de l'action 'embarquer' de 'attendre les transporteurs'
                
        - Réseau
            => Découpage du message DIN d'init initial            
                - Msg d'init contenant uniquement les paramètres globaux SIM<->MOS_Light
                - Un message spécifique pour chaque agent
                - Un message spécifique pour chaque groupe de connaissance
                - Un message spécifique pour chaque armée
            => ASN
                - Envoi de l'état de l'activation du mode 'furtif'
                - Envoi de l'état 'en renfort de XXX', en plus de l'état 'renforcé par XX, YY'
                - Certains paramètres du message d'attributs des unités sont passés de DEFAULT à OPTIONAL

        - Fonctionnalités manquantes (elles seront toutes ajoutées en priorité, sauf la log et la sauvegarde)
            - Heliportage
            - Detection tirs indirects
            - Controle de zone
            - Perception sur zone/localisation
            - Detection ALAT  
            - Fumigènes
            - Surement de nombreuses fonctions DEC (cf. séparation PC/Automate ...)
            - Logistique        
            - Sauvegarde


        - DEC : 
            - Tous les types 'listes' ont été renommés en T_ListeXXX
            - T_ListeItineraire => T_ListeListePoints
            - T_PionCont => T_ListePions
            - T_OrdresConduiteCont => T_ListeOrdresConduite
            - T_Liste_Objet => T_ListeGenObjets
            - T_Tache_CalculLignesAvantArriere => T_CalculLignesAvantArriere                
            - E_EtatChemin => E_EtatCalculItineraire  
            - E_PerceptionPion => E_NiveauPerception
            - Fonctions DEC : 
                    En instance de suppression 
                        DEC_PositionTranslate
                        DEC_PositionTranslateDir
                        DEC_DureePasDeTemps
                        DEC_ConnaissanceAgent_EstPercuParGroupeDeConnaissance ?? (anciennement DEC_ConnaissanceAgent_EstPercuParGTIA)
                        DEC_Perception_DistanceMax
                    
                    Supprimées
                        DEC_PositionCouranteItineraire
                        DEC_PositionSurItineraire
                        DEC_PositionProcheSurItineraire
                        DEC_AireEffet
                        DEC_ConnaissanceAgent_UniteReelle
                        DEC_StartCreerZoneImplantation et ses copines
                        DEC_ObtenirAutomatesMeleeGtia      
                        DEC_Dotation                         <= A REFAIRE
                        DEC_MunitionTirDirect;               <= A REFAIRE
                        DEC_MunitionTirIndirect              <= A REFAIRE
                        DEC_TransformePointEnCarre   
                        DEC_Perception_DistanceMax
                        DEC_EstDetruit
                        DEC_EstTransporte
                        DEC_DispositifDir
                        DEC_DispositifPt
                        DEC_ItineraireCourant
                        
                    Renommées                      
                        DEC_PositionTranslate               => DEC_Geometrie_PositionTranslate              
                        DEC_PositionTranslateDir            => DEC_Geometrie_PositionTranslateDir           
                        DEC_PositionsEgales                 => DEC_Geometrie_PositionsEgales                
                        DEC_Distance                        => DEC_Geometrie_Distance                       
                        DEC_ConvertirPointEnLocalisation    => DEC_Geometrie_ConvertirPointEnLocalisation   
                        DEC_LocalisationsEgales             => DEC_Geometrie_LocalisationsEgales            
                        DEC_DetruirePoint                   => DEC_Geometrie_DetruirePoint
                        DEC_DetruireLocalisation            => DEC_Geometrie_DetruireLocalisation      
                        DEC_DetruireListeLocalisations      => DEC_Geometrie_DetruireListeLocalisations
                        DEC_CreerListePoints                => DEC_Geometrie_CreerListePoints          
                        DEC_CreerVecteur                    => DEC_Geometrie_CreerPoint              
                        DEC_CreerDirection                  => DEC_Geometrie_CreerDirection            
                        DEC_DetruirePoint                   => DEC_Geometrie_DetruirePoint             
                        DEC_DetruireListePoints             => DEC_Geometrie_DetruireListePoints       
                        DEC_GetPointInList                  => DEC_ListePoints_GetAt
                        DEC_GetSizeList                     => DEC_ListePoints_Size   
                        DEC_PushBack                        => DEC_ListePoints_PushBack
                        DEC_Remove                          => DEC_ListePoints_Remove        
                        DEC_ObtenirBarycentre               => DEC_Geometrie_CalculerBarycentreAgents
                        DEC_Agent_PasserEnModeDiscret       => DEC_Agent_ActiverModeDiscret
                        DEC_Agent_AnnulerModeDiscret        => DEC_Agent_DesactiverModeDiscret
                        DEC_ConnaissanceAgent_NiveauPerceptionMaxGTIA => DEC_ConnaissanceAgent_NiveauPerceptionMax
                        DEC_ConnaissanceAgent_EstPercuParGTIA => DEC_ConnaissanceAgent_EstPercuParGroupeDeConnaissance
                        DEC_Perception_EstVisible           => DEC_Perception_PointEstVisible
                        DEC_VisionDir                       => DEC_Perception_VisionVerrouilleeSurDirection
                        DEC_VisionCur                       => DEC_Perception_VisionVerrouilleeSurPoint
                        DEC_VisionPt                        => DEC_Perception_VisionNormale
                        DEC_CalculerPositionXXX             => DEC_Geometrie_CalculerPositionXXX
                        DEC_DecoupeLocalisation             => DEC_Geometrie_DecoupeLocalisation
                        DEC_EstDansMonFuseau                => DEC_Geometrie_EstPointDansFuseau
                        DEC_EstEmbraye                      => DEC_Agent_AutomateEstEmbraye
                        DEC_Perception_StartCoupsDeSonde    => DEC_Perception_ActiverCoupsDeSonde
                        DEC_Perception_StopCoupsDeSonde     => DEC_Perception_DesactiverCoupsDeSonde
                        DEC_ChangeEtatRapportDeForce        => DEC_Agent_ChangeEtatRapportDeForce      + DEC_Automate_ChangeXXX
                        DEC_ChangeEtatROE                   => DEC_Agent_ChangeEtatROE                 + DEC_Automate_ChangeXXX 
                        DEC_ChangeEtatMunitions             => DEC_Agent_ChangeEtatMunitions           + DEC_Automate_ChangeXXX
                        DEC_ChangeEtatSante                 => DEC_Agent_ChangeEtatSante               + DEC_Automate_ChangeXXX
                        DEC_ChangeEtatCombatDeRencontre     => DEC_Agent_ChangeEtatCombatDeRencontre   + DEC_Automate_ChangeXXX
                        DEC_ExtrapolerPosition              => DEC_Itineraire_ExtrapolerPosition
                        DEC_EtatItineraire                  => DEC_Itineraire_Etat
                        DEC_CalculeDistanceLigneMoyenne     => DEC_Geometrie_CalculeDistanceLigneMoyenne
                        DEC_StartCalculLignesAvantEtArriere => DEC_Geometrie_StartCalculLignesAvantEtArriere  
                        DEC_StopCalculLignesAvantEtArriere  => DEC_Geometrie_StopCalculLignesAvantEtArriere   
                        DEC_CalculeDistanceLigneAvant       => DEC_Geometrie_CalculeDistanceLigneAvant        
                        DEC_CalculeDistanceLigneArriere     => DEC_Geometrie_CalculeDistanceLigneArriere      

                    Renommées et/ou changement de paramètres      
                        * U DEC_CreerVecteurPerpendiculaire( U /* T_Point src */, U /* T_Point dest */, R /*norme*/ );
                            => U/*T_Direction*/ DEC_Geometrie_CreerVecteurPerpendiculaire( U /* T_Point src */, U /* T_Point dest */ );
                        * I DEC_Itineraire_Id( U /* itineraire */);
                            => X DEC_ItineraireToString( U /* itineraire */);
                        * DEC_Trace() => suppression du premier paramètre
                        * DEC_CalculeDistanceLigneMoyenne( S /*T_ListePions*/ ) => DEC_Geometrie_CalculeDistanceLigneMoyenne  ( S /*T_ListePions*/, A /*T_Pion reference*/ );
                        * DEC_Geometrie_CalculeDistanceLigneAvant : ATTENTION, le deuxieme paramètre EST un pion, PAS UN AUTOMATE !!
                        
                    Nouvelles                  
                        DEC_Geometrie_DetruireDirection
                        DEC_Automate_PionsAvecPC
                        DEC_Automate_PionsSansPC
                        DEC_Automate_PionPC
 
Version 0.69.10 [13/08/2004]
    - NLD/JVT - Bug fix : Bug path find, dans le cas des chemins partiels : le point de départ n'était jamais considéré
                comme étant le chemin partiel le + intéressant (=> oscillations + fussoirs)

Version 0.69.9 [10/08/2004]
    - NLD - Release faite uniquement car la 0.69.8 n'était pas débuggable (DIA)

Version 0.69.8 [04/08/2004]
    - NLD - Bug fix : Bug dans l'envoi des pourcentages des objets réels à MOS
    - NLD - Bug fix : Le paramètre 'ID Objet planifié' de certaines missions GEN (celles liées aux sites de franchissement notamment)
                    était mal géré (=> Crash ...)
    
Version 0.69.7 [03/08/2004]
    - NLD - Bug fix : Les paramètres des RCS 'Reussite renforcement' et 'Echec renforcement' remontés à MOS étaient invalides
    - NLD - ADN - Bug fix : il n'était pas possible de spécifier les paramètres nécessaires à la chaine maintenance, dans les
              composantes (la section 'NTI'), donc la maintenance ne pouvait pas marcher quand les données provenaient d'ADN ...
    
Version 0.69.6 [30/07/2004]
    - NLD - ADN - Bug fix : les valeurs 'AlerteAvantRavitaillement' étaient toujours fixées à la valeur '10' (!)
    - NLD - Bug fix : Les attributs spécifiques des sites de franchissement n'étaient pas pris en compte dans le cadre 
                des actions magiques de création d'objets.  
    - NLD - Bug fix : Pb dans la gestion des ID 'MOS planifiés' dans le cadre de la gestion des objets (pb de précision
                du à l'utilisation des floats dans DirectIA pour stocker les valeurs numériques)
                    => Un nouveau user type 'T_ID' a été crée
                    => Les paramètres de mission 'mos id planifié' ont été remplacés par ce user type
                    => Ajout d'une globale 'gNullID' à utiliser quand l'ID planifié n'est pas spécifié
             => MOS_Light affiche désormais la valeur de cet ID (Il est possible de le paramètrer dans le cadre des missions automates)

Version 0.69.5 [15/07/2004]
    - NLD - GEN - Bug fix : Crash quand aucune libraire VMAP n'était spécifiée
            => + A la première init, toutes les librairies disponibles dans le répertoire VMAP spécifié sont automatiquement incluses
    - NLD - Bug fix : Destruction inopinée de la connaissance (visible notamment dans la mission jalonner de l'ALAT)
                => Due à la destruction quand 'on voit qu'une connaissance n'est pas là ou l'on croit qu'elle est', quand la posture
                   de la source a changé
                => La destruction de la connaissance dans ce cas ne se fait pas quand la connaissance et l'unité réelle associée se 
                   trouvent à la même position

Version 0.69.4 [12/07/2004]
    - JVT - Lors de tir fumigène, si la position de lancement du fumigène est celle du pion, on prend un angle par défaut vers le nord
    - NLD - Les fonctionnalités (!) 'covert obs' ont été définitivement virées (y compris les flags du path find)
    - NLD - Bug fix : L'attribut spécifique au nuage NBC 'agent chimique' n'est connu que quand une unité NBC percoit ou entre en collision
            avec le nuage NBC. (Dans les versions précédentes, cet attribut était connu quand n'importe quelle unité entrait en collision avec
            le nuage)
    - NLD - Bug fix : l'assert '!bIsFinished' dans DEC_Task_ABC a été virée => nettoyage des DEC 'tasks'
    - NLD - Les métadatas des checkpoints (nom de la sauvegarde) sont maintenant sauvegardées dans un fichier séparé, afin d'éviter les
            pb de perfs au niveau du launcher, quand il y a trop de sauvegardes.
    - NLD - Pour la 0.4, et pour éviter les crashs, la gestion des lignes de début/fin de mission est désactivée si une seule de 2 lignes
            est spécifiée
    - NLD - ADN - Bug fix : Les 'sites de franchissement' n'étaient pas éditables

Version 0.69.3 [08/07/2004]
    - NLD - Bug fix : Le 'remove' du radar (DEC_Perception_StopRadar()) ne fonctionnait pas
    - NLD - Bug fix : Dans certains cas, le path find retournait 'impossible' à la place de 'partiel'
    - NLD - ADN - Bug fix : La saisie des coefficients 'CoefModificationVitesseMax' et 'CoefModifiationTempsRechargement' était invalide

Version 0.69.2 [07/07/2004]
    - NLD - ADN : il est maintenant possible de saisir des PH < 1 (ou contenant des décimales ...)
    - NLD - Bug fix : Inversion des fonctions DEC_PosDeploiementMistralOmniPointItineraire() et DEC_PosDeploiementMistralUniRideau()
    - NLD - Bug fix : Oubli d'un point renvoyé dans la fonction DEC_PosDeploiementMistralOmniPointItineraire()
    - NLD - Bug fix : Tous les comptes rendus prenant un paramètre de type T_Pion renvoyait l'ID '1' à MOS à la place de l'ID réel 
                      du pion
    - NLD - MOS_Light : Les localisations des connaissances objets sont affichées

Version 0.69.1 [05/07/2004]
    - NLD - Bug fix : Crash de la SIM si les liens hiérarchiques d'un TC2 pointent sur une BSD n'existant pas
    - NLD - Mise à jour des 'IDClasses' des types 'NuageNBC' et 'EffetsTirs'
    - NLD - MOS_Light - Bug fix : Il n'était plus possible de créer des nuage nbc par action magique
    - NLD - Bug fix : Correction du pb du path find ne permettant pas de sortir d'un fleuve ...
   
Version 0.69 [02/07/2004]
    - NLD - Modification du fonctionnement de la prise en compte des fuseaux du path find
                Si le chemin demandé doit respecter le fuseau et que le pion n'est pas, initialement, dans son fuseau, 
                un point de passage permettant de rejoindre le fuseau est automatiquement ajouté
    - JVT - Bug fix : Chargement des sommes d'humains dans l'unité lors d'un redémarrage sur sauvegarde
    - NLD - ADN : il est maintenant possible de saisir des modificateurs de PH < 1 (ou contenant des décimales ...)
    - NLD - Bug fix : Modification du code de MT_Vector2D pour éviter les divisions par 0 dues à des pbs de précision
    - AGN/NLD - ADN - Bug fix : Plus de crash quand load => erreur => load 
    - NLD - Le crash catcher ne catche plus que les exceptions DIA, en debug 
                => Les crashs 'anormaux' ne sont plus catchés, afin que l'on puisse les débugguer

Version 0.68.2 [01/07/2004]
    - JVT - Correction de la prise en compte des états opérationnels des composantes lors des reprises
    - NLD - En debug, un assert() est lancé qd un comportement/action DIA 'oublie' de stopper une reco qu'il a démarrée               
    - NLD - L'option '-nocoredump' est devenue '-coredump'
    - NLD - Bug fix : Lorsqu'un objet était détruit, les agents se trouvant à l'intérieur n'étaient pas avertis
               => Lorsqu'une zone génie était détruite, la posture des pions se trouvant à l'intérieur étaient bloqués 
                  à 'zone protégée génie'
    - NLD - Des informations de profiling sont affichées à chaque tick

Version 0.68.1 [30/06/2004]
    - NLD - Le CrashCatcher(tm) est à nouveau actif en debug ...

Version 0.68 [29/06/2004]
    - JVT - Les zones de contrôle peuvent désormais prendre en compte plusieurs taille de cibles.
            <PourcentagesTirParHumainParHectare>
                <Pourcentage volume="Petit">10</Pourcentage>
                <Pourcentage volume="Personnel">20</Pourcentage>
            </PourcentagesTirParHumainParHectare>
            <CategorieMunition>ArmeIndividuelle</CategorieMunition>
    - JVT - Nouveau mode de tir direct ( eTirReduit ) permettant de tirer avec 75% des composantes.
    - JVT - Modification de la signature de DEC_Perception_StartRadar :
                V A::( R, I ) => V A::( R, I, I )
            La valeur ajoutée correspond au niveau de détection voulu dans l'enum E_PionIdentification ( j'ai repris l'enum existante )
    - NLD - Bug fix ASN : Il n'était pas possible d'avoir plus de 255 humains dans une catégorie
    - NLD - Modification fonctionnement de la prise en compte des fuseaux du path find : le cout des noeuds hors fuseau n'est plus
                infini, mais fixé à une valeur très élevée 
                    => Le path find pourra passer par des noeuds hors fuseau, s'il n'y a pas d'autres possibilité

Version 0.67 [28/06/2004]
    - NLD - La fonction 'DEC_CalculerPositionObstacle()' renvoit le centre du cercle demandé, si aucune position ne peut être trouvée
    - NLD - ADN - Bug fix : Mauvais tag lu/écrit pour les emports en munition des pions LOG : tag "contenance" au lieu de "capacite"
    - NLD - MOS_Light - Bug fix : Mauvais affichage lors de la réception du CR 'PreparationMission'
    - NLD - Modification de la gestion de l'envoi des itinéraires de la SIM => MOS
                Avant, les itinéraire étaient envoyés à la fin du calcul 
                    => L'itinéraire courant, dans MOS, était l'itinéraire calculé en dernier
                Maintenant, c'est l'itinéraire courant réel qui est envoyé, lorsque le pion se déplace rééllement sur 
                    un itinéraire.
    - NLD - Le RC 'en cours de franchissement' est maintenant envoyé automatiquement quand une unité franchit un pont flottant
    - NLD - ASN
             * Renommage CR-AttenteReconaissanceTerminee en CR-AttenteReconnaissanceTerminee
             * MsgLimitCreation : le niveau possède une valeur par défaut
             * Unification des énumérations de tirs (tir libre / restreint / interdit)
             * Utilisation du type 'Direction'
    - NLD - Bug fix : La direction d'une connaissance est maintenant la direction instantanée de l'unité, et non plus la direction globale
    - JVT - Ajout de comptes rendus pour la log :
            - eRC_DemandeEvacuationSanitaire lorsque des humains sont blessés dans une unité
            - eRC_DemandeEvacuationMateriel lorsqu'un matériel passe en réparable avec évacuation
            - eRC_DepartConvoiVersUnite lorsqu'un convoi part de la BSD vers un TC2
            - eRC_ArriveeConvoiVersUnite lorsque ce convoi arrive
            - eRC_CapaciteJournaliereAtteinte lorsque les capacités max sont atteinte ( chaine maintenance TC2 et chaine santé BSD )

Version 0.66 [24/06/2004]
    - JVT - Bug Fix : Etat Embarquement/Debarquement de l'infanterie lors d'un recompletement
    - NLD - MOS_Light - La formation par défaut pour les missions automates est "deux échelons" à la place de "un échelon"
    - JVT - Bug Fix : Recomplètement en matériel réécrit pour prendre en compte les composantes encore utilisées
    - NLD - Nouveaux RCS : 
                eRC_PreparationMission                       
                eRC_DebutMission 
                eRC_FinMission   
                eRC_Automate_PriseContact    
                eRC_Automate_RuptureContact  
                eRC_PretAJalonner            
                eRC_DispositifInstalle       
                eRC_EnPosition               
                eRC_ObjectifAtteint          
                eRC_DemandeAppui             
                eRC_PionBloque                           
                eRC_FuseauRejoint                        
                eRC_Debouche                             
                eRC_AlerteNBC                            
                eRC_PlotDecontaminationAnime             
                eRC_PlotDecontaminationDesactive         
                eRC_DemandeDecontamination               
                eRC_EnContournementObstacle              
                eRC_EnControleZone  
                eRC_EnSurveillance  
                eRC_EnInfiltration  
                eRC_EnExfiltration  
                eRC_AttenteConditionFavorablePourInfiltration 
                eRC_ReceptionOrdreDeFeu
                eRC_PretAuTir
                eRC_DemandeEvacuationSanitaire
                eRC_DemandeEvacuationMateriel
                eRC_CapaciteJournaliereAtteinte
                eRC_EnCoursDeFranchissement
                eRC_ItineraireRetabli
                eRC_RenforcementBientotFini
            Renommage RCs 
                eRC_PriseContact    => eRC_Pion_PriseContact    
                eRC_RuptureContact  => eRC_Pion_RuptureContact  


Version 0.65 [23/06/2004]
    - JVT - Modification de la signature de DEC_StartReconnaissance : A, U => A. Maintenant, la fonction utilise le fuseau pour déterminer
            la zone de détection.
    - JVT - Suppression de la fonction DEC_TranslateItineraire
    - JVT - Reecriture de la perception de reco HR ( ajout d'une perception délayée )
    - NLD - Nouvelles fonctions DEC pour l'ASA MISTRAL 
                V A::DEC_PosDeploiementMistralOmniPointVulnerable( U /*T_Localisation*/, R /*distance côté*/, U /*out T_Point*/, U /*out T_Point*/, U /*out T_Point*/ );
                V A::DEC_PosDeploiementMistralOmniPointItineraire( U /*T_Localisation*/, R /*distance côté*/, R /*distance translation*/, U /*out T_Point*/, U /*out T_Point*/, U /*out T_Point*/ );
                V A::DEC_PosDeploiementMistralUniRideau          ( U /*T_Localisation*/, R /*distance côté*/, U /*out T_Point*/, U /*out T_Point*/ );
                V A::DEC_PosDeploiementMistralUniNasse           ( U /*T_Localisation*/, R /*distance côté*/, R /*distance translation*/, U /*out T_Point*/, U /*out T_Point*/, U /*out T_Point*/ );
    - NLD - Bug fix : La copie de localisation lors des releves était mauvaise => Crash/assert aléatoire
    - NLD - Modification missions RENS : 
                * Fusion des missions RenseignerSurXXX en une seule mission RenseignerSur (pour les pions et les automates)
                * Suppression des missions :
                        MIL_PionMission_RENS_DetecterLesMobilesDansUneZone
                        MIL_PionMission_RENS_TraiterInformations
    
Version 0.64 [21/06/2004]
    - NLD - Synchronisation du nommage d'un enum entre ASN et SIM (météo)
    - NLD - Bug fix : Crash lors de la création d'un nuage NBC par action magique
    - JVT - [ type.xml ] Modification de la définition des CapaciteEmport dans le cas des dotations de type Munition et uniquement 
            pour les PIONS LOG ( ne concerne pas ni les automates TC2 ( même syntaxe qu'avant ), ni les Automate LOG BSD ( qui n'ont
            jamais eu de capacité d'emport ) ) : 
             <CapaciteEmport> 
               <Emport type="Carburant">2000</Emport> 
               <Emport type="munition"> 
                  <Capacite>4000</Capacite> 
                  <Categories> 
                     <Categorie>Obus</Categorie> 
                     <Categorie>Mine</Categorie> 
                     <Categorie>Fumigene</Categorie>
                     <Categorie>Mitraille</Categorie> 
                  </Categories> 
               </Emport> 
             </CapaciteEmport>

Version 0.63 [21/06/2004]
    - NLD - Bug fix : Quicherie dans la mission Pion_RENS_RenseignerSurUnObjectif
    - NLD - Nettoyage ASN : Déplacement d'attributs de MsgUnitDotation => MsgUnitAttributes

Version 0.62 [18/06/2004]
    - JVT - Ajout d'une méthode d'enregistrement global des nouvelles missions dans MIL_OrderManager_ABC
    - NLD - Nouvelles missions
                Mission-Automate-ASA-DefendreUnite
                Mission-Automate-ASA-DefendreSiteMISTRAL
                Mission-Automate-ASA-DefendreZoneMISTRAL
    - NLD - Nouveaux RCs
                Reussite Renforcement
                Echec Renforcement
    - NLD - Ordres de conduite : (Automate_ChangerDePosition renommé en Automate_ChangerDePositionPour)
                NEW   : Automate_ChangerDePositionPour
                MODIF : Automate_ChangerDePosition
                DEL   : Automate_Demande_AppliquerLesFeux

Version 0.61.4 [18/06/2004]
    - JVT - GEN - Les répertoires des CDs VMap ne sont plus en durs ( interface de load/unload de CDs dans Directory )
    - NLD - Les connaissances des pions possédés par le GTIA ne sont plus envoyées à MOS
    - NLD - Modifications dans la gestion des lignes de début de mission / lignes de fin de mission
             => Devrait affiner le choix du fuseau quand une seule des 2 limas est donnée
    - NLD - ADN - Renommage de l'ordre de conduite 'Transmettre' en 'Emettre'
    
Version 0.61.3 [16/06/2004]
    - NLD - Bug fix : Les 2 fonctions de calculs des positions de sureté (avec ou sans objectif) buggaient quand les positions Ami/Ennemi et/ou Objectif
             se chevauchaient
                - Pour la position de sureté sans objectif : qd position AMI == position ENI, la position renvoyée utilise la direction dangereuse
                - Pour la position de sureté avec objectif : qd position ENI == position OBJ, la position renvoyée est celle de l'objectif (à voir ...)
    - NLD - Bug fix : Mauvais enregistrement des missions pion ASA 

Version 0.61.2 [15/06/2004]
    - NLD/AGN - ADN - Mise à jour : prise en compte du fichier DEC/Config.xml
    - NLD - ADN - Nettoyage / corrections dans la table de translation
    - NLD - Bug fix : La fonction calculant l'angle entre 2 vecteurs pouvait renvoyer une valeur invalide (Notamment quand
                l'angle entre les 2 vecteurs vaut 0), à cause de problèmes de précision.
    - NLD - Lorsqu'un automate crée une mission pour un pion, les paramètres suivants sont copiés de la mission automate à la mission pion:
                * Direction dangereuse
                * Lima
                * Fuseau
             NB : Après la 0.4, la gestion de l'affectation du fuseau sera revue. Notamment, la fonction MRT_AffectFuseau ne devra plus 
                  être appelée avant la création des missions pion (DEC_MRT_CreePionMission)

Version 0.61.1 [15/06/2004]
    - JVT - Bug fix : Constucteur de la zone de contrôle ( INF )
    - JVT - Modification de la signature de l'action de contrôle de zone : Ajout d'un paramètre de retour en dernière position ( booléen
            signifiant si l'action a effectué un tir lors de sa dernière évaluation )
    - NLD - Bug fix : Erreur dans le lancement de l'ordre de conduite 'emettre'
    - NLD - Bug fix : Le calcul de la distance de tir 'quand débarqué' était faux (ne tenait justement pas compte des composantes débarquables ...)
    
Version 0.61 [14/06/2004]
    - NLD - Modification fonctionnement action sur les objets <-> connaissances objet 
                => Quand un agent détruit un objet, la connaissance associée est détruite, même si l'agent
                    n'a pas l'objet en visu
                => Quand un agent essaye d'exécuter une action sur une connaissance valide, mais pointant sur
                    un objet qui a été détruit (l'agent ne sais pas que l'objet n'existe plus), cette connaissance
                    est détruite automatiquement, même si l'agent n'a pas l'objet en visu pendant l'execution de
                    l'action.
    - JVT - Prise en compte correcte des états actifs et réparables d'une composante dans :
                PHY_UnitCanTransport_ABC::GetLoadSpeed
                PHY_UnitCanTransport_ABC::GetUnloadSpeed
                PHY_UnitCanTransport_ABC::GetMaxU
                PHY_UnitCanTransport_ABC::GetCarriers
                PHY_UnitCanLoadUnload_ABC::ToLoadedState
                PHY_UnitCanLoadUnload_ABC::ToCarriedState
                PHY_UnitCanLoadUnload_ABC::ComposanteStateChanged
            Notamment : il n'est plus possible d'utiliser une composante endommagée comme transporteur
    - JVT - Nouvelle fonction DEC sur les section infanterie :
                B A::DEC_TransporteurDisponible()
    - JVT - Bug fix : Les secteurs de détection ne sont plus attachés à la position de l'unité mais à la composante les détenant
            ( posait des problèmes de détection lors de prêts de composantes ( LOG ) )
    - JVT - Modification de l'enum DIA E_ResultatTransfertComposante ( ajout de eTransfertEnDeplacement = état de l'action lorsque les
            composantes sont en déplacement vers l'unité de prêt )
    - JVT - Les composantes en prêt ( LOG ) ne sont plus prêtées instantanément, mais après un déplacement du pion de prêt vers le pion
            emprunteur.
    - JVT - Suppression des multiples instances de ComputeTravelTime ( unifiées dans MIL_Tools )
    - JVT - Nouvelle fonction DEC sur les pions LOG et les automates LOG TC2 :
                R A::DEC_LOG_EtatStock( * /* rien ou liste de E_TypeDotation */ );
            Renvoi le rapport des U de tous les types de stocks listé sur la capacité max en U des stocks listés du pion.
    - JVT - Les effets de l'action de contrôle de zone ne sont plus appliqués aux unités du même camp que celui qui a instancier l'action
    - JVT - Enregistrement de DEC_ALAT_AlerteRavitaillement sur les automates ALAT.
    - NLD - Bug fix : Crash lors de la détection des tirs indirects
    - NLD - Bug fix : Les composantes non actives (i.e. les composantes débarquables embarquées) étaient prise en compte lors de la détermination de la composante majeure d'une unité
    - NLD - Nouveau fichier de configuration : DEC/Config.xml, permettant de paramètrer :
                * La dégradation de la pertinence des connaissances
                * L'impact de la pertinence, de l'état ops, de la neutralisation sur la dangerosité
                * Les poids des composantes majeures et non majeures dans le calcul de l'état opérationnel

Version 0.60 [08/06/2004]
    - NLD - Nouvelle fonction DEC
                U A::DEC_CalculerPositionSureteAvecObjectif( U /*T_ConnaissanceAgent*/, R /*distance min*/, U /*T_Point objectif*/, I /*E_ValiditeRequete&*/ );
                    Le point renvoyé tient compte de l'objectif : il est placé sur le vecteur coupant en 2 le secteur formé par [AMI, ENI, Objectif] de centre ENI.
                    , et à "distance min" de distance de l'ENI
    - NLD - Bug fix : La fonction de découpage de localisation était buguée quand il fallait découper en un seul morceau        
    - NLD - Bug fix : L'ordre de conduite 'Pion Changer de Position' ne pouvait pas être donné d'un automate à un pion
    - JVT - Bug fix : Crash dû à l'affichage de la log (maintenance) lorsqu'une composante est détruite avant son remorquage
    
Version 0.59 [07/06/2004]
    - JVT - Nouveau type d'obus indirect :
            XML           : Mine
            PHY           : eIAC_ObusMine ( E_IndirectAmmoCategory )
            ASN           : mun-obus-mine ( Mission-Pion-ASS-AppliquerFeux )
            DIA           : eObusMine     ( E_TypeObus )
            MOS/IDClasses : <Ressource CodeEMAT6="" CodeEMAT8="" CodeLFRIL="" CodeNNO="" categorie="Mine" id="1544" name="munition"/>
    - JVT - Nouveau type de données dans attrition.xml pour les munitions de tir indirect créant des zones minées :
              <Munition type="Obus mine">
                <IdentifiantMOS>Mine</IdentifiantMOS>
                <Categorie>Mine</Categorie>
                <InterventionType>4</InterventionType>
                <VitesseMoyenne>200</VitesseMoyenne>
                <DemiLongueur>450</DemiLongueur>
                <DemiLargeur>300</DemiLargeur>
                <NombreMines>40</NombreMine>    
              </Munition>
    - JVT - L'action de tir indirect ( artillerie ) peut maintenant utiliser des obus créant une zone minée dispertion ( #423 )

Version 0.58.1 [07/06/2004]
    - AGN - [ ADN ] - Prise en compte du paramètre DureeCreationConvoi
    - NLD - Bug fix : Les 'avants points' et autres 'points intéressants' n'étaient plus insérés dans les itineraires
    - JVT - La perception 'reconnaissance d'un point' détecte aussi les objets sur ce point. ( #439 )

Version 0.58 [04/06/2004]
    - NLD - Nettoyage des fonctions de debug liées à DirectIA
    - NLD/JVT - Bug fix : Memory leak lors de la destruction des composantes
    - NLD - Bug fix : La fonction 'DEC_AffecterFuseau' fonctionne quand la liste passée en paramètre ne contient qu'un seul pion
    - JVT - Prise en compte correcte de la destruction des composantes source de tirs indirects ( obus, fumigène ou éclairant )
    - JVT - Changement de signature de DEC_INF_StartControlerZone :
                A, U, R => A, U, R, B
            Le dernier booléen représente l'autorisation de tir.
    - JVT - Nouvelle donnée dans log.xml : LOG::BSD::ChaineRavitaillement::Temps::DureeCreationConvoi en minutes
    - JVT - [ LOG MAIN ] Lors de l'arrivée du dernier camion du TC2 dans l'escadron de transport, il y a maintenant une temporisation
            de "création de convoi" avant que les camions ne reviennent vers le TC2.
    - NLD - Ajout d'un paramètre à la fonction DEC_ExtrapolerPosition() : 
                U A::DEC_ExtrapolerPosition( R /*Tps en minutes*/, B /* True = N'extrapole pas au dela du dernier point de l'itinéraire*/ );
            Le nouveau paramètre permet de 'borner' la position extrapolée
    - NLD - Nettoyage code : ajout de 'consts' dans la connaissance des objets            
    - NLD - MOS_Light - Bug fix : Pour les ordres de conduite Pion-RenforcerTC2EnVSRAM et Pion-ReprendreAuxOrdresVSRAM, il est maintenant
            possible de spécifier plus d'une ambulance (...)

Version 0.57 [03/06/2004]
    - JVT - Mise en place d'un mode furtif pour les pions et automates RENS ( par défaut, au démarrage, les unités RENS sont en furtivité
            totale, i.e. indétectable )
            [ PHY_Sensor::GetDetectProbability prend en compte le pourcentage de furtivité ]
    - JVT - Nouvelle fonction DEC sur les pions et les automates RENS :
            * V A::DEC_RENS_Furtivite( R )
            Le réel représente le pourcentage de furtivite ( [0;1] ) du pion
    - JVT - DEC_ALAT_Recompletement fonctionne maintenant en liaison avec les stocks du TC2 du GTIA des unités ALAT appelant.
    - JVT - Nouvelle fonction DEC sur les pions et les automates ALAT :
            * B A::DEC_ALAT_AlerteRavitaillement( U /* point de ravitaillement */, R /* temps de latence en minutes */ )
    - JVT - Les connaissances unité stockent la hauteur lors de l'update de la position
    - JVT - Prise en compte de la hauteur des pions volant lors du calcul de la hauteur des senseurs
            Rappel : pour la matrice de vision dans MOS_Light, la hauteur des points de destination de la matrice de vision
            est 2 m au dessus du sol... ça n'est et ça ne sera toujours qu'une approximation...
    - JVT - [ MOS_Light ] : Affichage de la hauteur des objets terrain pointés ( à côté de la position )
    - AGN - [ MOS_Light ] : Bug fix sur mission CreateMission_ASS_ReconnaitreZoneDeploiementCOBRA (paramètre itinéraire au lieu de pos)
    - JVT - Bug fix : Les valeurs de retour de la création d'itinéraire peuvent maintenant prendre toutes les valeurs de E_EtatChemin (#438)
    - JVT - Ajout d'une nouvelle section dans attrition.xml :
              <ZonesSpeciales>
                <ZoneControle>
                    <PourcentageTirParHumainParHectare>0.01</PourcentageTirParHumainParHectare>
                    <CategorieMunition>ArmeIndividuelle</CategorieMunition>
                    <CategorieVolume>Personnel</CategorieVolume>
                </ZoneControle>
              </ZonesSpeciales>
            Rappel : 1 Hectare == 10000m2
    - JVT - Création d'une nouvelle action ( PHY_ActionControl ) qui a les effets suivants :
            - Zone réellement prise en compte :
                Si la surface de la localisation est inférieure à la surface d'un cercle de rayon Dmax, alors la zone est la totalité de
                la localisation. Sinon, la zone est l'intersection entre la localisation et un cercle de centre le pion et de rayon Dmax
            - Detection dans la zone :
                Tout pion ennemi entrant dans cette zone est automatiquement reconnu
            - Attrition dans la zone :
                Lorsqu'un pion entrant dans la zone a des composantes de volume 'CategorieVolume', alors le ph appliqué est le ph
                'PourcentageTirParHumainParHectare' en proportion du nombre d'humain et de la surface réels du pion. L'attrition appliquée
                est celle d'une des munitions de type 'CategorieMunition' du pion appelant ( 1 salve par dT au max )
    - JVT - Ajout de nouvelles fonctions DEC sur les pions infanterie :
            * V DEC_INF_StartControlerZone( A /*myself*/ , U /*T_Localisation*/, R /*distance max en metres*/ );
            * V DEC_INF_StopControlerZone ( A );
    - JVT - [ LOG MAIN ] - Lorsqu'un remorqueur se déplace vers une composante et qui est détruite pendant son trajet, le remorqueur
            retourne tout penaud au TC2...
    - AGN - ADN - Bug fix : les données concernant les vitesses pour passer un obstacle contourné/non contourné étaient
                affichées inversées.
    - NLD - Bug fix : Erreur lors de la lecture de la mission Automate_ABC_FlancGarder
    - NLD - Ajout d'un paramètre 'Point' pour l'ordre de conduite "Pion ChangerDePosition"
    - NLD - Missions
                NEW :
                    - Automate_RENS_SExfiltrer
                    - Pion_RENS_SExfiltrer
                MODIFS:
                    - Mission-Pion-INF-Defendre
                    - Mission-Pion-INF-Interdire
                    - Mission-Automate-INF-DefendreFerme ::= SEQUENCE   
                    - Mission-Automate-INF-Tenir ::= SEQUENCE
                    - Mission-Automate-INF-DonnerCoupArret
                    - Mission-Automate-INF-Interdire
                    - Mission-Automate-INF-BarrerDirection
                    - Mission-Pion-BSD-SeDeployer
                    - Toutes les missions pion ALAT
                    - Toutes les missions RENS
    - NLD - MOS_Light : Le paramètre 'unite a appuyer' de la mission Pion_ASS_AcquerirDesObjectifs, normalement optionnel, 
                et donc normalement ignoré par MOS_Light, est désormais obligatoire (dans MOS_Light ...)

Version 0.56.1 [26/05/2004]
    - NLD - Bug fix : Pb lors de la lecture des vitesses par défaut dans les objets (ObjectTypes.xml) : les vitesses ne sont 
                pas contournées 
    - NLD - Bug fix : Les vitesses utilisées lors du contact avec un objet ne tenait pas compte de l'état contourné ou non de l'objet
    - NLD/JVT - Bug fix : Un bout de code de debug était resté, provoquant des déplacements magiques zarbis ...

Version 0.56 [26/05/2004]
    - JVT - Lorsqu'un pion ou un automate de type 3D ( Artillerie ) entre dans un plot de ravitaillement, alors toutes les dotations de
            l'unité sont recomplétées au max de ce que peut fournir le TC2 de cette unité.
    - JVT - Nouvelle fonction sur les pions et les automates ALAT : 
            * V A::DEC_ALAT_Recompletement()
    - AGN - ADN - Mise en place du mode d'édition : Normal ou Administrateur.
            Le mode d'édition se choisit à l'ouverture des fichiers mais peut être modifié en cours
            d'édition (Menu Projet).
            Pour le moment, les données exclusives au mode Administrateur sont:
                * les scores de placement des objets en fonction du terrain.
                * les distances d'arrêt avt point des unités.
                * les portées des coups de sonde des unités.
            Si vous identifiez d'autres données à mettre en mode mode Adminstrateur, merci de
            l'indiquer.
            Le mot de passe est oipics.
    - NLD - Nouvelle fonctions DEC
             U A::DEC_CalculePointDepart       ();
             S A::DEC_ObtenirAutomatesMeleeGtia();
             B DEC_Nuit();
             U DEC_CreerListePoints();
    - NLD - MOS_Light - Bug fix : Erreur lors de la lecture de la mission "Pion BSD TrierEtTraiterUE"
    - NLD - MOS_Light - Les fonctions des limas sont ENFIN sauvegardées ... (Le format du fichier MOS_Lima.bin a donc changé ...)
    - NLD - Les effets des objets suivants 
                * Poste de tir
                * Zone protégée
                * Plot décontamination
                * Plot ravitaillement
            ne sont actifs que quand le pourcentage de construction de l'objet est de 100 %
    - NLD - L'état opérationnel d'une unité est maintenant stocké dans PHY_UnitCanHaveComposante, et non plus calculée
            à chaque 'GetEtatOps()'.
    - NLD - Prise en compte de l'état 'neutralisé' dans le calcul de la dangerosité => La dangerosité est divisée par 5
                (Pour l'instant, valeur en dur ... + tard, dans fichier de conf, comme les paramètres de dégradation
                 de la pertinence des connaissances)
    - NLD - "re-symétrisation" du calcul de la dangerosité entre une unité réelle et une connaissance : 
                => La dangerosité d'une connaissance sur une unité réelle est calculée à partir du PH/PK, dégradée
                    par la pertinence, l'état ops connu et l'état neutralisé de la cible
                => La dangerosité d'une unité réelle sur une connaissance etait calculée uniquement à partir du PH/PK
                                       
Version 0.55 [21/05/2004]
    - NLD - Gestion des lignes de début mission / fin mission
              - Fonctionnement
                    * Le fuseau est tronqué par les lignes de LFM et/ou LDM
                    * Si une LFM et une LDM sont spécifiées, l'orientation du fuseau est implicite (LDM => LFM)
                    * Si aucune ligne n'est spécifiée, ou si seule une des 2 l'est, le sens du fuseau est déterminée
                        en fonction de la position de l'agent associé (même fonctionnement que la précédente version)
                    * Lorsque l'automate découpe son fuseau pour ses pions, l'orientation de ces nouveaux fuseaux est 
                        la même que celle du fuseau parent. 
              - Modification de fonctions DEC 
                    U A::DEC_CalculePointArrivee( A ) => U A::DEC_CalculePointArrivee()  
                        => automate.DEC_CalculePointArrivee( pion ) à remplacer par pion.DEC_CalculePointArrivee()
                    U A::DEC_CalculerPositionParRapportALima( A /*T_Pion*/, R /*dist avant lima*/, I /*lima type*/ )
                       => U A::DEC_CalculerPositionParRapportALima( U /*T_Lima*/, R /*dist avant lima*/, B /*retour*/ );
                   NB : Les points sont calculés par rapport au fuseau de l'agent appelant la fonction
              - Nouvelle fonction DEC
                    U A::DEC_GetLima( I /*lima type*/ );
    - NLD - Nettoyage code de MRT_AffectFuseau + MIL_Fuseau (plus de Create/Destroy ...)
    - NLD - MOS_Light - Bug fix : la mission "Automate Test MoveTo" ne pouvait pas être envoyée ..
    - NLD - Modifs ordres de conduite 3D
                * OrderConduite-Automate-AppliquerFeux 
                * OrderConduite-Pion-AppliquerFeux
    - NLD - Modifs mission 3D
                * Mission-Pion-ASS-AssurerMiseEnOeuvre
                * Mission-Pion-ASS-AssurerMiseEnOeuvreLRM
                * Mission-Pion-ASS-ReconnaitreZoneDeploiement
                * Mission-Pion-ASS-ReconnaitreZoneDeploiementLRM
                * Mission-Automate-ASS-AssurerMiseEnOeuvre
                * Mission-Automate-ASS-AssurerMiseEnOeuvreLRM

Version 0.54.1 [18/05/2004]
    - NLD - Bug fix : La liste des connaissances objets renvoyée par DEC_Connaissances_Objets n'était pas exploitable par DIA
                (Toutes les requêtes lancées sur les objets contenus dans cette liste renvoyait "requête invalide")
    - NLD - Bug fix : Décalage dans la liste des ordres de conduite de MOS_Light
    - NLD - Ajout d'assert() pour détecter les cas où les directions ne sont pas valides (direction dangereuse non copiée
            quand un automate donne une mission à son pion, par exemple ...)

Version 0.54 [18/05/2004]
    - JVT - Modification du format xml des senseurs : Ajout de l'attribut balayage ( booléen ) dans le tag angle.
            Ce tag défini si le senseur est utilisé régulièrement à 360° ( ou pas ).
    - JVT - Ajout d'une nouvelle posture : ( dans tous les fichiers de conf, j'ai mis les même paramètre aue le déplacement..... 
            A MODIFIER )
                * dans le moteur physique ( ePostureMouvementDiscret )
                * dans les tags xml       ( MouvementDiscret )
                * dans ASN                ( posture-mouvement-discret )
    - JVT - Correction de la posture lorsqu'un agent se trouve dans un objet de type MIL_ZoneProtegee et MIL_PosteTir
    - JVT - Nouvelles fonctions DEC pour activer/desactiver le mode déplacement discrêt :
            * V A::DEC_Agent_PasserEnModeDiscret()
            * V A::DEC_Agent_AnnulerModeDiscret()
            Attention : le passage en mode discret et valable pour toute les actions de déplacement en cours et à venir à partir de
            l'appel et jusqu'à l'annulation du mode...
    - JVT - Nouvelle fonction DEC pour obtenir la distance max de détection :
            * R A::DEC_Perception_DistanceMax()
    - JVT - Ajout d'une nouvelle valeur à la valeur de retour de DEC_Heliporter ( E_EtatHeliportage ) : eHeliportageSuspendu
    - JVT - Ajout de fonction sur les pions ALAT (Héliportage)
            * V DEC_PauseHeliportage    ( A )
            * V DEC_ReprendreHeliportage( A )
    - JVT - Nouvelle information dans types.xml : ajout du tag LOG::TC2::ChaineSante::UtilisationMateriel::Medecin qui contient le
            type de composante représentant un médecin dans le TC2.
    - JVT - [ LOG SAN TC2 ] : Il n'y a plus un médecin par compagnie dans le TC2 mais on utilise la composante définie ci dessus ( #413 )
    - NLD - Changement de la fonction
                U DEC_DeterminerPositionPourObstacle( I /*E_ObjectType*/, U /*vCircleCenter*/, R /*rayon*/, B /*return code*/ )
            en 
                U A::DEC_CalculerPositionObstacle( I /*E_ObjectType*/, U /*vCircleCenter*/, R /*rayon*/, B /*return code*/ );
            La position renvoyée est maintenant forcément dans le fuseau de l'unité appelante
            Les scores permettant de déterminer la position idéale d'un obstacle, à partir des données terrains se trouvent
            maintenant dans le fichier "ObjectTypes.xml"
                <PlacementScores>
                    <Terrain type="inconnu">0</Terrain>
                    <Terrain type="chemin">1</Terrain>
                    <Terrain type="departementale">2</Terrain>
                    <Terrain type="nationale">3</Terrain>
                    <Terrain type="autoroute">4</Terrain>
                    <Terrain type="pont">10</Terrain>
                    <Terrain type="grand pont">20</Terrain>   
                    <Terrain type="carrefour">100</Terrain>
                    <Terrain type="echangeur">200</Terrain>
                </PlacementScores>
    - NLD - Nouvelle fonction DEC : 
                V DEC_Copie_ListeLocalisations   ( S /* T_LocalisationListe src*/, S /*T_LocalisationListe dst*/ );
    - NLD - Renommage des fonctions DEC
                DEC_DistanceMax                   =>  DEC_Perception_DistanceMax                 
                DEC_EstVisible                    =>  DEC_Perception_EstVisible                  
                DEC_StartCoupsDeSonde             =>  DEC_Perception_StartCoupsDeSonde           
                DEC_StopCoupsDeSonde              =>  DEC_Perception_StopCoupsDeSonde            
                DEC_StartSurveillerLocalisation   =>  DEC_Perception_StartSurveillerLocalisation 
                DEC_StopSurveillerLocalisation    =>  DEC_Perception_StopSurveillerLocalisation  
                DEC_StartReconnaissancePoint      =>  DEC_Perception_StartReconnaissancePoint    
                DEC_StopReconnaissancePoint       =>  DEC_Perception_StopReconnaissancePoint     
                DEC_StartRadar                    =>  DEC_Perception_StartRadar                  
                DEC_StopRadar                     =>  DEC_Perception_StopRadar                   

Version 0.53 [17/05/2004]
    - JVT - Bug Fix : Dans certains cas où le volume des pièces disponibles dans le TC2 était inférieur au volume unitaire d'une piece
            on pouvait avoir une consommation erronée de cette pièce.
    - JVT - Nouveau tag optionnel dans composantes.xml
                <NTI niveau="1">
                    <EA />
                    <M />
                </NTI>
            Ce tag défini le niveau de NTI que peut réparer cette composante, ainsi que le(s) type(s) de panne.
    - JVT - Les TC2 prennent maintenant en compte les NTI des composantes disponibles pour faire les réparations ( nouveaux états dans
            les consignes ).
    - JVT - [ LOG MAIN ] Implémentation complète au niveau du TC2.
    - JVT - Nouvelles fonctions DEC sur les pions LOG : Action pour les pions log ( Compagnies de maintenance EA et M )
            * V DEC_StartMaintenance( A )
            * V DEC_StopMaintenance ( A )
    - JVT - Séparation de la PHY_UnitSectionLog en PHY_UnitCanResupply_ABC et PHY_UnitCanRepair_ABC ( en plus de PHY_UnitCanHealHumans_ABC )
            Le doc UML a été mis à jour en conséquence.
    - JVT - [ LOG MAIN ] Implémentation complète au niveau BSD.
    - NLD - Bug fix : DEC_AgentSectionALAT::ExponentialFunction était foireux
    - NLD - Les hélicoptères volent !!!
                => Ajout d'une hauteur d'interaction MAX pour les objets <HauteurMaxInteraction> dans ObjectTypes.xml
                => Hauteur des hélicos fixe
                => Le path find ALAT n'évite plus qui n'auront plus d'interaction avec
                => Pour l'instant, l'altitude des hélicoptères est fixée, en dur, à 50m
                => Plus de calculs des points avants pour les hélicoptéres
                => La fonction DEC 'DEC_Itineraire_ProchainObjetSurItineraire' ne renvoit que les objets avec lesquels l'agent est susceptible d'entrer en collision
    - NLD - Bug fix : Bug lors de la gestion des collisions objet <=> unités en déplacement 
    - NLD - Nettoyage code DEC_Path (plus de Create()/Destroy() ...)
    - NLD - Nouvelles fonctions DEC
                B DEC_Geometrie_EstPointDansLocalisation( U /*T_Point*/, U /*T_Localisation*/ );
                B DEC_ConnaissanceAgent_PercoitUnite    ( U /*T_ConnaissanceAgent*/ , I /*E_ValiditeRequete&*/ ); 
                    ^==== A UTILISER AVEC MODERATION, VU QUE C'EST UNE TRICHE ENORME ...
    - NLD - Bug fix : Une quicherie dans les MT empéchait de supprimer les répertoires de sauvegardes des simulations
                utilisées avec le launcher quand celui ci était lancé (Handle non fermé ...)

Version 0.52.1 [14/05/2004]
    - NLD/JVT - Bug fix : Crash lors de la destruction des actions 'Unlinked' (Tir indirect)
    - JVT - Reintégration de deux types dans E_Etat_Heliportage :
                * eHeliportageEmbarquement,
                * eHeliportageDebarquement

Version 0.52 [14/05/2004]
    - NLD - Nouvelle fonction DEC :
                R DEC_ConnaissanceObjet_LargeurSiteFranchissement( U /*T_ConnaissanceObjet*/ , I /*E_ValiditeRequete&*/ );
    - NLD - Bug fix : La version 'release' remarche
    - NLD - Artillerie  
                - Modification des missions
                    Mission-Automate-ASS-SuivreDesObjectifsRATAC
                    Mission-Automate-ASS-SurveillerRATAC
                    Mission-Pion-ASS-SurveillerRATAC
                    Mission-Automate-ASS-AcquerirLanceursEniCOBRA
                - Suppression des ordres de conduite
                    Automate SurveillerRATAC
                    Pion MettreTirsEnPlace
    - NLD - NBC 
                - Nouveaux ordres de conduite, pouvant être reçus tout le temps, même quand il n'y a pas de mission en cours
                    MettreTenueNBC
                    EnleverTenueNBC
                - Nouveaux comptes rendus
                    CR-ContamineNBC             
                    CR-DecontamineNBC           
                    CR-TenueProtectionNBCMise   
                    CR-TenueProtectionNBCEnlevee

Version 0.51.1 [13/05/2004]
    - NLD - Bug fix : L'ordre de conduite dans l'ODB passe de "Automate Realiser Variantement" à "Automate RealiserVariantement"
    - NLD - Bug fix : Pb dans le retour de la connaissance objet dans les actions de création/préparation
    - JVT - Bug fix : Renommage du tag "PourcentageSeuilAvantDemandePieceAuTC2" en "SeuilAvantDemandePieceAuTC2"
    - NLD - Bug fix : Le script compiler ne crashe plus quand il y a une erreur dans les scripts (!)
    - NLD - Retour de la fonction DEC 
                U /*T_Point*/ DEC_ExtrapolerPosition( R /* temps en minutes */ );

Version 0.51 [12/05/2004]
    - NLD - Bug fix : Le tag 'SimType' était nécessaire (mais inutile) pour le ScriptCompiler
    - JVT - Bug fix : L'état interne de l'héliportage est maintenant correctement utilisé ( plus d'utilisation de la version translatée DIA qui faisait boucler sur l'init )
    - JVT - Ajout d'une fonction sur les pions et les automates ALAT :
                V DEC_ALAT_ForceRejoindre( R, R, R );
    - AGN - DirectIA:
            - The recursivity into script function now works as before.
            - Fix a bug in the parsing when checking the behavior/node calls.
            - Function table are no longer singletons. You need to pass the function table you have created to the function caller when you create it.
            - Fix a bug in the debug info generation -> The path are now well managed.
            - Fix a bug occuring when using inline calls. The global of the agents were copied by value instead of by reference.
            - Review the linking step to handle correctly unused callbacks whatever the initialization method (script or archive) is.
            - Replace the option eParsingOption_RemoveUncalledCallbacks by eParsingOption_ThrowsErrorForUnusedCallbacks : the unused callbacks are always not linked but
               you decide to throw an error if an unused callback is detected during the script init. This does not apply to the workspace callbacks.
            - The function DIA_TerminateParsing has been removed.
    - NLD - Gros nettoyage dans le code des actions (Plus de Create()/Destroy()/Initialize()/Terminate() ...)
    - NLD - Nouvelle fonction DEC : B A::DEC_Agent_EstEnTenueProtectionNBC()
    - NLD - Artillerie :
                * Comptes rendus
                    CR-DemandeDeTirEO                    => CR-DemandeDeTir
                    CR-RejointPlotMunition               => CR-RejointPlotRavitaillement
                    CR-ReconnaissanceApprofondieTerminee => CR-ReconnaissanceTerminee
                    CR-IndisponibleAuxFeux               => CR-Indisponible
                    CR-DisponibleAuxFeux                 => CR-Disponible
                    CR-TirAnnuleSectionIndisponible      => CR-TirAnnuleUniteDeTirIndisponible
                    CR-FaitObserve                            
                    CR-ReconnaissanceInitialeTerminee    
                    CR-ObservationTirIndirect
                * Ordres de conduite
                    Suppression
                        OrderConduite-Pion-AutoriserDemandeDeTir     
                        OrderConduite-Pion-RefuserDemandeDeTir       
                        OrderConduite-Pion-MouvementZoneImplantation 
                        OrderConduite-Automate-ReconnaitreZoneImplantationSuivante
                        OrderConduite-Automate-MouvementZoneImplantation
                        DemandeOrderConduite-Automate-MouvementZoneImplantation
                        DemandeOrderConduite-Pion-MouvementZoneImplantation
                        DemandeOrderConduite-Automate-ReconnaitreZoneImplantationSuivante    
                        DemandeOrderConduite-Pion-AutoriserDemandeDeTir
                        DemandeOrderConduite-Pion-RefuserDemandeDeTir        
                    New
                       OrderConduite-Pion-TirEO
                       OrderConduite-Automate-TirEO
                       OrderConduite-Automate-ReconnaitreZoneImplantation
                       OrderConduite-Automate-ExecuterTir
                       OrderConduite-Automate-AcquerirObjectifs
                       OrderConduite-Automate-SurveillerRATAC
                       OrderConduite-Autoamte-Emettre
                       OrderConduite-Automate-AcquerirLanceursEniCOBRA
                    Modif
                        OrderConduite-Automate-ChangerDePosition
                * Missions : le paramètre itineraire devient une position
                    MIL_PionMission_ASS_ReconnaitreZoneDeploiementCOBRA
                    MIL_PionMission_ASS_ReconnaitreZoneDeploiementLRM
                    MIL_PionMission_ASS_ReconnaitreZoneDeploiement
    - NLD - Artillerie
                * Le type 'T_ResultatTirIndirect' et la catégorie 'resultats_tir_indirect' n'existent plus => Les résultats de tirs sont envoyés automatiquement à la fin de chaque tir (direct et/ou indirect ...)
                * Les comptes rendus d'observation de tir sont envoyés automatiquement par le moteur
                * Changement de fonction
                        V DEC_StartExecuterTirPt( A, U, I, R, I, A );
                                // A : position cible
                                // A : Agent Visé
                                // I : Type d'obus
                                // R : Nombre d'obus demandés
                                // I : Valeur de retour
                                // A : Agent recevant le résultat 
                                => 
                        V DEC_StartExecuterTirPt( A, U, I, R, I  );
                                // A : position cible
                                // A : Agent Visé
                                // I : Type d'obus
                                // R : Nombre d'obus demandés
                                // I : Valeur de retour
                * Suppression des fonctions DEC
                    - DEC_CreerZoneImplantationLRM
                    - DEC_FormerZoneDeploiementLRM_EnModeContinu
                    - DEC_FormerZoneDeploiementLRM_EnModeDiscontinu
                    - DEC_ChercherZoneImplantationLRM
                    - DEC_CreerZoneImplantationCOBRA
                    - DEC_FormerZoneDeploiementCOBRA
                    - DEC_ChercherZoneImplantationCOBRA
                    - DEC_FormerZoneDeploiementASS
                    - DEC_DetruireZoneImplantation
                    - DEC_CreerZoneImplantation
                    - DEC_ChercherZoneImplantation
                    - DEC_DetectionRadar 
                * Suppression des types
                    - T_ZoneDeploiement
                    - T_ZoneImplantation
                    - T_ZoneDeploiementLRM
                    - T_ZoneImplantationLRM
                    - T_ZoneImplantationCOBRA
                * Nouvelles fonctions DEC
                    V DEC_StartCreerZoneImplantation    ( A /*agent*/, I /*E_EtatActionObjet*/, I /*Objet type*/, U /*T_Point center*/, U /*Dir gisement*/, R /*DistH*/, R /*DistV*/ );
                    V DEC_PauseCreerZoneImplantation    ( A );
                    V DEC_ReprendreCreerZoneImplantation( A );
                    V DEC_StopCreerZoneImplantation     ( A );
    - NLD - La fonction suivante est accessible aux pions et aux automates
                U A::DEC_CalculePointArrivee( A /*T_Pion*/ ) 

     
Version 0.50.2 [10/05/2004]
    - JVT - Bug Fix : Le volume unitaire des humains est de nouveau lu.
    - AGN - Modification de ADN pour prendre en compte les nouveaux paramètres des objets et 
            les nouveaux paramètres de la log.

Version 0.50.1 [10/05/2004]
    - AGN - Ne supprime plus les callbacks non-utilisés dans les scripts. Temporaire
    - AGN - Modification de ADN pour prendre en compte les nouveaux paramètres des objets et 
            les nouveaux paramètres de la log.
    - NLD - Objets
                * Ajout d'une valeur dans l'enum E_EtatActionObjet : eActionObjetPasDeCapacite // -> l'action est arrêtée car l'unité ne posséde pas les capacités pour l'effectuer
                * Les fonctions de gestion des objets (DEC_StartCreer / Detruire ...) sont accessible à TOUS les pions
                * Nouvelles fonctions DEC
                        B A::DEC_Agent_PeutConstruireObjet             ( I /*E_TypeObject*/ );
                        B A::DEC_Agent_PeutConstruireContournementObjet( I /*E_TypeObject*/ );
                        B A::DEC_Agent_PeutDetruireObjet               ( I /*E_TypeObject*/ );
                   Ces fonctions retournent 'true' si l'agent peut effectuer l'opération, c'est à dire si les temps de construction / valorisation / destruction ... 
                   ont été définis dans les fichiers de configuration. 
                   !!! Elles ne testent en aucun cas les dotations du pion !!!

Version 0.50 [07/05/2004]
    - AGN - ADN : Prise en compte des paramètres NBC.
    - NLD - Bug fix : mauvais paramètre passé à DIA pour la mission Pion GEN DetruirePont
    - NLD - Modélisation des effets de la contamination NBC
                * Ajout de 2 tags dans les data 
                    <AgentNBC type="Gaz sarin">
                        <Humains_Vivants>0</Humains_Vivants>
                        <Humains_BlessesU1>0</Humains_BlessesU1>
                        <Humains_BlessesU2>0</Humains_BlessesU2>
                        <Humains_BlessesU3>1.0</Humains_BlessesU3>
                        <Humains_BlessesUE>0</Humains_BlessesUE>
                        <Humains_Morts>0</Humains_Morts>
                        <CoefModificationVitesseMax>1.0</CoefModificationVitesseMax>                <=====
                        <CoefModifiationTempsRechargement>1.0</CoefModifiationTempsRechargement>    <=====
                    </AgentNBC>
                * Effet : application d'un coefficient sur la vitesse max d'une unité
                * Effet : application d'un coefficient sur la durée de rechargement entre 2 tirs (directs)
    - AGN - Mise à jour DirectIA:
            - Les callbacks déclarés mais non utilisés dans les scripts sont supprimés des moteurs et ne
            nécessitent pas d'être linkés.
            - Les conversions de types ont été unifiés dans tout le SDK. Les vérifications des appels
            de fonctions/comportements/actions par rapport aux signatures ont été renforcés. De nouvelles
            erreurs peuvent apparître dans les scripts.
            - La détection de la redéfinition des comportements/actions est incorporée dans le SDK.
    - NLD - Bug fix : correction d'une quicherie dans le magicMove de l'automate embrayé    
    - NLD - Nettoyage dans les objets
                * Changement de fonctions DEC
                    - DEC_Itineraire_ProchainObstacleSurItineraire                 => DEC_Itineraire_ProchainObjetSurItineraire
                    - DEC_Connaissances_Obstacles + DEC_Connaissances_Embossements => DEC_Connaissances_Objets                
                   Ces 2 fonctions prennent un nouveau paramètre '*' permettant de spécifier quels types d'objets doivent être
                   renvoyés ou utilisés. Par exemple, DEC_Connaissances_Objets( eTypeObjectNuageNBC, eTypeObjectBouchonMines ) ne
                   renverra QUE les connaissances objets de type nuage nbc et bouchon de mine. Si rien n'est spécifié, rien n'est
                   renvoyé ...                 
                    - DEC_ConnaissanceObjet_EmbossementEstOccupe                   => DEC_ConnaissanceObjet_EstOccupe
                   Grande nouveauté : cette fonction fonctionne (!) - Elle renvoit 'true' si au moins un agent se trouve dans l'objet concerné
                * Note : La fonction DEC_Itineraire_ProchainObstacleSurItineraire() ne crashe pas si vous lui donnez un itineraire nul (genre qd DEC_ITineraire_Courant() retourn 0)
                * Data : dans le fichier "ObjectTypes.xml"
                    - L'attribut '<EstUnObstacle>' disparait
                    - 2 nouveaux attributs, qui devraient permettre de virer une bonne partie des data objets dans les composantes ...
                        <VitesseParDefaut>                  <- La vitesse par défaut d'une unité quand elle entre en contact avec un objet du type concerné       
                        <VitesseParDefautQuandContourne>    <- La vitesse par défaut d'une unité quand elle entre en contact avec un objet du type concerné, quand cet objet est contourné
    - NLD - Bug fix : Correction de la gestion de l'évitement des objets dans le path finder
                => Le path find n'essaye plus de contourner les objets doit on sait qu'ils sont préparés (= non activés)
                    et/ou contourné
    - NLD - Bug fix : GROS bug corrigé dans le calcul du rapport de force :
                La 'force' des ennemis était correctement calculées en fonction de la dangerosité des ennemis connus
                Par contre, la 'force' des amis n'était pas calculées en fonction de la dangerosité des amis sur les ennemis dangereux connus
                    mais en fonction de la dangerosité des amis sur les UNITES REELES des ennemis dangereux connus
                Conséquence
                    => Quand un ami connait un ennemi, mais ne le voit plus, et quand l'état ops réél de cet ennemi vaut 0, 
                        alors que l'état ops connu vaut 100, le rapport de force local valait 0.2 (très défavorable ...)
    - NLD - Bug fix : pb mineur dans l'envoi des infos de perception des connaissances par compagnie à MOS
    - JVT - L'état ouvert/fermé des îlots de ravitaillement est maintenant pris en compte
    - JVT - Les liens hiérarchiques entre les TC2 et leurs pc BSD sont maintenant optionnels.
    - JVT - Modification dans LOG.xml
            * Remplacement de l'attribut TC2::ChaineMaintenance::CategoriesDommages::Attrition::NTI?::Panne::mobilite par un attribut
              TC2::ChaineMaintenance::CategoriesDommages::Attrition::NTI?::Panne::type pouvant contenir :
                    _ M  ( mobilité )
                    _ EA ( électronique de l'armement )
            * Définition des pieces de rechange et de leur taille dans TC2::ChaineMaintenance :
                  <VolumesUnitaires>
                     <Pieces>
                        <piece categorie="Truc pour reparer la mobilite 1" >1</piece>
                        <piece categorie="Truc pour reparer la mobilite 2" >2</piece>
                        <piece categorie="Truc pour reparer la mobilite 3" >1</piece>
                        <piece categorie="Machin pour reparer l'électronique" >1</piece>
                    </Pieces>
                  </VolumesUnitaires>
            * Modification de la définition des pannes dans TC2::ChaineMaintenance::CategoriesDommages : les tags Panne ne sont plus vide
              mais contiennent une liste de piece necessaire :
                  <Panne type="M" nom="Panne 5" pourcentage="100" tempsMoyen="8" variance="2">
                    <piece categorie="Truc pour reparer la mobilite 1" />
                    <piece categorie="Truc pour reparer la mobilite 3" />
                  </Panne>
            * Ajout du nombre seuil de chaque piece avant la demande de ravitaillement de la chaîne maintenance d'un TC2 à la BSd dans
              TC2::ChaineMaintenance::CapaciteReparations :
                <SeuilAvantDemandePieceAuTC2>2</SeuilAvantDemandePieceAuTC2>
    - JVT - Modifications dans MOS/IDClasses.xml : Définition des pannes :
            <Ressource name="piece" categorie="Truc pour reparer la mobilite 1"  id="1010100"/>
    - JVT - Types.xml : les listes <CapaciteEmport> prend aussi en compte le type 'piece'
    - JVT - ODB.xml   : les listes <EmportDotation> prennent aussi en compte le type 'piece' avec ses différentes catégories
    - JVT - Le TC2 prend maintenant en compte les pieces detachees pour la chaine maintenance :
            * Attente lorsque les pieces détachées sont manquante
            * Gestion du flux de pieces détachées avec la Compagnie d'approvisionnement
    - JVT - [LOG MAIN] Fonctionnement complet de la gestion des pièces ( ainsi que la reappro des pieces par la cie d'appro de la BSD )
    - JVT - Modification de l'enum de résultat de l'héliportage à la demande de GGR ( E_EtatHeliportage ). 
            La translation se fait de la manière suivante :
                ePathFinder        ( eHeliportageCalculChemin )                => eHeliportageDeplacementAller
                eMovingTo          ( eHeliportageDeplacementAller )            => eHeliportageDeplacementAller
                eMovingFrom        ( eHeliportageDeplacementRetour )           => eHeliportageDeplacementRetour
                eLoading           ( eHeliportageEmbarquement )                => eHeliportageDeplacementAller
                eUnloading         ( eHeliportageDebarquement )                => eHeliportageDeplacementRetour
                eErrorHumanNotFound( eHeliportageInterrompuFantassinsAbsents ) => eHeliportageTermine
                eErrorNoPath       ( eHeliportageInterrompuCalculChemin )      => eHeliportageImpossible
                eErrorCantMove     ( eHeliportageInterrompuDeplacement )       => eHeliportageImpossible
                eErrorNoCapacity   ( eHeliportageInterrompuPasDeCapacite )     => eHeliportageImpossible
                eEnd               ( eHeliportageTermine )                     => eHeliportageTermine
                eForcedEnd         ( eHeliportageInterrompu )                  => eHeliportageInterrompu

                      
Version 0.49 [05/05/2004]
    - JVT - Bug Fix : Suppression correcte des enregistrements de tirs indirects lorsque le tir n'a pas lieu par manque de munition
    - NLD - Modification dans la vision : les rayons de vision sont lancés tant que l'on a pas identifié une cible
            (Auparavant, la premier niveau de perception était gardé => résultats de vision incohérents pour une unité ayant
             plusieurs capteurs hétérogènes)
    - NLD - Connaissance 
                * Gestion des attributs spécifiques pour le NBC et les sites de franchissement (+ affichage dans MOS_Light)
                * Nettoyage / amélioration code 
    - NLD - MOS_Light : 
                * affichage etat NBC
                * affichage des renforts
                * l'option 'afficher les connaissances' est disponibles pour les pions ...
    - NLD - Prise en compte du NBC
                * Nouvelles fonctions DEC 
                        V A::DEC_Agent_MettreTenueProtectionNBC ();
                        V A::DEC_Agent_EnleverTenueProtectionNBC();
                        V A::DEC_Agent_EstContamine             ();
                * Fichiers de conf
                    - Dans attrition.xml, définition des attritions des agents NBC (agents chimiques et autres), de la forme
                        <AgentsNBC>
                            <AgentNBC type="Gaz sarin">
                            <Humains_Vivants>0</Humains_Vivants>
                            <Humains_BlessesU1>0</Humains_BlessesU1>
                            <Humains_BlessesU2>0</Humains_BlessesU2>
                            <Humains_BlessesU3>1.0</Humains_BlessesU3>
                            <Humains_BlessesUE>0</Humains_BlessesUE>
                            <Humains_Morts>0</Humains_Morts>
                          </AgentNBC>
                        ....
                        </AgentsNBC>
                    - Dans MOS/IDClasses.xml 
                        <AgentsNBC>
                            <AgentNBC id="700" name="Gaz sarin"/>
                            <AgentNBC id="701" name="Gaz moutarde"/>
                            <AgentNBC id="702" name="Rayon gamma"/>
                            <AgentNBC id="703" name="Virus ebola"/>
                        </AgentsNBC>
                    - Nouveaux types d'objets, à mettre dans les composantes / senseurs
                        "nuage nbc"            , eObjectTypeNuageNBC
                        "plot decontamination" , eObjectTypePlotDecontamination
                        "plot ravitaillement"  , eObjectTypePlotRavitaillement
     - NLD - Objets 
                * Remplacement de la fonction DEC
                        B A::DEC_ObtenirProchainObjetSurItineraireCourant( U /*T_ConnaissanceObjet*/, R /*Distance*/ );
                  Par les fonctions :
                        U A::DEC_Itineraire_Courant                      (); // Retourne un T_Itineraire, ou '0' si pas d'itineraire courant
                        B A::DEC_Itineraire_ProchainObstacleSurItineraire( U /*IN T_Itineraire*/, U /*OUT T_ConnaissanceObjet*/, R /*OUT Distance*/ );
                * L'evenement 'EVT_DEC_CollisionObjetSurItineraire' est remplacé par la fonction DEC 
                        S DEC_Connaissances_CollisionsObjets(); // Retourne T_ConnaissanceObjetListe
                * NB - Une passe va être faite sur les objets afin de clarifier/nettoyer les différences entre objets/obstacles bloquants ou non
                       ainsi que pour simplifier les données (valeurs par défaut judicieuses ...)
                * Vision : qd un agent entre en collision avec un objet, la détection se fera immédiatement par la suite (sans respecter les délais ...)
                * Nouvelles valeurs dans l'enum DIA ( eObjectTypeNuageNBC / eObjectTypePlotDecontamination / eObjectTypePlotRavitaillement)
    - NLD - Les sauvegardes demandées explicitement (via MOS) peuvent maintenant être nommées. Ce nom est renvoyé à ScipioManager 
                via le launcher. 
    - NLD - Factorisation du code des sauvegardes : les feuilles héritant de PHY_Unit_ABC appellent maintenant PHY_Unit_ABC::Save/LoadCheckpoint()
                au lieu de dupliquer le code
    - NLD/JVT - Bug fix : lorsqu'une composant est détruite car tous les humains qu'elle contient sont morts, la remontée vers MOS était
                invalide
    - AGN - ADN ; Correction d'un crash quand l'outil rencontrait un ordre de conduite inconnu
    - AGN - ADN : Mise à jour des ordres de conduite.
           
Version 0.48.1 [04/05/2004]
    - AGN - ADN : Correction d'un bogue dans la fusion des PHs.
    - NLD/JVT - Bug fix : assert() dans le tir lors de l'envoi du résultat de tir, quand le tir n'a eu aucun effet
    - NLD - Bug fix : Bug dans la sérialisation de la mission pion GEN RetablirItineraire => assert() dans ASN après la MRT
    - AGN - Correction sur DirectIA pour permettre l'utilisation correcte des objets héritant de Locals dans une liste.

Version 0.48 [30/04/2004]
    - JVT/NLD - Rebranchement des résultats de tir (avec modifs ASN)
    - NLD - Suppression de tous les GDH dans les missions ALAT
    - AGN - ADN : Modification du système d'ajout/retrait des missions.
    - AGN - ADN : Lors de l'écriture, ADN vérifie pour toutes les munitions que l'on indique bien la portée à partir
                de laquelle le PH devient nul. Une fusion des valeurs sont faites pour limiter les données
                ( par exemple si on a (2000 m, 60%) et (2400 m, 60%) on ne retiendra que (2400, 60%)).
    - AGN - Modifications DirectIA permettant de se passer du champ <SIMType> dans models.xml. Dorénavant toute fonction
            déclarée dans les scripts mais non liée à une vrai fonction C++ déclenchera une erreur.
    - AGN - ADN : Modification pour ne plus prendre en compte le champ SIMType.

Version 0.47 [28/04/2004]
    - JVT - Bug fix : Les emports utilisés n'étaient pas envoyés à MOS lorsque le ravitaillement était effectif
    - JVT - Mise en commun des fonctions liées à l'emport entre les automates TC2 et les pions Log ( îlots ) dans PHY_UnitCanHaveEmport_ABC
    - JVT - Ajout de nouvelles fonctions DEC sur les 'Automate TC2' :
            * V A::DEC_DemandeRavitaillementStocks( * )
                Paramètres : rien => ravitaillement total, sinon, autant de paramètre de type E_TypeRavitaillement que nécessaire
    - JVT - Ajout de nouvelles fonctions sur les 'pions LOG' :
            * V DEC_StartRavitaillement( A ) : Autorise le pion ( îlots )à accepter et à traiter les demandes de ravitaillement de stocks venant des TC2.
            * V DEC_StopRavitaillement ( A ) : fin d'acceptation des demandes TC2
    - JVT - Modification du fichier Types.xml [ pour les types 'Automate Log TC2' ] : Ajout d'une liste définissant la capacité maximale
            d'emport de l'automate :
            <CapaciteEmport>
                <Emport type="munition">10000</Emport>
                <Emport type="carburant">10000</Emport>
                <Emport type="mine">5000</Emport>
                <Emport type="explosif">5000</Emport>
                <Emport type="barbele">2000</Emport>
            </CapaciteEmport>
            Attention : Cette capacité maximales est juste donnée pour information et ne sert pas à l'instanciation réelle du pion. Je m'explique :
            pour creer facilement des TC2 différents, on a décidé qu'un TC2 ne pourrait traiter que les emports qui lui sont définis dans l'ODB. C'est
            toujours le cas donc il faut par exemple comprendre : la capacité max d'emport de carburant de ce TC2 est 0 si elle n'est pas défini dans l'ODB
            et 10000U si elle l'est. La capacité initiale est en outre toujours définie pas la valeur de l'ODB.
    - JVT - Ajout des mêmes infos pour les pions log ( ilots ) ( types.xml et odb.xml ). Même fonctionnement.
    - JVT - L'action magique de recomplètement ressources sur un TC2 recomplète maintenant les stocks à hauteur de la capacite d'emport ( sous condition
            d'existence ) et en prenant en compte les dotations déjà en cours de transit.
    - JVT - Modification dans LOG.xml
            * Retour du tag BSD
            * Retour du tag BSD::ChaineSante
            * Retour du tag BSD::ChaineRavitaillement
            * Nouveau tag dans BSD::ChaineRavitaillement : UtilisationPions
            * Nouveau tag dans BSD::ChaineRavitaillement::UtilisationPions : CreationConvois. Ce tag indique le type du pion log a utiliser pour la création
              des convois*
            * Déplacement des tags suivants du groupe Log::TC2::ChaineSante vers le groupe Log::BSD::ChaineSante [ infos utilisées par le pion section de triage ]
                _ CapaciteSecteurTriage et tout son contenu
                _ Temps::TriBlesses
                _ Temps::Soins
            * Nouveau tag dans BSD::ChaineRavitaillement : Temps
            * Nouveau tag dans BSD::ChaineRavitaillement:: DureeValiditeDemandeTC2dansZRT. La valeur de ce tag ( exprimée en minutes ) représente le temps de
                validité d'une demande TC2 auprès de la BSD ( i.e. le temps entre l'acquitement de la BSD et le moment au plus tard ou le TC2 pourra retirer les
                dotations demandées.... si le temps est dépassé, la requête du TC2 sera considérée comme annulée et les dotations seront libres pour les éventuelles
                autres requêtes )
    - JVT - L'action magique de recompletement sur les pions LOG recomplete maintenant aussi les stocks.
    - JVT - [LOG RAV] Implémentation complète jusqu'au niveau BSD...
    - NLD - Bug fix : L'utilisation de l'ordre de conduite Automate ChangerDePosition faisait crasher MOS_Light
    - NLD - Bug fix : Le passage des listes T_GenObject à DIA était foireux
    - NLD - Bug fix : Erreur dans les énumérations des ordres de conduite dans MOS_Light
    - NLD - Nouvelles fonctions DEC   
                B    DEC_ConnaissanceAgent_EstPercuParGtia( U /*T_ConnaissanceAgent*/ , I /*E_ValiditeRequete&*/ ); 
                U A::DEC_CalculerPositionAleatoire( U /*T_Point centre cercle*/, R /*rayon cercle ); // Retourne T_Point
                U A::DEC_CalculerPositionSurete   ( U /*T_ConnaissanceAgent*/, R /*distance min*/, I /*E_ValiditeRequete&*/ );
    - NLD - Suppression de tous les GDH de fin dans les missions de l'infanterie
    - NLD - Suppression du type DIA 'T_Position' et de tout ce qui est associé
                - DEC_CreerPosition
                - DEC_DetruirePosition
                - DEC_StartCalculPosition
                - DEC_StopCalculPosition
                - DEC_Position_Id
                - DEC_Position_GetPoint
                - DEC_Position_GetPath
                - DEC_Position_SetPath
                - DEC_Position_SetPathType
                - S_DetruirePosition
                - enum E_TypeObjectif
                - enum E_TypeOperation 
    - NLD - Nettoyage code:
                * Suppresion DEC_Position
                * Suppresion DEC_Task_ComputePositionXXX
                * Suppresion PHY_CoverObsData (malheureusement il reste encore des CoverObs dans le path find pour l'instant...)
                * Suppresion PHY_UnlinkedSensor (bye bye le senseur par défaut tout pourri ...)

Version 0.46 [28/04/2004]
    - NLD - Nouvelle fonction DEC : R DEC_DureePasDeTemps();
    - NLD - Bug fix : Le nom des nouveaux ordres de conduite dans models.xml n'était pas à la 'norme'
    - NLD - La lecture des poids statiques de l'ancien système de gestion du rapport de force a été enlevée de la SIM
                => le fichier DEC/Config.xml n'existe plus
    - NLD - L'ordre de conduite Automate-ChangerDePosition ne prend plus un agent en paramètre, mais une position
    - NLD - Quand une unité se fait tirer dessus, l'unité cible reconnait automatiquement l'unité source.
            (jusqu'à maintenant, la cible ne faisait que détecter la source)
    - NLD - Bug fix : La lecture du paramètre T_GenObjet dans la SIM était foireuse
    - NLD - ASN : Les parametres urgence et preliminaire de MissionGenObject ne sont plus optionnels, mais ont des valeurs par défaut

Version 0.45.1 [27/04/2004]
    - NLD - Bug fix : Les composantes non actives (embarquées / transportées) n'étaient pas copiées dans les connaissances
                        d'une unité
                            => La composante majeure courante d'une connaissance était invalide
                            => Les distances de tir pouvaient être invalides, et asymétriques entre 2 unités identiques
    - NLD - Bug fix : Les distances de tir d'une connaissance sur une unité réelle ne tenaient pas compte du PH donné en 
                        paramètre

Version 0.45 [27/04/2004]
    - NLD - Modification ASN : les points de regroupement des missions ALAT ne sont plus optionnels
    - NLD - Nouveaux types de pions/automates : Automate/Pion RENS et Automate/Pion NBC
    - NLD - Nettoyage instanciation/initialisation des agents => c'est le type du pion qui est responsable de l'instanciation d'un pion
    - NLD - NOTE CONCERNANT LA PRISE EN COMPTE DES PARAMETRES OPTIONNELS DANS MOS_LIGHT:
                Pour l'instant, MOS_Light ne gère pas du tout les paramètres optionels (sauf le GDH de début commun à toutes les missions)
                Donc, pour l'instant, ces paramètres sont toujours considérés comme étant non renseignés
                Voici la correspondance 'paramètre optionnel non renseigné' <-> membre DIA
                    - GDH : float valant 0
                    - Connaissance / Agent / Localisation / Point : UserType valant 0 
                    - Enumération : 0 (pour l'instant)

Version 0.44 [27/04/2004]
    - NLD/AGN - Bug fix - Crash lors de l'initialisation d'un T_GenObjet
    - NLD - Nouveaux CR
                CR-OrganisationChantier                     ::= NULL
                CR-DesorganisationChantier                  ::= NULL
                CR-ReconnaissancePositionObstacle           ::= NULL
                CR-ContournementRealise                     ::= NULL
                CR-AttenteRenforcement                      ::= NULL
                CR-DebutTravaux                             ::= NULL
                CR-DebutFranchissement                      ::= NULL
                CR-FinFranchissement                        ::= NULL
    - NLD - Bug fix : les nouvelles missions ne pouvait pas être lancées depuis MOS_Light
    - NLD - Bug fix : Gestion du T_GenObjet dans MOS_Light, paramètres incorrects
    - NLD - Nouveaux ordres de conduite               
                - eOrdreConduite_Pion_RenforcerTC2EnVSRAM 
                - eOrdreConduite_Pion_ReprendreAuxOrdresVSRAM 
                - eOrdreConduite_Automate_ActiverSecteur 
                - eOrdreConduite_Automate_Renforcer 
                - eOrdreConduite_Automate_ReprendreAuxOrdres 
                - eOrdreConduite_Automate_RealiserVariantement 
                - eOrdreConduite_Automate_DesequiperSiteFranchissement 
                - eOrdreConduite_Automate_ReagirFaceAEni 
                - eOrdreConduite_Automate_AffecterPionAObstacle 
    - NLD - Bug fix : La fonction DEC_EstVisible() renvoyait toujours eNotSeen

Version 0.43 [26/04/2004]
    - AGN - MOS Light : le zoom remarche correctement avec la molette.
    - NLD - Les enumération de natures ont changé
    - NLD - Les enumération envoyées à MOS suivantes ont changé (ajout d'une valeur 'none')
                rapport-de-force        
                regles-d-engagement     
                situation-munition      
                situation-sante         
                combat-de-rencontre     
    - NLD - Bug fix : l'état opérationnel était invalide quand l'unité possédait des composantes débarquables non
                débarquées.
    - NLD - Nouveau type DIA : T_ItineraireListe, qui se manipule comme les autres T_XXXListe
    - NLD - Missions : 
                Renommage
                    Mission_Automate_INF_Attaquer => Mission_Automate_INF_AttaquerSouplesse 
                    Mission_Automate_INF_Reconnaitre => Mission_Automate_INF_ReconaissanceOffensive
                New
                    Mission_Automate_INF_AttaquerEnTerrainDifficile
                    Mission_Automate_INF_BarrerDirection 
                    Mission_Automate_INF_DefendreFerme
                    Mission_Automate_INF_Tenir   
                    Mission_Automate_ABC_FlancGarder
                    Mission_Automate_ABC_RenseignerSurUnAxe
                    Mission_Automate_ABC_RenseignerSur
                    Mission_Automate_RENS_RenseignerDansLaProfondeur
                    Mission_Automate_RENS_RenseignerSurLesArrieresEnnemi
                    Mission_Automate_RENS_RenseignerDansDesZones
                    Mission_Automate_NBC_ReconnaitreSurDeuxAxes
                    Mission_Automate_NBC_ReconnaitreSurDeuxZones
                    Mission_Automate_NBC_Decontaminer
                    Mission_Automate_ASS_SuivreDesObjectifsRATAC
                    Mission_Automate_ASA_Surveiller
                    Mission_Automate_ASA_DefendreSite
                    Mission_Automate_ASA_DefendreZone
                    Mission_Automate_GEN_FaireFranchir
                    Mission_Automate_BSD_MettreEnOeuvreZone
    
                    Mission_Pion_RENS_RenseignerDansLaProfondeur,
                    Mission_Pion_RENS_RenseignerSurLesArrieresEnnemi,
                    Mission_Pion_RENS_RenseignerSurUnObjectif,
                    Mission_Pion_RENS_DetecterLesMobilesDansUneZone,
                    Mission_Pion_RENS_TraiterInformations
                    Mission_Pion_NBC_Decontaminer
                    Mission_Pion_NBC_ReconnaitreUnItineraire
                    Mission_Pion_NBC_ReconnaitreUnPoint       
                    Mission_Pion_ALAT_DetruireUnite
                    Mission_Pion_ALAT_Escorter
                    Mission_Pion_ALAT_Eclairer
                    Mission_Pion_ALAT_ReconnaitrePoint
                    Mission_Pion_ALAT_Surveiller
                    Mission_Pion_ALAT_Relever   
                    Mission_Pion_GEN_DeminerSiteFranchissement
                    Mission_Pion_GEN_ReconnaitreZone    
                    Mission_Pion_BSD_DistribuerMoyens
                    Mission_Pion_BSD_SeDeployer
                    Mission_Pion_BSD_TrierBlesses
                    Mission_Pion_BSD_TrierEtTraiterUE 
                    Mission_Pion_BSD_TraiterUE
                    Mission_Pion_BSD_DistribuerRessources
                    Mission_Pion_BSD_Reparer    
                Modifs
                    Mission_Automate_INF_Controler
                    Mission_Automate_INF_Couvrir
                    Mission_Automate_INF_Harceler
                    Mission_Automate_INF_Interdire
                    Mission_Automate_INF_RecueillirUnite
                    Mission_Automate_INF_Surveiller
                    Mission_Automate_ABC_Couvrir
                    Mission_Automate_ABC_Interdire
                    Mission_Automate_ABC_Reduire
                    Mission_Automate_ASS_AssurerMiseEnOeuvre
                    Mission_Automate_ASS_AssurerMiseEnOeuvreLRM
                    Mission_Automate_ASS_AcquerirObjectifs
                    Mission_Automate_ASS_SurveillerRATAC
                    Mission_Pion_ASS_ReconnaitreZoneDeploiement
                    Mission_Pion_ASS_AssurerMiseEnOeuvre
                    Mission_Pion_ASS_AcquerirObjectifs
                    Mission_Pion_ASS_AssurerMiseEnOeuvreLRM
                    Mission_Pion_ASA_DefendreSite
                    Mission_Pion_ASA_DefendreZone
                    Mission_Pion_ASA_DefendreUnite
                    Mission_Pion_ASA_Surveiller
                    Mission_Pion_ALAT_ReconnaitreDansProfondeur
                    Mission_Pion_ALAT_ReconnaitreSurContourEnnemi
                    Mission_Pion_ALAT_DetruireDansZone
                    Mission_Pion_ALAT_Freiner
                    Mission_Pion_ALAT_Jalonner
                    Mission_Pion_ALAT_Heliporter
                    Mission_Pion_ALAT_Helitransporter
                    Mission_Automate_GEN_Renforcer
                    Mission_Automate_GEN_RealiserSystemeObstacles
                    Mission_Automate_GEN_FranchirDeViveForce    
                    Mission_Automate_GEN_RetablirItineraires
                    Mission_Automate_BSD_SeDeployer
                Supprimées
                    Mission_Automate_INF_ReleverEnRecueillant
                    Mission_Automate_ABC_RenseignerSecteur
                    Mission_Automate_ABC_Renseignerpointligne
                    Mission_Automate_ABC_RenseignerItineraire    
                    Mission_Automate_ASA_AssurerDefenseParticuliere
                    Mission_Automate_ASA_AssurerDefenseEnsemble
                    Mission_Pion_ASA_AssurerDefenseSite
                    Mission_Pion_ASA_AssurerDefenseSiteAccompagnement
                    Mission_Pion_ALAT_RenseignerSurObjectif
                    Mission_Pion_ALAT_AppuyerHeliportage
                    Mission_Automate_GEN_CreerObstaclesPonctuels
                    Mission_Automate_GEN_OuvrirAxesProgression
                Notes:
                    - Les nouvelles missions sont dans common/Type_Ordre.hal
                    - Celles qui ont été modifiées l'ont été directement dans les fichiers concernés (INF_C_Types and co)
                    - Par contre, les structures des missions supprimées existent toujours
                    - Les attributs optionnels sont obligatoires, pour l'instant, dans MOS_Light
                    - ADN n'est pas compatible, pour l'instant
    - NLD - ASN : 
                - Modification remontées de tir (pas encore intégrées dans la SIM)
                - Suppression de certains paramètres communs à toutes les missions automates
                        * Effort;
                        * Priorite;
                        * unite En Appui Ou Soutien
                        * unite A Appuyer Ou Soutenir
                        * superiorite Aerienne
                - Passage de certains attributs de OPTIONAL à DEFAULT
                - Ajout d'un attribut 'niveau' dans la gestion des limites
                - L'état opérationnel est maintenant un pourcentage, et non plus une énumération débile                           


Version 0.42 [20/04/2004]
    - AGN - Passage de Qt 3.0.5 à Qt 3.3.1. Des modifications d'apparence peuvent intervenir dans MosLight et ADN. Merci de les
            signaler.
    - AGN - ADN - Il y a une commande "Imprimer" dans le menu Projet qui permet de sélectionner tout ce que l'on veut imprimer.
    - JVT - Modification du format de l'ODB :
            * Supression des liens entre les TC2 et les pions LOG ( en l'occurence les Sections de Triage )
            * Création d'un nouveau tag ( pour l'instant, il n'est utilisé que par les TC2 ) permettant de donner les liens hiérachiques :
                <LiensHierarchiques>
                    <PCBSDSante>2010</PCBSDSante>
                    <PCBSDMaintenance>2011</PCBSDMaintenance>
                    <PCBSDRavitaillement>2012</PCBSDRavitaillement>
                </LiensHierarchiques>
    - JVT - [LOG SAN] Le TC2 n'étant plus lié à un secteur de triage, mais a un PC de Zone Soutien santé, il peut utiliser plusieurs sections
            de triage. Les règles de distributions données par le PC ZSS sont :
                - Si le blessé est UE on recherchera un secteur pouvant le trier ET le soigner
                - Sinon, on remplira horizontalement les secteurs capables de trier
                - On respectera cependant les limites de charges existantes
    - JVT - [LOG SAN] Implémentation complète jusqu'au niveau BSD...
    - NLD - Bug fix : La modification de la version 0.41.4 concernant le retour de la composante majeure courante d'une unité
                n'avait était appliquée que sur les connaissances, et pas sur les unités réelles
            => La distance d'esquive d'une unité réelle par rapport à une connaissance valait 0 quand cette unité réelle ne
                contenant plus que des composantes endommagées
    - NLD - L'affichage du terrain a été définitivement enlevé de la SIM - l'option -display n'existe donc plus ...
    - NLD - Plus de dépendance enter le launcher et QT

Version 0.41.4 [19/04/2004]
    - NLD - Connaissances - La mise à jour des attributs d'une connaissance ne se fait plus en fonction du niveau de perception
                actuel, mais en fonction du niveau de perception max depuis la création d'une connaissance.
            En gros,c la distinction D/R/I ne se fait plus qu'à la première découverte d'une unité.
            On suppose que quand on a reconnu/identifié quelqu'un, on le reconnait/identifie tout le temps (jusqu'à la destruction
                de la connaissance), c'est à dire que l'etat opérationnel ou la composition d'une connaissance seront mises à jour
                à partir du moment où cette connaissance a été reconnue une fois.
    - NLD - Le calcul de l'état opérationnel est désormais fait de la manière suivante (dans le cas d'une unité dans la composition est hétérogène ...)
                EtatOps = 0.9 * Ratio de composantes majeures dispo + 0.1 * Ratio de composantes non majeures disponibles
    - NLD - Rapport de force - Dans le calcul des rapports de forces, la dangerosité potentielle d'une unité sur une autre est
                maintenant modulée par l'état opérationnel connu de cette unité.    
            => Pour le calcul de la dangerosité 'instantanée' (DEC_ConnaissanceAgent_Dangerosite), l'état opérationnel influe peu sur le danger potientielle
                    (car un peloton XL ayant 3 Leclercs foutus, et donc ayant un état opérationnel de 0.25, est toujours très dangereux...)
            => Pour le rapport de force, qui correspond à une évaluation de la dangerosité future, l'état ops est beaucoup plus important.
                    afin d'avoir un rapport de force cohérent quand des unités identiques ayant des états opérationnels différents
                    se trouvent face à face
    - NLD - La composante majeure courante d'une unité est maintenant renvoyée de la manière suivante :
                Composante majeure non endommagée > Composante majeure endommagée > Composante non majeure non endommagée > Composante non majeure endommagée > 0
            => Plus de distances de tir / sureté nulle sur une unité n'ayant que des composantes endommagées

Version 0.41.3 [16/04/2004]
    - NLD - Bug fix - La fonction GetEtatOps() buggait quand un type d'unité ne contenait aucune composante majeure (Cf. Types.xml)

Version 0.41.2 [16/04/2004]
    - AGN - ADN - Mise en place technique du module d'impression. Pour imprimer un élément imprimable, il suffit de faire un clic
                droit de cet élément dans sa liste (par exemple d'un pion dans la liste des pions) et de choisir la commande
                désirée. ATTENTION : pour l'aperçu avant impression, la fenêtre de cfg de l'impression apparaît avant. C'est normal
                et cela ne déclenche pas l'impression. Celle-ci sera déclenchée si l'on appuie sur le bouton de l'aperçu.
                Les éléments imprimables sont:
                * les senseurs.
                * les munitions.
                * les lanceurs.
                * les composantes.
                * les pions.
                * les automates.
            Les tableaux de cohérence profite de cette nouvelle fonctionnalité et peuvent donc être imprimés directement depuis ADN.
    - JVT - Nettoyage de l'architecture de PHY ( cf UML dans doc ):
            * merge de PHY_UnitCanChangeDetectionDirection_ABC et PHY_UnitCanHaveFormation_ABC ( les composantes n'ont plus de position
              propre depuis la 0.40.1 )
            * merge de PHY_UnitCanChangeDetectionDirection_ABC et PHY_UnitCanHaveLocation_ABC
            * suppression des classes PHY_UnitCanChangeDetectionDirection_ABC et PHY_UnitCanHaveFormation_ABC
            * Changement de l'ordre en haut de la hiérarchie
            * Suppression de certains héritages virtuels inutiles
    - JVT - Le rayon de la zone d'héliportage est maintenant 2km
    - JVT - Lors d'un DEC_StopHeliportage, tous les pions pouvant être débarquables le sont à la position courrante. Par contre, il
            n'y a pas de phase de débarquement : dans ce cas, ça s'apparente plus à du largage....
    - NLD - Le délai de destruction d'une connaissance est passé de 10 minutes à 30 minutes
    - NLD - Remplacement de la fonction DEC_EtatGlobal() par DEC_Agent_EtatOps()
            Attention, cette fonction retourne une valeur entre 0 et 1, comme la fonction DEC_ConnaissanceAgent_EtatOps()
    - NLD - La distance de tir agent=>connaissance et connaissance=>agent est calculée par rapport à la composante
            majeure courante de la cible, et non plus par rapport à la composante la plus dangereuse, car il pouvait ne
            pas y avoir de composante dangereuse (dangerosité = 0), à cause de la distance source<->cible
    - NLD - Bug fix - En niveau 'détecté', la composition (composantes) d'une connaissance n'est plus mise à jour

Version 0.41.1 [15/04/2004]
    - NLD - Bug fix - Sauvegarde - Pb au reload, lors de l'enregistrement de la nouvelle position d'un pion dans le monde
    - NLD - Bug fix - Pas de composante 'la plus dangereuse' quand la dangerosité de toutes les composantes est nulle
    - NLD - Bug fix - Pb dans PHY_Composante::IsMajor() => Aucune composante n'était considérée comme majeure dans le code ...
    - NLD - Modification de la gestion de la notion de composante majeure d'une unité 
                => passage d'une info statique ventant des data à une info dynamique, ne prenant en compte que 
                    les composantes réelles (ou connues) actives non endommagées et non détruites
    - NLD - Modification de prototype de fonction DEC : Suppression du parmètre E_ValiditeRequete
                B DEC_ConnaissanceAgent_EstValide( U /*T_ConnaissanceAgent*/  );
                B DEC_ConnaissanceObjet_EstValide( U /*T_ConnaissanceObjet*/  );

Version 0.41 [14/04/2004]
    - JVT - Les blessés qui meurrent dans leurs pions avant d'entrer dans la chaîne log sont maintenant correctement renvoyés à MOS
    - AGN - Suppression de la partie connaissances et équipes dans ADN.
    - JVT - Envoi des informations de résultats de tir vers MOS
    - JVT - Remise à la nouvelle sauce ASN des informations d'emports ( héliportage et chaînes TC2 )
    - JVT - Nouvelles informations sur les TC2 dans MOS ( séparé par chaînes )
    - JVT - Nouvelles informations dans les pions sur les transferts de composantes ( renforcement, maintenance )
    - JVT - Nouvelles informations dans les pions sur les transferts d'humain ( chaine santé )
    - JVT - MOS/IDClasses contient maintenant aussi les différentes pannes de matériel
    - JVT - Correction d'un bug d'enregistrement des checkpoints pour les pannes de type aléatoires ( assert )
    - JVT - Correction d'un bug lors de la surcharge des composantes depuis l'odb ( les composantes 'réparable' sont maintenant créées
            et ont des vrais pannes ... )
    - JVT - Correction de bugs lors de l'envoi d'info TC2 vers MOS dans le cas ou plusieurs chaines de même types fonctionnenent en
            même temps
    - JVT - Vu que comme d'habitude, les valeurs par défaut le restent à jamais, le tag <DistanceDetectabilite> ( existant depuis la 38.1 )
            n'est plus un tag par défaut.
    - NLD - Renommage de functions DEC
                DEC_ConnaissancesAgent_PotentiellementDangereuses   => DEC_Connaissances_AgentsPotentiellementDangereux
                DEC_ConnaissancesAgent_PrenantAPartie               => DEC_Connaissances_AgentsPrenantAPartie
                DEC_ConnaissancesObjet_Obstacles                    => DEC_Connaissances_Obstacles
                DEC_ConnaissancesObjet_Embossements                 => DEC_Connaissances_Embossements
                DEC_ConnaissanceAgent_MaxDistanceTir                => DEC_Tir_PorteeMaxPourTirerSurAgent
                DEC_ConnaissanceAgent_MaxDistanceTirDebarque        => DEC_Tir_PorteeMaxPourTirerDebarqueSurAgent
    - NLD - Nouvelle fonction DEC
                - R DEC_Tir_PorteeMaxPourEtreTireParAgent( U /*T_ConnaissanceAgent*/ , I /*E_ValiditeRequete&*/, * /* ph voulu, par défaut 0.8 */ );
    - NLD - Nettoyage de la gestion des requêtes sur les distances de tir / dangerosité  
                - Tout le bas niveau se fait au niveau de PHY_ComposanteType
                - GetFightScore => GetDangerosity
                - Symétrie entre DEC_Knowledge_Agent et PHY_UnitCanFire ( GetMaxRangeToFireOn(), GetMostDangerousComposante(), GetDangerosity() )
                

Version 0.40.2 [14/04/2004]
    - NLD - Suppression des fonctions DEC suivantes :
                DEC_ConnaissanceAgent_MinDistanceTir()
	            DEC_ConnaissanceAgent_MinDistanceTirDebarque()
                DEC_VitesseCourante()
    - NLD - Nouvelle fonction DEC
                B A::DEC_Agent_EstEnMouvement()
                R A::DEC_ConnaissanceAgent_EtatOps( U /*T_ConnaissanceAgent*/ , I /*E_ValiditeRequete&*/ );

    - NLD - Bug fix - La connaissance d'un agent était mise à jour même quand l'agent percevant était mort
    - NLD - Nettoyage : le flag 'bFrameJustAfterDeath_' (!) a enfin été viré
    - NLD - Modification dans le calcul de la distance max de tir - la composante le plus dangereuse
            est déterminée à partir de la liste des connaissances connues, et non plus à partir de l'unité
            réelle connue

Version 0.40.1 [13/04/2004]
    - AGN - Nouvelle version de DIA - Correction d'un bug dans propagation de l'activité
    - NLD - Plus de position dans les composantes - RECHECKER LES DELAIS DE TRANSIT DE LA CHAINE MAINTENANCE !!
    - NLD - Suppression de la fonction DEC    DEC_UserTypeList_GetSize
    - NLD - Nouvelles fonctions DEC:
                B DEC_UserTypeList_Contient             ( S /*list*/, U /*elt*/ )
                B DEC_ConnaissanceAgent_EstEnMouvement  ( U /*T_ConnaissanceAgent*/ , I /*E_ValiditeRequete&*/ );
                S DEC_ConnaissancesObjet_Obstacles      (); // Retourne T_ConnaissanceObjetListe
                S DEC_ConnaissancesObjet_Embossements   (); // Retourne T_ConnaissanceObjetListe
                I DEC_ConnaissanceObjet_Type            ( U /*T_ConnaissanceObjet*/ , I /*E_ValiditeRequete&*/ );
                B DEC_ConnaissanceObjet_EstContourne    ( U /*T_ConnaissanceObjet*/ , I /*E_ValiditeRequete&*/ );
                
Version 0.40 [08/04/2004]
    - AGN - Correction d'un  bug dans ADN : on ne pouvait pas fermer un projet sans faire planter l'application. Résolu.
    - NLD - Bug fix : lenteur lors de la phase d'enrichissement de l'arbre du path finder (fuseau / objets / path find)
    - NLD - Modifs ASN :
            - Durée du tick 
            - Modif cosmétiques vues avec Fabien
            - Connaissance agents / objets
            - Résultats des tirs
            - Remontées correctes des chaines logistiques
            - Nouveaux messages pour les effets de tirs spéciaux (fumigènes / obus éclairant ...)
            - 2 nouveaux types de limas (ligne de début de mission / ligne de fin de mission)
            - Suppression du GDH de fin de mission dans les paramètres globaux des missions automates et pions
    - NLD - Modifications ODB 
            - Le camp doit être spécifié dans le GTIA, et non plus dans l'automate
            - Chaque automate DOIT avoir un GTIA (plus de gtia par défaut ...)
                <Agents>
                    <GTIAs>
                        <GTIA id="1">
                            <Camp>Ami</Camp>
                        </GTIA>
                    </GTIAs>

                    <Automates>
                        <Agent categorie="Compagnie GEN Lourde">
                            <ID>524288</ID>
                            <GTIA>1</GTIA>
                            <Position>31TCN0007879536</Position>
                        </Agent>
                    </Automates>
                    ...
    - NLD - Un nouvel attribut peut être spécifié dans la liste des composantes d'un type de pion permet de spécifier
            si une composante est majeure. Si aucune composante n'est spécifiée, la première composante est prise comme
            comme étant majeure. CETTE NOTION EST IMPORTANTE, CAR ELLE EST UTILISEE DANS LE CALCUL DE LA DANGEROSITE
                <Pions>
                    <Type categorie="Section Combat GEN" id="Pion GEN">
                    <Symbole>SectionGenieMecanisee</Symbole>
                  <DIAModel>Section GEN</DIAModel>
                  <Composantes>
                    <Composante majeur="1" type="VAB GEN"/>
                    <Composante majeur="1" type="VAB GEN"/>
                    <Composante majeur="1" type="VAB GEN"/>
                    <Composante type="Leclerc"/>
                  </Composantes>
    - NLD - Perception 
                - Il n'y a plus de tests réels de vision sur les amis d'un même GTIA : le niveau d'identification est 'identifié' par défaut.
                - Jusqu'à maintenant, la partie 'aléatoire' de la vision n'était active que si l'unité testée n'était pas vue 
                        au tick précédent - Maintenant, cette partie n'est active que si l'unité n'est pas connue (Car engendrait 
                        des problèmes de création/destruction immédiate de connaissances ...)
    - NLD - Connaissance - Généralités
            - La gestion de la connaissance a été complétement refaite après spécifications avec JVT/MIA/NLD/SDE
                => Utilisation d'un système de type 'BlackBoard' (sur idée de JVT), contenant l'ensemble des connaissances
                   utiles au décisionnel, à savoir
                    - Unités percues          - niveau pion
                    - Objets percus           - niveau pion
                    - Unités connues          - niveau GTIA
                    - Objets connus           - niveau camp
                    - Unités prenant à partie - niveau pion
                    - Tirs indirects détéctés - niveau pion
                    - Rapport de force local  - niveau pion
                    - Rapport de force global - niveau automate
            - Globalement, au niveau des scripts, on abandonne le fonctionnement en 'PUSH', dans lequel le moteur remplissait
                    des catégories DIA ou appelait des évenements, pour passer à un mode 'PULL', on ce sont les scripts qui
                    appellent des fonctions DEC qui retournent la liste des connaissance demandées
            - Notes sur la gestion de la connaissance agent :
                - Il n'y a plus de prédiction sur la nature, et le camp d'une unitée détectée. Globalement, le principe suivant a été 
                    appliqué au niveau des connaissances : soit on connait l'attribut et il est valide, soit on ne le connait pas.
                    => Le camp et la nature d'une unité détectée sont inconnus
                - La notion de 'pertinence' a été ajoutée sur les connaissances : elle correspond à la validité de cette connaissnace
                     Elle décroit avec le temps (quand la connaissance ne correspond plus à une unité percue), et la connaissance
                     associée est détruite quand cette 'pertinence' atteint 0. (Cet attribut est visible dans MOS_Light)
                - Notion de dangerosité : valeur entre 1 et 2 (pour les scripts)
                    Calcul de la dangerosité d'une connaissance par rapport à une unité :
                        - Max des PH/PK de la connnaissance sur les composantes majeures de l'unité cible
                        - Petite modulation avec la pertinence de cette connaissance
                        - Petite modulation avec l'état opérationnel connu de cette connaissance
                - Rapport de force local (U = unité calculant son rapport de force local)
                     ForceENI = Somme de la dangerosité des ennemis de U
                     ForceAMI = Somme de la moyenne des dangerosites de mes amis (et U) sur l'ensemble des ennemis de U
                     RapForLocal = (ForceAMI / ForceENI), redressé entre 0.2 et 5
                - Rapport de force global (A = unités de l'automate calculant son rapport de force global)
                     ForceENI = Somme de la moyenne des dangerosités des ennemis sur A
                     ForceAMI = Somme de la moyenne des dangerosites de mes amis (et A) sur l'ensemble des ennemis de A
                     RapForGlobal = (ForceAMI / ForceENI), redressé entre 0.2 et 5
                - La remontée de la valeur du rapport de force est lissée, afin d'éviter les brusques changement de valeur
                     faisant boucler les scripts.
                - Le calcul du rapport de force n'utilise plus les poids statiques (pour l'instant, ces poids statiques sont
                    toujours lus par la SIM, en attendant que le nouveau rapport de force soit validé)                    
    - NLD - Connaissance - Impact sur les scripts et les data
            - Le fichier 'connaissance.xml' (et donc son contenu ...) n'est plus utilisé
            - Les types Base_Pion / Perception_Pion / Perception_Compagnie / Shared_Pion n'existent plus (ainsi que les containers associés)
            - Nouveaux types 
                * typedef UserType                  T_ConnaissanceObjet;      // Type C++ : uint d'index sur un DEC_Knowledge_Object
                * typedef UserType                  T_ConnaissanceAgent;      // Type C++ : uint d'index sur un DEC_Knowledge_Agent
                * typedef list<T_ConnaissanceObjet> T_ConnaissanceObjetListe; 
                * typedef list<T_ConnaissanceAgent> T_ConnaissanceAgentListe;  
                * typedef list<T_Localisation>      T_LocalisationListe;       
            - Note : gestion des 'listes de UserType' 
                * La fonction DIA_Size() fonctionne sur ces listes
                * Pour obtenir le nième element, utiliser DEC_UserTypeList_GetAt()
            - Toutes les 'knowledge_categories' ont été virées, sauf :
                - Pour les pions:
                    * points_interressants
                    * ordres_recus
                    * demande_tir_appui
                    * resultats_tir_indirect
                    * unites_en_renfort 
                - Pour les automates:
                    * points_interressants
                    * unites_oc_traite
                    * ordres_recus
                    * rcs_pions
            - Fonctions DEC virées : (En accord avec SDE/MIA)
                    DEC_DeplacementDiscret
                    DEC_Formation
                    DEC_Capacite
                    DEC_EnvoyerComposantesVersChaineLOG
                    DEC_WriteToGUI
                    DEC_RapportForceLocal
                    DEC_RapportDeForceCorrige
                    DEC_RapportDeForceImmediat
                    DEC_ObtenirBarycentreListePoints
                    DEC_Relation
                    DEC_StopPosture
                    DEC_NomUnique
                    DEC_EtatNeutralisation
                    DEC_DetruireInfoGeo_Objet
                    DEC_CreerInfoGeo_Objet
                    DEC_RecherchePossibleRepresentationDetecte
                    DEC_RecherchePossibleRepresentationReconnu
                    DEC_PreditCamp
                    DEC_PreditNature
                    DEC_PreditAttitude
                    DEC_CreerRepresentation
                    DEC_EffaceConnaissance_Pion
                    DEC_EffacePerception_Pion
                    DEC_CreerRepresentationObjet
                    DEC_EffacerRepresentationObjet
                    DEC_EstAgressif
                    DEC_Pause
                    DEC_XOrList
                    DEC_And
                    DEC_Or
                    DEC_Comp
                    DEC_Break
                    DEC_Itineraire_Etat
                    DEC_IntersectionItineraires
                    DEC_FiltreItineraireEnnemis
                    DEC_Position_Etat
                    DEC_ExtrapolerPosition
                    DEC_GetDelaiMoyenRecoPoint
                    DEC_GetDelaiMoyenObservationPoint
                    DEC_InitialiseComposition
                    DEC_SetComposition
                    DEC_UpdateComposition
                    DEC_PionEstDetruit
                    DEC_PionEtatDommages
                    DEC_UpdateInfoDetection
                    DEC_NomUniqueDe
                    DEC_NomRepresentation
                    DEC_NomObjet
                    DEC_ObtenirLePionLePlusProche
                    DEC_GetCompositionCamp
                    DEC_CommuniqueConnaissances
                    DEC_CommuniqueConnaissance
                    DEC_CommuniqueDestruction
                    DEC_EffaceConnaissance_Cie
                    DEC_TempsMiseEnPosture
                    DEC_GetDelaiMoyenCoupDeSonde
                    DEC_NatureCategorie
                    DEC_NatureMobilite
                    DEC_NatureQualification
                    DEC_NatureSpecialization
                    DEC_StartTirNonDebarque    
                    DEC_MaxDebarquement
                    DEC_GetEffectifsDebarques
                    DEC_TransfertComposantes
                    DEC_UserTypeList_PushBack 
            - Fonctions DEC ajoutées    
                    R DEC_ConnaissanceAgent_MinDistanceTir             ( U /*T_ConnaissanceAgent*/ , I /*E_ValiditeRequete&*/, * /* ph voulu, par défaut 0.8 */);
                    R DEC_ConnaissanceAgent_MaxDistanceTir             ( U /*T_ConnaissanceAgent*/ , I /*E_ValiditeRequete&*/, * /* ph voulu, par défaut 0.8 */ );
                    R DEC_ConnaissanceAgent_MinDistanceTirDebarque     ( U /*T_ConnaissanceAgent*/ , I /*E_ValiditeRequete&*/, * /* ph voulu, par défaut 0.8 */ );
                    R DEC_ConnaissanceAgent_MaxDistanceTirDebarque     ( U /*T_ConnaissanceAgent*/ , I /*E_ValiditeRequete&*/, * /* ph voulu, par défaut 0.8 */ );
                    U DEC_ConnaissanceAgent_Position                   ( U /*T_ConnaissanceAgent*/ , I /*E_ValiditeRequete&*/ );
                    I DEC_ConnaissanceAgent_NatureAtlas                ( U /*T_ConnaissanceAgent*/ , I /*E_ValiditeRequete&*/ );
                    I DEC_ConnaissanceAgent_NatureArme                 ( U /*T_ConnaissanceAgent*/ , I /*E_ValiditeRequete&*/ );
                    I DEC_ConnaissanceAgent_NiveauPerceptionMaxGtia    ( U /*T_ConnaissanceAgent*/ , I /*E_ValiditeRequete&*/ ); // Retourne le niveau de perception MAX d'une connaissance (le plus haut niveau ayant été associé à cette connaissance depuis sa création)
                    R DEC_ConnaissanceAgent_Dangerosite                ( U /*T_ConnaissanceAgent*/ , I /*E_ValiditeRequete&*/ ); // Retourne la dangerosité, entre 1 et 2
                    U DEC_ConnaissanceAgent_UniteReelle                ( U /*T_ConnaissanceAgent*/ , I /*E_ValiditeRequete&*/ ); 
                    B DEC_ConnaissanceAgent_EstPercuParUnite           ( U /*T_ConnaissanceAgent*/ , I /*E_ValiditeRequete&*/ );
                    I DEC_ConnaissanceAgent_EstUnEnnemi                ( U /*T_ConnaissanceAgent*/ , I /*E_ValiditeRequete&*/ ); // Retourn un E_Tristate (oui/non/nesaispas)
                    B DEC_ConnaissanceAgent_EstValide                  ( U /*T_ConnaissanceAgent*/ , I /*E_ValiditeRequete&*/ );
                    S DEC_ConnaissancesAgentPrenantAPartie             (); // Retourne T_ConnaissanceAgentListe
                    S DEC_ConnaissancesAgentPotentiellementDangereuses (); // Retourne T_ConnaissanceAgentListe
            
                    B DEC_ConnaissanceObjet_EstValide                  ( U /*T_ConnaissanceObjet*/ );
                    U DEC_ConnaissanceObjet_Localisation               ( U /*T_ConnaissanceObjet*/ );                                         
            
                    R DEC_RapportDeForceLocal (); // Retourne une valeur entre 0.2 et 5 (0.2 = très défavorable / 2.4 = neutre / 5 = favorable)
                    R DEC_RapportDeForceGlobal(); // Retourne une valeur entre 0.2 et 5 (0.2 = très défavorable / 2.4 = neutre / 5 = favorable)
            - Fonctions DEC modifiées
                    - Toutes les actions sur les objets ne prennent plus un RepObjet, mais un T_ConnaissanceObjet

            - Notes concernant l'utilisation d'une connaissance (agent/objet) alors qu'elle a été détruite par le moteur
                    - Ancienne version : 
                            * Les scripts devaient appeler S_ConnaissanceEstImportante() ou S_Parametre_Objet_EstInvalide() 
                              pour s'assurer que la connaissance était valide. 
                            * Quand une connaissance non valide était utilisé, la SIM crashait
                    - Nouvelle version
                            * Les scripts doivent maintenant appeler les fonctions DEC_ConnaissanceObjet_EstValide() / DEC_ConnaissanceAgent_EstValide
                              avant de l'utiliser dans un comportement
                            * Si une connaissance non valide est utilisée, la SIM ne crashe plus. 
                            * Toutes les fonctions DEC prenant une connaissance en paramètre, prennent également un paramètre 
                                de type E_ValiditeRequete
                                spécifiant si la requête a pu être executée, ou si elle n'a pas pu l'être car la connaissance
                                associée n'est plus valide
            - Les resultats de tirs indirects ne sont pas encore passés par le nouveau système de connaissances
            - Fonctions scripts commentées (car ne compilant plus) et/ou désormais inutiles
                    S_ForceDistanceObjet
                    S_EstEmbossementADistance
                    S_ListeEmbossements
                    S_LocalisationProche
                    S_NomMission
                    S_CleanConnaissance
                    S_EstDetectee
                    S_EstPercu
                    S_CherchePerceptionPion
                    S_ChercheProxyDe
                    S_NomDetection
                    S_TypeMission
                    S_ConnaissanceImportante
                    S_Parametre_Objet_EstInvalide
                    S_Parametre_RepPion_EstInvalide
                    S_Parametre_SharedRep_EstInvalide
                    S_Ennemi_EnCours
                    S_EtatCourant
                    S_EniOperationnel
                    S_EniDetruit
                    S_EniDetruitPhysique
                    S_EniImmobilise
                    S_EniNeutralise
                    S_EniSurpris
                    S_EstDetecteParEni
                    S_EstDetecteParEnis
                    S_CategorieEstMotorisee
                    S_CategorieEstMecanisee
                    S_CategorieEstBlindee
                    S_NomEni
                    S_SituationLogSurEni
                    S_ChercheEni_ProchePosition
                    S_EstDetectee
                    S_EstPercue
                    S_CherchePerceptionPion
                    S_ChercheProxyDe
                    S_ConnaissanceImportante
                    S_TirEfficaceSur
                    S_EstADistanceTir
                    EVT_DEC_Demande_Tir_Appui
                    EVT_DEC_Demande_FinTir_Appui
                    S_ForceDistance_Pt
                    S_ForceDistance
                    S_ForceSoutien
                    S_EstEnnemi
                    S_EstAmi
                    S_EstNeutre
                    S_EstAmi_Valide
                    S_EnisPercus_Sel
                    S_Parametre_Objet_EstInvalide
                    S_Parametre_RepPion_EstInvalide
                    S_Parametre_SharedRep_EstInvalide
                    S_Position
                    S_SituationLogSurEni 
    - NLD - Nettoyage code :    
                - PHY::Clean() renommés en PHY::Update()
                - PHY_Composante::GetProperties() => PHY_Composante::IsLoadable() / PHY_Composante::IsMajor()
                - Suppression des DEC_Team_KnowledgeXXX / DEC_Rep_Object / DEC_Base_Pion
                - DEC_Team => MIL_Team
                - Déplacement et cleanage de tout ce qui était lié au path find et qui se trouvant dans DEC_Agent_ABC 
                    (GetCost() / liste d'enis / liste d'objets) dans DEC_Path
                - Tout ce qui est limites de bonds / flot à été définitivement viré du code (trop pourri et inutilisable ...)
                    (Suppression de la section <DistancesBond> dans les data des types d'unités)
                - Suppression DEC_PointVision et consors
                - Unification PHY_PerceptionAgent et PHY_PerceptionObjet (devrait être renommé PHY_PerceptionView)
    - NLD - Ajout deux types de limas : ligne de début de mission / ligne de fin de mission 
            NB - Elles ne sont pas encore prises en compte dans le moteur pour l'instant (pas de modification du fuseau ...)$
    - NLD - Suppression du gdh de fin de mission dans les paramètres communs des missions pions/automates

   
Version 0.39 [30/03/2004]
    - NLD - A partir de cette release
                - Le script compiler n'est plus livré qu'en version en Release
                - EAI n'est plus livré
                - La version IXI de la SIM n'est plus livrée
                - Le débuggeur DirectIA se trouve dans le répertoire $/MVW_v10/Releases/Tools
    - AGN - DirectIA : Corrections de bugs concernant la partie motivation
    - AGN - DirectIA/MT : Révision du parser pour gagner en rapidité. Ce qu'il y a sur la base parse. Attentions :
                * Ne pas mettre de symboles de commentaires dans le code (par exemple pas de "// nia nia nia//")
                * Dans la définition d'une macro, ne pas mettre de variables ou de valeurs qui contient le nom
                    d'un paramètre (par exemple si on a une macro M_Toto( eContext ), ne pas utiliser de valeur eContextMachin
                    dans la macro).
                * Pour les macros, elles sont traitées avt toute chose, même les include donc placer les macros qui doivent
                    prendre une vrai valeur au début.
    - AGN - Script Compiler : lorsqu'un script est compilé avec script compiler, l'outil produit des fichiers temporaires
            correspondant aux fichiers préprocessés (ie sans commentaires et avec les macros remplacés). Si vous ne comprenez
            pas une erreur, vérifier ces fichiers temporaires pour voir ce que les macros ont remplacés.
    - AGN - ADN - Prise en compte des modificateurs de distance de détection pour les senseurs.
    - AGN - Passsage à la version 3.3 de DirectIA
            -> Conséquences développement
                - on n'a plus qu'un seul type d'archive à manipuler -> slt une version du script_compiler est nécessaire.
                - on ne crée plus de "dummy agent" pour lire un modèle dans la simulation.
                - possibilité de créer des erreurs répercutées par le langage de script (jusqu'au debuger si celui-ci est
                    en route). Soit en utilisant la méthode ThrowsError de DIA_Call_ABC soit en faisant un throw DIA_Internal_Exception.
                - révision de l'init des modèles : si un modèle SCIPIO utilise le même point d'entrée des scripts qu'un modèle SCIPIO déjà
                    initialisé, on réutilise le modèle DirectIA.
            -> Conséquences modélisation
                - les scripts ont été corrigés pour les erreurs détectées avec le nouveau parser.
                - le nouveau parser est plus rapide.
                - si lorsqu'on utilise une fonction DIA_ utilisant une catégorie, celle-ci n'existe pas, une erreur est levée
                    (avt ce comportement était toléré).
                - si il arrive une erreur dans l'exécution du script, celle-ci devrait être normalement indiquée (plus d'assert à la con).
                - il est possible de lancer un service de debug avec scipio en utilisant l'option '-diadebugserver'.
                - la GUI de debug est en développement donc des problèmes sont à prévoir, notamment pour la partie 'view' du debuger. La
                    partie debug doit fonctionner sans problème. Une démonstration de la GUI sera faite.
    - AGN - Modification (sans conséquence sur les scripts existants) de l'activation d'un comportement A par un comportement B.
    - JVT - Modification des tags pour les munitions indirectes de type Eclairants et Fumigènes :
                <RayonNeutralisation> => <DemiLongueur>
                <RayonAttrition>      => <DemiLargeur>
    - JVT - Ajout de tags pour les munitions indirectes de type Eclairants et Fumigènes :
                <DureeDeployement>
                <DureeVie>
    - JVT - DEC_StartTirIndirect fonctionne maintenant aussi avec les obus ayant un impact sur la météo ( obus fumigène et 
            éclairant ) [ tirs indirects ]
    - JVT - Ajout de deux nouvelles fonctions pour tous, permettant de tirer des obus fumigènes :
                V A::DEC_LancerFumigeneDir( T_Direction, R ) [ à 50m ( pour l'instant en dur ) dans la direction donnée ]
                V A::DEC_LancerFumigeneEni( A, R )           [ à mi distance entre le lanceur et l'ennemi ]
            Le R correspond au nombre d'obus fumigènes voulus
    - JVT - Ajout dans les senseurs d'un nouveau type de précipitation : <Fumigene>
    - JVT - Ajout dans les senseurs d'un nouveau type d'éclairement    : <Eclairant>
    - JVT - Les actions de feux ( directs et indirects ) ainsi que les collisions avec objet font la synthèse des attritions
            qu'elle ont provoquées afin de les envoyer vers MOS.
    - JVT - Ajout de nouvelles classes de géométrie : MT_Ellipse et MT_DiscreteEllipse
    - JVT - Modification des paramètres de l'action DEC_StartHeliportage : (#408)
                A, U, S, I => A, U, S, I, I, I, I 
                ( myself, point d'arrivée, liste de T_Pion, pathtype, pathignoretype, pathinfotype, état courrant )
            Les trois infos de pathfind ajouté peuvent avoir les mêmes valeurs que pour la fonction DEC_CreerItineraire
    - JVT - Le rayon du cercle d'autorisation héliportage est passé de 500 m à 1000 m ... (#408)
    - JVT - Bug fix : Il n'y a plus de crash lorsque l'odb spécifie un id d'automate qui est un id de pion ( remplacé par une
            erreur init sim )
    - JVT - Ajout d'une nouvelle action pour les automates LOG TC2 : PHY_ActionMaintenance
    - JVT - Enregistrement de deux nouvelles fonctions script sur le TC2  pour accèder à l'action de maintenance :
                * V DEC_StartMaintenance( A )
                * V DEC_StopMaintenance ( A )
    - JVT - Ajout d'un nouveau générateur de nombre aléatoire ( MT_GaussianRandom ) dont les tirages respectent une "distribution
            normale" de moyenne et de variance quelconques. Remarque : son utilisation est assez gourmande ( log et sqrt ) , mais
            elle génére les nombres deux par deux....
    - JVT - Déplacement des infos de neutralisation dans la bonne chaîne ( TC2/ChaineSante/Temps/Neutralisation => 
            TC2/ChaineMaintenance/Temps/Neutralisation ).
    - JVT - Changement du format des infos de temps de neutralisation ( pour uniformiser avec les autres ).
    - JVT - Modification du type de random utilisé pour la nbeutralisation ( utilise le même que pour tout le reste de la chaine
            santé, soit une distribution normale plutôt qu'une distribution linéaire )
    - JVT - Modification du fichier LOG.xml ( Tag TC2/ChaineMaintenance/Temps/Reparations ) : Temps de réparation suivant les NTI
               <Reparations>
                    <NTI1 tempsMoyen="4"  variance="1.5" />
                    <NTI2 tempsMoyen="6"  variance="2"   />
                    <NTI3 tempsMoyen="8"  variance="2"   />
                    <NTI4 tempsMoyen="10" variance="2"   />
                </Reparations>
                Les temps sont exprimés en heure.
    - JVT - Ajout d'un nouveau type de "dotation" acceptée dans les tags transport :
                <Transport type="materiel">
                    <TempsChargement>15</TempsChargement>
                    <TempsDechargement>15</TempsDechargement>
                </Transport>
            Attention, contrairement aux autres dotations en transport, cette dotation n'utilise pas la capacité en U : une
            composante pouvant transporter une autre composante ne peut en effet en transporter qu'une et une seule.
    - JVT - La fonction script "DEC_EnvoyerComposantesVersChaineLOG" est maintenant en obsolète
    - JVT - Modification du fichier LOG.xml ( Tag TC2/ChaineMaintenance/CategoriesDommages/Attrition ) : Probabilité d'avoir les
            différents NTI sachant que la composante vient de passer en état eCompReparableWithEvacuation.
            Ajout d'une définition des différentes pannes possibles suite à une attrition categorisees par NTI :
            <ChaineMaintenance>
                <CategoriesDommages>
                    <Attrition>
                        <NTI1 pourcentage="40">
                            <Panne nom="Panne1" mobilite="true" pourcentage="50" tempsMoyen="4"   variance="1.5"></Panne>
                            <Panne nom="Panne2" mobilite="false" pourcentage="40" tempsMoyen="3"   variance="1"></Panne>
                            <Panne nom="Panne3" mobilite="false" pourcentage="10" tempsMoyen="3.5" variance="1"></Panne>
                        </NTI1>
                        ...
            Remarque : Lorsque l'attribut mobilite est à false, il faut que le TC2 utilise un remorqueur pour aller chercher la
            composante, sinon, elle va toute seule vers le TC2...
    - JVT - Ajout d'un temps de diagnostic (en minutes) pour les pannes dans log.xml
                <TempsDiagnostic>30</TempsDiagnostic>
    - JVT - Ajout d'informations pour la gestion de la capacite de fonctionnement d'une chaine maintenance dans LOG.xml
                <CapaciteReparations>
                    <NbrVehiculesPonderesParJour>500</NbrVehiculesPonderesParJour>
                    <Ponderation>
                        <CharLourd          ponderation="4" />
                        <CharMoyen          ponderation="3" />
                        <BlindeLeger        ponderation="2" />
                        <TransportBlinde    ponderation="2" />
                        <Aeronef            ponderation="4" />
                        <VehiculeNonProtege ponderation="1" />
                        <Combattant         ponderation="0" />
                    </Ponderation>
                </CapaciteReparations>
    - JVT - TEMPORAIRE : En attendant qu'il y ait un traitement de la chaîne maintenance au niveau de la BSD, tous les NTI sont
            gérés au niveau du TC2...
    - JVT - Ajout d'un tag <PanneAleatoire> dans les <CategoriesDommages>. Le format est le même que pour les pannes venant d'une
            attrition
    - JVT - Ajout dans log.xml des probabilite d'avoir des pannes aléatoires :
            <ChaineMaintenance>
                <Temps>
                    <PanneAleatoires>
                        <CharLourd          NEVA="4" EVA="2" />
                        <CharMoyen          NEVA="4" EVA="2" />
                        <BlindeLeger        NEVA="4" EVA="2" />
                        <TransportBlinde    NEVA="4" EVA="2" />
                        <Aeronef            NEVA="4" EVA="2" />
                        <VehiculeNonProtege NEVA="4" EVA="2" />
                        <Combattant         NEVA="4" EVA="2" />
                    </PannesAleatoires>
            Les valeurs sont exprimées en % de véhicule en panne par jour
    - JVT - En plus des pannes subies par attrition, les composantes peuvent maintenant subir des pannes aléatoires( preprocessing
            dans MIL_AgentManager::DoUpdates ). Pour éviter les surprises, les pannes aléatoires de la journée sont pour l'instant
            affichées dans la fenêtre de LOG au début de la journée...
    - NLD - La version IXI refonctionne
    - AGN - ADN : Logistique -> ajout de l'onglet de la maintenance pour prendre en compte les modifs de JVT.
    - AGN - ADN : Logistique -> Transfert des temps de neutralisation dans l'onglet de la maintenance

Version 0.38.1 [01/03/2004]
    - JVT - Modification de la prise en compte du choix de la munition ( tir direct ) : Le PH joue maintenant un rôle plus
            important ( utilisé comme multiplicateur, plutôt que comme oui/non )
    - JVT - Bug Fix : PHY_UnitCanHaveComposante_ABC::RemoveComposante : Modification de la prise en compte de la dégradation
                      des dotations pour que la prise en compte des unités renforcées soient correctes
    - JVT - Bug fix : Sauvegarde de la partie PHY_UnitCanLoadUnload_ABC ( checkpoints )
    - JVT - Les humains héliportés apparaissent maintenant dans l'emport du pion Hélicoptère de MOS Light
    - JVT - Mise à jour de l'état embarqué/débarqué lors de changement d'état des composantes ( #398 )
                Exemple : Section INF débarquée, les groupes de fantassins se font tous shootés => Section INF embarquée ;) 
    - JVT - Modification de l'algorithme de détection : la posture de la cible modifie aussi la distance de détection
    - JVT - Ajout d'information dans les fichiers des senseurs :
                <Postures>
                  <Mouvement>
                    <Detecteur>0.7</Detecteur>
                    <Detecte>1</Detecte>
                    <DistanceDetectabilite>1</DistanceDetectabilite> <==================
                  </Mouvement>
                  ....
            Ce nouveau tag est optionel mais un warning est envoyé s'il n'est pas mis.
            Sa valeur par défaut est 1 ( soit aucune modification de résultat par rapport à la version précédente de l'algo )
    - JVT - Bug fix : envoi erroné vers MOS du volume de dotation initialisé dans un pion lorsque la dotation n'existe
            que dans le TC1 d'un pion.
    - JVT - Bug fix : le recomplètement en dotation prend maintenant en compte le TC1
    - NLD - L'option '-nodecdebug' n'existe plus, et est remplacée par '-decdebug'
    - NLD/JVT - Le calcul de la distance de tir 'DEC_DistanceTir()' utilise la composition du pion reel, et non plus la composition supposée
    - AGN - Le rapport de force des unités détectées est fixé à 1
    - AGN - La composition des unités détectées n'est plus prédite, elle est donc vide
    - AGN - Les composantes 'non-ok' ne sont plus prises en compte lors de la mise à jour de la composition d'une connaissance
    - JVT - Lorsqu'une demande de ravitaillement est effectuée par un automate alors qu'une autre demande est encore en cours,
            il n'y a plus d'assert, mais la demande est refusée + message dans log.

Version 0.38 [26/02/2004]
    - NLD - Quicherie - Cette version est la même que la 0.37.5

Version 0.37.5 [20/02/2004]
    - NLD - Bug fix - Pb d'écriture des checkpoints

Version 0.37.4 [19/02/2004]
    - NLD - Bug fix - La fonction DEC_DeterminerPositionParRapportALima() renvoyait une position en 0/0 qd la lima ne coupait
                    pas les deux bords du fuseau
    - NLD - TMP - Quand un crash est détecté dans l'évaluation d'un moteur décisionnel, l'erreur est catchée, la mission
                    du pion est annulée, et un RC 'mission impossible' est envoyé

Version 0.37.3 [18/02/2004]
    - NLD - Bug fix - MOS_Light : Oubli d'un paramètre 'agent reconnaissant' dans la mission ASA AssurerMiseEnOeuvreLRM
    - NLD - Bug fix - En RELEASE (!), les humains étaient mal décomptés dans les unités => désinlinement de la methode
                PHY_UnitDotationHuman::ChangeHumansCategory()
    - NLD - Bug fix - Crash lors de la destruction de l'action de log PHY_ActionResupply
    - AGN - Bug fix - Connaissance niveau GTIA

Version 0.37.2 [17/02/2004]
    - NLD - Bug fix : l'attribut 'état opérationnel' n'était pas envoyé après une action magique de recomplétement
    - NLD - MOS_Light : affichage de l'attribut 'état opérationnel' du pion reel
    - NLD - MOS_Light : affichage de l'attribut 'statut' d'une connaissance
    - NLD - Bug fix : Changement de la gestion de la création d'une perception lorsqu'une unité se fait tirer dessus :
                Avant : EVT_Dec_PriseAParti() => Création de la perception
                Apres : EVT_Dec_PriseAParti() : uniquement pour l'ajout à la catégorie unites_prise_a_parti
                        + PHY_PerceptionDirectFire pour la perception
    - NLD - DEC_MunitionTirDirect() et DEC_MunitionTirIndirect() renvoit '-1' à la place de '0' qd le max de la munition
                concernée est de 0
    - NLD - Activation de la vision des unités mortes
    - AGN - L'etat opérationnel d'une connaissance est mis à jour au niveau detecté, en non plus à partir du niveau reconnaissance
    - NLD - Bug fix : La liste des renforcements était mal envoyée

Version 0.37.1 [13/02/2004]
    - JVT - Bug fix : le temps avant prochain ravitaillement est correctement renvoyé dans le cas ou l'on est en cours de déchargement
            des dotations ( = 0 )
    - JVT - Bug fix : Lorsque les composantes sont en phase de retour d'un ravitaillement, le ravitaillement en question n'est plus
            considéré comme actif pour l'automate en ayant fait la demande. 
    - NLD - Bug fix : PHY_UnitCanHealHumans_ABC::Save/LoadCheckPoint(), une section XML uniquement composée de chiffres était
            écrite, ce qui est interdit ...
    - NLD - Ajout d'un logger de type 'telnet' : il est maintenant possible de se connecter en telnet sur la sim, sur le port 
                20000 + ID d'exercice (par défaut 0), et de recevoir les logs de la SIM
    - APE - MOS light: Améliorations diverses.
                * On ne se déplace plus par click gauche, mais par clicker/tirer avec le bouton du milieu.
                * Lors de la selection de lima/limite, clicker dans la liste de celles-ci ne fait pas bouger le point vue.
                    Il faut double clicker pour ca.
                * L'unité sélectionnée apparait de couleur plus claire. Si c'est un PC, les unités sous ses ordres apparaissent
                    également de couleur un peu plus claire.
                * Les lignes de vision ne sont plus affichées entre unités alliées.
                * L'affichage des chemins parcourus est désactivé par défaut, une option dans les settings permet de le reactiver.
                * Une option dans les settings permet de désactiver l'affichage des textes sur le terrain (noms de ville, route...)
                * Les listes de RC et Trace scrollent automatiquement à la fin de la liste. Une option dans les settings permet de
                    désactiver ce comportement si necessaire.
                * Lors de la création de lima/limite, le nouveau point apparait au centre de la fenetre.
                * Le point pour le magic move apparait plus proche de l'unité.
                * On ne peut pas donner de mission à un automate désembrayé, et vice versa pour les pions.
    - AGN - Détection de doublons de module (comportements/actions) dans le script compiler (la SIM le faisait déjà ...)
    - NLD - Bug fix - MOS_Light : l'action magique de creation d'objet refonctionne
    - NLD - Détection radar : nouvelles fonctions DEC
                V A::DEC_StartRadar( R /*rayon du radar*/, I /*E_AgentTypeID*/ );
                V A::DEC_StopRadar ( R /*rayon du radar*/, I /*E_AgentTypeID*/ );
            La fonction DEC_DetectionRadar() est toujours présente et active, mais plus pour longtemps ...
    - NLD - Ajout d'informations de debug quand un path find est impossible (fuseau / vitesses nulles)
    - NLD - MOS_Light : affichage de l'attribut 'niveau' d'une connaissance 


Version 0.37 [10/02/2004]
    - NLD - Bug fix : Pb de compilation ASN

Version 0.36 [06/02/2004]
    - NLD - Debug
                * Quand la SIM crash, un 'core dump' est généré dans le répertoire ./Debug
                * Le texte affiché dans la console est également écrit dans un fichier dans le répertoire ./Debug
    - NLD - Bug fix : suppression d'un bad assert dans DEC_Task_ComputeFrontAndBackLines::Terminate()
    - NLD - Bug fix : Pb dans le calcul des lignes avant/arriere qd tous les pions concernés sont morts (=> crash ou freeze de la SIM)
    - NLD - Bug fix : Remplacement d'un assert par une erreur qd l'heure de lever du soleil est plus tard que l'heure de coucher du soleil
    - JVT - Nouvelles informations dans LOG.xml :
            => VOLUMES EMPORTS
                <VolumesUnitaires>
                    <humain>1</humain>
                    <carburant>100</carburant>
                    <Munitions>
                        <munition categorie="CN125_OCC">10</munition>
                        <munition categorie="Tourelleau_Mit_12.7">1000</munition>
                    </Munitions>
                    <mine>25</mine>
                    ...
                </VolumesUnitaires>
            * Les tags ci-dessus expriment le rapport entre une unité élémentaire de transport ( U ) et le nombre d'unité réelle
              de chaque type de ressource ( ex: 1 humain = 1 U, 100 l de carburant = 1 U, 10 obus CC = 1 U, .... )
            * Par défaut, le volume unitaire est 1 U.
            => TEMPS DE REGLAGE DU RAVITAILLEMENT
                    <Temps>
                        <AttenteAvantAnnulation>10</AttenteAvantAnnulation> <!-- en minutes -->
                        <DatesAlerteAvantRavitaillement>
                            <AlerteAvantRavitaillement>15</AlerteAvantRavitaillement>  <!-- en minutes -->
                            <AlerteAvantRavitaillement>10</AlerteAvantRavitaillement>  <!-- en minutes -->
                            <AlerteAvantRavitaillement>5</AlerteAvantRavitaillement>   <!-- en minutes -->
                            <AlerteAvantRavitaillement>3</AlerteAvantRavitaillement>   <!-- en minutes -->
                            <AlerteAvantRavitaillement>2</AlerteAvantRavitaillement>   <!-- en minutes -->
                            <AlerteAvantRavitaillement>1</AlerteAvantRavitaillement>   <!-- en minutes -->
                            <AlerteAvantRavitaillement>0.5</AlerteAvantRavitaillement> <!-- en minutes -->
                        </DatesAlerteAvantRavitaillement>
                    </Temps>
            * Le temps 'AttenteAvantAnnulation' représente le nombre minute pendant lequel les camions de ravitaillement
              attendent que l'automate et ses pions soient prêt à être ravitaillés ( i.e. à l'arrêt ). Si ce temps est
              dépassé, le ravitaillement est considéré comme annulé
            * Les temps 'AlerteAvantRavitaillement' sont les minutes du compte à rebours avent le ravitaillement ou sont
              envoyés les RC de type eRC_DebutRavitaillementDans;
    - JVT - Changement de fonctionnement des tags Transport. Syntaxe :
                <Transports contenance="100">
                    <Transport type="Munition">
                        <TempsChargement>5</TempsChargement>
                        <TempsDechargement>5</TempsDechargement>
                    </Transport>
                    <Transport type="Mine">
                        <TempsChargement>10</TempsChargement>
                        <TempsDechargement>9</TempsDechargement>
                    </Transport>
                <Transports>
            * La capacité de transport est totale pour la composante et est exprimée en U.
            * Les temps de chargement sont exprimés en min.U-1
    - JVT - Création d'une nouvelle enum DIA : E_TypeRavitaillement ( eRavMunition, eRavCarburant, eRavMine, eRavExplosif, eRavBarbele )
    - JVT - Création de nouvelles fonctions sur tous les automates pour le Ravitaillement :
            * V A::DEC_DemandeRavitaillement( * )
                Paramètres : rien => ravitaillement total, sinon, autant de paramètre de type E_TypeRavitaillement que nécessaire
            * R A::DEC_TempsAvantProchainRavitaillement()
                Valeur de retour : Temps en temps SIM avant prochain ravitaillement s'il existe, sinon une valeur négative
    - JVT - Correction de l'initialisation des dotations lorsque celles-ci ne sont pas surchargées, qu'elles apparaissent
            dans le TC1 mais pas dans les composantes du pion. ( reste un bug dans ce cas avec le recomplètement )
    - JVT - Bug fix : Supression de la destruction de composantes à l'initialisation des surchages des officiers et/ou des blessés
    - JVT - Nouveaux tags pour l'emport ( utilisé dans l'ODB pour le TC2, tag obligatoire ). Même format que la surchage des dotations :
                <EmportDotations>
                    <EmportDotation type="munition" categorie="Balle classique 12,7">500</EmportDotation>
                    <EmportDotation type="carburant">3000</EmportDotation>
                    ...
                </EmportDotations>
    - JVT - Les informations d'emport du TC2 sont envoyés vers MOS ( affichées dans MOS_Light )
    - JVT - Ajout d'une action physique de ravitaillement sur le TC2 ( PHY_ActionResupply )
    - JVT - Ajout de fonctions scripts sur le TC2 pour le ravitaillement :
            * V DEC_StartRavitaillement( A )
            * V DEC_StopRavitaillement( A )
    - JVT - Les RC en relations avec le ravitaillement sont envoyés automatiquement
    - JVT - Temporairement : L'action magique de recomplétement des ressources pour le TC2 rempli aussi les stocks de celui-ci.
            A savoir il réinitialise toutes les dotations d'emport déclarées dans l'odb à 10000 U.
    - NLD - Bug fix : Crash qd lecture d'un odb invalide (le throw() était buggé ...)
    - NLD - Bug fix : Ordres de conduite : lorsqu'un ordre de conduite invalide est envoyé alors que le pion est en attente
                        de certains ordres de conduite, la demande d'ordre était annulé (=> plus de possibilité de donner
                        les ordres de conduite demandés ...)
    - NLD - Bug fix : MOS_Light : la mission automate ABC fixer était mal branchée (paramètre manquant)
    - NLD - Bug fix : PHY_UnitCanTransport_ABC::GetLoadSpeed() : la catégorie par défaut était -1 à la place de 0
    - NLD - Bug fix : Mise à jour de la liste de missions disponibles dans ADN
    - NLD - La zone carrée créée à la place d'une localisation de type point à un côté de 500m et non plus de 200m
    - NLD - La fonction DEC_Dotation() renvoit '-1' si l'unité ne peut pas contenir la dotation demandée (max = 0)
    - NLD - Bug fix : Les fonctions DEC_StartTrierBlesses() et DEC_StopTrierBlesses() n'étaient plus enregistrées dans le pion LOG
    - NLD - Nouvelle option en ligne de commande : '-nocoredump' qui permettait d'éviter de générer un fichier .dmp énorme
            à chaque fois que la sim plante
    - NLD - Bug fix : Ajout d'une exception quand la hauteur d'un senseur pour une composante est invalide
        
Version 0.35.11 [03/02/2004]
    - JVT - Bug fix : Gestion des consignes de tir
    - AGN - ADN : toutes les chaînes de caractères sont trimées avant sauvegarde, pour éviter les espaces avt et après la chaîne de caractère.
    - AGN - ADN : Renommage de l'onglet Unités en Pions et de l'onglet Décisionniel en Rapport de Force.
    - NLD - Rapport de force : les unités neutralisées n'ont plus qu'un poids de '1'
    - NLD - Bug fix : Pb dans la fonction 'DEC_ReleverUnite()' : la mission copiée était la mission courante de l'agent
                qui relève (Relever) à la place de la mission du pion à relever ...
    - NLD - Launcher - Bug fix : A cause d'un pb de 'case sensitive', l'uuid d'un exercice n'était pas envoyé à MOS, car
                non lu dans le fichier de conf                                          
    - NLD - Bug fix : Assert invalide quand destruction d'un objet par destruction magique, et quand l'objet à un pourcentage
                de construction de 0
    - NLD - Path find : 
                - Suppression de mutexes entre le thread SIM et les threads path find : plutot que d'acceder directement aux données
                    de l'agent pendant l'évaluation des coùts, les données utilisées par le path find sont copiées (plus cohérent
                    d'ailleurs)
                - Désactivation du 'Reduce()' effectué en postprocessing du calcul de path find
                - Nettoyage (consts)
                - Refactoring du module gérant l'évitement d'ennemis (qui, d'ailleurs, ne marchait pas ...)
    - AGN/NLD - Bug fix : destruction de connaissances qd magic move
    - AML - Ajout de l'option KillStuckedSim dans ScipioLauncher, 
                0: ne tue pas une sim qui ne repond plus (par defaut),
                1: tue une sim qui ne repond plus
                si vous voulez aussi qu'une sim qui ne se connecte jamais ne soit pas quand meme killé, 
                rajouté un petit bout de code commenté ici dans LAU_SIM (line 158)
    - AML - Bug fix: lorsqu'on demande la liste des checkspoints, on peut plus lancer les sims depuis la liste des missions
            (a moins de redemander la liste des missions)              


Version 0.35.10 [22/01/2004]
    - JVT - Bug fix : Assert dans les tirs lorsque le nombre de munitions est plus bas que le nombre de munitions par coup ( la consigne
            n'était pas supprimée )
    - NLD - Le paramètre 'ligne de coordination' est enlevé des missions suivantes :
                * Automate ASA AssurerDefenseEnsemble
                * Automate ASA AssurerDefenseParticuliere
    - NLD - ADN - Bug fix : la liste des chaines du TC2 "<Chaines/>" était mal écrite
    - NLD - Bug fix : les fonctions DEC_PosDeploiementASAUniSimpleRideau() et DEC_PosDeploiementASAUniDoubleRideau()
                effectuaient une translation dans le sens inverse de la direction dangereuse, ce qui était faux ....               


Version 0.35.9 [20/01/2004]
    - NLD - Bug fix : lorsque l'automate assigne une mission à un pion pendant la conduite (DEC_CDT_CreerMissionPion), 
                le pion prend le fuseau de la compagnie, et non plus un fuseau nul.
    - NLD - Nouvelles fonctions DEC :
                V A::DEC_PosDeploiementASAOmni           ( U /*T_Localisation*/, R /*distance D/G*/, U /*out T_Point*/, U /*out T_Point*/ );
                V A::DEC_PosDeploiementASAUniSimpleRideau( U /*T_Localisation*/, R /*distance D/G*/, R /*distance translation*/, U /*out T_Point*/, U /*out T_Point*/ );
                V A::DEC_PosDeploiementASAUniDoubleRideau( U /*T_Localisation*/, R /*distance translation*/, U /*out T_Point*/, U /*out T_Point*/ );
    - NLD - Bug fix : la direction dangereuse niveau automate (paramèter direction ennemi de l'ASN) n'était pas stockée correctement

Version 0.35.8 [19/01/2004]
    - JVT - Bug fix : Dans MIL_Action_Utils, crash si on appelle les StopFire de type infanterie alos qu'il n'y a pas d'action
            de tir instanciées.
    - JVT - Bug fix : DEC_DistanceTirSurEni ( #390 )
    - NLD - Gestion des GDH
                * La fonction Time() ne devrait plus être utilisée dans les scripts (les modifications dans les scripts common 
                    ont été faites)
                * A la place, utilisez les fonction DEC_TempsSim() et DEC_TempsReel(), qui retournent un temps en secondes.
                * Les gdh des paramètres de mission sont donnés en TEMPS REEL, donc ne doivent être comparées qu'avec 
                    des valeurs provenant de la fonction DEC_TempsReel()
                * Quand les GDH ne sont pas spécifiés, la valeur du paramètre DIA est '0'
                * Les fonctions DEC 'DEC_Date()' et 'DEC_Tick()' n'existent plus
                * Nouvelle interface dans MOS
    - NLD - Comportement par défaut : le code DIA se trouvant dans le "default()" doit être déplacé dans un comportement 
                nommé "behavior BEH_Defaut( id nDummy )"
            Le but de cette opération est de pouvoir réinitialiser le comportement par défaut quand c'est nécessaire, 
                comme dans le cas d'un magic move, par exemple ...

Version 0.35.7 [16/01/2004]
    - JVT - Gestion des morts pendant les actions de logistique ( chaîne santé )
    - JVT - Suppression des lancements d'action en dur de la 35.6.

Version 0.35.6 [16/01/2004]
    - JVT - Les emports d'humains blessés ( TC2, Section LOG ) sont envoyé à MOS
    - JVT - Les modifications d'emports d'humains envoient des RC vers MOS
    - JVT - Bug Fix : on peut de nouveau détecter les pions infanterie non débarqués

Version 0.35.5 [15/01/2004]
    - NLD/JVT - Bug fix : pb de mise à jour des dotations en equipement qd une composante NEVA (réparable sans évacuation) 
                    était réparée automatiquement après un temps déterminé
    - JVT - Bug Fix : Lorsque les pions sont débarqués et qu'un transporteur est détruit, les fantassins ne sont plus
            touchés

Version 0.35.4 [15/01/2004]
    - AGN - Bug fix : calcul du rapport de force immédiat. On faisait un barycentre sur tout le GTIA.
    - NLD - Affichage des dotations/equipements/humains transportés dans MOS (cela n'est jamais rempli pour l'instant)

Version 0.35.3 [15/01/2004]
    - NLD - Possibilité d'envoyer des RCs directement depuis la SIM (sans passer par les scripts)
    - NLD/JVT - Bug fix : Pb dans le stockage des dotations en humain dans NET_Agent_ABC
    - NLD/JVT - Bug fix : L'action 'débarquer' retourne une erreur si le pion n'a pas de composante débarquable
    - NLD/JVT - Bug fix : corrections/nettoyage dans gestion de l'envoi des dotations à MOS
    - JVT - Ajout d'une fonction script pour l'infanterie : B A::DEC_EstEmbarque()
    - JVT - Renommage d'un des paramètre de retour de l'héliportage :
                eHeliportageInterrompuPionAbsent => eHeliportageInterrompuFantassinsAbsents
    - JVT - Ajout d'une fonction script pour l'infanterie : B A::DEC_EstEmbarque()
    - NLD/JVT - Avant l'execution d'une action magique de recomplétement, les renforts éventuels de l'unité sont rendus 
                au possesseur.
    - NLD/JVT - Préparation à l'envoi des dotations transportées
    - NLD - Le 'magic move' fonctionne maintenant sur un automate embraye : toute la compagnie est déplacée (translatée...)
    - NLD - Le Unit::SetPosition() vérifie que la position se trouve dans le monde, et la clippe si nécessaire
    - JVT - Modification de la détection en cas d'infanterie débarquée : Si le pion est débarqué, le volume des transporteurs
            est égal à celui de la plus grosse des composantes débarquées.
    - JVT - Les priorités de feux pour les composantes transporteurs d'un pion débarqué sont toujours inférieures à
            celles des composantes débarquées.
    - AGN - Bug fix : calcul du rapport de force qd automate n'a pas de pions 

Version 0.35.2 [14/01/2004]
    - NLD - Bug fix : pb récupération fuseau qd automate en phase de MRT 
    - NLD - Ajout / modification de RCs pour la Log
                eRC_SectionDeployee,
                eRC_DemandeRavitaillement,          // Paramètre : T_Automate
                eRC_DemandeRavitaillementAcceptee,  // Paramètre : T_Automate
                eRC_DemandeRavitaillementRefusee,   // Paramètre : T_Automate
                eRC_DebutRavitaillementDans,        // Paramètre : T_Automate (agent) et float (minutes)
                eRC_RavitaillementAnnule,           // Paramètre : T_Automate
                eRC_DebutRavitaillement,            // Paramètre : T_Automate
                eRC_FinRavitaillement,              // Paramètre : T_Automate
                eRC_ReceptionBlesses,
                eRC_EvacuationBlesses,
                eRC_FinTraitementBlesses,
                eRC_ReceptionMateriel,
                eRC_EvacuationMateriel,
                eRC_FinTraitementMateriel,

Version 0.35.1 [13/01/2004]
    - NLD - Bug fix : crash lié à une modif de l'init de la connaissance niveau camp par défaut

Version 0.35 [13/01/2004]
    - JVT - Suppression du _chdir( "..\SIM DATA" ) à l'initialisation de la SIM :
            Maintenant, vous pouvez lancer la SIM de n'importe ou ( penser juste à mettre scipio.xml dans le même répertoire,
            ou à spécifier sont chemin en ligne de commande )
    - JVT - Idem pour MOS_Light qui utilise désormais aussi scipio.xml dans le répertoire dans lequel il est lancé 
            ( plus aucun fichier n'est en dur à part sciopio.xml )
    - JVT - Ajout d'un nouvel état sur la composante ( en plus de l'état opérationnel ) qui permet d'activer ou désactiver
            cette composante suivant les situations ( notamement embarquement/débarquement )
    - JVT - Nouveau paramétrage de l'embarquement/débarquement dans les xml :
            * Suppression du tag <Debarquement> dans composantes.xml
            * Suppression du tag <VitesseEmbarquement> dans types.xml
            * Suppression du tag <VitesseDebarquement> dans types.xml
            * Remplacement de ces tags par les tag <Transport> ( cf 0.34.1 ) dans les composantes de transport ( ex : VAB )
            * Ajout d'un attribut optionnel dans la liste des composantes dans types.xml pour définir le caractère embarquable
              d'une composante :
              exemple:
                    <Composantes>
                        <Composante type="VAB"></Composante>
                        <Composante type="VAB"></Composante>
                        <Composante type="Groupe INF SNIPER" propriete="embarquable"></Composante>
                        <Composante type="Groupe INF FAMAS"  propriete="embarquable"></Composante>
                        <Composante type="Groupe INF FAMAS"  propriete="embarquable"></Composante>
                    </Composantes>
            * Par défaut, toutes les composantes embarquables sont embarquées à l'init.
              RQ : il n'est plus nécessaire de différencier les transporteurs ( VAB, ... ), donc on devrait voir pas mal de
                   "VAB truc" disparaître et se transformer en VAB tout court..... a vos fichiers messieurs.
              Sur la base, les tags obsolètes ont été supprimés et j'ai essayé de mettre en place les bon tags sur les pions
              concernés. Les données sont A VERIFIER .
              Attention, la dotation en humain des composantes de transport correspond maintenant aux humains toujours dans
              le VAB, donc le conducteur et son ami....
              Attention, les dotations des composantes debarquable ne doivent plus être déclarées dans les composantes de
              transport. 
    - JVT - Les composantes représentant des fantassins embarqués sont flagées Inactive ( Etat interne ) cela influe sur :
            * les déplacements : ces composantes ne sont pas pris en compte dans les vitesses de déplacement
            * les perceptions : ces composantes n'utilisent pas leurs senseurs et ne peuvenet pas être détectées.
            * les tirs : ces composantes ne prennent pas part aux tirs et ne peuvent pas être touchées.
                         Cependant, il y a attritions dessus lorsque les transporteurs sont touchés (mêmes règles
                         qu'auparavant)
    - JVT - Réécriture de la classe PHY_Attrition pour la prise en compte des répartitions des dommages sur les humains embarqués
    - JVT - Création d'une nouvelle action physique pour que les pions attendent leurs VAB après héliportage : PHY_ActionWaitCarriers
    - JVT - Nouvelle action :
                V DEC_StartAttendreTransporteurs( A, B );
                V DEC_StopAttendreTransporteurs ( A, B );
            Cette action peut être appelée à la main, quand on veut.
            Si ce n'est pas fait, elle sera automatiquement appelée dès le 1er embarquement demandé après héliportage
    - JVT - Changement des signatures des fonctions physiques d'embarquement/débarquement :
                V DEC_StartDebarquement( A /* executant */ , I /* retour */);
                V DEC_StartEmbarquement( A /* executant */ , I /* retour */);
            Les valeurs de retours sont ( E_EtatEmbarquementDebarquement ) :
                    eEmbDebAttenteTransporteurs
                    eEmbDebEnCours
                    eEmbDebTermine
                    eEmbDebPasDeTransporteurs
    - JVT - Les fonctions DEC suivantes sont maintenant obsolètes :
            * DEC_GetEffectifsDebarques
            * DEC_MaxDebarquement
    - JVT - Changement de prototypage pour les fonctions DEC suivantes :
            * R A::DEC_TempsDebarquementEffectif( R ) => R A::DEC_TempsDebarquementEffectif()
            * R A::DEC_TempsEmbarquementEffectif( R ) => R A::DEC_TempsEmbarquementEffectif()
    - JVT - Ajout d'un nouvel état de retour pour l'héliportage ( E_EtatHeliportage )
            * eHeliportageInterrompuPasDeCapacite => calcul de chemin en cours
    - JVT - Mise en place d'une contenance de dotation "TC1" supplémentaire pour chaque pion :
            Ajout dans types.xml des dotations au format suivant :
                  <TC1>
                    <Dotation   type="carburant">100</Dotation>
                    <Dotation   type="mine">50</Dotation>
                    <Dotation   type="explosif">50</Dotation>
                    <Dotation   type="barbele">10</Dotation>
                    <Dotation   type="munition" categorie="CN120_OFL">10</Dotation>
                  </TC1>
    - JVT - Réécriture du système de dotation pour prendre en compte les dotations issues du TC1
    - JVT - Les fonctions DEC DEC_StartTirNonEmbarque et DEC_StartTirEmbarque ne sont plus exclusives. Elles ne sont plus que
            des modificateurs sur l'action de tir en cours ( si elle existe ) (#382)
    - JVT - Renommage de fonction de tir spécifiques à l'infanterie :
                V DEC_StartTirNonDebarque( A,A,I,I ) => V DEC_StartTirTransporteurs( A, A, I, I )
    - JVT - Possibilité d'arrêter de tirer avec seulement une partie des composantes suivant leur propriété :
                V DEC_StopTirTransporteurs( A )
                V DEC_StopTirDebarque( A )
    - JVT - Ajout d'un nouveau "type de dotation" utilisable uniquement dans le cadre de transport : 
                materiel ( eDotationComposante )
    - JVT - Suppression du tag <TypeLogistique> ( remplacé par le tag <Transport> )
    - JVT - Suppression du type SIM "Automate LOG". Ce type est remplacé par deux types séparés :
                * TC2 ( eAgentTypeAutomateLogTC2 ) => Automate sans pion. Contient les chaînes
                * BSD ( eAgentTypeAutomateLogBSD ) => Automate avec pions ( pion des convois ). Contient les chaînes
    - JVT - Suppression du LogManager. Les informations qu'il contenait son maintenant séparé dans les différentes
            chaînes de logistique :
                * PHY_LogTC2HealthChain      ( E_TC2ChainType::eHealthChain )
                * PHY_LogTC2SupplyChain      ( E_TC2ChainType::eSupplyChain )
                * PHY_LogTC2MaintenanceChain ( E_TC2ChainType::eMaintenanceChain )
    - JVT - Dans l'initalisation des automates de type TC2, ajout de la constitution des chaînes. Exemple :
                <Chaines>
                    <Chaine type="sante" />
                    <Chaine type="sante" />
                    <Chaine type="maintenance" />
                    <Chaine type="ravitaillement" />
                    <Chaine type="ravitaillement" />
                </Chaines>
            Dans cette version, il y a uniquement la chaîne santé qui fonctionne
    - JVT - Réécriture du format du fichier LOG.xml. ( Séparation TC2 / BSD et séparation par chaînes ).
            Le plus simple c'est d'aller voir dedans ....
    - JVT - Aggrégation des humains des composantes dans la unit
    - JVT - Réécriture des actions physiques suivantes :
                * PHY_ActionReleverBlesses
                * PHY_ActionRamasserBlesses
                * PHY_ActionTrierBlesses
                * PHY_ActionSoignerBlesses
    - JVT - Redistribution des fonctions DEC :
                * DEC_StartReleverBlesses   => Automate TC2
                * DEC_StopReleverBlesses    => Automate TC2
                * DEC_StartRamasserBlesses  => Automate TC2
                * DEC_StopRamasserBlesses   => Automate TC2
                * DEC_StartTrierBlesses     => Pion LOG ( Secteur de Triage )
                * DEC_StopTrierBlesses      => Pion LOG ( Secteur de Triage )
                * DEC_StartSoignerBlesses   => Pion LOG ( Secteur de Triage )
                * DEC_StopSoignerBlesses    => Pion Log ( Secteur de Triage )
    - JVT - Les fonctions DEC suivantes deviennent obsolètes :
                * DEC_TransfertComposantes
                * DEC_AbonnerAutomate
                * DEC_DesabonnerAutomate
    - JVT - Suppression du tag <PCSAN> dans l'ODB
    - JVT - Les pions LOG référencent les TC2 dont ils s'occupent (odb.xml)
                <Agent categorie="Section Triage">
                    <ID>2050</ID>
                    <Automate>2010</Automate>
                    ....
                    <TC2s>
                        <TC2>2001</TC2>
                        <TC2>2002</TC2>
                    </TC2s>
                </Agent>
    - JVT - Suppression du tag <TypeLogistique> dans Composantes.xml
    - JVT - Spécification des types de composantes utilisées pour la chaine santé du TC2 dans log.xml
                <UtilisationMateriel>
                    <Releve>VSB</Releve>
                    <Ramassage>VSR</Ramassage>
                </UtilisationMateriel>
    - JVT - Changement de fonctionnement du transfert de composantes. C'est maintenant une action qui peut être
            arrêtée à la main..... l'arrêt au bout d'un temps prédéfini existe toujours.
            Les fonctions DEC sont les suivantes :
                * DEC_StartTransfertComposantes ( V ( A : myself, A : unitéRenforcée, I : TypeLog, 
                                                      R : nombreComposantes, R : temps, I : résultat ) )
                    Attention, l'enum E_ResultatTransfertComposante à changée :
                        eTransfertManqueComposante
                        eTransfertEnCours
                        eTransfertTermineTemps
                        eTranfertTermineManuel 
                * DEC_StopTransfertComposantes  ( V ( A : myself, A : unitéRenforcée ) )
    - JVT - Correction d'un bug de calcul des totaux d'humain dans le cas d'un recomplétement en personnel
    - JVT - PHY_Composante::SetParent fait maintenant automatiquement la mise à jour dans les listes
            de l'ancien et du nouveau parent
    - JVT - Changement de structure de fichier pour la logistique :
            Classe supprimées : PHY_UnitCanShareComposante_ABC, PHY_UnitCanCarryInjuriedHumans_ABC,
            PHY_UnitCanRegisterSortingSectors_ABC, PHY_UnitCompagnieLog, PHY_UnitCompognieLogType,
            DEC_AgentCompagnieLog, MIL_AgentCompagnieLog, MIL_AgentCompagnieLogType, PHY_LogManager
            Nouvelle classes  : PHY_UnitCanHealHumans, DEC_AgentCompagnieLogBSD, DEC_AgentCompagnieLogTC2,
            MIL_AgentAutomateLogBSD, MIL_AgentAutomateLogBSDType, MIL_AgentAutomateLogTC2, MIL_AgentAutomateLogTC2Type,
            PHY_LogTC2Chain_ABC, PHY_LogTC2HealthChain, PHY_LogTC2MaintenanceChain, PHY_LogTC2SupplyChain,
            PHY_TC2Chain_Def, PHY_UnitAutomateLogBSD, PHY_UnitAutomateLogBSDType,PHY_UnitAutomateLogTC2, 
            PHY_UnitAutomateLogTC2Type
    - NLD - Uniformisation de PHY_UnitCanMove_ABC::GetMaxSpeed( object ) avec les autres ::GetMaxSpeed()
    - NLD - Nettoyage dans la gestion de l'envoi des dotations à MOS
    - NLD - Erreur d'initialisation quand une unité ne possède aucune composante.
    - AGN - MOS Light : la météo (l'éphéméride) est initiliasée avec le ficher indiqué dans scipio.xml
    - AGN - 3D : la recherche des zones d'implantation ne prend pas en compte les zones dont la reconnaissance a
            été abandonnée.
    - AGN - Méga Bogue dans RapFor global : on prenait pas en compte le barycentre de la compagnie lors du calcul !!!
    - NLD - Bug fix : crash lecture fichier de sauvegarde, du à une erreur dans la gestion des listes des composantes
                devant être transférées à la Log (oubli de suppression qd une composante devant être transférée à la log
                est détruite)
    - NLD - Bug fix : Mission alat automate heliporter mal enregistrée dans MOS et dans la SIM
    - NLD - Nouvelle option ligne de commande : -nodecdebug, qui supprime l'affichage de la fonction DEC_Debug()
    - NLD - Bug fix : Warning ajouté quand une dotation (munition) surchargée est supérieure à la contenance max
    - NLD - Changement gestion des ordres (nettoyage du code)
    - NLD - Mise à jour des énumération suivantes (pour cohérence avec Thales)
                enum E_NatureWeaponType
                enum E_NatureSpecializationType
                enum E_NatureQualifierType
                enum E_NatureCategoryType
                enum E_NatureMobilityType
             => CHANGER LES CHAMPS CORRESPONDANT DANS types.xml
             => LES VALEURS DE CES ENUMERATIONS SONT DISPONIBLES DANS common/Types_Pion.hal
    - NLD - Ajouts des RCs suivants pour la log
                eRC_DemandeRavitaillementAcceptee,  // Paramètre : T_Automate
                eRC_DemandeRavitaillementRefusee,   // Paramètre : T_Automate
                eRC_DebutRavitaillement,            // Paramètre : T_Automate
                eRC_FinRavitaillement,              // Paramètre : T_Automate
                eRC_DebutRavitaillementDans,        // Paramètre : float (nb minutes)                    
                eRC_RavitaillementAnnule,
    - NLD - Missions log:
                - Suppression des toutes les vieilles missions LOG (Mission_Pion_SANTE_XXX, Mission_Automate_SANTE_XXX, Mission_Pion_APPUIS_XXX, Mission_Pion_MOUVEMENT_XXX ...)
                - Nouvelles missions : Mission_Automate_TC2_SeDeployer et Mission_Automate_BSD_SeDeployer            
    - NLD - Le type de modèle décisionnel d'un agent est envoyé à MOS_Light (modif msg DIN)
    - NLD - Bug fix : quand un agent entre en contact avec un objet, il est automatiquement vu (malgré les paramètres de temps de détection)
    - NLD - Bug fix : quand un agent entre en contact avec un objet, sa position n'était pas mise à jour (il ne se trouvait physiquement par sur l'objet)
    - NLD - Gestion des limas au niveau du script
            Modif évenement EVT_SurPoint quand intersection avec une lima : 
                - nouveau type Rep_PointLima
                        typedef struct Rep_PointLima : Rep_Point
                        {
                            E_TypeLima  nTypeLima_;        
                            T_Lima      lima_;
                        };
                - Du coup, les types de points suivants n'existent plus
                    eTypePointLD   
                    eTypePointLC   
                    eTypePointLCA  
                    eTypePointLI   
                    eTypePointLO   
                    eTypePointLCAR 
                    eTypePointLR   
                - nouveau user type T_Lima
                - Possibilité de flager une lima (flag local à une mission)
                       B A::DEC_SetMissionLimaFlag( U /*T_Lima*/, B /*bFlag*/ );
                       B A::DEC_GetMissionLimaFlag( U /*T_Lima*/ );
    - NLD - Bug fix : Division par 0 dans DEC_CalculeDistanceLigneMoyenne(), quand la liste de pions passée en paramètre est vide
    - NLD - Modifications fonction DEC : DEC_StartCalculLignesAvantEtArriere 
                - Prend une liste de pions en paramètre, et non plus un automate ( U A::DEC_StartCalculLignesAvantEtArriere( S /*T_PionCont*/ ) => A::DEC_StartCalculLignesAvantEtArriere( A /*T_Automate*/ ) )
                - Assert si les pions passés en paramètre n'appartiennent pas au même automate
                - Le calcul de tient plus compte des pions morts
    - NLD - Nettoyage code de la gestion des ordres
                - Le fuseau, les limas et la direction dangereuse ne sont plus stockées dans MIL_Agent_ABC, mais dans chaque mission
                - classe de base MIL_Mission_ABC
                - MIL_AutomateOrderManager ne possède plus un MIL_PionOrderManager, c'est le MIL_Agent_Automate_ABC qui possède une instance
                    de ces 2 classes et qui fait le dispatch en fonction de son état
                - Appel à MIL_PionMission_ABC::Terminate oublié lors de la destruction des missions crées par l'automate non affectées aux pions
    - NLD/AGN - MOS_Light : seules les missions disponibles sont proposées, en fonction du modèle du pion/automate 
    - NLD - Bug fix : pb de passage de paramètre DIA pour missions
                    - Pion INF Barrer
                    - Pion INF Surveiller secteur
    - AGN - Correction du pb de la maj des connaissances quand on faisait un magic move d'une unité ennemie.
    - NLD - Envoi de l'état de l'embarquement/débarquement à MOS

Version 0.33.15 [17/12/2003]
    - AGN/NLD - Rapport de force global corrigé réintégré

Version 0.33.14 [16/12/2003]
    - AGN - Méga Bogue dans RapFor global : on prenait pas en compte le barycentre de la compagnie lors du calcul !!!
    - NLD - Nouvelle option ligne de commande : -nodecdebug, qui supprime l'affichage de la fonction DEC_Debug()
    - NLD - Bug fix : crash lecture fichier de sauvegarde, du à une erreur dans la gestion des listes des composantes
                devant être transférées à la Log (oubli de suppression qd une composante devant être transférée à la log
                est détruite)
    - NLD - Le rapport de force global renvoit systématiquement 5
    
Version 0.34.1 [04/12/2003]
    - JVT - Ajout des version CONST des mem_fun1 ( non présents dans la STL de visual 6 ) dans MT_Tools_Types.h
    - JVT - Ajout d'un état "transporté" sur le pion physique [ PHY_Unit_ABC ].
            Les caractéristiques d'un pion transporté sont les suivants :
                * La mission courrante du pion est annulé ( dans le cas d'un pion dépendant d'un automate embrayé, 
                  c'est les missions de l'automate ( et par conséquent de tous les pions ) qui sont annulées )
                * Le pion devient aveugle
                * Le pion devient invisible
                * Le pion devient con ( plus d'évaluation de DEC )
                * Le pion se déplace au grès de son transporteur
    - JVT - Ajout d'un nouvel accesseur dans les scripts : B A::DEC_EstTransporte()
    - JVT - Création de deux nouveaux types physiques :
                * Cie ALAT
                * Son ALAT
    - JVT - Tranferts des enregistrements des fonctions DEC de section 3D vers section ALAT :
                * DEC_AgentSection3D::StartReco           ( DEC_StartReconnaissance  ) 
                * DEC_AgentSection3D::EndReco             ( DEC_StopReconnaissance   )
                * DEC_AgentSection3D::StartRecoCompletion ( DEC_PassageNonVusSurBond )
                * DEC_AgentSection3D::TranslateIti        ( DEC_TranslateItineraire  )
    - JVT - Ajout d'une nouvelle liste de paramétrage des composantes : ( exemple pour HR )
            <Transports>
                <Transport type="humain">
                    <Capacite>9</Capacite>
                    <TempsChargement>1</TempsChargement>       <!--temps pour faire un chargement complet en minutes -->
                    <TempsDechargement>0.5</TempsDechargement> <!--temps pour faire un déchargement complet en minutes -->
                </Transport>
            </Transports>
            Cette liste servira pour le transport de toute dotation ( futur TC2, héliportage, ... )
            A terme, elle remplacera aussi les tags <Debarque> de l'infanterie
    - JVT - Création d'une nouvelle action physique d'héliportage : PHY_ActionHeliport ( utilise des PHY_UnitCanCarryUnits )
    - JVT - Nouvelle action : V DEC_StartHeliportage( A, U, S, I ) ( enregistrée sur Son ALAT )
            Paramètres : * myself
                         * point d'arrivée de l'héliportage
                         * liste de T_Pion à héliporter
                         * état courrant.
            Etats possibles ( définis dans E_EtatHeliportage ) :
                         * eHeliportageCalculChemin             => calcul de chemin en cours
                         * eHeliportageDeplacementAller         => le pion est en phase de déplacement chargé
                         * eHeliportageDeplacementRetour        => le pion est en phase de déplacement retour
                         * eHeliportageEmbarquement             => le pion est au point de départ et embarque des fantassins
                         * eHeliportageDebarquement             => le pion est au point d'arrivée et débarque des fantassins
                         * eHeliportageInterrompuPionAbsent     => l'héliportage a été interrompue car un des pions a héliporté 
                                                                   n'est pas dans la zone d'embarquement
                         * eHeliportageInterrompuCalculChemin   => l'action a été interrompue car aucun chemin n'a été trouvé
                         * eHeliportageInterrompuDeplacement    => l'action de déplacement a été interrompue inopinément
                         * eHeliportageTermine                  => fin normale
    - JVT - Nouvelle fonction DEC pour héliportage ( enregistrée sur Son ALAT ) : V DEC_StopHeliportage( A )
    - JVT - Bug fix : Prise en compte de l'éventuelle impossibilité d'utiliser un senseur lors de l'appel à la
            détection "à la main" ( PHY_Composante::ComputePerception(*) dans PHY_UnitCanPerceive_ABC::GetNewOutAgents() )
    - NLD - Stockage de la configuration passée en ligne de commande dans la classe 'MIL_Config'
    - NLD - Nouvelle option en ligne de commande : -forceodbcomposition, qui permet de passer outre la vérification
            de la constitution des automates. (A n'utiliser que pour les tests !)
    - NLD - Les valeurs du champ 'id' (Cie GEN / Son GEN / Esc ABC ...) utilisé dans la déclaration des types et des modèles décisionnel
            sont renommées :
                    Cie XXX ou Esc XXX => Automate XXX
                    Son XXX ou Pel XXX => Pion XXX
    - NLD - Bug fix : les missions ALAT déclarées dans models.xml pion n'étaient pas lues correctement
    - NLD - Modification de la mission 'Pion INF Interdire' qui ne prend plus une localisation mais un point
           

Version 0.34 [03/12/2003]
    - NLD - La définition des 'DistancesAvantPoint' et 'DistancesBond' ne se fait plus dans le fichier DEC/Config.xml, 
            mais dans le fichier de définition des types 'Types.xml', sous cette forme : 
                <DistancesAvantPoints>
                    <Point  type="foret">500</Point>
                    <Point  type="urbain">500</Point>
                    <Point  type="carrefour">500</Point>
                    <Point  type="pont">500</Point>
                </DistancesAvantPoints>
                <DistancesBond>
                    <BondMax>1500</BondMax>
                    <BondMin>300</BondMin>
                    <BondFusion>100</BondFusion>
                </DistancesBond>
    - NLD - Les types définis dans Types.xml sont maintenant séparés en 2 listes : liste des automates, et liste des pions
                (Les pions doivent être définis avant les automates)
    - NLD - Gestion de la constitution théorique d'un automate. Elle doit être spécifiée dans le type de l'automate (types.xml), 
                en respectant le format suivant :
                    <Constitution>
                        <Pion categorie="Section GEN"/>
                        <Pion categorie="Section GEN"/>
                        <Pion categorie="Section INF VAB"/>
                    </Constitution>
            Si la constitution effective spécifiée dans l'ODB est différente de celle spécifiée dans types.xml, une erreur
            d'initialisation est lancée.
    - NLD - Intégration du nouveau parseur XML, utilisant le parseur Xerces => Les dll xerces-c_2_2_0.dll et xerces-c_2_2_0D.dll 
            doivent se trouver dans le répertoire de lancement (Ces fichiers se trouvent dans $/MVW_v10/Delivery/Tools
    - NLD - La liste des missions disponibles par modèle de pion doit désormais être déclarée dans le fichier models.xml.
            Par défaut, chaque pion/automate peut recevoir directement les ordres de conduite 'interrompre', 'poursuivre', 
            'attendreseposter'. Pour les autres ordres de conduite pouvant être recus inopinément (Cf. artillerie), il est 
            nécessaire de les spécifier, par mission.
            Il n'est pas nécessaire de spécifier les ordres de conduite demandés explicitement par le pion : il ne s'agit
            ici que des ordres de conduite pouvant être reçus INOPINEMENT.
                <Model>
                    <Name>Compagnie INF</Name>
                    <SIMType>Cie INF</SIMType>
                    <DIAType>CompagnieInfanterie</DIAType>
                    <File>DEC\For Tests\Tests\Automate\Files.hal</File>
                    <Missions>
                        <Mission name="Automate INF Semparer"/>                      <=======================
                        <Mission name="Automate INF Attaquer">                       <=======================
                            <OrdresConduite>
                                <OrdreConduite name="Pion AppliquerLesFeux"/>
                            </OrdresConduite>
                        </Mission>
                    </Missions>
                </Model>
            Pour l'instant, ce n'est pas géré par MOS_Light.
    - NLD - Modifs dans la gestion des actions gérant les objets
                => les fonctions DEC DEC_CreerObjet / DEC_PreparerObjet ne retournent plus un T_Objet, mais un Rep_Objet
                => Création d'une connaissance pour le créateur de l'objet, même quand il ne le voit pas
    - NLD - Missions 
                - Renommage de missions 
                        * ABC Pion RenseignerPoint -> ABC Pion RenseignerSur
                - Suppression de missions
                        * ABC Pion Detruire
                        * ABC Pion PrendreMaintenirPreciserContact
                        * INF Pion soutenir
                        * INF Automate Attaquersouplesse
                        * GEN Pion equiperexploiter
                - Nouvelles missions
                        * ABC Automate Soutenir
                        * ABC Automate SurveillerZone
                        * INF Automate Fixer
                        * ALAT Pion DetruireDansZone
                        * ALAT Pion Freiner                             
                        * ALAT Pion Jalonner
                        * ALAT Pion RenseignerSurObjectif
                        * ALAT Pion AppuyerHeliportage
                        * ALAT Pion Heliporter
                        * ALAT Pion Helitransporter
                        * ALAT Pion ReconnaitreSurContourEnnemi
                        * ASS Automate AcquerirDesObjectifs
                        * ASS Automate SurveillerRATAC
                        * ASS Automate AcquerirLanceursEniCOBRA
                        * ASA Automate AssurerDefenseEnsemble
                        * ASA Automate AssurerDefenseParticuliere
                        * ALAT Automate Heliporter
                        * GEN Pion EquiperExploiterDiscontinu 
                        * GEN Pion EquiperExploiterContinu
                        * GEN Pion ExecuterVariantementDiscontinu 
                        * GEN Pion ExecuterVariantementContinu
                        * GEN Pion ReconnaiterSiteFranchissement
                        * GEN Pion ReconnaitreItineraire
                        * GEN Pion ElargirTrouee
                - Modification de missions
                        * ABC Pion Reduire
                        * ABC Pion Appuyer
                        * ABC Pion Fixer
                        * ABC Pion Surveillersecteur 
                        * ABC Pion Barrer
                        * ABC Pion ReconnaitrePoint
                        * ABC Pion Detruire : supprimée
                        * ABC Pion SemparerZone
                        * ABC Pion releverunite
                        * ABC Pion Armer PIA
                        * ABC Automate Couvrir
                        * ABC Automate Fixer
                        * ABC Automate Interdire
                        * INF Pion couvrir
                        * INF Pion reduire
                        * INF Pion appuyer
                        * INF Pion fixer
                        * INF Pion controlersecteur
                        * INF Pion surveillersecteur
                        * INF Pion barrer
                        * INF Pion interdire
                        * INF Pion semparer
                        * INF Pion prendreprecisercontact
                        * INF Pion defendre
                        * INF Pion detruireembuscade
                        * INF Pion contreattaquer
                        * INF Automate controler
                        * INF Automate flancgarder
                        * INF Automate MenerDefenseUsure
                        * ASS Pion AcquerirObjectifs (Ajout enum atlas)
                        * ASS Pion AssurerMiseEnOeuvreLRM
                        * ASS Pion SurveillerRATAC
                        * ASA Pion AssurerDefenseSite
                        * ASS Automate AssurerMiseEnOeuvre
                        * ASS Automate AssurerMiseEnOeuvreLRM
                        * GEN Pion Renforcer
    - NLD - Gestion des sites de franchissement 
                - Gestion des attributs spécifiques : largeur/profondeur/vitesse du courant/berges a aménager
                - Déclaration dans ODB
                - Remontée dans MOS : les attributs spécifiques ne sont remontés que si c'est une unité du génie
                  qui voit le site de franchissement
    - NLD - Bug fix : les objets sont automatiquement ajoutés à la connaissance du camp créateur 
                    (idem quand création dans l'ODB) [Cf. MIL_DynaObject_ABC::CreateTeamKnowledgeForObject]
    - NLD - Envoi des informations suivantes à MOS 
                - Etat automate (Modification interface MOS pour passage embraye/debraye)
                - Postures (utilisait un message DIN jusqu'à maintenant)
                - Etat du pion (normal/neutralisé/mort)
                - Etat décisionnel du pion (etat rapport de force, etat roe, etat munitions, etat santé, etat combat de rencontre)
              (+ Restructuration NET_Agent_ABC)
    - NLD - Nouvelles fonctions DEC :
                V A::DEC_ChangeEtatRapportDeForce   ( I /*E_EtatRapportDeForce*/ );
                V A::DEC_ChangeEtatROE              ( I /*E_EtatROE*/ );
                V A::DEC_ChangeEtatMunitions        ( I /*E_EtatMunitions*/ );
                V A::DEC_ChangeEtatSante            ( I /*E_EtatSante*/ );
                V A::DEC_ChangeEtatCombatDeRencontre( I /*E_EtatCombatDeRencontre*/ );
            Elles servent à changer l'état associé qui est envoyé à MOS


Version 0.33.13 [02/12/2003]
    - JVT - Bug fix : nettoyage des consignes de tir direct lorsque les dotations sont basses
    - JVT - Bug fix : Suppression de l'assert inutile dans PHY_UnitCanDelayDetection_ABC::AddNewDelayedDetection
    - AGN - Le parser détecte les redéfinitions de comportements (et d'actions qd on changera de version de DirectIA)
            et déclenche une erreur.
    - JVT - Bug Fix : Initialisation des dotations initiales dans le cas de pion débarquables.

Version 0.33.12 [20/11/2003]
    - AGN - Correction d'un bogue dans des calculs de zones pour l'ASS.
    - JVT - Bug fix : Recherche de blessés dans l'action PHY_ActionReleverBlesses (FindMostInjuriedComposante)
    - JVT - Il n'y a plus de warning ( injustifié ) de PH non initialisé pour les munitions de tir indirect
    - NLD - Bug fix : les objets créés par action magique étaient contournés à 100%
    - NLD - Bug fix : crash potentiel quand l'automate donne une mission à un pion pendant la conduite

Version 0.33.11 [14/11/2003]
    - NLD - Nouvelle option en ligne de commande pour la SIM : -conffile XXX, qui permet de spécifier le nom du fichier 
            de configuration initial à utiliser. Par défaut (si l'option n'est pas précisée), c'est le fichier 'scipio.xml'
            qui est utilisé
    - JVT - La liste <Dotations> n'est plus utilisée dans types.xml. Par défaut, les dotations sont au maximum des capacités du
            pion. S'il est nécessaire de surcharger, le faire dans l'ODB et non plus dans types.xml ( c'était redondant )
    - JVT - Le manque de MOS ID ne provoque plus de wraning mais une erreur lors de l'initialisation de la SIM
    - JVT - Correction de la fonction PHY_EnginesInterface_ABC::GetAutomate ( #212 )
    - JVT - Les tirs indirects ne sont plus détecté par le COBRA s'ils passent dans la zone de détection, mais uniquement
            si leur origine est dans cette zone ( #372 )
    - JVT - Les représentations dans de la catégorie "tirs_indirects_detectes" ne sont plus dupliquées si elles existent déjà


Version 0.33.10 [06/11/2003]
    - NLD - Bug fix : L'affichage dans MOS_Light de la quantité de données reçues était toujours 0
    - NLD - L'envoi des dotations à MOS se fait tous les 6 pas de temps, et non plus à chaque pas de temps comme dans la release précédente
    - JVT - Bug Fix : Prise en compte correcte des valeurs par défaut de ph pour DEC_DistanceTir*
    - JVT - Bug Fix : DEC_DistanceTirDebarque renvoie la valeur en prenant en compte les composantes débarquables et non plus les
            composantes pouvant débarquer.

Version 0.33.9 [05/11/2003]
    - NLD - Affichage des postures dans MOS_Light (ajout msg DIN)
    - NLD - Affichage dans MOS_Light des infos sur la quantité de données échangées entre MOS_Light et SIM 
    - NLD - Les cônes ne sont plus systématiquement envoyés à MOS_Light (uniquement quand la checkbox associée est cochée dans MOS_Light ...)
                => Moins de pb réseaux (lag) avec un ODB de la taille de la VAU, quand cones désactivés
    - NLD - Envoi des infos d'intervisiblité entre unités uniquement quand nécessaire
    - NLD - Envoi des infos d'intervisiblité du PC
    - NLD - Bug fix : Le fuseau est copié pour le calcul de path find
                => Evite crash du à la réception d'une mission pendant le calcul d'un path find
                => Sera revu quand le path find (getcost()) sera refait
    - NLD - Modif gestion thread safety entre thread path find et thread général
                => le 'lock' se fait au niveau du MIL_Agent_ABC et non plus uniquement au niveau du DEC_Agent_ABC
    - NLD - La fonction DEC_Posture est rebranchée, mais UNIQUEMENT pour les scripts de test
    - NLD - Modification de la mission de test ChangePosture (Modif ASN, sans impact pour Thales)
    - NLD - Modification de la gestion des mocs
    - AGN - ADN : Correction de bug:
                => Si on enlevait la propriété "détecte objet" d'un senseur et que l'on sauvegardait, on avait une erreur
                   lorsqu'on ouvrait plus tard le projet.
    - AGN - ADN : Restriction de la saisie dans les noms des catégories (seuls les caractères alphanumériques sont acceptés).
    - NLD - Modification missions de test
                 - MoveTo (paramètre embarquement/débarquement en plus)
                 - CreateObject (paramètre size coef)
                 - Fire (type/nb obus pour tir indirect)
    - NLD - Bug fix : la détection de tir d'artillerie non limitée dans le temps ne marchait pas (Cf. PHY_PerceptionIndirectFire::Execute() )
    - NLD - Bug fix : MOS_Light : amélioration du rafraichissement de l'affichage des cones quand la météo change
    - NLD - Bug fix : La vitesse d'une unité n'était pas envoyée correctement à MOS quand l'agent traversait un obstacle
    - NLD - Path find : le nombre d'itérations du 'Reduce()' est limité à 10
    - NLD/JVT - Bug fix : Fonctions DEC de l'Embarquement (débarquement) ne fonctionnait pas quand le nombre d'humain embarqué (resp. débarqué) était déjà à 0 (resp 100%)
    - NLD - Bug fix : MOS_Light : crash quand réception du RC 'demande de tir EO'
    - NLD/JVT - Bug fix : Les délais de neutralisation étaient faux
    - NLD/JVT - Bug fix : Reload de l'état de neutralisation foireux
    - NLD/JVT - Un warning est lancé quand les paramètres des lanceurs/munitions sont incorrects (temps entre coups de 0 ...)
    - NLD/JVT - Bug fix : Tirs directs : Pb dans la gestion des délais qd changement de cible / changement de couple lanceur/munition
    - NLD/JVT - Bug fix : Tirs directs : Pb de gestion des dotations
    - NLD - Suppression des fonctions DEC suivantes : 
                * DEC_DistanceTirDebarque
                * DEC_VitesseMoyenne (elle ne faisait rien et n'était pas utilisée ...)
                * DEC_GetVitesseCourante
                * DEC_CentreDe
                * DEC_DistanceRect
                * DEC_Pause
    - NLD - N'utilisez plus le calcul de position pour calculer des positions de type 'Embuscade sur Point', et utilisez
                A::DEC_CalculerPositionEmbuscade( U /*T_Point point d'embuscade*/, U /*T_Point point de retraite*/, R /*Distance*/ ); // Retourne T_Point
    - NLD - Bug fix : L'évenement 'EVT_DEC_PriseAParti' n'était plus appelé
    - NLD - Bug fix : Quand le PC est mort, la connaissance des pions n'était plus mise à jour
                => La connaissance de tous les pions est mise à jour, même s'ils sont morts (la connaissance, pas la perception ...)
    - JVT - Changement de signature de la fonction DEC_DistanceTirDebarque() :
                    R A::DEC_DistanceTirDebarque( A /* unite sur qui on veut tirer */, * /* ph voulu, par défaut 0.8 */  );
            Son fonctionnement est le même que celui de DEC_DistanceTir, mais ne prend en compte que les composantes Débarquées
            ou Débarquables



Version 0.33.8 [24/10/2003]
    - NLD/JVT - Prise en compte de la hauteur reelle des capteurs dans MOS_Light (modif msg DIN)
    - NLD/JVT - Bug fix : Affichage des fléches de vision dans MOS_Light
    - NLD - Bug fix : assert() surface d'évitement autour d'un objet de type 'point'
    - NLD - Bug fix : assert() quand déplacement A->B avec A==B
    - NLD - Memory leak : infos de debug utilisées pour afficher le resultat du path find dans la fenêtre de la SIM non deletées

Version 0.33.7 [22/10/2003]
    - NLD - Bug fix : Crash lors de la destruction de la liste de localisations (paramètres 'zones') de la mission ASS 'acquerir des objectifs'
    - NLD - Bug fix : La fonction DEC_DeterminerPositionPourObstacle pouvait crasher, dans des cas très rares (pb de thread safety)
    - NLD - Bug fix : Path find faux dans des cas particuliers => Pb de welding dans TER_PathFindManager::RegisterTrianglesForDynaNode 
    - NLD - Bug fix : La routine de path find ne lancait pas de calcul qd la distance entre le point de départ et le point d'arrivée était inférieure
                à 1 (!) => Débile, car permettait de passer à travers une rivière 
    - NLD - Bug fix : Implémentation rapide de la gestion des ponts flottants (ne pas oublier de mettre une vitesse pour le type de terrain 'pont' dans composantes.xml)
    - NLD - Bug fix : Path finder : pb de passabilité sur les liens dynamiques 
    - JVT - Mise à jour de PHY_ComposanteType::ReadSpeeds et PHY_ComposanteType::GetMaxSpeed ( prise en compte de tous les types de terrains
            définis dans les fichiers de configuration )
    - JVT - Affichage d'un message d'erreur ( en debug ) si une vitesse n'est pas initialisée
    - JVT - Ajout des types de terrains manquant dans ADN : impossible, tunnel, falaise  
    - NLD - Bug fix : Pb init localisations type ellipse et secteur


Version 0.33.6 [21/10/2003]
    - JVT - Bug fix : Lorsque les perceptions ne peuvent pas être créées, elle ne sont plus mises dans la liste des perceptions
            de l'agent. Un message d'erreur est aussi affiché dans la console ( #354 )
    - JVT - Ajout d'un warning si la DD d'un senseur n'est pas spécifiée pour un objet donné
    - NLD - La fenêtre 'console' de la SIM prend une taille raisonnable toute seule
    - NLD - La fonction DEC_ReleverUnite retourne un bool indiquant si l'opération a réussi ou non
    - NLD - Memory leak : oubli de la destruction des missions pion/automate quand l'initialisation de celles ci échoue
    - NLD - Bug fix : La SIM ne fait plus d'exception lorsque une sauvegarde échoue 
    - NLD - Bug fix : Mauvaise initialisation lors de la reprise quand la SIM était en 'pause' au moment de la sauvegarde
    - NLD - Nouvelle fonction DEC : U A::DEC_CalculerPositionAppui( A /*T_Pion*/, R /*rDist*/ ); (Temporaire)
    - NLD - Bug fix : crash quand destruction d'un objet vu par le PC et un autre pion (=> modif boucle d'update DIA (UpdateEvent))
    - JVT - Changement de l'algorithme utilisé par MT_Random ( on utilise maintenant Mersenne Twister )
    - NLD - Bug fix : MOS_Light affichait 'interrompre' pour le RC 'poursuivre'
    - NLD - L'ID / le type et le camp d'un agent sont ajoutés au nom d'un agent, même si ce nom est défini dans l'ODB
    - NLD - Modifications objets : 
                - mise à jour du calcul du coefficient déterminant la durée de construction/destruction d'un objet
                - mise à jour du calcul du nombre de mines nécessaires à la construction d'un objet
    - NLD - Il est possible de donner des missions pions à un PC débrayé, dans MOS_Light
    - NLD - Bug fix : expand des lignes buggé
    - NLD - Nouvel algo pour le découpage des fuseaux 
    - AGN - ADN : ADN peut générer des fichiers HTML pour faire des tableaux croisés de données (comme ceux du gal).
            Pour créer ces fichiers et/ou les mettres à jours, choisir l'item "Enregistrer Tables" (Save Tables) dans
            le menu Projet.
            Pour visualiser correctement les tableaux, s'assurer que le fichier "style_scipio.css" est dans le répertoire
            des fichiers html.
    - NLD - Bug fix : Une unité dont au moins une composante n'a pas de vitesse défini dans le fichier de conf pour un objet donné 
                ne pourra plus traverser cet objet.
    - NLD - Obstacles / et surface d'évitement
                * Pour tous les objets, un objet 'contour' est créé, en respectant la distance spécifiée dans ObjectTypes.xml
                    <Type   id="zone minee par dispersion">
                        <PeutEtrePrepare>false</PeutEtrePrepare>
                        <PeutEtreValorise>false</PeutEtreValorise>
                        <PeutEtreContourne>true</PeutEtreContourne>
                        <EstUnObstacle>true</EstUnObstacle>
                        <DistanceEvitement>0</DistanceEvitement>            <!========================= en mètres
                    </Type>
                * Enrichissement du path finder par les sommets de la forme créée
                * Une unité qui connait un objet ne peut pas traverser cette zone
                * Une unité qui ne connait pas un objet peut la traverser, et en sortir
                * Le calcul du cout permettant de gérer cela est temporaire (lent et couteux pour le moment)
    - NLD - Path finder 
                * Le 'Reduce()' est appelé tant qu'il réduit le cout du path d'une valeur significative, et non plus 
                    jusqu'à ce cout soit nul
                * La méthode (CreateLineTree) qui crée une 'ligne' de noeuds dynamiques dans l'arbre du path find ajoute
                    maintenant des noeuds aux intersections avec les arêtes de TOUS les triangles (et non plus uniquement
                    ceux délimitant la frontière entre 2 environnement différents (route/forêt))


Version 0.33.5 [10/10/2003]
    - NLD - Lorsqu'un pion meurt, sa mission n'est plus annulée
    - NLD - Bug fix - MOS_Light crashait quand on le fermait alors qu'il était toujours connecté à la SIM
    - NLD - Bug fix - Assert dans TER_Localisation::IntersectWithBorder (utilisé pour clipper un polygone dans un fuseau)
    - NLD - MOS_Light : Affichage des changements d'automates demandés par la SIM (DEC_ChangeAutomate)
    - NLD - Bug fix - Le calcul de position de tir renvoyait 'impossible' quand le 'shoot range' valait '0' 
                => Retourne 'valide' + position courante                
    - NLD - Bug fix - Destruction des objets :
                 - Bug dans la détection : les objets ne sont détruits physiquement que 1 frame après
                 - Bug dans action magique 'Destroy object' pouvait faire crasher la SIM (objets toujours utilisés
                 - Suppression des recyclers
    - NLD - Bug fix - La connaissance objet n'était plus affichée dans MOS_Light
    - NLD - Bug fix - Déplacement des fonctions de traitement des DEC_Tasks (Après l'update de la décision et non plus avant)
                + assert dans le 'Stop()' de DEC_Task_ABC

Version 0.33.4 [09/10/2003]
    - NLD - Ajout des 2 messages ASN : CtrlSimStateBegin / CtrlSimStateEnd utilisés pour borner l'envoi de l'état global
            de la SIM quand un MOS se connecte.
    - NLD - Bug fix : assert() lancé quand DEC_DetruireItineraire était appelé sur un itinéraire provenant d'un calcul de position
    - NLD - Nouvelle fonction DEC : V DEC_ChangeAutomate( A /*T_Pion*/, A /*T_Automate*/ ); (Le changement d'automate n'est pas visible dans MOS pour l'instant)

Version 0.33.3 [08/10/2003]
    - NLD - Nouvelle fonction DEC : B A::DEC_ObtenirProchainObjetSurItineraireCourant( A /*Rep_Objet*/, R /*Distance*/ );
            => vient en remplacement de EVT_DEC_DetectionObjet(), qui n'est plus appelé
            => Je n'ai pas viré cet évenement dans Functions_Objets.hal pour l'instant, faite le rapidement.
            => Cf. SDE pour méthode de gestion des obstacles

Version 0.33.2 [08/10/2003]
    - JVT - Il est possible de règler la distance max de détection des objets dans les fichiers senseurs en utilisant
            l'attribut DD des tags Target. Par défaut, cela utilise la valeur DD du senseur.
    - NLD - Bug fix : DEC_CalculePointArrivee ne fonctionnait pas quand il était appelé avec un automate (myself) en paramètre
    - NLD - Bug fix : DEC_CalculeDistanceLigneMoyenne : test de nullité du fuseau inversé 
    - NLD - Bug fix : La direction dangereuse n'était pas initialisée dans le cas d'une copie de mission (Fonctionnalité utilisée pour 'Relever une unité')
    - NLD - Bug fix : Pb de paramètres MIL_AutomateMission_GEN_AmenagerAireStationnement et MIL_AutomateMission_GEN_RealiserSystemeObstacles
                        (localisation nulle dans DIA)
    - NLD - Un objet peut maintenant être activé, même s'il n'est pas préparé à 100 %
    - AGN - MOS Light : on utilise les camps définis dans le fichier des équipes de la sim, c plus codé en dur.
    - AGN - MOS Light : il est désormais possible d'afficher les pions réels par camp (remplace l'option "situation réelle").
                        Le pion sélectionné est tjs dessiné, qq soient les options d'affichage.


Version 0.33.1 [06/10/2003]
    - AGN - Correction d'un bogue lors de la destruction d'une zone d'implantation de l'artillerie.
    - AGN - MAJ des données physiques avec les données du général.
    - NLD - Bug fix : le GDH envoyé à MOS était invalide
    - AGN - Le moteur décisionnel surveille que si une action DIA a dé  clenchée une action physique celle-ci
            soit bien arrêtée lorsque l'action est arrêtée. 
            => NLD - Désactivé pour cette release (trop proche VABF) - sera réactivé dans la suivante
    - NLD/JVT - Sauvegardes:
                    * Ajout de la sauvegarde du mode embraye/debraye
                    * Bug fix : déclenchement des évenements DIA de perception pour tous les agents/objets présents dans 
                                la perception au reload (=> recréation des connaissances)


Version 0.33 [01/10/2003]
    - JVT - MOS_Light : Remise en place du changement de compagnie pour les pions
    - JDY - ADN - Correction de la fonction "Save As".
    - JVT - Changement des implications des états des composantes :
            * Composante Detruite : comme avant
            * Composante OK       : comme avant
            * Composante Réparable Avec évacuation : ( simulation d'une composante laissée sur place )
                . La composante ne peut plus effectuer ni tir, ni détection
                . Le pion peut décider de passer cette composante dans la chaîne LOG ( idem avant )
            * Composante Réparable sans évacuation : ( simulation d'une composante laissée sur place pour réparation et revenant 
                dans le pion un fois la réparation effectuée )
                . La composante est considérée comme Réparable avec évacuation pendant un temps donné, puis repasse en OK
                . Pas de passage de ces composantes vers la chaîne LOG
    - JVT - Remise en place de la neutralisation au niveau du pion. Elle n'est consécutive que d'un tir indirect.
            Un pion neutralisé ne peut plus se déplacer pendant un certain temps. Il peut cependant faire toutes les autres
            actions ( sous réserve d'état compatible des composantes )
    - JVT - DEC_EtatNeutralisation devient DEC_EtatDommages ( le pourcentage renvoyé est le pourcentage de composante endommagées
            parmi les composantes vivantes. Il n'est pas fait de distinction entre les réparables sur place ou par log )
    - JVT - DEC_PionEtatNeutralisation devient DEC_PionEtatDommages
    - JVT - Retour de la fonction DEC_EstNeutralise
    - NLD - Les missions Pion_INF_ReconnaitrePoint et Pion_ABC_ReconnaitrePoint ne prennent plus un RepPoint en paramètre, mais un T_Point
    - NLD - T_Automate.missionAutomate_ n'était pas initialisé correctement par la SIM
    - NLD - Bug fix : les valeurs renvoyées par DEC_CalculeDistanceLigneAvant/Arriere, quand ces fonctions étaient appelées dans le même pas de temps
            que DEC_StartCalculLignesAvantEtArriere, étaient toujours 0
    - NLD - Implémentation de la fonctionnalité 'Relever une unite' : 
                - Fonctionnement : 
                    * Le pion qui relève prend la mission de l'unité relevée (Les itinéraires de la mission copiée sont tronqués pour ne garder que 
                            la dernière valeur)
                    * Le pion relevé n'a plus de mission
                - Nouvelle fonction DEC niveau pion : V A::DEC_ReleverUnite( A /*T_Pion*/ )
                - Message ASN SIM -> MOS indiquant quelle est la nouvelle mission du pion qui relève
    - NLD - Bug fix : Dans les scripts, il ne faut JAMAIS appeler DEC_DetruireItineraire et DEC_DetruirePosition 2 fois pour le
                même itinéraire (ou même position), cela provoque, soit un crash immédiat, soit un crash aléatoire plus tard
               => Modification du système de gestion de références dans DEC_Path / DEC_Position (un compteur pour le moteur et un compteur pour 
                    les scripts)
               => un assert est désormais lancé si ces fonctions sont appelées 2 fois de suite
    - NLD - Nouvelle fonction DEC : R A::DEC_CalculeDistanceLigneMoyenne( S /*T_PionCont*/ ) (Cf. SDE/MIA pour fonctionnement)
    - NLD - Modification de la fonction DEC_CalculePointArrivee : le point d'arrivée est maintenant calculé en fonction de la position de l'automate
            et non plus du pion concerné, afin d'éviter des points d'arrivée de part et d'autre du fuseau quand les pions sont placés
            n'importe comment dans le fuseau(Cf. SDE/RGT)
                

Version 0.32.2 [29/09/2003]
    - JVT - Fonction DEC *temporaire* pour faire un recompletement total sur un pion :
                V A::DEC_RecompletementTotal();
    - JDY - ADN - Mise a jour données et interface suite aux modifications de Jerome de la version 0.32.1
    - JVT - La lecture des données en chaînes de caractère dans les xml est maintenant case-insensitive
    - NLD - Nouvelles fonctions DEC : gestion des lignes avant/arriere (ajout d'un nouveau 'User Type' : T_Tache_CalculLignesAvantArriere )
                U A::DEC_StartCalculLignesAvantEtArriere( A /*T_Automate*/ );
                V A::DEC_StopCalculLignesAvantEtArriere ( U /*T_Tache_CalculLignesAvantArriere*/ );
                R A::DEC_CalculeDistanceLigneAvant      ( U /*T_Tache_CalculLignesAvantArriere*/, A /*T_Pion*/ );
                R A::DEC_CalculeDistanceLigneArriere    ( U /*T_Tache_CalculLignesAvantArriere*/, A /*T_Pion*/ );
            Cf. SDE/MIA pour fonctionnement
    - NLD - Les RC eSurLC et eSurLCA n'existent plus, ils sont remplacés par le RC 'eSurLima', qui prend un type de lima
            (EnumTypeLima) en paramètre
    - NLD - Modification des missions Pion_INF/ABC_ControlerSecteur, qui prennent une localisation, à la place des 3 points
    - NLD - ASN : la SIM peut envoyer les messages suivants (à gérer) à MOS : MsgAffectSuperieur et MsgPionOrder
    - NLD - ASN : modifs des messages MsgCtrlInfo / MsgCtrlBeginFrame / MsgCtrlEndFrame : ajout des GDH (Cf. Thales)


Version 0.32.1 [26/09/2003]
    - JVT - Suppression de la liste des modificateurs de détection/détectabilité dans types.xml (liste <Postures>)
    - JVT - Cette liste est remplacée par la liste <TempsMiseEnPosture> dans types.xml. Cette liste doit être complète
            et ne donne pas de valeurs par défaut. Les valeurs sont exprimées en minutes.
    - JVT - Cette liste est remplacée par une liste de modificateur détection/détectabilité ( liste <Modificateurs>::<Postures> )
            dans les fichiers de chaques senseurs. Cette liste doit être complète et ne donne pas de valeurs par défaut.
            Attention, les valeurs des pourcentage ne sont plus exprimés en 0..100, mais en 0..1, par souci de normalisation
            avec les autres données du fichier.
    - JVT - Suppression de la liste des <Desactivations> dans les senseurs ( utiliser <Postures> à la place ).
    - NLD - Nouvelles missions pion : Pion_INF_Freiner et Pion_ABC_Freiner
    - NLD - Bug fix : Les fonctions de création/destruction d'objets n'étaient pas enregistrés pour les compagnies 3D
    - NLD - Bug fix : references sur les nodes / nodelinks dynamiques les supprimant inopinément
                => visible qd l'automate donnait des missions à ses pions (chemin en ligne droite) 
    - JVT - Affichage de la probabilité de détection d'un senseur sur un pion ( alpha sur la surface de vision de MOS_Light )
            ATTENTION : cet affichage ne représente que la dégradation dûe à la posture du pion détectant
    - JVT - Changement de signature de la fonction DEC_StartReconnaissancePoint
            V A::DEC_StartReconnaissancePoint( U /*point*/, R /*rayon de la reconnaissance*/, B /* ack taille max obtenue */,
                                               * /* R : vitesse de progression en km.h-1, par défaut : 5 km.h-1*/ )

Version 0.32 [25/09/2003]
    - JVT - Ajout d'une fonction DEC permettant de prédire la position d'un pion dans un temps donné :
            U /*T_Point*/ DEC_ExtrapolerPosition( A /* T_Pion */, R /* temps en minutes */ );
            Fonctionnement : 
                * Vitesse du pion = 0, renvoie la position du pion
                * Pion en déplacement : _ donne la position qu'aurait le pion sur le path s'il suivait le path courant avec
                                        sa vitesse instantanée
                                        _ si le path n'est pas assez long, on suppose qu'après son path, le pion continue un
                                        déplacement ( même vitesse ) dans la direction générale du path ( end - start )
    - JVT - Création d'une nouvelle catégorie DIA pour les détections de tirs indirects ( "tirs_indirects_detectes" ) qui
            contient des représentations de type T_DetectionTirIndirect
    - JVT - Création d'un nouveau type de perception : PHY_PerceptionIndirectFire
    - JVT - Ajout de nouvelles fonction DEC sur le pion COBRA :
            V A::DEC_StartDetectionTirIndirect( U /*T_Localisation*/, * /* temps en minute, infini si non spécifié */ );
            V A::DEC_StopDetectionTirIndirect ( * /* T_Localisation ( uniquement cette localisation ) 
                                                     ou rien ( toutes les localisations )*/ )
    - JVT - Big fix : Memory leaks dans PHY_PerceptionZone ( delete des TER_Localisation ET enregistrement des rep DIA )
    - NLD - Suppression de la fonction DEC_TypeTerrain qui :
                1. Ne servait à rien
                2. Etait buggée jusqu'à l'os
    - NLD - Bug fix : Les fonctions de création/destruction d'objets n'étaient pas enregistrés pour les pions 3D
    - NLD - Bug fix : Pb de lecture des paramètres des ordres de conduite Pion/AutomateAppliquerFeux, AutomateChangerDePosition, AutomateMouvementZoneImplantation 
    - NLD - Bug fix : assert dans path find : pb de destruction des nodeslinks dynamiques
    - NLD - Ajout d'infos de debug lors du calcul de chaque path find (=> type de chemin, agent, pos src et dest)
    - NLD - Gestion des localisations de type cercle/ellipse/secteur
                => cercle  : dans MOS_Light, 2 points : centre, et point du cercle
                => ellipse : dans MOS_Light, 3 points : centre, et un point pour chaque rayon de l'ellipse. Si les 2 vecteurs (centre-rayon1 et centre-rayon2) ne 
                        sont pas orthogonaux, l'ellipse aura une tête bizarre
                => secteur : dans MOS_Light, 3 points : centre, et les deux points du secteur. L'angle du secteur est celui formé par les deux vecteurs, de V1 vers V2, 
                        dans le sens trigonométrique. (pour l'instant, tant que ce n'est pas vu avec Thales ...)
            Pour l'instant, ces 3 types sont convertis en polygones par la SIM, et renvoyés sous cette forme à MOS
    - NLD - Bug fix : La liste des points de passage stockée dans DEC_Path pointait sur une liste DIA
                => Cette liste peut être détruite, alors que le thread du path find l'utilise
                => La liste est maintenant copiée dans DEC_Path
    - NLD - Il n'est plus possible de faire un 'magic move' sur un pion quand son automate est embrayé (ajout d'un code d'erreur spécifique dans ASN EnumUnitAttrCode)


Version 0.31 [24/09/2003]
    - JVT - Implémentation de DEC_DistanceTirSurEni ( avec prise en compte du paramètre de PH en option )
            * la composante cible choisie pour le calcul de ph est la plus dangeureuse de la connaissance
            * la posture choisie pour la cible est ePosturePosteReflexe
            * la posture choisie pour le tireur est ePosturePosteReflexe
            * le couple lanceur / munition choisi est le plus efficace ( en ne prenant pas en compte les munitions 
              dont la dotation courrante est nulle )
            * si le pH demandé n'est pas atteingnable, la distance renvoyée est 0
            * si aucune composante n'est dans la connaissance du pion cible, la distance renvoyée est -1
    - JVT - Nouvelles compositions ( compose2_2 ) dans MIL_pch.h ( f( g(x), g(y) ) et f( g(x), h(y) ) en plus de f( g(x), h(x) ) )
    - NLD - Bug dans réception de la mission MIL_PionMission_ASS_AcquerirLanceursEniCOBRA
            (Cette mission n'a jamais été lancée !!!)
    - JVT - Bug fix : Condition de terminaison des tirs indirects ( provoquait un assert )
    - NLD - Update gestion des noeuds dynamiques dans TER (liaisons des noeuds dynamiques entre eux)
    - NLD - Gestion des fuseaux : enrichissement de l'arbre du path finder par des noeuds (ligne au milieu du fuseau)
                => devrait réduire les pbs de chemins impossibles quand fuseaux trop petits, ou trop étroits
    - NLD - Nouvelle fonction DEC : 
                U /*T_Point*/ DEC_DeterminerPositionPourObstacle( I /*E_ObjectType*/, U /*vCircleCenter*/, R /*rayon*/, B /*return code*/ );
            Avec les règles suivantes pour la détermination des positions (utilisation des noeuds du path finder)
                Abatti                    : tout type de terrain < eTypeTerrainForest < eTypeTerrainForestBig 
                Eboulement                : eTypeTerrainUrban
                Destruction route         :                      eTypeTerrainRoadChemin < eTypeTerrainRoadDepartemental < eTypeTerrainRoadNational < eTypeTerrainRoadAutoroute
                                            en combinaison avec  eTypeTerrainCrossRoad  < eTypeTerrainInterchange
                Destruction pont          : eTypeTerrainBridge < eTypeTerrainBridgeBig 
                Bouchon mines             : tout type de terrain < eTypeTerrainRoadChemin < eTypeTerrainRoadDepartemental < eTypeTerrainRoadNational < eTypeTerrainRoadAutoroute
                                            en combinaison avec  eTypeTerrainBridge     < eTypeTerrainBridgeBig
                                            en combinaison avec  eTypeTerrainCrossRoad  < eTypeTerrainInterchange
                Zone minée linéaire       : idem bouchon mines
                Zone minée par dispersion : idem bouchon mines
                Fossé anti char           : idem bouchon mines
                Barricade                 : idem bouchon mines
    - JVT - Ajout d'un nouveau type de perception : PHY_PerceptionReco
    - JVT - Ajout de deux nouvelles fonction DEC de gestion de la perception en reconnaissance sur un point :
            * V A::DEC_StartReconnaissancePoint( U /*point*/, R /*rayon de la reconnaissance*/, * /* R : vitesse de 
                                                progression en km.h-1, par défaut : 5 km.h-1*/ )
            * V A::DEC_StopReconnaissancePoint( U /*point*/ )
    - JVT - La perception "coup de sonde" est maintenant une PHY_PerceptionCoupDeSonde et non plus un modificateur dans
            la PHY_Perception_Agent. ( les prototypes DIA n'ont pas changé ) 
    - NLD - Ajout paramètre dans mission Pion-ASS-AcquerirLanceursEniCOBRA (+renommage dans mission Pion-ASS-AcquerirObjectifs)
    - NLD - Modif mission TestCreateObject : prend le type d'objet en paramètre à la place d'un booléen
    - JVT - Les senseurs peuvent être automatiquement désactivé suivant la posture
            Rq : Attention, cette désactivation est affichée par un hack dans MOS_Light ( les senseurs désactivés
            sont virés en dehors du monde )
    - JVT - Modification des xml des senseurs pour la désactivation automatique : Ajout d'une nouvelle liste :
                    <Desactivations>
                        <Desactivation>Mouvement</Desactivation>
                        <Desactivation>Arret</Desactivation>
                    </Desactivations>
    - NLD - Le compte rendu 'DemandeDeTirEO' prend une position en paramètre, ainsi qu'un agent optionnel en 2eme paramètre
    - JVT/NLD - Bug fix : pb d'envoi des dotations en humains de la catégorie 'mort'
    - JVT/NLD - Bug fix : pb d'envoi des dotations en ressources quand une composante meurt
    - JVT/NLD - Bug fix : gestion de la résurrection des pions (après recomplétement ...)
                    => Annulation de la mission courante
                    => pb d'update DIA
                    => pb dotations
  
Version 0.30.2 [19/09/2003]
    - JVT - Réécriture totale de la gestion des dotations ( normalement c'est transparent pour vous )
    - JVT - Ajout des différentes projections dans MIL_pch.h
            * identity
            * project1st
            * project2nd
            * select1st 
            * select2nd 
    - JVT - Suppression de comparateurs de pair dans MIL_pch.h et modification de toutes les fonctions les utilisant ( avec
            les compositions et les projections ) 
    - JVT - Les updates des dotations sont envoyées à MOS uniquement si nécessaire ( avant, il y avait des envois inutiles
            dus à la conversion float -> int )
    - JVT - Remise en place des surcharges des dotations dans l'ODB, avec prise en compte du fait qu'une catégorie MOS
            peut correspondre à plusieurs munitions dans le pion.
    - NLD - Bug fix - MOS_Light : on ne pouvait plus saisir les points des localisations (bug du au fait que la gestion
                        des localisations dans MOS_Light est crade)
    - JDY - Bug fix - Calcul de position lorsque l'on est deja sur la position ( renvoyait position impossible)
    - NLD - Bug fix - La sérialisation des ordres de conduite 'Pion/AutomateAppliquerFeux' était buggée

Version 0.30.1 [17/09/2003]
    - NLD - Bug fix : debraye automate -> mission pion -> embraye automate pendant execution mission -> crash (assert)
    - NLD - Bug fix : en embraye, les pions n'avaient pas les bons fuseaux
    - NLD - Bug fix : Réception de localisations invalides non gérées dans certaines missions (ASS_SurveillerRATAC)
    - NLD - Modification de la gestion des identifiants SIM (pour compatibilité avec besoins Thales)
    - NLD - Bug fix : gestion d'erreur dans missions Automate_GEN_RealiserSystemeObstacles et Automate_GEN_AmenagerAireStationnement
    - NLD - Bug fix : Envoi de l'état des ordres automate à MOS (MsgOrderManagement)
    - FBD - Nouveaux Params Lors de la connection pour methode de test replay :
              -> Une icone du Ying&Yang informe l'utilisateur qu'il est en mode Rec/Replay ( pas de violence possible dans ces modes....)
              -> On peut lancer MOS_Light et enregister les ordres donnés manuellement pour replay ultérieur.
              -> On peut choisir la fréquence de choix des ordres aléatoires pour les tests.
              -> On peut choisir un nom de fichier pour les sauvegardes.
    - FBD - Bug Fix : les params aleatoires sont choisis correctement pour les missions avec localisations et leur nombre de points géometriques
    - FBD - Bug Fix : plus de droite a l'init lorsque pas connecté et clic vouton droite souris.
    - FBD - Bug Fix : La fenetre de connection s'affiche plus haut dans l'ecran lorsque l'on se connecte.
    - NLD - Nouvelle fonction DEC : 
                    U A::DEC_CalculeBarycentreLocalisationDansFuseau ( U /*T_Localisation*/, I /*E_LocalisationFunctionsReturnCode*/ );
    - JVT - Correction d'une erreur de mise à jour du NET_Agent lors du transfert de composantes ( renforcement )

Version 0.30 [17/09/2003]
    - JVT - L'attribut de tag Angle des fichiers senseur n'est plus optionnel. Il contient 'degre' ou 'radian'
    - JDY - Correction recherche de position d'observation dans le cas ou le chemin ne possede que 2 noeuds
    - JDY - ADN : ajout de l'attribut unite dans l'angle d'un senseur
    - NLD - Nouvelle fonction DEC : 'DEC_DetruireListePoints()'
    - NLD - Le RC 'En poste fàce à obstacle' prend maintenant un RepObjet en paramètre
    - NLD - Nettoyage dans les ordres de conduite
                - renommage (eOrdreConduiteContourner => eOrdreConduite_Pion_Contourner)
                - ajout des ordres de conduite automate
                        * eOrdreConduite_Automate_AppliquerFeux
                        * eOrdreConduite_Automate_ChangerDePosition
                        * eOrdreConduite_Automate_MouvementZoneImplantation
                        * eOrdreConduite_Automate_ReconnaitreZoneImplantationSuivante
                - le fonctionnement des ordres de conduite niveau automate est identique aux ordres de conduite niveau pion
                - modification de l'évenement : 
                        * le type T_OrdreConduite n'existe plus, 
                        * l'évenement prend directement un Rep_OrdreConduite
                        * la string 'hint' est directement contenue dans Rep_OrdreConduite, et n'est donc plus passée à l'évenement
                - fonctionnement interne : la gestion des ordres de conduite a été déplacée de MIL_PionOrderManager dans MIL_OrderManager_ABC
    - NLD - Suppression de l'attribut bFormationColonne dans la mission TestMoveTo
    - NLD - Path finder : Support multi threadé réel (pour l'instant, seul 1 thread de path find est activé, c'est toujours en tests pour > 1)
                => Les fonctions de reply sont déplacées de TER_PathFindManager vers TER_PathFindReplay
                => Ajout de mutexes : opération atomiques  
                            - CreateLineTree / DeleteLineTree
                            - GenerateTreeStatic / DeleteTreeStatic
                            - GenerateTreeDynamic / DeleteTreeDynamic
                            - NotifyPathFindComputationBegin / NotifyPathFindComputationEnd
                => Notes fonctionnement MT: 
                    - Au début de chaque calcul (TER_PathFindReply::SubmitRequest()), une réference est ajoutée sur tous les nodes 
                        dynamiques (TER_PathFindManager::NotifyPathFindComputationBegin() )
                    - Si un node dynamique ou un node link dynamique est ajouté pendant le calcul, il est référencé autant de fois qu'il y a 
                      de threads de calculs en cours ( TER_PathFindManager::CreateDynaNode() / TER_PathFindManager::CreateDynaNodeLink() 
                    - Tous les nodes/nodes links dynamiques ajoutés (Ajout = création + ajout d'une référence) ou utilisés par CreateLineTree() 
                        sont stockés, et déréférencés à la fin du calcul par DeleteLineTree()
                    - A la fin du calcul, une référence est enlevée sur tous les nodes/nodeslinks dynamiques (TOUS, même ceux ajoutés 
                        en cours de route par le thread, ou par un autre thread)
                    - Depuis l'extérieur (thread SIM), les fonctions CreateLineTree / DeleteLineTree peuvent être appelées pour enrichir
                        le path find (fuseaux, ponts flottants ...)    
                => Modification de la fonction (mission) de test 'TestPathFind', pour qu'elle fonctionne en multi threadé
                => Nouvelle option ligne de commande : -nbpathfindthreads #
    - NLD - Nouvelle fonction DEC, pour BMS : 
                U DEC_TransformePointEnCarre( U /*T_Point*/, R /*taille côté du carré, en mètres*/ );
    - NLD - Nouveaux types d'objets: 
                "zone implantation canon"  , eObjectTypeZoneImplantationCanon
                "zone implantation cobra"  , eObjectTypeZoneImplantationCOBRA
                "zone implantation lrm"    , eObjectTypeZoneImplantationLRM  
            PENSEZ A AJOUTER LES INFORMATIONS ASSOCIEES DANS LE FICHIER composantes.xml, SINON VOUS NE POURREZ PAS LES CONSTRUIRE ....
    - NLD - Nouvelles missions INF :
                - MIL_AutomateMission_INF_Attaquer
                - MIL_AutomateMission_INF_AttaquerSouplesse
    - NLD - Fonctions DEC de manipulation de listes de 'User Types'
                - Renommage DEC_GetUserTypeList_Size  => DEC_UserTypeList_GetSize 
                - Renommage DEC_GetUserTypeList_At    => DEC_UserTypeList_GetAt
                - Nouvelle fonction V DEC_UserTypeList_PushBack( U /*list*/, U /*elt*/ );              
    - NLD - Bug fix : l'attribut 'directionABarrer_' de la mission 'Automate_INF_DonnerCoupArret' n'était pas envoyé à DIA
    - NLD - Bug fix : pb de script qd destruction d'un objet (DEC_DetruireInfoGeo_Objet() appelé 2 fois)
    - NLD - Nouvelle mission ; Automate_ASS_AssurerMiseEnOeuvreLRM
    - NLD - Renommage fonctions DEC : 
                - DEC_MRT_PositionsParRapportALocalisation                  => DEC_PositionsParRapportALocalisation
                - DEC_MRT_CalculePointArrivee + DEC_CDT_CalculePointArrivee => DEC_CalculePointArrivee
                - DEC_MRT_DeterminerPositionParRapportALima                 => DEC_DeterminerPositionParRapportALima
    - NLD - Bug fix : crash quand action magique moveto pendant une mission de 'test moveto'   
                => Suppression du booléen pourri 'bMustPropagatesEndToAI' dans PHY_Action_ABC
                => Le 'Solve' et le 'Compute' ne sont plus appelées quand l'action est 'finished'

Version 0.29.2 [11/09/2003]
    - JDY - Outil d' adaptation permettant d'editer les fichiers xml de configuration de SCIPIO
            Creation - Modification - Sauvegarde du projet
            Modification - Ajout - Suppression d' élements dans le projet
    - JVT - Bug fix : Correction de la fonction PHY_UnitCanMove_ABC::GetActionsFromPath
    - JVT - Ajout d'un tag <IdentifiantMOS> dans attritions.xml afin de faire une relation surjective entre les types de
            munitions SIM et leurs identifiants MOS.
            ex : "VAB_Mit_12.7" et "VBL_Mit_12.7" seront les deux vues comme des "Balles classiques" 12.7 par l'animateur.
    - JVT - Ajout de std::mem_fun_ref_t et std::mem_fun_ref version const dans MIL_pch.h
    - NLD - Bug fix : la bounding box de la localisation de type 'point' était fausse 
    - NLD - Les comptes rendus des pions sont remontés à MOS même quand l'automate est embrayé
    - NLD - Bug fix : update des dotations quand une unité meurt (temporaire en attendant refonte par JVT)
    - NLD - Bug fix : la gestion de la vitesse max était foireuse sur les types 'ruisseau', 'fleuve', 'rail', 'falaise'
    - NLD/FBD - Path find : 
                    - Corrections de pleins de petits bugs
                    - Optim RAM
                    - Amélioration calculs de chemin notamment dans les cas où il y a des 'goulots' formés par des rivieres
                => REPRENDRE LES DATA TERRAIN


Version 0.29.1 [09/09/2003]
    - NLD - Numéro de version centralisé entre les différentes applications (MT_Version.h) 
                    => Reste à l'inclure dans ADN
    - NLD - Nouveaux comptes-rendus
                * ReconnaissanceApprofondieTerminee
                * DeclenchementAussitotPret
                * DeclenchementHSO
                * DeclenchementAuCommandement
                * PremierCoupParti
                * TirExecute
                * TirAnnuleSectionIndisponible
                * ErreurPasDeZoneTrouvee
                * IndisponibleAuxFeux
                * RejointPlotMunition
                * AttenteReconaissanceTerminee
                * AvertissementZoneDeploiementInchangee
                * ErreurZoneARejoindreOccupee
                * DisponibleAuxFeux
                * ChangementDePosition
                * DebutSurveillance
                * DebutInstallation
                * PretPourConduiteTir
    - NLD - Suppression de l'envoi des 5 capacités à MOS
    - NLD - Modification de l'envoi des dotations en personnel à MOS : blessés => U1, U2, U3, UE et modification de MOS_Light 
    - JVT - Ajout d'une formation interne en nuage ( .... qui sera utilisée pour les fantassins débarqués )
    - JVT - Bug Fix : Remise en fonctionnement de DEC_ModulerVitesse ( bug introduit avec la 0.29 )
    - JVT - Nettoyage des includes dans les .h
    - AGN - Bug fix : l'initialisation des connaissances des camps par défaut n'était plus adapté à la nouvelle catégorisation.


Version 0.29 [05/09/2003]
    - NLD - Bug fix : le gestionnaire d'ID pour les objets de protection génie n'était pas le bon (Pour thales)
    - JVT - Les pions physiques de type compagnie peuvent avoir plusieurs composantes ( types.xml )
    - JVT - Mise en place des postures automatiques. Les changements dans les postures se font de la manière suivante :

                                                PosteAmenage _________ 
                                                     ^                \
                                                     |                 |
                                                   Poste _____________ |
                                                     ^                \|
                                                     |                 |
                       _ PostePrepareGenie       PosteReflexe ________ |
                     /                 ^         ^                    \|
                    |                  |         |                     |
                    |                   \       /                      |
                    |                     \   /                        |
                    |                     Arrêt                        |
                    |                       ^                          |
                    |                       |                          |
                    +--------------->   Mouvement <--------------------+

            Cf $/Specs/Doc/PHY/Exemple de fonctionnement des postures automatiques.doc
    - JVT - Suppression de l'action de changement de posture
    - JVT - Suppression de la notion de posture en mouvement discret
    - JVT - Les fonctions scripts ayant une relation avec les postures ont été désactivées
    - JVT - Modification des définitions des postures dans types.xml :
            <Postures>
                <Mouvement>
                    <PourcentDetectionSiDetecteur>70</PourcentDetectionSiDetecteur>
                    <PourcentDetectionSiDetecte>100</PourcentDetectionSiDetecte>
                </Mouvement>
                <Arret>
                    <PourcentDetectionSiDetecteur>80</PourcentDetectionSiDetecteur>
                    <PourcentDetectionSiDetecte>90</PourcentDetectionSiDetecte>
                </Arret>
                <PosteReflexe>
                    <TempsMiseEnPosture>0.5<TempsMiseEnPosture>
                    <PourcentDetectionSiDetecteur>85</PourcentDetectionSiDetecteur>
                    <PourcentDetectionSiDetecte>85</PourcentDetectionSiDetecte>
                </PosteReflexe>
                <Poste>
                    <TempsMiseEnPosture>5<TempsMiseEnPosture>
                    <PourcentDetectionSiDetecteur>95</PourcentDetectionSiDetecteur>
                    <PourcentDetectionSiDetecte>70</PourcentDetectionSiDetecte>
                </Poste>
                <PosteAmenage>
                    <TempsMiseEnPosture>30<TempsMiseEnPosture>
                    <PourcentDetectionSiDetecteur>100</PourcentDetectionSiDetecteur>
                    <PourcentDetectionSiDetecte>60</PourcentDetectionSiDetecte>
                </PosteAmenage>
                <PostePrepareGenie>
                    <TempsMiseEnPosture>30<TempsMiseEnPosture>
                    <PourcentDetectionSiDetecteur>100</PourcentDetectionSiDetecteur>
                    <PourcentDetectionSiDetecte>50</PourcentDetectionSiDetecte>                
                </PostePrepareGenie>
            </Postures>
            ATTENTION : Ce sont ces valeurs que j'ai mis par défaut sur toutes les unites...
            ATTENTION : Contrairement à la précédente version, la structure ci-dessus est exhaustive ET nécessaire.
            ATTENTION : Contrairement à la précédente version, les temps sont exprimés en minutes ( pas obligatoirement entieres )
    - JVT - Suppression des catégories 'à la JANUS' des composantes ( VCI, Blinde, ... ) dans Composantes.xml
    - JVT - Définition de deux types de catégories pour les composantes :
                * Volume
                * Protection
            Déclaration de la categorisation des composantes dans Categorisation.xml :
                <Protection>???</Protection>
                <Volume>???</Volume>
    - JVT - Ajout d'un fichier permettant de définir les catégories de volumes et de protection ( et leurs relations d'ordre ) :
            Categorisation.xml ( chemin déclaré dans scipio.xml ). Ces categories restent dynamiques ( vous pouvez en ajouter
            ou supprimer directement dans les fichiers de conf ) mais, contrairement aux anciennes catégories, doivent être
            déclarées dans ce fichier.
            _ Les protections actuellement déclarées sont :
                * CharLourd
                * CharMoyen
                * BlindeLeger
                * VehiculeNonProtege
                * Combattant
            _ Les volumes actuellement déclarés sont :
                * Gros
                * Moyen
                * Petit
            Ces catégories sont dynamiques, mais il faudrait les fixer rapidement pour la VABF, car en ajouter une implique pas
            mal de données à renseigner dans les fichiers de configurations.
            Vous seriez bien aimable de vérifier les catégories que j'ai mis pour chacune de vos composantes.
    - JVT - Changement du format de renseignement des données des senseurs : 
            * Suppression de la notion de type de composante et remplacement par les categories de taille des composantes.
            * Tous les tags définis dans Categorisation pour le volume sont obligatoires, il n'y a plus de valeurs par défaut.
    - JVT - Implémentation finale de la détection suivant les types de données décidées avec le CROSAT.
    - JVT - Changement complet du fichier PH.xml. On utilise désormais les types de données validées avec le CROSAT.
            ATTENTION : Contrairement avec la version précédente, les pourcentages sont maintenant des flottants entre 0 et 1.
            Pour exemple, je n'ai renseigné que la munition XL_CN120_OFL et le lanceur Canon 120.
            Il n'y a plus de PH par défaut, donc par conséquent avec le fichier tel quel on ne peut plus tirer que du OFL 120 par des XL...
            Vous êtes donc priés de remplir les données vous concernant. Cela se fait en deux temps :
            * 1. Définir les PH nominaux pour les types de volumes 
                 => ajouter un nouveau tag Munition en dessous de chaque tag <Munition type="XL_CN120_OFL">
                 ( actuellement 3 occurences de définition de fonction de PH )
            * 2. Définir les atténuations des ph nominaux suivant les postures ( source / cible ) :
                 => ajouter un nouveau tag Lanceur en dessous de chaque tag <Lanceur type="Canon 120"> 
                ( actuellement 36 occurences de définition de multiplicateur )
            En outre : Pour s'y retrouver plus facilement, il faut que vous respectiez la nomenclature suivante pour les munitions
            lorsque vous allez les rentrer dans le fichier de PH ( donc à mettre à jour dans Types.xml et Composantes.xml ) :
                Porteur_Lanceur_NomDeMunition : exemple: XL_CN120_OFL
            CETTE NOMENCLATURE EST TRES IMPORTANTE : il se peut que je fasse ultérieurement des recherches d'intégrité dessus...
            N'oubliez pas non plus de mettre à jour le fichier IDClasses.xml avec les nouveaux noms de munition.
    - JVT - Implémentation finale du PH en trois temps :
            * Choix du PH courrant suivant le volume de la cible et la munition utilisée
            * Dégradation du PH suivant le lanceur utilisé, la posture du tireur et la posture de la cible
            * Tirage sur le PH final trouvé
            Pour les plus curieux, vous pourrez trouver les graphes de test pour un couple ( munition / lanceur ) donné
            dans $/Specs/Doc/PHY/Tests PH/
    - JVT - Changement complet du fichier Attrition.xml. On utilise désormais les types de données validées avec le CROSAT.
            ATTENTION : Contrairement à la version précédente, les pourcentages sont maintenant des flottants entre 0 et 1.
            Pour exemple, je n'ai renseigné que la munition XL_CN120_OFL.
            Vous êtes donc priés de remplir les données vous convernant. :
            Définir le bloc :
                <Munition type="XL_CN120_OFL">
                    <Destruction>???</Destruction>
                    <ReparableAvecEvacuation>???</ReparableAvecEvacuation>
                    <ReparableSansEvacuation>???</ReparableSansEvacuation>
                </Munition>
            pour chacune de vos munitions dans chaque tag de protection ( il y en a 6 )
            Rq : la somme de ces 3 tags n'est pas obligatoirement 1. ( le pourcentage restant correspond aux indemnes )
            Maintenant, les attritions prennent en compte uniquement la catégorie de protection du pion
            _ Dans le cas des munitions utilisées pour les tirs indirect :
                Il faut les déclarer en tant que tel dans la liste CaracteristiquesMunitions::Indirectes avec le groupe
                de tags suivant :
                <Munition type="Exemple">
                    <Categorie>explosif</Categorie>
                    <InterventionType>48</InterventionType>
                    <VitesseMoyenne>150</VitesseMoyenne>
                    <RayonNeutralisation>2000</RayonNeutralisation>
                    <RayonAttrition>1000</RayonAttrition>
                </Munition>
            Rq : Il n'y a plus de temps de neutralisation par munition, car il sera défini par les Eva ( cf ci-dessous ).
            _ Dans le cas des munitions directes, il faut les déclarer dans la liste CaracteristiquesMunitions::Directes
    - JVT - Suppression des 5 capacités des composantes : les composantes sont maintenant flaggées de la manière suivante :
            * (Ind) Indemne                   -> Etat par défaut
            * (Nev) Réparable sans évacuation -> Notion de neutralisation
            * (Eva) Réparable avec évacuation -> Composante devant entrer dans la chaîne LOG ( pour l'instant sans effet )
            * (Det) Détruit                   -> Détruit réellement dans la SIM avec perte des dotations pour le pion
    - JVT - Suppression du dernier paramètre ( qui était optionnel ) de DEC_StartTir. La signature est donc maintenant :
                V DEC_StartTir( A, A, I, I )
    - JVT - Le traitement des attritions se fait maitenant suivant les nouvelles données. Les attritions changent le flag des
            composantes ( décrit ci-dessus ) en tirant le nouveau flag dans la partition [ Des, Eva, Nev, Ind ] 
            _ Cas particulier pour la gestion des humains :
            * Dans le cas ou une composante est une composante débarquée, on tire l'attrition correspondant pour tous les
              humains ( [Des, Eva, ( Nev + Ind )] ) :
                _ Des -> Humain tués
                _ Eva -> Humain blessé ( avec catégorisation suivant les pourcentages définis dans LOG.xml )
                _ Nev -> Humain indemne
                _ Ind -> Humain indemne
            * Dans le cas ou une composante n'est pas une composante débarqué, on tire l'attrition pour le matériel, puis
              pour les humains ont procède de la manière suivante :
                _ Matériel Des -> Humains tués
                _ Matériel Eva -> N% humains blessés ( catégorisation LOG à postériori )
                _ Matériel Nev -> M% humains blessés ( catégorisation LOG a postériori )
                _ Matériel Ind -> Humains Ind
              N et M sont définis par les tags <MaterielReparableAvecEvacuation> et <MaterielReparableSansEvacuation>
              dans LOG.xml
            _ Cas particulier pour la gestion des tirs indirects :
            Pour déterminer le nouveau flag d'une composante, on fait un tirage sur :
                _ [Des, Eva, ( Nev + Ind )] dans la zone d'attrition       ( i.e. Ind = Nev )
                _ [(Des + Eva + Nev), Ind]  dans la zone de neutralisation ( i.e. Des = Nev, Eva = Nev )
            Le temps de neutralisation sera ensuite déduit de l'état Nev des composantes.
    - JVT - La sélection des couples de composantes dans l'action de tir direct se fait maitenant suivant la priorité définie par
            * Protection    ( valeur prépondérante )
            * Taille        ( utilisé dans le cas d'égalité sur la Protection )
            * puis Distance ( utilisée dans le cas d'égalité sur les deux premiers paramètres )
            Rq : Dans le cas ou un pion avec toutes les composantes du même type contre un autre pion avec toutes les composantes
            d'un même ( éventuellement autre ) type, la priorité défini le même ordre qu'avec la version précédement implémentée.
            Le choix est plus réaliste dans le cas de pion(s) mixtes.
    - JVT - Traitement des temps de neutralisation.
            Dans LOG.xml, les temps de neutralisation des composantes sont définis par catégories de protection de la manière suivante :
                <CategorieDeProtection>
                    <TempsMoyen>X<TempsMoyen>
                    <Dispertion>Y<Dispertion>
                </CategorieDeProtection>
            X, Y sont en minutes. Cela signifie que si une composante de ce type de protection est flagée Nev, alors le temps T de
            neutralisation affligé à la composante est compris entre X-Y et X+Y.
            Au bout de T minutes, l'état Nev de la composante repasse en Ind.
    - JVT - Il n'y a plus de "Neutralisation" d'un pion, mais uniquement des neutralisations de composantes. Ainsi, le pion pourra
            toujours updater ses différents moteurs, mais ilsfonctionneront de manière dégradée. Les dégradations actuelles sont
            les suivantes :
                _ MOVE : Si une des composantes est à Nev, pas de déplacement possible
                _ FIRE : Les composantes à Nev ne peuvent pas tirer
    - JVT - Ajout d'une nouvelle valeur de retour pour l'action Move :
                eUnitNeutralized(C++) ( eDeplNeutralise(DIA) )
            Lorsque une des composantes est neutralisée, l'état de l'action passe à eUnitNeutralized. Cet état équivaut à une
            suspension de l'action et sera levé dès qu'il ne reste plus aucune composante neutralisée.
    - JVT - Les fonctions DEC suivantes sont maintenant obsolètes. Les supprimer rapidement de vos scripts :
            * DEC_Posture
            * DEC_TempsMiseEnPosture
            * DEC_StopPosture
            * DEC_DeplacementDiscret
            * DEC_Capacite
            * DEC_EstNeutralise
            * DEC_PionEstNeutralise
            * DEC_Formation
    - JVT - Implémentation de l'action magique de recomplétement des ressources ( PHY_UnitCanHaveDotation_ABC::Reinitialize )
    - JVT - Bug fix : Il n'est plus possible de définir plus d'officier/sous-officier qu'il n'y a d'humains dans un pion.
    - JVT - Implémentation de l'action magique de recomplétement des personnels ( PHY_UnitCanHaveComposante_ABC::ReinitializeHumans )
    - JVT - Implémentation de l'action magique de recomplétement des matériels ( PHY_UnitCanHaveComposante::Reinitialize )
    - JVT - Implémentation de l'action magique de recomplétement total d'un pion ( ressources + personnels + matériels )
    - JVT - Association d'une categorie a toutes les munitions dans attritions.xml.
            Les catégories sont les suivantes :
            * Munitions de tir indirect ( inchangé, a part les majuscules ) : [ E_TypeObus dans Types_Action.hal ]
                _ Explosif
                _ Grenade
                _ ACED
                _ Fumigene
                _ Eclairant
            * Munitions de tir direct :                                       [ E_TypeMunition dans Types_Action.hal ]
                _ Obus          
                _ Missile       
                _ Mitraille     
                _ ArmeIndividuelle
    - JVT - Création de deux nouvelles requêtes de dotation dans les scripts (#251):
            R A::DEC_MunitionTirIndirect( I /*E_TypeObus*/ );     // Pourcentage de "remplissage" de la munition indirecte
            R A::DEC_MunitionTirDirect  ( I /*E_TypeMunition*/ ); // Pourcentage de "remplissage" de la munition directe
    - JVT - Ajout de fonctions templates pour faciliter les recherches dans des containers contenant des paires dans MIL_pch.h 
    - JVT - Possibilite d'avoir des humains blessés au chargement de l'odb : exemple (dans odb.xml) :
                <Personnels>
                    <Personnel categorie="U1" nbOfficiers="1" nbSousOfficiers="1" nbMdr=="2"></Personnel>
                    <Personnel categorie="U3" nbrOfficier="0" nbrSousOfficier="0" nbrMilitaireDuRang="3"></Personnel>
                </Personnels>
            La catégorie est UE, U1, U2, U3 ou mort.
    - JVT - Ajout de deux classes dans la hierarchie de la PHY_Unit_ABC : [ l'UML sur la base à été mis à jour ]
            * PHY_UnitCanAct_ABC      ( gestion des actions )
            * PHY_UnitCanPerceive_ABC ( gestion des perceptions + remplacement de PHY_UnitCanView_ABC )
    - JVT - Ajout d'un nouveau type de perception ( cette perception est dynamique ) qui permet de surveiller des localisations
                PHY_PerceptionZone
    - JVT - Passage de tous les Constructeurs / Destructeurs , des Initialize / Terminate ainsi que de la gestion des sauvegardes
            ( SaveCheckPoint, LoadCheckPoint ) de la hiérarchie en amont de PHY_Unit_ABC en protegé
    - JVT - Création de deux nouvelles requêtes de perceptions dans les scripts :
                V A::DEC_StartSurveillerLocalisation( U /*T_Localisation*/ );
                V A::DEC_StopSurveillerLocalisation ( U /*T_Localisation*/ );
    - JVT - Transformation de l'action de reconnaissance hélicoptère en perception
    - JVT - Changement des signatures de la perception de reconnaissance hélicoptère
            * V DEC_StartReconnaissance( A, U ) ==> V A::DEC_StartReconnaissance( U )
            * V DEC_StopReconnaissance ( A )    ==> V A::DEC_StopReconnaissance()
    - JVT - Nouvelle fonction DEC remplacant les demandes sur les capacité
                R A::DEC_EtatNeutralisation( );
            Renvoi le pourcentage de neutralisation d'un pion parmis les composantes dans le pion

Version 0.28.4 [04/09/2003]
    - NLD - Bug fix : le paramètre 'obstacle' de la mission 'GEN_OuvrirTrouee' était mal passé à DIA lors de la réception de la mission
    - AGN - Bug fix : correction message ASN pour ordre de conduite Mouvement a zone implantation.
    - AGN - Bug fix : mauvais recyclage dans les actions physiques (un booléen n'était pas remis à sa valeur initiale)
    - NLD - Modif de la gestion de ID de classes pour les objets (Cf. Thales) => Reprenez MOS/IDClasses.xml

Version 0.28.3 [03/09/2003]
    - NLD - MOS Light - Bug fix : les missions GEN CreerZoneMineeLineaire/ParDispersion prennent une localisation en paramètre
    - AGN - Bug fix : Lorsqu'une action physique est stoppée depuis l'IA, l'arrêt n'est plus propagée en retour à l'IA.
    - AGN - Ajouts des fonctions S_Parametre_XXX_EstInvalide (trois versions avec des représentations) qui retourne vrai
            si la représentation indiquée est prête à être détruite.
            => LES MODELISATEURS DOIVENT VOIR AVEC SDE POUR NORMALISER L'UTILISATION DE CES FONCTIONS
    - AGN - Bug fix : pour la fonction DEC_IntersectionItineraires, il y avait un pb de cast quand aucune intersection
            n'était trouvée.
    - AGN - Les agents ont dorénavant le véritable type DirectIA indiqué dans le modèle. De ce fait, vous
            pouvez ajouter des membres dans vos types DirectIA si besoin est, comme le fait BMS.
    - NLD - Modifications des fonctions DEC de gestion des objets 
                DEC_StartCreerObjet
                DEC_StartDetruireObjet
                DEC_StartValoriserObjet
                DEC_StartPreparerObjet
                DEC_StartActiverObjet
                DEC_StartCreerContournement
              => le booléen bTermine est remplacé par l'enum E_EtatActionObjet
    - NLD - Objets : bugs possibles fixés quand le pourcentage de construction vaut 0 (peut arriver si l'unité n'a pas assez de dotations)
                - L'objet est détecté alors qu'il ne devra pas l'être                                => Objet detecte que par les unités du camp créateur
                - Les unités entrent en collision avec l'objet (=> modification vitesse + attrition) => Fixé
                - Le Destruct() sur l'objet ne fait rien                                             => Fixé
    - NLD - Bug fix : un agent pouvait entrer en collision avec un objet préparé
    - NLD - Bug fix : la perception d'un agent est vidée quand il meurt (=> Cleanage gestion de la mort)
    - NLD/AGN - Bug fix : erreur de script dans les appels à DEC_CreerInfoGeo_Objet et DEC_DetruireInfoGeo_Objet, pouvant engendrer des crashs quand des path finds 
                    avec évitement d'objets étaient demandés
    - NLD/AGN - Bug fix : Rep_Points se retrouvant dans des listes d'agents 
                    Probablement du au gestionnaire de mémoire (pool) de DIA lors de l'allocation des DIA_Representation
                        => les points 'DEC' ne sont plus insérés dans un path dans le thread du pathfind, mais dans le thread principal, 
                           quand le thread du pathfind a terminé son calcul 
            
Version 0.28.2 [02/09/2003]
    - NLD - Bug fix : quand le RC 'mission terminée' est envoyée, la mission n'est détruite qu'après l'évaluation DIA
            (MIL_OrderManager_ABC::Update()), et non plus dès que le RC est envoyé

Version 0.28.1 [01/09/2003]
    - AML - ( SCIPIO n'a plus besoin de l'homme? (greatings fly to FBD) )
    - NLD - Bug fix : les objets pouvaient contenir plus de mines que la valeur max (=> asserts)
    - NLD - Bug fix : décalage dans l'envoi des RCs vers MOS
    - AGN - Bug fix : résultat de ConvertirPointEnLocalisation n'était pas mis.
    - AGN - Mise à jour des librairies DirectIA.
    - AGN - Fusion de script checker et de script compiler en un outil. Cet outil permet aussi l'édition
            des arbres de comportements sous forme graphique (format jpg). Le script compiler restera
            disponible en commande en ligne.
    - AGN - Bug fix : mission Détruire par embuscade. Le message ASN n'avait pas les bonnes valeurs de la SIM pour
            envoyer le type de l'objet à construire.
    - AGN - Implémentation missions Automate Génie Rétablir Itinéraire, Réaliser un système d'obstacle...
    - AGN - MOS Light - Bug fix. Il manquait des paramètres pour la mission automate ASS Assurer Mis En Oeuvre.
    - AGN - Accès aux fonctions de recherche de zone d'implantation pour l'automate 3D.
    - AGN - MOS Light - Bug fix. La fenêtre de trace ne disparait plus quand on se connecte plusieurs fois à
            des SIM avec un même MOS.
    - AGN - Correction d'un bug dans DirectIA sur l'opérateur '--' (mauvais archivage).
    - AGN - Lorsqu'une unité est détruite toutes ses tâches sont détruites. Cela devrait corriger le pb de
            pathfinder. Il faudrait plutôt arrêter tout le moteur DirectIA et détruire la partie dynamique en
            cours.
    - NLD - Bug fix : MRT_ComputePointBeforeLima, le fuseau utilisé n'était pas récupéré de la MRT ...
    - NLD - Bug fix : L'action 'valoriser' renvoit 'true' à la premiere itération, si l'objet ne peut pas être valorisé
    - NLD - Bug fix : La destruction des objets minés faisait péter une assert
    - NLD - Bug fix : Quand une unité est neutralisée l'update de la perception est quand même appelée (seule l'update des actions n'est pas appellée)
            => temporaire en attendant check de JVT (gestion de la neutralisation différente ...)
    - NLD - Nouvelle fonction DEC : B DEC_LocalisationsEgales( U /*T_Localisation*/, U /*T_Localisation*/ );
    - AGN - Fonctions de création de zone d'implantation : prend un paramètre en plus --> liste de points( copiée)
    - FBD - MOS_LIGHT, ajout d'un historique des ordres. 
            -----> ( en bas dans tab Historique ) ( XOREAX n'a ka bien se tenir.... )
 
Version 0.28 [22/08/2003]
    - AGN - Modifications rapport de force local pion:
                * Deux cercles différents pour amis et ennemis
                * La valeur des amis n'est plus divisée par deux
                * Bug : l'unité qui fait le calcul n'est plus comptée deux fois
                * Lorsqu'une unité amie sort du cercle du rapport de force, elle est immédiatement enlevée du rapport
                    (pas de dégradation suivant le temps).
    - AGN - Rapport de force automate. Même chose
    - FBD - ( SCIPIO n'a plus besoin de l'homme... )
            Ajout de la télécommande de télécomande dans MOS_Light.
            Checker Replay ou Record dans fenetre de connection de MOS_Light
    - FBD - Debuggage de GetPassability a 0 dans las SIM 
           ( TER triangle.IsInside() n'avait pas de welding )
    - AGN - Modification actions physiques : quand une action physique est stoppée depuis les scripts IA, l'action
            physique n'indique plus en retour à l'IA que l'action est terminée.
    - NLD - Suppression d'un bout de code suspect dans MT_Line::Intersect2D, engendrant des pbs de précision
    - NLD - Fonctions DEC : 
                    U/*T_ListePoints*/      A::DEC_MRT_PositionsParRapportALocalisation ( S /*T_PionCont*/, U /*localisation*/, U /*dirdanger*/, R /*Dist max*/, I /*E_LocalisationFunctionsReturnCode*/ ); 
                    U/*T_Point*/            A::DEC_MRT_DeterminerPositionParRapportALima( A /*T_Pion*/, R /*dist avant lima*/, I /*lima type*/, B /*retour*/ );
                    U/*T_Point*/            A::DEC_CDT_CalculePointArrivee              ( A /*T_Pion*/ );
                    U/*T_ListLocalisation*/ A::DEC_DecoupeLocalisation                  ( U /*T_Localisation*/, R /*nbr part*/, I /*E_LocalisationFunctionsReturnCode*/ );
                Dans tous les cas, vous êtes responsables de la destruction de ce qui est renvoyé
                    V DEC_DetruireListeLocalisations()
    - NLD - Nouvelle classe MT_Droite (MT_Line devrait s'appelé MT_Segment ...)
    - NLD - Mission automate ASS AssurerMiseEnOeuvre

Version 0.27.1 [20/08/2003]
    - AGN - Modification dans DirectIA pour la gestion des ordres. Quand un ordre est annulé, l'annulation est propagée
            dans tout le graph décisionnel (en profondeur d'abord); si une instance de comportement n'a plus d'activation
            suite à cette annulation, la partie 'on spontaneous end' est immédiatement exécutée.
    - NLD - Bug fix - MOS_Light - Tous les paramètres de mission de type 'var list' n'étaient pas affichés
    - NLD - Functions DEC
                V DEC_Copie_Localisation           ( U /* T_Localisation src */, U /* T_Localisation dest */); 
                V DEC_Copie_PointDansLocalisation  ( U /* T_Point src */, U /* T_Localisation dest */);     
                U DEC_Convertir_PointEnLocalisation( U /* T_Point point*/ );
                V DEC_DetruireLocalisation         ( U /* T_Localisation*/ );

            NB : N'UTILISEZ DEC_Convertir_PointEnLocalisation QUE QUAND C'EST NECESSAIRE ET N'OUBLIEZ PAS D'APPELER DEC_DetruireLocalisation QUAND LA LOCALISATION N'EST PLUS UTILISEE
            (Par exemple, la localisation créée peut être effacée immédiatement après l'appel à DEC_StartCreerObjet, qui fait une copie en interne)
            DANS LE MESURE DU POSSIBLE, UTILISEZ DEC_Copie_PointDansLocalisation, QUI NE FAIT PAS D'ALLOCATION !!!


Version 0.27 [19/08/2003]
    - NLD - Bug fix : Le launcher n'utilisait pas le bon paramètre de ligne de commande pour lancer la sim avec reprise sur checkpoint
    - AGN - Ajout fonction script DEC_EstEmbraye pour savoir si un automate est embrayé ou non.
    - AGN - Remplacement dans la mission ASS_AcquerirObjectifs de la liste de points par une liste de localisations.
    - JVT - Blindage de l'enregistrement des patchs météo :
            * Les points peuvent être donnés dans n'importe quel ordre
            * Les points sont clippés correctement sur le monde ( #300 )
    - AGN - Rapport de force pion : la fonction prend en paramètre la liste des unités amies et non plus la liste des soutiens
            et la liste des appuis.
    - NLD - Nouvelle mission automate générique : SeDeplacer
    - NLD - La mission génie 'OuvrirTrouee' prend une connaissance objet à la place d'une position
    - NLD - Moulinette (GEN): 
            * Génération du fichier extent.xml pour Thales
            * Amélioration de la gestion des chemins in/out paramètrables
    - NLD - HACK number 3 dans TransfertHumans (embarquement/débarquement foireux pour le moment)
    - NLD - Gestion du cancel du path find dans TER
    - NLD - Path find multi threadé : ajout de mutexes : les fonctions appelées par le path find (GetCost / HandleAddedLinks)
                ne peuvent plus être exécutées en même temps que les updates des DEC_Agent (UpdateThink / UpdatePerception / DispatchWeakEvents)
    - AGN - Bug fix : ordres de conduite mal enregistrés (prendre contact / preciser contact / emettre)

Version 0.26 [14/08/2003]
    - NLD - Bug fix : Le paramètre commun à toutes les missions automates "direction de l'ennemi" n'était pas envoyé à DIA
    - NLD - Nouvelle implémentation du pathfind multithreadé
                => Création des threads au début de l'appli, et non plus à chaque demande de calcul
                => suppression du thread 'manager'
                => pour l'instant, il y a toujours un seul thread de calcul (reste encore des pbs dans TER pour le multi path find)
   
Version 0.25.1 [13/08/2003]
    - NLD - Bug fix : envoi des connaissances amies à MOS 
    - NLD - Mission INF contre attaquer

Version 0.25 [13/08/2003]
    - NLD - Renommage "TempeteDeNeigeOuPluie" en "TempeteDeSable" dans les fichiers de configuration (senseurs + meteo) (Cf. Thales)
    - NLD - Ajout mission pion générique 'Suivre'
    - NLD - Ajout de deux nouveaux types de limas : LCAR (Ligne de coup d'arrêt) et LR (Ligne de recueil)
    - NLD - ASN pour 3 nouvelles actions magiques (recompletement partiel en personnel/equipement/ressources) (pas encore prise en compte dans la SIM)
    - NLD - Missions automates:
                * Modification des paramètres communs à toutes les missions : ajout de la direction de l'ennemi et de la formation (un/deux échelons)
                * Les limites sont désormais obligatoires pour les missions automates
                * MOS/ASN/SIM/DIA des 50 missions automates de la VABF
                * Ajout des types DIA T_ListeLocalisations, reste à faire les fonctions DIA pour les manipuler ...
            NB : LES STRUCTURES DES MISSIONS AUTOMATES SONT DANS Types_Ordre.hal - PENSER A LES DEPLACER DANS LES FICHIERS DE VOS ARMES RESPECTIVES !!
    - NLD - Modifications des missions de génie :
                * Les paramètres urgence et preliminaire sont des enums
                * Ajout d'un ID d'obstacle 'MOS planifié', pour Thales
                => La methode StartCreateObject a changé de prototype, elle prend cet ID avant la localisation de l'obstacle (Cf. Mission de test dans TestPHY)
    - NLD - Gros nettoyage de MOS (code + interface des missions)
    - NLD - Implémentations des nouveaux RCs (sauf 3D)
    - NLD - Nouvelles fonctions DEC pour manipuler les listes de user types (std::vector< void* >)
                DEC_GetUserTypeList_Size( U /*list*/ );
                DEC_GetUserTypeList_At  ( U /*list*/, R /*elt idx*/ );
            Fonctionne pour T_ListeLocalisations, ET PAS POUR T_ListePoints  !!!
    - NLD - La connaissance amie est ré-envoyée à MOS, à l'exception des connaissance amies d'un même GTIA

Version 0.24 [08/08/2003]
    - AGN - Ajout ordres de conduite Prendre Contact et Preciser Contact
    - NLD - Nettoyage dans les objets (creation) 
    - NLD - Gestion des actions magiques objets : Creation / Destruction / Update (SIM + MOS)
    - NLD - Messages ASN pour la gestion de la météo
    - AGN - Les relations entre camps (amis, ennemi, neutre) sont maintenant définies dans le fichier de thalès
            teams.xml
    - AGN - Le reste des informations concernant les relations entre camps sont dans le fichier connaissances.xml
            (défini sous la balise <Connaissance> dans scipio.xml). Le fichier relations.xml ne sert plus.
    - AGN - Correction d'un bug sur le calcul d'une position sur une bordure de village (boucle infinie quand la
            destination n'était pas un village).
    - AGN - Extension du calcul de position sur bordure de village aux zones forestières.
    - AGN - Modification de la mission et des ordres de conduite appliquer les feux pour envoyer le bon type de
            munition.
    - AGN - MOS Light : ajout de la gestion de la météo
    - AGN - Modifications ASS : 
                * suppression des oc avec paramètres MettreTirEnPlace et MouvementZoneImplatation
                * correction des missions en conséquence.
                * ajout oc Emettre.
    - NLD - Gestion des checkpoints 
                * Dans MIL_CheckPointManager
                * Gestion du temps en minutes réelles
                * Messages ASN
                * Prise en compte dans MOS_Light
    - JVT - Gestion de l'éphéméride ( pour les curieux, aller jouer avec $/Specs/Doc/PHY/Fonctionnement Eclairement.xls )
    - JVT - Gestion de la météo ( globale et locale ) pour l'intervisibilité
    - JVT - Création d'un nouveau fichier d'init pour la météo ( Meteo.xml référencée dans scipio.xml )
    - JVT - Changement des donnée de précipitations. Elles sont maintenant définie par :
                * PasDePrecipitation
                * TempeteDeNeigeOuPluie
                * Brouillard
                * Crachin
                * Pluie
                * Neige
            Penser à mettre à jour ces données pour vos senseurs
    - JVT - Changement des donnée d'éclairement. Elles sont maitenenant définie par :
                * JourSansNuage
                * JourPeuNuageux
                * JourMoyennementNuageux
                * JourAssezNuageux
                * JourTresNuageux
                * NuitPleineLune
                * NuitTroisQuartDeLune
                * NuitDemiLune
                * NuitQuartDeLune
                * NuitNouvelleLune
            Penser à mettre à jour ces données pour vos senseurs
    - JVT - Changement du format de renseignement des données des senseurs : Tous les tags de renseignement
            d'éclairement et de précipitation sont a renseigner, il n'y a plus de valeurs par défaut.
    - JVT - Idem remarque précédente pour les environnements des senseurs.
    - JVT - Prise en compte de la météo dans l'affichage de l'intervisibilité MOS_light
            ATTENTION : * Le rafraichissement ne se fait que lorsque les pions bougent
                        * MOS_Light ne prend en compte que les patchs qu'il a mui même créés ( si vous fermer MOS_Light et que
                          vous vous reconnecter à une "vieille" SIM, tout l'état météo est réinitialisé et par conséquent
                          ne correspondra pas à l'état réel dans la SIM. Ceci est dû au protocole SIM->MOS inversé par
                          rapport aux autres messages (cf Thales) )
    - AGN - MOS Light : gestion liste de localisation pour les missions
    - NLD - Le calcul de position et de recherche d'itineraire déclenche une assert si le résultat est 'impossible'

Version 0.23 [01/08/2003]
    - JVT - Mise en place de la sauvegarde des pions physiques
    - JVT - Mise en place de la sauvegarde des objets génie
    - JVT - Sauvegarde à intervalle de temps donné ( spécifié dans scipio.xml )
    - JVT - Arborescence contenant les checkpoints ( sauvegardes ) automatiques sous la forme suivante :
                ./CheckPoints/IDEX__YYYY_MM_DD__HHhMMmSEC/Checkpoint.xml
    - JVT - Nouveau paramètre de ligne de commande pour reprendre à un checkpoint donné
                -checkpoint IDEX__YYYY_MM_DD__HHhMMmSEC
    - JVT - Correction d'un bug dans la gestion des dotations lors d'un renforcement
    - JVT - Correction d'un bug dans la gestion des composantes lors d'une fin de renforcement
    - JVT - Correction d'un crash lors de l'affichage des log de tir indirect ( #293 )
    - JVT - Correction du bug récurrent sur les dotations ( assert de cur <= max ) ( destruction de composantes )
    - JVT - Correction d'un bug dans le transfert d'humain ( embarquement/débarquement )
    - JVT - Ajout dans MIL_pch.h d'une fonction manquante à la STL de visual 6 :
            * mem_fun version const ( ainsi que la classe utilisée : const_mem_fun_t )
    - AGN - Déplacement de la partie "Belligerants" de config.xml dans un fichier relations.xml. Ce fichier est
            définit dans scipio.xml sous la balise "Relation".
    - AGN - Mise en commun des noms de terrains pour les mouvements et pour les distances avant point.
    - NLD - Les objets dynamiques préparés sont maintenant enregistrés dans le monde dès le début
            , mais seuls les agents du camp créateur peuvent les détecter
    - JVT - Perception pour les pions 3D réactivée (!Oups)
    - NLD - Sauvegarde de la perception objet
    - NLD - Les points des localisations sont transformés en interne en un rectangle de 100 m de côté
    - NLD - Débuggage localisation 'poly-ligne'
    - NLD - Nettoyage TER_DynaObject_ABC (TER_DynaObject_ABC n'hérite plus de TER_Object_ABC)
    - NLD - Bug fix dans la destruction des représentations d'objet (MIL_DynaObject_ABC::UnregisterRepresentation n'était plus appelé !)
    - NLD - Bug fix dans MOS_Light : les connaissances objets n'étaient pas détruites lors de la déconnexion de la SIM


Version 0.22 [30/07/2003]
    - AGN - Gestion des compartiments terrains: prise en compte de nouveaux types de terrain:
            "grande foret "echangeur "pont "grand pont "plantation "marais "terrain accidente"
    - AML - Launcher: Ajout de la gestion des odb/uuid
    - AML - Lau_Mos_Part: Ajout de la gestion des odb/uuid
    - AGN - Gestion de la connaissance des objets au niveau du camp
    - NLD - Le type d'objet 'Destruction route pont' est splité en 2 objets : 'Destruction route' et 'Destruction pont'
    - NLD - Ajout de l'id de l'automate dans le message AutomateMRT envoyé à MOS
    - NLD - Toutes les localisations venant de MOS (ou de l'ODB) sont clippées dans l'extent du monde
    - NLD - IMPORTANT : LA FONCTION EVT_DEC_DetectionObjet NE DOIT PLUS ETRE APPELEE DANS VOS SCRIPTS
    - NLD - Les objets sont détectés instantanément par le camp créateur
    - NLD - Nouvelle mission de test : Test_DestroyObject
    - NLD - Bug fix : les moteurs sont maintenant évalués pendant la 1ere frame
    - NLD - Les missions génie ainsi que TestCreateBypass / TestDestroyObject prennent des RepObjet en paramètre    
    - NLD/AGN - Ajout champ 'est-percu' dans message ASN de connaissance objet
    - NLD - Renommage des mission tools dans MOS_Light : classes MOS_MTH_XXX histoire de comprendre qqchose

Version 0.21 [29/07/2003]
    - AML - Launcher: Ajout de la gestion des checkpoints
    - AML - Lau_Mos_Part: Ajout de la gestion des checkpoints
    - AML - ASN: modification du message ListCheckpoint
    - AML - Launcher Launcher.xml: ajout de la variable <ScipioBaseCheckpoints>
    - NLD - Bug fix : division par 0 dans DEC_Agent_ABC::ComputeLocalFightScore
    - JVT - Bug fix : division par 0 dabs PHY_SensorCapacity::ComputeExtinction
    - NLD - Le DIA GetName de MIL_AutomateMission_ABC renvoit désormais le nom du comportement de la mission, et ne déclenche plus une assert
    - JVT - Redéfinition de tous les agents spécifiques ( interfaces des actions ) de MIL vers PHY
          + Nettoyage de la PHY_Unit_ABC ( déplacement des méthodes spécifiques  ATTENTION aux quelques héritages viruels
            entre les PHY_UnitCan* )
          + Création de classe virtuelle par spécialisation de la PHY_Unit_ABC :
                * PHY_UnitCanCarryInjuriedHumans_ABC
                * PHY_UnitCanHaveComposante_ABC
                * PHY_UnitCanMove_ABC
                * PHY_UnitCanFire_ABC
                * PHY_UnitCanCreateAndDestroyObject_ABC
                * PHY_UnitCanLoadUnload_ABC
                * PHY_UnitCanChangePosture_ABC
                * PHY_UnitCanRegisterSortingSectors_ABC
                * PHY_UnitCanShareComoposante_ABC
                * PHY_UnitCanDelayDetection_ABC
                * PHY_UnitCanChangeDetectionDirection_ABC
                * PHY_UnitCanView_ABC
                * PHY_UnitCanHaveFormation_ABC
                * PHY_UnitCanHaveLocation_ABC
                * PHY_UnitCanHaveType_ABC
                * PHY_Target_ABC
                * PHY_Unit_Viewable_ABC
                * PHY_UnitCanHaveDotation_ABC
                * PHY_UnitCanHaveReinforcement_ABC
                * PHY_EnginesInterface_ABC
                    Les relations de ces classes dans PHY sont explicitées dans une fichier sur la base
                    source safe ( $/Specs/Doc/PHY/UML PHY.vsd )
    - JVT - Mise en commun des MT_Random à toutes les instances d'une classe ( mutable -> static )
    - AGN - Modifications connaissances : les unités amies (dans le futur du même bataillon) sont connues parfaitement dès la détection.
            Conséquence : une connaissance est amie (et on est en sûr) si elle est du même camp et si le niveau de vérification est différent d'inconnu.
    - AGN - Modifications connaissances : L'association unité réelle - perception - connaissance est constante au cours du temps.
            Conséquence : Quand on revoit une unité, elle est associée à la même connaissance que lors de sa précédente perception.
    - AGN - Modifications rapport de force:
            Les attitudes décrites dans config.xml ne sont plus linkées aux postures des pions mais à la mission du pion. Le lien
            attitude-mission est à définir dans la fonction S_TypeMission (à compléter). Pour les connaissances, cette attitude
            est mise à jour à partir de la reconnaissance.
    - AGN - Modifications rapport de force:
            Quand une connaissance n'a pas été mise à jour, son poids dans les rapports de force diminue pour
            atteindre 0 au bout de M minutes. M sont des nouveaux paramètres pour les fonctions de rapport de force:
                * DEC_RapportDeForceCorrige
                * DEC_RapportDeForceImmediat
            M = délai (depuis la dernière mise à jour) avant que la dégradation soit complète
    - AGN - Modifications rapport de force:
            Les rapports de force sur zone définissent désormais deux rayons Re (rayon d'entrée) et Rs (rayon de sortie). Une
            connaissance commence à être prise en compte dans le rap_for quand elle est à moins de Re du pion et sort du
            rap_for quand elle est à plus de Rs (Re > Rs).
    - AGN - Les rapports de force sont compris entre 0 et 5 (par minisation).
    - AGN - Ajout des GTIAs : pour définir un GTIA il faut le définir dans l'ODB sous la liste <GTIAs>.
            Le GTIA est défini avec une id. Pour chaque camp, un GTIA est automatiquement créé. Pour préciser le GTIA
            d'un automate, il faut indiquer son id dans le champ <GTIA>. Si il n'y a pas de champ, l'automate est affecté au
            GTIA de son camp.
    - AGN - Utilisation des bataillons:
                * Une unité perçoit parfaitement les pions du même bataillon.
                * Il y a partage des connaissances entre toutes les unités d'un bataillon. Si deux compagnies ont des connaissances
                différentes à partir d'une détection, elle garde chacune leur interprétation.
    - AGN - Destruction de connaissances:
                * Quand un pion voit une position où devrait se trouver un ennemi, que celui n'y est pas et qu'il n'est pas
                à proximité de ce point, il indique à sa compagnie la disparition de la connaissance.
                * La compagnie indique en retour cette disparition à toutes ses unités et à tout le bataillon.
                * Un pion détruit sa connaissance correspondant à ce pion si elle n'a pas été indiquée comme "importante".
                * Tant qu'une connaissance est importante, elle n'est pas détruite. Elle sera détruite dès qu'elle ne sera
                plus importante.
                * Une compagnie détruit sa connaissance (de cie) lorsque plus aucun de ses pions ne la considère comme
                importante.
                * La destruction d'une connaissance entraîne l'arrêt de tous les comportements faisant référence à cette
                connaissance.
    - AGN - Des exceptions sont levées si un type DirectIA ou un membre d'un type DirectIA que la simulation attend n'est pas
            détecté dans le script.
    - AGN - Corrections de bugs dans DirectIA concernant les appels en inline.
    - AGN - MOS Light : ajout dans la partie gauche de la liste des objets dynamiques de la simulation.
    - AGN - MOS Light : ajout dans la partie droite, pour les automates, des objets dont ils ont connaissance.
    - AGN - Ajout d'une dizaine de missions pour la logistique. Note : pour les missions qui ont un agent en paramètre optionnel,
            pour MOS Light il faut obligatoirement un agent.
    - AGN - Modifications des paramètres de la mission AssurerMiseEnOeuvreLRM et AssurerMisEnOeuvre
    - AGN - MOS Light : ajout de séparateurs dans les menus des missions.
    - AGN - Modifications des paramètres de l'ordre de conduite Mouvement à zone d'implantation
    - AGN - Modifications des types physiques: ajout d'une section QualificatifAtlas dans la section Nature. Ce champ sera utilisé
            pour la 3D pour déterminer la catégorie de cible de l'unité. Septs valeurs possibles: PC, Armored, ASS, Log, Mortar,
            Rocket Launcher et None.
    - NLD - Refonte de la gestion des objets
                * Gestion d'une forme géométrique quelconque
                * Les missions prennent en paramètre une localisation
                * Nouveau type DIA : T_Localisation
                * Suppression du type DIA T_Rect
                * Le type DIA RepObjet a été modifié : les champs position_ et rect_ disparaissent au profit d'un champ localisation_
                * Nouvelle fonction DEC : DEC_CalculePointProcheLocalisationDansFuseau
            => Modifs de toutes les missions génie + INF interdire (qui prenait une zone T_Rect en paramètre)
            => VOS SCRIPTS NE VONT PLUS COMPILER            
            => Modification de BEH_GestionObstacle dans Common/Pions/behavior.hal
    - NLD - MOS Light : correction d'un bug : désenregistrement des objets lors de la déconnexion (faisait crasher MOS à la reconnexion)
    - NLD - Possibilité de déclarer des objets directement dans l'ODB : Format type :
                    <Objets>
                        <Objet type="bouchon mines">
                            <ID>2</ID>
                            <Camp>Ami</Camp>
                            <Forme>
                                <Localisation type="point">
                                    <Points>
                                        <Point>31TDM5590790079</Point>
                                    </Points>
                                </Localisation>
                            </Forme>
                        </Objet>
                    </Objets>


Version 0.20 [21/07/2003]
    - JVT - Ajout d'une nouvelle posture de déplacement : ePostureDeplacementDiscret ( #246 )
    - JVT - Ajout d'un interrupteur dans les scripts pour utiliser les déplacements discret et le déplacement normaux :
                * V DEC_DeplacementDiscret( B )
    - JVT - Ajout d'une nouvelle valeur ( eTirEnCoursFinSerie ) dans l'enum E_EtatTir permettant de connaître la fin de série de la
            permière arme de la première composante ( dans la plupart des cas ( disons dans les cas non tordus ), il s'agit de l'arme principale.
            Attention, la valeur mise à fin de série ne veux pas dire que personne dans le pion n'est en train de tirer... )
    - JVT - Les informations sur les dotations en humain sont de nouveau envoyées à MOS_Light
    - JVT - Lorsque les fantassins débarqués rembarquent, il n'y a plus suppression d'une partie de leurs dotations
    - JVT - Ajout d'un message d'erreur lors de l'initialisation des consommations de carburant (si négatives)
    - NLD - Suppression de la fonction DEC inutilisée DEC_ExtraireSousItineraire (DEC_ExtractPath)
    - NLD - Bug fix : problème du déplacement qui s'arrêtait sans raison apparente 
            Le pb était du au fait qu'un point du path find avait un mauvais environnement (0)
                - Raison 1 : points ajoutés après le calcul de position incomplets => Modif / Blindage (DEC_PathPoint / DEC_Path / DEC_Task_ComputePositionn_XXX)
                - Raison 2 : bug dans données de terrain
    - NLD/AGN - Bugs fix : envoi de la connaissance à MOS
                - Le passage de l'état identifié/reconnu/detecté à invisible n'était pas envoyé à MOS
                - Les attributs 'prédits' (camp ...) n'étaient pas envoyés
            => Il ne devrait plus y avoir du tout de ghost '?' dans le MOS de Thales
    - NLD - Bug fix : l'action magique 'MoveTo' entrainant des incohérences dans la vision (position de l'unité updatée par l'action magique, mais position des composantes non updatée ...)
    - NLD - Suppression des classes PHY_UnitPion_ABC et PHY_UnitAutomate_ABC
    - NLD - Modification des messages ASN de gestion des actions magiques
    - FBD - Modifs path-find
                - Différents types de routes
                - Différents types de rivieres
                - Optims RAM
            => Modifs composante.xml
                <Terrain type="route">65</Terrain> remplacé par :   <Terrain type="autoroute">65</Terrain>
                                                                    <Terrain type="national">65</Terrain>
                                                                    <Terrain type="departemental">65</Terrain>
                                                                    <Terrain type="chemin">65</Terrain>

                <Terrain type="riviere">65</Terrain> remplacé par : <Terrain type="riviere">65</Terrain>
                                                                    <Terrain type="ruisseau">65</Terrain>
                                                                    <Terrain type="rivierebig">650</Terrain>

            => PENSER A METTRE A JOUR VOS COMPOSANTES (ET A VERIFIER LES VALEURS QUE NOUS AVONS MISES)
    - NLD - Gestion des ordres de conduite Pion -> Automate
                => Suppression de l'évenement EVT_DEC_PionEnAttenteOrdreConduite
                => Suppression du type Rep_DemandeOrdreConduite
                => Ajout des fonctions DEC (voir dans DEC/ForTests/Automates/behavior.hal pour exemple d'utilisation)
                            DEC_CDT_PionEnAttenteOC              ();
                            DEC_CDT_ObtenirListePionsEnAttenteOC ();
                            DEC_CDT_ObtenirListeOCAttendusParPion();
    - FBD - Bug fix : big memory leak dans TER (TER_AStarEngine)
    - NLD - Ajout du handler '_set_new_handler' appelé lorsqu'une allocation mémoire n'aboutit pas 
    - NLD - Révision du système de gestion des collisions 'dynamiques' avec les objets
                => gestion des objets 'overlappés' 
    - NLD - throw -> asserts dans DEC_Path
    - NLD - Recyclers désactivés pour les DEC_Position
    - NLD - Suppression de 2 asserts (HACK !!!) dans PHY_UnitSectionInfanterie::TransfertHumans - A CORRIGER PLUS TARD !!!!!
    - NLD - Fix division par 0 dans MT_Line::ClosestPointOnLine
    - NLD - Les divisions par 0 en float entrainent maintenant une exception (fonction _controlfp dans main de SIM)
    - NLD - La macro assert() est maintenant redirigée vers MT_Assert, qui fait un _asm int 3 (simplifie le débuggage et la remontée dans la stack ...)
    - NLD - La classe DEC_Position utilise maintenant un système de réferences comme DEC_Path, pour éviter les pbs de destruction liés à DIA (StopComputePosition appelé après DetruirePosition ...)
    - NLD - La SIM autorise maintenant MOS à modifier les lima/limites créées par la SIM (=> asserts jusqu'à maintenant)

Version 0.19 [07/07/2003]
    - JVT - Correction de la dégradation des dotations dans le cas de la perte d'une composante ( #239 )
    - JVT - Nouvelle version de PHY_RawVisionDataIterator dans SIM et MOS ( #231 )
    - JVT - Suppression de PHY_RawVisionDataIteratorWithOutPoint
    - JVT - Correction d'un bug dans le Terminate de PHY_ActionShareComposante qui empêchait la réutilisation de l'objet
    - JVT - Correction des Initialize et des Terminate de toutes les actions LOG pour qu'elle initialise et détruisent aussi la partie PHY_Action_ABC
    - JVT - Correction valeur de retour vers DIA de PHY_ActionShareComposante ( #236 )
    - JVT - Correction affichage des infos de debug de feu ( dotations incorrectes )
    - JVT - Définition de DEBUGDISPLAY_LOGINFOS dans MIL.h => Affichage de debug de la log
    - JVT - Changement du 3eme paramètre de DEC_StartDeplacement de bool à E_EtatDeplacement afin de renvoyer plus d'infos dur l'action
    - JVT - Nettoyage des .h des PHY_Action*
    - JVT - Fonction DEC ***TEMPORAIRE*** pour la section 3D permettant de "simuler" un itinéraire de reconnaissance Hélicoptère :
                * V DEC_TranslateItineraire( U /*Itinéraire*/, U /*Vecteur*/)
    - JVT - Action de reconnaissance ***TEMPORAIRE*** pour les pions section 3D ( Hélicoptères ):
                * V DEC_StartReconnaissance( A /*pion*/, U /*Vecteur*/ )
                * V DEC_StopReconnaissance( A /*pion*/ )
    - JVT - Action de reconnaissance ***TEMPORAIRE*** pour les pions section
                * V A::DEC_CompleterRecoSurBond( R /*délai en seconde*/, B /*valeur de retour*/ )
    - AGN - Bug fix : on ne pouvait pas arrêter la mission Reconnaitre Point de l'infanterie sans planter.
            Cause: Le Terminate de MIL_PionMission_ABC n'était pas appelé.
    - AGN - Modification dans les connaissances : si un pion est perçu moins de dix minutes (configurable) après sa disparition,
            on associe directement la connaissance précédemment associée à cet élément de perception.
    - AGN - Bug fix : si un point de calcul de position est en dehors de la carte, on modifie ce point pour qu'il soit valide.
    - AGN - Ajout fonction DEC_Remove( liste, idx dans liste ) pour liste de points.
    - AGN - Ajout mission ALAT Reconnaitre DANS Profondeur
    - AGN - Ajout fonction U DEC_CreerVecteurPerpendiculaire( U, U, R ) pour créer un vecteur orthogonal à un autre vecteur

Version 0.18 [20/06/2003]
    - JVT - Modification de la table d'attrition : Il n'y a plus que deux pourcentages pour les humains correspondant à :
                * pourcentage de blessés ( la catégorisation est fait à posteriori )
                * pourcentage de mort
    - JVT - Création d'un manager pour la log ( PHY_LogManager )
    - JVT - Ajout d'un fichier d'init Log.xml permettant de paramètrer :
                * les pourcentages de répartition des blessés
                * l'espérance de vie des blessés
                * le temps d'attente minimum dans un poste de secour
                * le temps de tri d'un blessé
                * le temps de soin des différent types de blessures
                * le nombre moyen de tri simultanés effectués dans une section de triage
                * le nombre maximum de blessés triés par jour dans une section donnée
                * le nombre maximum de blessés triés par heure en cas de pointe
    - JVT - Catégorisation des blessures des humains ( UE, U1, U2, U3 )
    - JVT - Prise en compte de l'espérance de vie des humains blessés et non soignés
    - JVT - Typage des composantes pour la logistique dans composantes.xml :
                <TypeLogistique type="releve" capaciteBlesse="3" tempsChargement="5" tempsDechargement="5"></TypeLogistique>
    - JVT - Suppression du secteur de triage dans l'ODB des Postes de secours
    - JVT - Fonctions DEC sur les pions de type LOG :
                * (Poste Secours) DEC_StartReleverBlesses, DEC_StopReleverBlesses
                    => Utilisation des VSB du pion pour relever les blessés de sa compagnie
                    => Mise en place des blessés relevé dans le pion
                * (Poste Secours) DEC_StartRamasserBlesses, DEC_StopRamasserBlesses
                    => Utilisation des VSR du pion pour ramasser les blessés relevés
                    => Mise en place des blessés ramassés dans le PC SAN dont dépend le PS
                * (Secteur Triage) DEC_StartTrierBlesses, DEC_StopTrierBlesses
                    => Transfert des blessés du PC SAN vers les Secteur de Triage appelant la fonctions
                    => Mise en place de statistiques
                * (Secteur Triage) DEC_StartSoignerBlesses, DEC_StopSoignerBlesses
                    => Soin des blesses triés
                    => Pour l'instant : disparition des humains soignes
                Ces fonctions ne prennent pas de paramètres ( sauf le pion appelant, comme toute les fonctions physiques ;) => V DEC_*( A ); )
                Remarque ces fonctions sont définies dans le moteur... Reste à les déclarer dans les scripts correspondants.
    - JVT - Nouvelles PHY_Action correspondant aux fonctions DEC correspondantes ( sur MIL_AgentCanCarryInjuriedHumans et MIL_AgentCanRegisterSortingSectors_ABC ):
                * PHY_ActionReleverBlesses
                * PHY_ActionRamasserBlesses
                * PHY_ActionSoignerBlesses
                * PHY_ActionTrierBlesses
    - JVT - Fonction DEC de partage de composante :
                * DEC_TransfertComposantes [ V DEC_TransfertComposantes( A, A, I, R, R, I ) ]
                Cette fonction prend en parametre :
                * Le pion appelant
                * Le pion recevant le prêt
                * Le type logiqtique de pion ( Releve ou Ramassage => Definition dans E_TypeLog )
                * Le nombre de composante
                * Le temps en heures du prêt
                * Une valeur de retour ( => De type E_ResultatTransfertComposante )
                Remarque cette fonction est définie dans le moteur... Reste à les déclarer dans les scripts correspondants.
    - JVT - Nouvelle PHY_Action de partage temporaire de composante ( != renforcement ) sur MIL_AgentCanShareComposante
                * PHY_ActionShareComposante
    - JVT - Correction du lien de commandement pour les PS : Ajout d'un tag <PCSAN> dans le fichier ODB.xml
    - JVT - Fonctions DEC d'ajout/suppression de compagnie abonnée au ramassage d'un PS
                * DEC_AbonnerAutomate    [ V DEC_AbonneAutomate( A /*automate*/ ) ]
                * DEC_DesabonnerAutomate [ V DEC_DesabonneAutomate( A ) ]
                Attention, la fonction d'abonnement a la même durée de vie que l'action de releve. I.e. si elle est
                appellée alors qu'il n'y a pas de fonction de relève, elle n'a aucun effet; en outre l'abonnement est automatiquement
                annulé avec un arrêt de la relève.
                Remarque ces fonctions sont définie dans le moteur... Reste à les déclarer dans les scripts correspondants.
    - AGN - Bug fix : MOS Light. Lorsqu'un MOS Light était déconnecté (par accident ou volontairement) de
            la simulation, on n'indiquait pas aux items des armes que les automates n'existaient plus.
    - AGN - Bug fix : amélioration de la gestion des connaissances.
    - AGN - Bug fix : oc "mvt a zone implantation" - La position avait pour valeur la direction.
    - NLD - Ajout conf 'Release Debug' pour le Script Compiler - les exes SSC générés s'appellent maintenant ScriptCompiler.exe
    - NLD - Suppression des configurations 'Release NoOpt' des projets
        
Version 0.17.8 [18/06/2003]
    - NLD - Bug fix : path find, l'environnement ne doit être 'NOTHING' que si il n'y a rien d'autre 
            (fonctionnalité à vérifier avec JVT/FBD)

Version 0.17.7 [17/06/2003]
    - NLD - Bug fix : bug sur l'environnement des nodes/nodes links du path find 
            => ajout d'asserts
            => l'environnement est au moins 'nothing' par défaut

Version 0.17.6 [17/06/2003]
    - NLD - Bug fix : Enregistrement des objets dans le monde alors que le pourcentage de construction est 0% (Register fait avant validation de la construction au niveau dotations)
    - NLD - Bug fix : assert() dans NET_Agent_ABC::NotifyComposanteDestroyed() corrigée
                => Correction d'un bug dans la cohérence des dotations en equipement (dispo/indispo/réparable)

Version 0.17.5 [16/06/2003]
    - NLD - Bug fix : Bug enregistrement des objets dans le TER_World lors de l'activation
    - NLD - Bug fix : Ordre des updates (entrainait le assert( pAgent_->GetUnit().GetNbrHumans() > 0 ) dans DEC_AgentSectionInfanterie::GetUnloadedPercentage( DIA_Call_ABC& call )
    - NLD - Bug fix : Il n'y a plus d'attrition quand une entité entre en collision avec un objet 'contourné'

Version 0.17.4 [16/06/2003]
    - NLD - Fix tmp : les connaissances amies ne sont plus envoyées à MOS
    - AGN - Bug Fix : les archives sont utilisées à nouveau.

Version 0.17.3 [16/06/2003]
    - AGN - Création de script_compiler : génère les archives binaires des scripts quand cela est nécessaire.
    - AGN - Le répertoire où se trouve les archives DirectIA est configurable dans scipio.xml.
    - AML - Ajout des messages MsgMosLau-RequestListSim et MsgLauMos-ListSim
    - AML - Impossibilité de lancer 2 sims avec le même ID 
    - AML - Stop d'une SIM pendant l'init => Kill

Version 0.17.2 [13/06/2003]
    - NLD - Bug Fix : les capacités n'étaient pas renvoyées à MOS quand le nombre de composante d'une unité bougeait
    - NLD - Bug Fix : les messages ASN n'autorisaient pas l'envoi de capacités ayant une valeur > 100
    - NLD - Bug Fix : MOS_Light n'affichait plus les routes (!)
    - JVT - Bug Fix : correction de l'assert dans les ConstructDotationDistribution() de PHY_Unit_ABC 
    - NLD - Bug Fix : assert lors de l'embarquement/débarquement (liée à l'envoi des dotations en equipements à MOS)

Version 0.17.1 [12/06/2003]
    - NLD - La réception de l'action magique de déplacement entraîne l'annulation de l'ordre courant.
    - NLD - Modif MOS pour qu'il puisse être lancé de n'importe quel répertoire contenant les data (ne s'appelant pas forcément "SIM Data")
    - NLD - La sim se lance par défaut en -nodisplay, pour avoir l'affichage, il faut la lancer avec l'option '-display'

Version 0.17 [12/06/2003]
    - JDY - Ajout de la gestion de la FLOT (Front Line Of Troops) dans le calcul d'un itineraire via
            la constante ePathInfoFlot. Ajout du membre bEnTete_ dans T_Pion pour prendre en compte ou non
            la flot d'une unite. (Pour plus de details cf mail JDY)
    - AGN - MOS Light : correction de bogue. Qd on clique sur une unité, cela active son item dans le menu de gauche
            et on peut à nouveau cliquer avec le bouton droit pour donner des ordres.
    - JDY - Ajout de l'affichage de la FLOT dans MOS ( attention l'affichage ne se fait que lorsqu'il y a utilisation
            de celle-ci cad lors d'un calcul de chemin)
    - AGN - Amélioration des asserts issus de DirectIA.
    - AML - Launcher: mis en place des délais d'attente finaux des ping/pong entre le Launcher et la SIM (dans ScipioLauncher.xml)
    - AML - Launcher: correction du passage de la ligne de commande
    - AML - Launcher: detection du code de retour de la sim, si le code est 0, c'est que la SIM a terminée correctement!
    - AML - Lau_Mos_Part: changement cosmetiques divers de la partie graphique
    - AML - Envoi d'un message Sim=>Launcher ExecSuccess OK
    - AML - Lau_Mos_Part: gestion du message ExecSuccess
    - NLD - Ajout des dotations initiales dans l'ODB : dotations et composantes (les dotations en personnel viendront plus tard)
            <Agent categorie="Patrouille EI 12.7" >
                <ID>524295</ID>
                <Automate>524289</Automate>
                <Position>31TBN7905372326</Position>

                <Dotations>
                    <Dotation type="carburant">613</Dotation>
                    <Dotation type="munition" categorie="Balle Classique 12.7">5</Dotation>
                </Dotations>

                <Composantes>
                    <Composante type="VAB GEN" disponible=3 indisponible=6 reparable=2></Composante>
                </Composantes>

                <Personnels>
                    <Personnel categorie="blesse" nbOfficiers="1" nbSousOfficiers="1" nbMdr="1"></Personnel>
                    <Personnel categorie="mort"   nbOfficiers="1" nbSousOfficiers="1" nbMdr="1"></Personnel>
                </Personnels>
            </Agent>

            De base, le pion est initialisé avec les valeurs théoriques (celles se trouvant dans types.xml), 
            puis ces valeurs sont surchargées avec celles spécifiées dans l'ODB.
    - NLD - Correction de bugs au niveau de l'envoi des dotations (equipements/ressources) à MOS, ainsi qu'au niveau de l'affichage
    - NLD - Envoi des dotations en equipements (composantes) à MOS (jusqu'à maintenant, elles n'étaient envoyées qu'à la connexion)

Version 0.16 [05/06/2003]
    - AGN - MOS Light : affichage du matériel, des ressources et des humains pour chaque pion.
    - AGN - Amélioration des asserts issus de DirectIA (certains ont plus d'information qd c possible).
    - AGN - MOS Light : le matériel et les ressources sont nommées. Si pas de nom mais un id, cela veut dire
            que ce matériel ou cette ressource n'a pas été défini dans IDClasses.xml
    - NLD - Le temps de détection des différentes objets est maintenant spécifique à chaque senseur
                -> le fichier ObjectTypes.xml et ceux des différentes senseurs ont été modifiés
    - NLD - Toutes les dotations sont maintenant envoyées quand un MOS se connecte à la SIM
    - NLD - Envoi de la flot à MOS (message DIN)
    - NLD - Bug fix : crash dans MOS quand une demande d'attente d'ordre était reçue par un agent non sélectionné
    - JVT - Ajout d'un deuxième itérateur de vision
    - AGN - Modification des rapports de force.
    - AGN - Correction d'un bogue sur la connaissance.
    - AGN - Modifications des paramètres ordre de conduite MouvementZoneImplantation.
    - NLD - eMission_Automate_INF_Attaquer => eMission_Automate_INF_Reconnaitre
    - NLD - L'envoi de la MRT à MOS est ré-activée (!!! CRASH POTENTIEL LORS DE L'ACTIVATION DE LA MRT)
    - NLD - La SIM ne crashe plus à la fermeture de l'appli (au moins dans les conditions initiales)
    - AGN - Les fichiers DIA_report_XXX ne sont plus créés

Version 0.15.2 [03/06/2003]
    - JVT - Correction du Cleanage des composante en destruction à la fin du pas de temps.
    - AGN - Bug fix dans gestion fenêtre attributs agent dans MOS_Light

Version 0.15.1 [03/06/2003]
    - NLD - Modif de l'ODB
                => Le champ 'Embraye' est optionnel (valeur à true par défaut)
                => Le champ 'nom' est optionnel. Lorsqu'il n'est pas mis, la valeur par défaut est de la forme "CATEGORIE [ID]"
    - NLD - Bug fix : la SIM n'accepte plus de limas/limites ayant moins de 2 points (assert() dans MOS_Light si ça arrive)
    - NLD - Renommage dans messages ASN
    - JVT - Dégradation des dotations lorsqu'une composante disparaît d'un pion
    - JVT - Correction du crahs lors de la destruction de la dernière composante d'un pion
    - JVT - Mise à jour correcte de la structure de renforcement quand la composante d'un pion en renforcement est 
            détruites dans le pion renforcé.
    - AGN - Modif MOS_Light pour virer les problèmes d'affichages des fenêtres quand il y a beaucoup de pions
    - NLD - Bug fix  : mission GEN CreerEboulement (::Terminate manquant)

Version 0.15 [02/06/2003]
    - AGN - Connaissances : on peut éditer dans MOS Light toutes les connaissances mais on peut slt modifier les
            connaissances non liées à la perception.
    - AGN - Connaissances et rens : possibilité de modifier le camp
    - AGN - Connaissances : possibilité de créer de nouvelles connaissances.
    - AGN - Connaissances : envoie du statut à MOS
    - AGN - MOS Light : affichage du pion associé.
    - JDY - Ajout de la constante eChemin_Partiel qui renvoie le chemin vers la position atteignable la plus proche
            du point en destination. Attention a rajouter le traitement de cette constante pour le calcul
    - JDY - Modification du calcul de la position d'entree dans un fuseau. La position se trouve dorenavant au milieu
            du fuseau
    - NLD - Ajout MOS ID : 'GhostAgent' et 'GhostObjet' / renommage 'OrdrePion' en 'Ordre'
    - NLD - Message ASN : MsgExplosion, envoyé quand une mine explose
                + Correction bug (infos non envoyées à MOS) dans dégradation d'un objet après explosion
    - NLD - Nettoyage envoi réseau DEC_Base_Pion
    - NLD - Modifs nommage messages ASN de gestion de la connaissance
    - NLD - Modif dans la gestion des camps
                - Les camps sont définis dans DEC/Team.xml, et non plus dans DEC/Config.xml
                - Pour être compatible avec Thales, les camps ne sont plus rouge/bleu mais ennemi/ami ...
                        => PENSEZ A METTRE A JOUR VOS ODBS
                - Un OID est assigné à chaque camp, et est utilisé dans les messages MOS<->SIM
                - Suppression de l'enum E_Camp dans DIA
    - NLD - Correction bug destruction limites par MOS quand ces limites ont été créées par la SIM 
    - NLD - Lors de la définition des agents dans le fichier odb.xml, il n'est plus nécessaire de préciser le type des agents, seule la catégorie suffit
                <Agent type="Esc ABC" categorie="Escadron XL"> 
                    => 
                <Agent categorie="Escadron XL"> 
    - JDY - Ajout du calcul de la position eObjPoint eOpRandom point distance qui renvoie un point aleatoire dans le cercle 
            de centre point et de rayon distance
    - JVT - Suppression des doublons dans la liste des composantes à détruire ( et suppression du message d'erreur allant avec :
            "Impossible de detruire la composante ..." )
    - JVT - Définition correcte des fonctions min et max dans MIL.h
    - JVT - Nouvelle enums DIA : E_TypeDotation
    - JVT - Définition des max de dotations dans le fichier composantes.xml ( les max sur les pions sont calculés
            à partir des composantes ) ( tag <Contenance> ). TOUS LES MODELISATEURS SONT PRIES DE METTRE LES BONNES
            VALEURS DANS CES CHAMPS POUR LEURS PIONS. MERCI
    - JVT - Accessibilité du pourcentage de dotation dans les scripts : R A::DEC_Dotation( I ); ( [0;100] ) ( #196 )
    - JVT - Les fonctions d'acces aux dotations prennent en compte les renforcements d'une unité :          ( #193 )
                * GetDotation       x2
                * GetDotationAllCat
                * SetDotation       x4
                * AddToDotation     x4
                * GetMaxDotation    x2
                * GetMaxDotationNAC
    - JVT - Correction de l'action de changement de posture ( assert plus d'actualité avec les postures forcées )

Version 0.14.2 [26/05/2003]
    - AGN - Rens Eni : si un automate reçoit un rens ennemi de taille section, il le convertir en une connaissance
            et la transmet à ses sections.
    - AGN - Rens Eni : si on demande à détruire un rens eni, toutes les connaissances de tous les automates qui ont
            eu cette information sont détruites, sauf si la perception les a utilisée.
    - AGN - Connaissances : il est maintenant possible de modifier et de supprimer des connaissances de compagnie.
            Elles seront supprimées seulement si elles ne sont pas reliées à de la perception.
    - AGN - Modifications missions pion Santé.

Version 0.14.1 [23/05/2003]
    - AGN - MOS Light : possibilité de définir du renseignement ennemi et de l'envoyer aux automates. Pas de traitement du
            côté automate pour le moment.
    - AGN - Les connaissances concernant les objets sont envoyés aussi à la connection.
    - NLD - Nouvelle mission : ABC automate eclairer
    - NLD - Bug fix: missions eMission_Pion_GEN_FranchirEntonnoir, eMission_Pion_GEN_FranchirFosseAC, eMission_Pion_GEN_RealiserZoneMineeParDispersion, eMission_Pion_GEN_RealiserPostesTir, eMission_Pion_GEN_RealiserTravauxProtection, eMission_Pion_GEN_RetablirItineraire, eMission_Automate_GEN_Renforcer
    - NLD - Ajout events DIA : DEC_EVT_AjoutRenfort(Pion) et DEC_EVT_SuppressionRenfort(Pion) (cf. globals.hal)
    - NLD - Modif comportement fonction interne utilisée pour 'donner' des renforts : si l'unité qui doit renforcer est déjà en renfort (!), elle annule automatiquement le précédent renfort
    - NLD - Il est maintenant possible é de spécifier qu'un objet n'influe pas sur la vitesse d'un agent quand il le parcourt.  
                => <VitesseContourne>-1</VitesseContourne>
    - NLD - Modif msg ASN MsgSimCtrlInfo : ajout de l'état de la SIM (running/paused ...)
    - NLD - Envoi de l'état opérationnel à MOS (formule bidon pour le moment)


Version 0.14 [21/05/2003]
    - JVT - PHY_Composante n'a plus de PHY_Unit_Dotation ( suppression des ...DotationRec de la PHY_Unit )
    - AGN - Modification MOS Light : Ajout d'une option permettant de sauvegarder des coordonnées dans un fichier texte.
            Si l'option est cochée, un click droit sur la carte entraînera la sauvegarde des coordonnées. Ces
            coordonnées sont écrites dans un fichier points.txt. Ce fichier est écrasé à chaque exécution.
    - NLD - Ajout test si fichier senseur peut être correctement ouvert 
    - NLD - Bug fix : bug quand envoi destruction connaissance objet
    - JVT - Correction erreur dans distibution des obus lors d'un tir indirect ( on peut désormais tirer un
            nombre d'obus non multiple du nombre de composantes du pion tirant -- ce qui renvoyait "manque de munitiion" auparavent )
    - AGN - Ajout du calcul du rapport de force immédiat au niveau automate (manque le rapport de force futur à faire).
    - JVT - Attrition provoquées par les objets du génie ( BouchonMine et ZoneMinée )
    - JVT - Modification de l'enum des types d'objets ( MIL_Object_Def.h, ScipioObject.asn, MOS_Object_Def.h, Types_Object.hal )
    - JVT - Modification de la structure du fichier Attrition.xml ( ajout des attritions objets )
    - NLD - Modif dans la gestion du temps de destruction d'un objet : dévalorisation, puis destruction, et non plus les 2 mixés
    - NLD - Modif 'bool preparation' dans gestion des objets envoyé à Thales 
    - NLD - Msg DIN d'envoi des agents de SIM->MOS_Light n'oblige plus à ce que les IDs des automates soient inférieurs à ceux des pions
    
    - NLD - Modif paramètres missions RealiserZoneMineeLineaire/RealiserZoneMineeParDispersion (segment_ / pointsObstacle_ à la place de posObstacle_)
    - NLD - Modif objets Zone minee -> Zone minée linéaire et Zone minée par dispersion
    - NLD - Gestion des dotations utilisées pour la création des objets : mines / explosifs / barbelés
    - NLD - Dans lecture des types d'objets dans les composantes : check si le type d'objet est valide
    - NLD - Ajout RCs 'Travaux realises' et 'Obstacle dégagé'
    - NLD - Bug fix : la connaissance objet est bien envoyée (le msg doit encore être mis à jour qd la gestion de la géométrie des objets sera refaite)
    - NLD - Un objet est désormais dégradé lorsqu'il y a eu contact (et attrition) avec un agent
    - NLD - Bug fix : l'activation des objets ne s'effectuait jamais
    - JVT - Modification du fichier PH.xml : dans la partie générique ( uniquement ), on peut spécifier des
            modificateurs statiques pour deux postures spéciales :
                * SurZoneProtection
                * SurZoneTir
    - JVT - Prise en compte des modifications appliquées au pion lorsqu'il est sur une Zone de protection ou 
            une Zone de tir ( objets créés par génie )
    - NLD - Ajout RCs 'RepriseDeplacement', 'DemandeAppuiFeu', 'StopperAppuiFeu', 'EnnemiDetruit' et 'SurTypeTerrainParticulier'
    - NLD - Bug fix : crash MOS à la déconnexion de la SIM
    - NLD - Les objets du génie ont une taille réaliste
    - NLD - Nouvel attribut des objets : 'EstUnObstacle'
                => Seuls les objets obstacles sont contournés quand le flag 'evitement d'objet' est positionné dans le path finder


Version 0.13.2 [19/05/2003]
    - NLD - L'automate peut donner des missions (CDT_DonnerMission ...) même quand il n'y a pas eu de MRT (utilisé dans le comportement par défaut)
    - JVT - Nouveau type pour l'artillerie : T_ResultatTirIndirect
    - JVT - Ajout d'une knowledge_category pour l'artillerie : resultats_tir_indirect contenant des T_ResultatTirIndirect
    - JVT - Changement de prototypes pour les tirs indirects : 
                *  V DEC_StartExecuterTir  ( A, A, I, R, I, A ); // tir sur cible
                *  V DEC_StartExecuterTirPt( A, U, I, R, I, A ); // tir sur point
    - JVT - Prise en compte du temps de vol des tirs indirects ( même après stop de l'action )
    - AGN - Correction manque ordre de conduite dans MOS Light
    - AGN - Amélioration du système d'archive des modèles : les scripts des modèles seront relus si il
            y a un changement des fichiers de type ou des fichiers définissant le workspace.
    - AGN - Amélioration du système d'archive des modèles : si le chemin associé à un modèle (dans models.xml)
            est modifié, le script du modèle correspondant est relu.
    - AGN - Correction d'un bogue sur les ordres ASS.
    - NLD - Nouvelles missions GEN : 
                eMission_Pion_GEN_FranchirEntonnoir
                eMission_Pion_GEN_FranchirFosseAC
                eMission_Pion_GEN_RealiserZoneMineeParDispersion
                eMission_Pion_GEN_RealiserPostesTir
                eMission_Pion_GEN_RealiserTravauxProtection
                eMission_Pion_GEN_RetablirItineraire
                eMission_Automate_GEN_Renforcer
    - NLD - Possibilité de mettre des IDs MOS directement dans l'ODB 


Version 0.13.1 [16/05/2003]
    - JVT - Update prise en compte des composantes détruites après la fin de l'update des actions
    - JVT - Une composante sans humain valide est maintenant considérée comme détruite
    - JVT - L'action "Dec_StopEvacuationBlesses" est renommée en "DEC_StopEvacuationBlesses"
    - AGN - Envoie des connaissances sur les objets par asn
    - AGN - Ajout DEC_ObtenirBarycentreListePoints et modif DEC_ObtenirBarycentre.

Version 0.13 [16/05/2003]
    - AGN - Ajouts de munitions dans la mission et l'ordre de conduite AppliquerFeux.
    - AGN - Modifications paramètres mission Surveiller RATAC.
    - JVT - Action LOG : PHY_ActionCarry -> DEC_{Start, Suspend, Reprend, Stop}EvacuationBlesses
    - JVT - Ajout d'un paramètre pour spécifier le "Pion de triage" des PSMs dans l'ODB
    - AGN - Mise en place des archives au niveau modèle: lorsqu'un script est lu, une archive de
            ce modèle est généré. Si à la prochaine exécution, ce modèle n'a pas changé, la sim
            utilisera l'archive (plus rapide); sinon le script sera lu et l'archive mise à jour.
            Pour ne pas utiliser ce système, lancer l'application avec '-nodiaarchive'. Pour
            forcer la relecture d'un modèle, supprimer l'archive avec le nom du modèle dans DEC/bin.models.
    - AGN - Modification de la police scipio.ttf pour ajouter symboles pour la logistique santé.
    - AGN - Ajout des zones de deploiement des cobras et des fonctions allant avec.
    - AGN - Divers ajouts pour l'artillerie
    - JVT - Possibilité de suspendre/reprendre les tirs directs
    - NLD - Déplacement de l'init des nDIAIdxXXX de DEC_Pion_ABC et DEC_Automate_ABC vers DEC_Agent_ABC
    - NLD - Modifs Missions / ASN
                * ABC-Detruire, ABC-Reduire, ABC-Fixer, ABC-PrendreMaintenirPreciserContact, INF-Reduire, INF-Fixer, INF-PrendrePreciserContact, INF-DetruireEmbuscade
                    prennent explicitement un type 'Knowledge'
                * INF-DetruireEmbuscade : itineraire-embuscade à la place de position-embuscade
                * SANTE-CategoriserBlesses et SANTE-SoignerBlesses ne prennent plus d'unite en parametre
    - NLD - Les infos de renforcement sont envoyées a MOS (Modifs Msg ASN MsgUnitAttr)
    - FBD - Preparation Pathfinder Multithreaded Supporte plusieurs calcul pour un meme arbre
    - FBD - Réintegration MAP Texture de SIM Pour jo ce  L'ain

Version 0.12 [13/05/2003]
    - AGN - Corrections de bogues sur la perception/connaissance
    - AGN - Suppression des champs Blinde et Mecanise dans le config.xml.
    - AGN - Suppression des fonctions DEC_CategorieEstMecanisee et DEC_CategorieEstBlindee.
    - AGN - Ajout des fonctions DEC_NatureArme, DEC_NatureCategorie, DEC_NatureMobilite, DEC_NatureQualification, DEC_NatureSpecialization
    - JDY - Bug dans EVT_OrdreDeConduite
    - JDY - Mise en place des fonctions DEC communes a tts les pions sur les Automates ( Posture/Tir/Deplacement)
    - FBD - Le pathfind peut calculer des chemins incomplets ( se rapprochant le plus possible de la dest) lorsqu'il ne peut rejoindre le point de destination exact.
            ( 3 etats au lieu de 2 en parametre de retour de la routine SubmitRequest() )
    - NLD - L'exercice ID n'est plus utilisé pour la génération des IDs 'MOS'
    - NLD - Ajout des propriétés caractérisant la nature d'une unité dans types.xml
                <Nature>
                    <Arme type="Engineer"></Arme>
                    <Specialisation type="None"></Specialisation>
                    <Qualificatif type="None"></Qualificatif>
                    <Categorie type="None"></Categorie>
                    <TypeMobilite type="None"></TypeMobilite>
                </Nature>
             + modif du message ASN de rens ennemi
    - NLD - Fonction DEC : DEC_CreerDirection 
    - NLD - Init par défaut de la direction dangereuse dans les missions fixée à (0, 1) (nord)
    - NLD - Debut de gestion de l'envoi de la MRT vers MOS (Méthode Serialize sur les missions)
    - AGN - Ajout mission ASS ReconnaitreZoneDeploiementCOBRA

Version 0.11.1  [12/05/2003]
    - AGN - Modifications paramètres missions ASA.
    - AGN - Ajout fonctions PHY manquantes pour la LOG
    - JVT - Prise en compte des composantes détruites dans les tirs ( crash ) ( #172 )
    - JVT - {unary/binary}_compose dans MIL_pch.h
    - NLD - Missions automate : ABC_Jalonner / INF_Attaquer / SANTE_SeDeployer

Version 0.11 [07/05/2003]
    - AGN - Missions PSM : SePositionner, ReleverBlesses, Renforcer
    - AGN - Missions SST : CategoriserBlesses, SoignerBlesses
    - AGN - Missions SSR : SePositionner, EvacuerBlesses, Renforcer
    - NLD - Debogage envoi de limites SIM -> MOS
    - NLD - Les infos sur les objets SIM -> MOS passent maintenant par des messages ASN
    - JVT - Le fichier des PH a légérement changé : Maintenant, vous pouvez renseigner des valeurs permettant de
            générer automatiquement tous les PH quelquesoit les postures a partir d'un unique couple de posture donné
            ( Pour tout triplet Lanceur/Munition/ComposanteCible ).
            Les modificateurs étant globals, essayer de vous mettre d'accord. Pour les cas spécifique, vous pouvez toujours
            renseigner toutes les postures à la main comme avant.
    - NLD - Les infos des tirs (start/stop tir direct/indirect) sont affichées dans MOS
    - JDY - Ajout de  info fuseau dans la mission test MoveTo
    - NLD - Modifs GDH envoyé à MOS (date réelle indexée sur 1er jan 1900)
    - JDY - Reorganisation du decisionnel - deplacement de fichiers, renommage ...
            Tous les fichiers relatifs au decisionnel sont dorénavant dans le repertoire /Decision/
    - JDY - Correction pathfind sur les types de terrains dont le cout est ignore ( cas eIgnoreAll ne trouvait aucun chemin!!)
    - JVT - Début de gestion des composantes endommagées
            -> Lors des phases de fin de mission ( ou n'importe quand d'ailleurs ), les scripts peuvent faire appel
               à la fonction DEC_EnvoyerComposantesVersChaineLOG() ( pour l'instant, la gestion est simpliste ) pour sortir
               les composantes endommagées du pion.
            -> Cas spécial : Dans le cas ou une composante n'a plus de capacité de mobilité, elle est directement sortie
               du pion de manière automatique.
            -> Nouvelle fonction R A::DEC_EtatGlobal() permet de connaitre un état global du pion du point de vue de ses composantes
               Cette nouvelle fonction est donc à utiliser en parallèle avec le DEC_Capacity existant ( remarque : le pourcentage 
               peut être supérieur à 100 ( dans le cas de renforcements de pions... ) )
    - NLD - Début nettoyage DEC_Team
            - Stockage de la team au niveau du MIL_Agent et non plus DEC_Agent
            - Stockage de l'idx dans la classe et non plus recherche externe ...
    - NLD - Fonction de réarticulation
            - MOS : Drag & drop d'un pion d'une compagnie à une autre
            - ASN : MsgPionAffecteSuperieur et MsgPionAffecteSuperieurAck
            - Evenements DEC sur l'automate : EVT_DEC_AjoutPion et EVT_DEC_SuppressionPion
            - NB : RESTE A GERER LES IMPLICATIONS AU NIVEAU DE LA CONNAISSANCE ET DES MISSIONS (annulation des missions courantes ?)
    - NLD - Cleanage dsp MOS_Light
    - NLD - Bug fix : le passage des connaissances en paramètres de mission ne fonctionnait pas (sauf pour la 1ere connaissance ...) 
    - JDY - Bug fix : les positions eOpSee eOpAgent prennent en compte dorenavant le type d'unite a voir 
            et donc les modificateurs lies a l'unite a observer
    - NLD - Normalisation dans nommage pions/missions
            - L'arme 'Artillerie' devient '3D'
                => Dans les fichiers de conf : Cie ART et Son ART => Cie 3D et Son 3D
            - Les noms de missions de la chaine santé de la log (PSM/SST/SSR) utilisent le qualificatif 'SANTE' (eMission_Pion_PSM_Renforcer => eMission_Pion_SANTE_Renforcer ...)

Version 0.10 [29/04/2003]
    - AGN - Révision de l'ordre d'évaluation des moteurs décisionnels pour permettre une perception en un tour.
    - NLD - Plus de strMission dans l'evenement EVT_DEC_OrdreConduite
    - NLD - Les limites créées par la SIM sont envoyées à MOS
    - NLD - L'enum des types de limas dans les messages ASN est celle de la SIM et non plus EnumTypeLigneAlat
    - NLD - Infos sur le découpage des fuseaux affichés en debug dans la SIM
    - JDY - Ajout de la constante eInfoFuseau pour la prise en compte ou non du fuseau dans le chemin
            ( Attention pour touts les anciens chemins des pions ajouter eInfoFuseau pour rpise en compte des fuseaux)
    - AGN - Révision de la perception & de la màj de la connaissance.
    - NLD - Les infos du ACK de l'action magique sont affichées dans MOS
    - JVT - Changement de l'algorithme de détection
    - JVT - Mise en place de la future prise en compte de la future météo ;) pour la détection
    - JVT - Prise en compte des postures avec des pourcentages de détection
            => changements dans types.xml. Exemple :
                <Posture type="camoufle">
                    <TempsMiseEnPosture>0</TempsMiseEnPosture>
                    <PourcentDetectionSiDetecteur>90</PourcentDetectionSiDetecteur>
                    <PourcentDetectionSiDetecte>40</PourcentDetectionSiDetecte>
                </Posture>
    - JVT - Modification de la définition des capteurs ( cf. le dossier Sensors ). Pour que cela parse, j'ai mis tout le monde avec le même capteur "Oeil"
            => Il n'y a plus qu'une seule définition des trois distances de référence.
               Les autres distances sont indiquées par coefficients modificateurs
               Ces coefficients concernent :
                _ L'éclairement      ( actuellement toujours "JOUR" )
                _ La météo           ( actuellement toujours "CLAIR" )
                _ Les environnements ( anciennement appelé objets )
                _ Les catégories des composantes à détecter ( -> manière de prendre en compte la résolution des capteurs )
    - JVT - Definition de quelques capteurs spécifiques ( Oeil, 3 types de lunettes et radar )
    - AGN - Génération de données par défaut pour DEC:
        * rapport de force : SIM génère des poids de 10 pour les types de composantes non définis dans le fichier XML
        * connaissances entre camps : SIM génère toutes les connaissances d'un camp sur les camps non définis dans le XML.
                Ces camps seront considérés comme des amis. Le reste de la connaissance est généré comme suit.
        * type des catégories par défaut (<Composantes>):  si une caté n'est pas définie, on lui assigne le premier type
                de composante défini dans cette catégorie.
        * définition des types de pion (<Pions>): si un type de pion n'est pas défini, on génère la connaissance du pion
                à partir de sa définition réelle. Le pion sera considéré comme non blindé et non mécanisé.
    - FBD - Selection par defaut de l'itineraire dans mission pour clic souris
    - FBD - Changement taille des limas, des limits, des fleches.
    - FBD - Affichage LIMA / LIMITS
    - JVT - Possibilité d'activer / désactiver la détection simulant les coups de sonde : DEC_StartCoupsDeSonde et DEC_StopCoupsDeSonde
            Par défaut, les coups de sondes sont désactivés.
    - NLD - Bug fix : bug dans la gestion (release) des IDs (assert dans PHY_ActionDirectFire::Terminate() )

Version 0.9.1 [28/04/2003]
    - JDY - Reactivation de l'ajout des points interressants dans le calcul de chemin

Version 0.9 [28/04/2003]
    - AGN - Les unités dans les missions sont maintenant des connaissances de compagnie?
    - JDY - Mise en place du pathfind manager utilisant des conditions d'attente 
            pour eviter la saturation du processeur 
    - AGN - Ajout mission ABC_RenseignerPoint
    - AGN - Ajout fonction workspace DEC_PushBack pour ajouter un point à une liste de point.
    - AGN - Ajout dans DirectIA des opérateurs binaires &, | et ~.
    - AGN - Correction bogue sur ordre conduite. Il manquait une initialisation.
    - AGN - Ajout mission ASS Surveiller RADAC et ASA AssurerDefenseAccompagnement
    - AGN - Ajout fonction ASS DEC_DetectionRadar.
    - NLD - Fonction DEC_Copie_Direction
    - FBD - Pathfinder refonte bas niveau..
    - FBD - Flag option optim draw dans mos_light

Version 0.8.1 [25/04/2003]
    - NLD - Mise à jour de la mission SeDeplacer pour tenir compte de la nouvelle API du path find

Version 0.8 [24/04/2003]
    - JVT - Ajout d'une nouvelle formation : Barrer
    - JVT - Ajout de deux fonctions de tir direct pour la section d'infanterie : DEC_StartTirDebarque, DEC_StartTirNonDebarque ( #129 )
    - NLD - Modif gestion des missions automate dans ASN (idem que pion)
    - NLD - Stockage des missions créées et pas encore affectées que l'automate à ses subordonnés pendant la conduite (pour éviter les leaks)
    - JDY - Amelioration du calcul de chemin avec evitement des ennemis et des objets
    - AGN - Script : corrections de bogues dans la connaissance + diminution du nb de traces sur la perception (on envoie un trace que si il
            y a chgt de niveau de perception) (déjà archivé en script).
    - AGN - Network : envoie des connaissances de compagnies dès la connection.
    - AGN - Tri de l'enum des missions pour permettre un affichage dans l'ordre alphabétique dans MOS Light.
    - AGN - Correction d'un bogue sur la recherche de zone implantation LRM.
    - JDY - Ajout de la fonction DEC_Position_SetPathType pour le calcul des positions
    - JVT - Nouvelle définition des munitions de tir indirect ( cf. "Attrition.xml") :
            <Munition type="Obus Explosif 155" categorie="explosif" intervention-type="48" vitesse-moyenne="150" rayon-neutralisation="1000" rayon-attrition="250" >
    - JVT - Nouvel algo de tir indirect
    - JVT - Ajout de 2 enums pour les tirs indirects dans les scripts : E_TypeObus et E_EtatTirIndirect
    - JVT - Prise en compte de toutes les composantes source pour la détection ( j'ai enlevé ce niveau d'élagage )
    - JDY - Ajout de la position de soutien ( eOpSupport )
    - NLD - Modif gestion des identifiants MOS/SIM (MIL_MOSIDManager)
    - NLD - Les points des différentes limites sont copiées dans les fuseaux
    - NLD - Automates : DEC_MRT_AffecteFuseaux() 
    - NLD - Automates : DEC_MRT_CalculePointArrivee()
    - NLD - DEC_CalculeEntreeFuseauLaPlusProche()
    - NLD - Correction bug de précision dans le IsInside de MIL_Fuseau
    - NLD - Automates : copie des limas de l'automate dans les missions pion

Version 0.7.1 [17/04/2003]
    - AGN - Ajout ordre de conduite Mouvement A Zone Implantation
    - AGN - Ajout des unités section et compagnie LOG
    - NLD - NET_LAU_Mgr::Update n'existe plus + l'envoi du message vers le launcher se fait désormais à la connexion 
    - NLD - Bug fix : la condition d'envoi des dotations (personnel/equipement/ressource) était incomplète 
                (=> si seules les dotations en personnel étaient updatées, le msg n'était pas envoyé à MOS)
    - NLD - Nettoyage/réorganisation des fichiers de la partie réseau du .dsp MIL 

Version 0.7 [17/04/2003]
    - AML - suppression de la lecture du parametre ExerciceID de scipio.xml
    - AML - ajout d'une section AgentServer-Launcher dans scipio.xml (reprendre scipio.xml)
    - AML - ajout d'un parametre en ligne de commande pour la sim [-exerciceID #]
    - AML - le numero de port pour la connection avec le MOS devient celui du fichier additionné de l'exerciceID
    - AML - main.cpp/main: ajout de gestion de console (devrait etre transparent pour tout le monde)
    - JDY - Debut integration nouvelle version du pathfind
    - JDY - Bug fix : position d'observation d'un point sur lequel se trouve un objet dynamique 
    - AGN - L'ABC peut lancer sa mission Attaquer.
    - AGN - Ordre de conduite avec paramètre : Appliquer Feux.
    - AGN - Bug fix : mission RecoLRM branchée sur mission AssurerMisEnOeuvreLRM
    - NLD - Bug fix : suppression d'un assert quand la fonction de lima est incorrecte (envoi du nouveau msg d'erreur invalid_lima_function à MOS)
    - AGN - Position de sûreté : on n'essaye plus de se mettre dans une forêt ou une ville. Ca donnait des résultats débiles (pb de rivières).
    - AGN - Bug fix : correction pour les calculs de position pour l'ASS.
    - NLD - Bug fix : valeurs de l'enum inversée dans l'ASN de la mission INF_DetruireEmbuscade
    - AGN - unités prises à parti : slt si l'unité qui tire est à distance de tir et si elle tire réellement (genre pas si pas de munition)
    - AGN - Résolution bogue 138.
    - JVT - Nouvelle méthode de calcul du coefficient du à la posture qui est appliqué à la détection :
                Moyenne => Moyenne au carré
    - AGN - Calcul position embuscade : retourne une position qui voit l'embuscade en identifié et à portée de l'armement des troupes débarqués.
    - NLD - Automates
                * MRT : possibilité de donner des ordres aux pions (gestion de la copie de T_Point / T_ListPoints) (DEC_MRT_CreerMissionPion)
                * MRT : validation et activation                                            (DEC_MRT_Valide)
                * Conduite : Routage des RCs vers l'automate qd embraye                     (EVT_DEC_PionRC)
                * Conduite : Routage des 'attente d'ordres' vers l'automate qd embraye      (EVT_DEC_PionEnAttenteOrdreConduite)
                * Conduite : Gestion des ordres de conduite à donner aux pions              (DEC_CDT_DonneOrdreConduiteAPion)
                * Conduite : possibilité de donner des ordres aux pions                     (DEC_CDT_CreerMissionPion/DEC_CDT_DonnerMissionPion)
    - JVT - Correction d'un bug dans la translation à l'init de l'itérateur de vision. ( bug #133 )
    - AGN - Simplification du modèle de données pour les représentations (plus de path_info, on utilise directement les représentations).
    - AGN - Ajout missions ABC : OuvrirItineraire, ReleverUnite, ArmerPIA, PrendreMaintenirPreciserContact
    - NLD - Modifs réseau pour permettre la connexion avec le launcher (DIN_Connector / gestion des stations ID)
    - NLD - Modifs des missions suivantes : (ListAgent => Agent dans l'ASN et dans tous les T_Missions sauf INF_PrendrePreciserLeContact)
                * ABC_Appuyer
                * INF_Couvrir
                * INF_Appuyer
                * INF_PrendrePreciserLeContact
    - NLD/AGN - Toutes les missions devraient (!) pouvoir être données par l'automate
    - NLD - La fonction dia DEC_SetPosition n'existe plus, elle est remplacée par DEC_Copie_Point / DEC_Copie_ListePoints / DEC_Copie_PointDansListePoints

Version 0.6.1 [14/04/2003]
    - NLD - Bug fix : crash dans MOS quand destruction fenêtre mission
    - NLD - Bug fix : crash dans lancement mission plastron ennemi
    - NLD - Bug fix : comportement MIS_Pion_ABC_ReconnaitreUnAxe => MIS_Pion_ABC_ReconnaitreAxe

Version 0.6 [14/04/2003]
    - AGN - MOS Light : la (les) connaissance(s) correspondant à l'unité REELLE sélectionnée ne sont pas affichée.
    - AGN - Mise en place des zones LRM pour ASS.
    - AGN - Résolution bogue 117
    - AGN - Perception des objets : perception de l'état contourné d'un objet et transmission au reste de la compagnie.
    - JVT - Ajout du "niveau des humains" ( Militaire du rang, Sous-officier, officier )
            Pour définir ces niveaux, il faut ajouter dans types.xml ( J'ai mis un exemple dans "Section GEN" ) :
                <Commandement>
                    <Officier>1</Officier>
                    <Sous-Officier>2</Sous-Officier>
                </Commandement>
    - JVT - Correction d'un bug sur le choix des munitions
            [ RQ : CE BUG ETAIT INVISIBLE CAR LES ATTRITIONS SONT QUASIMENT TOUTES LES MEMES DANS LE FICHIER ATTRITION
             IL VA FALLOIR UN JOUR QUE CHACUN SE PALUCHE LES ATTRITIONS DE SES PIONS.... MERCI ]
    - JVT - Ajout de la possibilité de définir un lanceur majeur pour chaque composante
            Pour cela, il faut ajouter dans composantes.xml ( J'ai mis un exemple dans "Leclerc" ) :
                <Lanceur type="Canon 120" majeur="oui">
            S'il n'est pas spécifié, le premier de la liste est considéré comme l'armement majeur...
    - JVT - Ajout de la fonction DEC_MaxDebarquement pour la section INF ( bug #118 )
    - JDY - Correction chemin provenant d'un calcul de position (insertion de la position au bon endroit)
    - NLD - MIL_Agent_ABC::GetParent viré (=> GetAutomate sur le pion)
    - NLD - Ménage et uniformisation dans les missions
                * MIL_Mission_XXX => MIL_PionMission_XXX / MIL_AutomateMission_XXX
                * DIA : T_Mission => T_Mission_Pion et MIS_GEN_XXX => MIS_Pion_GEN_XXX
                * MIL_Order => MIL_PionOrderManager/MIL_AutomateOrderManager
                * Fusion de MIL_PionMission_ABC et MIL_PionOrderInitial
                * Correction bug enchainement missions quand 2eme mission syntaxiquement invalide (l'ordre précédent reste actif)
                * Tous les fichiers des missions ne se trouvent plus dans MIL/src/Mission, mais dans MIL/src/Order (et MIL/src/Order/Pion, MIL/src/Order/Automate)
                * Rajout de tous les ::Terminate dans toutes les missions feuilles (!!!! A NE PAS OUBLIER POUR LES PROCHAINES MISSIONS)
                * MIL_MissionManager => MIL_OrderTools
    - NLD - Gestion des ordres des automates
    - NLD - Déplacement de DEC_ZoneDeploiement des MIL/src/Mission vers MIL/src/Decision/Artillerie (avec les autres ...)
    - JVT - Envoi des informations dotation en humains à MOS
    - JVT - Le paramètre de retour de l'action changement de posture est correctement renvoyé dans le cas ou cette action est arrêtée à cause de son exclusivité ( BUG #109 )
    - NLD - Déplacement de MIL_LimaXXX / MIL_LimitXXX de MIL/src vers MIL/src/Order/Limit et MIL/src/Order/Lima 
    - AGN - Ajout fonction DEC_TranslatePositionDir
    - AGN - Ajout des mission MIS_Pion_ABC_Detruire, MIS_Pion_ABC_SemparerZone, MIS_Pion_ASS_ReconnaitreZoneDeploiementLRM et MIS_Pion_ASS_AssurerMiseEnOeuvreLRM.
    - NLD - Ajout RC 'Perte de contact' comme RC 'officiel', envoyé à MOS en ASN (!! Modif du type DIA)
    - NLD - Modification de la gestion des missions dans MOS_Light (MOS_Mission_ABC => MOS_MissionPion et MOS_MissionAutomate), et prise en compte des missions automate 
    - NLD - Bug fix : le 'error code' du ack de l'action magique était faux 
    - NLD - Gestion du changement de mode de l'automate (SIM + MOS_Light)

Version 0.5.3 [09/04/2003]
    - JVT - Correction bug de détection quand une composante est en dehors du monde
    - NLD - Fix bug mission 'dégager abattis miné' (Le type DIA était faux)
    - NLD - Fix bug mission 'dégager rues' (Le type DIA était faux)
    - JDY - Fix bug sur DEC_StopCalculerItineraire lorsque l'on lance une nouvelle mission
    - JVT - Décorrelation de l'affichage de la vision et des cônes dans MOS
    - NLD - MIL_Order_XXX => MIL_PionOrder_XXX (nécessaire avant gestion ordres automates)
    - NLD - Les infos de fuseau / limas sont stockées au niveau de l'agent et non plus au niveau de l'ordre

Version 0.5.2 [08/04/2003]
    - NLD - MIL_Mission_INF_ReconnaitreUnAxe => MIL_Mission_INF_ReconnaitreAxe (idem pour behavior DIA)
    - AGN - Correction dans MOS_Light d'un bogue concernant l'utilisation des soutiens et des appuis
    - AGN - Modification du Initialize de DEC_Pion_ABC pour que le champ __type_ du pion ait la bonne valeur.
    - NLD - Fix bug assertion dans MIL_Order (réinit orderConduiteRequestVector qd fin mission)
    - NLD - Fix bug mission 'réaliser bouchon miné' (Le type DIA était faux)

Version 0.5.1 [08/04/2003]
    - NLD - Correction bug DEC_AttenteOrdre (le premier paramètre était ignoré
    - NLD - Modifs ASN : ajout des 5 capacités pour chaque agent
    - JVT - Envois des messages SIM->MOS contenant les dotations de chaque agent étalés dans
            le temps

Version 0.5 [07/04/2003]
    _ JVT - Modification de l'algorithme de lancé de rayon pour la perception ( correction de bug + optimisation rapidité )
    - JDY - Ajout de la fonction DEC_Position_SetPath
    - NLD - Création de la lib 'ASN'
    - NLD - Modifs ASN
                * orderID dans MsgPathFind
                * bOperationel dans RC + mise à jour des RCs
                * messages pour attente ordre / annulation
    - NLD - Le RC 'attente d'ordre' est remplacé par la fonction DEC 'DEC_AttenteOrdre' (!! MAL GERE DANS MOS)
    - NLD - Nouvelle fonction DEC 'DEC_AnnuleAttenteOrdre'
    - NLD - Nouvelle fonction DEC_Message a utiliser en parallèle avec DEC_RC 
                    => DEC_RC      = Compte rendus rééllement opérationels
                    => DEC_Message = Compte rendus informatifs pour l'anibas (= traces actuelles)
                    => DEC_Trace   = Debug pour modélisation
    - NLD - La variable 'strHint' est de retour dans les ordres de conduites, mais il est optionel
                    => DEC_AttenteOrdre( eOrdreConduiteXXXXX, eOrdreConduiteYYYY, "toto" ); 
    - NLD - Nouvelle mission 'Se Deplacer' - behavior MIS_SeDeplacer
    - AGN - Modifs ASN
                * nature dans MsgUnitKnownUpdateOrCreation
                * camp dans MsgUnitKnownUpdateOrCreation
    - AGN - Modifs MOS Light
                * Bouton pour afficher ou pas les pions réels.
                * Bouton pour chaque pion pour afficher ou pas les connaissances de la compagnie.

Version 0.4 [01/04/2003]
    - AGN - La gestion de myself.mission_ (set et mise à 0 qd fin mission) est fait dans le code.
    - AGN - Correction d'un plantage sur les comportements de points spéciaux d'un chemin (la destruction du chemin
            vire les références aux points du chemin dans le moteur DirectIA).
    - NLD - RC debut mission disparait
    - NLD - Message ASN pour la gestion des ordres
    - NLD - moveto prend un iti à la place d'un point
    - NLD - gestion des attributs optionnels
    - NLD - les paramètres de mission : dotations/perte_humain/protection n'existent plus
    - NLD - Fix bug fuseaux
    - NLD - ASN : changement du type ASN1T_CoordUTM (VisibleString -> Octet string)
    - NLD - Suppression des ordres de mission
    - NLD - Nouvelle gestion des ordres de conduite : possibilité d'avoir des paramètres (RC de SIM vers MOS et de MOS vers SIM)


Version 0.3a [28/03/2003]
    - NLD - Attribute 'Direction' dans les missions au niveau de la com MOS-SIM est un angle et non plus un vecteur
    - JDY - Bug pathfind sur fin calcul - calcul corrige
    - JVT - Nouvelle gestion des formations
    - NLD - Mise à jour msgs ASN : utilisation des localisations Thales à la place de ListPoint/Point + idem pour GDH
    - JVT - La valeur de retour de tir est mise à jour
    - JVT - Ajout d'informations sur le déroulement des tir ( PH générés ou par défaut )
    - AGN - Révision de la gestion des ennemis pour le pathfinder (disparition fichier pathfinder.xml)
    - AGN - Les messages des traces sont ajoutés dans un fichier trace_archive.txt
    - AGN - Correction d'un bogue sur le calcul d'une position de sûreté

Version 0.3 [26/03/2003]
    - NLD/AGN - Noms/structure des missions
    - AGN - Modifs sur les distances d'avants points
    - JDY - Modifs sur pathfinder + positions
    - NLD - Quand un comportement associé à une mission n'existe pas,
             la SIM ne crashe plus et affiche un message indiquant le nom
             du comportement manquant

Version 0.2 [20/03/2003]
    - JVT - Nouvelle version des tirs
    - JVT - Correction bug vision oscillation

Version 0.1a [19/03/2003]
    - NLD - La version debug IXI fonctionne maintenant en -nodisplay



