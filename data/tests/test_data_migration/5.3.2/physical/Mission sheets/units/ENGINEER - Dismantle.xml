<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<mission-sheet name="ENGINEER - Dismantle">
  <context>
    <line>
      <italic>
        <text>To totally eliminate or neutralise a set of obstacles. A task that is usually performed by follow-on engineers and is not done under fire.</text>
      </italic>
    </line>
    <line>
      <text>In SWORD, to remove a set of given Sword objects such as obstacles or human made infrastructure.</text>
    </line>
  </context>
  <parameters>
    <parameter name="Danger direction" optional="false">
      <line>
        <text>Expected enemy direction.</text>
      </line>
    </parameter>
    <parameter name="Phase lines" optional="true">
      <line>
        <text>Lines used by units to adapt their behavior when they reach or cross them.</text>
      </line>
    </parameter>
    <parameter name="Limit 1" optional="true">
      <line>
        <text>Right or left boundaries inside which the agent performs the mission.</text>
      </line>
    </parameter>
    <parameter name="Limit 2" optional="true">
      <line>
        <text>Right or left boundaries inside which the agent performs the mission.</text>
      </line>
    </parameter>
    <parameter name="Objectives" optional="false">
      <line>
        <text>Objects to remove.</text>
      </line>
    </parameter>
    <parameter name="Meeting position" optional="false">
      <line>
        <text>Position to reach upon works termination.</text>
      </line>
    </parameter>
    <parameter name="Wait for reinforcement" optional="true">
      <line>
        <text>Defines if agent should wait for reinforcement in case it cannot remove an obstacle.</text>
      </line>
    </parameter>
  </parameters>
  <behavior>
    <ul>
      <li>
        <line>
          <text>The agent moves toward each objective to dismantle.  It acts on each objective by following the order of the elements in the 'Objectives' list. The position to remove each objective is automatically determined by the agent.</text>
        </line>
      </li>
      <li>
        <line>
          <text>If an object is improved with mines, the agent needs to remove mines before starting to deconstruct it.</text>
        </line>
      </li>
      <li>
        <line>
          <text>Upon reaching an objective, the agent starts to remove it (the report "work just started"  should be displayed). Upon work termination (the report "work completed for object [object name]" is displayed) the agent goes to the next objective.</text>
        </line>
      </li>
      <li>
        <line>
          <text>An object may not be removed if the agent doesn't have the physical capability or it hasn't enough resources. In this case, the report 'Impossible work' is displayed, and the mission ends. In this case the agent waits to be reinforced.</text>
        </line>
      </li>
      <li>
        <line>
          <text>If needed, the agent dismounts to remove the object.</text>
        </line>
      </li>
      <li>
        <line>
          <text>When all objects have been visited, the agent moves to the meeting position.</text>
        </line>
      </li>
    </ul>
  </behavior>
  <specific-cases>
    <ul>
      <li>
        <line>
          <text>If the "wait for reinforcement" parameter is set to "true" (default vlaue is 'FALSE') the agent waits for reinforcement before visiting the next objective.</text>
        </line>
      </li>
      <li>
        <line>
          <text>At any times, the user can order the agent to visit the next objective by issuing the </text>
          <bold>
            <text>"Go to next objective</text>
          </bold>
          <text>" fragmentary order . If this order is issued when the agent is working on the last objective, the agent moves to the meeting position.</text>
        </line>
      </li>
    </ul>
  </specific-cases>
  <comments/>
  <mission-end>
    <line>
      <text>The meeting point is attained.</text>
    </line>
  </mission-end>
  <attachments/>
</mission-sheet>
