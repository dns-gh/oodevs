-- **************************************************************************** 
-- MoveAndReconnoiter elements.
-- self.params.entities: the reconnoitrable elements
-- self.params.positions: the reconnoitring elements
-- ****************************************************************************
rootnode
{
    connections = { skill.links.moveTo, skill.links.reconnoitre, skill.links.observeToward },

    -- -------------------------------------------------------------------------------- 
    -- Node begins: store each objective in a table
    -- --------------------------------------------------------------------------------
    create = function( self )
        -- work only on unrecognized elements
        self.unRecognizedEntities = {}
        for _, entity in ipairs( self.params.entities ) do
            self.unRecognizedEntities[ entity ] = true
        end
    end,

    -- -------------------------------------------------------------------------------- 
    -- Reconnoiter the nearest unrecognized element 
    -- --------------------------------------------------------------------------------
    activate = function( self )
        if not next( self.unRecognizedEntities ) then Feedback( self.feedbacks.done ) return end
        
        local nearest = next( self.unRecognizedEntities )
        for entity in pairs( self.unRecognizedEntities ) do
          nearest = entity:proximityLevel() > nearest:proximityLevel() and entity or nearest
        end
        
        if nearest:perceptionLevel() > 25 then
            Activate( skill.links.reconnoitre, 1, { entities = { nearest }, positions = self.params.reconnoiteringPositions } )
        else
            Activate( skill.links.observeToward, 1, { entities = { nearest }, positions = self.params.observingPositions } )
        end
    end
}