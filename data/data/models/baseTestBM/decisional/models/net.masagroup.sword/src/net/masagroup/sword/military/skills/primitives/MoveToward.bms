-- **************************************************************************** 
-- Move toward reachable entities
-- self.params.entity: the reachable elements
-- self.params.area: the reaching elements
-- ****************************************************************************
rootnode
{
    connections = { skill.nodes.MoveTowardElement };

    -- -------------------------------------------------------------------------------- 
    -- Main effect is reached: send feedback with the position occupied, when 
    -- objectives are reached
    -- --------------------------------------------------------------------------------
    done = function( self, params, additionnalParams )
        BreakForDebug("call done in rootnodee from moveToward")
        if additionnalParams.state == "posted" then
            BreakForDebug("poster callback")
            Feedback( self.feedbacks.done, { position = additionnalParams.position, state = additionnalParams.state } )
        end
    end,

    -- -------------------------------------------------------------------------------- 
    -- For each objective of the skill, move toward it. 
    -- --------------------------------------------------------------------------------
    activate = function( self )
        for _, entity in pairs( self.params.entities ) do
            Activate( skill.nodes.MoveTowardElement, entity:reachPriority(), { entity = entity, positions = self.params.positions[entity] } )
        end
    end
}

-- **************************************************************************** 
-- Simple movement straight toward the objective 
-- ****************************************************************************
node "MoveTowardElement"
{
    connections = { skill.links.moveAndTakePosition, skill.links.observe };
    feedbacks =  { "done" }; 

    -- -------------------------------------------------------------------------------- 
    -- Main effect is done: reach the reachable element (objective) 
    -- --------------------------------------------------------------------------------
    done = function( self, params, additionnalParams )
        Feedback( self.feedbacks.done, { position = additionnalParams.position, state = additionnalParams.state } )
    end,

    -- -------------------------------------------------------------------------------- 
    -- Move toward the objective using the skill MoveAndTakePosition
    -- --------------------------------------------------------------------------------
    activate = function( self )
        Activate( skill.links.observe, 1, { entity = self.params.entity } )
        for _, keypoint in pairs( self.params.positions ) do
            Activate( skill.links.moveAndTakePosition, keypoint:reachEfficiency( self.params.entity ), { entity = keypoint } )
        end
    end
}