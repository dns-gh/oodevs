-- **************************************************************************** 
-- ReconnaitreZoneDeploiement
-- ****************************************************************************
rootnode 
{
    connections = { skill.links.moveToward, skill.links.dismount, skill.nodes.Deploy },

    done = function( self )-- from moveAndTakePosition
        Feedback( self.feedbacks.done )
    end,
    
    deployed = function( self )
        self.nextTargetIndex = self.nextTargetIndex + 1
        if self.nextTargetIndex > #self.params.objectives then
          if self.params.meetingPoint == NIL then
            Feedback( self.feedbacks.done )
          else
            self.isDeployed = true
          end
        end
    end,
    
    create = function( self ) 
       self.nextTargetIndex = 1
       self.reconnoitered = false
       self.isDeployed = false
       meKnowledge:sendConstructedObjectInitialized( integration.GetSuperiorKnowledge( meKnowledge) )
    end,

    activate = function( self )
        local Activate = Activate
        
        local objective = self.params.objectives[ self.nextTargetIndex ]
        
        if self.isDeployed then
          Activate( skill.links.moveToward, 1, { entities = { self.params.meetingPoint }, 
                                                 positions = { self.params.meetingPoint } } )
          return
        else        
          if objective:isReached() then
            Activate( skill.links.dismount, 1 )
            if self.reconnoitered then
              Activate( skill.nodes.Deploy, 1, { area = objective }  )
            elseif waitInMin( self, 60 ) then -- Waiting for 1h
                self.reconnoitered = true
                if self.params.meetingPoint ~= NIL then
                  if self.isDeployed then
                      Feedback( self.feedbacks.done)
                  end
                end
             end          
          else
             Activate( skill.links.moveToward, 1 , { entities = { objective:getMyPosition() }, 
                                                   positions = { objective:getMyPosition() } } )
          end
        end
        self.isDeployed = false
    end,
}


-- **************************************************************************** 
-- Deploy: 
-- ****************************************************************************
node "Deploy"
{
    feedbacks = { "deployed" },
    
    create = function( self ) 
      self.implantationObjects = integration.getImplantationObjects( self.params.area, 2 )
      self.nbBuilded = 0
    end,
    
    select = function( self )
    
      if self.nbBuilded == #self.implantationObjects then
           Feedback( self.feedbacks.deployed )
           return
      end
      for _, object in pairs( self.implantationObjects ) do
          if not object:isBuilt() then
              object:buildIt()
           else
            meKnowledge:sendConstructedObject( integration.GetSuperiorKnowledge( meKnowledge), object.knowledge )
            self.nbBuilded = self.nbBuilded + 1 
          end
      end
    end
}