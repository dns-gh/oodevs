-- **************************************************************************** 
-- Produire
-- ****************************************************************************
rootnode 
{
    connections = { skill.links.moveToward, skill.nodes.LinkToNetwork, skill.nodes.CR_ProduceImpossible, skill.links.dismount },
    
   -- -------------------------------------------------------------------------------- 
    -- Feedbacks
    -- --------------------------------------------------------------------------------
    linked = function( self )
        self.produceNotStarted = false
        Feedback( self.feedbacks.done ) -- main effect is done once the network is linked
    end,
    done = function( self ) -- done from moveToward
        self.arrived = true
    end,

    -- -------------------------------------------------------------------------------- 
    -- Init
    -- --------------------------------------------------------------------------------
    create = function( self )
        self.arrived = false
        self.produceNotStarted = true
    end,

    -- -------------------------------------------------------------------------------- 
    -- MoveToNetWork and destroy it.
    -- --------------------------------------------------------------------------------
    activate = function( self )
        local Activate = Activate
        if self.arrived then
            if self.produceNotStarted then
                Activate( skill.links.dismount, 1 )
                Activate( skill.nodes.LinkToNetwork, 1, { resource = self.params.resource } )
            end
        else
            if not self.produceNotStarted then
                self.params.resource:stopProduceResource( )
                meKnowledge:RC( eRC_FinProducePoint )
                self.produceNotStarted = true
            end
        end
        
        Activate( skill.links.moveToward, 1, { entities = { self.params.resource } } )
        self.arrived = false
    end,
    
    -- -------------------------------------------------------------------------------- 
    -- End of behavior
    -- --------------------------------------------------------------------------------
    destroy = function( self )
        self.params.resource:stopProduceResource( )
        meKnowledge:RC( eRC_FinProducePoint )
    end
}

-- **************************************************************************** 
-- LinkToNetwork
-- ****************************************************************************
node "LinkToNetwork"
{
    feedbacks = { "linked" },

    select = function( self )
        if self.params.resource:startProduceResource( ) then
            meKnowledge:RC( eRC_MiseEnPlaceProducePoint )
            Feedback( self.feedbacks.linked )
        end
    end
}

-- ****************************************************************************
-- CR
-- ****************************************************************************
node "CR_ProduceImpossible"
{
    create = function( self )
        meKnowledge:RC( eRC_ProduceImpossible )
    end
}