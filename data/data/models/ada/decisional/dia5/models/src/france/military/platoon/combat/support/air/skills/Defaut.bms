rootnode 
{
    connections = 
    {
        skill.nodes.SafetyAttitude,
        skill.nodes.CR 
    },
    -- -------------------------------------------------------------------------------- 
    -- Init
    -- --------------------------------------------------------------------------------
    create = function( self )
        myself.speedModulation = myself.speedModulation or {}
        integration.deactivateSensors()
    end,
    
    activate = function( self )
        local Activate = Activate
        if myself.safetyAttitude == eAmbianceMission_Safety then -- POSTURE SURETE
            Activate( skill.nodes.SafetyAttitude, 1 )
        else -- POSTURE VITESSE
            myself.speedModulation.switchOnCoverMode = 1
        end
        if meKnowledge.source:GetbMiseEnOeuvre_() then
            Activate( skill.nodes.CR, 1, { RC = eRC_DroneDisponible } )
        end
            if meKnowledge.source:GetbEnExploitation_() then
            Activate( skill.nodes.CR, 1, { RC = eRC_DroneEnExploitation } )
            --add a verification when drone is exploited
            --else 
            --Activate( skill.nodes.CR, 1, { RC = eRC_DroneExploite } )
        end
    end
}

-- **************************************************************************** 
-- SafetyAttitude
-- ****************************************************************************
node "SafetyAttitude"
{
    select = function( self )
        meKnowledge:adoptSafetyAttitude()
    end
}
-- **************************************************************************** 
-- CR 
-- ****************************************************************************
node "CR"
{
    create = function( self )
        meKnowledge:RC( self.params.RC )
    end,
}