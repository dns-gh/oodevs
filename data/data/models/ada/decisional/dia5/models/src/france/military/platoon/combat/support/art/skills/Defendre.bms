rootnode {

    connections = { skill.links.intercepterMissile, skill.links.moveTo, skill.links.dismount },
    
    done = function(self) -- frome moveTo
        self.arrived = true
    end,

    create = function (self )
        self.positions = {self.params.position}
        if self.params.position ~= NIL then
            self.positions = {self.params.position}
        elseif self.params.zone ~= NIL then
            self.positions = {self.params.zone}
        elseif self.params.entities ~= NIL then
            self.positions = self.params.entities
        else
            self.positions = {meKnowledge:getMyPosition()}
        end
        self.direction = sword.military.queries.miscellaneous.getMissionDirection[ "execute" ]()
        self.arrived = false
    end,

    activate = function (self )
        local Activate = Activate
        if self.arrived then
            Activate( skill.links.dismount, 1)
            self.ennemies = france.military.platoon.combat.support.art.queries.getFlyingEnemies[ "execute" ]()
            for i=1, #self.ennemies do
                distance = integration.distance( meKnowledge, self.ennemies[i] )
                if self.params.typeDeploiement == eEtatDeploiement_directionnel then
                    if integration.connaissanceAgentEstAPorteDeCapteurDansCone( self.ennemies[i], self.direction[1], MISTRAL_ANGLE_OUVERTURE_DIRECTIONEL ) then
                       Activate( skill.links.intercepterMissile, 1, { enemy = self.ennemies[i], percentageEquipement = 1, ph = self.params.ph, projectileSpeed = M_MODELE_VITESSE_MISSILE_MISTRAL } )
                    else
                       Activate( skill.links.intercepterMissile, 1, { enemy = self.ennemies[i], percentageEquipement = 0.17, ph = self.params.ph, projectileSpeed = M_MODELE_VITESSE_MISSILE_MISTRAL } )
                    end
                elseif self.params.typeDeploiement == eEtatDeploiement_omnidirectionnel then
                    if( distance >= 3000 ) then
                       Activate( skill.links.intercepterMissile, 1, { enemy = self.ennemies[i], percentageEquipement = 0.34, ph = self.params.ph, projectileSpeed = M_MODELE_VITESSE_MISSILE_MISTRAL } )
                    else
                       Activate( skill.links.intercepterMissile, 1, { enemy = self.ennemies[i], percentageEquipement = 0.67, ph = self.params.ph, projectileSpeed = M_MODELE_VITESSE_MISSILE_MISTRAL } )
                    end
                end
            end
        end
        Activate( skill.links.moveTo, 1, { entities = self.positions } )
        self.arrived = false
    end,

}