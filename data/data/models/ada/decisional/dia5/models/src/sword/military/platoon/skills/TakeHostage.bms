-- **************************************************************************** 
-- Take hostage
-- This skill uses the 'load' skill to transport the hostage. Once, loaded, 
-- it simply uses a specific action the change the unit status as an hostage.
-- ****************************************************************************
rootnode
{
    connections = { skill.nodes.CaptureHostage, skill.links.load },

    -- -------------------------------------------------------------------------------- 
    -- Feedbacks
    -- --------------------------------------------------------------------------------
    captured = function( self )
        Feedback( self.feedbacks.done ) -- main effect is done once the unit is captured
    end,
    done = function( self ) -- done from moveToward
        self.arrived = true
    end,

    -- -------------------------------------------------------------------------------- 
    -- Init
    -- --------------------------------------------------------------------------------
    create = function( self )
        self.arrived = false
    end,

    -- -------------------------------------------------------------------------------- 
    -- Load the unit (move toward loading position dans load the element) et cpature it.
    -- --------------------------------------------------------------------------------
    activate = function( self )
        local Activate = Activate

        if self.arrived then
            Activate( skill.nodes.CaptureHostage, 1, { unit = self.params.unit } )
        end
        Activate( skill.links.load, 1, { entities = { self.params.unit}, 
                        positions = { self.params.unit:getMyPosition() } } )
        self.arrived = false
    end
}

-- **************************************************************************** 
-- CaptureHostage
-- ****************************************************************************
node "CaptureHostage"
{
    feedbacks = { "captured" },

    create = function( self )
        if self.params.unit:takeAsHostage() then
            self.params.unit.desactiveSelfProtection = true -- $$$ MIA temp?
            Feedback( self.feedbacks.captured )
       end
    end,
}