-- **************************************************************************** 
-- GetDecon
-- Usue motoward
-- ****************************************************************************
rootnode
{
    connections = { skill.links.moveToward, skill.nodes.RequestDecontamination },

    -- -------------------------------------------------------------------------------- 
    -- feedback from moveToward
    -- --------------------------------------------------------------------------------
    done = function( self, params, additionnalParams )
        self.arrived = true
    end,

    -- -------------------------------------------------------------------------------- 
    -- Init 
    -- --------------------------------------------------------------------------------
    create = function( self )
        self.arrived = false
        self.plots = {}
        for _, plot in pairs( self.params.objectives ) do
            self.plots[ plot ] = true
        end
         -- Find nearest decontamination plot
        self.nearestPlot = next( self.plots )
        for plot in pairs( self.plots ) do  -- select the nearest element
            self.nearestPlot = plot:proximityLevel() > self.nearestPlot:proximityLevel() and plot or self.nearestPlot
        end
        Activate( skill.nodes.RequestDecontamination, 1, { entity = self.nearestPlot } )
    end,
    -- -------------------------------------------------------------------------------- 
    -- Select nearest plot and move toward it, asking for decontamination
    -- --------------------------------------------------------------------------------
    activate = function( self )
        local Activate = Activate

        -- main effect is done: beeing decontaminated.
        if not meKnowledge:isContaminated() then
            Feedback( self.feedbacks.done )
            return
        end
        -- Movetoward nearest plot, and ask for decontamination if arrived.
        
        if not self.arrived then
            Activate( skill.links.moveToward, 1, { entities = { self.nearestPlot } } )
        end
        
    end
}

-- **************************************************************************** 
-- Ask for decontamination
-- ****************************************************************************
node "RequestDecontamination"
{
    select = function( self )
        self.params.entity:requestDecontamination()
    end
}