-- **************************************************************************** 
-- Move toward reachable entities
-- self.params.entities: the reachable elements
-- ****************************************************************************
rootnode
{
    connections = { skill.links.moveToward },

    -- -------------------------------------------------------------------------------- 
    -- Main effect is reached: send feedback with the position occupied, when 
    -- objectives are reached
    -- --------------------------------------------------------------------------------
    done = function( self, params, additionalParams )
        Feedback( self.feedbacks.done, additionalParams )
    end,

    -- -------------------------------------------------------------------------------- 
    -- Init:get positions to reach the entities issued as paramters
    -- --------------------------------------------------------------------------------
    create = function( self )

        if not self.params.avoidObstacles then
            self.pathType = eTypeItiDeminage
        elseif self.params.infiltrationMode then
            self.pathType = eTypeItiInfiltration 
        elseif self.params.criminalMoving then
            self.pathType = eTypeItiCriminal
        else
            self.pathType = eTypeItiMouvement
        end
        self.entities = {}
        if self.params.entities then
            for _, entity in pairs ( self.params.entities ) do
                if entity ~= NIL then
                    self.entities[ #self.entities + 1] = entity
                end
            end
        end
        if #self.entities < 1 then
            self.entities = { meKnowledge:getMyPosition() }
        end
        self.positions = sword.military.queries.tactical.getPositionsToReach[ "execute" ](
                                             { elementsToReach = self.entities } )
    end,

    -- -------------------------------------------------------------------------------- 
    -- Movement toward the objectives
    -- --------------------------------------------------------------------------------
    activate = function( self )
        local Activate = Activate
        Activate( skill.links.moveToward, 1, { entities  = self.entities , 
                                               positions = self.positions, 
                                               pathType = self.pathType } )
    end
}