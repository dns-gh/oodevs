<?xml version="1.0" encoding="UTF-8"?>
<interface xmlns="http://www.masagroup.net/directia/schemas/bm" name="sword.military.knowledge.decisional.Activable" source-version="1.0.0" extends="sword.military.knowledge.decisional.Reachable">
  <description>Représente tout élément de connaissance activable.

    L'activation d'un élément de connaissance permet de déclencher une propriété particulière de l'entité.
    Il peut s'agir, par exemple, de l'activation d'un obstacle (obstacle de manoeuvre), d'une bombe, d'un checkpoint etc.
    </description>
  <methods>
    <method name="activationPriority">
      <description>Renvoie la priorité de l'élément de connaissance pour son activation.

            Cette priorité est calculée en fonction de la distance séparant l'agent et l'élément activable. Cette priorité peut également
            dépendre de la nature même de l'élement.
            Exemple : l'activation d'obstacles de manoeuvre peut être prioritaire sur tout autre élément activable </description>
      <return>
        <type>
          <simple name="numeric"/>
        </type>
      </return>
    </method>
    <method name="canActivateIt">
      <description>Renvoie vraie si les conditions d'activation sont réunies.</description>
    </method>
    <method name="activateIt">
      <description>Action d'activation de l'élément.

            Cette action permet à un agent d'activer la propriété particulière de l'élément.
            La désactivation de l'élément est effective par defaut, cela signifie que la non-activation d'un élément revient à désactiver la propriété particulière de l'objet.
            Exemples : l'activation d'une station d'émission, d'un plot de décontamination etc. </description>
    </method>
    <method name="activationLevel">
      <description>Le niveau d'activation de l'objet.</description>
      <return>
        <type>
          <simple name="numeric"/>
        </type>
      </return>
    </method>
  </methods>
  <predicates>
    <predicate name="isActivated">
      <description>Return trie if the knowledge is activated</description>
    </predicate>
    <predicate name="isDisactivated">
      <description>Return trie if the knowledge is activated</description>
    </predicate>
  </predicates>
</interface>