-- **************************************************************************** 
-- ReactToCrowds.
-- self.params.crowds: the crowds
-- ****************************************************************************
rootnode
{
    connections = 
    {
        skill.links.respondToCrowd,
        skill.links.moveToward,
    },

    -- -------------------------------------------------------------------------------- 
    -- Feedbacks
    -- --------------------------------------------------------------------------------
    done = function( self, params ) -- from movetoward
        self.position = integration.getSafetyPositionFromCrowd( self.params.crowds[ 1 ], 1000 ) -- Init.
    end,

    -- -------------------------------------------------------------------------------- 
    -- ReactToCrowds
    -- only agressive crowd on my position. Once the unit is outiside the attacking 
    -- crowd, the rule isAttacking is false, means the unit stops.
    -- --------------------------------------------------------------------------------
    activate = function( self )
        local Activate = Activate
        for _, crowd in pairs( self.params.crowds ) do
            if crowd:isAgressive() and not crowd:isDominated() then
                if meKnowledge:fireForbiddenOnCrowd() then -- any kind of intervention is not allowed
                    -- Leave crowd
                    self.position = self.position or integration.getSafetyPositionFromCrowd( crowd, 1000 )
                    if self.position then
                        Activate( skill.links.moveToward, 1, { entities  = { self.position } } ) 
                    end
                else -- choose appropriate reponse regarding to orders
                    Activate( skill.links.respondToCrowd, 1,{ crowd = crowd } ) -- intervene in the crowd
                end
            end
        end
    end
}