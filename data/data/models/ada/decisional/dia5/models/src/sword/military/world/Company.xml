<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://www.masagroup.net/directia/schemas/bm" name="sword.military.world.Company" source-version="1.0.0">
	<description>Représente une compagnie AMIE ou ma propre compagnie.</description>
	<realizes>directia.core.model.RoleBody</realizes>
	<realizes>sword.military.knowledge.decisional.Reinforcable</realizes>
	<realizes>common.Body</realizes>
	<realizes>sword.military.knowledge.decisional.Supportable</realizes>
	<methods>
		<method name="RC">
			<description>Action de rendre compte.</description>
			<argument>
				<type>
					<simple name="numeric"/>
				</type>
			</argument>
			<argument>
				<type>
					<class name="directia.core.Object"/>
				</type>
			</argument>
			<argument>
				<type>
					<class name="directia.core.Object"/>
				</type>
			</argument>
		</method>
		<method name="sendTaskToPion">
			<description>__INTEGRATION : envoyer une mission d'un automate vers un autre pion du même groupe de communication.</description>
			<argument>
				<description>Unité recevant l'ordre</description>
				<type>
					<class name="sword.military.knowledge.decisional.Commanding"/>
				</type>
			</argument>
			<argument>
				<description>Le nom de la mission</description>
				<type>
					<simple name="string"/>
				</type>
			</argument>
			<argument>
				<description>Les paramètres de la missions</description>
				<type>
					<list>
						<class name="directia.core.Object"/>
					</list>
				</type>
			</argument>
		</method>
		<method name="sendFragOrder">
			<description>Envoyer un ordre de conduite d'un automate vers un pion.</description>
			<argument>
				<description>Unité recevant l'ordre</description>
				<type>
					<class name="sword.military.knowledge.decisional.Commanding"/>
				</type>
			</argument>
			<argument name="fragOrder">
				<description>L'ordres de conduite à propager</description>
				<type>
					<class name="sword.military.knowledge.FragOrder"/>
				</type>
			</argument>
		</method>
		<method name="slowDownSyncronisation">
			<description>Envoie d'un signal vers un pion de ralentir pour syncroniser la vitesse des pions</description>
			<argument name="receiver">
				<type>
					<class name="sword.military.knowledge.decisional.Commanding"/>
				</type>
			</argument>
		</method>
		<method name="continueSyncronisation">
			<description>Envoie d'un signal vers un pion de reprendre vitesse pour syncroniser la vitesse des pions</description>
			<argument name="receiver">
				<type>
					<class name="sword.military.knowledge.decisional.Commanding"/>
				</type>
			</argument>
		</method>
		<method name="getFuseau">
			<description>Donne accès à la connaissance du Fuseau de la companie</description>
			<return>
				<type>
					<class name="sword.military.world.Fuseau"/>
				</type>
			</return>
		</method>
		<method name="getPosition">
			<description>Fonction d'intégration</description>
		</method>
		<method name="getMyPosition">
			<description>Fonction d'intégration retournant un Point qui a pour coordonnées ma position.</description>
			<return>
				<type>
					<class name="sword.military.knowledge.decisional.Reachable"/>
				</type>
			</return>
		</method>
		<method name="isNearby">
			<description> Utilisée dans les requêtes ou dans les méthodes utilisées dans les comportements.
            
            Renvoie vrai si la connaissance est proche de l'agent.
            </description>
			<return>
				<type>
					<simple name="boolean"/>
				</type>
			</return>
		</method>
		<method name="isDistant">
			<description> Utilisée dans les requêtes ou dans les méthodes utilisées dans les comportements.
            
            Renvoie vrai si la connaissance est distante de l'agent.
            </description>
			<return>
				<type>
					<simple name="boolean"/>
				</type>
			</return>
		</method>
		<method name="isReached">
			<description>Retourne vrai si la connaissance est atteinte.</description>
			<return>
				<type>
					<simple name="boolean"/>
				</type>
			</return>
		</method>
		<method name="proximityLevel">
			<description>Le niveau de proximité de l'élément, à vol d'oiseau.
          
          Un déplacement rapide permet par exemple d'atteindre l'élément.
          </description>
			<return>
				<type>
					<simple name="numeric"/>
				</type>
			</return>
		</method>
		<method name="getProximity">
			<description>__INTEGRATION</description>
			<argument name="objective">
				<description>L'élément objectif</description>
				<type>
					<class name="sword.military.world.Element"/>
				</type>
			</argument>
		</method>
		<method name="observeIt" abstract="false">
			<description>Action d'observation de l'élément.
            Cette action permet à l'agent d'observer l'élément. Pour un individu, il peut s'agir d'une orientation simple des senseurs, sans se soucier 
            de l'efficacité du senseur pour l'indentification de l'élément. Pour une entité de plus haut niveau (équipe ou groupe) il s'agit de 
            l'effort d'observation vers l'élément (direction principale d'observation vers l'élément).
            </description>
		</method>
		<method name="reinforcementPriority">
			<description>Renvoie la priorité de l'élément de connaissance pour son renforcement.</description>
			<return>
				<type>
					<simple name="numeric"/>
				</type>
			</return>
		</method>
		<method name="canReinforceIt">
			<description>Renvoie vraie si les conditions de renforcement sont réunies.</description>
			<return>
				<type>
					<simple name="boolean"/>
				</type>
			</return>
		</method>
		<method name="reinforceIt">
			<description>Action de renforcement de l'élément.</description>
			<return>
				<type>
					<simple name="boolean"/>
				</type>
			</return>
		</method>
		<method name="reinforcementLevel">
			<description>Le niveau de renforcement de l'élément.</description>
			<return>
				<type>
					<simple name="numeric"/>
				</type>
			</return>
		</method>
		<method name="hasPionsInDanger">
			<description>Retourne vrai s'il y au moins un pion en danger (de rapport de force faible) parmi les pions en paramètre</description>
			<argument name="entities">
				<type>
					<list>
						<class name="sword.military.world.PlatoonAlly"/>
					</list>
				</type>
			</argument>
			<return>
				<type>
					<list>
						<class name="sword.military.world.PlatoonAlly"/>
					</list>
				</type>
			</return>
		</method>
		<method name="getTasks" abstract="false">
			<return>
				<type>
					<list>
						<class name="common.Task"/>
					</list>
				</type>
			</return>
		</method>
		<method name="moveToIt" abstract="false">
			<description>Action de se déplacer vers l'élément.&#xD;
&#xD;
            Cette action permet à l'agent de se déplacer de façon simple vers l'élément. Cette implémentation fait bouger l'agent vers le pion PC de la company.&#xD;
      </description>
			<argument name="pathType">
				<description>Le paramètrage du calcul de l'itinéraire</description>
				<type>
					<simple name="numeric"/>
				</type>
			</argument>
			<return>
				<type>
					<simple name="boolean"/>
				</type>
			</return>
		</method>
		<method name="accessibilityLevel" abstract="false">
			<description>Le niveau d'atteignabilité de l'élément, en rapport avec les capacités de mouvement.</description>
			<return>
				<type>
					<simple name="numeric"/>
				</type>
			</return>
		</method>
		<method name="supportPriority" abstract="false">
			<description>Renvoie l'intérêt de l'élément pour être appuyé.</description>
			<return>
				<type>
					<simple name="numeric"/>
				</type>
			</return>
		</method>
		<method name="hostilityLevel" abstract="false">
			<description>Le niveau d'hostilité de l'élément.

          Ce niveau d'hostilité peut être calculé en fonction d'une matrice de diplomatie.</description>
			<return>
				<type>
					<simple name="numeric"/>
				</type>
			</return>
		</method>
		<method name="reachPriority" abstract="false">
			<description>Renvoie la priorité d'atteinte de cet élément.</description>
			<return>
				<type>
					<simple name="numeric"/>
				</type>
			</return>
		</method>
		<method name="isFriend" abstract="false">
			<description>Utilisée dans les requêtes ou dans les méthodes utilisées dans les comportements.

            Renvoie vrai si la connaissance est considéré comme étant amicale.
            </description>
			<return>
				<type>
					<simple name="boolean"/>
				</type>
			</return>
		</method>
		<method name="isNeutral" abstract="false">
			<description>Utilisée dans les requêtes ou dans les méthodes utilisées dans les comportements.

            Renvoie vrai si la connaissance est considéré comme étant neutre.
            </description>
			<return>
				<type>
					<simple name="boolean"/>
				</type>
			</return>
		</method>
		<method name="isSupported" abstract="false">
			<description>Renvoie vrai si l'entité est appuyée.</description>
			<return>
				<type>
					<simple name="boolean"/>
				</type>
			</return>
		</method>
		<method name="observationPriority" abstract="false">
			<description>Renvoie la priorité de l'élément pour son observation. L'élément le plus près sera avantagé suivant
                les capacités des senseurs de l'agent</description>
			<return>
				<type>
					<simple name="numeric"/>
				</type>
			</return>
		</method>
		<method name="perceptionLevel" abstract="false">
			<description>Le niveau de perception de la connaissance par l'agent.</description>
			<return>
				<type>
					<simple name="numeric"/>
				</type>
			</return>
		</method>
		<method name="destroyMoveToIt" abstract="false"/>
		<method name="getForceRatioAgent" abstract="false">
			<description>Renvoie le rapport de force de l'unité en paramètre: un nombre entre 0 et 100 (100 pour un rapport de force fort, et 0 pour un rapport de force faible)</description>
			<argument name="pion">
				<type>
					<class name="sword.military.world.PlatoonAlly"/>
				</type>
			</argument>
			<return>
				<type>
					<simple name="numeric"/>
				</type>
			</return>
		</method>
		<method name="setROE" abstract="false">
            <description>Change l'état courant du ROE de l'automate </description>
        </method>
        <method name="shareKnowledge">
            <description>Transmet les informations connues a l'automate</description>
            <argument name="delay">
                <description>Temps mis pour transmettre l'information.</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
	</methods>
	<predicates>
		<predicate name="isReinforced">
			<description> Utilisée dans les requêtes ou dans les méthodes utilisées dans les comportements.

            Renvoie vrai si la connaissance est considérée comme renforcé à son potentiel maximum.
            </description>
		</predicate>
		<predicate name="isCommanding"/>
		<predicate name="isContaminated"/>
        <predicate name="isPoisoned"/>
		<predicate name="isFar" abstract="false">
			<description> Utilisée dans les requêtes ou dans les méthodes utilisées dans les comportements.&#xD;
            &#xD;
            Renvoie vrai si la connaissance est éloignée de l'agent.&#xD;
            </description>
		</predicate>
		<predicate name="isHostile" abstract="false">
			<description>Utilisée dans les requêtes.
            Renvoie vrai si la connaissance est considéré comme étant hostile.
            </description>
		</predicate>
		<predicate name="isPerceived" abstract="false"/>
	</predicates>
	<attributes>
		<attribute name="tasks">
			<type>
				<list>
					<class name="common.Task"/>
				</list>
			</type>
		</attribute>
	</attributes>
</class>