-- **************************************************************************** 
-- Attack a unit or crowds on the objective
-- self.params.objective: the element to attack or to reach
-- ****************************************************************************
rootnode
{
    connections = { skill.links.moveTo, skill.nodes.Attack, skill.nodes.CR_AgressionImpossible },


    done = function( self ) end,

    -- -------------------------------------------------------------------------------- 
    -- Init --> set agressive attitude to attack the objective
    -- user will be able, during the mission to change himself the attitude.
    -- --------------------------------------------------------------------------------
    create = function( self, params )
        meKnowledge:adoptAgressiveAttitude()
    end,

    -- -------------------------------------------------------------------------------- 
    -- Movement and attack objectif
    -- --------------------------------------------------------------------------------
    activate = function( self )
        local Activate = Activate
        
        -- crowd is dominated, cannot commit agression
        if meKnowledge:isDominated() then
            Activate( skill.nodes.CR_AgressionImpossible, 1 )
            Feedback( self.feedbacks.done )
        end
        
        Activate( skill.links.moveTo, 1, { entity = self.params.objective } )

        -- once entity is reached attack it.
        if self.params.objective:isReached() then
            Activate( skill.nodes.Attack, 1, { objective = self.params.objective } )
        end
    end
}

-- ****************************************************************************
-- Attack action 
-- ****************************************************************************
node "Attack"
{
    select = function( self )
        self.params.objective:attackIt()
    end
}

-- ****************************************************************************
-- CR
-- ****************************************************************************
node "CR_AgressionImpossible"
{
    create = function( self )
        meKnowledge:RC( eRC_AgressionImpossible )
    end
}