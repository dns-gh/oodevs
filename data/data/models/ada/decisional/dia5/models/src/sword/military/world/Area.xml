<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://www.masagroup.net/directia/schemas/bm" name="sword.military.world.Area" source-version="1.0.0" extends="sword.military.world.KeyPoint">
    <description>Une connaissance concrète représentant une zone à rejoindre.</description>
    <realizes>sword.military.knowledge.decisional.Reconnoitrable</realizes>
    <realizes>sword.military.knowledge.decisional.Approachable</realizes>
    <realizes>sword.military.knowledge.decisional.Approaching</realizes>
    <realizes>sword.military.knowledge.decisional.Reaching</realizes>
    <realizes>sword.military.knowledge.decisional.Reconnoitring</realizes>
    <realizes>sword.military.knowledge.decisional.Observing</realizes>
    <realizes>sword.military.knowledge.Controlable</realizes>
    <realizes>sword.military.knowledge.Sealable</realizes>
    <realizes>sword.military.knowledge.Searchable</realizes>
    <realizes>sword.military.knowledge.decisional.Supporting</realizes>
    <methods>
        <method name="destructionEfficiency">
            <description>Le niveau d'efficacité de la connaissance pour son utilisation dans la destruction de l'objectif</description>
            <argument name="objective">
                <description>L'objectif à détruire.</description>
                <type>
                    <class name="sword.military.knowledge.decisional.Destroyable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="getLocalisation">
            <description>Retourne la localisation de la zone.</description>
        </method>
        <method name="affectMobility">
            <argument name="affectionType">
                <type>
                    <simple name="numeric"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="neutralizationEfficiency">
            <description>L'efficacité de la connaissance pour la neutralisation de l'objectif.</description>
            <argument name="objective">
                <description>L'objectif à neutraliser</description>
                <type>
                    <class name="sword.military.knowledge.decisional.Neutralizable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="getPositions">
            <description>Fonction d'intégration retournant une liste de MT_Vector2D. La barycentre de la zone se trouvant dans un bloc urbain non trafficable, on retourne une position proche de ce BU.</description>
        </method>
        <method name="getTraficabilityLevelFor">
            <argument>
                <type>
                    <class name="sword.military.world.PlatoonAlly"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="computeMovementCapability">
            <description>__INTEGRATION</description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="computeRelation">
            <description>__INTEGRATION</description>
            <argument name="objective">
                <description>L'unité avec laquelle on veut calculer sa relation de diplomatie</description>
                <type>
                    <class name="sword.military.knowledge.decisional.Observable"/>
                </type>
            </argument>
            <return>
                <description>Retourne la valeur de la relation entre 0 et 100</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="getProximity">
            <description>__INTEGRATION</description>
            <argument name="objective">
                <description>L'élément objectif</description>
                <type>
                    <class name="sword.military.knowledge.decisional.Reachable"/>
                </type>
            </argument>
        </method>
        <method name="getPerception">
            <description>__INTEGRATION</description>
            <return>
                <description>Retourne la valeur de la perception de l'element par l'agent entre 0 et 100.</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="getPosition">
            <description>Fonction d'intégration retournant un MT_Vector2D. Renvoi le barycentre de la zone si ce point est trafficable. Si cepoint est dans un BU non trafficable, on renvoi un point autour de ce BU.</description>
        </method>
        <method name="getMyPosition">
            <description>Fonction d'intégration retournant un Point qui a pour coordonnées ma position.</description>
            <return>
                <type>
                    <class name="sword.military.knowledge.decisional.Reachable"/>
                </type>
            </return>
        </method>
        <method name="observationEfficiency">
            <description>Renvoie l'efficacité (la pertinence) de la position pour l'observation de l'objectif.</description>
            <argument name="objectives">
                <description>L'objectif à observer.</description>
                <type>
                    <class name="sword.military.knowledge.decisional.Observable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="approachEfficiency">
            <description>Renvoie l'efficacité (la pertinence) de la position pour approcher tactiquement l'objectif</description>
            <argument name="objectives">
                <description>L'objectif à approcher.</description>
                <type>
                    <class name="sword.military.knowledge.decisional.Approachable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="approachPriority">
            <description>
                Renvoie la priorité du déplacement vers cet élément.

                Cette priorité est calculée en fonction de la distance séparant l'agent et l'élément à approcher. Cette
                priorité peut également dépendre de la nature même de l'élément.
           </description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="canApproachIt">
            <description>Renvoie vrai si les conditions d'approche vers l'élément sont réunies.</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="getReconnaissanceState">
            <description>__INTEGRATION</description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="reconnaissancePriority">
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="searchIt">
            <description>Action de ratissage de l'élément.</description>
        </method>
        <method name="RecoNBC" abstract="false">
            <description>Action de reconnaissance NBC de l'élément.</description>
        </method>
        <method name="canReconnoitreIt">
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="computeSupportCapabilityFor">
            <argument name="entity">
                <type>
                    <class name="sword.military.world.PlatoonAlly"/>
                </type>
            </argument>
            <argument name="position">
                <type>
                    <class name="sword.military.knowledge.decisional.Positionable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="computePerceptionCapabilityFor">
            <description>__INTEGRATION</description>
            <argument name="entity">
                <description>L'unité observant</description>
                <type>
                    <class name="sword.military.world.PlatoonAlly"/>
                </type>
            </argument>
            <argument name="position">
                <description>L'élément position à partir duquel on veut observer l'élément</description>
                <type>
                    <class name="sword.military.knowledge.decisional.Positionable"/>
                </type>
            </argument>
            <return>
                <description>Retourne la valeur de la perception d'un élément par l'unité entre 0 et 100</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="sealOffIt">
            <description>Boucle l'objectif</description>
        </method>
        <method name="destroyMoveToIt" abstract="false"/>
        <method name="moveToIt">
            <description>Action de se déplacer vers l'élément.

            Cette action permet à l'agent de se déplacer de façon simple vers l'élément.
      </description>
            <argument name="pathType">
                <description>Le paramètrage du calcul de l'itinéraire</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="observeIt"/>
        <method name="takeUpPosition" abstract="false">
            <description>Action de prendre place sur l'élément et de l'occuper.
            </description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="reconnoitreIt">
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="reconnaissanceLevel">
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="controlIt" abstract="false">
            <description>Effet de contrôle d'un bloc par l'agent.</description>
            <return>
                <description>Renvoie vrai quand le côntrole du bloc est effective (en cours).</description>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="isReconnoitred">
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="reachEfficiency" abstract="false">
            <description>Renvoie l'efficacité (la pertinence) de la position pour atteindre l'objectif.</description>
            <argument name="objectives">
                <description>L'objectif à atteindre.</description>
                <type>
                    <class name="sword.military.knowledge.decisional.Reachable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="reconnaissanceEfficiency" abstract="false">
            <description>Renvoie l'efficacité (la pertinence) de la position pour la reconnaissance de l'objectif.</description>
            <argument name="objectives">
                <description>L'objectif à reconnaitre.</description>
                <type>
                    <class name="sword.military.knowledge.decisional.Reconnoitrable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="channelIt">
            <description>Méthode utiliser par l'action de canalisation dans la zone. L'implémentation de cette méthode utilise la fonctionnalité de canalisation implémentée dans la SIM. Cette foncitonnalité fait que la zone devient préférentielle dans le choix d'itinéraire des foules en mouvement.</description>
        </method>
        <method name="getBorderPosition">
            <description>Fonction d'intégration retournant un Point qui a pour coordonnées la position la plus proche de l'agent située au bord de la zone.</description>
            <return>
                <type>
                    <class name="sword.military.world.Point"/>
                </type>
            </return>
        </method>
        <method name="searchLevel" abstract="false">
            <description>Le niveau de fouille de l'élément.</description>
            <return>
                <description>Renvoie la valeur du niveau de fouille d'un élément. Un valeur de '0' signifie que l'élément n'a pas été fouillé, une valeur de '100' signifie que l'élément a été complètement fouillé.</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="NBCrecoLevel" abstract="false">
            <description>Le niveau de reco NBC de l'élément.</description>
            <return>
                <description>Renvoie la valeur du niveau de reco NBC d'un élément. Un valeur de '0' signifie que l'élément n'a pas été reconnu, une valeur de '100' signifie que l'élément a été complètement reconnu.</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="getSearchState">
            <description>Renvoie le niveau courant de fouille de l'objet.</description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="getNBCState">
            <description>Renvoie le niveau courant de reconnaissance NBC de l'objet.</description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="elementIsReconnoitered" abstract="false">
            <description>Tell the Automat  that this point is recognized by this platoon.</description>
        </method>
        <method name="isBeingReconnoiteredByMeOrNoOne" abstract="false">
            <description>Return true if the element is reconnoitring by me or by no one.</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="getPositionsToReconnoiter" abstract="false">
            <return>
                <type>
                    <list>
                        <class name="sword.military.knowledge.decisional.Reconnoitring"/>
                    </list>
                </type>
            </return>
        </method>
        <method name="decontaminateIt">
            <description>Permet de décontaminer une zone.</description>
            <return name="position">
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="getIntelligence" abstract="false">
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="getIntelligenceForEo" abstract="false">
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="activateRadarTirIndirect" abstract="false">
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="radarOn" abstract="false">
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="radarOff" abstract="false">
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="supportEfficiency" abstract="false">
            <description>Renvoie la valeur de l'éfficacité de l'élément pour appuyer l'objectif.</description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
    </methods>
    <predicates>
        <predicate name="isObservingFor">
            <description>Renvoie vrai si l'élément est une position permettant d'observer l'objectif.</description>
            <argument name="objective">
                <description>L'objectif à observer.</description>
                <type>
                    <class name="sword.military.knowledge.decisional.Observable"/>
                </type>
            </argument>
        </predicate>
        <predicate name="isApproachingFor">
            <description>Renvoie vrai si l'élément est une position permettant d'approcher l'objectif.</description>
            <argument name="objective">
                <description>L'objectif à approcher.</description>
                <type>
                    <class name="sword.military.knowledge.decisional.Approachable"/>
                </type>
            </argument>
        </predicate>
        <predicate name="isSearched">
            <description>Return true if the knowledge is totally reconnoiter</description>
        </predicate>
        <predicate name="isRecoNBC" abstract="false">
            <description>Return true if the knowledge is totally reconnoitered</description>
        </predicate>
        <predicate name="isDestroyingFor">
            <description>Retourne vrai si la connaissance est adéquate pour mettre en oeuvre un comportement de destruction sur un objectif</description>
            <argument name="objective">
                <description>L'objectif que l'agent veut détruire</description>
                <type>
                    <class name="sword.military.knowledge.decisional.Destroyable"/>
                </type>
            </argument>
        </predicate>
        <predicate name="isNeutralizingFor">
            <description>Retourne vrai si la connaissance est adéquate pour mettre en oeuvre un comportement de neutralisation sur un objectif</description>
            <argument name="objective">
                <description>L'objectif que l'agent veut neutraliser</description>
                <type>
                    <class name="sword.military.knowledge.decisional.Destroyable"/>
                </type>
            </argument>
        </predicate>
        <predicate name="isReachingFor" abstract="false">
            <description>Renvoie vrai si l'élément est une position permettant d'atteindre l'objectif.</description>
            <argument name="objective">
                <description>L'objectif à atteindre.</description>
                <type>
                    <class name="sword.military.knowledge.decisional.Reachable"/>
                </type>
            </argument>
        </predicate>
        <predicate name="isReconnoitringFor" abstract="false">
            <description>Renvoie vrai si l'élément est une position pour reconnaitre l'objectif.</description>
            <argument name="objective">
                <description>L'objectif à reconnaitre.</description>
                <type>
                    <class name="sword.military.knowledge.decisional.Reconnoitrable"/>
                </type>
            </argument>
        </predicate>
        <predicate name="isSupportingFor" abstract="false">
            <description>Renvoie les éléments possibles pour appuyer.</description>
            <argument name="objective">
                <description>L'élément à appuyer.</description>
                <type>
                    <class name="sword.military.knowledge.decisional.Supportable"/>
                </type>
            </argument>
        </predicate>
    </predicates>
</class>