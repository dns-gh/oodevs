rootnode
{
    connections = { skill.links.moveToward, skill.links.modifierAltitude, skill.nodes.ActivateRecording, skill.nodes.ExtractData, skill.nodes.ExploitData },
  
    done = function( self, params, additionnalParams )
        if additionnalParams.element == self.initPos then
           self.arrived = true
        end
    end,
    
    exploited = function( self, params, additionnalParams )
        self.dataExploited = true
    end,
    
    create = function( self )
        self.gotoInit = false
        self.initPos = CreateKnowledge( sword.military.world.Point, DEC_Geometrie_CopiePoint(meKnowledge:getPosition()))
        self.area = self.params.area

        Activate( skill.nodes.ActivateRecording, 1 )     
    end,
    
    activate = function( self )
        local Acticate = Activate
        if ( self.area:getMyPosition():isVisible() ) then
            Activate( skill.links.modifierAltitude, 1, { HauteurDeVol = 3000 } )
            self.area:getIntelligence()
            if waitInMin( self, 5 ) then
               self.gotoInit = true
            end
        else
            Activate( skill.links.modifierAltitude, 1, { HauteurDeVol = 100 } )
        end 
        if self.gotoInit then
            Activate( skill.links.moveToward, 1, { entities = { self.initPos } } )
        else
            Activate( skill.links.moveToward, 1, { entities = { self.area } } )
        end
        if self.arrived then
            Activate( skill.nodes.ExploitData, 1 )
            if self.dataExploited then
                Activate( skill.nodes.ExtractData, 1 )
                Feedback( self.feedbacks.done )
            end
        end
    end,
    
    destroy = function( self )
        myself.altitude = 0
        DEC_Agent_HauteurDeVol( myself.altitude )
    end
}

node "ExploitData"
{
    feedbacks = { "exploited" },
    
    create = function( self )
        meKnowledge:RC( eRC_ExploitationDonnees )
    end,    
    
    select = function( self )    
    	  if waitInMin( self, 30 ) then
      		  Feedback( self.feedbacks.exploited )
        end
    end
}
node "ActivateRecording"
{
    create = function( self )
        meKnowledge:RC(eRC_EnregistrementDonnes)
        integration.activateRecording()
    end,
}

node "ExtractData"
{
    create = function( self )
        meKnowledge:RC( eRC_ExtractionDonnes )
        integration.deactivateRecording()
    end,
}
