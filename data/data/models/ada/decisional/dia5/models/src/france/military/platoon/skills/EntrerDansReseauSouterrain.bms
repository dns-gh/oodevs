-- **************************************************************************** 
-- Activate network
-- ****************************************************************************
rootnode 
{
    connections = { skill.links.moveToward, skill.links.dismount, skill.nodes.HideInUndergroundNetwork },
    
   -- -------------------------------------------------------------------------------- 
    -- Feedbacks
    -- --------------------------------------------------------------------------------
    inside = function( self )
        Feedback( self.feedbacks.done )
    end,
    done = function( self ) -- done from moveToward
        self.arrived = true
    end,

    -- -------------------------------------------------------------------------------- 
    -- Init
    -- --------------------------------------------------------------------------------
    create = function( self )
        myself.alreadySend = false
        self.arrived = false
    end,

    -- -------------------------------------------------------------------------------- 
    -- Move inside the network.
    -- --------------------------------------------------------------------------------
    activate = function( self )
        local Activate = Activate
        if self.arrived then
            Activate( skill.links.dismount, 1 )
            if masalife.brain.knowledge.me.body:isDismounted() then
                Activate( skill.nodes.HideInUndergroundNetwork, 1, { undergroundNetwork = self.params.undergroundNetwork } )
            end
        end
        Activate( skill.links.moveToward, 1, { entities = { self.params.undergroundNetwork } } )
        self.arrived = false
    end
}

-- **************************************************************************** 
-- HideInUndergroundNetwork
-- ****************************************************************************
node "HideInUndergroundNetwork"
{
    feedbacks = { "inside" },

    activate = function( self )
    -- si le réseau n'est pas activé on arrete la mission. Sinon, on garde le skill activé pour lé débarquement.
        if self.params.undergroundNetwork:EnterInIt() then
            Feedback( self.feedbacks.inside )
        end
    end
}