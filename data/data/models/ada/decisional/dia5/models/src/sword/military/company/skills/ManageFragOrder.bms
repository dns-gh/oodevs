-------------------------------------------------------------------------------
-- Skill: ManageFragOrder
-- @author MGD
-- @created 2010-12-28
--
-- This file is part of a MASA library or program.
-- Refer to the included end-user license agreement for restrictions.
--
-- Copyright (c) 2010 Mathématiques Appliquées SA (MASA)
-------------------------------------------------------------------------------

rootnode
{
    connections =
    {
        skill.nodes.SendFragOrder,
    },

    done = function( self ) end,
    
    activate = function( self )
        local Activate = Activate
        for _, fragOrder in ipairs( self.params.fragOrders ) do
            if fragOrder:mustBePropagate() then
                local typeOrder = fragOrder.source:GetType()
                local send = typeOrder ~= "Rep_OrderConduite_Deboucher"
                local sendFirstEchelon = typeOrder == "Rep_OrderConduite_AttendreSePoster"
                for _, entity in pairs( self.params.entities ) do
                    local echelon =  F_Pion_GeteEtatEchelon( entity.source )
                    if sendFirstEchelon then
                        if echelon == eEtatEchelon_First then
                            Activate( skill.nodes.SendFragOrder, 1, { fragOrder = fragOrder, entity = entity } )
                        end
                    elseif send or echelon ~= eEtatEchelon_Scout then
                       Activate( skill.nodes.SendFragOrder, 1, { fragOrder = fragOrder, entity = entity } )
                    end
                end
            end
        end          
    end
}

node "SendFragOrder"
{
    select = function( self )
        meKnowledge:sendFragOrder( self.params.entity, self.params.fragOrder  )
    end
}