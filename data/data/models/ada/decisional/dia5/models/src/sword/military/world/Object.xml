<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://www.masagroup.net/directia/schemas/bm" name="sword.military.world.Object" source-version="1.0.0" extends="sword.military.world.KeyPoint">
    <description>Unité</description>
    <realizes>sword.military.knowledge.decisional.Approachable</realizes>
    <realizes>sword.military.knowledge.decisional.Reaching</realizes>
    <realizes>sword.military.knowledge.decisional.Reconnoitrable</realizes>
    <realizes>sword.military.knowledge.decisional.Animatable</realizes>
    <realizes>sword.military.knowledge.decisional.Animating</realizes>
    <realizes>sword.military.knowledge.decisional.Improvable</realizes>
    <realizes>sword.military.knowledge.decisional.Activable</realizes>
    <realizes>sword.military.knowledge.decisional.Activating</realizes>
    <realizes>sword.military.knowledge.decisional.Removable</realizes>
    <realizes>sword.military.knowledge.decisional.Bypassable</realizes>
    <realizes>sword.military.knowledge.Camp</realizes>
    <realizes>sword.military.knowledge.Attackable</realizes>
    <realizes>sword.military.knowledge.decisional.Reconnoitring</realizes>
    <realizes>sword.military.knowledge.UndergroundNetwork</realizes>
    <methods>
        <method name="getTraficabilityLevelFor">
            <argument>
                <type>
                    <class name="sword.military.world.PlatoonAlly"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="computeRelation">
            <description>__INTEGRATION</description>
            <argument name="objective">
                <description>L'unité avec laquelle on veut calculer sa relation de diplomatie</description>
                <type>
                    <class name="sword.military.knowledge.decisional.Observable"/>
                </type>
            </argument>
            <return>
                <description>Retourne la valeur de la relation entre 0 et 100</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="getProximity">
            <description>__INTEGRATION</description>
            <argument name="objective">
                <description>L'élément objectif</description>
                <type>
                    <class name="sword.military.knowledge.decisional.Reachable"/>
                </type>
            </argument>
        </method>
        <method name="observeIt">
            <description>Action d'observation de l'élément.
      Cette action permet à l'agent d'observer l'élément. Pour un individu, il peut s'agir d'une orientation simple des senseurs, sans se soucier
      de l'efficacité du senseur pour l'indentification de l'élément. Pour une entité de plus haut niveau (équipe ou groupe) il s'agit de
      l'effort d'observation vers l'élément (direction principale d'observation vers l'élément).
      </description>
        </method>
        <method name="getPerception">
            <description>__INTEGRATION</description>
            <return>
                <description>Retourne la valeur de la perception de l'element par l'agent entre 0 et 100.</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="takeUpPosition">
            <description>__INTEGRATION</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="animationPriority">
            <description>Renvoie la priorité de l'élément de connaissance pour son animation.</description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="canAnimateIt">
            <description>Renvoie vraie si les conditions d'animation sont réunies.</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="animateIt">
            <description>Action d'animation de l'élément.</description>
        </method>
        <method name="animationLevel">
            <description>Le niveau d'animation de l'objet.</description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="animationEfficiency">
            <description>Renvoie l'efficacité (la pertinence) de la position pour l'animation d'un objectif.</description>
            <argument name="objectives">
                <description>L'objectif à animer.</description>
                <type>
                    <class name="sword.military.knowledge.decisional.Animatable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="getPosition">
            <description>Fonction d'intégration retournant un MT_Vector2D</description>
        </method>
        <method name="getMyPosition">
            <description>Fonction d'intégration retournant un Point qui a pour coordonnées ma position.</description>
            <return>
                <type>
                    <class name="sword.military.knowledge.decisional.Reachable"/>
                </type>
            </return>
        </method>
        <method name="getPositions">
            <description>Fonction d'intégration retournant une liste de MT_Vector2D (ici la même que getPosition)</description>
        </method>
        <method name="improvePriority">
            <description>Indicate the priority to improved this object</description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="canImproveIt">
            <description>Indicate the capacity to improve this object</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="isImproved" abstract="false">
            <description>Return trie if the knowledge is improved</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="improvingDotation">
            <description>Indicate if the unit has enough dotation to improve this object</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="improveIt">
            <description>Improve</description>
        </method>
        <method name="improvementLevel">
            <description>Indicate the improvement level of this object</description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="activationPriority">
            <description>Renvoie la priorité de l'élément de connaissance pour son activation.
            Cette priorité est calculée en fonction de la distance séparant l'agent et l'élément activable. Cette priorité peut également
            dépendre de la nature même de l'élement.
            Exemple : l'activation d'obstacles de manoeuvre peut être prioritaire sur tout autre élément activable </description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="canActivateIt">
            <description>Renvoie vraie si les conditions d'activation sont réunies.</description>
        </method>
        <method name="activateIt">
            <description>Action d'activation de l'élément.
            Cette action permet à un agent d'activer la propriété particulière de l'élément.
            La désactivation de l'élément est effective par defaut, cela signifie que la non-activation d'un élément revient à désactiver la propriété particulière de l'objet.
            Exemples : l'activation d'une station d'émission, d'un plot de décontamination etc. </description>
        </method>
        <method name="activationLevel">
            <description>Le niveau d'activation de l'objet.</description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="removalPriority">
            <description>$$$$</description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="canRemoveIt">
            <description>Renvoie vraie si les conditions de dégagement sont réunies.</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="removeIt">
            <description>$$$$</description>
        </method>
        <method name="isMined">
            <description>Renvoie vraie si l'ojet est valorisé.</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="isAvoidable">
            <description>Renvoie vraie si l'ojet est contournable.</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="canDemineIt">
            <description>Renvoie vraie si l'ojet peut etre dévalorisé.</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="demineIt">
            <description>$$$$</description>
        </method>
        <method name="removalLevel">
            <description>Le niveau de dégagement de l'objet.</description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="activationEfficiency">
            <description>Renvoie l'efficacité (la pertinence) de la position pour l'activation d'un objectif.</description>
            <argument name="objectives">
                <description>L'objectif à activer.</description>
                <type>
                    <class name="sword.military.knowledge.decisional.Activable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="bypassPriority">
            <description>Indicate the priority to bypass this object</description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="canBypassIt">
            <description>Indicate the capacity to bypass this object</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="canBeBypassed" abstract="false">
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="bypassIt">
            <description>Build</description>
        </method>
        <method name="bypassLevel">
            <description>Indicate the bypass level of this object</description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="approachPriority">
            <description>
                Renvoie la priorité du déplacement vers cet élément.

                Cette priorité est calculée en fonction de la distance séparant l'agent et l'élément à approcher. Cette
                priorité peut également dépendre de la nature même de l'élément.
            </description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="canApproachIt">
            <description>Renvoie vrai si les conditions d'approche vers l'élément sont réunies.</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="requestDecontamination">
            <description>Demande une prise en charge par l'objet</description>
        </method>
        <method name="moveToIt">
            <description>Action de se déplacer vers l'élément.

            Cette action permet à l'agent de se déplacer de façon simple vers l'élément.
      </description>
            <argument name="pathType">
                <description>Le paramètrage du calcul de l'itinéraire</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="getReconnaissanceState">
            <description>__INTEGRATION</description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="reconnaissancePriority">
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="canReconnoitreIt">
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="reconnoitreIt">
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="isReconnoitred">
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="reconnaissanceLevel">
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="getNBCState">
            <description>Renvoie le niveau courant de reconnaissance NBC de l'objet.</description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="RecoNBC" abstract="false">
            <description>Action de reconnaissance NBC de l'élément.</description>
        </method>
        <method name="NBCrecoLevel" abstract="false">
            <description>Le niveau de reco NBC de l'élément.</description>
            <return>
                <description>Renvoie la valeur du niveau de reco NBC d'un élément. Un valeur de '0' signifie que l'élément n'a pas été reconnu, une valeur de '100' signifie que l'élément a été complètement reconnu.</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="buildPriority">
            <description>Indicate the capacity to build this object</description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="canBuildIt">
            <description>Indicate the capacity to build this object</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="canBuildItNow">
            <description>Indicate the capacity to build this object</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="buildIt">
            <description>Build</description>
        </method>
        <method name="constructionLevel">
            <description>Indicate the construction level of this object</description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="buildingCapacity">
            <description>Indicate the capacity to build this object with reinforcement</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="buildingCapacityWithOutReinforcement">
            <description>Indicate the capacity to build this object without reinforcement</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="buildingDotation">
            <description>Indicate if the unit has enought dotation to build this object</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="buildingDotationWithOutReinforcement">
            <description>Indicate if the unit has enought dotation to build this object without reinforcement</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="buildEfficiency" abstract="false">
            <argument name="objective">
                <type>
                    <class name="sword.military.knowledge.decisional.Buildable"/>
                </type>
            </argument>
            <return>
                <description>Valeur comprise entre 0 et 1 qui détermine l'efficacité d'une position pour construire un element.</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="destroyMoveToIt" abstract="false"/>
        <method name="isValid">
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="reachEfficiency" abstract="false">
            <description>Renvoie l'efficacité (la pertinence) de la position pour atteindre l'objectif.</description>
            <argument name="objectives">
                <description>L'objectif à atteindre.</description>
                <type>
                    <class name="sword.military.knowledge.decisional.Reachable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="getType">
            <description>Retourne le type de l'objet.</description>
        </method>
        <method name="getLocalisation">
            <description>Retourne la localisation de l'objet.</description>
        </method>
        <method name="reconnaissanceEfficiency" abstract="false">
            <argument name="objective">
                <type>
                    <class name="sword.military.knowledge.decisional.Reconnoitrable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="attackIt" abstract="false">
            <description>Action physique de l'attentat.</description>
            <argument name="suicide">
                <description>Si l'attentat est un attentat suicide.</description>
                <type>
                    <simple name="boolean"/>
                </type>
            </argument>
            <argument name="dotation">
                <description>Munition utilisée pouu commettre l'attentat.</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </argument>
            <return>
                <description>Retourne vrai quand l'attentat est effectué.</description>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="canBeImproved" abstract="false">
            <description>Indicate if the object can be improved.</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="plannedworkToWork">
            <return>
                <type>
                    <class name="sword.military.knowledge.decisional.Buildable"/>
                </type>
            </return>
        </method>
        <method name="DisableIt" abstract="false">
            <description>Action de désactivation d'une bouche d'un réseau souterrain</description>
        </method>
        <method name="EnableIt" abstract="false">
            <description>Action d'activation d'une bouche d'un réseau souterrain</description>
        </method>
        <method name="EnterInIt" abstract="false">
            <description>Entrer dans un réseau souterrain.</description>
        </method>
        <method name="PassThroughIt" abstract="false">
            <description>Traverser un réseau souterrain à partir d'une bouche vers une autre.</description>
        </method>
        <method name="isInAttackRange" abstract="false">
            <argument name="suicide">
                <type>
                    <simple name="boolean"/>
                </type>
            </argument>
            <argument name="dotation">
                <type>
                    <simple name="numeric"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="elementIsReconnoitered" abstract="false">
            <description>Tell the Automat  that this point is recognized by this platoon.</description>
        </method>
        <method name="isBeingReconnoiteredByMeOrNoOne" abstract="false">
            <description>Return true if the element is reconnoitring by me or by no one.</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="affectMobility">
            <argument name="affectionType">
                <type>
                    <simple name="numeric"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="unaffectMobility"/>
        <method name="canEquipIt">
            <argument name="typePont">
                <type>
                    <simple name="numeric"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="equipIt">
            <description>Equipe un site de franchissement d'un pont flottant de type typePont.</description>
            <argument name="typePont">
                <type>
                    <simple name="numeric"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="unEquipIt">
            <description>Retire le pont flottant equipant le site de franchissement.</description>
        </method>
        <method name="isReached" abstract="false">
            <description>Retourne vrai si la connaissance est atteinte.</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="getPositionsToReconnoiter" abstract="false">
            <return>
                <type>
                    <list>
                        <class name="sword.military.knowledge.decisional.Reconnoitring"/>
                    </list>
                </type>
            </return>
        </method>
        <method name="isNRBCReconnoitred">
            <return name="NRBCReconnoitred">
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="setNRBCReconnoitred">
            <argument>
                <type>
                    <simple name="boolean"/>
                </type>
            </argument>
        </method>
        <method name="isManeuverObstacle">
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="isActifManeuverObstacle">
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
    </methods>
    <predicates>
        <predicate name="isFullyAnimated">
            <description> Utilisée dans les requêtes ou dans les méthodes utilisées dans les comportements.
            Renvoie vrai si la connaissance est considérée comme animée à son potentiel maximum.
            </description>
        </predicate>
        <predicate name="isPartiallyAnimated">
            <description> Utilisée dans les requêtes ou dans les méthodes utilisées dans les comportements.
            Renvoie vrai si la connaissance est considérée comme animée par au moins un élément.
            </description>
        </predicate>
        <predicate name="isAnimatingFor">
            <description>Renvoie vrai si l'élément est une position permettant d'animer l'objectif.</description>
            <argument>
                <type>
                    <class name="sword.military.knowledge.decisional.Animatable"/>
                </type>
            </argument>
        </predicate>
        <predicate name="isActivated">
            <description>Return trie if the knowledge is activated</description>
        </predicate>
        <predicate name="isDisactivated">
            <description>Return trie if the knowledge is activated</description>
        </predicate>
        <predicate name="isRemoved">
            <description>Return true if the knowledge is removed</description>
        </predicate>
        <predicate name="isActivatingFor">
            <description>Renvoie vrai si l'élément est une position permettant d'activer l'objectif.</description>
            <argument name="objectives">
                <description>L'objectif à activer.</description>
                <type>
                    <class name="sword.military.knowledge.decisional.Activable"/>
                </type>
            </argument>
        </predicate>
        <predicate name="isBypassed">
            <description>Return trie if the knowledge is bypassed</description>
        </predicate>
        <predicate name="isBuilt">
            <description>Renvoie vrai si la connaissance est considérée comme construite.</description>
        </predicate>
        <predicate name="isBuildingFor">
            <description>Renvoie vrai si l'élément est une position permettant de construire l'objectif.</description>
            <argument>
                <type>
                    <class name="sword.military.knowledge.decisional.Buildable"/>
                </type>
            </argument>
        </predicate>
        <predicate name="isReachingFor" abstract="false">
            <description>Renvoie vrai si l'élément est une position permettant d'atteindre l'objectif.</description>
            <argument name="objective">
                <description>L'objectif à atteindre.</description>
                <type>
                    <class name="sword.military.knowledge.decisional.Reachable"/>
                </type>
            </argument>
        </predicate>
        <predicate name="isReconnoitringFor" abstract="false">
            <argument name="objective">
                <description>L'objectif à reconnaitre.</description>
                <type>
                    <class name="sword.military.knowledge.decisional.Reconnoitrable"/>
                </type>
            </argument>
        </predicate>
        <predicate name="isRecoNBC" abstract="false">
            <description>Return true if the knowledge is totally reconnoitered</description>
        </predicate>
    </predicates>
    <attributes>
        <attribute name="NRBCReconnoitred">
            <description>NRBCReconnoitred is true if a NRBC agent has already reconnoitred it</description>
            <type>
                <simple name="boolean"/>
            </type>
        </attribute>
    </attributes>
</class>