
-- **************************************************************************** 
-- IntercepterMissile
-- ****************************************************************************

rootnode {
    
    connections = { skill.nodes.DestroyASA },

    create = function( self )
        self.distanceCouverte = integration.porteeMaxPourTirerSurUnitePosturesReelles( self.params.enemy, self.params.ph )
        self.pointInterception = CreateKnowledge(world_elements.Point, integration.positionInterception( self.params.enemy, self.params.projectileSpeed ))
        
        self.distancePointInterception = integration.distance( meKnowledge, self.pointInterception )
        self.tempsInterception = self.distancePointInterception / ( self.params.projectileSpeed * 60 )
    end,
    
    activate = function( self )
        local Activate = Activate
    
        local delay = self.tempsInterception
        if( self.distancePointInterception <= self.distanceCouverte ) then
          if self.params.enemy:isValid() then
              -- attendre tempsInterception
              if waitInMin( self, delay ) then
                 if( ( self.params.enemy:identificationLevel() >= 60 ) and self.params.enemy:getPerception() == 100 and integration.niTropPresNiTropLoin( self.params.enemy, self.params.ph ) ) then
                     Activate( skill.nodes.DestroyASA, 1, { enemy = self.params.enemy, percentageEquipement = self.params.percentageEquipement } )
                 end
              end
           end
        end   
    end,
}
-- **************************************************************************** 
-- Destroy
-- ****************************************************************************

node "DestroyASA"
{
    acquire = { [ skill.resources.engage ] = 1 },

    select = function( self )
        if self.params.enemy:destroyItForASA( self.params.percentageEquipement ) then
            Feedback( self.feedbacks.done )
        end
    end
}