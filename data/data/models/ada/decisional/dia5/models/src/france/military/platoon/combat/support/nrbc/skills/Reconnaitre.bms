-- ****************************************************************************
-- Reconnoiter elements.
-- self.params.entities: the reconnoitrable elements
-- self.params.positions: the reconnoitring elements
-- ****************************************************************************
rootnode
{
    connections = { skill.nodes.ReconnoiterElement },

    done = function( self ) end,

    -- --------------------------------------------------------------------------------
    -- Main effect is reached: send feedback when entities are reconnoitered
    -- --------------------------------------------------------------------------------
    reconnoitred = function( self, params, additionalParams )
        self.unreconnoitredElements[ additionalParams.element ] = nil
        if not next( self.unreconnoitredElements ) then
            Feedback( self.feedbacks.done ) -- the job is done, all targets are reconnoitered
        end
    end,

    -- --------------------------------------------------------------------------------
    -- Store each elements to reconnoiter for feedbacks
    -- --------------------------------------------------------------------------------
    create = function( self )
        self.unreconnoitredElements = {}
        for _,entity in pairs( self.params.entities ) do
                self.unreconnoitredElements[ entity ] = true
            end
    end,

    -- --------------------------------------------------------------------------------
    -- For each objective of the skill, reconnoiter it.
    -- --------------------------------------------------------------------------------
    activate = function( self )
        for entity in pairs( self.unreconnoitredElements ) do
            Activate( skill.nodes.ReconnoiterElement, entity:reconnaissancePriority(),
                 { entity = entity } )
        end
    end
}

-- ****************************************************************************
-- Reconnoiter reconnoiterable element using MoveAndTakePosition skills
-- self.params.entity: the reconnoitrable element
-- self.params.positions: the reconnoitering elements
-- ****************************************************************************
node "ReconnoiterElement"
{
    connections = {skill.links.moveAndTakePosition, skill.links.observe,
                   skill.nodes.Reconnoitre },

    feedbacks = { "reconnoitred" },

    -- -------------------------------------------------------------------------------- 
    -- Feedbacks
    -- --------------------------------------------------------------------------------
    done = function( self )-- from moveAndTakePosition
        self.movementDone = true
    end,

    -- -------------------------------------------------------------------------------- 
    -- Init
    -- --------------------------------------------------------------------------------
    create  = function( self )
        self.movementDone = false
    end,

    -- --------------------------------------------------------------------------------
    -- Move toward a reconnoitering element and recconnoiter the entity
    -- --------------------------------------------------------------------------------
    activate = function( self )
        -- Feedback is sent only if element is recongized and if movement is done
        -- toward the reconnoitring position.
        if self.params.entity:isRecoNBC() and self.movementDone then
            Feedback( self.feedbacks.reconnoitred, { element = self.params.entity } )
        end

        -- Main oservation effort on the entity
        Activate( skill.links.observe, 1, { entity = self.params.entity } )

        -- when it possible reconnoiter the element.
        if self.movementDone then
            if self.params.entity:isBeingReconnoiteredByMeOrNoOne( myself ) then
                Activate( skill.nodes.Reconnoitre, 1, { target = self.params.entity } )
            else
                Feedback( self.feedbacks.reconnoitred, { element = self.params.entity } )
            end
        end

        -- Moving toward the entity
        Activate( skill.links.moveAndTakePosition, 1, { entity = self.params.entity, NBCmove = true } )
    end
}

-- ****************************************************************************
-- Reconnoitre action on the reconnoitrable element
-- ****************************************************************************
node "Reconnoitre"
{
    select = function( self )
       self.params.target:RecoNBC()
    end
}
