-- **************************************************************************** 
-- Move toward and damage objective
-- self.params.objective: the damagable element
-- ****************************************************************************
rootnode
{
    connections = { skill.links.moveTo, skill.nodes.Damage, skill.nodes.CR_AgressionImpossible },

    -- -------------------------------------------------------------------------------- 
    -- Feedbacks
    -- 'done' function is called if objective 
    -- --------------------------------------------------------------------------------
    done = function( self ) -- from MoveTo
        if self.params.objective:isDestroyed() then
            Feedback( self.feedbacks.done )
        end
    end,

    -- -------------------------------------------------------------------------------- 
    -- Moveto element and start destroying it when arrived
    -- --------------------------------------------------------------------------------
    activate = function( self )
        local Activate = Activate
        
        -- crowd is dominated, cannot agress urban block
        if meKnowledge:isDominated() then
            Activate( skill.nodes.CR_AgressionImpossible, 1 )
            Feedback( self.feedbacks.done )
        end
        
        Activate( skill.links.moveTo, 1, { entity = self.params.objective } )
        
        -- stop attacking the in entity once it is not operationnal. 
        if self.params.objective:isDestroyed() then
            return
        end

        if self.params.objective:isReached() then
            Activate( skill.nodes.Damage, 1, { objective = self.params.objective } )
        end
    end,
}

-- **************************************************************************** 
-- Simple action that activate damage on objective
-- ****************************************************************************
node "Damage"
{
    -- no ressources needed
    select = function( self )
        self.params.objective:damageIt()
    end,
}
-- ****************************************************************************
-- CR
-- ****************************************************************************
node "CR_AgressionImpossible"
{
    create = function( self )
        meKnowledge:RC( eRC_AgressionImpossible )
    end
}