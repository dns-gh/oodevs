-- **************************************************************************** 
-- ControlCrowds.
-- $$$ TEMP: waiting for Masa Life (elementWise sur le résultat d'un query)
-- ****************************************************************************
rootnode
{
    connections = { skill.links.control },

    done = function( self ) end,

    -- -------------------------------------------------------------------------------- 
    -- Feedbacks. Skill ControlCrowds return failed if current crowd cannot be controled
    -- --------------------------------------------------------------------------------
    failed = function( self, params )
        self.nextTargetIndex = self.nextTargetIndex + 1 -- try on next crowd
        if self.nextTargetIndex > #self.params.crowds then
            self.nextTargetIndex = #self.params.crowds
        end
    end,

    -- -------------------------------------------------------------------------------- 
    -- Init
    -- --------------------------------------------------------------------------------
    create = function( self )
        self.nextTargetIndex = 1 -- start with first crowd.
        self.crowds = {}
    end,

    -- -------------------------------------------------------------------------------- 
    -- Try to control the crowd.
    -- $$$ MIA TODO: on devrait prendre peut être la plus proche
    -- --------------------------------------------------------------------------------
    activate = function( self )
        local Activate = Activate
        for i, crowd in pairs ( self.params.crowds ) do
            self.crowds[i] = crowd
        end
        -- Try to control nearest crowd
        local nearestCrowd = self.crowds[ next( self.crowds ) ]
        if #self.crowds > 0 then
            for _,crowd in pairs( self.crowds ) do  -- select the nearest element
                nearestCrowd = crowd:proximityLevel() > nearestCrowd:proximityLevel() and crowd or nearestCrowd
            end
            Activate( skill.links.control, 1, { crowd  = nearestCrowd } )
        end
    end
}