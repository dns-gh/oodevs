-- **************************************************************************** 
-- Produce
-- ****************************************************************************
rootnode 
{
    connections = { skill.links.moveToward, skill.nodes.Produce },

   -- -------------------------------------------------------------------------------- 
    -- Feedbacks
    -- --------------------------------------------------------------------------------
    linked = function( self )
        Feedback( self.feedbacks.done ) -- main effect is done once the network est linked
    end,
    done = function( self ) -- done from moveToward
        self.arrived = true
    end,

    -- -------------------------------------------------------------------------------- 
    -- Init
    -- --------------------------------------------------------------------------------
    create = function( self )
        self.arrived = false
    end,

    -- -------------------------------------------------------------------------------- 
    -- MoveToNetWork and destroy it.
    -- --------------------------------------------------------------------------------
    activate = function( self )
        local Activate = Activate

        if self.arrived then
            Activate( skill.nodes.Produce, 1, { network = self.params.network } )
        end
        Activate( skill.links.moveToward, 1, { entities = { self.params.network } } )
        self.arrived = false
    end
}

-- **************************************************************************** 
-- Produce
-- ****************************************************************************
node "Produce"
{
    feedbacks = { "linked" },

    select = function( self )
        if meKnowledge:produceResource( self.params.network:getMyPosition(), self.params.network ) then
            Feedback( self.feedbacks.linked )
        end
    end
}