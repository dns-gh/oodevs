<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://www.masagroup.net/directia/schemas/bm" name="world_elements.Point" source-version="1.0.0" extends="world_elements.KeyPoint">
    <description>Une connaissance concrète représentant un point à rejoindre.
  </description>
    <realizes>world_concepts.Reconnoitrable</realizes>
    <realizes>world_concepts.Approachable</realizes>
    <realizes>world_concepts.Reaching</realizes>
    <realizes>world_concepts.Observing</realizes>
    <realizes>world_concepts.Identifying</realizes>
    <realizes>world_concepts.Safeguarding</realizes>
    <realizes>world_concepts.Fleeing</realizes>
    <realizes>world_concepts.Approaching</realizes>
    <realizes>world_concepts.Destroying</realizes>
    <realizes>world_concepts.IndirectFireable</realizes>
    <realizes>world_concepts.Supporting</realizes>
    <realizes>world_concepts.Reconnoitring</realizes>
    <realizes>world_concepts.Controlable</realizes>
    <realizes>world_concepts.Searchable</realizes>
    <realizes>world_concepts.Neutralizing</realizes>
    <realizes>world_concepts.Reinforcing</realizes>
    <realizes>world_concepts.Activating</realizes>
    <realizes>world_concepts.Bypassing</realizes>
    <realizes>world_concepts.Removing</realizes>
    <methods>
        <method name="getTraficabilityLevelFor">
            <argument>
                <type>
                    <class name="world_elements.PlatoonAlly"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="computeRelation">
            <description>__INTEGRATION</description>
            <argument name="objective">
                <description>L'unité avec laquelle on veut calculer sa relation de diplomatie</description>
                <type>
                    <class name="world_concepts.Observable"/>
                </type>
            </argument>
            <return>
                <description>Retourne la valeur de la relation entre 0 et 100</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="getProximity">
            <description>__INTEGRATION</description>
            <argument name="objective">
                <description>L'élément objectif</description>
                <type>
                    <class name="world_concepts.Reachable"/>
                </type>
            </argument>
        </method>
        <method name="getPerception">
            <description>__INTEGRATION</description>
            <return>
                <description>Retourne la valeur de la perception de l'element par l'agent entre 0 et 100.</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="getReconnaissanceState">
            <description>__INTEGRATION</description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="canReconnoitreIt">
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="getSearchState">
            <description>Renvoie le niveau courant de fouille de l'objet.</description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="getNBCState">
            <description>Renvoie le niveau courant de reconnaissance NBC de l'objet.</description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="destructionEfficiency">
            <description>__INTEGRATION</description>
            <argument name="objective">
                <description>L'objectif à détruire.</description>
                <type>
                    <class name="world_concepts.Destroyable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="safetyEfficiency">
            <description>Renvoie l'efficacité (la pertinence) de la position pour se sauvegarder de l'entité.</description>
            <argument name="objectives">
                <description>L'entité dont l'agent veut se sauvegarder.</description>
                <type>
                    <class name="world_concepts.Safeguardable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="fleeEfficiency">
            <description>Renvoie l'efficacité (la pertinence) de la position pour se sauvegarder de l'entité.</description>
            <argument name="objectives">
                <description>L'entité que l'agent veut fuir</description>
                <type>
                    <class name="world_concepts.Fleeable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="getCoverAndConcealmentLevelFor">
            <description>__INTEGRATION
Retourne la capacité de l'agent à utiliser cette position pour se protéger (c'est une position de couverture).
La capacité vaut 0 si la position ne permet pas à l'agent de se protéger, et 100 sinon.
Par défaut, toute position est une position potentielle de couverture.</description>
            <argument name="entity">
                <description>L'entité qui veut se protéger sur cette position.</description>
                <type>
                    <class name="world_concepts.Safeguardable"/>
                </type>
            </argument>
            <argument name="objective">
                <description>L'entité vis à vis de laquelle on se protège.</description>
                <type>
                    <class name="world_concepts.Safeguardable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="getPosition">
            <description>Fonction d'intégration retournant un MT_Vector2D</description>
        </method>
        <method name="getMyPosition">
            <description>Fonction d'intégration retournant un Point qui a pour coordonnées ma position.</description>
            <return>
                <type>
                    <class name="world_concepts.Reachable"/>
                </type>
            </return>
        </method>
        <method name="getPositions">
            <description>Fonction d'intégration retournant une liste de MT_Vector2D. On retourne la liste des positions entourant le BU où se trouve l'élément.</description>
        </method>
        <method name="approachEfficiency">
            <description>Renvoie l'efficacité (la pertinence) de la position pour approcher tactiquement l'objectif</description>
            <argument name="objectives">
                <description>L'objectif à approcher.</description>
                <type>
                    <class name="world_concepts.Approachable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="approachPriority">
            <description>
                Renvoie la priorité du déplacement vers cet élément.

                Cette priorité est calculée en fonction de la distance séparant l'agent et l'élément à approcher. Cette
                priorité peut également dépendre de la nature même de l'élément.
            </description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="canApproachIt">
            <description>Renvoie vrai si les conditions d'approche vers l'élément sont réunies.</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="observationEfficiency">
            <description>Renvoie l'efficacité (la pertinence) de la position pour l'observation de l'objectif.</description>
            <argument name="objectives">
                <description>L'objectif à observer.</description>
                <type>
                    <class name="world_concepts.Observable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="applyFireOnIt">
            <description>execute fire order</description>
            <argument name="munition">
                <type>
                    <simple name="numeric"/>
                </type>
            </argument>
            <argument name="interventionType">
                <type>
                    <simple name="numeric"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="neutralizationEfficiency">
            <description>__INTEGRATION</description>
            <argument name="objective">
                <description>L'objectif à neutraliser.</description>
                <type>
                    <class name="world_concepts.Neutralizable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="computeSupportCapabilityFor">
            <argument name="entity">
                <type>
                    <class name="world_elements.PlatoonAlly"/>
                </type>
            </argument>
            <argument name="position">
                <type>
                    <class name="world_concepts.Positionable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="computePerceptionCapabilityFor">
            <description>__INTEGRATION</description>
            <argument name="entity">
                <description>L'unité observant</description>
                <type>
                    <class name="world_elements.PlatoonAlly"/>
                </type>
            </argument>
            <argument name="position">
                <description>L'élément position à partir duquel on veut observer l'élément</description>
                <type>
                    <class name="world_concepts.Positionable"/>
                </type>
            </argument>
            <return>
                <description>Retourne la valeur de la perception d'un élément par l'unité entre 0 et 100</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="reinforcementEfficiency">
            <description>Renvoie l'efficacité (la pertinence) de la position pour le renforcement d'un objectif.</description>
            <argument name="objectives">
                <description>L'objectif à renforcer.</description>
                <type>
                    <class name="world_concepts.Reinforcable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="supportEfficiency" abstract="false">
            <description>Renvoie la valeur de l'éfficacité de l'élément pour appuyer l'objectif.</description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="destroyMoveToIt" abstract="false"/>
        <method name="moveToIt">
            <description>Action de se déplacer vers l'élément.

            Cette action permet à l'agent de se déplacer de façon simple vers l'élément.
      </description>
            <argument name="pathType">
                <description>Le paramètrage du calcul de l'itinéraire</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="takeUpPosition" abstract="false">
            <description>Action de prendre place sur l'élément et de l'occuper.
            </description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="isReconnoitred" abstract="false">
            <description>Renvoie vrai si l'élément de connaissance est considéré comme étant reconnu.</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="reconnaissanceEfficiency" abstract="false">
            <description>Renvoie l'efficacité (la pertinence) de la position pour la reconnaissance de l'objectif.</description>
            <argument name="objectives">
                <description>L'objectif à reconnaitre.</description>
                <type>
                    <class name="world_concepts.Reconnoitrable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="reconnaissanceLevel" abstract="false">
            <description>Le niveau de reconnaissance du point clé.</description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="reconnaissancePriority" abstract="false">
            <description>Renvoie la priorité de reconnaissance de l'élément.</description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="identificationEfficiency" abstract="false">
            <description>Renvoie l'efficacité (la pertinence) de la position pour identifier l'objectif.</description>
            <argument name="objectives">
                <description>L'objectif à identifier.</description>
                <type>
                    <class name="world_concepts.Identifiable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="observeIt" abstract="false">
            <description>Action d'observation de l'élément.
            
            Cette action permet à l'agent d'observer l'élément. Pour un individu, il peut s'agir d'une orientation simple des senseurs, sans se soucier 
            de l'efficacité du senseur pour l'indentification de l'élément. Pour une entité de plus haut niveau (équipe ou groupe) il s'agit de 
            l'effort d'observation vers l'élément (direction principale d'observation vers l'élément).
            </description>
        </method>
        <method name="controlIt" abstract="false">
            <description>Effet de contrôle d'un bloc par l'agent.</description>
            <return>
                <description>Renvoie vrai quand le côntrole du bloc est effective (en cours).</description>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="isOnRangeFor" abstract="false">
            <description>return if the target is on range</description>
            <argument name="munition">
                <type>
                    <simple name="numeric"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="reachEfficiency" abstract="false">
            <description>Renvoie l'efficacité (la pertinence) de la position pour atteindre l'objectif.</description>
            <argument name="objectives">
                <description>L'objectif à atteindre.</description>
                <type>
                    <class name="world_concepts.Reachable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="searchIt" abstract="false">
            <description>Action de ratissage de l'élément.</description>
        </method>
        <method name="RecoNBC" abstract="false">
            <description>Action de reconnaissance NBC de l'élément.</description>
        </method>
        <method name="reconnoitreIt" abstract="false">
            <description>Action de reconnaitre.

            Cette action permet à l'agent de reconnaitre l'élément de connaissance.
            Dans le cas d'un environnement urbain, à l'échelle d'un soldat ou d'une équipe, la reconnaissance d'une position est rapide
            (il peut s'agir d'une simple observation ou d'une simple occupation de celle-ci.)
            </description>
            <return>
                <description>Retourne vrai quand l'action de reconnaissance a fini de s'exécuter.</description>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="searchLevel" abstract="false">
            <description>Le niveau de fouille de l'élément.</description>
            <return>
                <description>Renvoie la valeur du niveau de fouille d'un élément. Un valeur de '0' signifie que l'élément n'a pas été fouillé, une valeur de '100' signifie que l'élément a été complètement fouillé.</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="NBCrecoLevel" abstract="false">
            <description>Le niveau de reco NBC de l'élément.</description>
            <return>
                <description>Renvoie la valeur du niveau de reco NBC d'un élément. Un valeur de '0' signifie que l'élément n'a pas été reconnu, une valeur de '100' signifie que l'élément a été complètement reconnu.</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="elementIsReconnoitered">
            <description>Add the element to a list of reconnoitedElement in the Automat.</description>
        </method>
        <method name="isBeingReconnoiteredByMeOrNoOne">
            <description>Return true if the element is reconnoitring by me or by no one.</description>
            <return name="value">
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="getPositionsToReconnoiter" abstract="false">
            <return>
                <type>
                    <list>
                        <class name="world_concepts.Reconnoitring"/>
                    </list>
                </type>
            </return>
        </method>
        <method name="activationEfficiency" abstract="false">
            <description>Renvoie l'efficacité (la pertinence) de la position pour l'activation d'un objectif.</description>
            <argument name="objectives">
                <description>L'objectif à activer.</description>
                <type>
                    <class name="world_concepts.Activable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="isVisible">
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="bypassingEfficiency" abstract="false">
            <description>Renvoie l'efficacité (la pertinence) de la position pour contourner un objectif.</description>
            <argument name="objectives">
                <description>L'objectif à contourner.</description>
                <type>
                    <class name="world_concepts.Bypassable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="removalEfficiency" abstract="false">
            <description>Renvoie l'efficacité (la pertinence) de la position pour dégager un objectif.</description>
            <argument name="objectives">
                <description>L'objectif à dégager.</description>
                <type>
                    <class name="world_concepts.Removable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
    </methods>
    <predicates>
        <predicate name="isIdentifyingFor">
            <description>__INTEGRATION</description>
            <argument name="objective">
                <description>L'objectif à identifier.</description>
                <type>
                    <class name="world_concepts.Identifiable"/>
                </type>
            </argument>
        </predicate>
        <predicate name="isSafeguardingFor">
            <description>Renvoie vrai si l'élément est une position pour se sauvegarder de l'entité.</description>
            <argument name="objective">
                <description>L'entité dont l'agent veut se sauvegarder.</description>
                <type>
                    <class name="world_concepts.Safeguardable"/>
                </type>
            </argument>
        </predicate>
        <predicate name="isFleeingFor">
            <description>Renvoie vrai si l'élément est une position pour se sauvegarder de l'entité.</description>
            <argument name="objective">
                <description>L'entité dont l'agent veut se sauvegarder.</description>
                <type>
                    <class name="world_concepts.Fleeable"/>
                </type>
            </argument>
        </predicate>
        <predicate name="isApproachingFor">
            <description>Renvoie vrai si l'élément est une position permettant d'approcher l'objectif.</description>
            <argument name="objective">
                <description>L'objectif à approcher.</description>
                <type>
                    <class name="world_concepts.Approachable"/>
                </type>
            </argument>
        </predicate>
        <predicate name="isObservingFor">
            <description>Renvoie vrai si l'élément est une position permettant d'observer l'objectif.</description>
            <argument name="objective">
                <description>L'objectif à observer.</description>
                <type>
                    <class name="world_concepts.Observable"/>
                </type>
            </argument>
        </predicate>
        <predicate name="isDestroyingFor">
            <description>Retourne vrai si la connaissance est adéquate pour mettre en oeuvre un comportement de destruction sur un objectif</description>
            <argument name="objective">
                <description>L'objectif que l'agent veut détruire</description>
                <type>
                    <class name="world_concepts.Destroyable"/>
                </type>
            </argument>
        </predicate>
        <predicate name="isReinforcingFor">
            <description>Renvoie vrai si l'élément est une position permettant de renforcer l'objectif.</description>
            <argument name="objective">
                <description>L'objectif que l'agent veut renforcer</description>
                <type>
                    <class name="world_concepts.Reinforcable"/>
                </type>
            </argument>
        </predicate>
        <predicate name="isSupportingFor">
            <description>Renvoie les éléments possibles pour soutenir.</description>
            <argument name="objective">
                <description>L'élément à soutenir.</description>
                <type>
                    <class name="world_concepts.Supportable"/>
                </type>
            </argument>
        </predicate>
        <predicate name="isReachingFor">
            <description>Renvoie vrai si l'élément est une position permettant d'atteindre l'objectif.</description>
            <argument name="objective">
                <description>L'objectif à atteindre.</description>
                <type>
                    <class name="world_concepts.Reachable"/>
                </type>
            </argument>
        </predicate>
        <predicate name="isReconnoitringFor">
            <description>Renvoie vrai si l'élément est une position pour reconnaitre l'objectif.</description>
            <argument name="objective">
                <description>L'objectif à reconnaitre.</description>
                <type>
                    <class name="world_concepts.Reconnoitrable"/>
                </type>
            </argument>
        </predicate>
        <predicate name="isSearched" abstract="false">
            <description>Return true if the knowledge is totally reconnoiter</description>
        </predicate>
        <predicate name="isRecoNBC" abstract="false">
            <description>Return true if the knowledge is totally reconnoitered</description>
        </predicate>
        <predicate name="isNeutralizingFor" abstract="false">
            <description>Renvoi vrai si la connaissance est adéquate pour neutraliser l'objectif.</description>
            <argument name="objective">
                <description>L'objectif à neutraliser</description>
                <type>
                    <class name="world_concepts.Neutralizable"/>
                </type>
            </argument>
        </predicate>
        <predicate name="isBypassingFor" abstract="false">
            <description>Renvoie vrai si l'élément est une position permettant de dégager l'objectif.</description>
            <argument name="objective">
                <description>L'objectif que l'agent veut contourner.</description>
                <type>
                    <class name="world_concepts.Bypassable"/>
                </type>
            </argument>
        </predicate>
        <predicate name="isRemovingFor" abstract="false">
            <description>Renvoie vrai si l'élément est une position permettant de dégager l'objectif.</description>
            <argument name="objective">
                <description>L'objectif que l'agent veut dégager</description>
                <type>
                    <class name="world_concepts.Removable"/>
                </type>
            </argument>
        </predicate>
    </predicates>
</class>