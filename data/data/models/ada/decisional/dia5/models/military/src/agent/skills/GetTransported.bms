-- **************************************************************************** 
-- GetTransported
-- self.params.position: the position to reach in order to get transported
-- self.params.positions: the reconnoitring elements
-- ****************************************************************************
rootnode
{
    connections = { skill.links.moveToward },

    -- -------------------------------------------------------------------------------- 
    -- Sots and feedbacks
    -- --------------------------------------------------------------------------------
    done = function( self ) -- from moveTo
        self.arrived = true
    end,

    -- -------------------------------------------------------------------------------- 
    -- Init
    -- --------------------------------------------------------------------------------
    create = function( self )
        self.arrived = false
        self.hasBeenLoaded = false
    end,

    -- -------------------------------------------------------------------------------- 
    -- Move to the position and send a report
    -- --------------------------------------------------------------------------------
    activate = function( self )
        local Activate = Activate

        -- When arrived on the position, report that the agent is ready to get transported.
        if self.arrived then
            meKnowledge:RC( eRC_EnAttenteTransporteurs )
            -- $$$ MIA  TODO Here, add a notification for carrier to tell that the agent is ready to be transported.
        end

        -- The unit is loaded on carrier
        if meKnowledge:isLoaded() then
            meKnowledge:sendMessage( "The agent is beeing transported" )
            self.hasBeenLoaded = true
            return
        end

        -- The unit is no longer loaded, means that the transport is finished.
        if self.hasBeenLoaded and not meKnowledge:isLoaded() then
            Feedback( self.feedbacks.done ) -- the skill is over.
            return
        end
        Activate( skill.links.moveToward, 1, { entities = { self.params.position } } )
    end
}