-------------------------------------------------------------------------------
-- SequentialLead
-- @author MGD
-- @created 2010-10-15
--
-- This file is part of a MASA library or program.
-- Refer to the included end-user license agreement for restrictions.
--
-- Copyright (c) 2010 MASA Group
-------------------------------------------------------------------------------
rootnode
{
    connections = { skill.links.lead };
    
    done = function( self, params )
        local current = self.companyTask.currentObjective
        if current == self.companyTask:getObjectivesSize( self.params.automateParameters ) then
            Feedback( self.feedbacks.done )
        else
            self.companyTask.currentObjective = current + 1
            self.companyTask:setMustBeEvaluate( true )
        end
    end,

    create = function( self )
        self.companyTask = integration.RetrieveAutomateTask( meKnowledge, self.params.companyTask )
        self.companyTask.currentObjective = 1
    end,

    activate = function( self )
        local Activate = Activate
        Activate( skill.links.lead, 1, { companyTask = self.params.companyTask, mainTasks = self.params.mainTasks,
                  supportTasks = self.params.supportTasks, peiTasks = self.params.peiTasks,
                  engineerTask = self.params.engineerTask, defaultTask = self.params.defaultTask, taskForSupporting = self.params.taskForSupporting} )
    end
}