-- **************************************************************************** 
-- DischargeIn: move toward camp and discharge elements in it.
-- Hypothesis is made 
-- ****************************************************************************
rootnode
{
    connections = { skill.links.moveTo, skill.nodes.DischargeIn },

    -- -------------------------------------------------------------------------------- 
    -- Init
    -- --------------------------------------------------------------------------------
    create = function( self )
        self.arrived = false
    end,

    -- -------------------------------------------------------------------------------- 
    -- Feedbacks
    -- --------------------------------------------------------------------------------
    done = function( self, params, additionnalParams ) -- element is reached
        self.arrived = true
    end,
    discharged = function( self, params ) -- element is discharged
        Feedback( self.feedbacks.done, params )
    end,

    -- -------------------------------------------------------------------------------- 
    -- If element is reached and if agent can dischargeIn it then dischargeIn it.
    -- --------------------------------------------------------------------------------
    activate = function( self )
       --[[ if not self.params.camp:canBeUsedToDischarge() then -- $$$ MIA TODO decommenter pour corriger le bug SWBUG-9023
            meKnowledge:RC( eRC_PasDeCampPrisonniersDisponible )
            Feedback( self.feedbacks.failed )
            return
        end ]]

        if self.arrived then -- once arrived in camp, discharge elements
            for _, element in pairs( self.params.elements ) do
               if not element:isLoaded() then
                   Feedback( self.feedbacks.done )
                   return
               end
               Activate( skill.nodes.DischargeIn, 1,
                            { element = element, camp = self.params.camp } )
            end
        end
        -- Move toward camp
        Activate( skill.links.moveTo, 1, { entities = { self.params.camp } } )
        self.arrived = false
    end
}


-- **************************************************************************** 
-- Simple action of discharging an element
-- ****************************************************************************
node "DischargeIn"
{
    feedbacks = { "discharged" },

    select = function( self )
        if self.params.element:dischargeItIn( self.params.camp ) then
            Feedback( self.feedbacks.discharged, { element = self.params.element } )
        end
    end
}
