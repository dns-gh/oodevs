-- **************************************************************************** 
-- Move toward and deploy on objective
-- self.params.objective: the goal element
-- ****************************************************************************
rootnode
{
    connections = 
    {
        skill.links.dismount,
        skill.links.activateLogisticChains,
        skill.links.deploy,
    },
    feedbacks = { "logisticChainsActivated", "deployed" },

    -- -------------------------------------------------------------------------------- 
    -- Slots
    -- --------------------------------------------------------------------------------
    logisticChainsActivated = function( self ) --called by ActivatedLogisticChains action skill
        meKnowledge:sendMessage( "Logistic functions enabled" )
        Feedback( self.feedbacks.logisticChainsActivated )
        Feedback( self.feedbacks.done )
    end,
    deploymentDone = function( self ) -- called by deploy skill
        Feedback( self.feedbacks.deployed )
        self.deployed = true
    end,
    done = function( self ) -- called by deploy skill
        -- $$$ NOTHING
    end,

    -- -------------------------------------------------------------------------------- 
    -- Init
    -- --------------------------------------------------------------------------------
    create = function( self )
        self.deployed  = false
        if self.params.objective == NIL then
            self.objective = meKnowledge:getMyPosition() -- deploy on self position
        else
            self.objective = self.params.objective -- a position has been issued.
        end
    end,

    -- -------------------------------------------------------------------------------- 
    -- MoveToward element and start deploying on it when arrived
    -- --------------------------------------------------------------------------------
    activate = function( self )
        local Activate = Activate
        if self.deployed then
            Activate( skill.links.dismount, 1 )
            Activate( skill.links.activateLogisticChains, 1 )
        end
        Activate( skill.links.deploy, 1, { objective = self.objective } )
        self.deployed = false
    end
}