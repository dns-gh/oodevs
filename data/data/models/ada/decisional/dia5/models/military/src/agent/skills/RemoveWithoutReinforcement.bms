-- **************************************************************************** 
-- Buid obstacles sorted by user
-- ****************************************************************************
rootnode
{
    connections = { skill.links.remove, skill.nodes.CR },

    -- -------------------------------------------------------------------------------- 
    -- Feedbacks
    -- --------------------------------------------------------------------------------
    -- Remove skill feedback
    done = function( self, params, additionalParams )
        self.nextTargetIndex = self.nextTargetIndex + 1
        if self.nextTargetIndex > #self.params.obstacles then
            Feedback( self.feedbacks.done )
        end
    end,

    elementFailed = function( self, params, additionalParams )
        self.nextTargetIndex = self.nextTargetIndex + 1
        self.report = eRC_ObjetNonSupprimable
        if self.nextTargetIndex > #self.params.obstacles then
            self.alltry = true
        end
    end,

    -- -------------------------------------------------------------------------------- 
    -- Node begins: store each objective in a table
    -- --------------------------------------------------------------------------------
    create = function( self )
        self.nextTargetIndex = 1
        self.report = nil
        self.alltry = false
    end,

    -- -------------------------------------------------------------------------------- 
    -- Select the more interesting position and move toward it to remove obstacle ennemy. 
    -- The more interesting is the first in the table $$$$ MIA à voir
    -- --------------------------------------------------------------------------------
    activate = function( self )
        local Activate = Activate
        if self.params.obstacles == NIL then
            Feedback( self.feedbacks.done ) -- no obstacles to remove
            return
        end

        -- CR on physical capability --> need reinforcement or recompletion
        if self.report then
            Activate( skill.nodes.CR, 1, { RC = self.report } ) 
        end

        if self.alltry then
            Feedback( self.feedbacks.done )
            return
        end

        Activate( skill.links.remove, 1, { entities  = { self.params.obstacles[ self.nextTargetIndex ] }, 
                                           positions = self.params.positions } )
        self.report = nil
        self.alltry = false
    end
}

-- **************************************************************************** 
-- CR 
-- ****************************************************************************
node "CR"
{
    create = function( self )
        meKnowledge:RC( self.params.RC )
    end,
}
