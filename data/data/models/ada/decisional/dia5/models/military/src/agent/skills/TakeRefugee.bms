-- **************************************************************************** 
-- Take refugee
-- This skill uses the 'load' skill to transport the unit. Once, loaded, 
-- it simply uses a specific action the change the unit status as an refugee.
-- ****************************************************************************
rootnode
{
    connections = { skill.nodes.TakeAsRefugee, skill.links.load },

    -- -------------------------------------------------------------------------------- 
    -- Feedbacks
    -- --------------------------------------------------------------------------------
    taken = function( self )
        Feedback( self.feedbacks.done ) -- main effect is done once the unit is loaded
    end,
    done = function( self ) -- done from moveToward
        self.arrived = true
    end,

    -- -------------------------------------------------------------------------------- 
    -- Init
    -- --------------------------------------------------------------------------------
    create = function( self )
        self.arrived = false
    end,

    -- -------------------------------------------------------------------------------- 
    -- Load the unit (move toward loading position dans load the element) et .
    -- --------------------------------------------------------------------------------
    activate = function( self )
        local Activate = Activate

        if self.arrived then
            Activate( skill.nodes.TakeAsRefugee, 1, { unit = self.params.unit } )
        end
        Activate( skill.links.load, 1, { entities  = { self.params.unit }, 
                                         positions = { self.params.unit:getMyPosition() } } )
        self.arrived = false
    end
}

-- **************************************************************************** 
-- TakeAsRefugee
-- ****************************************************************************
node "TakeAsRefugee"
{
    feedbacks = { "taken" },

    select = function( self )
        if self.params.unit:takeAsRefugee() then
            Feedback( self.feedbacks.taken )
       end
    end
}