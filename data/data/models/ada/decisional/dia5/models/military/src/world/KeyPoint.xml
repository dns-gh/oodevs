<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://www.masagroup.net/directia/schemas/bm" name="world.KeyPoint" source-version="1.0.0" abstract="true" extends="world.LocalizedElement">
  <description>Représente un élément de connaissance définie comme étant une position de l'environnement que peut utiliser l'agent &#xD;
    pour exécuter l'action de poste, de déplacement etc.&#xD;
$$$$ A compléter.</description>
  <realizes>properties.Loading</realizes>
  <realizes>properties.Building</realizes>
  <methods>
    <method name="canTakePosition">
      <description>Renvoie vrai si l'élément est atteind par l'agent.
            
            Les conditions d'atteinte de l'élément peuvent être plus complexe qu'un simple calcul de distance.
      </description>
      <return>
        <type>
          <simple name="boolean"/>
        </type>
      </return>
    </method>
    <method name="takeUpPosition" abstract="true">
      <description>Action de prendre place sur l'élément et de l'occuper.
        </description>
      <return>
        <type>
          <simple name="boolean"/>
        </type>
      </return>
    </method>
    <method name="occupationLevel">
      <description>Le niveau d'occupation du point clé.</description>
      <return>
        <type>
          <simple name="numeric"/>
        </type>
      </return>
    </method>
    <method name="isOccupied">
      <description></description>
      <return>
        <description>Retourne vrai si l'élément est complètement occupé.</description>
        <type>
          <simple name="boolean"/>
        </type>
      </return>
    </method>
    <method name="loadEfficiency" abstract="false">
      <description>Renvoie l'efficacité (la pertinence) de la position pour le chargement de l'entité.</description>
      <argument name="objectives">
        <description>L'entité à charger/embarquer.</description>
        <type>
          <class name="properties.Loadable"/>
        </type>
      </argument>
      <return>
        <type>
          <simple name="numeric"/>
        </type>
      </return>
    </method>
    <method name="unloadEfficiency" abstract="false">
      <description>Retourne l'efficacité (la pertinence) de la position pour le déchargement de l'entité (en fonction de la distance
            et de la structure physique de l'agent).</description>
      <argument name="objectives">
        <description>L'entité que l'agent veut décharger.</description>
        <type>
          <class name="properties.Loadable"/>
        </type>
      </argument>
      <return>
        <type>
          <simple name="numeric"/>
        </type>
      </return>
    </method>
    <method name="buildEfficiency" abstract="false">
      <argument name="objective">
        <type>
          <class name="properties.Buildable"/>
        </type>
      </argument>
      <return>
        <description>Valeur comprise entre 0 et 1 qui détermine l'efficacité d'une position pour construire un element.</description>
        <type>
          <simple name="numeric"/>
        </type>
      </return>
    </method>
  </methods>
  <predicates>
    <predicate name="isInMyAOR">
      <description>Retourne vrai si l'élément de connaissance est situé dans la zone de responsabilité de l'agent.</description>
    </predicate>
    <predicate name="isLoadingFor" abstract="false">
      <description>Renvoie vrai si l'élément est une position permettant de charger/embarquer l'entité objective.&#xD;
</description>
      <argument name="objective">
        <description>L'entité à embarquer.</description>
        <type>
          <class name="properties.Loadable"/>
        </type>
      </argument>
    </predicate>
    <predicate name="isUnloadingFor" abstract="false">
      <description>Renvoie vrai si l'élément est une position pour décharger l'entité objective.</description>
      <argument name="objective">
        <description>L'entité que l'agent veut décharger.</description>
        <type>
          <class name="properties.Loadable"/>
        </type>
      </argument>
    </predicate>
    <predicate name="isBuildingFor" abstract="false">
      <description>Renvoie vrai si l'élément est une position permettant de construire l'objectif.</description>
      <argument>
        <type>
          <class name="properties.Buildable"/>
        </type>
      </argument>
    </predicate>
  </predicates>
</class>