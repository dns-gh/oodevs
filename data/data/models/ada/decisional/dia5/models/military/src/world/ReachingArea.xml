<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://www.masagroup.net/directia/schemas/bm" name="world.ReachingArea" source-version="1.0.0" extends="world.KeyPoint">
    <description>Représente une connaissance  position adaptée poursuivre un élément. Cette classe hérite du concept absrtait de point clé, et propriétés qu'elle réalise. Elle permet, dans le cas ou l'agent simulé ne dispose pas de position adéquate pour suivre/appuyer une unité amie, de rester à distance &quot;en mesure de&quot; de cette dernière. Concrètement, ces positions  sont des positions &quot;virtuelles&quot; à l'arrière de l'unité amie, non déterminée par analyse terrain/tactique. </description>
    <realizes>properties.Reaching</realizes>
    <realizes>properties.Approaching</realizes>
    <methods>
        <method name="getTraficabilityLevelFor">
            <argument>
                <type>
                    <class name="world.PlatoonAlly"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="reinforcementEfficiency">
            <argument>
                <type>
                    <class name="world.PlatoonAlly"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="observeIt">
            <description>Action d'observation de l'élément.

        Cette action permet à l'agent d'observer l'élément. Pour un individu, il peut s'agir d'une orientation simple des senseurs, sans se soucier
        de l'efficacité du senseur pour l'indentification de l'élément. Pour une entité de plus haut niveau (équipe ou groupe) il s'agit de
        l'effort d'observation vers l'élément (direction principale d'observation vers l'élément).
        </description>
        </method>
        <method name="moveToIt">
            <description>Action de se déplacer vers l'élément.

            Cette action permet à l'agent de se déplacer de façon simple vers l'élément.
      </description>
            <argument name="pathType">
                <description>Le paramètrage du calcul de l'itinéraire</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="canTakePosition">
            <description>Renvoie vrai si l'élément est atteind par l'agent.

        Les conditions d'atteinte de l'élément peuvent être plus complexe qu'un simple calcul de distance.
        </description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="takeUpPosition">
            <description>Action de prendre place sur l'élément et de l'occuper.
        </description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="reachEfficiency">
            <description>Renvoie l'efficacité (la pertinence) de la position pour atteindre l'objectif.</description>
            <argument name="objectives">
                <description>L'objectif à atteindre.</description>
                <type>
                    <class name="properties.Reachable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="computeRelation">
            <description>__INTEGRATION</description>
            <argument name="objective">
                <description>L'unité avec laquelle on veut calculer sa relation de diplomatie</description>
                <type>
                    <class name="properties.Observable"/>
                </type>
            </argument>
            <return>
                <description>Retourne la valeur de la relation entre 0 et 100</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="getProximity">
            <description>__INTEGRATION</description>
            <argument name="objective">
                <description>L'élément objectif</description>
                <type>
                    <class name="properties.Reachable"/>
                </type>
            </argument>
        </method>
        <method name="getPosition">
            <description>Fonction d'intégration retournant un MT_Vector2D</description>
        </method>
        <method name="getMyPosition">
            <description>Fonction d'intégration retournant un Point qui a pour coordonnées ma position.</description>
            <return>
                <type>
                    <class name="properties.Reachable"/>
                </type>
            </return>
        </method>
        <method name="getPositions">
            <description>Fonction d'intégration retournant une liste de MT_Vector2D (ici la même que getPosition)</description>
        </method>
        <method name="getPerception">
            <description>__INTEGRATION</description>
            <return>
                <description>Retourne la valeur de la perception de l'element par l'agent entre 0 et 100.</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="approachEfficiency">
            <description>Renvoie l'efficacité (la pertinence) de la position pour approcher tactiquement l'objectif</description>
            <argument name="objectives">
                <description>L'objectif à approcher.</description>
                <type>
                    <class name="properties.Approachable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="destroyMoveToIt" abstract="false"/>
        <method name="loadEfficiency" abstract="false">
            <description>Renvoie l'efficacité (la pertinence) de la position pour le chargement de l'entité. &#xD;
    L'implémentation de cette méthode est spécifique pour cette classe. Le fait de vouloir charger une entité, à partir de sa position signifie que seule cette &quot;position&quot; n'a d'intérêt pour l'unité liée à cette position. On vérifie donc que l'objectif que l'on veut charger est celui a qui appartient cette position. L'intérêt d'un 'tracking position' pour charger un élément à qui n'appartient pas cette tracking position est donc nul.</description>
            <argument name="objectives">
                <description>L'entité à charger/embarquer.</description>
                <type>
                    <class name="properties.Loadable"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
    </methods>
    <predicates>
        <predicate name="isReachingFor">
            <description>Renvoie vrai si l'élément est une position permettant d'atteindre l'objectif.</description>
            <argument name="objective">
                <description>L'objectif à atteindre.</description>
                <type>
                    <class name="properties.Reachable"/>
                </type>
            </argument>
        </predicate>
        <predicate name="isApproachingFor">
            <description>Renvoie vrai si l'élément est une position permettant d'approcher l'objectif.</description>
            <argument name="objective">
                <description>L'objectif à approcher.</description>
                <type>
                    <class name="properties.Approachable"/>
                </type>
            </argument>
        </predicate>
    </predicates>
</class>