<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://www.masagroup.net/directia/schemas/bm" name="world.Crowd" source-version="1.0.0" extends="world.LocalizedElement">
    <description>Représentation d'une foule.</description>
    <realizes>properties.Approachable</realizes>
    <realizes>properties.Askable</realizes>
    <realizes>properties.Controlable</realizes>
    <realizes>properties.Attackable</realizes>
    <methods>
        <method name="computeRelation">
            <description>__INTEGRATION</description>
            <argument name="objective">
                <description>L'unité avec laquelle on veut calculer sa relation de diplomatie</description>
                <type>
                    <class name="properties.Observable"/>
                </type>
            </argument>
            <return>
                <description>Retourne la valeur de la relation entre 0 et 100</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="getProximity">
            <description>__INTEGRATION</description>
            <argument name="objective">
                <description>L'élément objectif</description>
                <type>
                    <class name="properties.Reachable"/>
                </type>
            </argument>
        </method>
        <method name="getPerception">
            <description>__INTEGRATION</description>
            <return>
                <description>Retourne la valeur de la perception de l'element par l'agent entre 0 et 100.</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="getPosition">
            <description>Fonction d'intégration</description>
        </method>
        <method name="getPositions">
            <description>Fonction d'intégration retournant une liste de MT_Vector2D (ici la même que getPosition)</description>
        </method>
        <method name="getMyPosition">
            <description>Fonction d'intégration retournant un Point qui a pour coordonnées ma position.</description>
            <return>
                <type>
                    <class name="properties.Reachable"/>
                </type>
            </return>
        </method>
        <method name="getHeadPosition">
            <return>
                <type>
                    <class name="world.Point"/>
                </type>
            </return>
        </method>
        <method name="approachPriority">
            <description>
                Renvoie la priorité du déplacement vers cet élément.

                Cette priorité est calculée en fonction de la distance séparant l'agent et l'élément à approcher. Cette
                priorité peut également dépendre de la nature même de l'élément.
            </description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="getInformations">
            <description>Spécifique à la foule, cette fonction permet au pion d'avoir des renseignements sur la foule.</description>
            <return name="return">
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="canApproachIt">
            <description>Renvoie vrai si les conditions d'approche vers l'élément sont réunies.</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="getRole">
            <return>
                <type>
                    <simple name="string"/>
                </type>
            </return>
        </method>
        <method name="moveToIt">
            <description>Action de se déplacer vers l'élément.

            Cette action permet à l'agent de se déplacer de façon simple vers l'élément.
      </description>
            <argument name="pathType">
                <description>Le paramètrage du calcul de l'itinéraire</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="observeIt" abstract="false">
            <description>Action d'observation de l'élément.
            Cette action permet à l'agent d'observer l'élément. Pour un individu, il peut s'agir d'une orientation simple des senseurs, sans se soucier 
            de l'efficacité du senseur pour l'indentification de l'élément. Pour une entité de plus haut niveau (équipe ou groupe) il s'agit de 
            l'effort d'observation vers l'élément (direction principale d'observation vers l'élément).
            </description>
        </method>
        <method name="destroyMoveToIt" abstract="false"/>
        <method name="getTasks" abstract="false">
            <return>
                <type>
                    <list>
                        <class name="world.Task"/>
                    </list>
                </type>
            </return>
        </method>
        <method name="interrogateIt" abstract="false">
            <description>Interroger la cible.</description>
            <return name="criticalIntelligence">
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="controlIt" abstract="false">
            <description>Effet de contrôle d'un élement. Cette implémentation, modélise deux effets: la sécurisation de la foule (faire en sorte qu'elle soit dominée) et le fait d'accéder aux informations relatives à cette dernière (atttiude, nombre etc.). L'accès aux information sur la foule n'est effectif que si elle est totalement sécurisée. Pour rappel, la sécurisation peut être temporaire. </description>
            <return>
                <description>Renvoie vrai quand le côntrole du bloc est effective (en cours).</description>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="attackIt" abstract="false">
            <description>Action physique de l'attentat.</description>
            <argument name="suicide">
                <description>Si l'attentat est un attentat suicide.</description>
                <type>
                    <simple name="boolean"/>
                </type>
            </argument>
            <argument name="dotation">
                <description>Munition utilisée pouu commettre l'attentat.</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </argument>
            <return>
                <description>Retourne vrai quand l'attentat est effectué.</description>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="getDomination">
            <return>
                <description>Renvoir le domination de la foule.</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="respondToIt" abstract="false">
            <description>Action de tir de riposte</description>
        </method>
        <method name="dangerosityLevel" abstract="false">
            <description>Retourne le niveau de dangerosité de la connaissance&#xD;
</description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="affinityLevel" abstract="false">
            <description>Retourne le niveau d'affinité par rapport à la connaissance</description>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="isInAttackRange" abstract="false">
            <argument name="suicide">
                <type>
                    <simple name="boolean"/>
                </type>
            </argument>
            <argument name="dotation">
                <type>
                    <simple name="numeric"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="loadIt" abstract="false">
            <description>Action du chargement d'une concentration appartentant à la foule.</description>
        </method>
        <method name="unloadIt" abstract="false">
            <description>Action de déchargement d'une concentration appartentant à la foule.</description>
        </method>
    </methods>
    <predicates>
        <predicate name="isDangerous" abstract="false">
            <description></description>
        </predicate>
        <predicate name="isDominated" abstract="false">
            <description></description>
        </predicate>
        <predicate name="isAgressive" abstract="false">
            <description>Retourne vrai si la foule a une attitude agressive</description>
        </predicate>
    </predicates>
    <attributes>
        <attribute name="tasks">
            <type>
                <list>
                    <class name="world.Task"/>
                </list>
            </type>
        </attribute>
        <attribute name="domination">
            <description>La domination vaut 0 lorsque la foule est dominée par un ou plusieurs pions. Sinon, la foule n'est pas dominée. La domination baisse lorsque des pions ont des missions de controle de foule et un comportement par defaut le fera augmenter.</description>
            <type>
                <simple name="numeric"/>
            </type>
        </attribute>
    </attributes>
</class>