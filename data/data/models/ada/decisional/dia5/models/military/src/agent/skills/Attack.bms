-- **************************************************************************** 
-- Attack units. This skill means "terrorist attack" with a bomb to destroy.
-- A bomb can be use on different elements, 
-- ****************************************************************************
rootnode
{
    connections = { skill.links.moveToward, skill.nodes.Attack, skill.nodes.CR_TargetInvalid },

    -- -------------------------------------------------------------------------------- 
    -- Feedbacks
    -- --------------------------------------------------------------------------------
    commited = function( self ) -- attack is commited
        Feedback( self.feedbacks.done )
    end,
    done = function( self ) --moveToward feedback
        self.arrived = true
    end,

    -- -------------------------------------------------------------------------------- 
    -- Init
    -- --------------------------------------------------------------------------------
    create = function( self )
        self.arrived = false
    end,

    -- -------------------------------------------------------------------------------- 
    -- Init
    -- --------------------------------------------------------------------------------
    activate = function( self )
        local Activate = Activate
        if self.params.objective:isValid() then
            if self.params.objective:isInAttackRange( self.params.suicide, self.params.dotation ) then
                self.arrived = true
            else
                Activate( skill.links.moveToward, 1, { entities = { self.params.objective } } )
            end
            if self.arrived then
                Activate( skill.nodes.Attack, 1, { objective = self.params.objective, 
                     suicide = self.params.suicide, dotation = self.params.dotation } )
            end
            self.arrived = false
        else -- target is no longer valid
            Activate( skill.nodes.CR_TargetInvalid, 1, { RC = eRC_InvalidTarget } )
            Feedback( self.feedbacks.done )
            return
        end
    end,
}

-- **************************************************************************** 
-- Simple action to attack an element
-- ****************************************************************************
node "Attack"
{
    feedbacks = { "commited" },

    select = function( self )
        if self.params.objective:attackIt( self.params.suicide, self.params.dotation ) then
            Feedback( self.feedbacks.commited )
        end
    end
}

-- ****************************************************************************
-- CR
-- ****************************************************************************
node "CR_TargetInvalid"
{
    create = function( self )
        meKnowledge:RC( eRC_InvalidTarget )
    end
}