-- **************************************************************************** 
-- Reconnoiter elements in order
-- self.params.entities: the reconnoitrable elements
-- self.params.positions: the reconnoitring elements
-- ****************************************************************************
rootnode
{
    connections = { skill.links.reconnoitre },
    feedbacks =   { "reconnaissanceDone" },

    -- -------------------------------------------------------------------------------- 
    -- Feedback from skill.links.reconnoitre
    -- --------------------------------------------------------------------------------
    done = function( self, params ) -- from reconnoitre
        self.nextTargetIndex = self.nextTargetIndex + 1
        if self.nextTargetIndex > #self.params.entities then
            -- goal is reached, all objectives have been reconnoitred.
            Feedback( self.feedbacks.done )
            Feedback( self.feedbacks.reconnaissanceDone )
        end
    end,

    -- -------------------------------------------------------------------------------- 
    -- Node begins: store each objective in a table
    -- --------------------------------------------------------------------------------
    create = function( self )
        self.nextTargetIndex = 1
    end,

    -- -------------------------------------------------------------------------------- 
    -- Reconnoitring the elements.
    -- --------------------------------------------------------------------------------
    activate = function( self )
        local Activate = Activate

        local positions = self.params.entities[ self.nextTargetIndex ]:getPositionsToReconnoiter()
        local position = getBetterReachingEfficiencyInList( positions, self.params.entities[ self.nextTargetIndex ] )
        Activate( skill.links.reconnoitre, 1, { entities  = { self.params.entities[ self.nextTargetIndex ] }, 
                                                positions = { position } } )
    end
}