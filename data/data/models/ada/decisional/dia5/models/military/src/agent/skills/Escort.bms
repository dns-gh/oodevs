-- **************************************************************************** 
-- Escort unit on objective
-- ****************************************************************************
rootnode
{
    connections = { skill.links.moveToward, skill.nodes.Escort },

    -- -------------------------------------------------------------------------------- 
    -- Feedbacks
    -- 'done' function is called if objective is reached
    -- --------------------------------------------------------------------------------
    done = function( self ) -- from MoveToward.
        Feedback( self.feedbacks.done )
    end,
    escortFailed = function( self ) -- from escort action
        Feedback( self.feedbacks.failed )
    end,

    -- -------------------------------------------------------------------------------- 
    -- MoveToward element and start deploying on it when arrived
    -- --------------------------------------------------------------------------------
    activate = function( self )
        local Activate = Activate

        -- Escort the unit (ask to follow me)
        Activate( skill.nodes.Escort, 1, { friendUnit  = self.params.friendUnit,
                                           missionName = self.params.escortedUnitMissionName } )

        -- Movement toward the final objectve to reach.
        if self.params.friendUnit:isReached() then -- start movement once unit is near
            StartActivate( skill.links.moveToward, 1, { entities = { self.params.objective } } )
        elseif not self.params.friendUnit:isNearby() then -- stop if it is too far
            StopActivate( skill.links.moveToward, { entities = { self.params.objective } } )
        end
    end
}

-- **************************************************************************** 
-- Simple action that issue an mission to escorted unit (follow or moveto)
-- ****************************************************************************
node "Escort"
{
    feedbacks = { "escortFailed" },

    create = function( self )
        if not self.params.friendUnit:escortIt( self.params.missionName ) then
            Feedback( self.feedbacks.escortFailed )
        end
    end
}