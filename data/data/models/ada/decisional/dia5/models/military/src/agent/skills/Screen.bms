-- **************************************************************************** 
-- Screen
-- Uitilisation de l'intention "moveToward" pour se déplacer vers les positions
-- ****************************************************************************
rootnode
{
    connections = { skill.links.moveToward },

    -- -------------------------------------------------------------------------------- 
    -- Feedbacks
    -- --------------------------------------------------------------------------------
    done = function( self, params, additionalParams )
        -- $$$ MIA TODO a revoir
        
        if integration.query.getFirstFragOrderFromType( "Rep_OrderConduite_Decrocher" ) then
           self.fragOrderReceived = true
           return
        end
        
        self.hostileElements = integration.query.getNearbyPlatoons()
        
        for _, platoon in pairs( self.hostileElements ) do
            if platoon:hasDetectedMe() or platoon:isPerceived() then
                self.perceived = true
                break
            end
        end

        -- If arrived on position
        if additionalParams.element ~= self.myPosition then
            -- Disengage rule: if perceived or badForceRatio or frago select next position
            if self.perceived or self.fragOrderReceived or meKnowledge:hasBadForceRatio() then
                self.nextTargetIndex = self.nextTargetIndex + 1
                self.fragOrderReceived = false
            end
            -- Last screen position is reached
            if self.nextTargetIndex > #self.params.positions then
                Feedback( self.feedbacks.done )
            end
        end
    end,

    -- -------------------------------------------------------------------------------- 
    -- Init
    -- --------------------------------------------------------------------------------
    create = function( self )
        myself.desactiveSelfProtection = true
        self.nextTargetIndex = 1
        self.perceived = false
        self.fragOrderReceived = false
        self.myPosition = meKnowledge:getMyPosition()
    end,

    -- -------------------------------------------------------------------------------- 
    -- Move toward current firing position and try to fire at entities
    -- --------------------------------------------------------------------------------
    activate = function( self )
        local Activate = Activate

        -- Select only observant units
        self.hostileElements = integration.query.getNearbyPlatoons()
        for _, platoon in pairs( self.hostileElements ) do
            if platoon:hasDetectedMe() or platoon:isPerceived() then
                self.perceived = true
                break
            end
        end
        
        if self.perceived or self.fragOrderReceived or meKnowledge:hasBadForceRatio() then
            -- moving toward next screen position
            Activate( skill.links.moveToward, 1, 
                { entities = { self.params.positions[ self.nextTargetIndex ] } } )

        else
            Activate( skill.links.moveToward, 1, { entities = { self.myPosition } } )
        end

        self.perceived = false
    end,

    -- -------------------------------------------------------------------------------- 
    -- End of behavior
    -- --------------------------------------------------------------------------------
    destroy = function( self )
        myself.desactiveSelfProtection = false
    end
}
