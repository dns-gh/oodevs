-- **************************************************************************** 
-- Relieve unit.
-- self.params.objective: the relievable unit
-- ****************************************************************************
rootnode
{
    connections = { skill.nodes.Relieve, skill.nodes.CR_RelieveImpossible, skill.links.moveToward };

    -- -------------------------------------------------------------------------------- 
    -- Feedback done comes from moveToward
    -- --------------------------------------------------------------------------------
    done = function( self )
        self.arrived = true
    end,

    -- -------------------------------------------------------------------------------- 
    -- Feedback when relieved
    -- --------------------------------------------------------------------------------
    relieved = function( self )
        Feedback( self.feedbacks.done, { entity = self.params.objective, state = "relieved" } )
    end,

    -- -------------------------------------------------------------------------------- 
    -- Init
    -- --------------------------------------------------------------------------------
    create = function( self ) self.arrived = false end,

    -- -------------------------------------------------------------------------------- 
    -- Try to relieve unit
    -- Move to element and relieve it if possible
    -- --------------------------------------------------------------------------------
    activate = function( self )
        local Activate = Activate
        -- If can relieve element then relieve it
        if self.params.objective:canRelieveIt() then 
            if self.arrived then
                Activate( skill.nodes.Relieve, 1, { entity = self.params.objective } )
            end
            -- Movetoward position to relieve element
            Activate( skill.links.moveToward, 1, { entities  = { self.params.objective } } )
        else
            Activate( skill.nodes.CR_RelieveImpossible, 1 )
            Feedback( self.feedbacks.failed, { entity = self.params.objective } )
        end
        self.arrived = false
    end,
}

-- **************************************************************************** 
-- Releive
-- Simple action
-- ****************************************************************************
node "Relieve"
{
    feedbacks = { "relieved" },
    
    select = function( self )
        if self.params.entity:relieveIt() then
            Feedback( self.feedbacks.relieved )
        end
    end
}

node "CR_RelieveImpossible"
{
    create = function( self )
        meKnowledge:RC( eRC_MissionImpossibleReason, "impossible de relever cette unité" )
    end
}