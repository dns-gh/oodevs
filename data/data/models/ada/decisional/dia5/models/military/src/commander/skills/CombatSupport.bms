-- **************************************************************************** 
-- Combat support
-- This skill used the "Lead" skill. When the supported company is given a 
-- new order
-- ****************************************************************************
rootnode 
{
    connections = { skill.nodes.Lead },

    -- -------------------------------------------------------------------------------- 
    -- Feedback when position reached and when occupied
    -- --------------------------------------------------------------------------------
    activate = function( self )
            self.entitiesToSupport = integration.filterPionWithEchelon( 
                                     integration.getEntitiesFromAutomatCommunication( 
                                     self.params.company, "none", true ), eEtatEchelon_First )

            -- Activate the Lead node with entities to support as paramter
            Activate( skill.nodes.Lead , 1, { companyTask       = self.params.companyTask,
                                              mainTask          = self.params.mainTask, 
                                              supportTask       = self.params.supportTask,
                                              defaultTask       = self.params.defaultTask, 
                                              taskForSupporting = self.params.taskForSupporting, 
                                              self.entitiesToSupport } )
    end,
}

-- **************************************************************************** 
-- Lead node
-- This node is used to activate the "Lead" skill. When the parameters change 
-- (new forward echelon units within the supported company) the instance of the 
-- "Lead" skill change and the missions are re-issued to subordinate units.
-- ****************************************************************************
node "Lead"
{
    connections = { skill.links.lead },

    -- -------------------------------------------------------------------------------- 
    -- Init
    -- --------------------------------------------------------------------------------
    create = function ( self )
        self.bInit = true
    end,

    -- -------------------------------------------------------------------------------- 
    -- Activate the lead skill.
    -- --------------------------------------------------------------------------------
    activate = function( self )
        -- A tick is squized to allow the instance of the lead to be created again
        if self.bInit then
            self.bInit = false
            return
        end

        Activate( skill.links.lead, 1, { companyTask       = self.params.companyTask,
                                         mainTasks         = self.params.mainTask, 
                                         supportTasks      = self.params.supportTask,
                                         defaultTask       = self.params.defaultTask, 
                                         taskForSupporting = self.params.taskForSupporting, 
                                         noCoordination    = true } )
    end,                                     
}