<?xml version="1.0" encoding="UTF-8"?>
<interface xmlns="http://www.masagroup.net/directia/schemas/bm" name="agent.ontology.interfaces.Destination" source-version="1.0.0">
    <description>Any simulation entity towards which an agent may move to, should realize this interface.</description>
    <methods>
        <method name="reachIt">
            <description>For the agent to enact the decision to move towards this object, along some path.&#xD;
Returns true once the agent has reached the end-point of the path (please note that this end-point may be distinct from the target position to reach). &#xD;
</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="isAccessible">
            <description>Returns true if this object, according to its accessibility level, should be considered as being accessible by the agent, false otherwise.  </description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="getProximity">
            <description>For the agent to get the proximity of this entity. &#xD;
Returns a percentage, where 0% means &quot;this object is very far from destination&quot; and 100% means &quot;this entity is very close to destination&quot;.</description>
            <argument name="destination">
                <type>
                    <class name="agent.ontology.interfaces.Destination"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="numeric"/>
                </type>
            </return>
        </method>
        <method name="isReached">
            <description>Returns true if this object has a proximity of 100% and should be considered as being reached by the agent, false otherwise.</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
    </methods>
</interface>