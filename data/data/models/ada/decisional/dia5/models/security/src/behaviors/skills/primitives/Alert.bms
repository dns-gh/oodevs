-- ****************************************************************************
-- To alert a specified set of PopulatedArea objects
-- @params: self.params.populatedAreas, a masalife list of PopulatedArea objects
-- @returns: "done" when there is no more populated area to alert OR if the list of populated areas is empty.
--
-- /!\ order is determined by elements' insertion in the table
-- ****************************************************************************
rootnode 
{
    connections = { skill.links.reach, skill.links.alert },
    feedbacks   = { "alerted" },

    -- --------------------------------------------------------------------------------
    -- Feedbacks
    -- --------------------------------------------------------------------------------
    done = function( self, params ) -- from reach skill
        self.arrived = true
    end,

    alertActionCompleted = function( self, params ) -- from alert skill
        Feedback( self.feedbacks.alerted, { populatedArea = params.populatedArea } )
        self.nextTargetIndex = self.nextTargetIndex + 1
        self.arrived = false
        if self.nextTargetIndex > #self.params.populatedAreas then
            Feedback( self.feedbacks.done )
        end
    end,

    -- --------------------------------------------------------------------------------
    -- Init
    -- --------------------------------------------------------------------------------
    create = function( self )
        self.arrived = false
        self.nextTargetIndex = 1
    end,

    -- --------------------------------------------------------------------------------
    -- Feedbacks
    -- --------------------------------------------------------------------------------
    activate = function( self )
        local Activate = Activate

        local paramsSize = #self.params.populatedAreas
        if self.nextTargetIndex <= paramsSize then
            if paramsSize > 0 then
                self.populatedArea = self.params.populatedAreas[ self.nextTargetIndex ]
                if self.arrived then
                    Activate( skill.links.alert, 1, { populatedArea = self.populatedArea } )
                else
                    Activate( skill.links.reach, 1, { destination = self.populatedArea } )
                end
            else
                Feedback( self.feedbacks.failed )
            end
         end
    end
}