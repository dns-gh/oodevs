-- ****************************************************************************
-- To reinforce a 'reinforceable' agent
-- @params: self.params.entity, a masalife 'Reinforceable' object
-- @returns: "reinforcing", when agent is reinforcing the agent.
-- ****************************************************************************
rootnode 
{
    connections = { skill.links.reach, skill.links.reinforce },
    feedbacks   = { "reinforcing" },

    -- --------------------------------------------------------------------------------
    -- Feedbacks
    -- --------------------------------------------------------------------------------
    done = function( self, params ) -- from reach skill
        self.arrived = true
    end,

    reinforcementActionRunning = function( self, params ) -- from reinforce action skill
        Feedback( self.feedbacks.reinforcing, params )
        self.reinforcing = true
    end,

    -- --------------------------------------------------------------------------------
    -- Init
    -- --------------------------------------------------------------------------------
    create = function( self )
        self.arrived     = false
        self.reinforcing = false
    end,

    -- --------------------------------------------------------------------------------
    -- Move to system and operate it.
    -- --------------------------------------------------------------------------------
    activate = function( self )
        local Activate = Activate

        if self.arrived then
            if self.params.entity:canBeReinforced() or self.reinforcing then
                Activate( skill.links.reinforce, 1, { entity = self.params.entity } )
            else
                meKnowledge:sendReport( eRC_EchecRenforcement )
                Feedback( self.feedbacks.failed )
            end
        else
            Activate( skill.links.reach, 1, { destination = self.params.entity } )
        end
    end
}