-- ****************************************************************************
-- To decontaminate a specified set of areas
-- @params: self.params.areas, a masalife list of Area objects
-- @returns: "done" when there is no more area to decontamiante OR if the list of areas is empty.
--
-- /!\ order is determined by elements' insertion in the table
-- ****************************************************************************
rootnode 
{
    connections = 
    {
        skill.links.reach,
        skill.links.decontaminate,
        skill.links.selfprotect
    },
    feedbacks   = { "decontaminated" },

    -- --------------------------------------------------------------------------------
    -- Feedbacks
    -- --------------------------------------------------------------------------------
    done = function( self, params ) -- from reach skill
        self.arrived = true
    end,

    decontaminateActionCompleted = function( self, params ) -- from decontaminate skill
        Feedback( self.feedbacks.decontaminated, { area = params.area } )
        self.nextTargetIndex = self.nextTargetIndex + 1
        self.arrived = false
    end,

    equipActionCompleted = function( self ) -- from EquipNBCOutfit skill
        self.protected = true
    end,

    -- --------------------------------------------------------------------------------
    -- Init
    -- --------------------------------------------------------------------------------
    create = function( self )
        self.arrived = false
        self.protected = false
        self.nextTargetIndex = 1
    end,

    -- --------------------------------------------------------------------------------
    -- Feedbacks
    -- --------------------------------------------------------------------------------
    activate = function( self )
        local Activate = Activate

        -- NBC protection management
        if self.params.equipNRBCProtection then
            Activate( skill.links.selfprotect, 1, {} )
            if not self.protected then
                DEC_Trace( "waiting for NBC protection to be equiped by agent")
                return -- wiating to be protected before going on decontamination area
            end
        end

        -- Decontamination begins
        local paramsSize = #self.params.areas
        if paramsSize > 0 then 
            if self.nextTargetIndex <= paramsSize then
                self.area = self.params.areas[ self.nextTargetIndex ]
                if self.arrived then
                    Activate( skill.links.decontaminate, 1, { area = self.area } )
                else
                    Activate( skill.links.reach, 1, { destination = self.area, false, eTypeItiNBC } )
                end
            else
                Feedback( self.feedbacks.done )
            end
         else 
            Feedback( self.feedbacks.failed )
         end
    end
}