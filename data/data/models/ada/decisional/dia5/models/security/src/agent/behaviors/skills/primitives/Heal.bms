-- **************************************************************************** 
-- To heal all wounded victims in 'woundedUnits' list.
-- @params self.params.woundedUnits, a list of 'Wounded' object.
-- @returns "done" when all units have been healed
-- ****************************************************************************
rootnode 
{
    connections = { skill.links.reach, skill.links.heal },
    feedbacks   = { "healed", "notHealed" },

    -- --------------------------------------------------------------------------------
    -- Feedbacks
    -- --------------------------------------------------------------------------------
    done = function( self, params ) -- from reach skill
        self.arrived = true
    end,

    healActionCompleted = function( self, params, additionalParams ) -- called be skill.links.heal
        Feedback( self.feedbacks.healed, additionalParams )
        self.arrived = false
        self.nextTargetIndex = self.nextTargetIndex + 1
    end,

    impossibleToHeal = function( self, params, additionalParams )
        Feedback( self.feedbacks.notHealed, additionalParams )
        self.arrived = false
        self.nextTargetIndex = self.nextTargetIndex + 1
    end,

    -- --------------------------------------------------------------------------------
    -- Init
    -- --------------------------------------------------------------------------------
    create = function( self )
        self.arrived = false
        self.nextTargetIndex = 1
    end,

    -- --------------------------------------------------------------------------------
    -- Behavior execution
    -- --------------------------------------------------------------------------------
    activate = function( self )
        local Activate = Activate

        local paramsSize = #self.params.woundedUnits
        if paramsSize > 0 then 
            if self.nextTargetIndex <= paramsSize then
                self.wounded = self.params.woundedUnits[ self.nextTargetIndex ]
                if self.arrived then
                    if self.wounded:canBeHealed() then
                        Activate( skill.links.heal, 1, { wounded = self.wounded } )
                     else
                        self:impossibleToHeal( ( { wounded = self.wounded } ) )
                     end
                else
                    Activate( skill.links.reach, 1, { destination = self.wounded } )
                end
            else
                Feedback( self.feedbacks.done )
            end
        else
            Feedback( self.feedbacks.failed )
        end
    end
}