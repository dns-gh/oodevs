-- **************************************************************************** 
-- To extract all wounded victims from 'vistimsUnit'.
-- @params self.params.medicalUnit, a list of entities designated as resource nodes.
-- @params self.params.victimsUnits, the list of entities to evacuate victims within
-- @returns "done" when all Victims have been taken into account by medical unit.
-- ****************************************************************************
rootnode 
{
    connections = { skill.links.reach, skill.links.extractVictims },
    feedbacks   = { "extracted", "notExtracted" },

    -- --------------------------------------------------------------------------------
    -- Feedbacks
    -- --------------------------------------------------------------------------------
    done = function( self, params ) -- from reach skill
        self.arrived = true
    end,

    extractionActionCompleted = function( self, params ) -- called be skill.links.extractVictims
        Feedback( self.feedbacks.extracted, params )
        self.arrived = false
        self.nextTargetIndex = self.nextTargetIndex + 1
        if self.nextTargetIndex > #self.params.victimsUnits then
            Feedback( self.feedbacks.done )
        end
    end,

    extractionImpossible = function( self, params )
        Feedback( self.feedbacks.notExtracted, { victimsUnit = params.victimsUnit } )
        self.arrived = false
        self.nextTargetIndex = self.nextTargetIndex + 1
        if self.nextTargetIndex > #self.params.victimsUnits then
            Feedback( self.feedbacks.done )
        end
    end,

    -- --------------------------------------------------------------------------------
    -- Init
    -- --------------------------------------------------------------------------------
    create = function( self )
        self.arrived = false
        self.nextTargetIndex = 1
    end,

    -- --------------------------------------------------------------------------------
    -- Behavior execution
    -- --------------------------------------------------------------------------------
    activate = function( self )
        local Activate = Activate

        local paramsSize = #self.params.victimsUnits
        if self.nextTargetIndex <= paramsSize then
            if paramsSize > 0 then
                self.victimsUnit = self.params.victimsUnits[ self.nextTargetIndex ]
                if self.arrived then
                    if self.victimsUnit:canVictimsBeExtracted() then
                        Activate( skill.links.extractVictims, 1, { victimsUnit = self.victimsUnit } )
                    else
                        self:extractionImpossible( { victimsUnit = self.victimsUnit } )
                    end
                else
                    Activate( skill.links.reach, 1, { destination = self.victimsUnit } )
                end
            else
                Feedback( self.feedbacks.failed )
            end
        end
    end
}