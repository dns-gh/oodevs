-- ****************************************************************************
-- To reach a decontamaintion plot and try to be decontaminated.
-- @params: self.params.decontaminationPlot, a masalife 'decontamiantionPlot' object
-- @returns: done once agent has been decontaminated.
-- ****************************************************************************
rootnode 
{
    connections = { skill.links.reach, skill.links.getDecontaminated },
    feedbacks   = { "done" },

    -- --------------------------------------------------------------------------------
    -- Feedbacks and slots
    -- --------------------------------------------------------------------------------
    done = function( self, params ) -- from reach skill
        self.arrived = true
    end,

    getDecontaminatedActionCompleted = function( self, params ) -- call by getDecontaminated action skill
        Feedback( self.feedbacks.done )
    end,

    -- --------------------------------------------------------------------------------
    -- Init
    -- --------------------------------------------------------------------------------
    create = function( self )
        self.arrived = false
    end,

    -- --------------------------------------------------------------------------------
    -- Move to decontamination plot and request for decontamination
    -- --------------------------------------------------------------------------------
    activate = function( self )
        local Activate = Activate

        if self.arrived then
            if self.params.decontaminationPlot:canBeUsedToGetDecontaminated() then
                Activate( skill.links.getDecontaminated, 1, 
                        { decontaminationPlot = self.params.decontaminationPlot } )
            else
                meKnowledge:sendMessage( "Impossible to get decontaminated by the issued decontamination plot" )
                Feedback( self.feedbacks.failed )
            end
        end
        Activate( skill.links.reach, 1, { destination = self.params.decontaminationPlot } )
        self.arrived = false
    end
}