<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://www.masagroup.net/directia/schemas/bm" name="agent.ontology.classes.Crowd" source-version="1.0.0" extends="agent.ontology.classes.Human">
    <description>Represents a set of entities viewed as a compound.&#xD;
A crowd has a a density that evolves during locomotion.&#xD;
A crowd is oriented. It has three sections: front, middle, back.&#xD;
A crowd can be calm or upset.&#xD;
A crowd can victims. </description>
    <realizes>agent.world.Victims</realizes>
    <realizes>agent.world.Wounded</realizes>
    <methods>
        <method name="getPosition">
            <return name="simPosition">
                <type>
                    <any/>
                </type>
            </return>
        </method>
        <method name="getPositions">
            <return>
                <type>
                    <list>
                        <any/>
                    </list>
                </type>
            </return>
        </method>
        <method name="canVictimsBeEvacuated" abstract="false">
            <description>Returns true if wounded elements within this &quot;victims&quot; can be evacuated.</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="canVictimsBeExtracted" abstract="false">
            <description>Returns true if wounded elements within this &quot;victims&quot; can be extracted.</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="extractVictimsFromIt" abstract="false">
            <description>To extract wounded victims from this element.&#xD;
&#xD;
This implementation create a new crowd with wounded elements on a near position. New crowd created contains as many elements as there are wounded victims within this crowd before the extraction.</description>
            <return>
                <description>Returns true once all wounded victims have been extracted from this element.&#xD;
This implementation returns true once a new crowd of wounded elements have been created.</description>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="hasConcentration">
            <description>Returns 'true' this Crowd has a concentration on the issued position (a crowd may have few concentrations). If no contration of this Crowd exists nearby the given 'Position', this m√©thod returns false.</description>
            <argument name="position">
                <description></description>
                <type>
                    <class name="agent.ontology.classes.Position"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="healIt" abstract="false">
            <description>For the agent, to act on this element to heal all wounded persons within it. &#xD;
&#xD;
This implementation heal magically all injured elements within the Crowd.&#xD;
</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="isWounded" abstract="false">
            <description>Returns 'true' if this element has wounded persons within.</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="canBeHealed" abstract="false">
            <description>Returns 'true' if this element can be healed. &#xD;
&#xD;
This implementation returns 'true' if this element is reached and if it contains wounded persons.</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
    </methods>
</class>