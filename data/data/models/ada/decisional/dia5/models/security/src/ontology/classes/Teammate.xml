<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://www.masagroup.net/directia/schemas/bm" name="ontology.classes.Teammate" source-version="1.0.0" extends="ontology.classes.Agent">
    <description>Represents a known agent. </description>
    <realizes>agent.world.Medical</realizes>
    <realizes>agent.world.Victims</realizes>
    <realizes>agent.world.Transportable</realizes>
    <realizes>agent.world.Reinforceable</realizes>
    <realizes>agent.world.Follower</realizes>
    <methods>
        <method name="getPosition">
            <return name="simPosition">
                <type>
                    <any/>
                </type>
            </return>
        </method>
        <method name="getPositions">
            <return>
                <type>
                    <list>
                        <any/>
                    </list>
                </type>
            </return>
        </method>
        <method name="canVictimsBeEvacuated" abstract="false">
            <description>Returns true if victims within this entity can be evacuated.</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="canEvacuateVictims" abstract="false">
            <description>Check if &quot;victims&quot; entity can be evacuated.</description>
            <argument name="victims">
                <description>The &quot;victims&quot; entity to ensure evacuation.</description>
                <type>
                    <class name="agent.world.Victims"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="canVictimsBeExtracted" abstract="false">
            <description>Returns true if wounded elements within this &quot;victims&quot; can be extracted.</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="extractVictimsFromIt" abstract="false">
            <description>To extract wounded victims from this element.&#xD;
This implement returns true. Extraction is not released for teammate unit.</description>
            <return>
                <description>Returns true once all wounded victims have been extracted from this element.</description>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="evacuateVictims" abstract="false">
            <description>To evacuate victims through a medical logistic chain.</description>
            <argument name="victims">
                <description>The &quot;victims&quot; entity to ensure evacuation.</description>
                <type>
                    <class name="agent.world.Victims"/>
                </type>
            </argument>
            <return>
                <description>Returns true once evacuation has started.</description>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="canBeLoaded" abstract="false">
            <description>Returns true if this entity can be loaded on agent Unit.&#xD;
&#xD;
This implementation returns 'true' if 'this' entity is reached (entity is acessible) by agent Unit and if entity is not already loaded (transported).</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="canBeUnloaded" abstract="false">
            <description>Returns true if 'this' entity can be unloaded from agent Unit.&#xD;
&#xD;
This implementation returns 'true' if 'this' entity is loaded (transported) by agent Unit.</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="isLoaded" abstract="false">
            <description>Returns 'true' if this entity is 100% loaded in agent Unit.&#xD;
&#xD;
This implementation returns 'true' if entity is transported by agent Unit.</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="loadIt" abstract="false">
            <description>Action of loading this element on agent Unit.&#xD;
&#xD;
This implementation makes agent Unit &quot;magically&quot; load 'this' entity after a defined delay (in minutes). This action is not dealing with realistic transport of troops. No special  physical capabilities is needed to execute this action.</description>
            <return>
                <description>Returns 'true' on action completion,  'false' otherwise.</description>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="unloadIt" abstract="false">
            <description>Action of unloading this element from agent Unit.&#xD;
&#xD;
This implementation makes agent Unit magically unload 'this' entity after a defined delay (in minutes).</description>
            <return>
                <description>Returns 'true' on action completion,  'false' otherwise.&#xD;
&#xD;
This implementation makes agent Unit &quot;magically&quot; unload 'this' entity after a defined delay (in minutes).</description>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="reinforceIt" abstract="false">
            <description>To reinforce this element. Returns 'true' if this element has been reinforced.</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="canFollowMe" abstract="false">
            <description>Returns 'true' if this element is able to follow  the agent, 'false' otherwise.&#xD;
&#xD;
This implementation returns 'true' if agent is able to perform the mission &quot;behaviors.tasks.Follow&quot; regarding to the set of missions defined in authoring tool.</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
    </methods>
</class>