-- ****************************************************************************
-- To launch a projectile from a position, on a specified target
-- @params: self.params.target, a masalife ResourceNode object
-- @params: self.params.quantity, the quantity to add to resource nodes production.
-- @params: self.params.dotationType, the quantity to add to resource nodes production.
-- @returns: "launchActionCompleted", when action is complete.
-- ****************************************************************************
rootnode 
{
    connections = { skill.links.follow, skill.links.launchProjectile },

    -- --------------------------------------------------------------------------------
    -- Feedbacks
    -- --------------------------------------------------------------------------------
    launchActionCompleted = function( self ) -- from Launch action skill
        meKnowledge:selfDestruct() -- agent unit must die
        Feedback( self.feedbacks.done )
    end,

    -- --------------------------------------------------------------------------------
    -- Follow target agent in order to launch projectil on it.
    -- --------------------------------------------------------------------------------
    activate = function( self )
        local Activate = Activate

        --  The target unit can be hit
        if self.params.targetAgent:isReached() then
                    -- skill failed if the agent cannot launch the projectile on the target unit.
            if not self.params.targetAgent:canBeHit( self.params.dotationType ) then
                meKnowledge:sendReport( eRC_TirIndirectNoCapacity )
                --Feedback( self.feedbacks.failed )
            else
                Activate( skill.links.launchProjectile, 1, { target = self.params.targetAgent, 
                          quantity = self.params.quantity, dotationType = self.params.dotationType } )
            end
        else -- target is not reached, follow it
           Activate( skill.links.follow, 1, { elementsToFollow = { self.params.targetAgent }, positions = NIL , minDistance = 0 } )
        end
    end
}