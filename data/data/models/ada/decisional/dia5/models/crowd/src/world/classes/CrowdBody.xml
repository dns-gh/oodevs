<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://www.masagroup.net/directia/schemas/bm" name="world.classes.CrowdBody" source-version="1.0.0" abstract="false">
    <description>$$$ TODO</description>
    <realizes>agent.world.AgentBody</realizes>
    <methods>
        <method name="getPosition">
            <return name="simPosition">
                <type>
                    <any/>
                </type>
            </return>
        </method>
        <method name="getPositions">
            <return>
                <type>
                    <list>
                        <any/>
                    </list>
                </type>
            </return>
        </method>
        <method name="adoptAgressiveAttitude">
            <description>Chaque population peut avoir une attidude plus ou moins agressive. Cette attitude peut �tre modifi�e par ordre de conduite ou par la foule elle-m�me (cf. mission &quot;Attack&quot;).</description>
        </method>
        <method name="demonstrate">
            <description>To act to demonstrate. Returns 'true' until the action is running.&#xD;
&#xD;
The 'demonstration' effect applies an attrition effect onto units located within the crowd. This effect depends on the attitude of the crowd agent:&#xD;
- if the crowd is 'calm' or 'agitated', the effect is 10%&#xD;
- if crowd is 'exited' or 'agressive', the effect is 100%&#xD;
</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="isContaminated">
            <description>Indique si l'unité est contaminée</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="moveTo" abstract="false">
            <description>Returns true upon simulation method completion, false otherwise. </description>
            <argument name="destination">
                <description>The destination to move to. </description>
                <type>
                    <class name="agent.world.Destination"/>
                </type>
            </argument>
            <argument name="urgency">
                <description>Whether the agent is in hurry or not. Affects the agent's pace. &#xD;
&#xD;
</description>
                <type>
                    <simple name="boolean"/>
                </type>
            </argument>
            <argument name="pathType">
                <description>The pat type used by subject Agent to reach the given destination.</description>
                <type>
                    <any/>
                </type>
            </argument>
            <return>
                <description>Returns true upon simulation method completion, false otherwise. </description>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="sendMessage" abstract="false">
            <description>To send a simple message.</description>
            <argument name="message">
                <type>
                    <simple name="string"/>
                </type>
            </argument>
        </method>
        <method name="sendReport" abstract="false">
            <description>To send a decisional report corresponding to the given type.&#xD;
&#xD;
Display a message.</description>
            <argument name="typeId">
                <description>The id of the report.</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </argument>
        </method>
        <method name="stopMovement" abstract="false">
            <description>To call when the movement of the agent is stopped for a given target.</description>
            <argument name="destination">
                <description>The destination to stop moving to. </description>
                <type>
                    <class name="agent.world.Destination"/>
                </type>
            </argument>
        </method>
        <method name="isAgressive">
            <description>Returns 'true' if the crowd's attitude is 'agressive'.</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="isUnderControl">
            <description>Returns 'true' if the crowd agent is being dominated, meaning that it is under control.</description>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="RC">
            <description>Specific integration method for sending reports.&#xD;
 $$$ Temp, to remove</description>
            <argument name="reportId">
                <type>
                    <any/>
                </type>
            </argument>
        </method>
        <method name="attack">
            <description>To attack the given unit. Returns 'true' upon action completion.</description>
            <argument name="unit">
                <type>
                    <class name="world.classes.Unit"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="canAttack">
            <description>Returns 'true' if the crowd agent can attack the given unit. This implementation returns always 'true'.</description>
            <argument name="unit">
                <type>
                    <class name="world.classes.Unit"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="canDamage">
            <description>Returns 'true' if the crowd agent can damage the given urban block. This implementation returns always 'true'.</description>
            <argument name="installation">
                <type>
                    <class name="world.interfaces.Installation"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="damage">
            <description>To damage the given urban block.</description>
            <argument name="installation">
                <type>
                    <class name="world.interfaces.Installation"/>
                </type>
            </argument>
            <argument name="quantityOfDamage">
                <description>The damage factor to use to damage the installation [0;1], per time unit. Returns 'true' once action is over.</description>
                <type>
                    <simple name="numeric"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
        <method name="getDecontaminated" abstract="false">
            <description>To be decontaminated with the given decontamination plot. Returns 'true' once deonctamination is complete, 'false' otherwise.</description>
            <argument name="decontaminationPlot">
                <description></description>
                <type>
                    <class name="agent.world.DecontaminationPlot"/>
                </type>
            </argument>
            <return>
                <type>
                    <simple name="boolean"/>
                </type>
            </return>
        </method>
    </methods>
</class>