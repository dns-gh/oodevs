includedFiles = includedFiles or {}
includedFiles["sources/emergency/pions/common/Behaviors.bms"] = true

local emptyTable = emptyTable

--[[// *****************************************************************************
]]--[[//
]]--[[// This file is part of a MASA library or program.
]]--[[// Refer to the included end-user license agreement for restrictions.
]]--[[//
]]--[[// Copyright (c) 2007 Mathématiques Appliquées SA (MASA)
]]--[[//
]]--[[// *****************************************************************************
]]
include "Common/Pions/Behaviors.bms"


include "Common/Pions/MissionsGeneriques.bms"

include "Common/Pions/Behaviors/Behaviors - Embarquement.bms"


include "Emergency/Pions/Common/Actions.bms"


node "BEH_Defaut"
{
    feedbacks = { { { "done_BEH_Defaut" }, "BEH_Defaut" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Defaut, {value} ) end,
    activations =
    {
        { "BEH_MAJ_EtatDefaut", { "done_BEH_MAJ_EtatDefaut" } },
        { "BEH_Mot_AffecterVariablesDEtat", { "done_BEH_Mot_AffecterVariablesDEtat" } },
        { "BEH_Mot_Pion_Embarquer", { "done_BEH_Mot_Pion_Embarquer" } },
        { "BEH_Ambiance", { "done_BEH_Ambiance" } },
        { "BEH_ROE", { "done_BEH_ROE" } },
        { "BEH_Nbc", { "done_BEH_Nbc" } },
        { "BEH_Rens", { "done_BEH_Rens" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.nBlurp = self.params[1]
    end,

    activate = function( self )
        local Activate = Activate
        Activate( self.activations.BEH_MAJ_EtatDefaut, 1, emptyTable )--[[// MAJ de l'état DEC par défaut 
]]--[[//-------------------------------------------------------------------------
]]
        Activate( self.activations.BEH_Mot_AffecterVariablesDEtat, 1, emptyTable )--[[// MAJ de l'etat du pion en fonction de son agressivite
]]--[[// ------------------------------------------------------------------------	
]]
        --[[// Si totalement detruit...
]]if( S_Misc_EstDetruitPhysique() ) then
            do return end
        end

        Activate( self.activations.BEH_Mot_Pion_Embarquer, 1, emptyTable )--[[// Embarquement apres Heliportage
]]--[[// ------------------------------------------------------------------------
]]
        Activate( self.activations.BEH_Ambiance, 1, emptyTable )--[[// Ambiance
]]--[[// ------------------------------------------------------------------------
]]--[[// Gestion de l'ambiance en fonction des ennemis
]]--[[// Module la vitesse en fonction de l'ambiance
]]
        Activate( self.activations.BEH_ROE, 1, emptyTable )--[[// Comportements Generiques
]]
        Activate( self.activations.BEH_Nbc, 1, emptyTable )
        Activate( self.activations.BEH_Rens, 1, emptyTable )--[[// Gestion de la guerre elec : Passer en silence radio
]]
        if( DEC_GetMission( myself ) == nil ) then
            do
                --[[// action ACT_Mot_Pion_INF_InitialisePoste();
]]--[[// Init variables
]]F_Pion_SeteEtatEchelon( myself, eEtatEchelon_Second )
                F_Pion_SeteTypeContact( myself, eTypeContact_Defaut )
                F_Pion_SetbDefenseStatique_Mobile( myself, false )
            end
        end

    end,

}

node "BEH_Mot_AffecterVariablesDEtat"
{
    feedbacks = { { { "done_BEH_Mot_AffecterVariablesDEtat" }, "BEH_Mot_AffecterVariablesDEtat" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mot_AffecterVariablesDEtat, {value} ) end,
    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        --[[//////////////// BMS OPTIM  ///////////////////
]]        if( F_Pion_GeteEtatDec( myself ) == eEtatDec_Sauvegarde ) then
            do return end
        end

         do
            local _continue = true
            local switch_1 = --[[////////////// FIN OPTIM  /////////////////////
]]--[[//----------------------------------------------------------------------
]]--[[// En fonction du moral...
]]--[[//----------------------------------------------------------------------
]]DEC_FacteurHumain_Moral()
            local cases_switch_1 = {}
                if switch_1 == eMoral_Fanatique then
                    --[[//------------------------------------------------------------------
]]--[[// Fanatique --> esquive sur PAP, pas de ralentissement
]]--[[//------------------------------------------------------------------
]]SetStateVariable( "VE_RapFor", 0 )
                    _continue = false
                --[[//------------------------------------------------------------------
]]--[[// Moral bon --> esquive sur PAP et effet rapFor défavorable 
]]--[[//           --> ralentissement
]]--[[//------------------------------------------------------------------
]]                cases_switch_1[1] = true
elseif switch_1 == eMoral_Moyen
                or switch_1 == eMoral_Bon then
                    --[[//--------------------------------------------------------------
]]--[[// En fonction de la mission...  --> idem moral mauvais
]]--[[//--------------------------------------------------------------
]]if( DEC_GetMission( myself ) == nil ) then
                        do
                            SetStateVariable( "VE_RapFor", ( 5 - DEC_RapportDeForceLocal() ) )
                            _continue = false
                        end
--[[// Par défaut ...
]]                    end

                        if _continue then
                        SetStateVariable( "VE_RapFor", 0 )
                        _continue = false
                    end
                --[[//------------------------------------------------------------------
]]--[[// Moral mauvais: --> esquive sur PAP et sur rapFor défavorable
]]--[[//------------------------------------------------------------------
]]                cases_switch_1[2] = true
elseif switch_1 == eMoral_Mauvais then
                    SetStateVariable( "VE_RapFor", ( 5 - DEC_RapportDeForceLocal() ) )
                    _continue = false
                                cases_switch_1[3] = true
                end
            end

    end,

    destroy = function( self )
                SetStateVariable( "VE_RapFor", 0 )
    end,

--[[////////////////////////////// PARTIE COMPORTEMENTS VIRTUELS ///////////////////
]]--[[// *****************************************************************************
]]--[[// BEH_Dep_Virtuel_ProgressionVers
]]--[[// *****************************************************************************
]]}

node "BEH_Dep_Virtuel_ProgressionVers"
{
    feedbacks = { { { "done_BEH_Dep_Virtuel_ProgressionVers" }, "BEH_Dep_Virtuel_ProgressionVers" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Dep_Virtuel_ProgressionVers, {value} ) end,
    activations =
    {
        { "BEH_Dep_ProgressionVers", { "done_BEH_Dep_ProgressionVers" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.point = self.params[1]
        self._namedParams.eTypeProgression = self.params[2]
        self._namedParams.eTypeIti = self.params[3]
    end,

    activate = function( self )
        local Activate = Activate
        Activate( self.activations.BEH_Dep_ProgressionVers, 1, { self._namedParams.point, self._namedParams.eTypeProgression, self._namedParams.eTypeIti, } )
    end,

--[[// *****************************************************************************
]]--[[// BEH_Dep_Virtuel_PreparationAction
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Dep_Virtuel_PreparationAction"
{
    feedbacks = { { { "done_BEH_Dep_Virtuel_PreparationAction" }, "BEH_Dep_Virtuel_PreparationAction" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Dep_Virtuel_PreparationAction, {value} ) end,
    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
                self:SendFeedback( eActionEffectuee )
        do return end

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_MAJ_EtatDefaut", nodes.BEH_MAJ_EtatDefaut }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Mot_AffecterVariablesDEtat", nodes.BEH_Mot_AffecterVariablesDEtat }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Mot_Pion_Embarquer", nodes.BEH_Mot_Pion_Embarquer }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Ambiance", nodes.BEH_Ambiance }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_ROE", nodes.BEH_ROE }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Nbc", nodes.BEH_Nbc }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Rens", nodes.BEH_Rens }
connections[ #connections + 1 ] = { nodes.BEH_Dep_Virtuel_ProgressionVers, "BEH_Dep_ProgressionVers", nodes.BEH_Dep_ProgressionVers }
