includedFiles = includedFiles or {}
includedFiles["sources/common/pions/missions/SeFaireDecontaminer.bms"] = true



--[[// *****************************************************************************
]]--[[// MIS_Pion_SeFaireDecontaminer
]]--[[//
]]--[[// Commentaires: T_Point pointArrivee_;
]]--[[//               T_ConnaissanceObjet siteDecontamination_;
]]--[[//
]]--[[// *****************************************************************************
]]node "MIS_Pion_SeFaireDecontaminer"
{
    activations =
    {
        { "BEH_Ordre_Inopine", {} },
        { "ACT_MAJ_EtatPhaseMission", {} },
        { "BEH_Dep_ProgressionVers", {} },
        { "ACT_Pion_Nbc_DemanderDecontaminationSur", {} },
        { "BEH_Dep_SePosterFaceADirectionDangereuse", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        self.ePhaseMission = self.ePhaseMission or ePreparerMission
        self.eEtat = self.eEtat or eActionEnCours
        self.positionSite = self.positionSite or nil--[[//init plus bas         
]]
        --[[//-----------------------------------------------------------------------------
]]--[[// Validité du parmètre
]]--[[//-----------------------------------------------------------------------------
]]if( not DEC_ConnaissanceObjet_EstValide( self._namedParams.mission.siteDecontamination_ ) ) then
            do
                DEC_RC( eRC_MissionImpossible )
                                Halt()

            end
        end

        if( ModuleBegins() ) then
            do
                F_Pion_SeteEtatAmbiance( myself, eEtatAmbiance_Vitesse )
                DEC_SetMission( myself, self._namedParams.mission )
                self.positionSite = S_Obj_Position( self._namedParams.mission.siteDecontamination_ )
            end
        end

        self.eEtatOrdreFinMission = self.eEtatOrdreFinMission or eActionEnCours
        Activate( self.activations.BEH_Ordre_Inopine, 1, setmetatable( {}, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eEtatOrdreFinMission = v else rawset( t, k, v ) end end } ) )
        if( self.eEtatOrdreFinMission == eActionHalt ) then
            do
                self.ePhaseMission = eFinMission
                self.eEtat = eActionEnCours
                self.eEtatOrdreFinMission = eActionEnCours
            end
        end

        switch_1 = self.ePhaseMission
            if switch_1 == ePreparerMission then
                --[[// 1) Preparation de la mission
]]Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_DebutMission, } )
                DEC_Trace( "** MIS_Pion_SeFaireDecontaminer **" )
                self.ePhaseMission = eProgresser
                
            --[[// Fin contamination
]]elseif switch_1 == eProgresser then
                Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_ProgressionVersLocalisation, } )
                --[[//---------------------------------------------------------------------
]]--[[// Rejoindre le site
]]--[[//---------------------------------------------------------------------
]]if( self.eEtat == eActionEffectuee ) then
                    do
                        self.eEtat = eActionEnCours
                                                do
                            self.ePhaseMission = eAttendre
                                                        return

                        end

                    end
                end

                Activate( self.activations.BEH_Dep_ProgressionVers, 1, setmetatable( { self.positionSite, eProgressionDirect, eTypeItiMouvement, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eEtat = v else rawset( t, k, v ) end end } ) )
                
            --[[// Décontamination
]]elseif switch_1 == eAttendre then
                Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_ArriveSurLocalisation, } )
                --[[// Fin contamination
]]if( not DEC_Agent_EstContamine() ) then
                    do
                        DEC_Trace( "---- Unite decontaminee ----" )
                        self.ePhaseMission = eRejoindre
                                                return

                    end
--[[// Si sauvegarde (pour toujours être à coté du site de décontamination)
]]                end

                if( DEC_Geometrie_Distance( myself:DEC_Agent_Position(), self.positionSite ) > 100 ) then
                    Activate( self.activations.BEH_Dep_ProgressionVers, 1.1, { self.positionSite, eProgressionDirect, eTypeItiMouvement, } )
                end

                --[[//---------------------------------------------------------------------
]]--[[// Demander à se faire decontaminer (se mettre en liste d'attente)
]]--[[//---------------------------------------------------------------------
]]Activate( self.activations.ACT_Pion_Nbc_DemanderDecontaminationSur, 1, { self._namedParams.mission.siteDecontamination_, } )
                
            --[[// Fin decontamination
]]elseif switch_1 == eRejoindre then
                Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_ProgressionVersLocalisation, } )
                if( self.eEtat == eActionEffectuee ) then
                    do
                        self.eEtat = eActionEnCours
                                                do
                            self.ePhaseMission = eFinMission
                                                        return

                        end

                    end
                end

                Activate( self.activations.BEH_Dep_ProgressionVers, 1, setmetatable( { self._namedParams.mission.pointArrivee_, eProgressionDirect, eTypeItiMouvement, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eEtat = v else rawset( t, k, v ) end end } ) )
                
            --[[// Fin mission
]]elseif switch_1 == eFinMission then
                Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_FinMission, } )
                Activate( self.activations.BEH_Dep_SePosterFaceADirectionDangereuse, 1, {} )
                
                        end

    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Pion_SeFaireDecontaminer = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.MIS_Pion_SeFaireDecontaminer, "BEH_Ordre_Inopine", nodes.BEH_Ordre_Inopine }
connections[ #connections + 1 ] = { nodes.MIS_Pion_SeFaireDecontaminer, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_SeFaireDecontaminer, "BEH_Dep_ProgressionVers", nodes.BEH_Dep_ProgressionVers }
connections[ #connections + 1 ] = { nodes.MIS_Pion_SeFaireDecontaminer, "ACT_Pion_Nbc_DemanderDecontaminationSur", nodes.ACT_Pion_Nbc_DemanderDecontaminationSur }
connections[ #connections + 1 ] = { nodes.MIS_Pion_SeFaireDecontaminer, "BEH_Dep_SePosterFaceADirectionDangereuse", nodes.BEH_Dep_SePosterFaceADirectionDangereuse }
