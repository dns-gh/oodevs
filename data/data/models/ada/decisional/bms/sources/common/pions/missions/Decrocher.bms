includedFiles = includedFiles or {}
includedFiles["sources/common/pions/missions/Decrocher.bms"] = true


--[[// *****************************************************************************
]]--[[// MIS_Pion_Decrocher
]]--[[//
]]--[[// Commentaires: BUT: au niveau de la patrouille, renseigner en permanence sur
]]--[[//               un eni sans se laisser accrocher NI identifier. Au niveau de
]]--[[//               de la patrouille, pas d'opportunité d'ouverture du feu.
]]--[[//
]]--[[// *****************************************************************************
]]node "MIS_Pion_Decrocher"
{
    activations =
    {
        { "BEH_MOT_DesactiveSauvegarde", {} },
        { "BEH_Ordre_Inopine", {} },
        { "ACT_MAJ_EtatPhaseMission", {} },
        { "ACT_Info_Trace", {} },
        { "BEH_Dep_ProgressionVers", {} },
        { "BEH_Lima_GererLR", {} },
        { "BEH_Dep_SePosterFaceADirectionDangereuse", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        self.eEtat = self.eEtat or eActionEnCours
        self.ePhaseMission = self.ePhaseMission or ePreparerMission
        if( ModuleBegins() ) then
            do
                DEC_SetMission( myself, self._namedParams.mission )
                F_Pion_SeteEtatAmbiance( myself, eEtatAmbiance_Vitesse )
                StartActivate( self.activations.BEH_MOT_DesactiveSauvegarde, 1, {} )
            end
        end

        self.eEtatOrdreFinMission = self.eEtatOrdreFinMission or eActionEnCours
        Activate( self.activations.BEH_Ordre_Inopine, 1, setmetatable( {}, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eEtatOrdreFinMission = v else rawset( t, k, v ) end end } ) )
        if( self.eEtatOrdreFinMission == eActionHalt ) then
            do
                self.ePhaseMission = eFinMission
                self.eEtat = eActionEnCours
                self.eEtatOrdreFinMission = eActionEnCours
            end
        end

         do
            local switch_1 = self.ePhaseMission
            local cases_switch_1 = {}
                if switch_1 == ePreparerMission then
                    --[[// 1) Preparation de la mission
]]Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_DebutMission, } )
                    Activate( self.activations.ACT_Info_Trace, 1, { "Disengagement mission begining", } )
                    self.ePhaseMission = eDecrocher
                    
                --[[// 2) Decrocher
]]                cases_switch_1[1] = true
elseif switch_1 == eDecrocher then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_Decroche, } )
                    if( self.eEtat == eActionEffectuee ) then
                        do
                            self.eEtat = eActionEnCours
                                                        do
                                self.ePhaseMission = eFinMission
                                                                return

                            end

                        end
                    end

                    Activate( self.activations.BEH_Dep_ProgressionVers, 1, setmetatable( { self._namedParams.mission.pointRegroupement_, eProgressionDirect, eTypeItiRepli, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eEtat = v else rawset( t, k, v ) end end } ) )
                    Activate( self.activations.BEH_Lima_GererLR, 1, {} )
                    
                --[[// 4) Fin de la mission
]]                cases_switch_1[2] = true
elseif switch_1 == eFinMission then
                    StopActivate( self.activations.BEH_MOT_DesactiveSauvegarde, {} )
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_FinMission, } )
                    Activate( self.activations.BEH_Dep_SePosterFaceADirectionDangereuse, 1, {} )
                    
                                cases_switch_1[3] = true

                else
                                end
            end

    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Pion_Decrocher = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.MIS_Pion_Decrocher, "BEH_MOT_DesactiveSauvegarde", nodes.BEH_MOT_DesactiveSauvegarde }
connections[ #connections + 1 ] = { nodes.MIS_Pion_Decrocher, "BEH_Ordre_Inopine", nodes.BEH_Ordre_Inopine }
connections[ #connections + 1 ] = { nodes.MIS_Pion_Decrocher, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_Decrocher, "ACT_Info_Trace", nodes.ACT_Info_Trace }
connections[ #connections + 1 ] = { nodes.MIS_Pion_Decrocher, "BEH_Dep_ProgressionVers", nodes.BEH_Dep_ProgressionVers }
connections[ #connections + 1 ] = { nodes.MIS_Pion_Decrocher, "BEH_Lima_GererLR", nodes.BEH_Lima_GererLR }
connections[ #connections + 1 ] = { nodes.MIS_Pion_Decrocher, "BEH_Dep_SePosterFaceADirectionDangereuse", nodes.BEH_Dep_SePosterFaceADirectionDangereuse }
