includedFiles = includedFiles or {}
includedFiles["sources/common/pions/fonctions/Functions - Eni.bms"] = true

local emptyTable = emptyTable

include "bit.lua"

--[[// *****************************************************************************
]]--[[// Fonctions Communes aux pions
]]--[[// Thème : Ennemis
]]--[[// *****************************************************************************
]]--[[//-----------------------------------------------------------------------------
]]--[[// Destruction tactique d'une connaissance --> plus de composantes majeures
]]--[[//-----------------------------------------------------------------------------
]]--[[//-----------------------------------------------------------------------------
]]--[[// Destruction physique d'une connaissance --> plus de composantes
]]--[[//-----------------------------------------------------------------------------
]]--[[//-------------------------------------------------------------------------
]]--[[// Etat opérationnel courant d'un eni
]]--[[// MIA: utilisation douteuse dans l'inf
]]--[[//-------------------------------------------------------------------------
]]--[[//-------------------------------------------------------------------------
]]--[[// Position d'une unite ( T_ConnaissanceAgent )
]]--[[//-------------------------------------------------------------------------
]]--[[//-------------------------------------------------------------------------
]]--[[// Position d'une unite ( T_ConnaissanceAgent )
]]--[[//-------------------------------------------------------------------------
]]--[[//-------------------------------------------------------------------------
]]--[[// Renvoie l'eni le plus proche de la position passée en paramètre
]]--[[//-------------------------------------------------------------------------
]]--[[//-----------------------------------------------------------------------------
]]--[[// Perception d'un agent connaissance
]]--[[//-----------------------------------------------------------------------------
]]--[[//-------------------------------------------------------------------------
]]--[[// Renvoie vrai si l'unite est en mouvement
]]--[[// OPT: MIA Utilisé que par l'inf
]]--[[//-------------------------------------------------------------------------
]]--[[//-------------------------------------------------------------------------
]]--[[// Renvoie true si l ennemi m a detecte, sinon false
]]--[[// OPT: MIA Utilisé que par l'inf
]]--[[//-------------------------------------------------------------------------
]]--[[// ----------------------------------------------------------------------------	
]]--[[// Renvoie le type de la connaissance, Ennemi, Ami, Inconnu
]]--[[// OPT: MIA Utilisé que par l'inf
]]--[[// ----------------------------------------------------------------------------	
]]--[[// -----------------------------------------------------------------------------
]]--[[//  Renvoie vrai si un eni se trouve dans une localisation
]]--[[// -----------------------------------------------------------------------------	
]]--[[// -----------------------------------------------------------------------------
]]--[[// Renvoie vrai si l'eni est dangereux pour moi
]]--[[// -----------------------------------------------------------------------------
]]--[[// Attention au seuil...
]]--[[// -----------------------------------------------------------------------------
]]--[[// Force evaluant la dangerosité d'une connaissance sur moi
]]--[[// valeur de sortie [1, 2] si valide, sinon 0
]]--[[// -----------------------------------------------------------------------------
]]--[[// -----------------------------------------------------------------------------
]]--[[// Force evaluant la dangerosité d'une connaissance sur moi
]]--[[// valeur de sortie [1, 2] si valide, sinon 0
]]--[[// -----------------------------------------------------------------------------
]]--[[// -----------------------------------------------------------------------------
]]--[[// S_Eni_EstCiblePrioritaireSelonCategorieAtlas
]]--[[// SPE ALAT OPT: A deplacer
]]--[[// -----------------------------------------------------------------------------
]]--[[// ----------------------------------------------------------------------------    
]]--[[// Renvoie la nature atlas d'un connaissance
]]--[[// SPE ALAT OPT: A deplacer
]]--[[// ----------------------------------------------------------------------------
]]function S_Eni_EstDetruitTactique( cible )
    local _returnValue = false
    _returnValue = DEC_ConnaissanceAgent_EtatOps( cible ) == 0
    do return _returnValue end
end

function S_Eni_EstDetruitPhysique( cible )
    local _returnValue = false
    _returnValue = DEC_ConnaissanceAgent_EstMort( cible )
    do return _returnValue end
end

function S_Eni_EtatCourant( repEni )
    local _returnValue = 0
    _returnValue = DEC_ConnaissanceAgent_EtatOps( repEni )
    do return _returnValue end
end

function S_Eni_Position( repUnite )
    local _returnValue = nil
    _returnValue = DEC_ConnaissanceAgent_Position( repUnite )
    do return _returnValue end
end

function S_Eni_Altitude( repUnite )
    local _returnValue = 0
    _returnValue = DEC_ConnaissanceAgent_Altitude( repUnite )
    do return _returnValue end
end

function S_Eni_ChercheEniPlusProchePosition( point, listeEnis )
    local _returnValue = nil
    local rDist_Min = 1105199104
    local rDistanceConnaissance = 0
    _returnValue = nil
    for _,ksEni in pairs( listeEnis or emptyTable ) do
    local _continue = true
do
            rDistanceConnaissance = DEC_Geometrie_Distance( point, DEC_ConnaissanceAgent_Position( ksEni ) )
            if( rDistanceConnaissance < rDist_Min ) then
                do
                    _returnValue = ksEni
                    rDist_Min = rDistanceConnaissance
                end
            end

        end

    end

    do return _returnValue end
end

function S_Eni_EstPercu( repUnite )
    local _returnValue = false
    _returnValue = DEC_ConnaissanceAgent_EstPercuParUnite( repUnite )
    do return _returnValue end
end

function S_Eni_EstEnMouvement( repEni )
    local _returnValue = false
    _returnValue = DEC_ConnaissanceAgent_EstEnMouvement( repEni )
    do return _returnValue end
end

function S_Eni_SuisDetectePar( ksEni )
    local _returnValue = false
    _returnValue = DEC_ConnaissanceAgent_PercoitUnite( ksEni )
    do return _returnValue end
end

function S_Eni_EstUnEnnemi( ksEni )
    local _returnValue = nil
    _returnValue = DEC_ConnaissanceAgent_EstUnEnnemi( ksEni )
    do return _returnValue end
end

function S_Eni_EstDansZone( ksEni, locZone )
    local _returnValue = false
    _returnValue = false
    local ptEni = DEC_ConnaissanceAgent_Position( ksEni )
    if( ptEni == nil or locZone == nil ) then
        do return _returnValue end
    end

    _returnValue = DEC_Geometrie_EstPointDansFuseau( ptEni ) and DEC_Geometrie_EstPointDansLocalisation( ptEni, locZone )
    do return _returnValue end
end

function S_Eni_EstDangereux( repEni )
    local _returnValue = false
    local rDangerosite = DEC_ConnaissanceAgent_Dangerosite( repEni )
    if( rDangerosite < 1.1 ) then
        _returnValue = false
    else
        _returnValue = true
    end

    do return _returnValue end
end

function S_ForceDangerSur( repEni )
    local _returnValue = 0
    _returnValue = DEC_ConnaissanceAgent_Dangerosite( repEni )
    do return _returnValue end
end

function S_Eni_ForceDangerPour( pionAmi, repEni )
    local _returnValue = 0
    _returnValue = DEC_ConnaissanceAgent_DangerositeSurPion( repEni, pionAmi )
    do return _returnValue end
end

function S_Eni_EstCiblePrioritaireSelonCategorieAtlas( cible, nTypeCiblePrioriraitreAtlas )
    local _returnValue = false
    _returnValue = false
    if( nTypeCiblePrioriraitreAtlas == eNatureAtlas_Indefini ) then
        _returnValue = true
    else
do
            local typeAtlas = DEC_ConnaissanceAgent_NatureAtlas( cible )
            if( typeAtlas == eNatureAtlas_None ) then
                do return _returnValue end
            end

            if( ( bit.band( nTypeCiblePrioriraitreAtlas, typeAtlas ) ) == nTypeCiblePrioriraitreAtlas ) then
                _returnValue = true
            end

        end
    end

    do return _returnValue end
end

function S_Eni_NatureAtlas( cible )
    local _returnValue = nil
    _returnValue = DEC_ConnaissanceAgent_NatureAtlas( cible )
    do return _returnValue end
end

