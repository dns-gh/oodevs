includedFiles = includedFiles or {}
includedFiles["sources/common/automates/missionsreactionpopulations/canaliserpopulations/CDT - CanaliserPopulations.bms"] = true

local emptyTable = emptyTable

--[[// *****************************************************************************
]]--[[// MIS_Automate_CDT_CanaliserPopulations
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]node "MIS_Automate_CDT_CanaliserPopulations"
{
    feedbacks = { { { "done_MIS_Automate_CDT_CanaliserPopulations" }, "MIS_Automate_CDT_CanaliserPopulations" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_MIS_Automate_CDT_CanaliserPopulations, {value} ) end,
    activations =
    {
        { "BEH_Ordre_Automate_RecevoirOrdreInopine", { "done_BEH_Ordre_Automate_RecevoirOrdreInopine" } },
        { "BEH_Mission_Automate_AssignerSuivreAListe", { "done_BEH_Mission_Automate_AssignerSuivreAListe" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        local Activate = Activate
        self.listePionsCanaliserPopulation = self.listePionsCanaliserPopulation or {}
        self.listePionsSuivre = self.listePionsSuivre or {}
        self.eEtatODC = self.eEtatODC or eActionEnCours
        if( self.eEtatODC == eActionHalt ) then
            do
                                self:SendFeedback( eActionEffectuee )
                Halt( self )
                do return end

                self.eEtatODC = eActionEnCours
            end
        end

        Activate( self.activations.BEH_Ordre_Automate_RecevoirOrdreInopine, 1, emptyTable )
self.done_BEH_Ordre_Automate_RecevoirOrdreInopine = function( self, _, v ) self.eEtatODC = v[1] end
        self.listePionsCanaliserPopulation = {}
        self.listePionsSuivre = {}
        self.listePionsCanaliserPopulation = S_Cherche_Automate_Filtre_TypeMission( DEC_Automate_PionsSansPC(), "T_Mission_Pion_CanaliserPopulations" )
        DIA_PushBack( self.listePionsSuivre, DEC_Automate_PionPC() )
        if( not DIA_IsListEmpty( self.listePionsCanaliserPopulation ) ) then
            do
                local pionASuivre = DEC_Geometrie_PionDerriere( self.listePionsCanaliserPopulation, DEC_GetDirectionEnnemi( self._namedParams.mission ) )
                Activate( self.activations.BEH_Mission_Automate_AssignerSuivreAListe, 1, { ePhase_CDT, self.listePionsSuivre, pionASuivre, } )
            end
        end

    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Automate_CDT_CanaliserPopulations = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.MIS_Automate_CDT_CanaliserPopulations, "BEH_Ordre_Automate_RecevoirOrdreInopine", nodes.BEH_Ordre_Automate_RecevoirOrdreInopine }
connections[ #connections + 1 ] = { nodes.MIS_Automate_CDT_CanaliserPopulations, "BEH_Mission_Automate_AssignerSuivreAListe", nodes.BEH_Mission_Automate_AssignerSuivreAListe }
