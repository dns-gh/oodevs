includedFiles = includedFiles or {}
includedFiles["sources/common/pions/behaviors/Behaviors - Ambiances.bms"] = true

--[[// *****************************************************************************
]]--[[// BEH_Ambiance
]]--[[//
]]--[[// Commentaires: il s'agit ici de traiter l'ambiance à laquelle est associé
]]--[[//               le pion.--> en fonction des dangerosités des connaissances de
]]--[[//               celui-ci.
]]--[[//
]]--[[// *****************************************************************************
]]node "BEH_Ambiance"
{
    feedbacks = { { { "done_BEH_Ambiance" }, "BEH_Ambiance" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Ambiance, {value} ) end,
    activations =
    {
        { "ACT_Ordre_Suppression", { "done_ACT_Ordre_Suppression" } },
        { "ACT_Info_Trace", { "done_ACT_Info_Trace" } },
        { "ACT_Dep_ModulationVitesse", { "done_ACT_Dep_ModulationVitesse" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        --[[//-----------------------------------------------------------------------------
]]--[[// Passer en mode surete ou vitesse si ordre
]]--[[// Permet (Eventuellement!) de repasser en ambiance vitesse si besoin
]]--[[//-----------------------------------------------------------------------------
]]local ordres_recus = DEC_GetCategory( "ordres_recus" )
        for _,x in pairs( ordres_recus or {} ) do
        local _continue = true
do
                local repOrdre = x
                if( repOrdre:GetType() == "Rep_OrderConduite_ChangerAmbiance" ) then
                    do
                        --[[// Cast
]]local ordreAmbiance = repOrdre
                        if( ordreAmbiance:GetorderConduiteChangerAmbiance_() == eAmbianceMission_Surete ) then
                            F_Pion_SeteEtatAmbiance( myself, eEtatAmbiance_Surete )
                        else
                            F_Pion_SeteEtatAmbiance( myself, eEtatAmbiance_Vitesse )
                        end
                    end
                end

                Activate( self.activations.ACT_Ordre_Suppression, 1, { x, } )
            end
--[[//-----------------------------------------------------------------------------
]]--[[// Passer en mode surete si possibilite d'eni
]]--[[//-----------------------------------------------------------------------------
]]
        end

        local listeConnaissances = DEC_Connaissances_UnitesEnnemiesDangereuses()
        if( not DIA_IsListEmpty( listeConnaissances ) ) then
            do
                --[[// info
]]Activate( self.activations.ACT_Info_Trace, 1, { "Danger detected", } )
                Activate( self.activations.ACT_Info_Trace, 1, { "Safe attitude", } )
                --[[// Init ambiance et modulation vitesse
]]--[[// sinon int dans mission et gestion LCA
]]F_Pion_SeteEtatAmbiance( myself, eEtatAmbiance_Surete )
                Activate( self.activations.ACT_Dep_ModulationVitesse, 1, { 0.4, } )
            end
        else
            Activate( self.activations.ACT_Dep_ModulationVitesse, 1, { 1, } )
        end

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Ambiance, "ACT_Ordre_Suppression", nodes.ACT_Ordre_Suppression }
connections[ #connections + 1 ] = { nodes.BEH_Ambiance, "ACT_Info_Trace", nodes.ACT_Info_Trace }
connections[ #connections + 1 ] = { nodes.BEH_Ambiance, "ACT_Dep_ModulationVitesse", nodes.ACT_Dep_ModulationVitesse }
