includedFiles = includedFiles or {}
includedFiles["sources/common/automates/actions/Actions - RC.bms"] = true

--[[// ****************************************************************************
]]--[[// ACT_RC_Automate
]]--[[// 
]]--[[// Commentaires: 
]]--[[//
]]--[[// *****************************************************************************
]]node "ACT_RC_Automate"
{
    feedbacks = { { { "done_ACT_RC_Automate" }, "ACT_RC_Automate" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_ACT_RC_Automate, {value} ) end,
    create = function( self )
        self._namedParams = {}
        self._namedParams.eTypeRC = self.params[1]
    end,

    select = function( self )
        if( ModuleBegins() ) then
            DEC_RC( self._namedParams.eTypeRC )
        end

    end,

}

--[[// ****************************************************************************** 
]]--[[// ACT_MAJ_Automate_EtatPhaseMission
]]--[[// 
]]--[[// Commentaires: Mets a jour la situation du pion en fonction de sa phase de mission
]]--[[// 
]]--[[// ****************************************************************************** 
]]node "ACT_MAJ_Automate_EtatPhaseMission"
{
    feedbacks = { { { "done_ACT_MAJ_Automate_EtatPhaseMission" }, "ACT_MAJ_Automate_EtatPhaseMission" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_ACT_MAJ_Automate_EtatPhaseMission, {value} ) end,
    create = function( self )
        self._namedParams = {}
        self._namedParams.eEtatPhaseMission = self.params[1]
    end,

    select = function( self )
                if( ModuleBegins() ) then
            F_Automat_SeteEtatPhaseMission( myself, self._namedParams.eEtatPhaseMission )
        end

    end,

    deselect = function( self )
            end,

    destroy = function( self )
                F_Automat_SeteEtatPhaseMission( myself, eEtatPhaseMission_None )
    end,

}

--[[// ****************************************************************************
]]--[[// ACT_RC_Automate_SurLima
]]--[[// 
]]--[[// Commentaires: 
]]--[[//
]]--[[// *****************************************************************************
]]node "ACT_RC_Automate_SurLima"
{
    feedbacks = { { { "done_ACT_RC_Automate_SurLima" }, "ACT_RC_Automate_SurLima" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_ACT_RC_Automate_SurLima, {value} ) end,
    create = function( self )
        self._namedParams = {}
        self._namedParams.eTypeLima = self.params[1]
    end,

    select = function( self )
        if( ModuleBegins() ) then
            DEC_RC( eRC_SurLima, self._namedParams.eTypeLima )
        end

    end,

}

--[[// ****************************************************************************
]]--[[// ACT_RC_Automate_SurPion
]]--[[// 
]]--[[// Commentaires: 
]]--[[//
]]--[[// *****************************************************************************
]]node "ACT_RC_Automate_SurPion"
{
    feedbacks = { { { "done_ACT_RC_Automate_SurPion" }, "ACT_RC_Automate_SurPion" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_ACT_RC_Automate_SurPion, {value} ) end,
    create = function( self )
        self._namedParams = {}
        self._namedParams.eTypeRC = self.params[1]
        self._namedParams.pion = self.params[2]
    end,

    select = function( self )
        if( ModuleBegins() ) then
            DEC_RC( self._namedParams.eTypeRC, self._namedParams.pion )
        end

    end,

}

