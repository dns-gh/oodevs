includedFiles = includedFiles or {}
includedFiles["sources/common/automates/behaviors/medo/Behaviors - Medo - ABC.bms"] = true

local emptyTable = emptyTable

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JCR 03-05-15 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Common/Automates/Behaviors/Medo/Behaviors - Medo - ABC.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 20/06/05 11:05 $
]]--[[// $Revision: 18 $
]]--[[// $Workfile: Behaviors - Medo - ABC.hal $
]]--[[//
]]--[[// *****************************************************************************
]]
include "Common/Automates/Actions/Medo/Actions - Medo - ABC.bms"


--[[//=============================================================================
]]--[[// Missions de Surete
]]--[[//=============================================================================
]]
--[[// *****************************************************************************
]]--[[// BEH_Mission_Automate_ABC_AssignerSoutenirA
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]node "BEH_Mission_Automate_ABC_AssignerSoutenirA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_ABC_AssignerSoutenirA" }, "BEH_Mission_Automate_ABC_AssignerSoutenirA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_ABC_AssignerSoutenirA, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_ABC_AssignerSoutenirA", { "done_ACT_Mission_Automate_ABC_AssignerSoutenirA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pPion = self.params[2]
        self._namedParams.pAAppuyer = self.params[3]
        self._namedParams.eEtatEchelon = self.params[4]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        Activate( self.activations.ACT_Mission_Automate_ABC_AssignerSoutenirA, rForce, { self._namedParams.ePhase, self._namedParams.pPion, self._namedParams.pAAppuyer, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_ABC_AssignerSoutenirA = function( self, _, v ) self.eActionCreation = v[1] end
    end,

--[[// *****************************************************************************
]]--[[// BEH_Mission_Automate_ABC_AssignerAppuyerA
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mission_Automate_ABC_AssignerAppuyerA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_ABC_AssignerAppuyerA" }, "BEH_Mission_Automate_ABC_AssignerAppuyerA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_ABC_AssignerAppuyerA, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_ABC_AssignerAppuyerA", { "done_ACT_Mission_Automate_ABC_AssignerAppuyerA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pPion = self.params[2]
        self._namedParams.pAAppuyer = self.params[3]
        self._namedParams.eEtatEchelon = self.params[4]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        Activate( self.activations.ACT_Mission_Automate_ABC_AssignerAppuyerA, rForce, { self._namedParams.ePhase, self._namedParams.pPion, self._namedParams.pAAppuyer, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_ABC_AssignerAppuyerA = function( self, _, v ) self.eActionCreation = v[1] end
    end,

--[[//=============================================================================
]]--[[// Missions Offensives
]]--[[//=============================================================================
]]--[[// *****************************************************************************
]]--[[// BEH_Mission_Automate_ABC_AssignerSemparerZoneA
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mission_Automate_ABC_AssignerSemparerZoneA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_ABC_AssignerSemparerZoneA" }, "BEH_Mission_Automate_ABC_AssignerSemparerZoneA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_ABC_AssignerSemparerZoneA, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_ABC_AssignerSemparerZoneA", { "done_ACT_Mission_Automate_ABC_AssignerSemparerZoneA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pPion = self.params[2]
        self._namedParams.zone = self.params[3]
        self._namedParams.eEtatEchelon = self.params[4]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        Activate( self.activations.ACT_Mission_Automate_ABC_AssignerSemparerZoneA, rForce, { self._namedParams.ePhase, self._namedParams.pPion, self._namedParams.zone, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_ABC_AssignerSemparerZoneA = function( self, _, v ) self.eActionCreation = v[1] end
    end,

--[[// *****************************************************************************
]]--[[// BEH_Mission_Automate_ABC_AssignerReconnaitreA
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mission_Automate_ABC_AssignerReconnaitreA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_ABC_AssignerReconnaitreA" }, "BEH_Mission_Automate_ABC_AssignerReconnaitreA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_ABC_AssignerReconnaitreA, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_ABC_AssignerReconnaitreA", { "done_ACT_Mission_Automate_ABC_AssignerReconnaitreA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pPion = self.params[2]
        self._namedParams.eEtatEchelon = self.params[3]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        Activate( self.activations.ACT_Mission_Automate_ABC_AssignerReconnaitreA, rForce, { self._namedParams.ePhase, self._namedParams.pPion, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_ABC_AssignerReconnaitreA = function( self, _, v ) self.eActionCreation = v[1] end
    end,

--[[// *****************************************************************************
]]--[[// BEH_Mission_Automate_ABC_AssignerReconnaitrePtA
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mission_Automate_ABC_AssignerReconnaitrePtA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_ABC_AssignerReconnaitrePtA" }, "BEH_Mission_Automate_ABC_AssignerReconnaitrePtA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_ABC_AssignerReconnaitrePtA, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_ABC_AssignerReconnaitrePtA", { "done_ACT_Mission_Automate_ABC_AssignerReconnaitrePtA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pPion = self.params[2]
        self._namedParams.pointAReconnaitre = self.params[3]
        self._namedParams.eEtatEchelon = self.params[4]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        Activate( self.activations.ACT_Mission_Automate_ABC_AssignerReconnaitrePtA, rForce, { self._namedParams.ePhase, self._namedParams.pPion, self._namedParams.pointAReconnaitre, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_ABC_AssignerReconnaitrePtA = function( self, _, v ) self.eActionCreation = v[1] end
    end,

--[[// *****************************************************************************
]]--[[// BEH_Mission_Automate_ABC_AssignerEclairerA
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mission_Automate_ABC_AssignerEclairerA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_ABC_AssignerEclairerA" }, "BEH_Mission_Automate_ABC_AssignerEclairerA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_ABC_AssignerEclairerA, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_ABC_AssignerEclairerA", { "done_ACT_Mission_Automate_ABC_AssignerEclairerA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pPion = self.params[2]
        self._namedParams.eEtatEchelon = self.params[3]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        Activate( self.activations.ACT_Mission_Automate_ABC_AssignerEclairerA, rForce, { self._namedParams.ePhase, self._namedParams.pPion, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_ABC_AssignerEclairerA = function( self, _, v ) self.eActionCreation = v[1] end
    end,

--[[// *****************************************************************************
]]--[[// BEH_Mission_Automate_ABC_AssignerEclairerPtA
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mission_Automate_ABC_AssignerEclairerPtA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_ABC_AssignerEclairerPtA" }, "BEH_Mission_Automate_ABC_AssignerEclairerPtA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_ABC_AssignerEclairerPtA, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_ABC_AssignerEclairerPtA", { "done_ACT_Mission_Automate_ABC_AssignerEclairerPtA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pPion = self.params[2]
        self._namedParams.ptDest = self.params[3]
        self._namedParams.eEtatEchelon = self.params[4]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        Activate( self.activations.ACT_Mission_Automate_ABC_AssignerEclairerPtA, rForce, { self._namedParams.ePhase, self._namedParams.pPion, self._namedParams.ptDest, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_ABC_AssignerEclairerPtA = function( self, _, v ) self.eActionCreation = v[1] end
    end,

--[[// *****************************************************************************
]]--[[// BEH_Mission_Automate_ABC_AssignerReconnaitrePointA
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mission_Automate_ABC_AssignerReconnaitrePointA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_ABC_AssignerReconnaitrePointA" }, "BEH_Mission_Automate_ABC_AssignerReconnaitrePointA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_ABC_AssignerReconnaitrePointA, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_ABC_AssignerReconnaitrePointA", { "done_ACT_Mission_Automate_ABC_AssignerReconnaitrePointA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pPion = self.params[2]
        self._namedParams.ptDest = self.params[3]
        self._namedParams.eEtatEchelon = self.params[4]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        Activate( self.activations.ACT_Mission_Automate_ABC_AssignerReconnaitrePointA, rForce, { self._namedParams.ePhase, self._namedParams.pPion, self._namedParams.ptDest, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_ABC_AssignerReconnaitrePointA = function( self, _, v ) self.eActionCreation = v[1] end
    end,

--[[// *****************************************************************************
]]--[[// BEH_Mission_Automate_ABC_AssignerAttaquerA
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mission_Automate_ABC_AssignerAttaquerA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_ABC_AssignerAttaquerA" }, "BEH_Mission_Automate_ABC_AssignerAttaquerA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_ABC_AssignerAttaquerA, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_ABC_AssignerAttaquerA", { "done_ACT_Mission_Automate_ABC_AssignerAttaquerA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pPion = self.params[2]
        self._namedParams.eEtatEchelon = self.params[3]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        Activate( self.activations.ACT_Mission_Automate_ABC_AssignerAttaquerA, rForce, { self._namedParams.ePhase, self._namedParams.pPion, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_ABC_AssignerAttaquerA = function( self, _, v ) self.eActionCreation = v[1] end
    end,

--[[// *****************************************************************************
]]--[[// BEH_Mission_Automate_ABC_AssignerReduireA
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mission_Automate_ABC_AssignerReduireA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_ABC_AssignerReduireA" }, "BEH_Mission_Automate_ABC_AssignerReduireA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_ABC_AssignerReduireA, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_ABC_AssignerReduireA", { "done_ACT_Mission_Automate_ABC_AssignerReduireA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pPion = self.params[2]
        self._namedParams.pionReduire = self.params[3]
        self._namedParams.eEtatEchelon = self.params[4]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        Activate( self.activations.ACT_Mission_Automate_ABC_AssignerReduireA, rForce, { self._namedParams.ePhase, self._namedParams.pPion, self._namedParams.pionReduire, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_ABC_AssignerReduireA = function( self, _, v ) self.eActionCreation = v[1] end
    end,

--[[// *****************************************************************************
]]--[[// BEH_Mission_Automate_ABC_AssignerFixerA
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mission_Automate_ABC_AssignerFixerA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_ABC_AssignerFixerA" }, "BEH_Mission_Automate_ABC_AssignerFixerA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_ABC_AssignerFixerA, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_ABC_AssignerFixerA", { "done_ACT_Mission_Automate_ABC_AssignerFixerA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pPion = self.params[2]
        self._namedParams.uniteAFixer = self.params[3]
        self._namedParams.eEtatEchelon = self.params[4]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        Activate( self.activations.ACT_Mission_Automate_ABC_AssignerFixerA, rForce, { self._namedParams.ePhase, self._namedParams.pPion, self._namedParams.uniteAFixer, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_ABC_AssignerFixerA = function( self, _, v ) self.eActionCreation = v[1] end
    end,

--[[// *****************************************************************************
]]--[[// BEH_Mission_Automate_ABC_AssignerSurveillerA
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mission_Automate_ABC_AssignerSurveillerA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_ABC_AssignerSurveillerA" }, "BEH_Mission_Automate_ABC_AssignerSurveillerA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_ABC_AssignerSurveillerA, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_ABC_AssignerSurveillerA", { "done_ACT_Mission_Automate_ABC_AssignerSurveillerA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pPion = self.params[2]
        self._namedParams.ptInstallation = self.params[3]
        self._namedParams.eEtatEchelon = self.params[4]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        Activate( self.activations.ACT_Mission_Automate_ABC_AssignerSurveillerA, rForce, { self._namedParams.ePhase, self._namedParams.pPion, self._namedParams.ptInstallation, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_ABC_AssignerSurveillerA = function( self, _, v ) self.eActionCreation = v[1] end
    end,

--[[// *****************************************************************************
]]--[[// BEH_Mission_Automate_ABC_AssignerControlerA
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mission_Automate_ABC_AssignerControlerA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_ABC_AssignerControlerA" }, "BEH_Mission_Automate_ABC_AssignerControlerA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_ABC_AssignerControlerA, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_ABC_AssignerControlerSecteurA", { "done_ACT_Mission_Automate_ABC_AssignerControlerSecteurA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pPion = self.params[2]
        self._namedParams.zoneAControler = self.params[3]
        self._namedParams.eEtatEchelon = self.params[4]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        Activate( self.activations.ACT_Mission_Automate_ABC_AssignerControlerSecteurA, rForce, { self._namedParams.ePhase, self._namedParams.pPion, self._namedParams.zoneAControler, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_ABC_AssignerControlerSecteurA = function( self, _, v ) self.eActionCreation = v[1] end
    end,

--[[// *****************************************************************************
]]--[[// BEH_Mission_Automate_ABC_AssignerBarrerA
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mission_Automate_ABC_AssignerBarrerA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_ABC_AssignerBarrerA" }, "BEH_Mission_Automate_ABC_AssignerBarrerA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_ABC_AssignerBarrerA, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_ABC_AssignerBarrerA", { "done_ACT_Mission_Automate_ABC_AssignerBarrerA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pPion = self.params[2]
        self._namedParams.positionInstallation = self.params[3]
        self._namedParams.eEtatEchelon = self.params[4]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        Activate( self.activations.ACT_Mission_Automate_ABC_AssignerBarrerA, rForce, { self._namedParams.ePhase, self._namedParams.pPion, self._namedParams.positionInstallation, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_ABC_AssignerBarrerA = function( self, _, v ) self.eActionCreation = v[1] end
    end,

--[[// *****************************************************************************
]]--[[// BEH_Mission_Automate_AssignerArmerPointControleA
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mission_Automate_AssignerArmerPointControleA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_AssignerArmerPointControleA" }, "BEH_Mission_Automate_AssignerArmerPointControleA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_AssignerArmerPointControleA, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_ABC_AssignerArmerPointControleA", { "done_ACT_Mission_Automate_ABC_AssignerArmerPointControleA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pPion = self.params[2]
        self._namedParams.pointControle = self.params[3]
        self._namedParams.eEtatEchelon = self.params[4]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        Activate( self.activations.ACT_Mission_Automate_ABC_AssignerArmerPointControleA, rForce, { self._namedParams.ePhase, self._namedParams.pPion, self._namedParams.pointControle, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_ABC_AssignerArmerPointControleA = function( self, _, v ) self.eActionCreation = v[1] end
    end,

--[[// *****************************************************************************
]]--[[// BEH_Mission_Automate_ABC_AssignerEscorterA
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mission_Automate_ABC_AssignerEscorterA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_ABC_AssignerEscorterA" }, "BEH_Mission_Automate_ABC_AssignerEscorterA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_ABC_AssignerEscorterA, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_ABC_AssignerEscorterA", { "done_ACT_Mission_Automate_ABC_AssignerEscorterA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pPion = self.params[2]
        self._namedParams.pionAEscorter = self.params[3]
        self._namedParams.eEtatEchelon = self.params[4]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        Activate( self.activations.ACT_Mission_Automate_ABC_AssignerEscorterA, rForce, { self._namedParams.ePhase, self._namedParams.pPion, self._namedParams.pionAEscorter, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_ABC_AssignerEscorterA = function( self, _, v ) self.eActionCreation = v[1] end
    end,

--[[// *****************************************************************************
]]--[[// BEH_Mission_Automate_ABC_AssignerEscorterAutomateA
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mission_Automate_ABC_AssignerEscorterAutomateA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_ABC_AssignerEscorterAutomateA" }, "BEH_Mission_Automate_ABC_AssignerEscorterAutomateA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_ABC_AssignerEscorterAutomateA, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_ABC_AssignerEscorterUnitesA", { "done_ACT_Mission_Automate_ABC_AssignerEscorterUnitesA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pPion = self.params[2]
        self._namedParams.automateAEscorter = self.params[3]
        self._namedParams.eEtatEchelon = self.params[4]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        Activate( self.activations.ACT_Mission_Automate_ABC_AssignerEscorterUnitesA, rForce, { self._namedParams.ePhase, self._namedParams.pPion, self._namedParams.automateAEscorter, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_ABC_AssignerEscorterUnitesA = function( self, _, v ) self.eActionCreation = v[1] end
    end,

--[[//=============================================================================
]]--[[// Missions retrogrades
]]--[[//=============================================================================
]]--[[// *****************************************************************************
]]--[[// BEH_Mission_Automate_ABC_AssignerFreinerA
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mission_Automate_ABC_AssignerFreinerA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_ABC_AssignerFreinerA" }, "BEH_Mission_Automate_ABC_AssignerFreinerA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_ABC_AssignerFreinerA, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_ABC_AssignerFreinerA", { "done_ACT_Mission_Automate_ABC_AssignerFreinerA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pPion = self.params[2]
        self._namedParams.eEtatEchelon = self.params[3]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        Activate( self.activations.ACT_Mission_Automate_ABC_AssignerFreinerA, rForce, { self._namedParams.ePhase, self._namedParams.pPion, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_ABC_AssignerFreinerA = function( self, _, v ) self.eActionCreation = v[1] end
    end,

--[[// *****************************************************************************
]]--[[// BEH_Mission_Automate_ABC_AssignerJalonnerA
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mission_Automate_ABC_AssignerJalonnerA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_ABC_AssignerJalonnerA" }, "BEH_Mission_Automate_ABC_AssignerJalonnerA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_ABC_AssignerJalonnerA, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_ABC_AssignerJalonnerA", { "done_ACT_Mission_Automate_ABC_AssignerJalonnerA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pPion = self.params[2]
        self._namedParams.eEtatEchelon = self.params[3]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        Activate( self.activations.ACT_Mission_Automate_ABC_AssignerJalonnerA, rForce, { self._namedParams.ePhase, self._namedParams.pPion, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_ABC_AssignerJalonnerA = function( self, _, v ) self.eActionCreation = v[1] end
    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerAppuyerA, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerAppuyerA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerAppuyerA, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerAppuyerA, "ACT_Mission_Automate_ABC_AssignerAppuyerA", nodes.ACT_Mission_Automate_ABC_AssignerAppuyerA }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerAttaquerA, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerAttaquerA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerAttaquerA, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerAttaquerA, "ACT_Mission_Automate_ABC_AssignerAttaquerA", nodes.ACT_Mission_Automate_ABC_AssignerAttaquerA }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerBarrerA, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerBarrerA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerBarrerA, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerBarrerA, "ACT_Mission_Automate_ABC_AssignerBarrerA", nodes.ACT_Mission_Automate_ABC_AssignerBarrerA }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerControlerA, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerControlerA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerControlerA, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerControlerA, "ACT_Mission_Automate_ABC_AssignerControlerSecteurA", nodes.ACT_Mission_Automate_ABC_AssignerControlerSecteurA }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerEclairerA, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerEclairerA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerEclairerA, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerEclairerA, "ACT_Mission_Automate_ABC_AssignerEclairerA", nodes.ACT_Mission_Automate_ABC_AssignerEclairerA }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerEclairerPtA, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerEclairerPtA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerEclairerPtA, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerEclairerPtA, "ACT_Mission_Automate_ABC_AssignerEclairerPtA", nodes.ACT_Mission_Automate_ABC_AssignerEclairerPtA }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerEscorterA, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerEscorterA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerEscorterA, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerEscorterA, "ACT_Mission_Automate_ABC_AssignerEscorterA", nodes.ACT_Mission_Automate_ABC_AssignerEscorterA }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerEscorterAutomateA, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerEscorterAutomateA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerEscorterAutomateA, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerEscorterAutomateA, "ACT_Mission_Automate_ABC_AssignerEscorterUnitesA", nodes.ACT_Mission_Automate_ABC_AssignerEscorterUnitesA }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerFixerA, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerFixerA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerFixerA, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerFixerA, "ACT_Mission_Automate_ABC_AssignerFixerA", nodes.ACT_Mission_Automate_ABC_AssignerFixerA }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerFreinerA, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerFreinerA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerFreinerA, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerFreinerA, "ACT_Mission_Automate_ABC_AssignerFreinerA", nodes.ACT_Mission_Automate_ABC_AssignerFreinerA }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerJalonnerA, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerJalonnerA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerJalonnerA, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerJalonnerA, "ACT_Mission_Automate_ABC_AssignerJalonnerA", nodes.ACT_Mission_Automate_ABC_AssignerJalonnerA }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerReconnaitreA, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerReconnaitreA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerReconnaitreA, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerReconnaitreA, "ACT_Mission_Automate_ABC_AssignerReconnaitreA", nodes.ACT_Mission_Automate_ABC_AssignerReconnaitreA }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerReconnaitrePointA, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerReconnaitrePointA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerReconnaitrePointA, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerReconnaitrePointA, "ACT_Mission_Automate_ABC_AssignerReconnaitrePointA", nodes.ACT_Mission_Automate_ABC_AssignerReconnaitrePointA }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerReconnaitrePtA, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerReconnaitrePtA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerReconnaitrePtA, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerReconnaitrePtA, "ACT_Mission_Automate_ABC_AssignerReconnaitrePtA", nodes.ACT_Mission_Automate_ABC_AssignerReconnaitrePtA }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerReduireA, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerReduireA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerReduireA, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerReduireA, "ACT_Mission_Automate_ABC_AssignerReduireA", nodes.ACT_Mission_Automate_ABC_AssignerReduireA }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerSemparerZoneA, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerSemparerZoneA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerSemparerZoneA, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerSemparerZoneA, "ACT_Mission_Automate_ABC_AssignerSemparerZoneA", nodes.ACT_Mission_Automate_ABC_AssignerSemparerZoneA }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerSoutenirA, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerSoutenirA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerSoutenirA, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerSoutenirA, "ACT_Mission_Automate_ABC_AssignerSoutenirA", nodes.ACT_Mission_Automate_ABC_AssignerSoutenirA }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerSurveillerA, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerSurveillerA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerSurveillerA, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_ABC_AssignerSurveillerA, "ACT_Mission_Automate_ABC_AssignerSurveillerA", nodes.ACT_Mission_Automate_ABC_AssignerSurveillerA }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_AssignerArmerPointControleA, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_AssignerArmerPointControleA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_AssignerArmerPointControleA, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_AssignerArmerPointControleA, "ACT_Mission_Automate_ABC_AssignerArmerPointControleA", nodes.ACT_Mission_Automate_ABC_AssignerArmerPointControleA }
