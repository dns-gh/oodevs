includedFiles = includedFiles or {}
includedFiles["sources/common/pions/behaviors/Behaviors - Mot.bms"] = true

include "bit.lua"


--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JDY 02-11-06 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Common/Pions/Behaviors/Behaviors - Mot.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 24/08/05 15:59 $
]]--[[// $Revision: 68 $
]]--[[// $Workfile: Behaviors - Mot.hal $
]]--[[//
]]--[[// *****************************************************************************
]]

--[[////////////////// DANS CE FICHIERS METTRE QUE LES COMPORTEMENTS APPELES PAR LES MOT //////////////
]]
--[[// *****************************************************************************
]]--[[// BEH_MOT_TenirFaceAuxEnis
]]--[[//
]]--[[// Commentaires: Il est nécessaire que la force S_Force_DangerSur soit comprise
]]--[[// dans [1,2]
]]--[[// *****************************************************************************
]]node "BEH_MOT_TenirFaceAuxEnis"
{
    activations =
    {
        { "ACT_Dep_SePosterFaceA", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        local listeConnaissances = DEC_Connaissances_UnitesEnnemiesDangereuses()
        for _,repEni in pairs( listeConnaissances or {} ) do
        local _continue = true
            Activate( self.activations.ACT_Dep_SePosterFaceA, S_Force_DangerSur( repEni ), { repEni, } )

        end

    end,

--[[// *****************************************************************************
]]--[[// BEH_MOT_GarderSesDistances
]]--[[//
]]--[[// Commentaires: Il est nécessaire que la force S_Force_DangerSur soit comprise
]]--[[//               dans [1,2]
]]--[[// *****************************************************************************
]]}

node "BEH_MOT_GarderSesDistances"
{
    activations =
    {
        { "ACT_MAJ_EtatDec", {} },
        { "BEH_MOT_GarderSesDistancesFaceA", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        --[[/*********************************************/]]Activate( self.activations.ACT_MAJ_EtatDec, 1, { eEtatDec_Sauvegarde, } )
        --[[/*********************************************/]]--[[// Pour certaines missions
]]if( g_bDesactiveSauvegarde ) then
            do return end
        end

        local listeConnaissances = DEC_Connaissances_UnitesEnnemiesDangereuses()
        for _,repEni in pairs( listeConnaissances or {} ) do
        local _continue = true
            Activate( self.activations.BEH_MOT_GarderSesDistancesFaceA, S_Force_DangerSur( repEni ), { repEni, } )

        end

    end,

--[[// *****************************************************************************
]]--[[// BEH_MOT_GarderSesDistancesFaceATirsIndirects
]]--[[//
]]--[[// Commentaires: 
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_MOT_GarderSesDistancesFaceATirsIndirects"
{
    activations =
    {
        { "BEH_Dep_ProgressionVers", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        --[[//-----------------------------------------------------------------------------
]]--[[// Init: calcule de la position de surete
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                local positionSurete = nil
                local mission = DEC_GetMission( myself )
                if( mission ~= nil ) then
                    positionSurete = DEC_Geometrie_PositionTranslateDir( DEC_Agent_Position(), DEC_GetDirectionDanger( mission ), -1500 )
                else
                    positionSurete = DEC_Geometrie_PositionTranslateDir( DEC_Agent_Position(), DEC_Agent_Direction(), -1500 )
                end

                StartActivateOverride( self, self.activations.BEH_Dep_ProgressionVers, 1.1, { positionSurete, eProgressionDirect, eTypeItiRepli, } )
            end
        end

    end,

--[[// *****************************************************************************
]]--[[// BEH_MOT_GarderSesDistancesFaceA
]]--[[//
]]--[[// Commentaires: Ce comportement utilise les priorites pour implémenté un
]]--[[// systeme de rail. On calcule au debut de l'esquive un itineraire sur lequel
]]--[[// on va se deplacer. Si on n'a plus besoin de se deplacer, on lance un
]]--[[// comportement SePoster avec la meme force mais une priorité supérieure
]]--[[// => on ne propage ainsi pas une force suplémentaire pour se poster, et on
]]--[[// ne recalcule pas systématiquement une nouvelle esquive
]]--[[//
]]--[[/// On a tj:
]]--[[//  rDistanceSauvegarde < rDistanceEsquive		
]]--[[//
]]--[[// Remarque : on a un probleme de precision dans les calculs des distances max
]]--[[// => on prefere ajouter 1 m a la distance rDistanceSurete afin d'avoir un 
]]--[[// rapport de force qui peut diminuer quand on est a cette distance.
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_MOT_GarderSesDistancesFaceA"
{
    instances =
    {
        boost = 1.01,
        max = 1,
    },

    activations =
    {
        { "BEH_SePosterFaceAEni", {} },
        { "BEH_Eni_DecrocherFaceA", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.repEni = self.params[1]
    end,

    activate = function( self )
        self.rDistanceEfficace = self.rDistanceEfficace or S_Tir_PorteeMaxPourEtreTireParAgent( self._namedParams.repEni, M_POLY_PH_TIR_ENI_EFFICACE() )
        --[[//Cf. erreur de precision
]]self.rDistanceSurete = self.rDistanceSurete or S_Tir_PorteeMaxPourEtreTireParAgent( self._namedParams.repEni, 0.2 ) + 10
        self.rDeltaDistance = self.rDeltaDistance or self.rDistanceSurete - self.rDistanceEfficace
        local rCoefEsquive = 0
        --[[//si tir interdit ou tir restreint, alors, aller a la distance Surete    
]]if( ( ( GetStateVariable( "VE_TirRestreint" ) == 0 or GetStateVariable( "VE_TirRestreint" ) == nil ) ) or ( ( GetStateVariable( "VE_TirInterdit" ) == 0 or GetStateVariable( "VE_TirInterdit" ) == nil ) ) ) then
            rCoefEsquive = 1
        else
            --[[//si tir libre
]]rCoefEsquive = GetActivity() / 5000
        end

        local rDistanceEsquive = self.rDistanceEfficace + ( self.rDeltaDistance * rCoefEsquive )
        --[[//il faut toujours etre superieure a DecrocherFaceA => 1.02							   
]]if( DEC_Geometrie_Distance( myself:DEC_Agent_Position(), DEC_ConnaissanceAgent_Position( self._namedParams.repEni ) ) > rDistanceEsquive ) then
            Activate( self.activations.BEH_SePosterFaceAEni, 1.02, { self._namedParams.repEni, } )
        end

        --[[// DecrocherFaceA a un selectedBoost (1.01)
]]--[[// le troisieme arguement indique que l'on veut se mettre au maximum a 
]]--[[// rDistanceSurete + 0 metres. On n'a pas de distance de securité ajoutée dans
]]--[[// le combat de rencontre
]]Activate( self.activations.BEH_Eni_DecrocherFaceA, 1, { self._namedParams.repEni, self.rDistanceSurete, 0, } )
    end,

--[[// =============================================================================
]]--[[// Gestion du FEU
]]--[[// =============================================================================
]]--[[// *****************************************************************************
]]--[[// BEH_MOT_TirerSurEnis
]]--[[//
]]--[[// Commentaires: 
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_MOT_TirerSurEnis"
{
    activations =
    {
        { "BEH_MOT_GererLesFeuxSur", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        local listeConnaissances = DEC_Connaissances_UnitesEnnemiesVivantesPercues()
        for _,repEni in pairs( listeConnaissances or {} ) do
        local _continue = true
            Activate( self.activations.BEH_MOT_GererLesFeuxSur, S_Force_DangerSur( repEni ), { repEni, } )

        end

    end,

--[[// *****************************************************************************
]]--[[// BEH_MOT_GererLesFeuxSur
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_MOT_GererLesFeuxSur"
{
    instances =
    {
        boost = 1.01,
    },

    activations =
    {
        { "BEH_Feu_Pion_ABC_ConduireLesFeuxSur", {} },
        { "ACT_Obs_EtablirVisionVersPt", {} },
        { "ACT_Info_Trace", {} },
        { "BEH_Eni_Pion_INF_GererContactEni", {} },
        { "BEH_Eni_Pion_Milice_GererContactEni", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.repEni = self.params[1]
    end,

    activate = function( self )
        if( meleeAbcPionsCommon() ) then
if( S_Eni_EstNiveauPerceptionGTIA( self._namedParams.repEni, eReconnu ) ) then
                do
                    if( S_Tir_EstAPortee( self._namedParams.repEni, GetStateVariable( "VE_Agressivite_Tir" ) ) ) then
                        Activate( self.activations.BEH_Feu_Pion_ABC_ConduireLesFeuxSur, 1, { self._namedParams.repEni, 0.5, } )
                    end

                end
            end
        end

        if( meleeInfPionsCommon() ) then
            do
                Activate( self.activations.ACT_Obs_EtablirVisionVersPt, 1, { DEC_ConnaissanceAgent_Position( self._namedParams.repEni ), } )
                if( not DEC_ConnaissanceAgent_EstPercuParUnite( self._namedParams.repEni ) ) then
                    self.params.__returnValue = eActionEnPause
                    do return end
                end

                local strMsg = "MP: Niveau d'identification demande ( " .. EnumToString( F_Pion_GeteNiveauAction( myself ), E_NiveauPerception ) .. " )"
                if( not S_Eni_EstNiveauPerceptionGTIA( self._namedParams.repEni, F_Pion_GeteNiveauAction( myself ) ) ) then
                    do
                        Activate( self.activations.ACT_Info_Trace, 1, { strMsg .. " : NOK", } )
                                                self.params.__returnValue = eActionEnPause
                        do return end

                    end
                end

                Activate( self.activations.ACT_Info_Trace, 1, { strMsg .. " : OK", } )
                Activate( self.activations.BEH_Eni_Pion_INF_GererContactEni, 1, { self._namedParams.repEni, } )
            end
        end

        if( populationAsymetriquesTerroristePion() ) then
            do
                local strMsg = "Niveau d'identification demande ( " .. EnumToString( F_Pion_GeteNiveauAction( myself ), E_NiveauPerception ) .. " )"
                if( not S_Eni_EstNiveauPerceptionGTIA( self._namedParams.repEni, F_Pion_GeteNiveauAction( myself ) ) ) then
                    do
                        Activate( self.activations.ACT_Info_Trace, 1, { strMsg .. " : NOK", } )
                                                self.params.__returnValue = eActionEnPause
                        do return end

                    end
                end

                Activate( self.activations.ACT_Info_Trace, 1, { strMsg .. " : OK", } )
            end
        end

        if( populationMilicesPion() ) then
            do
                local strMsg = "Niveau d'identification demande ( " .. EnumToString( F_Pion_GeteNiveauAction( myself ), E_NiveauPerception ) .. " )"
                if( not S_Eni_EstNiveauPerceptionGTIA( self._namedParams.repEni, F_Pion_GeteNiveauAction( myself ) ) ) then
                    do
                        Activate( self.activations.ACT_Info_Trace, 1, { strMsg .. " : NOK", } )
                                                self.params.__returnValue = eActionEnPause
                        do return end

                    end
                end

                Activate( self.activations.ACT_Info_Trace, 1, { strMsg .. " : OK", } )
                Activate( self.activations.BEH_Eni_Pion_Milice_GererContactEni, 1, { self._namedParams.repEni, } )
            end
        end

    end,

--[[// *****************************************************************************
]]--[[// BEH_MOT_RisposterSurEnis
]]--[[//
]]--[[// Commentaires: 
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_MOT_RiposterSurEnis"
{
    activations =
    {
        { "ACT_Info_Trace", {} },
        { "ACT_Tir_DirectSur", {} },
        { "ACT_Obs_EtablirVisionVersPt", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        local listeConnaissances = DEC_Connaissances_UnitesPrenantAPartie()
        for _,repEni in pairs( listeConnaissances or {} ) do
        local _continue = true
do
                if( S_Tir_EstAPortee( repEni, M_POLY_PH_RIPOSTE() ) ) then
                    do
                        --[[// tirer sur l'ennemi détecté le plus dangereux
]]if( DEC_ConnaissanceAgent_EstPercuParUnite( repEni ) ) then
                            do
                                Activate( self.activations.ACT_Info_Trace, 1, { "---> Return of fire !", } )
                                Activate( self.activations.ACT_Tir_DirectSur, S_Force_DangerSur( repEni ), { repEni, 0.25, } )
                            end
                        else
                            Activate( self.activations.ACT_Obs_EtablirVisionVersPt, S_Force_DangerSur( repEni ), { DEC_ConnaissanceAgent_Position( repEni ), } )
                        end

                    end
                end

            end

        end

    end,

--[[// =============================================================================
]]--[[// Gestion des ordres de manoeuvre (coordination automate ou ordre anibas)
]]--[[// =============================================================================
]]--[[// *****************************************************************************
]]--[[// BEH_MOT_SePoster
]]--[[//
]]--[[// Commentaires: 
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_MOT_SePoster"
{
    activations =
    {
        { "ACT_MAJ_EtatOrdreCoordination", {} },
        { "ACT_Dep_SePoster", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        --[[/*****************************************************/]]Activate( self.activations.ACT_MAJ_EtatOrdreCoordination, 1, { eEtatOrdreCoordination_Attendre, } )
        Activate( self.activations.ACT_Dep_SePoster, 1, {} )--[[/*****************************************************/]]
    end,

--[[// =============================================================================
]]--[[// Gestion des ordres de manoeuvre (coordination automate ou ordre anibas)
]]--[[// =============================================================================
]]}

node "BEH_MOT_EtrePrudent"
{
    activations =
    {
        { "ACT_MAJ_EtatPrudence", {} },
        { "BEH_MOT_Ralentir", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        --[[/*****************************************************/]]Activate( self.activations.ACT_MAJ_EtatPrudence, 1, { eEtatDecPrudence_Actif, } )
        Activate( self.activations.BEH_MOT_Ralentir, 1, {} )--[[/*****************************************************/]]
    end,

--[[// *****************************************************************************
]]--[[// BEH_MOT_Ralentir
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_MOT_Ralentir"
{
    activations =
    {
        { "ACT_Dep_ModulationVitesse", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        --[[// ici pas de 'action ACT_MAJ_EtatOrdreCoordination( eEtatOrdreCoordination_Ralentir );' car pas en compettion avec le poste
]]Activate( self.activations.ACT_Dep_ModulationVitesse, 1, { M_POLY_DOCTRINE_MODULATION_VITESSE_RALENTIR(), } )
    end,

--[[// *****************************************************************************
]]--[[// BEH_MOT_PasserEnAlerteDeNiveau4
]]--[[//
]]--[[// Commentaires: 
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_MOT_PasserEnAlerteDeNiveau4"
{
    activations =
    {
        { "BEH_Nbc_GererAlerteNiv4", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        Activate( self.activations.BEH_Nbc_GererAlerteNiv4, 1, {} )
    end,

--[[// *****************************************************************************
]]--[[// BEH_MOT_PasserEnSilenceRadio
]]--[[//
]]--[[// Commentaires: 
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_MOT_PasserEnSilenceRadio"
{
    activations =
    {
        { "BEH_Rens_PasserEnSilenceRadio", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        Activate( self.activations.BEH_Rens_PasserEnSilenceRadio, 1, {} )
    end,

--[[// ****************************************************************************** 
]]--[[// BEH_Obs_ActiverRadars 
]]--[[// 
]]--[[// Commentaires:
]]--[[// 
]]--[[// ******************************************************************************
]]}

node "BEH_MOT_SilenceRadars"
{
    activations =
    {
        { "BEH_Rens_PasserEnSilenceRadar", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        Activate( self.activations.BEH_Rens_PasserEnSilenceRadar, 1, { eRadarType_Radar, } )
        Activate( self.activations.BEH_Rens_PasserEnSilenceRadar, 1, { eRadarType_Ecoute, } )
        Activate( self.activations.BEH_Rens_PasserEnSilenceRadar, 1, { eRadarType_EcouteRadar, } )
    end,

--[[// *****************************************************************************
]]--[[// BEH_MOT_PasserEnTirRestreint
]]--[[//
]]--[[// Commentaires: en compétition avec tir interdit
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_MOT_PasserEnTirRestreint"
{
    activations =
    {
        { "BEH_ROE_GererTirRestreint", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        Activate( self.activations.BEH_ROE_GererTirRestreint, 1, {} )
    end,

--[[// *****************************************************************************
]]--[[// BEH_MOT_PasserEnTirInterdit
]]--[[//
]]--[[// Commentaires: en compétition avec tir restreint
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_MOT_PasserEnTirInterdit"
{
    activations =
    {
        { "BEH_ROE_GererTirInterdit", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        Activate( self.activations.BEH_ROE_GererTirInterdit, 1, {} )
    end,

--[[// *****************************************************************************
]]--[[// BEH_MOT_PasserEnTirLibre
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_MOT_PasserEnTirLibre"
{
    activations =
    {
        { "BEH_ROE_GererTirLibre", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        Activate( self.activations.BEH_ROE_GererTirLibre, 1, {} )
    end,

--[[// *****************************************************************************
]]--[[// BEH_MOT_DesactiveSauvegarde
]]--[[//
]]--[[// Commentaires: en compétition avec tir restreint
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_MOT_DesactiveSauvegarde"
{
    create = function( self )
    end,

    activate = function( self )
                if( ModuleBegins() ) then
            g_bDesactiveSauvegarde = true
        end

    end,

    destroy = function( self )
                g_bDesactiveSauvegarde = false
    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_MOT_EtrePrudent, "ACT_MAJ_EtatPrudence", nodes.ACT_MAJ_EtatPrudence }
connections[ #connections + 1 ] = { nodes.BEH_MOT_EtrePrudent, "BEH_MOT_Ralentir", nodes.BEH_MOT_Ralentir }
connections[ #connections + 1 ] = { nodes.BEH_MOT_GarderSesDistances, "ACT_MAJ_EtatDec", nodes.ACT_MAJ_EtatDec }
connections[ #connections + 1 ] = { nodes.BEH_MOT_GarderSesDistances, "BEH_MOT_GarderSesDistancesFaceA", nodes.BEH_MOT_GarderSesDistancesFaceA }
connections[ #connections + 1 ] = { nodes.BEH_MOT_GarderSesDistancesFaceA, "BEH_SePosterFaceAEni", nodes.BEH_SePosterFaceAEni }
connections[ #connections + 1 ] = { nodes.BEH_MOT_GarderSesDistancesFaceA, "BEH_Eni_DecrocherFaceA", nodes.BEH_Eni_DecrocherFaceA }
connections[ #connections + 1 ] = { nodes.BEH_MOT_GarderSesDistancesFaceATirsIndirects, "BEH_Dep_ProgressionVers", nodes.BEH_Dep_ProgressionVers }
connections[ #connections + 1 ] = { nodes.BEH_MOT_GererLesFeuxSur, "BEH_Feu_Pion_ABC_ConduireLesFeuxSur", nodes.BEH_Feu_Pion_ABC_ConduireLesFeuxSur }
connections[ #connections + 1 ] = { nodes.BEH_MOT_GererLesFeuxSur, "ACT_Obs_EtablirVisionVersPt", nodes.ACT_Obs_EtablirVisionVersPt }
connections[ #connections + 1 ] = { nodes.BEH_MOT_GererLesFeuxSur, "ACT_Info_Trace", nodes.ACT_Info_Trace }
connections[ #connections + 1 ] = { nodes.BEH_MOT_GererLesFeuxSur, "BEH_Eni_Pion_INF_GererContactEni", nodes.BEH_Eni_Pion_INF_GererContactEni }
connections[ #connections + 1 ] = { nodes.BEH_MOT_GererLesFeuxSur, "BEH_Eni_Pion_Milice_GererContactEni", nodes.BEH_Eni_Pion_Milice_GererContactEni }
connections[ #connections + 1 ] = { nodes.BEH_MOT_PasserEnAlerteDeNiveau4, "BEH_Nbc_GererAlerteNiv4", nodes.BEH_Nbc_GererAlerteNiv4 }
connections[ #connections + 1 ] = { nodes.BEH_MOT_PasserEnSilenceRadio, "BEH_Rens_PasserEnSilenceRadio", nodes.BEH_Rens_PasserEnSilenceRadio }
connections[ #connections + 1 ] = { nodes.BEH_MOT_PasserEnTirInterdit, "BEH_ROE_GererTirInterdit", nodes.BEH_ROE_GererTirInterdit }
connections[ #connections + 1 ] = { nodes.BEH_MOT_PasserEnTirLibre, "BEH_ROE_GererTirLibre", nodes.BEH_ROE_GererTirLibre }
connections[ #connections + 1 ] = { nodes.BEH_MOT_PasserEnTirRestreint, "BEH_ROE_GererTirRestreint", nodes.BEH_ROE_GererTirRestreint }
connections[ #connections + 1 ] = { nodes.BEH_MOT_Ralentir, "ACT_Dep_ModulationVitesse", nodes.ACT_Dep_ModulationVitesse }
connections[ #connections + 1 ] = { nodes.BEH_MOT_RiposterSurEnis, "ACT_Info_Trace", nodes.ACT_Info_Trace }
connections[ #connections + 1 ] = { nodes.BEH_MOT_RiposterSurEnis, "ACT_Tir_DirectSur", nodes.ACT_Tir_DirectSur }
connections[ #connections + 1 ] = { nodes.BEH_MOT_RiposterSurEnis, "ACT_Obs_EtablirVisionVersPt", nodes.ACT_Obs_EtablirVisionVersPt }
connections[ #connections + 1 ] = { nodes.BEH_MOT_SePoster, "ACT_MAJ_EtatOrdreCoordination", nodes.ACT_MAJ_EtatOrdreCoordination }
connections[ #connections + 1 ] = { nodes.BEH_MOT_SePoster, "ACT_Dep_SePoster", nodes.ACT_Dep_SePoster }
connections[ #connections + 1 ] = { nodes.BEH_MOT_SilenceRadars, "BEH_Rens_PasserEnSilenceRadar", nodes.BEH_Rens_PasserEnSilenceRadar }
connections[ #connections + 1 ] = { nodes.BEH_MOT_TenirFaceAuxEnis, "ACT_Dep_SePosterFaceA", nodes.ACT_Dep_SePosterFaceA }
connections[ #connections + 1 ] = { nodes.BEH_MOT_TirerSurEnis, "BEH_MOT_GererLesFeuxSur", nodes.BEH_MOT_GererLesFeuxSur }
