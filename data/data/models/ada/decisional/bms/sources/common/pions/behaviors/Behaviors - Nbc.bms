includedFiles = includedFiles or {}
includedFiles["sources/common/pions/behaviors/Behaviors - Nbc.bms"] = true

local emptyTable = emptyTable

include "bit.lua"


--[[// *****************************************************************************
]]--[[// BEH_Nbc()
]]--[[//
]]--[[// Commentaires :
]]--[[// 
]]--[[// *****************************************************************************
]]node "BEH_Nbc"
{
    feedbacks = { { { "done_BEH_Nbc" }, "BEH_Nbc" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Nbc, {value} ) end,
    activations =
    {
        { "BEH_Nbc_Recevoir_OrdreInopine", { "done_BEH_Nbc_Recevoir_OrdreInopine" } },
        { "BEH_ReactToNBC", { "done_BEH_ReactToNBC" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        --[[//-----------------------------------------------------------------------------
]]--[[// Gestion de l'ordre de conduite
]]--[[//-----------------------------------------------------------------------------
]]if( not DEC_Agent_AutomateEstEmbraye() and DEC_Agent_EstContamine() ) then
            do
                SetStateVariable( "VE_NiveauNBC", 4 )
            end
--[[// pour anibas
]]        end

        Activate( self.activations.BEH_Nbc_Recevoir_OrdreInopine, 1, emptyTable )
        Activate( self.activations.BEH_ReactToNBC, 1, emptyTable )
    end,

--[[// *****************************************************************************
]]--[[// BEH_Nbc_Recevoir_OrdreInopine
]]--[[//
]]--[[//Commentaires :
]]--[[//
]]--[[// *****************************************************************************
]]--[[// MIA effectivement sert seulement en debrayé
]]}

node "BEH_Nbc_Recevoir_OrdreInopine"
{
    feedbacks = { { { "done_BEH_Nbc_Recevoir_OrdreInopine" }, "BEH_Nbc_Recevoir_OrdreInopine" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Nbc_Recevoir_OrdreInopine, {value} ) end,
    activations =
    {
        { "ACT_Ordre_Suppression", { "done_ACT_Ordre_Suppression" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        local ordres_recus = DEC_GetCategory( "ordres_recus" )
        for _,x in pairs( ordres_recus or emptyTable ) do
        local _continue = true
do
                local repOrdre = x
                 do
                    local _continue = true
                    local switch_1 = repOrdre:GetType()
                        if switch_1 == "Rep_OrderConduite_MettreTenueNBC" then
                            SetStateVariable( "VE_NiveauNBC", 4 )
                            _continue = false
                        elseif switch_1 == "Rep_OrderConduite_EnleverTenueNBC" then
                            SetStateVariable( "VE_NiveauNBC", 0 )
                            _continue = false
                                                end
                    end

                Activate( self.activations.ACT_Ordre_Suppression, 1, { x, } )
            end

        end

    end,

--[[// *****************************************************************************
]]--[[// BEH_ReactToNBC
]]--[[//
]]--[[// Commentaires : Comportement automatique d'évitement des zones NBC
]]--[[// 
]]--[[// *****************************************************************************
]]}

node "BEH_ReactToNBC"
{
    feedbacks = { { { "done_BEH_ReactToNBC" }, "BEH_ReactToNBC" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_ReactToNBC, {value} ) end,
    activations =
    {
        { "BEH_Dep_ProgressionVers", { "done_BEH_Dep_ProgressionVers" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        local pos = DEC_Agent_Position()
        local lstObjects = DEC_Connaissances_ObjetsDansCercle( pos, 2000, S_TypeObject_ToString( eTypeObjectNuageNBC ), S_TypeObject_ToString( eTypeObjectZoneNBC ) )
        local lstObjectsInside = {}
        for _,x in pairs( lstObjects or emptyTable ) do
        local _continue = true
do
                local objet = x
                if( DEC_Geometrie_EstPointDansLocalisation( pos, DEC_ConnaissanceObjet_Localisation( object ) ) ) then
                    do
                        DEC_UserTypeList_PushBack( lstObjectsInside, objet )
                    end
                end

            end

        end

        local positions = {}
        for _,x in pairs( lstObjectsInside or emptyTable ) do
        local _continue = true
do
                local objet = x
                DEC_UserTypeList_PushBack( positions, DEC_Geometrie_GetLeavingAreaPosition( DEC_ConnaissanceObjet_Localisation( objet ) ) )
            end

        end

        for _,x in pairs( positions or emptyTable ) do
        local _continue = true
do
                local position = x
                Activate( self.activations.BEH_Dep_ProgressionVers, 1 / DEC_Geometrie_DistanceBetweenPoints( position, pos ), { position, eProgressionDirect, eTypeItiRepli, } )
            end

        end

    end,

--[[// *****************************************************************************
]]--[[// BEH_Nbc_GererAlerteNiv4
]]--[[//
]]--[[// Commentaires : appelé par la BEH_MOT_PasserEnAlerteDeNiveau4 issu de la 
]]--[[//				  de la motivation du même nom
]]--[[// 
]]--[[// *****************************************************************************
]]}

node "BEH_Nbc_GererAlerteNiv4"
{
    feedbacks = { { { "done_BEH_Nbc_GererAlerteNiv4" }, "BEH_Nbc_GererAlerteNiv4" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Nbc_GererAlerteNiv4, {value} ) end,
    activations =
    {
        { "ACT_Nbc_MettreTenueProtection", { "done_ACT_Nbc_MettreTenueProtection" } },
        { "ACT_Nbc_PasserEnNiveauNBC", { "done_ACT_Nbc_PasserEnNiveauNBC" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        Activate( self.activations.ACT_Nbc_MettreTenueProtection, 1, emptyTable )--[[//-----------------------------------------------------------------------------
]]--[[// Mettre la combi
]]--[[//-----------------------------------------------------------------------------
]]
        --[[//-----------------------------------------------------------------------------
]]--[[// MAJ état niv4
]]--[[//----------------------------------------------------------------------------- 
]]Activate( self.activations.ACT_Nbc_PasserEnNiveauNBC, 1, { eEtatNbc_Niv4, } )
    end,

--[[// *****************************************************************************
]]--[[// ACT_Nbc_MettreTenueProtection
]]--[[//
]]--[[// Commentaires :
]]--[[// 
]]--[[// *****************************************************************************
]]}

node "ACT_Nbc_MettreTenueProtection"
{
    feedbacks = { { { "done_ACT_Nbc_MettreTenueProtection" }, "ACT_Nbc_MettreTenueProtection" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_ACT_Nbc_MettreTenueProtection, {value} ) end,
    create = function( self )
    end,

    select = function( self )
        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]        if( ModuleBegins() ) then
            do
                                do
                    if( not DEC_Agent_AutomateEstEmbraye() ) then
                        DEC_RC( eRC_TenueProtectionNBCMise )
                    else
                        DEC_Message( eRC_TenueProtectionNBCMise )
                    end

                end

                DEC_Agent_MettreTenueProtectionNBC()
            end
        end

    end,

    deselect = function( self )
            end,

    destroy = function( self )
                do
            if( not DEC_Agent_AutomateEstEmbraye() ) then
                DEC_RC( eRC_TenueProtectionNBCEnlevee )
            else
                DEC_Message( eRC_TenueProtectionNBCEnlevee )
            end

        end

        DEC_Agent_EnleverTenueProtectionNBC()
    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Nbc, "BEH_Nbc_Recevoir_OrdreInopine", nodes.BEH_Nbc_Recevoir_OrdreInopine }
connections[ #connections + 1 ] = { nodes.BEH_Nbc, "BEH_ReactToNBC", nodes.BEH_ReactToNBC }
connections[ #connections + 1 ] = { nodes.BEH_Nbc_GererAlerteNiv4, "ACT_Nbc_MettreTenueProtection", nodes.ACT_Nbc_MettreTenueProtection }
connections[ #connections + 1 ] = { nodes.BEH_Nbc_GererAlerteNiv4, "ACT_Nbc_PasserEnNiveauNBC", nodes.ACT_Nbc_PasserEnNiveauNBC }
connections[ #connections + 1 ] = { nodes.BEH_Nbc_Recevoir_OrdreInopine, "ACT_Ordre_Suppression", nodes.ACT_Ordre_Suppression }
connections[ #connections + 1 ] = { nodes.BEH_ReactToNBC, "BEH_Dep_ProgressionVers", nodes.BEH_Dep_ProgressionVers }
