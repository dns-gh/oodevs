includedFiles = includedFiles or {}
includedFiles["sources/common/pions/behaviors/Behaviors - Nbc.bms"] = true

include "bit.lua"


--[[// *****************************************************************************
]]--[[// BEH_Nbc()
]]--[[//
]]--[[// Commentaires :
]]--[[// 
]]--[[// *****************************************************************************
]]node "BEH_Nbc"
{
    activations =
    {
        { "BEH_Nbc_Recevoir_OrdreInopine", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        --[[//-----------------------------------------------------------------------------
]]--[[// Gestion de l'ordre de conduite
]]--[[//-----------------------------------------------------------------------------
]]if( not DEC_Agent_AutomateEstEmbraye() and DEC_Agent_EstContamine() ) then
            do
                SetStateVariable( "VE_NiveauNBC", 4 )
            end
--[[// pour anibas
]]        end

        Activate( self.activations.BEH_Nbc_Recevoir_OrdreInopine, 1, {} )
    end,

--[[// *****************************************************************************
]]--[[// BEH_Nbc_Recevoir_OrdreInopine
]]--[[//
]]--[[//Commentaires :
]]--[[//
]]--[[// *****************************************************************************
]]--[[// MIA effectivement sert seulement en debrayé
]]}

node "BEH_Nbc_Recevoir_OrdreInopine"
{
    activations =
    {
        { "ACT_Ordre_Suppression", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        local ordres_recus = DEC_GetCategory( "ordres_recus" )
        for _,x in pairs( ordres_recus or {} ) do
        local _continue = true
do
                local repOrdre = x
                 do
                    local _continue = true
                    local switch_1 = repOrdre:GetType()
                    local cases_switch_1 = {}
                        if switch_1 == "Rep_OrderConduite_MettreTenueNBC" then
                            SetStateVariable( "VE_NiveauNBC", 4 )
                            _continue = false
                                                cases_switch_1[1] = true
elseif switch_1 == "Rep_OrderConduite_EnleverTenueNBC" then
                            SetStateVariable( "VE_NiveauNBC", 0 )
                            _continue = false
                                                cases_switch_1[2] = true
                        end
                    end

                    if _continue then
                    Activate( self.activations.ACT_Ordre_Suppression, 1, { x, } )
                end
            end

        end

    end,

--[[// *****************************************************************************
]]--[[// BEH_Nbc_GererAlerteNiv4
]]--[[//
]]--[[// Commentaires : appelé par la BEH_MOT_PasserEnAlerteDeNiveau4 issu de la 
]]--[[//				  de la motivation du même nom
]]--[[// 
]]--[[// *****************************************************************************
]]}

node "BEH_Nbc_GererAlerteNiv4"
{
    activations =
    {
        { "ACT_Nbc_MettreTenueProtection", {} },
        { "ACT_Nbc_PasserEnNiveauNBC", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        Activate( self.activations.ACT_Nbc_MettreTenueProtection, 1, {} )--[[//-----------------------------------------------------------------------------
]]--[[// Mettre la combi
]]--[[//-----------------------------------------------------------------------------
]]
        --[[//-----------------------------------------------------------------------------
]]--[[// MAJ état niv4
]]--[[//----------------------------------------------------------------------------- 
]]Activate( self.activations.ACT_Nbc_PasserEnNiveauNBC, 1, { eEtatNbc_Niv4, } )
    end,

--[[// *****************************************************************************
]]--[[// ACT_Nbc_MettreTenueProtection
]]--[[//
]]--[[// Commentaires :
]]--[[// 
]]--[[// *****************************************************************************
]]}

node "ACT_Nbc_MettreTenueProtection"
{
    create = function( self )
    end,

    select = function( self )
        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]        if( ModuleBegins() ) then
            do
                                do
                    if( not DEC_Agent_AutomateEstEmbraye() ) then
                        DEC_RC( eRC_TenueProtectionNBCMise )
                    else
                        DEC_Message( eRC_TenueProtectionNBCMise )
                    end

                end

                myself:DEC_Agent_MettreTenueProtectionNBC()
            end
        end

    end,

    deselect = function( self )
            end,

    destroy = function( self )
                do
            if( not DEC_Agent_AutomateEstEmbraye() ) then
                DEC_RC( eRC_TenueProtectionNBCEnlevee )
            else
                DEC_Message( eRC_TenueProtectionNBCEnlevee )
            end

        end

        myself:DEC_Agent_EnleverTenueProtectionNBC()
    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Nbc, "BEH_Nbc_Recevoir_OrdreInopine", nodes.BEH_Nbc_Recevoir_OrdreInopine }
connections[ #connections + 1 ] = { nodes.BEH_Nbc_GererAlerteNiv4, "ACT_Nbc_MettreTenueProtection", nodes.ACT_Nbc_MettreTenueProtection }
connections[ #connections + 1 ] = { nodes.BEH_Nbc_GererAlerteNiv4, "ACT_Nbc_PasserEnNiveauNBC", nodes.ACT_Nbc_PasserEnNiveauNBC }
connections[ #connections + 1 ] = { nodes.BEH_Nbc_Recevoir_OrdreInopine, "ACT_Ordre_Suppression", nodes.ACT_Ordre_Suppression }
