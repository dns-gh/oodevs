includedFiles = includedFiles or {}
includedFiles["sources/common/pions/motivationsreactionpopulations/Motivations.bms"] = true

local emptyTable = emptyTable


--[[// *****************************************************************************
]]--[[//  MOT_RiposteSurPopulations
]]--[[//
]]--[[//  Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]motivation_plugin = motivation_plugin or {}
motivation_plugin.stimuli = motivation_plugin.stimuli or {}
motivation_plugin.statevariables = motivation_plugin.statevariables or {}
motivation_plugin.emotions = motivation_plugin.emotions or {}
motivation_plugin.motivations = motivation_plugin.motivations or {}

motivation_plugin.motivations[ "MOT_RiposteSurPopulations" ] =
{
    activation = {
        STIM_PriseAPartiParPopulation = 170,
    },
    amplification = {
    },
    reduction = {
    },
    max_increase_rate = 1000,
    max_decrease_rate = 5,
    max_output_value = 1000,
}

node "ActivatedByMOT_RiposteSurPopulations"
{
    feedbacks = { { { "done_ActivatedByMOT_RiposteSurPopulations" }, "ActivatedByMOT_RiposteSurPopulations" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_ActivatedByMOT_RiposteSurPopulations, {value} ) end,
    activations =
    {
        { "BEH_MOT_RiposteSurPopulations", { "done_BEH_MOT_RiposteSurPopulations" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        --[[// -----------------------------------------------------------------------------
]]--[[// Modules activateurs 
]]--[[// -----------------------------------------------------------------------------
]]--[[// -----------------------------------------------------------------------------
]]--[[// Influence de la motivation par les stimulis. La premiere valeur indique la 
]]--[[// valeur pour laquelle la motivation ne changera pas, le second la valeur pour 
]]--[[// laquelle la motivation va doubler.
]]--[[// -----------------------------------------------------------------------------
]]--[[// éventuellement d'autre stim
]]--[[// -----------------------------------------------------------------------------
]]--[[// Influence de la motivation par les stimulis. La premiere valeur indique la 
]]--[[// valeur pour laquelle la motivation ne changera pas, le second la valeur pour 
]]--[[// laquelle la motivation sera nulle.
]]--[[// -----------------------------------------------------------------------------
]]--[[// + éventuellement d'autre stim
]]--[[// -----------------------------------------------------------------------------
]]--[[// Variation de la motivation
]]--[[// -----------------------------------------------------------------------------
]]--[[// Coef de croissance max par unite de temps
]]--[[// Coef de decroissance max par unite de temps
]]--[[// Valeur max de la motivation.
]]--[[// -----------------------------------------------------------------------------
]]--[[// Code executé quand la valeur de la motivation est supérieur à 0.
]]--[[// -----------------------------------------------------------------------------
]]Activate( self.activations.BEH_MOT_RiposteSurPopulations, GetMotivation( "MOT_RiposteSurPopulations" ), emptyTable )
    end,

}

--[[// *****************************************************************************
]]--[[//  MOT_EsquivePopulations
]]--[[//
]]--[[//
]]--[[// *****************************************************************************
]]motivation_plugin.motivations[ "MOT_EsquivePopulations" ] =
{
    activation = {
        STIM_PopulationDangereuse = 170,
    },
    amplification = {
    },
    reduction = {
    },
    max_increase_rate = 1000,
    max_decrease_rate = 5,
    max_output_value = 1000,
}

node "ActivatedByMOT_EsquivePopulations"
{
    feedbacks = { { { "done_ActivatedByMOT_EsquivePopulations" }, "ActivatedByMOT_EsquivePopulations" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_ActivatedByMOT_EsquivePopulations, {value} ) end,
    activations =
    {
        { "BEH_MOT_DecrochageFaceAPopulations", { "done_BEH_MOT_DecrochageFaceAPopulations" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        --[[// -----------------------------------------------------------------------------
]]--[[// Modules activateurs 
]]--[[// -----------------------------------------------------------------------------
]]--[[// -----------------------------------------------------------------------------
]]--[[// Influence de la motivation par les stimulis. La premiere valeur indique la 
]]--[[// valeur pour laquelle la motivation ne changera pas, le second la valeur pour 
]]--[[// laquelle la motivation va doubler.
]]--[[// -----------------------------------------------------------------------------
]]--[[// éventuellement d'autre stim
]]--[[// -----------------------------------------------------------------------------
]]--[[// Influence de la motivation par les stimulis. La premiere valeur indique la 
]]--[[// valeur pour laquelle la motivation ne changera pas, le second la valeur pour 
]]--[[// laquelle la motivation sera nulle.
]]--[[// -----------------------------------------------------------------------------
]]--[[// + éventuellement d'autre stim
]]--[[// -----------------------------------------------------------------------------
]]--[[// Variation de la motivation
]]--[[// -----------------------------------------------------------------------------
]]--[[// Coef de croissance max par unite de temps
]]--[[// Coef de decroissance max par unite de temps
]]--[[// Valeur max de la motivation.
]]--[[// -----------------------------------------------------------------------------
]]--[[// Code executé quand la valeur de la motivation est supérieur à 0.
]]--[[// -----------------------------------------------------------------------------
]]--[[//ce comportement permet de décrocher à une position de sécurité
]]Activate( self.activations.BEH_MOT_DecrochageFaceAPopulations, GetMotivation( "MOT_EsquivePopulations" ), emptyTable )
    end,

}

--[[// *****************************************************************************
]]--[[// MOT_PasserEnEmploiForceInterdit
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]motivation_plugin.motivations[ "MOT_PasserEnEmploiForceInterdit" ] =
{
    activation = {
        VE_EmploiForceInterdit = 10,
    },
    amplification = {
    },
    reduction = {
    },
    max_increase_rate = 5,
    max_decrease_rate = 5,
    max_output_value = 10,
}

node "ActivatedByMOT_PasserEnEmploiForceInterdit"
{
    feedbacks = { { { "done_ActivatedByMOT_PasserEnEmploiForceInterdit" }, "ActivatedByMOT_PasserEnEmploiForceInterdit" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_ActivatedByMOT_PasserEnEmploiForceInterdit, {value} ) end,
    activations =
    {
        { "BEH_MOT_PasserEnEmploiForceInterdit", { "done_BEH_MOT_PasserEnEmploiForceInterdit" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        --[[// -----------------------------------------------------------------------------
]]--[[// Modules activateurs 
]]--[[// -----------------------------------------------------------------------------
]]--[[// -----------------------------------------------------------------------------
]]--[[// Influence de la motivation par les stimulis. La premiere valeur indique la 
]]--[[// valeur pour laquelle la motivation ne changera pas, le second la valeur pour 
]]--[[// laquelle la motivation va doubler.
]]--[[// -----------------------------------------------------------------------------
]]--[[// éventuellement d'autre stim
]]--[[// -----------------------------------------------------------------------------
]]--[[// Influence de la motivation par les stimulis. La premiere valeur indique la 
]]--[[// valeur pour laquelle la motivation ne changera pas, le second la valeur pour 
]]--[[// laquelle la motivation sera nulle.
]]--[[// -----------------------------------------------------------------------------
]]--[[// + éventuellement d'autre stim
]]--[[// -----------------------------------------------------------------------------
]]--[[// Variation de la motivation
]]--[[// -----------------------------------------------------------------------------
]]--[[// Coef de croissance max par unite de temps
]]--[[// Coef de decroissance max par unite de temps
]]--[[// Valeur max de la motivation.
]]--[[// -----------------------------------------------------------------------------
]]--[[// Code executé quand la valeur de la motivation est supérieur à 0.
]]--[[// -----------------------------------------------------------------------------
]]Activate( self.activations.BEH_MOT_PasserEnEmploiForceInterdit, GetMotivation( "MOT_PasserEnEmploiForceInterdit" ), emptyTable )
    end,

}

--[[// *****************************************************************************
]]--[[// MOT_PasserEnMaintienADistanceParMoyensNonLetaux
]]--[[//
]]--[[// Commentaires: 
]]--[[//
]]--[[// *****************************************************************************
]]motivation_plugin.motivations[ "MOT_PasserEnMaintienADistanceParMoyensNonLetaux" ] =
{
    activation = {
        VE_MaintienADistanceParMoyensNonLetaux = 10,
    },
    amplification = {
    },
    reduction = {
    },
    max_increase_rate = 5,
    max_decrease_rate = 5,
    max_output_value = 10,
}

node "ActivatedByMOT_PasserEnMaintienADistanceParMoyensNonLetaux"
{
    feedbacks = { { { "done_ActivatedByMOT_PasserEnMaintienADistanceParMoyensNonLetaux" }, "ActivatedByMOT_PasserEnMaintienADistanceParMoyensNonLetaux" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_ActivatedByMOT_PasserEnMaintienADistanceParMoyensNonLetaux, {value} ) end,
    activations =
    {
        { "BEH_MOT_PasserEnMaintienADistanceParMoyensNonLetaux", { "done_BEH_MOT_PasserEnMaintienADistanceParMoyensNonLetaux" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        --[[// -----------------------------------------------------------------------------
]]--[[// Modules activateurs 
]]--[[// -----------------------------------------------------------------------------
]]--[[// -----------------------------------------------------------------------------
]]--[[// Influence de la motivation par les stimulis. La premiere valeur indique la 
]]--[[// valeur pour laquelle la motivation ne changera pas, le second la valeur pour 
]]--[[// laquelle la motivation va doubler.
]]--[[// -----------------------------------------------------------------------------
]]--[[// éventuellement d'autre stim
]]--[[// -----------------------------------------------------------------------------
]]--[[// Influence de la motivation par les stimulis. La premiere valeur indique la 
]]--[[// valeur pour laquelle la motivation ne changera pas, le second la valeur pour 
]]--[[// laquelle la motivation sera nulle.
]]--[[// -----------------------------------------------------------------------------
]]--[[// + éventuellement d'autre stim
]]--[[// -----------------------------------------------------------------------------
]]--[[// Variation de la motivation
]]--[[// -----------------------------------------------------------------------------
]]--[[// Coef de croissance max par unite de temps
]]--[[// Coef de decroissance max par unite de temps
]]--[[// Valeur max de la motivation.
]]--[[// -----------------------------------------------------------------------------
]]--[[// Code executé quand la valeur de la motivation est supérieur à 0.
]]--[[// -----------------------------------------------------------------------------
]]Activate( self.activations.BEH_MOT_PasserEnMaintienADistanceParMoyensNonLetaux, GetMotivation( "MOT_PasserEnMaintienADistanceParMoyensNonLetaux" ), emptyTable )
    end,

}

--[[// *****************************************************************************
]]--[[// MOT_PasserEnArmesLetalesAutorisees
]]--[[//
]]--[[//  Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]motivation_plugin.motivations[ "MOT_PasserEnArmesLetalesAutorisees" ] =
{
    activation = {
        VE_ArmesLetalesAutorisees = 10,
    },
    amplification = {
    },
    reduction = {
    },
    max_increase_rate = 5,
    max_decrease_rate = 5,
    max_output_value = 10,
}

node "ActivatedByMOT_PasserEnArmesLetalesAutorisees"
{
    feedbacks = { { { "done_ActivatedByMOT_PasserEnArmesLetalesAutorisees" }, "ActivatedByMOT_PasserEnArmesLetalesAutorisees" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_ActivatedByMOT_PasserEnArmesLetalesAutorisees, {value} ) end,
    activations =
    {
        { "BEH_MOT_PasserEnArmesLetalesAutorisees", { "done_BEH_MOT_PasserEnArmesLetalesAutorisees" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        --[[// -----------------------------------------------------------------------------
]]--[[// Modules activateurs 
]]--[[// -----------------------------------------------------------------------------
]]--[[// -----------------------------------------------------------------------------
]]--[[// Influence de la motivation par les stimulis. La premiere valeur indique la 
]]--[[// valeur pour laquelle la motivation ne changera pas, le second la valeur pour 
]]--[[// laquelle la motivation va doubler.
]]--[[// -----------------------------------------------------------------------------
]]--[[// éventuellement d'autre stim
]]--[[// -----------------------------------------------------------------------------
]]--[[// Influence de la motivation par les stimulis. La premiere valeur indique la 
]]--[[// valeur pour laquelle la motivation ne changera pas, le second la valeur pour 
]]--[[// laquelle la motivation sera nulle.
]]--[[// -----------------------------------------------------------------------------
]]--[[// + éventuellement d'autre stim
]]--[[// -----------------------------------------------------------------------------
]]--[[// Variation de la motivation
]]--[[// -----------------------------------------------------------------------------
]]--[[// Coef de croissance max par unite de temps
]]--[[// Coef de decroissance max par unite de temps
]]--[[// Valeur max de la motivation.
]]--[[// -----------------------------------------------------------------------------
]]--[[// Code executé quand la valeur de la motivation est supérieur à 0.
]]--[[// -----------------------------------------------------------------------------
]]Activate( self.activations.BEH_MOT_PasserEnArmesLetalesAutorisees, GetMotivation( "MOT_PasserEnArmesLetalesAutorisees" ), emptyTable )
    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { motivation( "MOT_RiposteSurPopulations", 1 ), nodes.ActivatedByMOT_RiposteSurPopulations }
connections[ #connections + 1 ] = { motivation( "MOT_EsquivePopulations", 1 ), nodes.ActivatedByMOT_EsquivePopulations }
connections[ #connections + 1 ] = { motivation( "MOT_PasserEnEmploiForceInterdit", 1 ), nodes.ActivatedByMOT_PasserEnEmploiForceInterdit }
connections[ #connections + 1 ] = { motivation( "MOT_PasserEnMaintienADistanceParMoyensNonLetaux", 1 ), nodes.ActivatedByMOT_PasserEnMaintienADistanceParMoyensNonLetaux }
connections[ #connections + 1 ] = { motivation( "MOT_PasserEnArmesLetalesAutorisees", 1 ), nodes.ActivatedByMOT_PasserEnArmesLetalesAutorisees }
connections[ #connections + 1 ] = { nodes.ActivatedByMOT_EsquivePopulations, "BEH_MOT_DecrochageFaceAPopulations", nodes.BEH_MOT_DecrochageFaceAPopulations }
connections[ #connections + 1 ] = { nodes.ActivatedByMOT_PasserEnArmesLetalesAutorisees, "BEH_MOT_PasserEnArmesLetalesAutorisees", nodes.BEH_MOT_PasserEnArmesLetalesAutorisees }
connections[ #connections + 1 ] = { nodes.ActivatedByMOT_PasserEnEmploiForceInterdit, "BEH_MOT_PasserEnEmploiForceInterdit", nodes.BEH_MOT_PasserEnEmploiForceInterdit }
connections[ #connections + 1 ] = { nodes.ActivatedByMOT_PasserEnMaintienADistanceParMoyensNonLetaux, "BEH_MOT_PasserEnMaintienADistanceParMoyensNonLetaux", nodes.BEH_MOT_PasserEnMaintienADistanceParMoyensNonLetaux }
connections[ #connections + 1 ] = { nodes.ActivatedByMOT_RiposteSurPopulations, "BEH_MOT_RiposteSurPopulations", nodes.BEH_MOT_RiposteSurPopulations }
