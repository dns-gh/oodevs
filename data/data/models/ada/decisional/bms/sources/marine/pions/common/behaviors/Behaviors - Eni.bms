includedFiles = includedFiles or {}
includedFiles["sources/marine/pions/common/behaviors/Behaviors - Eni.bms"] = true

--[[// -----------------------------------------------------------------------------
]]--[[// DecrocherFaceA
]]--[[// -----------------------------------------------------------------------------
]]node "BEH_Eni_Pion_MARINE_DecrocherFaceA"
{
    instances =
    {
        max = 1,
        boost = 1.01,
    },

    activations =
    {
        { "ACT_Dep_ModulationVitesse", { "onHalt" } },
        { "BEH_Dep_Pion_MARINE_RejoindrePoint", { "onHalt" } },
    },

    onHalt = OnHalt,

    feedbacks = { { { "onHalt" }, "BEH_Eni_Pion_MARINE_DecrocherFaceA" } },

    create = function( self )
        self._namedParams = {}
        self._namedParams.repUnite = self.params[1]
        self._namedParams.rDistance = self.params[2]
        self._namedParams.rDistanceSecurite = self.params[3]
    end,

    activate = function( self )
        --[[// variables persistantes
]]self.rDistanceEffective = self.rDistanceEffective or self._namedParams.rDistance + self._namedParams.rDistanceSecurite
        self.eEtat = self.eEtat or eActionEnCours
        self.positionSurete = self.positionSurete or nil
        if( not DEC_ConnaissanceAgent_EstValide( self._namedParams.repUnite ) ) then
            do
                                self.params.__returnValue = eActionImpossible
                Feedback( self.feedbacks["onHalt"], { "BEH_Eni_Pion_MARINE_DecrocherFaceA" } )
Halt( self )
                do return end

            end
        end

        if( DEC_Geometrie_Distance( DEC_Agent_Position(), DEC_ConnaissanceAgent_Position( self._namedParams.repUnite ) ) >= self.rDistanceEffective ) then
            self.params.__returnValue = eActionEffectuee
            Feedback( self.feedbacks["onHalt"], { "BEH_Eni_Pion_MARINE_DecrocherFaceA" } )
Halt( self )
            do return end
        end

        if( ModuleBegins() ) then
            do
                if( F_Pion_GetobjectifEsquive( myself ) ~= nil ) then
                    self.positionSurete = DEC_Geometrie_CalculerPositionSureteAvecObjectif( self._namedParams.repUnite, self.rDistanceEffective, F_Pion_GetobjectifEsquive( myself ) )
                else
if( ( myself.ptRegroupement_ ~= 0 and myself.ptRegroupement_ ~= nil ) ) then
                        self.positionSurete = DEC_Geometrie_CalculerPositionSureteAvecObjectif( self._namedParams.repUnite, self.rDistanceEffective, myself.ptRegroupement_ )
                    else
                        self.positionSurete = DEC_Geometrie_CalculerPositionSurete( self._namedParams.repUnite, self.rDistanceEffective )
                    end
                end

                if( ( self.positionSurete == 0 or self.positionSurete == nil ) ) then
                    do
                                                Feedback( self.feedbacks["onHalt"], { "BEH_Eni_Pion_MARINE_DecrocherFaceA" } )
Halt( self )
                        do return end

                    end
                end

            end
        end

        if( self.eEtat == eActionEffectuee ) then
            do
                self.eEtat = eActionEnCours
                                do
                                        self.params.__returnValue = eActionEffectuee
                    Feedback( self.feedbacks["onHalt"], { "BEH_Eni_Pion_MARINE_DecrocherFaceA" } )
Halt( self )
                    do return end

                end

            end
        end

        Activate( self.activations.ACT_Dep_ModulationVitesse, 1, { 1, } )
        Activate( self.activations.BEH_Dep_Pion_MARINE_RejoindrePoint, 1, setmetatable( { self.positionSurete, eProgressionDefaut, eTypeItiRepli, 0, 0, 0, 0, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eEtat = v else rawset( t, k, v ) end end } ) )
    end,

--[[// -----------------------------------------------------------------------------
]]--[[// EviterContactsAvecEnnemisConnus
]]--[[// On ne veut pas que le pion puisse etre pris a partie par un ennemi
]]--[[// -----------------------------------------------------------------------------
]]}

node "BEH_Eni_Pion_MARINE_EviterContactsAvecEnnemisConnus"
{
    activations =
    {
        { "BEH_Eni_Pion_MARINE_DecrocherFaceA", { "onHalt" } },
    },

    onHalt = OnHalt,

    feedbacks = { { { "onHalt" }, "BEH_Eni_Pion_MARINE_EviterContactsAvecEnnemisConnus" } },

    create = function( self )
    end,

    activate = function( self )
        local listeUnitesEnnemiesDangereuses = DEC_Connaissances_UnitesEnnemiesDangereuses()
        for _,x in pairs( listeUnitesEnnemiesDangereuses ) do
        local _continue = true
do
                Activate( self.activations.BEH_Eni_Pion_MARINE_DecrocherFaceA, 1, { x, S_Tir_PorteeMaxPourEtreTireParAgent( x, 0 ), M_POLY_DISTANCE_SECURITE_ESQUIVE(), } )
            end

        end

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Eni_Pion_MARINE_DecrocherFaceA, "ACT_Dep_ModulationVitesse", nodes.ACT_Dep_ModulationVitesse }
connections[ #connections + 1 ] = { nodes.BEH_Eni_Pion_MARINE_DecrocherFaceA, "BEH_Dep_Pion_MARINE_RejoindrePoint", nodes.BEH_Dep_Pion_MARINE_RejoindrePoint }
connections[ #connections + 1 ] = { nodes.BEH_Eni_Pion_MARINE_EviterContactsAvecEnnemisConnus, "BEH_Eni_Pion_MARINE_DecrocherFaceA", nodes.BEH_Eni_Pion_MARINE_DecrocherFaceA }
