includedFiles = includedFiles or {}
includedFiles["sources/population/milices/pion/missions/DetruireParCoupDeMain.bms"] = true

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JDY 02-11-06 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Population/Milices/Pion/Missions/DetruireParCoupDeMain.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 19/09/05 10:27 $
]]--[[// $Revision: 13 $
]]--[[// $Workfile: DetruireParCoupDeMain.hal $
]]--[[//
]]--[[// *****************************************************************************
]]node "MIS_Pion_INF_DetruireParCoupDeMain"
{
    activations =
    {
        { "ACT_Maj_Pion_PasserEnTirLibre", {} },
        { "BEH_MAJ_AgressiviteMission", {} },
        { "BEH_Misc_Pion_DefinirTypeMission", {} },
        { "ACT_Misc_Pion_MILICE_MAJ_PositionRegroupement", {} },
        { "BEH_Ordre_Inopine", {} },
        { "ACT_Ordre_Suppression", {} },
        { "BEH_Mission_Pion_INF_DetruireParCoupDeMain", {} },
        { "ACT_MAJ_EtatPhaseMission", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        self.ePhaseMission = self.ePhaseMission or eSeMettreEnPlace
        self.ePhase = self.ePhase or eSurveiller
        self.eAction = self.eAction or eActionEnCours
        if( ModuleBegins() ) then
            do
                DEC_SetMission( myself, self._namedParams.mission )
                F_Pion_SeteEtatEchelon( myself, eEtatEchelon_Premier )
                Activate( self.activations.ACT_Maj_Pion_PasserEnTirLibre, 1, {} )
            end
        end

        Activate( self.activations.BEH_MAJ_AgressiviteMission, 1, { eReconnu, 0.8, } )
        Activate( self.activations.BEH_Misc_Pion_DefinirTypeMission, 1, { eTypeContact_Defensif, } )
        Activate( self.activations.ACT_Misc_Pion_MILICE_MAJ_PositionRegroupement, 1, { self._namedParams.mission.pointRegroupement_, } )
        self.eEtatOrdreFinMission = self.eEtatOrdreFinMission or eActionEnCours
        Activate( self.activations.BEH_Ordre_Inopine, 1, setmetatable( {}, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eEtatOrdreFinMission = v else rawset( t, k, v ) end end } ) )
        if( self.eEtatOrdreFinMission == eActionHalt ) then
            do
                eSeReplier = eFinMission
                self.eAction = eActionEnCours
                self.eEtatOrdreFinMission = eActionEnCours
            end
        end

        local ordres_recus = DEC_GetCategory( "ordres_recus" )
        for _,x in pairs( ordres_recus ) do
        local _continue = true
do
                local repOrdre = x
                if( repOrdre:GetType() == "Rep_OrderConduite_Decrocher" ) then
                    do
                        self.ePhase = eSeReplier
                        self.eAction = eActionEnCours
                    end
                end

                Activate( self.activations.ACT_Ordre_Suppression, 1, { x, } )
            end

        end

        do
        end

         do
            local switch_1 = self.ePhase
            local cases_switch_1 = {}
                if switch_1 == eSurveiller then
                    if( self.ePhaseMission == eFinMission ) then
                        do
                            self.ePhase = eFinMission
                                                        return

                        end
                    end

                    if( self.eAction == eActionImpossible ) then
                        do
                            self.ePhase = eSeReplier
                            self.eAction = eActionEnCours
                                                        return

                        end
                    end

                    if( self.eAction == eActionEffectuee ) then
                        do
                            self.eAction = eActionEnCours
                                                        do
                                self.ePhase = eSeReplier
                                                                return

                            end

                        end
                    end

                    Activate( self.activations.BEH_Mission_Pion_INF_DetruireParCoupDeMain, GetMotivation( "MOT_Mission" ), setmetatable( {}, { __newindex = function( t, k, v ) if k == "__returnValue" then self.ePhaseMission = v else rawset( t, k, v ) end end } ) )
                    
                --[[// Rejoins la position de replis
]]elseif switch_1 == eSeReplier then
                    --[[/*
		if(  							eAction == eActionEffectuee)    {         							eAction=eActionEnCours;         { ePhase = eFinMission; }     }    else    {         behavior BEH_Manoeuvre_RompreContact() return in  							eAction;        return;
    }
		*/]]--[[// Fin de mission
]]self.ePhase = eFinMission
                    
                                cases_switch_1[2] = true
elseif switch_1 == eFinMission then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_FinMission, } )
                    if( F_Pion_GeteEtatPhaseMission( myself ) == eEtatPhaseMission_FinMission ) then
                        do
                            DEC_FinMission()
                                                        self.params.__returnValue = eActionEffectuee
                            Halt()

                        end
                    end

                    
                
                else
                                end
            end

    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Pion_INF_DetruireParCoupDeMain = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_DetruireParCoupDeMain, "ACT_Maj_Pion_PasserEnTirLibre", nodes.ACT_Maj_Pion_PasserEnTirLibre }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_DetruireParCoupDeMain, "BEH_MAJ_AgressiviteMission", nodes.BEH_MAJ_AgressiviteMission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_DetruireParCoupDeMain, "BEH_Misc_Pion_DefinirTypeMission", nodes.BEH_Misc_Pion_DefinirTypeMission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_DetruireParCoupDeMain, "ACT_Misc_Pion_MILICE_MAJ_PositionRegroupement", nodes.ACT_Misc_Pion_MILICE_MAJ_PositionRegroupement }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_DetruireParCoupDeMain, "BEH_Ordre_Inopine", nodes.BEH_Ordre_Inopine }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_DetruireParCoupDeMain, "ACT_Ordre_Suppression", nodes.ACT_Ordre_Suppression }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_DetruireParCoupDeMain, "BEH_Mission_Pion_INF_DetruireParCoupDeMain", nodes.BEH_Mission_Pion_INF_DetruireParCoupDeMain }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_DetruireParCoupDeMain, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
