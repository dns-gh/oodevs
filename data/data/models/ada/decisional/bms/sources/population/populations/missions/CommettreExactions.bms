includedFiles = includedFiles or {}
includedFiles["sources/population/populations/missions/CommettreExactions.bms"] = true

include "bit.lua"


--[[// *****************************************************************************
]]--[[// MIS_Pop_CommettreExactions
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]node "MIS_Population_CommettreExactions"
{
    feedbacks = { { { "done_MIS_Population_CommettreExactions" }, "MIS_Population_CommettreExactions" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_MIS_Population_CommettreExactions, {value} ) end,
    activations =
    {
        { "BEH_Pop_RejoindreInstallation", { "done_BEH_Pop_RejoindreInstallation" } },
        { "BEH_Pop_RejoindrePoint", { "done_BEH_Pop_RejoindrePoint" } },
        { "BEH_Pop_PAPPions", { "done_BEH_Pop_PAPPions" } },
        { "BEH_Pop_RalentissementPions", { "done_BEH_Pop_RalentissementPions" } },
        { "BEH_Pop_DegraderInstallations", { "done_BEH_Pop_DegraderInstallations" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        self.eEtatDelai = self.eEtatDelai or eActionEnCours
        if( ModuleBegins() ) then
            do
                DEC_RC( eRC_DebutMission )
                DEC_Trace( "** MIS_Population_CommettreExactions **" )
                --[[//La domination est magiquement reinitialisée à chaque mission agressive
]]UpdateStateVariable( "VE_Domination", 1 - GetStateVariable( "VE_Domination" ) )
            end
--[[//------------------------------------------------------------------------------------
]]--[[//  Rejoindre la premiere installation intacte et ennemie dans la zone
]]--[[//------------------------------------------------------------------------------------
]]        end

        local lstInstallations = DEC_Connaissances_ObjetsDansZone( self._namedParams.mission.zone_, S_TypeObject_ToString( eTypeObjectInstallation ) )
        local bInstallation = false
        for _,installation in pairs( lstInstallations or {} ) do
        local _continue = true
if( DEC_ConnaissanceObjet_EstValide( installation ) and DEC_ConnaissanceObjet_EstEnnemi( installation ) ~= eTristate_False ) then
                do
                    Activate( self.activations.BEH_Pop_RejoindreInstallation, 1, { installation, } )
                    bInstallation = true
                end
--[[//------------------------------------------------------------------------------------
]]--[[//  S'il n'y a pas d'installations: rejoindre le centre de la localisation
]]--[[//------------------------------------------------------------------------------------
]]            end

        end

        if( not bInstallation ) then
            do
                self.position = self.position or DEC_Geometrie_CalculerBarycentreLocalisation( self._namedParams.mission.zone_ )
                Activate( self.activations.BEH_Pop_RejoindrePoint, 1, { self.position, } )
            end
--[[//------------------------------------------------------------------------------------
]]--[[//  Commettre les exactions sur les cibles a proximite
]]--[[//------------------------------------------------------------------------------------
]]        end

        Activate( self.activations.BEH_Pop_PAPPions, 1, {} )
        Activate( self.activations.BEH_Pop_RalentissementPions, 1, {} )
        Activate( self.activations.BEH_Pop_DegraderInstallations, 1, { self._namedParams.mission.zone_, } )
    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Population_CommettreExactions = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.MIS_Population_CommettreExactions, "BEH_Pop_RejoindreInstallation", nodes.BEH_Pop_RejoindreInstallation }
connections[ #connections + 1 ] = { nodes.MIS_Population_CommettreExactions, "BEH_Pop_RejoindrePoint", nodes.BEH_Pop_RejoindrePoint }
connections[ #connections + 1 ] = { nodes.MIS_Population_CommettreExactions, "BEH_Pop_PAPPions", nodes.BEH_Pop_PAPPions }
connections[ #connections + 1 ] = { nodes.MIS_Population_CommettreExactions, "BEH_Pop_RalentissementPions", nodes.BEH_Pop_RalentissementPions }
connections[ #connections + 1 ] = { nodes.MIS_Population_CommettreExactions, "BEH_Pop_DegraderInstallations", nodes.BEH_Pop_DegraderInstallations }
