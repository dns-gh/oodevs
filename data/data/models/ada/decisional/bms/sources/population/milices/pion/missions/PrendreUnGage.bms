includedFiles = includedFiles or {}
includedFiles["sources/population/milices/pion/missions/PrendreUnGage.bms"] = true

--[[// *****************************************************************************
]]--[[/** \file S VAB - Actions.hal
 *
 * $Author: Ggr $
 * $Modtime: 19/09/05 10:25 $
 * $Revision: 13 $
 *
 */]]--[[// Created: JCR 03-02-13
]]--[[// *****************************************************************************
]]--[[//------------------------------------------------------------------------------
]]--[[//Rejoins une position et cree un site de deploiement
]]--[[//------------------------------------------------------------------------------
]]

node "MIS_Pion_MILICE_PrendreEtTenir"
{
    feedbacks = { { { "done_MIS_Pion_MILICE_PrendreEtTenir" }, "MIS_Pion_MILICE_PrendreEtTenir" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_MIS_Pion_MILICE_PrendreEtTenir, {value} ) end,
    activations =
    {
        { "BEH_MAJ_AgressiviteMission", { "done_BEH_MAJ_AgressiviteMission" } },
        { "BEH_Misc_Pion_DefinirTypeMission", { "done_BEH_Misc_Pion_DefinirTypeMission" } },
        { "BEH_Mission_Pion_Milice_PrendreEtTenir", { "done_BEH_Mission_Pion_Milice_PrendreEtTenir" } },
        { "ACT_MAJ_EtatPhaseMission", { "done_ACT_MAJ_EtatPhaseMission" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        --[[// --> Tiens lorsque le rapFor passe de 2.5 a 3.5
]]        self.ePhase = self.ePhase or eReconnaitre
        if( ModuleBegins() ) then
            do
                DEC_SetMission( myself, self._namedParams.mission )
                F_Pion_SeteEtatAmbiance( myself, eEtatAmbiance_Vitesse )
                F_Pion_SetrTenir( myself, 0 )
                DEC_Trace( "Seize and hold position" )
            end
        end

        Activate( self.activations.BEH_MAJ_AgressiviteMission, 1, { eReconnu, 0.3, } )
        Activate( self.activations.BEH_Misc_Pion_DefinirTypeMission, 1, { eTypeContact_Defensif, } )
         do
            local _continue = true
            local switch_1 = self.ePhase
            local cases_switch_1 = {}
                if switch_1 == eReconnaitre then
                    Activate( self.activations.BEH_Mission_Pion_Milice_PrendreEtTenir, GetMotivation( "MOT_Mission" ), { self._namedParams.mission, } )
                    _continue = false--[[//-----------------------------------------------------------------------------
]]
                --[[// Fin de mission
]]--[[//-----------------------------------------------------------------------------
]]--[[/*
                if(     eAction == eActionEffectuee )    {            eAction=eActionEnCours;                                            {                                        
                                        DEC_Trace(  "Fin mission de mission reconnaitre un axe"  );                                        
                                        DEC_RC( eRC_MissionTerminee );
                                        halt(eActionEffectuee);
                                    }
                                  
    }
                */]]                cases_switch_1[1] = true
elseif switch_1 == eFinMission then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_FinMission, } )
                    if( F_Pion_GeteEtatPhaseMission( myself ) == eEtatPhaseMission_FinMission ) then
                        do
                            DEC_FinMission()
                                                        self:SendFeedback( eActionEffectuee )
                            Halt( self )
                            do return end

                        end
                    end

                    _continue = false
                                cases_switch_1[2] = true

                else
                --[[// On cherche une position d'observation
]]                end
            end

--[[// On tient 5 ennemis supplementaires
]]    end,

}

node "BEH_Mission_Pion_Milice_PrendreEtTenir"
{
    feedbacks = { { { "done_BEH_Mission_Pion_Milice_PrendreEtTenir" }, "BEH_Mission_Pion_Milice_PrendreEtTenir" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Pion_Milice_PrendreEtTenir, {value} ) end,
    activations =
    {
        { "BEH_Dep_Pion_Milice_PrendreEtTenir", { "done_BEH_Dep_Pion_Milice_PrendreEtTenir" } },
    },

    create = function( self )
    end,

    activate = function( self )
        self.mission = self.mission or DEC_GetMission( myself )
        self.ePhase = self.ePhase or eReconnaitre
        self.eAction = self.eAction or eActionEnCours
         do
            local _continue = true
            local switch_1 = self.ePhase
            local cases_switch_1 = {}
                if switch_1 == eReconnaitre then
                    if( self.eAction == eActionEffectuee ) then
                        do
                            self.eAction = eActionEnCours
                                                        do
                                F_Pion_SetrTenir( myself, 5 )
                                self.ePhase = eSurveiller
                                                                do return end

                            end

                        end
                    end

                    Activate( self.activations.BEH_Dep_Pion_Milice_PrendreEtTenir, 1, { self.mission.pointAPrendre_, } )
self.done_BEH_Dep_Pion_Milice_PrendreEtTenir = function( self, _, v ) self.eAction = v[1] end
                    _continue = false
                                cases_switch_1[1] = true
elseif switch_1 == eSurveiller then
                    _continue = false
                                cases_switch_1[2] = true
                end
            end

    end,

}

node "BEH_Dep_Pion_Milice_PrendreEtTenir"
{
    feedbacks = { { { "done_BEH_Dep_Pion_Milice_PrendreEtTenir" }, "BEH_Dep_Pion_Milice_PrendreEtTenir" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Dep_Pion_Milice_PrendreEtTenir, {value} ) end,
    activations =
    {
        { "BEH_Dep_ProgressionVers", { "done_BEH_Dep_ProgressionVers" } },
        { "ACT_Info_Trace", { "done_ACT_Info_Trace" } },
        { "ACT_Obs_EtablirVisionVersPt", { "done_ACT_Obs_EtablirVisionVersPt" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ptObjectif = self.params[1]
    end,

    activate = function( self )
        --[[// On cherche une position d'observation
]]self.ePhase = self.ePhase or eReconnaitre
        self.eAction = self.eAction or eActionEnCours
        --[[// Calcul de position d'observation ?
]]self.eActionRejoindre = self.eActionRejoindre or eActionEnCours
        if( self.eActionRejoindre == eActionImpossible ) then
            do
                                do
                                        self:SendFeedback( eActionImpossible )
                    Halt( self )
                    do return end

                end

                                self:SendFeedback( eActionImpossible )
                Halt( self )
                do return end

            end
        end

        if( self.eActionRejoindre == eActionEffectuee ) then
            do
                self.eActionRejoindre = eActionEnCours
                                do
                                        self:SendFeedback( eActionEffectuee )
                    Halt( self )
                    do return end

                end

            end
        end

        Activate( self.activations.BEH_Dep_ProgressionVers, 1, { self._namedParams.ptObjectif, eProgressionReco, eTypeItiMouvement, } )
self.done_BEH_Dep_ProgressionVers = function( self, _, v ) self.eActionRejoindre = v[1] end
        do
        end
--[[// S'il ya du monde, intimider ...                
]]
         do
            local _continue = true
            local switch_1 = self.ePhase
            local cases_switch_1 = {}
                if switch_1 == eReconnaitre then
                    if( S_EstADistanceTir_Pt( self._namedParams.ptObjectif ) ) then
                        do
                            Activate( self.activations.ACT_Info_Trace, 1, { "Arrive sur position d'observation", } )
                            self.ePhase = eSurveiller
                        end
                    end

                    _continue = false
                                cases_switch_1[1] = true
elseif switch_1 == eSurveiller then
                    Activate( self.activations.ACT_Obs_EtablirVisionVersPt, 1.5, { self._namedParams.ptObjectif, } )
                                cases_switch_1[2] = true
end
                if not cases_switch_1[1] then
                                end
            end

    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Pion_MILICE_PrendreEtTenir = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Dep_Pion_Milice_PrendreEtTenir, "BEH_Dep_ProgressionVers", nodes.BEH_Dep_ProgressionVers }
connections[ #connections + 1 ] = { nodes.BEH_Dep_Pion_Milice_PrendreEtTenir, "ACT_Info_Trace", nodes.ACT_Info_Trace }
connections[ #connections + 1 ] = { nodes.BEH_Dep_Pion_Milice_PrendreEtTenir, "ACT_Obs_EtablirVisionVersPt", nodes.ACT_Obs_EtablirVisionVersPt }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_Milice_PrendreEtTenir, "BEH_Dep_Pion_Milice_PrendreEtTenir", nodes.BEH_Dep_Pion_Milice_PrendreEtTenir }
connections[ #connections + 1 ] = { nodes.MIS_Pion_MILICE_PrendreEtTenir, "BEH_MAJ_AgressiviteMission", nodes.BEH_MAJ_AgressiviteMission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_MILICE_PrendreEtTenir, "BEH_Misc_Pion_DefinirTypeMission", nodes.BEH_Misc_Pion_DefinirTypeMission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_MILICE_PrendreEtTenir, "BEH_Mission_Pion_Milice_PrendreEtTenir", nodes.BEH_Mission_Pion_Milice_PrendreEtTenir }
connections[ #connections + 1 ] = { nodes.MIS_Pion_MILICE_PrendreEtTenir, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
