includedFiles = includedFiles or {}
includedFiles["sources/population/milices/pion/missions/Harceler.bms"] = true

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JDY 02-11-06 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Population/Milices/Pion/Missions/Harceler.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 19/09/05 10:25 $
]]--[[// $Revision: 14 $
]]--[[// $Workfile: Harceler.hal $
]]--[[//
]]--[[// *****************************************************************************
]]

node "MIS_Pion_INF_Harceler"
{
    feedbacks = { { { "done_MIS_Pion_INF_Harceler" }, "MIS_Pion_INF_Harceler" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_MIS_Pion_INF_Harceler, {value} ) end,
    activations =
    {
        { "BEH_Misc_Defini_AppuisMobile", { "done_BEH_Misc_Defini_AppuisMobile" } },
        { "BEH_MAJ_AgressiviteMission", { "done_BEH_MAJ_AgressiviteMission" } },
        { "BEH_Misc_Pion_DefinirTypeMission", { "done_BEH_Misc_Pion_DefinirTypeMission" } },
        { "ACT_Misc_Pion_MILICE_MAJ_PositionRegroupement", { "done_ACT_Misc_Pion_MILICE_MAJ_PositionRegroupement" } },
        { "BEH_Ordre_Inopine", { "done_BEH_Ordre_Inopine" } },
        { "ACT_Ordre_Suppression", { "done_ACT_Ordre_Suppression" } },
        { "BEH_Mission_Pion_INF_Harceler", { "done_BEH_Mission_Pion_INF_Harceler" } },
        { "ACT_MAJ_EtatPhaseMission", { "done_ACT_MAJ_EtatPhaseMission" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        local Activate = Activate
        self.ePhaseMission = self.ePhaseMission or eSeMettreEnPlace
        self.ePhase = self.ePhase or eSurveiller
        self.eAction = self.eAction or eActionEnCours
        if( ModuleBegins() ) then
            do
                DEC_SetMission( myself, self._namedParams.mission )
                F_Pion_SeteEtatEchelon( myself, eEtatEchelon_Premier )
                F_Pion_SeteEtatAmbiance( myself, eEtatAmbiance_Vitesse )
            end
        end

        Activate( self.activations.BEH_Misc_Defini_AppuisMobile, 1, {} )
        Activate( self.activations.BEH_MAJ_AgressiviteMission, 1, { eReconnu, 0.8, } )
        Activate( self.activations.BEH_Misc_Pion_DefinirTypeMission, 1, { eTypeContact_Defensif, } )
        Activate( self.activations.ACT_Misc_Pion_MILICE_MAJ_PositionRegroupement, 1, { self._namedParams.mission.pointRegroupement_, } )
        self.eEtatOrdreFinMission = self.eEtatOrdreFinMission or eActionEnCours
        Activate( self.activations.BEH_Ordre_Inopine, 1, {} )
self.done_BEH_Ordre_Inopine = function( self, _, v ) self.eEtatOrdreFinMission = v[1] end
        if( self.eEtatOrdreFinMission == eActionHalt ) then
            do
                self.ePhase = eSeReplier
                self.eAction = eActionEnCours
                self.eEtatOrdreFinMission = eActionEnCours
            end
        end

        local ordres_recus = DEC_GetCategory( "ordres_recus" )
        for _,x in pairs( ordres_recus or {} ) do
        local _continue = true
do
                local repOrdre = x
                if( repOrdre:GetType() == "Rep_OrderConduite_Decrocher" ) then
                    do
                        self.ePhase = eSeReplier
                        self.eAction = eActionEnCours
                    end
                end

                Activate( self.activations.ACT_Ordre_Suppression, 1, { x, } )
            end

        end

        do
        end

         do
            local _continue = true
            local switch_1 = self.ePhase
            local cases_switch_1 = {}
                if switch_1 == eSurveiller then
                    if( self.ePhaseMission == eFinMission ) then
                        do
                            self.ePhase = eFinMission
                                                        do return end

                        end
                    end

                    if( self.eAction == eActionImpossible ) then
                        do
                            self.ePhase = eSeReplier
                            self.eAction = eActionEnCours
                                                        do return end

                        end
                    end

                    if( self.eAction == eActionEffectuee ) then
                        do
                            self.eAction = eActionEnCours
                                                        do
                                self.ePhase = eSeReplier
                                                                do return end

                            end

                        end
                    end

                    Activate( self.activations.BEH_Mission_Pion_INF_Harceler, GetMotivation( "MOT_Mission" ), { self._namedParams.mission, } )
self.done_BEH_Mission_Pion_INF_Harceler = function( self, _, v ) self.ePhaseMission = v[1] end
                    _continue = false
                --[[// Rejoins la position de replis
]]                cases_switch_1[1] = true
elseif switch_1 == eSeReplier then
                    self.ePhase = eSeReplier
                    _continue = false
                --[[// Fin de mission
]]                cases_switch_1[2] = true
elseif switch_1 == eFinMission then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_FinMission, } )
                    if( F_Pion_GeteEtatPhaseMission( myself ) == eEtatPhaseMission_FinMission ) then
                        do
                            DEC_FinMission()
                                                        self:SendFeedback( eActionEffectuee )
                            Halt( self )
                            do return end

                        end
                    end

                    _continue = false
                                cases_switch_1[3] = true

                else
                                end
            end

    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Pion_INF_Harceler = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Harceler, "BEH_Misc_Defini_AppuisMobile", nodes.BEH_Misc_Defini_AppuisMobile }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Harceler, "BEH_MAJ_AgressiviteMission", nodes.BEH_MAJ_AgressiviteMission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Harceler, "BEH_Misc_Pion_DefinirTypeMission", nodes.BEH_Misc_Pion_DefinirTypeMission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Harceler, "ACT_Misc_Pion_MILICE_MAJ_PositionRegroupement", nodes.ACT_Misc_Pion_MILICE_MAJ_PositionRegroupement }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Harceler, "BEH_Ordre_Inopine", nodes.BEH_Ordre_Inopine }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Harceler, "ACT_Ordre_Suppression", nodes.ACT_Ordre_Suppression }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Harceler, "BEH_Mission_Pion_INF_Harceler", nodes.BEH_Mission_Pion_INF_Harceler }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Harceler, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
