includedFiles = includedFiles or {}
includedFiles["sources/population/asymetriques/common/pion/Actions.bms"] = true


--[[// ******************************************************************************
]]--[[// ACT_Eni_Pion_ASY_CommettreAttentatContrePopulation
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// ******************************************************************************
]]node "ACT_Eni_Pion_ASY_CommettreAttentatContrePopulation"
{
    actuators =
    {
        deplacement = 1,
        tir_indirect = 1,
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.pop = self.params[1]
    end,

    select = function( self )
                if( ModuleBegins() ) then
            do
                local eValiditeRequete = DEC_ConnaissancePopulation_Exterminer( self._namedParams.pop, 20 )
                if( eValiditeRequete ~= eRequeteInvalide ) then
                    DEC_RC( eRC_ExecutionAttentat )
                else
                    DEC_Trace( "Attentat impossible" )
                end

            end
        end

                self.params.__returnValue = eActionEffectuee
        Halt()

    end,

}

--[[// ******************************************************************************
]]--[[// ACT_Eni_Pion_ASY_CommettreAttentatContreInstallation
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// ******************************************************************************
]]node "ACT_Eni_Pion_ASY_CommettreAttentatContreInstallation"
{
    actuators =
    {
        deplacement = 1,
        tir_indirect = 1,
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.installation = self.params[1]
    end,

    select = function( self )
                if( ModuleBegins() ) then
            do
                --[[//HARD CODED VALUE !
]]local eValiditeRequete = DEC_ConnaissanceObjet_Degrader( self._namedParams.installation, 0.5 )
                if( eValiditeRequete ~= eRequeteInvalide ) then
                    DEC_RC( eRC_ExecutionAttentat )
                else
                    DEC_Trace( "Attentat impossible" )
                end

            end
        end

                self.params.__returnValue = eActionEffectuee
        Halt()

    end,

}

--[[// ******************************************************************************
]]--[[// ACT_Eni_Pion_ASY_DetruireComposanteMajeure
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// ******************************************************************************
]]node "ACT_Eni_Pion_ASY_DetruireComposanteMajeure"
{
    actuators =
    {
        deplacement = 1,
        tir_indirect = 1,
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.repEni = self.params[1]
    end,

    select = function( self )
                self.actionExaction = self.actionExaction or nil
        self.bReprise = self.bReprise or false
        self.eActionTir = self.eActionTir or nil
        if( ModuleBegins() ) then
            do
                self.actionExaction = DEC__StartTirDirectSurComposantesMajeures( eActionTirDirect_None, self._namedParams.repEni, 100, eTirDirectNormal )
                DEC_RC( eRC_ExecutionAttentat )
            end
        end

        if( self.bReprise ) then
            do
                DEC_ReprendAction( self.actionExaction )
                self.bReprise = false
            end
        end

                self.params.__returnValue = eActionEffectuee
        return

    end,

    deselect = function( self )
                DEC_PauseAction( self.actionExaction )
        self.bReprise = true
    end,

    destroy = function( self )
                self.actionExaction = DEC_StopAction( self.actionExaction )
    end,

}

--[[// ******************************************************************************
]]--[[// ACT_Eni_Pion_ASY_AssassinerOfficier
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// ******************************************************************************
]]node "ACT_Eni_Pion_ASY_AssassinerOfficier"
{
    actuators =
    {
        deplacement = 1,
        tir_indirect = 1,
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.repEni = self.params[1]
    end,

    select = function( self )
                if( ModuleBegins() ) then
            do
                if( DEC_ConnaissanceAgent_TuerOfficiers( self._namedParams.repEni ) ) then
                    DEC_RC( eRC_ExecutionAttentat )
                else
do
                        DEC_Trace( "attentat impossible" )
                    end
                end

            end
        end

                self.params.__returnValue = eActionEffectuee
        return

    end,

}

--[[// ******************************************************************************
]]--[[// ACT_Eni_Pion_ASY_CommettreExactions
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// ******************************************************************************
]]node "ACT_Eni_Pion_ASY_CommettreExactions"
{
    actuators =
    {
        tir = 1,
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.pop = self.params[1]
    end,

    select = function( self )
                self.actionExaction = self.actionExaction or nil
        self.bReprise = self.bReprise or false
        self.eActionTir = self.eActionTir or nil
        if( ModuleBegins() ) then
            do
                --[[//DEC_Trace(  "debut exactions"  );
]]self.actionExaction = DEC__StartTirSurPopulation( self._namedParams.pop )
            end
--[[//if( eActionTir == eActionTirDirect_Running )
]]--[[//{
]]--[[//    DEC_Trace(  "running"  );
]]--[[//}
]]        end

        if( self.bReprise ) then
            do
                --[[//DEC_Trace(  "reprise exactions"  );
]]DEC_ReprendAction( self.actionExaction )
                self.bReprise = false
            end
        end

--[[//DEC_Trace(  "pause exactions"  );
]]--[[//DEC_Trace(  "fin exactions"  );
]]    end,

    deselect = function( self )
                DEC_PauseAction( self.actionExaction )
        self.bReprise = true
    end,

    destroy = function( self )
                self.actionExaction = DEC_StopAction( self.actionExaction )
    end,

}

