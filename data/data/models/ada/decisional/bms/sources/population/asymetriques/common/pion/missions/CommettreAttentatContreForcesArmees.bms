includedFiles = includedFiles or {}
includedFiles["sources/population/asymetriques/common/pion/missions/CommettreAttentatContreForcesArmees.bms"] = true

--[[// *****************************************************************************
]]--[[// MIS_Pion_ASY_CommettreAttentatContreForcesArmees
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]node "MIS_Pion_ASY_CommettreAttentatContreForcesArmees"
{
    activations =
    {
        { "BEH_Ordre_Inopine", {} },
        { "ACT_MAJ_EtatPhaseMission", {} },
        { "ACT_Info_Trace", {} },
        { "BEH_Dep_Pion_ASY_ProgresserATraversPopulationSur", {} },
        { "BEH_Dep_Pion_ASY_ProgresserATraversPopulationVers", {} },
        { "BEH_Eni_Pion_ASY_CommettreAttentatContreForcesArmees", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        self.ePhaseMission = self.ePhaseMission or ePreparerMission
        self.eAction = self.eAction or eActionEnCours
        self.lieuAttentat = self.lieuAttentat or DEC_ListePoints_GetAt( self._namedParams.mission.itineraire_, DEC_ListePoints_Size( self._namedParams.mission.itineraire_ ) - 1 )
        self.objectif = self.objectif or nil
        self.eActionMouvement = self.eActionMouvement or eActionEnCours
        if( ModuleBegins() ) then
            do
                DEC_SetMission( myself, self._namedParams.mission )
                if( not DEC_Geometrie_EstPointDansFuseau( self.lieuAttentat ) ) then
                    do
                        DEC_Warning( eRC_MissionImpossibleZoneHorsFuseau )
                                                Halt( self )
                        do return end

                    end
                end

            end
        end

        self.eEtatOrdreFinMission = self.eEtatOrdreFinMission or eActionEnCours
        Activate( self.activations.BEH_Ordre_Inopine, 1, setmetatable( {}, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eEtatOrdreFinMission = v else rawset( t, k, v ) end end } ) )
        if( self.eEtatOrdreFinMission == eActionHalt ) then
            do
                self.ePhaseMission = eSExfiltrer
                self.eAction = eActionEnCours
                self.eEtatOrdreFinMission = eActionEnCours
            end
        end

         do
            local _continue = true
            local switch_1 = self.ePhaseMission
            local cases_switch_1 = {}
                if switch_1 == ePreparerMission then
                    --[[// Preparation de la mission
]]Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_DebutMission, } )
                    Activate( self.activations.ACT_Info_Trace, 1, { "** MIS_Pion_ASY_CommettreAttentatContreForcesArmees:debut **", } )
                    self.ePhaseMission = eSInfiltrer
                    _continue = false
                --[[// Infiltration
]]                cases_switch_1[1] = true
elseif switch_1 == eSInfiltrer then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_EnInfiltration, } )
                    if( self.eAction == eActionEffectuee ) then
                        do
                            self.eAction = eActionEnCours
                                                        do
                                self.eAction = eActionEnCours
                                self.ePhaseMission = eAgirSurEni
                                                                do return end

                            end

                        end
                    end

                    Activate( self.activations.BEH_Dep_Pion_ASY_ProgresserATraversPopulationSur, 1, setmetatable( { self._namedParams.mission.itineraire_, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eAction = v else rawset( t, k, v ) end end } ) )
                    _continue = false
                --[[// Infiltration au plus près dans un rayon de 500m autour du lieu de l'attentat
]]                cases_switch_1[2] = true
elseif switch_1 == eAborderObjectif then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_EnPosition, } )
                    if( self.eAction == eActionEffectuee ) then
                        do
                            self.eAction = eActionEnCours
                                                        do
                                self.eAction = eActionEnCours
                                self.ePhaseMission = eAgirSurEni
                                                                do return end

                            end

                        end
                    end

                    Activate( self.activations.BEH_Dep_Pion_ASY_ProgresserATraversPopulationVers, 1, setmetatable( { self.objectif, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eAction = v else rawset( t, k, v ) end end } ) )
                    _continue = false
                --[[// Declenchement de l'attentat
]]                cases_switch_1[3] = true
elseif switch_1 == eAgirSurEni then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_EnPosition, } )
                    --[[// Attentat effectué, on s'exfiltre
]]if( self.eAction == eActionEffectuee ) then
                        do
                            self.eAction = eActionEnCours
                                                        do
                                self.eAction = eActionEnCours
                                self.ePhaseMission = eSExfiltrer
                                                                do return end

                            end

                        end
                    end

                    local pointEni = DEC_ConnaissanceAgent_Position( self._namedParams.mission.uniteCible_ )
                    if( ( pointEni == 0 or pointEni == nil ) ) then
                        do
                            DEC_RC( eRC_MissionImpossible )
                            DEC_Trace( "connaissance non valide" )
                            self.ePhaseMission = eSExfiltrer
                            _continue = false
                        end
--[[//execution à portée
]]                    end

                        if _continue then
                        if( DEC_Geometrie_Distance( DEC_Agent_Position(), pointEni ) <= 10 ) then
                            Activate( self.activations.BEH_Eni_Pion_ASY_CommettreAttentatContreForcesArmees, 1, setmetatable( { self._namedParams.mission.uniteCible_, self._namedParams.mission.typeAttentatForcesArmees_, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eAction = v else rawset( t, k, v ) end end } ) )
                        else
--[[//rejoindre la population si elle est dans un rayon de 500m
]]if( DEC_Geometrie_Distance( self.lieuAttentat, pointEni ) < 500 ) then
                                do
                                    self.objectif = pointEni
                                    self.ePhaseMission = eAborderObjectif
                                end
--[[//on s'est trop eloigné du lieu de l'attentat
]]                            else
if( DEC_Geometrie_Distance( self.lieuAttentat, DEC_Agent_Position() ) > 10 ) then
                                    do
                                        self.objectif = self.lieuAttentat
                                        self.ePhaseMission = eAborderObjectif
                                    end
                                end
                            end
                        end

                        _continue = false
                    end
                --[[// Rejoindre la position de repli
]]                cases_switch_1[4] = true
elseif switch_1 == eSExfiltrer then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_EnExfiltration, } )
                    if( self.eAction == eActionEffectuee ) then
                        do
                            self.eAction = eActionEnCours
                                                        do
                                self.ePhaseMission = eFinMission
                                                                do return end

                            end

                        end
                    end

                    Activate( self.activations.BEH_Dep_Pion_ASY_ProgresserATraversPopulationVers, 1, setmetatable( { self._namedParams.mission.pointRepli_, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eAction = v else rawset( t, k, v ) end end } ) )
                    _continue = false
                --[[// Fin
]]                cases_switch_1[5] = true
elseif switch_1 == eFinMission then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_FinMission, } )
                                        Halt( self )
                    do return end

                                end
            end

    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Pion_ASY_CommettreAttentatContreForcesArmees = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.MIS_Pion_ASY_CommettreAttentatContreForcesArmees, "BEH_Ordre_Inopine", nodes.BEH_Ordre_Inopine }
connections[ #connections + 1 ] = { nodes.MIS_Pion_ASY_CommettreAttentatContreForcesArmees, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_ASY_CommettreAttentatContreForcesArmees, "ACT_Info_Trace", nodes.ACT_Info_Trace }
connections[ #connections + 1 ] = { nodes.MIS_Pion_ASY_CommettreAttentatContreForcesArmees, "BEH_Dep_Pion_ASY_ProgresserATraversPopulationSur", nodes.BEH_Dep_Pion_ASY_ProgresserATraversPopulationSur }
connections[ #connections + 1 ] = { nodes.MIS_Pion_ASY_CommettreAttentatContreForcesArmees, "BEH_Dep_Pion_ASY_ProgresserATraversPopulationVers", nodes.BEH_Dep_Pion_ASY_ProgresserATraversPopulationVers }
connections[ #connections + 1 ] = { nodes.MIS_Pion_ASY_CommettreAttentatContreForcesArmees, "BEH_Eni_Pion_ASY_CommettreAttentatContreForcesArmees", nodes.BEH_Eni_Pion_ASY_CommettreAttentatContreForcesArmees }
