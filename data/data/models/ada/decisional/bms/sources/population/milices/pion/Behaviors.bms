includedFiles = includedFiles or {}
includedFiles["sources/population/milices/pion/Behaviors.bms"] = true

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JDY 02-11-06 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Population/Milices/Pion/Behaviors.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 9/09/05 14:53 $
]]--[[// $Revision: 18 $
]]--[[// $Workfile: Behaviors.hal $
]]--[[//
]]--[[// *****************************************************************************
]]
--[[// Paramètres généraux
]]--[[// -------------------
]]use_priority = no

max_instances = 100

max_activations = 100


--[[// Définition des actuateurs
]]--[[// -------------------------
]]actuators = {
installation = 1,
etat_OrdreCoordination = 1,
deplacement = 1,
debarquement = 1,
observation = 1,
reconnaissance = 1,
tir = 1,
tir_indirect = 1,
controle_zone = 1,
vitesse = 1,
ennemi = 1,
objectifEsquive = 1,
etat_Ambiance = 1,
etat_Mission = 1,
etat_Dec = 1,
etat_Lima = 1,
controlePopulation = 1,
etat_Destruction = 1,
etat_ROE = 1,
}


--[[//missions génériques
]]include "Common/Pions/Behaviors.bms"


--[[// Embarquement (apres heliportage)
]]include "Common/Pions/Behaviors/Behaviors - Embarquement.bms"


include "Common/Pions/MissionsGeneriques.bms"


--[[// Actions de la Milice
]]--[[// ---------------------------------------------
]]include "Population/Milices/Pion/Actions.bms"


--[[// Comportements de la milice
]]--[[// -----------------------------------------
]]include "Population/Milices/Common/Behaviors.bms"


--[[// On recupere les comportements de l'infanterie
]]--[[// include "Melee\Inf\Pions\Common\Missions\Appuyer.bms"
]]include "Melee/Inf/Pions/Common/Missions/Embuscade.bms"

include "Melee/Inf/Pions/Common/Missions/Harceler.bms"

include "Melee/Inf/Pions/Common/Missions/DetruireParCoupDeMain.bms"


--[[// include "Melee\Inf\Pions\Common\Behaviors - Dep.bms"
]]include "Population/Milices/Pion/Behaviors - Dispositif.bms"

include "Population/Milices/Pion/Behaviors - Obj.bms"

include "Population/Milices/Pion/Behaviors - Dep.bms"

include "Population/Milices/Pion/Behaviors - Eni.bms"


--[[//=============================================================================
]]--[[// Declaration de toutes les missions de la Section d'Infanterie
]]--[[//=============================================================================
]]
include "Population/Milices/Pion/Missions/PrendreUnGage.bms"

include "Population/Milices/Pion/Missions/DetruireParEmbuscade.bms"

--[[//include "Population\Milices\Pion\Missions\RealiserBarricade.bms"
]]include "Population/Milices/Pion/Missions/DetruireParCoupDeMain.bms"

include "Population/Milices/Pion/Missions/Harceler.bms"


--[[//=============================================================================
]]--[[// Capacites asymetriques
]]--[[//=============================================================================
]]
include "Population/Asymetriques/Common/Pion/Actions.bms"

include "Population/Asymetriques/Common/Pion/Behaviors.bms"


--[[// mission asymetriques
]]include "Population/Asymetriques/Common/Pion/Missions/CommettreExactions.bms"

include "Population/Asymetriques/Common/Pion/Missions/Renseigner.bms"


node "BEH_Defaut"
{
    activations =
    {
        { "ACT_Maj_Pion_PasserEnTirLibre", {} },
        { "BEH_MAJ_EtatDefaut", {} },
        { "BEH_Mot_AffecterVariablesDEtat", {} },
        { "BEH_Ambiance", {} },
        { "BEH_ROE", {} },
        { "BEH_Nbc", {} },
        { "BEH_Rens", {} },
        { "ACT_MAJ_EnnemiEnCours", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.nDummy = self.params[1]
    end,

    activate = function( self )
        if( ModuleBegins() ) then
            do
                Activate( self.activations.ACT_Maj_Pion_PasserEnTirLibre, 1, {} )--[[//ROE par defaut pour cette mission
]]
                F_Pion_SetobjectifEsquive( myself, nil )
                myself.ptRegroupement_ = 0
                --[[// Init variables
]]F_Pion_SeteEtatEchelon( myself, eEtatEchelon_Second )
                F_Pion_SeteTypeContact( myself, eTypeContact_Defaut )
                F_Pion_SetrTenir( myself, 0 )
            end
--[[// MAJ de l'état DEC par défaut 
]]--[[//-----------------------------------------------------------------------------
]]        end

        Activate( self.activations.BEH_MAJ_EtatDefaut, 1, {} )
        Activate( self.activations.BEH_Mot_AffecterVariablesDEtat, 1, {} )--[[// MAJ de l'etat du pion en fonction de son agressivite
]]--[[// ------------------------------------------------------------------------	
]]
        --[[// action ACT_Mot_MAJ_AgressivitePion();
]]--[[// Si totalement detruit...
]]if( S_Misc_EstDetruitPhysique() ) then
            do return end
        end

        Activate( self.activations.BEH_Ambiance, 1, {} )--[[// -------------------------------------------------------------------------	
]]--[[// Ambiance
]]--[[// ------------------------------------------------------------------------
]]
        Activate( self.activations.BEH_ROE, 1, {} )--[[// Comportements Generiques
]]
        Activate( self.activations.BEH_Nbc, 1, {} )
        Activate( self.activations.BEH_Rens, 1, {} )--[[// Gestion de la guerre elec : Passer en silence radio
]]
        if( ( DEC_GetMission( myself ) == 0 or DEC_GetMission( myself ) == nil ) ) then
            do
                --[[// action ACT_Mot_Pion_INF_InitialisePoste();
]]local ksFoo = nil
                Activate( self.activations.ACT_MAJ_EnnemiEnCours, 0.5, { ksFoo, } )
            end
        end

    end,

}

node "BEH_Obs_Pion_INF_SurveillerSecteur"
{
    activations =
    {
        { "ACT_Info_Trace", {} },
        { "ACT_Obs_SurveillerZone", {} },
        { "ACT_Obs_ObserverZone", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.locSecteur = self.params[1]
    end,

    activate = function( self )
        self.ptObservation = self.ptObservation or nil
        self.eAction = self.eAction or eActionEnCours
        if( self.eAction == eActionEffectuee ) then
            Activate( self.activations.ACT_Info_Trace, 1, { "Surveillance : dispositif installe.", } )
        end

        Activate( self.activations.ACT_Obs_SurveillerZone, 1, { self._namedParams.locSecteur, } )
        Activate( self.activations.ACT_Obs_ObserverZone, 1, setmetatable( { DEC_Agent_Position(), M_CAPACITE_SURVEILLANCE(), }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eAction = v else rawset( t, k, v ) end end } ) )
    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "ACT_Maj_Pion_PasserEnTirLibre", nodes.ACT_Maj_Pion_PasserEnTirLibre }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_MAJ_EtatDefaut", nodes.BEH_MAJ_EtatDefaut }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Mot_AffecterVariablesDEtat", nodes.BEH_Mot_AffecterVariablesDEtat }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Ambiance", nodes.BEH_Ambiance }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_ROE", nodes.BEH_ROE }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Nbc", nodes.BEH_Nbc }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Rens", nodes.BEH_Rens }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "ACT_MAJ_EnnemiEnCours", nodes.ACT_MAJ_EnnemiEnCours }
connections[ #connections + 1 ] = { nodes.BEH_Obs_Pion_INF_SurveillerSecteur, "ACT_Info_Trace", nodes.ACT_Info_Trace }
connections[ #connections + 1 ] = { nodes.BEH_Obs_Pion_INF_SurveillerSecteur, "ACT_Obs_SurveillerZone", nodes.ACT_Obs_SurveillerZone }
connections[ #connections + 1 ] = { nodes.BEH_Obs_Pion_INF_SurveillerSecteur, "ACT_Obs_ObserverZone", nodes.ACT_Obs_ObserverZone }
