includedFiles = includedFiles or {}
includedFiles["sources/melee/abc/automates/ge40/missions/Rendre compte.bms"] = true

include "bit.lua"


--[[// *****************************************************************************
]]--[[// BEH_GTIA_RendreCompte
]]--[[// 
]]--[[// Commentaires: fait des CR spé aux GTIA
]]--[[//
]]--[[// *****************************************************************************
]]node "BEH_GTIA_RendreCompte"
{
    activations =
    {
        { "BEH_GTIA_RendreCompteDebutFinMission", {} },
        { "BEH_GTIA_RendreCompteSurOrdreDeConduite", {} },
        { "BEH_GTIA_RendreCompteSurLima", {} },
        { "BEH_GTIA_AFFICHE_temp", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        Activate( self.activations.BEH_GTIA_RendreCompteDebutFinMission, 1, {} )
        Activate( self.activations.BEH_GTIA_RendreCompteSurOrdreDeConduite, 1, {} )
        Activate( self.activations.BEH_GTIA_RendreCompteSurLima, 1, {} )
        Activate( self.activations.BEH_GTIA_AFFICHE_temp, 1, {} )--[[// TEMP rien à faire ici
]]
    end,

--[[// *****************************************************************************
]]--[[// BEH_GTIA_RendreCompteDebutFinMission
]]--[[// 
]]--[[// Commentaires: fait des CR spé aux GTIA
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_GTIA_RendreCompteDebutFinMission"
{
    activations =
    {
        { "ACT_RC_Automate", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        if( ModuleBegins() ) then
            do
                Activate( self.activations.ACT_RC_Automate, 1, { eRC_DebutMission, } )
                                return

            end
        end

        local listePionsPE = S_Cherche_GE_Filtre_PasFinMission( S_Cherche_GE_ObtenirPionsDe( eEtatEchelon_Premier ) )
        if( DIA_IsListEmpty( listePionsPE ) ) then
            StartActivate( self.activations.ACT_RC_Automate, 1, { eRC_FinMission, } )
        end

    end,

--[[// *****************************************************************************
]]--[[// BEH_GTIA_RendreCompteSurOrdreDeConduite
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_GTIA_RendreCompteSurOrdreDeConduite"
{
    activations =
    {
        { "ACT_RC_Automate", {} },
        { "ACT_Ordre_Suppression", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        local ordres_recus = DEC_GetCategory( "ordres_recus" )
        for _,ordre in pairs( ordres_recus ) do
        local _continue = true
do
                local repOrdre = ordre
                if( repOrdre:GetType() == "Rep_OrderConduite_AttendreSePoster" ) then
                    StartActivate( self.activations.ACT_RC_Automate, 1, { eRC_AttenteOrdrePoursuivre, } )
                end

                if( repOrdre:GetType() == "Rep_OrderConduite_Deboucher" or repOrdre:GetType() == "Rep_OrderConduite_Poursuivre" ) then
                    StopActivate( self.activations.ACT_RC_Automate, { eRC_AttenteOrdrePoursuivre, } )
                end

                if( repOrdre:GetType() == "Rep_OrderConduite_Decrocher" or g_bPhaseReceuil ) then
                    StartActivate( self.activations.ACT_RC_Automate, 1, { eRC_Decroche, } )
                end

                Activate( self.activations.ACT_Ordre_Suppression, 1, { ordre, } )
            end

        end

    end,

--[[// *****************************************************************************
]]--[[// BEH_GTIA_RendreCompteSurLima
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_GTIA_RendreCompteSurLima"
{
    activations =
    {
        { "ACT_RC_Automate", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        local listePionsPE = S_Cherche_GE_ObtenirPionsDe( eEtatEchelon_Premier )
        --[[// Pas de PE donc pas de mission ou échouage
]]if( ( #( listePionsPE ) == 0 or #( listePionsPE ) == nil ) ) then
            return
        end

        local listePionsSurLD = S_Cherche_GE_Filtre_EtatLima( eEtatLima_LD, listePionsPE )
        local listePionsSurLC = S_Cherche_GE_Filtre_EtatLima( eEtatLima_LC, listePionsPE )
        --[[// Sur LC et LD
]]if( #( listePionsSurLC ) == #( listePionsPE ) ) then
            Activate( self.activations.ACT_RC_Automate, 1, { eRC_AttenteOrdrePoursuivre, } )
        end

        if( #( listePionsSurLD ) == #( listePionsPE ) ) then
            Activate( self.activations.ACT_RC_Automate, 1, { eRC_AttenteOrdreDeboucher, } )
        end

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_GTIA_RendreCompte, "BEH_GTIA_RendreCompteDebutFinMission", nodes.BEH_GTIA_RendreCompteDebutFinMission }
connections[ #connections + 1 ] = { nodes.BEH_GTIA_RendreCompte, "BEH_GTIA_RendreCompteSurOrdreDeConduite", nodes.BEH_GTIA_RendreCompteSurOrdreDeConduite }
connections[ #connections + 1 ] = { nodes.BEH_GTIA_RendreCompte, "BEH_GTIA_RendreCompteSurLima", nodes.BEH_GTIA_RendreCompteSurLima }
connections[ #connections + 1 ] = { nodes.BEH_GTIA_RendreCompte, "BEH_GTIA_AFFICHE_temp", nodes.BEH_GTIA_AFFICHE_temp }
connections[ #connections + 1 ] = { nodes.BEH_GTIA_RendreCompteDebutFinMission, "ACT_RC_Automate", nodes.ACT_RC_Automate }
connections[ #connections + 1 ] = { nodes.BEH_GTIA_RendreCompteSurLima, "ACT_RC_Automate", nodes.ACT_RC_Automate }
connections[ #connections + 1 ] = { nodes.BEH_GTIA_RendreCompteSurOrdreDeConduite, "ACT_RC_Automate", nodes.ACT_RC_Automate }
connections[ #connections + 1 ] = { nodes.BEH_GTIA_RendreCompteSurOrdreDeConduite, "ACT_Ordre_Suppression", nodes.ACT_Ordre_Suppression }
