includedFiles = includedFiles or {}
includedFiles["sources/melee/abc/pions/common/missions/Soutenir.bms"] = true

include "bit.lua"


--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: MIA 03-01-26 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Abc/Pions/Common/Missions/Soutenir.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 22/08/05 16:07 $
]]--[[// $Revision: 26 $
]]--[[// $Workfile: Soutenir.hal $
]]--[[//
]]--[[// *****************************************************************************
]]
--[[// *****************************************************************************
]]--[[// BEH_Mission_Pion_ABC_SoutenirUneUnite
]]--[[// 
]]--[[// Commentaires: 
]]--[[// 
]]--[[//
]]--[[// *****************************************************************************
]]node "BEH_Mission_Pion_ABC_SoutenirUneUnite"
{
    activations =
    {
        { "BEH_Ordre_Inopine", {} },
        { "BEH_MAJ_Pion_ABC_AgressiviteTir", {} },
        { "BEH_MOT_DesactiveSauvegarde", {} },
        { "ACT_MAJ_EtatPhaseMission", {} },
        { "ACT_Info_Trace", {} },
        { "ACT_Dep_ModulationVitesse", {} },
        { "BEH_Dep_Pion_ABC_Appuyer", {} },
        { "BEH_Dep_Suivre", {} },
        { "BEH_Dep_SePosterFaceADirectionDangereuse", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.pionAmi = self.params[1]
        self._namedParams.rPH = self.params[2]
        self._namedParams.eNiveauIdentificationEni = self.params[3]
    end,

    activate = function( self )
        self.eEtat = self.eEtat or eActionEnCours
        self.ePhaseMission = self.ePhaseMission or ePreparerMission
        self.eEtatOrdreFinMission = self.eEtatOrdreFinMission or eActionEnCours
        Activate( self.activations.BEH_Ordre_Inopine, 1, setmetatable( {}, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eEtatOrdreFinMission = v else rawset( t, k, v ) end end } ) )
        if( self.eEtatOrdreFinMission == eActionHalt ) then
            do
                self.ePhaseMission = eFinMission
                self.eEtat = eActionEnCours
                self.eEtatOrdreFinMission = eActionEnCours
            end
--[[//-----------------------------------------------------------------------------
]]--[[// Agressivite
]]--[[//-----------------------------------------------------------------------------
]]        end

        Activate( self.activations.BEH_MAJ_Pion_ABC_AgressiviteTir, 1, { self._namedParams.rPH, } )
        Activate( self.activations.BEH_MOT_DesactiveSauvegarde, 1, {} )--[[//-----------------------------------------------------------------------------
]]--[[// Soutenir à tout prix
]]--[[//-----------------------------------------------------------------------------
]]
        --[[//-----------------------------------------------------------------------------
]]--[[// Ambiance
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            F_Pion_SeteEtatAmbiance( myself, eEtatAmbiance_Vitesse )
        end

        switch_1 = self.ePhaseMission
            if switch_1 == ePreparerMission then
                --[[// 1) Preparation de la mission. On ne s'occupe pas des fuseaux, ce sont ceux de l'unité soutenue
]]Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_DebutMission, } )
                Activate( self.activations.ACT_Info_Trace, 1, { "Close support of" .. DEC_GetSzName( self._namedParams.pionAmi ) .. " mission begining **", } )
                self.ePhaseMission = eSuivreUnite
                
            --[[// 2) Suivre l'unité, être prêt à passer en appui
]]elseif switch_1 == eSuivreUnite then
                --[[// Modulation vitesse --> rapide
]]Activate( self.activations.ACT_Dep_ModulationVitesse, 1.1, { 1, } )
                --[[//-----------------------------------------------------------------------------
]]--[[// Deactive sauvegarde pd mission, essaye à tout prix de soutenir si l'ami, lui,
]]--[[// doit tenir...
]]--[[//-----------------------------------------------------------------------------
]]local mission = DEC_GetMission( self._namedParams.pionAmi )
                if( mission ~= nil and mission:GetType() == "T_Mission_Pion_ABC_Barrer" ) then
                    Activate( self.activations.BEH_MOT_DesactiveSauvegarde, 1, {} )
                end

                --[[//-----------------------------------------------------------------------------
]]--[[// Passer en appui des que possible
]]--[[//-----------------------------------------------------------------------------
]]if( DEC_Geometrie_Distance( DEC_Agent_Position(), self._namedParams.pionAmi:DEC_Agent_Position() ) < M_MODELE_PION_ABC_DISTANCE_DEBUT_APPUI() ) then
                    do
                        Activate( self.activations.BEH_Dep_Pion_ABC_Appuyer, 1, { self._namedParams.pionAmi, } )
                        Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_EnAppui, } )
                                                return

                    end
--[[//-----------------------------------------------------------------------------
]]--[[// Suivre unite ami en mesure de passer en appui
]]--[[//-----------------------------------------------------------------------------   
]]                end

                Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_SuitUnite, } )
                Activate( self.activations.BEH_Dep_Suivre, 1, { self._namedParams.pionAmi, M_MODELE_PION_ABC_DISTANCE_MIN_SUIVRE(), } )
                
            --[[// 3) Fin mission sur ordre
]]elseif switch_1 == eFinMission then
                Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_FinMission, } )
                Activate( self.activations.BEH_Dep_SePosterFaceADirectionDangereuse, 1, {} )
                
            
            else
                        end

    end,

--[[// *****************************************************************************
]]--[[// BEH_Dep_Pion_ABC_Appuyer
]]--[[// 
]]--[[// Commentaires: 
]]--[[// 
]]--[[// *****************************************************************************
]]}

node "BEH_Dep_Pion_ABC_Appuyer"
{
    activations =
    {
        { "BEH_Dep_SePosterFaceADirectionDangereuse", {} },
        { "ACT_Info_Trace", {} },
        { "BEH_Dep_Pion_ABC_RejoindrePositionAppuiPour", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ami = self.params[1]
    end,

    activate = function( self )
        self.eEtat = self.eEtat or eActionEnCours
        Activate( self.activations.BEH_Dep_SePosterFaceADirectionDangereuse, 1, {} )--[[//---------------------------------------------------------------------
]]--[[// Defaut
]]--[[//---------------------------------------------------------------------
]]
        --[[//---------------------------------------------------------------------
]]--[[// Rejoindre la position d'appui
]]--[[//---------------------------------------------------------------------
]]--[[// Pour RC
]]if( self.eEtat == eActionEffectuee ) then
            do
                Activate( self.activations.ACT_Info_Trace, 1, { "Holding support position...", } )
                Activate( self.activations.ACT_Info_Trace, 1, { "...ready to fire", } )
                                return

            end
        end

        Activate( self.activations.BEH_Dep_Pion_ABC_RejoindrePositionAppuiPour, 1.1, setmetatable( { self._namedParams.ami, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eEtat = v else rawset( t, k, v ) end end } ) )
    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Dep_Pion_ABC_Appuyer, "BEH_Dep_SePosterFaceADirectionDangereuse", nodes.BEH_Dep_SePosterFaceADirectionDangereuse }
connections[ #connections + 1 ] = { nodes.BEH_Dep_Pion_ABC_Appuyer, "ACT_Info_Trace", nodes.ACT_Info_Trace }
connections[ #connections + 1 ] = { nodes.BEH_Dep_Pion_ABC_Appuyer, "BEH_Dep_Pion_ABC_RejoindrePositionAppuiPour", nodes.BEH_Dep_Pion_ABC_RejoindrePositionAppuiPour }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_SoutenirUneUnite, "BEH_Ordre_Inopine", nodes.BEH_Ordre_Inopine }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_SoutenirUneUnite, "BEH_MAJ_Pion_ABC_AgressiviteTir", nodes.BEH_MAJ_Pion_ABC_AgressiviteTir }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_SoutenirUneUnite, "BEH_MOT_DesactiveSauvegarde", nodes.BEH_MOT_DesactiveSauvegarde }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_SoutenirUneUnite, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_SoutenirUneUnite, "ACT_Info_Trace", nodes.ACT_Info_Trace }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_SoutenirUneUnite, "ACT_Dep_ModulationVitesse", nodes.ACT_Dep_ModulationVitesse }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_SoutenirUneUnite, "BEH_Dep_Pion_ABC_Appuyer", nodes.BEH_Dep_Pion_ABC_Appuyer }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_SoutenirUneUnite, "BEH_Dep_Suivre", nodes.BEH_Dep_Suivre }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_SoutenirUneUnite, "BEH_Dep_SePosterFaceADirectionDangereuse", nodes.BEH_Dep_SePosterFaceADirectionDangereuse }
