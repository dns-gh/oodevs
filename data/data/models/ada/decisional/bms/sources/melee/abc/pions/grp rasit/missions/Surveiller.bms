includedFiles = includedFiles or {}
includedFiles["sources/melee/abc/pions/grp rasit/missions/Surveiller.bms"] = true

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: MIA 03-03-26 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Abc/Pions/Grp Rasit/Missions/Surveiller.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 23/08/05 15:21 $
]]--[[// $Revision: 19 $
]]--[[// $Workfile: Surveiller.hal $
]]--[[//
]]--[[// *****************************************************************************
]]
--[[// *****************************************************************************
]]--[[// MIS_Pion_ABC_Surveiller
]]--[[// 
]]--[[// Commentaires:
]]--[[// 
]]--[[//
]]--[[// *****************************************************************************
]]node "MIS_Pion_ABC_Surveiller"
{
    activations =
    {
        { "BEH_Mission_Pion_ABC_RASIT_SurveillerSecteur", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        self.eEtat = self.eEtat or nil
        --[[//-----------------------------------------------------------------------------
]]--[[// Terminaison
]]--[[//-----------------------------------------------------------------------------
]]if( self.eEtat == eActionImpossible ) then
            self.params.__returnValue = eActionImpossible
            Halt( self )
            do return end
        end

        if( self.eEtat == eActionEffectuee ) then
            self.params.__returnValue = eActionEffectuee
            Halt( self )
            do return end
        end

        --[[//-----------------------------------------------------------------------------
]]--[[// Comportement de la mission
]]--[[//-----------------------------------------------------------------------------
]]Activate( self.activations.BEH_Mission_Pion_ABC_RASIT_SurveillerSecteur, 1, setmetatable( { self._namedParams.mission, M_MODELE_PION_ABC_SURVEIILER_PH(), M_MODELE_PION_ABC_SURVEIILER_ID(), }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eEtat = v else rawset( t, k, v ) end end } ) )
    end,

--[[// ******************************************************************************
]]--[[// BEH_Mission_Pion_ABC_RASIT_SurveillerSecteur
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// ******************************************************************************
]]}

node "BEH_Mission_Pion_ABC_RASIT_SurveillerSecteur"
{
    activations =
    {
        { "ACT_MAJ_EtatPhaseMission", {} },
        { "ACT_Info_Trace", {} },
        { "BEH_Dep_ProgressionVers", {} },
        { "BEH_Pion_ABC_InstallerDispositif", {} },
        { "BEH_Dep_SePosterFaceADirectionDangereuse", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params[1]
        self._namedParams.rPH = self.params[2]
        self._namedParams.eNiveauIdentificationEni = self.params[3]
    end,

    activate = function( self )
        self.eEtat = self.eEtat or eActionEnCours
        self.eEtatOrdreFinMission = self.eEtatOrdreFinMission or eActionEnCours
        self.ePhaseMission = self.ePhaseMission or ePreparerMission
        --[[//-----------------------------------------------------------------------------
]]--[[// Ordre fin de mission
]]--[[//-----------------------------------------------------------------------------
]]if( self.eEtatOrdreFinMission == eActionHalt ) then
            do
                self.eEtatOrdreFinMission = eActionEnCours
                self.ePhaseMission = eFinMission
            end
--[[//-----------------------------------------------------------------------------
]]--[[// Pion detruit
]]--[[//-----------------------------------------------------------------------------
]]        end

        if( F_Pion_GeteEtatDestruction( myself ) ~= eEtatDestruction_None ) then
            self.params.__returnValue = eActionEffectuee
            Halt( self )
            do return end
        end

         do
            local _continue = true
            local switch_1 = --[[//=========================================================================
]]--[[// SQUELETTE DE LA MISSION
]]--[[//
]]--[[// strength = 1
]]--[[//
]]--[[//=========================================================================
]]self.ePhaseMission
            local cases_switch_1 = {}
                if switch_1 == ePreparerMission then
                    --[[//---------------------------------------------------------------------
]]--[[// 1) Preparation de la mission.
]]--[[//---------------------------------------------------------------------
]]Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_DebutMission, } )
                    Activate( self.activations.ACT_Info_Trace, 1, { "Radar detection mission begining", } )
                    self.ePhaseMission = eProgresser
                    _continue = false
                --[[//---------------------------------------------------------------------
]]--[[// 2) Progression tactique
]]--[[//---------------------------------------------------------------------
]]                cases_switch_1[1] = true
elseif switch_1 == eProgresser then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_ProgressionVersLocalisation, } )
                    if( self.eEtat == eActionEffectuee ) then
                        do
                            self.eEtat = eActionEnCours
                                                        do
                                self.ePhaseMission = eSurveiller
                                                                do return end

                            end

                        end
--[[// force de 1.
]]                    end

                    Activate( self.activations.BEH_Dep_ProgressionVers, 1, setmetatable( { self._namedParams.mission.position_, eProgressionReco, eTypeItiMouvement, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eEtat = v else rawset( t, k, v ) end end } ) )
                    _continue = false
                --[[//---------------------------------------------------------------------
]]--[[// 4) Puis on observe la zone souhaitée.
]]--[[//---------------------------------------------------------------------
]]                cases_switch_1[2] = true
elseif switch_1 == eSurveiller then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_ArriveSurLocalisation, } )
                    Activate( self.activations.BEH_Pion_ABC_InstallerDispositif, 1, {} )
                    Activate( self.activations.BEH_Dep_SePosterFaceADirectionDangereuse, 1, {} )
                    _continue = false
                --[[//-----------------------------------------------------------------------------
]]--[[// Fin mission
]]--[[//-----------------------------------------------------------------------------
]]                cases_switch_1[3] = true
elseif switch_1 == eFinMission then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_FinMission, } )
                    Activate( self.activations.BEH_Dep_SePosterFaceADirectionDangereuse, 1, {} )
                    _continue = false
                                cases_switch_1[4] = true

                else
                                end
            end

    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Pion_ABC_Surveiller = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_RASIT_SurveillerSecteur, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_RASIT_SurveillerSecteur, "ACT_Info_Trace", nodes.ACT_Info_Trace }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_RASIT_SurveillerSecteur, "BEH_Dep_ProgressionVers", nodes.BEH_Dep_ProgressionVers }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_RASIT_SurveillerSecteur, "BEH_Pion_ABC_InstallerDispositif", nodes.BEH_Pion_ABC_InstallerDispositif }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_RASIT_SurveillerSecteur, "BEH_Dep_SePosterFaceADirectionDangereuse", nodes.BEH_Dep_SePosterFaceADirectionDangereuse }
connections[ #connections + 1 ] = { nodes.MIS_Pion_ABC_Surveiller, "BEH_Mission_Pion_ABC_RASIT_SurveillerSecteur", nodes.BEH_Mission_Pion_ABC_RASIT_SurveillerSecteur }
