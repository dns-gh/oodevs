includedFiles = includedFiles or {}
includedFiles["sources/melee/abc/automates/pel eei/missions/protegerpc/ProtegerPC - MRT.bms"] = true

--[[// *****************************************************************************
]]--[[// $Created$
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Abc/Automates/Pel PIR/Missions/ProtegerPC/ProtegerPC - MRT.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 13/05/05 16:31 $
]]--[[// $Revision: 8 $
]]--[[// $Workfile: ProtegerPC - MRT.hal $
]]--[[// *****************************************************************************
]]
--[[// *****************************************************************************
]]--[[// MIS_Automate_MRT_ABC_ProtegerPC
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]node "MIS_Automate_MRT_ABC_ProtegerPC"
{
    feedbacks = { { { "done_MIS_Automate_MRT_ABC_ProtegerPC" }, "MIS_Automate_MRT_ABC_ProtegerPC" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_MIS_Automate_MRT_ABC_ProtegerPC, {value} ) end,
    activations =
    {
        { "BEH_Medo_Automate_ControleCreationMission", { "done_BEH_Medo_Automate_ControleCreationMission" } },
        { "BEH_Medo_Automate_ABC_AssignerProtegerPCA", { "done_BEH_Medo_Automate_ABC_AssignerProtegerPCA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        local Activate = Activate
        self.eValidationMRT = self.eValidationMRT or eActionEnCours
        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                DEC_Trace( "$ MIS AUTO ProtegerPC: debut MRT $" )
                DEC_SetMission( myself, self._namedParams.mission )
                                do
                    local listePionsSubordonnes = DEC_Automate_PionsAvecPC()
                    for _,x in pairs( listePionsSubordonnes or {} ) do
                    local _continue = true
                        do
                            local pion = x
                            F_Pion_SeteEtatEchelon( pion, eEtatEchelon_Second )
                            F_Pion_SeteEtatSoutien( pion, eEtatSoutien_aucun )
                        end

                    end

                end

            end
--[[//-----------------------------------------------------------------------------
]]--[[// Assignation et vérification
]]--[[//-----------------------------------------------------------------------------
]]        end

        if( self.eValidationMRT == eActionImpossible ) then
            do
                                do
                    DEC_MRT_Valide()
                    DEC_Trace( "!!!!Attention toutes les missions n'ont pas été données au PE!!!" )
                end

                                self:SendFeedback( eActionImpossible )
                Halt( self )
                do return end

            end
        end

        if( self.eValidationMRT == eActionEffectuee ) then
            do
                self.eValidationMRT = eActionEnCours
                                do
                    DEC_MRT_Valide()
                                        self:SendFeedback( eActionEffectuee )
                    Halt( self )
                    do return end

                end

            end
        end

        Activate( self.activations.BEH_Medo_Automate_ControleCreationMission, 1, { 1, } )
self.done_BEH_Medo_Automate_ControleCreationMission = function( self, _, v ) self.eValidationMRT = v[1] end
        Activate( self.activations.BEH_Medo_Automate_ABC_AssignerProtegerPCA, 1, { DEC_Automate_PionPC(), } )
    end,

--[[// *****************************************************************************
]]--[[// MIS_Automate_MRT_ABC_ProtegerPC
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Medo_Automate_ABC_AssignerProtegerPCA"
{
    feedbacks = { { { "done_BEH_Medo_Automate_ABC_AssignerProtegerPCA" }, "BEH_Medo_Automate_ABC_AssignerProtegerPCA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Medo_Automate_ABC_AssignerProtegerPCA, {value} ) end,
    activations =
    {
        { "BEH_Mission_Automate_ABC_AssignerSoutenirA", { "done_BEH_Mission_Automate_ABC_AssignerSoutenirA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.pionPC = self.params[1]
    end,

    activate = function( self )
        local Activate = Activate
        self.mission = self.mission or DEC_GetMission( myself )
        Activate( self.activations.BEH_Mission_Automate_ABC_AssignerSoutenirA, 1, { ePhase_MRT, self._namedParams.pionPC, DEC_Automate_PionPCDeAutomate( self.mission.pc_ ), eEtatEchelon_Premier, } )
    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Automate_MRT_ABC_ProtegerPC = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Medo_Automate_ABC_AssignerProtegerPCA, "BEH_Mission_Automate_ABC_AssignerSoutenirA", nodes.BEH_Mission_Automate_ABC_AssignerSoutenirA }
connections[ #connections + 1 ] = { nodes.MIS_Automate_MRT_ABC_ProtegerPC, "BEH_Medo_Automate_ControleCreationMission", nodes.BEH_Medo_Automate_ControleCreationMission }
connections[ #connections + 1 ] = { nodes.MIS_Automate_MRT_ABC_ProtegerPC, "BEH_Medo_Automate_ABC_AssignerProtegerPCA", nodes.BEH_Medo_Automate_ABC_AssignerProtegerPCA }
