includedFiles = includedFiles or {}
includedFiles["sources/melee/abc/pions/common/missions/ArmerPIA.bms"] = true

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: MIA 04-01-12 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Abc/Pions/Common/Missions/ArmerPIA.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 23/08/05 15:21 $
]]--[[// $Revision: 23 $
]]--[[// $Workfile: ArmerPIA.hal $
]]--[[//
]]--[[// *****************************************************************************
]]
--[[// *****************************************************************************
]]--[[// BEH_Mission_Pion_ABC_ArmerUnPIA
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]node "BEH_Mission_Pion_ABC_ArmerUnPIA"
{
    activations =
    {
        { "BEH_Ordre_Inopine", {} },
        { "BEH_MAJ_Pion_ABC_AgressiviteTir", {} },
        { "ACT_MAJ_EtatPhaseMission", {} },
        { "ACT_Info_Trace", {} },
        { "BEH_Dep_ProgressionVers", {} },
        { "BEH_MOT_DesactiveSauvegarde", {} },
        { "BEH_Pion_ABC_InstallerDispositif", {} },
        { "BEH_Dep_SePosterFaceADirectionDangereuse", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params[1]
        self._namedParams.rPH = self.params[2]
        self._namedParams.eNiveauIdentificationEni = self.params[3]
    end,

    activate = function( self )
        self.eEtat = self.eEtat or eActionEnCours
        self.ePhaseMission = self.ePhaseMission or ePreparerMission
        self.eEtatOrdreFinMission = self.eEtatOrdreFinMission or eActionEnCours
        Activate( self.activations.BEH_Ordre_Inopine, 1, setmetatable( {}, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eEtatOrdreFinMission = v else rawset( t, k, v ) end end } ) )
        if( self.eEtatOrdreFinMission == eActionHalt ) then
            do
                self.ePhaseMission = eFinMission
                self.eEtat = eActionEnCours
                self.eEtatOrdreFinMission = eActionEnCours
            end
--[[//-----------------------------------------------------------------------------
]]--[[// Pion detruit
]]--[[//-----------------------------------------------------------------------------
]]        end

        if( F_Pion_GeteEtatDestruction( myself ) ~= eEtatDestruction_None ) then
            self.params.__returnValue = eActionEffectuee
            Halt()
        end

        --[[//-----------------------------------------------------------------------------
]]--[[// Agressivite
]]--[[//-----------------------------------------------------------------------------
]]Activate( self.activations.BEH_MAJ_Pion_ABC_AgressiviteTir, 1, { self._namedParams.rPH, } )
        --[[//-----------------------------------------------------------------------------
]]--[[// Ambiance
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            F_Pion_SeteEtatAmbiance( myself, eEtatAmbiance_Vitesse )
        end

         do
            local switch_1 = self.ePhaseMission
            local cases_switch_1 = {}
                if switch_1 == ePreparerMission then
                    --[[// 1) Preparation de la mission
]]Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_DebutMission, } )
                    Activate( self.activations.ACT_Info_Trace, 1, { "Arming friend or foe identification point mission begining", } )
                    self.ePhaseMission = eProgresser
                    
                --[[// 2) Progression tactique
]]                cases_switch_1[1] = true
elseif switch_1 == eProgresser then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_ProgressionVersLocalisation, } )
                    if( self.eEtat == eActionEffectuee ) then
                        do
                            self.eEtat = eActionEnCours
                                                        do
                                self.ePhaseMission = eSurveiller
                                                                return

                            end

                        end
--[[// force de 1.
]]                    end

                    Activate( self.activations.BEH_Dep_ProgressionVers, 1, setmetatable( { self._namedParams.mission.pia_, eProgressionDefaut, eTypeItiMouvement, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eEtat = v else rawset( t, k, v ) end end } ) )
                    
                --[[// 5) Qd prêt pour armer le PIA --> commencer réellement la mission
]]elseif switch_1 == eSurveiller then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_ArriveSurLocalisation, } )
                    Activate( self.activations.BEH_MOT_DesactiveSauvegarde, 1, {} )
                    Activate( self.activations.BEH_Pion_ABC_InstallerDispositif, 1, {} )
                    Activate( self.activations.BEH_Dep_SePosterFaceADirectionDangereuse, 1, {} )
                    
                --[[// 4) Fin de la mission de reconnaissance SUR ORDRE
]]                cases_switch_1[3] = true
elseif switch_1 == eFinMission then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_FinMission, } )
                    Activate( self.activations.BEH_Dep_SePosterFaceADirectionDangereuse, 1, {} )
                    
                                cases_switch_1[4] = true

                else
                                end
            end

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_ArmerUnPIA, "BEH_Ordre_Inopine", nodes.BEH_Ordre_Inopine }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_ArmerUnPIA, "BEH_MAJ_Pion_ABC_AgressiviteTir", nodes.BEH_MAJ_Pion_ABC_AgressiviteTir }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_ArmerUnPIA, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_ArmerUnPIA, "ACT_Info_Trace", nodes.ACT_Info_Trace }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_ArmerUnPIA, "BEH_Dep_ProgressionVers", nodes.BEH_Dep_ProgressionVers }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_ArmerUnPIA, "BEH_MOT_DesactiveSauvegarde", nodes.BEH_MOT_DesactiveSauvegarde }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_ArmerUnPIA, "BEH_Pion_ABC_InstallerDispositif", nodes.BEH_Pion_ABC_InstallerDispositif }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_ArmerUnPIA, "BEH_Dep_SePosterFaceADirectionDangereuse", nodes.BEH_Dep_SePosterFaceADirectionDangereuse }
