includedFiles = includedFiles or {}
includedFiles["sources/melee/inf/automates/section te/missions/harceler/Harceler CDT.bms"] = true

local emptyTable = emptyTable

--[[// *****************************************************************************
]]--[[// $Created: JCR 03-07-29 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Inf/Automates/Section TE/Missions/Harceler/Harceler CDT.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 26/08/05 17:57 $
]]--[[// $Revision: 23 $
]]--[[// $Workfile: Harceler CDT.hal $
]]--[[// *****************************************************************************
]]node "MIS_Automate_CDT_INF_Harceler"
{
    feedbacks = { { { "done_MIS_Automate_CDT_INF_Harceler" }, "MIS_Automate_CDT_INF_Harceler" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_MIS_Automate_CDT_INF_Harceler, {value} ) end,
    activations =
    {
        { "BEH_Conduite_Automate_INF_Defaut", { "done_BEH_Conduite_Automate_INF_Defaut" } },
        { "BEH_Conduite_Automate_INF_Harceler", { "done_BEH_Conduite_Automate_INF_Harceler" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        local Activate = Activate
                self.eActionMission = self.eActionMission or eActionEnCours
        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                DEC_SetMission( myself, self._namedParams.mission )
            end
--[[// Coordination lors de la mise en place du dispositif dans les fuseaux
]]--[[/* MIA ADA //start behavior BEH_Conduite_Automate_GererFuseau();*/]]--[[// Conduite des pions au niveau section
]]--[[//-----------------------------------------------------------------------------		
]]        end

        if( self.eActionMission == eActionEffectuee ) then
            do
                self.eActionMission = eActionEnCours
                                do
                                        self:SendFeedback( eActionEffectuee )
                    Halt( self )
                    do return end

                end

            end
        end

        Activate( self.activations.BEH_Conduite_Automate_INF_Defaut, 1, { false, } )
self.done_BEH_Conduite_Automate_INF_Defaut = function( self, _, v ) self.eActionMission = v[1] end
        Activate( self.activations.BEH_Conduite_Automate_INF_Harceler, 1, emptyTable )
    end,

    destroy = function( self )
            end,

}

node "BEH_Conduite_Automate_INF_Harceler"
{
    feedbacks = { { { "done_BEH_Conduite_Automate_INF_Harceler" }, "BEH_Conduite_Automate_INF_Harceler" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Conduite_Automate_INF_Harceler, {value} ) end,
    activations =
    {
        { "BEH_Situation_Automate_INF_Harceler_GestionSituation", { "done_BEH_Situation_Automate_INF_Harceler_GestionSituation" } },
        { "BEH_Dispositif_Automate_INF_GererLesPionsDetruits", { "done_BEH_Dispositif_Automate_INF_GererLesPionsDetruits" } },
        { "BEH_Dispositif_Automate_INF_GererReleve", { "done_BEH_Dispositif_Automate_INF_GererReleve" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
                self.mission = self.mission or DEC_GetMission( myself )
        if( ModuleBegins() ) then
            do
            end
--[[//---------------------------------------------------------------------
]]--[[// Gestion des RC recus 		
]]--[[//---------------------------------------------------------------------
]]        end

        Activate( self.activations.BEH_Situation_Automate_INF_Harceler_GestionSituation, 1, emptyTable )
        --[[// ---------------------------------------------------------------------	
]]--[[// 
]]--[[//---------------------------------------------------------------------
]]Activate( self.activations.BEH_Dispositif_Automate_INF_GererLesPionsDetruits, 1, { true, } )
        Activate( self.activations.BEH_Dispositif_Automate_INF_GererReleve, 1, emptyTable )
    end,

    destroy = function( self )
            end,

}

node "BEH_Situation_Automate_INF_Harceler_GestionSituation"
{
    feedbacks = { { { "done_BEH_Situation_Automate_INF_Harceler_GestionSituation" }, "BEH_Situation_Automate_INF_Harceler_GestionSituation" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Situation_Automate_INF_Harceler_GestionSituation, {value} ) end,
    activations =
    {
        { "BEH_Situation_Automate_INF_FinDeMission_Sur", { "done_BEH_Situation_Automate_INF_FinDeMission_Sur" } },
        { "BEH_Mission_Automate_ABC_AssignerSoutenirA", { "done_BEH_Mission_Automate_ABC_AssignerSoutenirA" } },
        { "BEH_Mission_Automate_INF_AssignerAppuyerA", { "done_BEH_Mission_Automate_INF_AssignerAppuyerA" } },
        { "BEH_Conduite_Automate_INF_Harceler_FaireRejoindrePositionRegroupement", { "done_BEH_Conduite_Automate_INF_Harceler_FaireRejoindrePositionRegroupement" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        local selEnTete = S_ObtenirPionsDe( eEtatEchelon_Premier, eEtatDestruction_None )
        for _,x in pairs( DEC_Automate_PionsSansPC() or emptyTable ) do
        local _continue = true
do
                local x_pion = x
                 do
                    local _continue = true
--[[// Situation Mission
]]--[[// --------------------------------------------------------------------
]]--[[// On reassigne la mission Appuye
]]                    local switch_1 = F_Pion_GeteEtatPhaseMission( x_pion )
                        if switch_1 == eEtatPhaseMission_FinMission then
                             do
                                local _continue = true
                                local switch_2 = F_Pion_GetmissionPrecedente( x_pion )
                                    if switch_2 == "T_Mission_Pion_INF_Harceler"
                                    or switch_2 == "T_Mission_Pion_INF_ControlerSecteur" then
                                        StartActivateOverride( self, self.activations.BEH_Situation_Automate_INF_FinDeMission_Sur, 1, { x_pion, } )
                                        _continue = false
                                    elseif switch_2 == "T_Mission_Pion_INF_DetruireEmbuscade"
                                    or switch_2 == "T_Mission_Pion_INF_Reduire" then
                                        if( #( selEnTete ) <= 0 ) then
                                            do return end
                                        end

                                        local pPion = DIA_GetAt( selEnTete, 0 )
                                         do
                                            local _continue = true
                                            local switch_3 = x_pion:GetType()
                                                if switch_3 == "Peloton_AMX"
                                                or switch_3 == "Peloton_XL" then
                                                    Activate( self.activations.BEH_Mission_Automate_ABC_AssignerSoutenirA, 1, { ePhase_CDT, x_pion, pPion, eEtatEchelon_Second, } )
                                                    _continue = false
                                                elseif switch_3 == "SectionInfanterie"
                                                or switch_3 == "SectionInfanterie_MILAN"
                                                or switch_3 == "SectionInfanterie_HOT"
                                                or switch_3 == "SectionInfanterie_Appui"
                                                or switch_3 == "GroupeInfanterie_Mortier" then
                                                    Activate( self.activations.BEH_Mission_Automate_INF_AssignerAppuyerA, 1, { ePhase_CDT, x_pion, pPion, eEtatEchelon_Second, } )
                                                    _continue = false
                                                                                                end
                                            end

                                        _continue = false
                                                                        end
                                end

                            F_Pion_SeteEtatEchelon( x_pion, eEtatEchelon_Second )
                            _continue = false
                        elseif switch_1 == eEtatPhaseMission_ArriveSurLocalisation then
                            if( S_Misc_EstMissionAffectee_Pion( x_pion, "T_Mission_Pion_INF_Harceler" ) ) then
                                StartActivateOverride( self, self.activations.BEH_Conduite_Automate_INF_Harceler_FaireRejoindrePositionRegroupement, 1, emptyTable )
                            end

                            _continue = false
                                                end
                    end
--[[// Situation Info
]]--[[// --------------------------------------------------------------------
]]
            end

        end

    end,

}

node "BEH_Conduite_Automate_INF_Harceler_FaireRejoindrePositionRegroupement"
{
    feedbacks = { { { "done_BEH_Conduite_Automate_INF_Harceler_FaireRejoindrePositionRegroupement" }, "BEH_Conduite_Automate_INF_Harceler_FaireRejoindrePositionRegroupement" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Conduite_Automate_INF_Harceler_FaireRejoindrePositionRegroupement, {value} ) end,
    activations =
    {
        { "BEH_Mission_Automate_AssignerStationnerA", { "done_BEH_Mission_Automate_AssignerStationnerA" } },
        { "BEH_Mission_Automate_AssignerFaireMouvementA", { "done_BEH_Mission_Automate_AssignerFaireMouvementA" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        self.mission = self.mission or DEC_GetMission( myself )
        self.ptRegroupement = self.ptRegroupement or S_Geometrie_BarycentreZone( self.mission.pointRegroupement_ )
        if( ModuleBegins() ) then
            do
                Activate( self.activations.BEH_Mission_Automate_AssignerStationnerA, 1, { ePhase_CDT, DEC_Automate_PionPC(), self.ptRegroupement, } )
                for _,x_pion in pairs( S_ObtenirTousPionsDe( eEtatEchelon_Second ) or emptyTable ) do
                local _continue = true
                    Activate( self.activations.BEH_Mission_Automate_AssignerFaireMouvementA, 1, { ePhase_CDT, x_pion, self.ptRegroupement, eEtatEchelon_Second, } )

                end

            end
        end

    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Automate_CDT_INF_Harceler = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_Harceler, "BEH_Situation_Automate_INF_Harceler_GestionSituation", nodes.BEH_Situation_Automate_INF_Harceler_GestionSituation }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_Harceler, "BEH_Dispositif_Automate_INF_GererLesPionsDetruits", nodes.BEH_Dispositif_Automate_INF_GererLesPionsDetruits }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_Harceler, "BEH_Dispositif_Automate_INF_GererReleve", nodes.BEH_Dispositif_Automate_INF_GererReleve }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_Harceler_FaireRejoindrePositionRegroupement, "BEH_Mission_Automate_AssignerStationnerA", nodes.BEH_Mission_Automate_AssignerStationnerA }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_Harceler_FaireRejoindrePositionRegroupement, "BEH_Mission_Automate_AssignerFaireMouvementA", nodes.BEH_Mission_Automate_AssignerFaireMouvementA }
connections[ #connections + 1 ] = { nodes.BEH_Situation_Automate_INF_Harceler_GestionSituation, "BEH_Situation_Automate_INF_FinDeMission_Sur", nodes.BEH_Situation_Automate_INF_FinDeMission_Sur }
connections[ #connections + 1 ] = { nodes.BEH_Situation_Automate_INF_Harceler_GestionSituation, "BEH_Mission_Automate_ABC_AssignerSoutenirA", nodes.BEH_Mission_Automate_ABC_AssignerSoutenirA }
connections[ #connections + 1 ] = { nodes.BEH_Situation_Automate_INF_Harceler_GestionSituation, "BEH_Mission_Automate_INF_AssignerAppuyerA", nodes.BEH_Mission_Automate_INF_AssignerAppuyerA }
connections[ #connections + 1 ] = { nodes.BEH_Situation_Automate_INF_Harceler_GestionSituation, "BEH_Conduite_Automate_INF_Harceler_FaireRejoindrePositionRegroupement", nodes.BEH_Conduite_Automate_INF_Harceler_FaireRejoindrePositionRegroupement }
connections[ #connections + 1 ] = { nodes.MIS_Automate_CDT_INF_Harceler, "BEH_Conduite_Automate_INF_Defaut", nodes.BEH_Conduite_Automate_INF_Defaut }
connections[ #connections + 1 ] = { nodes.MIS_Automate_CDT_INF_Harceler, "BEH_Conduite_Automate_INF_Harceler", nodes.BEH_Conduite_Automate_INF_Harceler }
