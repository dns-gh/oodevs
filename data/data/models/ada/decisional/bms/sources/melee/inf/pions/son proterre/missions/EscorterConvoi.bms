includedFiles = includedFiles or {}
includedFiles["sources/melee/inf/pions/son proterre/missions/EscorterConvoi.bms"] = true

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JDY 02-11-06 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Inf/Pions/Son Vab/Missions/EscorterConvoi.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 19/09/05 10:25 $
]]--[[// $Revision: 17 $
]]--[[// $Workfile: EscorterConvoi.hal $
]]--[[//
]]--[[// *****************************************************************************
]]
node "MIS_Pion_INF_EscorterUnite"
{
    activations =
    {
        { "BEH_Misc_Pion_DefinirTypeMission", {} },
        { "BEH_MAJ_AgressiviteMission", {} },
        { "BEH_Mission_Pion_VAB_EscorterUnConvoi", {} },
        { "ACT_MAJ_EtatPhaseMission", {} },
        { "BEH_Poste_Pion_INF_TomberEnGarde", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        self.eCurrentPhase = self.eCurrentPhase or ePreparerMission
        self.ePhase = self.ePhase or eSeMettreEnPlace
        self.eAction = self.eAction or eActionEnCours
        if( ModuleBegins() ) then
            do
                DEC_SetMission( myself, self._namedParams.mission )
                F_Pion_SeteEtatAmbiance( myself, eEtatAmbiance_Vitesse )
                F_Pion_SeteEtatEchelon( myself, eEtatEchelon_Premier )
                --[[// --> Tiens lorsque le rapFor passe de 2.5 a 3.5
]]F_Pion_SetrTenir( myself, 1.5 )
                DEC_Trace( "Mission 'Escorter un convoi' : debut" )
            end
        end

        Activate( self.activations.BEH_Misc_Pion_DefinirTypeMission, 1, { eTypeContact_Defensif, } )
        Activate( self.activations.BEH_MAJ_AgressiviteMission, 1, { eIdentifie, M_TIR_PH_MISSION_MANOEUVRE(), } )
         do
            local switch_1 = self.ePhase
            local cases_switch_1 = {}
                if switch_1 == eSeMettreEnPlace then
                    --[[// eDefendre
]]if( self.eCurrentPhase == eFinMission ) then
                        do
                            self.ePhase = eFinMission
                                                        return

                        end
                    end

                    Activate( self.activations.BEH_Mission_Pion_VAB_EscorterUnConvoi, GetMotivation( "MOT_Mission" ), setmetatable( {}, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eCurrentPhase = v else rawset( t, k, v ) end end } ) )
                    
                                cases_switch_1[1] = true
elseif switch_1 == eFinMission then
                    if( self.eAction == eActionEffectuee ) then
                        do
                            self.eAction = eActionEnCours
                                                        do
                                --[[//-----------------------------------------------------------------------------
]]--[[// On rend compte de la mission
]]--[[//-----------------------------------------------------------------------------
]]DEC_Trace( "Mission 'Escorter un convoi' : fin" )
                                DEC_FinMission()
                                                                self.params.__returnValue = eActionEffectuee
                                Halt( self )
                                do return end

                            end

                        end
                    end

                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_FinMission, } )
                    Activate( self.activations.BEH_Poste_Pion_INF_TomberEnGarde, 1, setmetatable( { true, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eAction = v else rawset( t, k, v ) end end } ) )
                    
                                cases_switch_1[2] = true

                else
                                end
            end

    end,

}

node "BEH_Mission_Pion_VAB_EscorterUnConvoi"
{
    activations =
    {
        { "BEH_Lima_Pion_RejoindreFuseau_EnAttente", {} },
        { "ACT_Misc_Pion_Melee_Escorter", {} },
        { "BEH_Mot_Pion_Embarquer", {} },
        { "ACT_MAJ_EtatPhaseMission", {} },
        { "ACT_Dep_ModulationVitesse", {} },
        { "BEH_Dep_Suivre", {} },
        { "ACT_Info_Trace", {} },
        { "BEH_Dep_Progresser", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        self.mission = self.mission or DEC_GetMission( myself )
        self.pionConvoi = self.pionConvoi or self.mission.uniteAEscorter_
        self.eAction = self.eAction or eActionEnCours
        self.ePhase = self.ePhase or eEscorter
        if( ModuleBegins() ) then
            do
                StartActivate( self.activations.BEH_Lima_Pion_RejoindreFuseau_EnAttente, 1.1, {} )
            end
        end

        Activate( self.activations.ACT_Misc_Pion_Melee_Escorter, 1, { self.pionConvoi, } )
        Activate( self.activations.BEH_Mot_Pion_Embarquer, 1, {} )
         do
            local switch_1 = self.ePhase
            local cases_switch_1 = {}
                if switch_1 == ePreparerMission then
                    --[[// Aller au plus vite			
]]Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1.1, { eEtatPhaseMission_DebutMission, } )
                --[[// Progression tactique
]]                cases_switch_1[1] = true
                end
                if cases_switch_1[1] or switch_1 == eRejoindre then
                    if( F_Pion_GeteEtatAmbiance( myself ) == eEtatAmbiance_Vitesse ) then
                        Activate( self.activations.ACT_Dep_ModulationVitesse, 2, { 1, } )
                    end

                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_RejointUnite, } )
                    --[[// Escvorter l'unite à bonne distance
]]if( S_Geometrie_EstProchePosition( DEC_Agent_Position(), self.pionConvoi:DEC_Agent_Position(), 200 ) ) then
                        do
                            self.ePhase = eEscorter
                                                        return

                        end
--[[//-----------------------------------------------------------------------------
]]--[[// Rejoindre unite
]]--[[//-----------------------------------------------------------------------------      
]]                    end

                    Activate( self.activations.BEH_Dep_Suivre, 1, { self.pionConvoi, 50, } )
                    
                                cases_switch_1[2] = true
elseif switch_1 == eEscorter then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_EscorteUnite, } )
                    Activate( self.activations.ACT_Info_Trace, 1, { "** Escorte de l'unité **", } )
                    --[[// Objectif de l'unité escorté                
]]if( ( F_Pion_GetitMvt( self.pionConvoi ) == 0 or F_Pion_GetitMvt( self.pionConvoi ) == nil ) ) then
                        do
                            Activate( self.activations.ACT_Info_Trace, 1, { "**** L'unite escorter doit avoir un objectif **** ", } )
                                                        return

                        end
                    end

                    if( self.eAction == eActionEffectuee ) then
                        do
                            self.eAction = eActionEnCours
                                                        self.params.__returnValue = eFinMission
                            Halt( self )
                            do return end

                        end
                    end

                    Activate( self.activations.BEH_Dep_Progresser, 1, setmetatable( { F_Pion_GetitMvt( self.pionConvoi ), eProgressionReco, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eAction = v else rawset( t, k, v ) end end } ) )
                    
                                cases_switch_1[3] = true
                end
            end

    end,

}

node "BEH_Dep_Pion_INF_SeCoordonnerSurEscorte"
{
    activations =
    {
        { "ACT_Dep_SePoster", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.pionAmi = self.params[1]
        self._namedParams.rDistMax = self.params[2]
        self._namedParams.rDistMin = self.params[3]
    end,

    activate = function( self )
        self.bActiveAttente = self.bActiveAttente or false
        self.bActiveRelai = self.bActiveRelai or false
        if( not S_Geometrie_EstProchePosition( self._namedParams.pionAmi:DEC_Agent_Position(), DEC_Agent_Position(), self._namedParams.rDistMax + self._namedParams.rDistMin ) ) then
            return
        end

        if( S_Geometrie_EstProchePosition( self._namedParams.pionAmi:DEC_Agent_Position(), DEC_Agent_Position(), self._namedParams.rDistMin ) ) then
            Activate( self.activations.ACT_Dep_SePoster, 1, {} )
        end

    end,

}

node "BEH_Dep_Pion_INF_Escorter"
{
    activations =
    {
        { "BEH_Dep_ProgressionVers", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.pionAmi = self.params[1]
    end,

    activate = function( self )
                self.eAction = self.eAction or eActionEnCours
        self.ptEnAvance = self.ptEnAvance or self._namedParams.pionAmi:DEC_Itineraire_ExtrapolerPosition( 2, true )
        if( self.eAction ~= eActionEnCours ) then
            self.params.__returnValue = eActionHalt
            Halt( self )
            do return end
        end

        Activate( self.activations.BEH_Dep_ProgressionVers, S_Force_INF_DistancePt_PourPion( self._namedParams.pionAmi, self.ptEnAvance ), setmetatable( { self.ptEnAvance, eProgressionReco, eTypeItiReconnaissance, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eAction = v else rawset( t, k, v ) end end } ) )
    end,

    destroy = function( self )
            end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Pion_INF_EscorterUnite = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Dep_Pion_INF_Escorter, "BEH_Dep_ProgressionVers", nodes.BEH_Dep_ProgressionVers }
connections[ #connections + 1 ] = { nodes.BEH_Dep_Pion_INF_SeCoordonnerSurEscorte, "ACT_Dep_SePoster", nodes.ACT_Dep_SePoster }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_VAB_EscorterUnConvoi, "BEH_Lima_Pion_RejoindreFuseau_EnAttente", nodes.BEH_Lima_Pion_RejoindreFuseau_EnAttente }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_VAB_EscorterUnConvoi, "ACT_Misc_Pion_Melee_Escorter", nodes.ACT_Misc_Pion_Melee_Escorter }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_VAB_EscorterUnConvoi, "BEH_Mot_Pion_Embarquer", nodes.BEH_Mot_Pion_Embarquer }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_VAB_EscorterUnConvoi, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_VAB_EscorterUnConvoi, "ACT_Dep_ModulationVitesse", nodes.ACT_Dep_ModulationVitesse }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_VAB_EscorterUnConvoi, "BEH_Dep_Suivre", nodes.BEH_Dep_Suivre }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_VAB_EscorterUnConvoi, "ACT_Info_Trace", nodes.ACT_Info_Trace }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_VAB_EscorterUnConvoi, "BEH_Dep_Progresser", nodes.BEH_Dep_Progresser }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_EscorterUnite, "BEH_Misc_Pion_DefinirTypeMission", nodes.BEH_Misc_Pion_DefinirTypeMission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_EscorterUnite, "BEH_MAJ_AgressiviteMission", nodes.BEH_MAJ_AgressiviteMission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_EscorterUnite, "BEH_Mission_Pion_VAB_EscorterUnConvoi", nodes.BEH_Mission_Pion_VAB_EscorterUnConvoi }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_EscorterUnite, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_EscorterUnite, "BEH_Poste_Pion_INF_TomberEnGarde", nodes.BEH_Poste_Pion_INF_TomberEnGarde }
