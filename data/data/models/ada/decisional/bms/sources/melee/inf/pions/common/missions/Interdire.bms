includedFiles = includedFiles or {}
includedFiles["sources/melee/inf/pions/common/missions/Interdire.bms"] = true

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JDY 02-11-06 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Inf/Pions/Common/Missions/Interdire.hal $
]]--[[// $Author: Jcr $
]]--[[// $Modtime: 23/09/05 17:39 $
]]--[[// $Revision: 11 $
]]--[[// $Workfile: Interdire.hal $
]]--[[//
]]--[[// *****************************************************************************
]]

--[[//=============================================================================
]]--[[//							Squelette de la mission
]]--[[//=============================================================================
]]node "BEH_Mission_Pion_INF_Interdire"
{
    activations =
    {
        { "BEH_Lima_Pion_RejoindreFuseau_EnAttente", { "onHalt" } },
        { "BEH_Mot_Pion_Embarquer", { "onHalt" } },
        { "BEH_Dep_Pion_INF_MiseEnPlace_Mission", { "onHalt" } },
        { "ACT_RC", { "onHalt" } },
        { "ACT_MAJ_EtatPhaseMission", { "onHalt" } },
        { "BEH_Dispositif_Pion_VAB_InstallationDefensive", { "onHalt" } },
        { "ACT_Misc_Pion_DelaiInstallation", { "onHalt" } },
        { "BEH_Eni_Pion_INF_Tenir", { "onHalt" } },
    },

    onHalt = OnHalt,

    feedbacks = { { { "onHalt" }, "BEH_Mission_Pion_INF_Interdire" } },

    create = function( self )
    end,

    activate = ActivateWithStart,

    internalactivate = function( self )
        self.mission = self.mission or DEC_GetMission( myself )
        self.ePhase = self.ePhase or eSeMettreEnPlace
        self.eAction = self.eAction or eActionEnCours
        self.eActionInterdire = self.eActionInterdire or eActionEnCours
        if( ModuleBegins() ) then
            do
                --[[// situation tactique
]]DEC_Trace( "Mission 'Interdire' : debut" )
                StartInstance( self, self.activations.BEH_Lima_Pion_RejoindreFuseau_EnAttente, 1.1, {} )
            end
        end

         do
            local switch_1 = self.ePhase
            local cases_switch_1 = {}
                if switch_1 == eSeMettreEnPlace then
                    --[[// On va se mettre en position en restant sur nos garde
]]if( S_Tir_EstAPortee_DebarquePt( self.mission.pointAInterdire_ ) ) then
                        self.eAction = eActionEffectuee
                    end

                    if( self.eAction == eActionEffectuee ) then
                        do
                            self.eAction = eActionEnCours
                                                        do
                                self.ePhase = eInstallerDispositif
                                                                self.params.__returnValue = self.ePhase
                                return

                            end

                        end
                    end

                    Activate( self.activations.BEH_Mot_Pion_Embarquer, 1, {} )
                    --[[// Rejoins une position d'observation de la position a Barrer
]]Activate( self.activations.BEH_Dep_Pion_INF_MiseEnPlace_Mission, 1, setmetatable( { M_TEMPS_PREPARATION_MISSION(), self.mission.pointAInterdire_, false, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eAction = v else rawset( t, k, v ) end end } ) )
                    
                --[[//  On verifie les alentours, et on attend de debusquer un ennemi
]]                cases_switch_1[1] = true
elseif switch_1 == eInstallerDispositif then
                    --[[// Si on est dans cette phase et que la fin de mission arrive : pas d'ennemis
]]Activate( self.activations.ACT_RC, 1, { eRC_ArriveSurPosition, } )
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_InstallationDispositif, } )
                    --[[// action ACT_MAJ_EtatPhaseMission( eEtatPhaseMission_ArriveSurLocalisation );
]]--[[// On surveille la zone en meme temps que l'on prepare
]]--[[// On fait d'abord debarquer				
]]StartInstance( self, self.activations.BEH_Dispositif_Pion_VAB_InstallationDefensive, 1, { self.mission.pointAInterdire_, self.mission.preparerTerrain_, } )
                    --[[// Prepare la mission d'interdiction
]]--[[// action ACT_RC( eRC_FinInstallation );
]]if( self.eAction == eActionEffectuee ) then
                        do
                            self.eAction = eActionEnCours
                                                        do
                                self.ePhase = eSurveiller
                                                                self.params.__returnValue = self.ePhase
                                return

                            end

                        end
                    end

                    Activate( self.activations.ACT_Misc_Pion_DelaiInstallation, 1, setmetatable( { eNiveauInstallation_PosteAmenage, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eAction = v else rawset( t, k, v ) end end } ) )
                    
                --[[//  On se met en position de tir
]]                cases_switch_1[2] = true
elseif switch_1 == eSurveiller then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_EnSurveillance, } )
                    Activate( self.activations.BEH_Eni_Pion_INF_Tenir, 1, { 1.5, } )
                    
                                cases_switch_1[3] = true

                else
                                end
            end

                self.params.__returnValue = self.ePhase
        return

    end,

--[[//=============================================================================
]]--[[// Surveillance de la zone a interdire.
]]--[[// Detail:
]]--[[//		On essaie de detruire les ennemis qui rentrent dans la zone
]]--[[//		Sinon, on se met en formation defensive.
]]--[[//		On garde la zone jusqua T2
]]--[[//=============================================================================
]]}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_Interdire, "BEH_Lima_Pion_RejoindreFuseau_EnAttente", nodes.BEH_Lima_Pion_RejoindreFuseau_EnAttente }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_Interdire, "BEH_Mot_Pion_Embarquer", nodes.BEH_Mot_Pion_Embarquer }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_Interdire, "BEH_Dep_Pion_INF_MiseEnPlace_Mission", nodes.BEH_Dep_Pion_INF_MiseEnPlace_Mission }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_Interdire, "ACT_RC", nodes.ACT_RC }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_Interdire, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_Interdire, "BEH_Dispositif_Pion_VAB_InstallationDefensive", nodes.BEH_Dispositif_Pion_VAB_InstallationDefensive }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_Interdire, "ACT_Misc_Pion_DelaiInstallation", nodes.ACT_Misc_Pion_DelaiInstallation }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_Interdire, "BEH_Eni_Pion_INF_Tenir", nodes.BEH_Eni_Pion_INF_Tenir }
