includedFiles = includedFiles or {}
includedFiles["sources/melee/abc/pions/pel xl/missions/Escorter.bms"] = true

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: MIA 04-04-26 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Abc/Pions/Pat EI/Missions/Escorter.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 13/05/05 16:31 $
]]--[[// $Revision: 6 $
]]--[[// $Workfile: Escorter.hal $
]]--[[//
]]--[[// *****************************************************************************
]]
--[[// *****************************************************************************
]]--[[// MIS_Pion_ABC_EscorterUnite
]]--[[// 
]]--[[// Commentaires: 
]]--[[//
]]--[[// *****************************************************************************
]]node "MIS_Pion_ABC_EscorterUnite"
{
    feedbacks = { { { "done_MIS_Pion_ABC_EscorterUnite" }, "MIS_Pion_ABC_EscorterUnite" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_MIS_Pion_ABC_EscorterUnite, {value} ) end,
    activations =
    {
        { "BEH_Mission_Pion_ABC_Escorter", { "done_BEH_Mission_Pion_ABC_Escorter" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        local Activate = Activate
        self.eEtat = self.eEtat or nil
        --[[//-----------------------------------------------------------------------------
]]--[[// Terminaison
]]--[[//-----------------------------------------------------------------------------
]]if( self.eEtat == eActionImpossible ) then
            self:SendFeedback( eActionImpossible )
            Halt( self )
            do return end
        end

        if( self.eEtat == eActionEffectuee ) then
            self:SendFeedback( eActionEffectuee )
            Halt( self )
            do return end
        end

        --[[//-----------------------------------------------------------------------------
]]--[[// Comportement de la mission
]]--[[//-----------------------------------------------------------------------------
]]Activate( self.activations.BEH_Mission_Pion_ABC_Escorter, 1, { self._namedParams.mission.uniteAEscorter_, M_MODELE_PION_ABC_ESCORTER_PH(), M_MODELE_PION_ABC_ESCORTER_ID(), } )
self.done_BEH_Mission_Pion_ABC_Escorter = function( self, _, v ) self.eEtat = v[1] end
    end,

--[[// *****************************************************************************
]]--[[// MIS_Pion_ABC_EscorterUnites
]]--[[// 
]]--[[// Commentaires: T_Automate automateAEscorter_
]]--[[//
]]--[[// *****************************************************************************
]]}

node "MIS_Pion_ABC_EscorterUnites"
{
    feedbacks = { { { "done_MIS_Pion_ABC_EscorterUnites" }, "MIS_Pion_ABC_EscorterUnites" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_MIS_Pion_ABC_EscorterUnites, {value} ) end,
    activations =
    {
        { "BEH_Mission_Pion_ABC_EscorterAutomate", { "done_BEH_Mission_Pion_ABC_EscorterAutomate" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        local Activate = Activate
        self.eEtat = self.eEtat or nil
        --[[//-----------------------------------------------------------------------------
]]--[[// Terminaison
]]--[[//-----------------------------------------------------------------------------
]]if( self.eEtat == eActionImpossible ) then
            self:SendFeedback( eActionImpossible )
            Halt( self )
            do return end
        end

        if( self.eEtat == eActionEffectuee ) then
            self:SendFeedback( eActionEffectuee )
            Halt( self )
            do return end
        end

        --[[//-----------------------------------------------------------------------------
]]--[[// Comportement de la mission
]]--[[//-----------------------------------------------------------------------------
]]Activate( self.activations.BEH_Mission_Pion_ABC_EscorterAutomate, 1, { self._namedParams.mission.automateAEscorter_, M_MODELE_PION_ABC_ESCORTER_PH(), M_MODELE_PION_ABC_ESCORTER_ID(), } )
self.done_BEH_Mission_Pion_ABC_EscorterAutomate = function( self, _, v ) self.eEtat = v[1] end
    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Pion_ABC_EscorterUnite = { "mission" }
eventmanager_plugin.MIS_Pion_ABC_EscorterUnites = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.MIS_Pion_ABC_EscorterUnite, "BEH_Mission_Pion_ABC_Escorter", nodes.BEH_Mission_Pion_ABC_Escorter }
connections[ #connections + 1 ] = { nodes.MIS_Pion_ABC_EscorterUnites, "BEH_Mission_Pion_ABC_EscorterAutomate", nodes.BEH_Mission_Pion_ABC_EscorterAutomate }
