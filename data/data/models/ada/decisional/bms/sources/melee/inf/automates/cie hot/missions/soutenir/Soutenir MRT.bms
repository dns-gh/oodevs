includedFiles = includedFiles or {}
includedFiles["sources/melee/inf/automates/cie hot/missions/soutenir/Soutenir MRT.bms"] = true

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JCR 03-07-29 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Inf/Automates/Cie Hot/Missions/Soutenir/Soutenir MRT.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 20/06/05 11:05 $
]]--[[// $Revision: 5 $
]]--[[// $Workfile: Soutenir MRT.hal $
]]--[[//
]]--[[// *****************************************************************************
]]
node "MIS_Automate_MRT_INF_Soutenir"
{
    activations =
    {
        { "BEH_Medo_Automate_INF_PreparerMission_Manoeuvre", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
                self.eCreationMRT = self.eCreationMRT or eActionEnCours
        self.rN_Position = self.rN_Position or 0
        local selPions = DEC_Automate_PionsSansPC()
        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                DEC_SetMission( myself, self._namedParams.mission )
                DEC_Trace( "MIS_Automate_MRT_INF_Appuyer : debut MRT" )
                self.rN_Position = #( S_ObtenirTousPionsPour( self._namedParams.mission.compagnie_, eEtatEchelon_Premier ) )
            end
--[[//-----------------------------------------------------------------------------
]]--[[// MRT creee
]]--[[//-----------------------------------------------------------------------------
]]        end

        if( self.eCreationMRT == eActionImpossible ) then
            do
                                do
                    DEC_RC( eRC_MissionImpossible )
                end

                                self.params.__returnValue = eActionImpossible
                self.deselect = function() end
                self.destroy = function() end
                Halt()

            end
        end

        if( self.eCreationMRT == eActionEffectuee ) then
            do
                self.eCreationMRT = eActionEnCours
                                do
                    DEC_Trace( "T_Mission_Automate_INF_Appuyer : fin MRT" )
                    DEC_MRT_Valide()
                                        self.params.__returnValue = eActionEffectuee
                    self.deselect = function() end
                    self.destroy = function() end
                    Halt()

                end

            end
--[[//-----------------------------------------------------------------------------
]]--[[// Modalité d'exécution
]]--[[//-----------------------------------------------------------------------------		
]]        end

        Activate( self.activations.BEH_Medo_Automate_INF_PreparerMission_Manoeuvre, 1, setmetatable( { "T_Mission_Automate_INF_Soutenir", self.rN_Position, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eCreationMRT = v else rawset( t, k, v ) end end } ) )
    end,

    destroy = function( self )
            end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Automate_MRT_INF_Soutenir = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.MIS_Automate_MRT_INF_Soutenir, "BEH_Medo_Automate_INF_PreparerMission_Manoeuvre", nodes.BEH_Medo_Automate_INF_PreparerMission_Manoeuvre }
