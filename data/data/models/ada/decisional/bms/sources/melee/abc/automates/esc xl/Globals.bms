includedFiles = includedFiles or {}
includedFiles["sources/melee/abc/automates/esc xl/Globals.bms"] = true

include "bit.lua"


--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: MIA 02-11-08 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Abc/Automates/Esc Xl/Globals.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 13/05/05 16:31 $
]]--[[// $Revision: 10 $
]]--[[// $Workfile: Globals.hal $
]]--[[//
]]--[[// *****************************************************************************
]]

--[[//-----------------------------------------------------------------------------
]]--[[// fichiers à inclure
]]--[[//-----------------------------------------------------------------------------
]]include "Melee/Abc/Automates/Common/Globals.bms"

include "Melee/Abc/Automates/Esc XL/Parameters.bms"




--[[//=============================================================================
]]--[[// Definition des signatures des callbacks C/C++
]]--[[//=============================================================================
]]--[[//=============================================================================
]]--[[// Fonctions
]]--[[//=============================================================================
]]
--[[//-----------------------------------------------------------------------------
]]--[[// MIS ATTAQUER
]]--[[// Par convention, dans le cas de l'attaque en deux echelons, les deux premiers
]]--[[// pions de la liste attaque, le troisieme soutien
]]--[[//-----------------------------------------------------------------------------
]]--[[// Liste des pions qui attaque
]]--[[// init
]]--[[// pion en soutien dans le cas de l'attaque triangle base avant
]]--[[// Appuyer mvt du Leclerc!
]]--[[//=============================================================================
]]--[[// variables globales
]]--[[//=============================================================================
]]function S_Pions_Attaquant( )
    local _returnValue = {}
    local listePionsAttaquant = {}
    local mission = DEC_GetMission( myself )
    local selPion = DEC_Automate_PionsSansPC()
    for _,x in pairs( selPion or {} ) do
    local _continue = true
do
            local pion = x
            local missionPion = DEC_GetMission( pion )
            if( ( missionPion ~= 0 and missionPion ~= nil ) and missionPion:GetType() == "T_Mission_Pion_ABC_Attaquer" ) then
                DIA_PushBack( listePionsAttaquant, pion )
            end

        end

    end

    _returnValue = listePionsAttaquant
    do return _returnValue end
end

function S_Pions_AppuiSoutien( )
    local _returnValue = {}
    local listePionsEnSoutien = {}
    local selPion = DEC_Automate_PionsSansPC()
    for _,x in pairs( selPion or {} ) do
    local _continue = true
do
            local pion = x
            local mission = DEC_GetMission( pion )
            if( mission ~= nil and ( mission:GetType() == "T_Mission_Pion_ABC_Soutenir" or mission:GetType() == "T_Mission_Pion_ABC_Appuyer" ) ) then
                DIA_PushBack( listePionsEnSoutien, pion )
            end

        end

    end

    _returnValue = listePionsEnSoutien
    do return _returnValue end
end

