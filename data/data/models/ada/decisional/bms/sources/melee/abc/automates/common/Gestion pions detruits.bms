includedFiles = includedFiles or {}
includedFiles["sources/melee/abc/automates/common/Gestion pions detruits.bms"] = true

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: MIA 04-02-24 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Abc/Automates/Common/Gestion pions detruits.hal $
]]--[[// $Author: Mia $
]]--[[// $Modtime: 23/09/05 17:00 $
]]--[[// $Revision: 20 $
]]--[[// $Workfile: Gestion pions detruits.hal $
]]--[[//
]]--[[// *****************************************************************************
]]
--[[/* Gestion pion detruit */]]
--[[// behavior BEH_Dispositif_Automate_ABC_GererPionsDetruits_
]]--[[// behavior BEH_Dispositif_Automate_ABC_AssignerReleve
]]
--[[////////////////////////////////
]]--[[//////////////////////// ** GESTION PIONS DETRUITS **   /////////////////////////
]]--[[////////////////////////////////
]]

--[[// *****************************************************************************
]]--[[// BEH_Dispositif_Automate_ABC_GererPionsDetruits_
]]--[[//
]]--[[// Commentaires: Paramètre: si on veut éventuellement relever l'unité detruite
]]--[[// ATTENTION appelé un tick seulement 
]]--[[//
]]--[[// *****************************************************************************
]]node "BEH_Dispositif_Automate_ABC_GererPionsDetruits_"
{
    activations =
    {
        { "BEH_Dispositif_Automate_ABC_AssignerReleve", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.bAvecReleve = self.params[1]
    end,

    activate = function( self )
        --[[//-----------------------------------------------------------------------------
]]--[[// Pions de PEcl
]]--[[//-----------------------------------------------------------------------------
]]local listePionsPEclDetruits = S_Dispositif_Automate_ABC_ObtenirPionDetruitsDe( eEtatEchelon_Eclairage )
        for _,x in pairs( listePionsPEclDetruits ) do
        local _continue = true
do
                local pionDetruit = x
                DEC_Trace( DEC_GetSzName( pionDetruit ) .. " --> non operationnal" )
                --[[// Echelonnage 
]]--[[// on le fait passer en deuxieme echelon
]]F_Pion_SeteEtatEchelon( pionDetruit, eEtatEchelon_Second )
                F_Pion_SeteEtatSoutien( pionDetruit, eEtatSoutien_aucun )
            end
--[[//-----------------------------------------------------------------------------
]]--[[// Pions de premier echelon
]]--[[//-----------------------------------------------------------------------------
]]
        end

        local listePionsDeSoutien = S_Dispositif_Automate_ABC_ObtenirPionsSoutien()
        local listePionsPEDetruits = S_Dispositif_Automate_ABC_ObtenirPionDetruitsDe( eEtatEchelon_Premier )
        for _,x in pairs( listePionsPEDetruits ) do
        local _continue = true
do
                local pionDetruit = x
                DEC_Trace( DEC_GetSzName( pionDetruit ) .. " --> non operationnal" )
                --[[/************************** RELEVE eventuelle *****************************/]]--[[// cas des AMX / Leclerc mission barrer, reco, attaquer
]]if( self._namedParams.bAvecReleve ) then
                    do
                        if( not DIA_IsListEmpty( listePionsDeSoutien ) ) then
                            do
                                for _,y in pairs( --[[// Ce qui faudrait faire c'est un max instance sur le paramètre 'pionEnSoutien'...
]]listePionsDeSoutien ) do
                                local _continue = true
                                    do
                                        local pionEnSoutien = y
                                        if( DEC_Automate_PionPeutReleverPion( pionEnSoutien, pionDetruit ) ) then
                                            Activate( self.activations.BEH_Dispositif_Automate_ABC_AssignerReleve, S_ForceSoutien( pionEnSoutien, pionDetruit ), { pionEnSoutien, pionDetruit, } )
                                        end

                                    end

                                end

                            end
                        end

                    end
--[[/*******************************************************/]]--[[// Echelonnage 
]]--[[// on le fait passer en deuxieme echelon
]]                end

                F_Pion_SeteEtatEchelon( pionDetruit, eEtatEchelon_Second )
                F_Pion_SeteEtatSoutien( pionDetruit, eEtatSoutien_aucun )
            end

        end

    end,

--[[// *****************************************************************************
]]--[[// BEH_Dispositif_Automate_ABC_AssignerReleve
]]--[[//
]]--[[// Commentaires: seule le comportement associé au pionEnSoutien le + proche
]]--[[//               sera instancié.
]]--[[//				// valable 1 iteration normalement
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Dispositif_Automate_ABC_AssignerReleve"
{
    instances =
    {
        max = 1,
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.pionEnSoutien = self.params[1]
        self._namedParams.pionEnDifficulte = self.params[2]
    end,

    activate = function( self )
        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                DEC_Automate_PionRelevePion( self._namedParams.pionEnSoutien, self._namedParams.pionEnDifficulte )
                DEC_Trace( DEC_GetSzName( self._namedParams.pionEnSoutien ) .. " Relief  -->" .. DEC_GetSzName( self._namedParams.pionEnDifficulte ) )
                --[[// Echelon
]]F_Pion_SeteEtatEchelon( self._namedParams.pionEnSoutien, eEtatEchelon_Premier )
                --[[// on le fait passer en deuxieme echelon
]]F_Pion_SeteEtatEchelon( self._namedParams.pionEnDifficulte, eEtatEchelon_Second )
                --[[// Soutien
]]F_Pion_SeteEtatSoutien( self._namedParams.pionEnDifficulte, eEtatSoutien_aucun )
            end
        end

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Dispositif_Automate_ABC_GererPionsDetruits_, "BEH_Dispositif_Automate_ABC_AssignerReleve", nodes.BEH_Dispositif_Automate_ABC_AssignerReleve }
