includedFiles = includedFiles or {}
includedFiles["sources/melee/inf/automates/common/Behaviors CDT - GererPionsDetruits.bms"] = true

local emptyTable = emptyTable

include "bit.lua"


--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JCR 03-05-15 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Inf/Automates/Common/Behaviors CDT - GererPionsDetruits.hal $
]]--[[// $Author: Jcr $
]]--[[// $Modtime: 20/09/05 17:45 $
]]--[[// $Revision: 6 $
]]--[[// $Workfile: Behaviors CDT - GererPionsDetruits.hal $
]]--[[//
]]--[[// *****************************************************************************
]]


--[[// ----------------------------------------------------------------------------
]]--[[// BEH_Dispositif_Automate_INF_GererLesPionsDetruits
]]--[[// 
]]--[[// - Fait passer les pions detruits en deuxieme echelon
]]--[[// - Fait Suivre les pions en deuxieme echelon 
]]--[[// ----------------------------------------------------------------------------
]]node "BEH_Dispositif_Automate_INF_GererLesPionsDetruits"
{
    feedbacks = { { { "done_BEH_Dispositif_Automate_INF_GererLesPionsDetruits" }, "BEH_Dispositif_Automate_INF_GererLesPionsDetruits" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Dispositif_Automate_INF_GererLesPionsDetruits, {value} ) end,
    activations =
    {
        { "ACT_Conduite_Automate_INF_AffecterEchelonPion", { "done_ACT_Conduite_Automate_INF_AffecterEchelonPion" } },
        { "BEH_Conduite_Automate_INF_SuivreCompromis", { "done_BEH_Conduite_Automate_INF_SuivreCompromis" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.bSuivre = self.params[1]
    end,

    activate = function( self )
        local Activate = Activate
        local selPions = DEC_Automate_PionsAvecPC()
        local selPionsPE = S_ObtenirPionsDe( eEtatEchelon_Premier, eEtatDestruction_None )
        for _,x_pion in pairs( selPions or emptyTable ) do
        local _continue = true
do
                local pPion = x_pion
                if( not S_Pion_EstDetruitTactique( pPion ) or S_Misc_EstMissionAffectee_Pion( pPion, "T_Mission_Pion_Suivre" ) ) then
                    _continue = false
                end

                    if _continue then
                    if( S_Pion_EstDetruitTactique( pPion ) ) then
                        Activate( self.activations.ACT_Conduite_Automate_INF_AffecterEchelonPion, 1, { pPion, eEtatEchelon_Second, } )
                    end

                    if( self._namedParams.bSuivre and F_Pion_GeteEtatEchelon( pPion ) ~= eEtatEchelon_Premier ) then
                        do
                            for _,x_enTete in pairs( selPionsPE or emptyTable ) do
                            local _continue = true
                                do
                                    local pionEnTete = x_enTete
                                    --[[// Calcul une force d'appui
]]--[[// ------------------------------------------------------------
]]--[[// Moins on a d'appui, plus on a envie d'etre appuyer
]]local rForceAppuyer = ( 1 / ( 1 + #( F_Pion_GetselUnitesEnAppui( pionEnTete ) ) ) )
                                    local rForceAppui = rForceAppuyer * S_ForceSoutien( pPion, pionEnTete )
                                    Activate( self.activations.BEH_Conduite_Automate_INF_SuivreCompromis, rForceAppui, { pPion, pionEnTete, } )
                                end
--[[// Le pion n'est plus detruit tactiquement 
]]--[[// else if ( S_Misc_EstMissionAffectee_Pion( pPion, T_Mission_Pion_Suivre ) )
]]--[[//	behavior BEH_Conduite_Automate_INF_AppuyerCompromis( pPion, pionEnTete ) : strength = rForceAppui;				
]]
                            end

                        end
                    end

                end
            end

        end

    end,

}

node "BEH_Conduite_Automate_INF_SuivreCompromis"
{
    feedbacks = { { { "done_BEH_Conduite_Automate_INF_SuivreCompromis" }, "BEH_Conduite_Automate_INF_SuivreCompromis" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Conduite_Automate_INF_SuivreCompromis, {value} ) end,
    instances =
    {
        max = 1,
        boost = 2,
    },

    activations =
    {
        { "BEH_Mission_Automate_AssignerSuivreA", { "done_BEH_Mission_Automate_AssignerSuivreA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.pPion = self.params[1]
        self._namedParams.pAAppuyer = self.params[2]
    end,

    activate = function( self )
        local Activate = Activate
        if( ModuleBegins() ) then
            Activate( self.activations.BEH_Mission_Automate_AssignerSuivreA, 1, { ePhase_CDT, self._namedParams.pPion, self._namedParams.pAAppuyer, } )
        end

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_SuivreCompromis, "BEH_Mission_Automate_AssignerSuivreA", nodes.BEH_Mission_Automate_AssignerSuivreA }
connections[ #connections + 1 ] = { nodes.BEH_Dispositif_Automate_INF_GererLesPionsDetruits, "ACT_Conduite_Automate_INF_AffecterEchelonPion", nodes.ACT_Conduite_Automate_INF_AffecterEchelonPion }
connections[ #connections + 1 ] = { nodes.BEH_Dispositif_Automate_INF_GererLesPionsDetruits, "BEH_Conduite_Automate_INF_SuivreCompromis", nodes.BEH_Conduite_Automate_INF_SuivreCompromis }
