includedFiles = includedFiles or {}
includedFiles["sources/melee/inf/automates/common/Behaviors Conduite.bms"] = true

include "bit.lua"


--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JCR 03-05-15 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Inf/Automates/Common/Behaviors Conduite.hal $
]]--[[// $Author: Jcr $
]]--[[// $Modtime: 21/09/05 9:43 $
]]--[[// $Revision: 10 $
]]--[[// $Workfile: Behaviors Conduite.hal $
]]--[[//
]]--[[// *****************************************************************************
]]
include "Melee/Inf/Automates/Common/Behaviors CDT - Situation.bms"

include "Melee/Inf/Automates/Common/Behaviors CDT - GererAppuis.bms"

include "Melee/Inf/Automates/Common/Behaviors CDT - GererPionsDetruits.bms"

include "Melee/Inf/Automates/Common/Behaviors CDT - GererReleve.bms"

include "Melee/Inf/Automates/Common/Behaviors CDT - Coordination.bms"

include "Melee/Inf/Automates/Common/Behaviors CDT - Offensive.bms"

include "Melee/Inf/Automates/Common/Behaviors CDT - Statique.bms"

include "Melee/Inf/Automates/Common/Behaviors CDT - Retrograde.bms"




--[[//-----------------------------------------------------------------------------
]]--[[// @bFinMission : Gere ou non dans le comportement la fin de mission
]]--[[//-----------------------------------------------------------------------------
]]node "BEH_Conduite_Automate_INF_Defaut"
{
    activations =
    {
        { "BEH_Situation_Automate_INF_FinDeMission", {} },
        { "BEH_Situation_Automate_INF_Defaut", {} },
        { "BEH_Conduite_Automate_INF_Gerer_UniteInconnues", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.bFinMission = self.params[1]
    end,

    activate = function( self )
        self.eActionMission = self.eActionMission or eActionEnCours
        self.bMissionTerminee = self.bMissionTerminee or false
        if( self.bMissionTerminee ) then
            self.params.__returnValue = eActionEffectuee
            Halt()
        end

        --[[//-----------------------------------------------------------------------------
]]--[[// Gestion de la sauvegarde de la compagnie
]]--[[//-----------------------------------------------------------------------------
]]--[[// behavior BEH_Mot_Automate_GererSauvegardeFaceAuxEnis();
]]--[[//-----------------------------------------------------------------------------
]]--[[// Gestion de la fin de mission
]]--[[//-----------------------------------------------------------------------------
]]if( self.eActionMission ~= eActionEnCours ) then
            do
                for _,pion in pairs( DEC_Automate_PionsAvecPC() ) do
                local _continue = true
                    pion:SetStateVariable( "VE_PreparationMission", 0 )

                end

                --[[// DEC_RC( eRC_FinMission );
]]--[[// DEC_FinMission();
]]if( self._namedParams.bFinMission ) then
                    self.params.__returnValue = eActionEffectuee
                    Halt()
                end

            end
        else
            Activate( self.activations.BEH_Situation_Automate_INF_FinDeMission, 1, setmetatable( {}, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eActionMission = v else rawset( t, k, v ) end end } ) )
        end

        --[[//-----------------------------------------------------------------------------
]]--[[// Gestion des RC recus 
]]--[[//-----------------------------------------------------------------------------	
]]Activate( self.activations.BEH_Situation_Automate_INF_Defaut, 1, { self._namedParams.bFinMission, } )
        Activate( self.activations.BEH_Conduite_Automate_INF_Gerer_UniteInconnues, 1, {} )--[[//-----------------------------------------------------------------------------
]]--[[// Gestion des unites inconnues n'ayant pas de mission
]]--[[//-----------------------------------------------------------------------------	
]]
    end,

}

node "BEH_Conduite_Automate_INF_Appuyer"
{
    activations =
    {
        { "BEH_CoordDep_Automate_INF_AvecAutomate", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.compagnie = self.params[1]
    end,

    activate = function( self )
        --[[//-----------------------------------------------------------------------------
]]--[[// Coordination par rapport a l'automate appuye
]]--[[//-----------------------------------------------------------------------------
]]local bRejoindreLigneFront = S_Dispositif_Automate_INF_PionsAmisEnDifficultes( self._namedParams.compagnie )
        Activate( self.activations.BEH_CoordDep_Automate_INF_AvecAutomate, 1, { self._namedParams.compagnie, bRejoindreLigneFront, } )
    end,

--[[// ============================================================================
]]--[[// $Created : JCR : 29/03/2005 18:34
]]--[[// Gestion haut niveau des manoeuvre offensive
]]--[[//		- Coordination
]]--[[//		- Releve
]]--[[//		- Gestion des differentes unitees
]]--[[//		- Gestion de la situation generique (fin mission)
]]--[[// ============================================================================
]]}

node "BEH_Conduite_Automate_INF_CadreOffensif"
{
    activations =
    {
        { "BEH_Dispositif_Automate_INF_GererLesPionsDetruits", {} },
        { "BEH_Dispositif_Automate_INF_GererReleve", {} },
        { "BEH_CoordDep_Automate_AvecPions", {} },
        { "BEH_Conduite_Automate_INF_GererAppuis_INF", {} },
        { "BEH_Conduite_Automate_INF_GererAppui_Mortier", {} },
        { "BEH_Conduite_Automate_INF_GererAppuis_ABC", {} },
        { "BEH_Situation_Automate_INF_CadreOffensif", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        --[[// Gestion des pions detruits		
]]Activate( self.activations.BEH_Dispositif_Automate_INF_GererLesPionsDetruits, 1, { true, } )
        Activate( self.activations.BEH_Dispositif_Automate_INF_GererReleve, 1, {} )
        --[[//-------------------------------------------------------------------------
]]--[[// Coordination du front
]]--[[//-------------------------------------------------------------------------
]]--[[// Si un pion se trouve sur une ligne de debouche ou sur une ligne de 
]]--[[// coordination, on arrete la coordination sur l'etalement de la compagnie
]]local selPions_Coordination = S_ObtenirPionsOperationnels_SansPC_Coordination()
        if( not S_Conduite_PionHorsFuseau( selPions_Coordination ) ) then
            do
                local bRalentir = not S_Conduite_PionEnAttente_OrdreCoordination( selPions_Coordination )
                --[[// float	
]]--[[// if ( S_Misc_CoordinationAC( selPions_Coordination ) )			
]]Activate( self.activations.BEH_CoordDep_Automate_AvecPions, 1, { selPions_Coordination, M_DISTANCE_ECART_MAX_LAVT(), M_DISTANCE_ECART_MIN_LAVT(), bRalentir, } )
            end
        end

        Activate( self.activations.BEH_Conduite_Automate_INF_GererAppuis_INF, 1, {} )
        Activate( self.activations.BEH_Conduite_Automate_INF_GererAppui_Mortier, 1, {} )
        Activate( self.activations.BEH_Conduite_Automate_INF_GererAppuis_ABC, 1, {} )
        Activate( self.activations.BEH_Situation_Automate_INF_CadreOffensif, 1, {} )--[[//-------------------------------------------------------------------------
]]--[[// Gere les situations ennemis
]]--[[//-------------------------------------------------------------------------
]]
    end,

--[[// ============================================================================
]]--[[// $Created : JCR : 29/03/2005 18:34
]]--[[// Gestion haut niveau des missions retrogrades
]]--[[//		- Coordination
]]--[[//		- Releve
]]--[[//		- Gestion des differentes unitees
]]--[[//		- Gestion de la situation generique (fin mission)
]]--[[// ============================================================================
]]}

node "BEH_Conduite_Automate_INF_CadreRetrograde"
{
    activations =
    {
        { "BEH_Dispositif_Automate_INF_GererLesPionsDetruits", {} },
        { "BEH_Dispositif_Automate_INF_GererReleve", {} },
        { "BEH_CoordDep_Automate_INF_Retrograde", {} },
        { "BEH_Conduite_Automate_INF_GererAppuis_INF", {} },
        { "BEH_Conduite_Automate_INF_GererAppui_Mortier", {} },
        { "BEH_Conduite_Automate_INF_GererAppuis_ABC", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        --[[// Gestion des pions detruits		
]]Activate( self.activations.BEH_Dispositif_Automate_INF_GererLesPionsDetruits, 1, { true, } )
        Activate( self.activations.BEH_Dispositif_Automate_INF_GererReleve, 1, {} )
        Activate( self.activations.BEH_CoordDep_Automate_INF_Retrograde, 1, {} )
        Activate( self.activations.BEH_Conduite_Automate_INF_GererAppuis_INF, 1, {} )
        Activate( self.activations.BEH_Conduite_Automate_INF_GererAppui_Mortier, 1, {} )
        Activate( self.activations.BEH_Conduite_Automate_INF_GererAppuis_ABC, 1, {} )
    end,

--[[//-------------------------------------------------------------------------
]]--[[// Gere les situations ennemis
]]--[[//-------------------------------------------------------------------------
]]--[[// TODO :	
]]--[[// behavior BEH_Situation_Automate_INF_CadreRetrograde();
]]--[[// ============================================================================
]]--[[// $Created : JCR : 29/03/2005 18:34
]]--[[// Gestion haut niveau des missions statiques
]]--[[//		- Releve - en revanche, les pions detruits ne suivent pas
]]--[[//		- Gestion des differentes unitees
]]--[[//		- Gestion de la situation generique (fin mission)
]]--[[// ============================================================================
]]}

node "BEH_Conduite_Automate_INF_CadreStatique"
{
    activations =
    {
        { "BEH_Dispositif_Automate_INF_GererLesPionsDetruits", {} },
        { "BEH_Dispositif_Automate_INF_GererReleve", {} },
        { "BEH_Conduite_Automate_INF_GererAppuis_INF", {} },
        { "BEH_Conduite_Automate_INF_GererAppui_Mortier", {} },
        { "BEH_Conduite_Automate_INF_GererAppuis_ABC", {} },
        { "BEH_Situation_Automate_INF_CadreDefensif_InstallerPC", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        --[[// Gestion des pions detruits		
]]Activate( self.activations.BEH_Dispositif_Automate_INF_GererLesPionsDetruits, 1, { false, } )
        Activate( self.activations.BEH_Dispositif_Automate_INF_GererReleve, 1, {} )
        Activate( self.activations.BEH_Conduite_Automate_INF_GererAppuis_INF, 1, {} )--[[//-------------------------------------------------------------------------
]]--[[// Coordination du front
]]--[[//-------------------------------------------------------------------------	
]]
        Activate( self.activations.BEH_Conduite_Automate_INF_GererAppui_Mortier, 1, {} )
        Activate( self.activations.BEH_Conduite_Automate_INF_GererAppuis_ABC, 1, {} )
        Activate( self.activations.BEH_Situation_Automate_INF_CadreDefensif_InstallerPC, 1, {} )--[[//-------------------------------------------------------------------------
]]--[[// Gere les situations ennemis
]]--[[//-------------------------------------------------------------------------
]]--[[// TODO :
]]
    end,

--[[//behavior BEH_Situation_Automate_INF_CadreRetrograde();
]]--[[// ----------------------------------------------------------------------------
]]--[[// 
]]--[[// ----------------------------------------------------------------------------
]]}

node "BEH_CoordTir_Automate_INF_Intervention_LCAR"
{
    activations =
    {
        { "BEH_CoordTir_Automate_INF_EvalueActivite_Eni", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.pPion = self.params[1]
    end,

    activate = function( self )
                self.eAction = self.eAction or eActionEnCours
        local ksEni = S_Pion_EniEnCours( self._namedParams.pPion )
        if( F_Pion_GeteEtatDec( self._namedParams.pPion ) == eEtatDec_Sauvegarde or self.eAction == eActionHalt ) then
            self.params.__returnValue = eActionEffectuee
            return
        end

        Activate( self.activations.BEH_CoordTir_Automate_INF_EvalueActivite_Eni, 1, setmetatable( { self._namedParams.pPion, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eAction = v else rawset( t, k, v ) end end } ) )
        for _,x_appuis in pairs( --[[// Regarde si les appuis traitent un ennemi
]]F_Pion_GetselUnitesEnAppui( self._namedParams.pPion ) ) do
        local _continue = true
do
                local pionAppui = x_appuis
                local ksEni_EnCours_Appui = S_Pion_EniEnCours( pionAppui )
                --[[// Si HOT ou MILAN 
]]--[[// On decroche des les premiers coups partis
]]if( pionAppui:GetType() == "SectionInfanterie_MILAN" or pionAppui:GetType() == "SectionInfanterie_HOT" ) then
                    do
                        if( F_Pion_GeteEtatFeu( self._namedParams.pPion ) == eEtatFeu_Executer ) then
                            self.params.__returnValue = eActionEffectuee
                            return
                        end

                    end
                end

            end
--[[// le pion courant
]]
        end

        if( DEC_ConnaissanceAgent_EstValide( ksEni ) ) then
            do
                --[[// Si HOT ou MILAN 
]]--[[// On decroche des les premiers coups partis
]]if( self._namedParams.pPion:GetType() == "SectionInfanterie_MILAN" or self._namedParams.pPion:GetType() == "SectionInfanterie_HOT" ) then
                    do
                        if( F_Pion_GeteEtatFeu( self._namedParams.pPion ) == eEtatFeu_Executer ) then
                            self.params.__returnValue = eActionEffectuee
                            return
                        end

                    end
                end

            end
        end

    end,

    destroy = function( self )
                        self.params.__returnValue = eActionEffectuee
        return

    end,

--[[// ----------------------------------------------------------------------------
]]--[[// pPion permet de differencier les instances provenant des differents echelons
]]--[[// ----------------------------------------------------------------------------
]]}

node "BEH_CoordTir_Automate_INF_EvalueActivite_Eni"
{
    create = function( self )
        self._namedParams = {}
        self._namedParams.pPion_Echelon = self.params[1]
    end,

    activate = function( self )
        if( GetActivity() > 1 ) then
            self.params.__returnValue = eActionHalt
            return
        end

                self.params.__returnValue = eActionEnCours
        return

    end,

--[[// ----------------------------------------------------------------------------
]]--[[// Sur ordre de conduite fait rompre le contact de l'echelon le plus en avant
]]--[[//
]]--[[// ----------------------------------------------------------------------------
]]}

node "BEH_Conduite_Automate_INF_Freiner_RompreContact"
{
    activations =
    {
        { "ACT_Ordre_Automate_Continue", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        self.resultatCalcul = self.resultatCalcul or nil
        local selPions = S_Cherche_Automate_Filtre_TypeMission( DEC_Automate_PionsSansPC(), "T_Mission_Pion_INF_Freiner" )
        --[[// Init
]]--[[//---------------------------------------------------------------------
]]if( ( self.resultatCalcul == 0 or self.resultatCalcul == nil ) ) then
            self.resultatCalcul = DEC_Geometrie_StartCalculLignesAvantEtArriere( selPions )
        end

        if( ( self.resultatCalcul == 0 or self.resultatCalcul == nil ) ) then
            return
        end

        --[[//-----------------------------------------------------------------------------
]]--[[// Determiner le pion de queue
]]--[[//-----------------------------------------------------------------------------    
]]local pionEnQueue = S_Coordination_PionEnQueue( self.resultatCalcul, selPions, true )
        if( ( pionEnQueue == 0 or pionEnQueue == nil ) ) then
            return
        end

        Activate( self.activations.ACT_Ordre_Automate_Continue, 1, { pionEnQueue, } )
    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_Appuyer, "BEH_CoordDep_Automate_INF_AvecAutomate", nodes.BEH_CoordDep_Automate_INF_AvecAutomate }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_CadreOffensif, "BEH_Dispositif_Automate_INF_GererLesPionsDetruits", nodes.BEH_Dispositif_Automate_INF_GererLesPionsDetruits }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_CadreOffensif, "BEH_Dispositif_Automate_INF_GererReleve", nodes.BEH_Dispositif_Automate_INF_GererReleve }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_CadreOffensif, "BEH_CoordDep_Automate_AvecPions", nodes.BEH_CoordDep_Automate_AvecPions }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_CadreOffensif, "BEH_Conduite_Automate_INF_GererAppuis_INF", nodes.BEH_Conduite_Automate_INF_GererAppuis_INF }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_CadreOffensif, "BEH_Conduite_Automate_INF_GererAppui_Mortier", nodes.BEH_Conduite_Automate_INF_GererAppui_Mortier }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_CadreOffensif, "BEH_Conduite_Automate_INF_GererAppuis_ABC", nodes.BEH_Conduite_Automate_INF_GererAppuis_ABC }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_CadreOffensif, "BEH_Situation_Automate_INF_CadreOffensif", nodes.BEH_Situation_Automate_INF_CadreOffensif }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_CadreRetrograde, "BEH_Dispositif_Automate_INF_GererLesPionsDetruits", nodes.BEH_Dispositif_Automate_INF_GererLesPionsDetruits }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_CadreRetrograde, "BEH_Dispositif_Automate_INF_GererReleve", nodes.BEH_Dispositif_Automate_INF_GererReleve }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_CadreRetrograde, "BEH_CoordDep_Automate_INF_Retrograde", nodes.BEH_CoordDep_Automate_INF_Retrograde }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_CadreRetrograde, "BEH_Conduite_Automate_INF_GererAppuis_INF", nodes.BEH_Conduite_Automate_INF_GererAppuis_INF }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_CadreRetrograde, "BEH_Conduite_Automate_INF_GererAppui_Mortier", nodes.BEH_Conduite_Automate_INF_GererAppui_Mortier }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_CadreRetrograde, "BEH_Conduite_Automate_INF_GererAppuis_ABC", nodes.BEH_Conduite_Automate_INF_GererAppuis_ABC }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_CadreStatique, "BEH_Dispositif_Automate_INF_GererLesPionsDetruits", nodes.BEH_Dispositif_Automate_INF_GererLesPionsDetruits }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_CadreStatique, "BEH_Dispositif_Automate_INF_GererReleve", nodes.BEH_Dispositif_Automate_INF_GererReleve }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_CadreStatique, "BEH_Conduite_Automate_INF_GererAppuis_INF", nodes.BEH_Conduite_Automate_INF_GererAppuis_INF }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_CadreStatique, "BEH_Conduite_Automate_INF_GererAppui_Mortier", nodes.BEH_Conduite_Automate_INF_GererAppui_Mortier }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_CadreStatique, "BEH_Conduite_Automate_INF_GererAppuis_ABC", nodes.BEH_Conduite_Automate_INF_GererAppuis_ABC }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_CadreStatique, "BEH_Situation_Automate_INF_CadreDefensif_InstallerPC", nodes.BEH_Situation_Automate_INF_CadreDefensif_InstallerPC }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_Defaut, "BEH_Situation_Automate_INF_FinDeMission", nodes.BEH_Situation_Automate_INF_FinDeMission }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_Defaut, "BEH_Situation_Automate_INF_Defaut", nodes.BEH_Situation_Automate_INF_Defaut }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_Defaut, "BEH_Conduite_Automate_INF_Gerer_UniteInconnues", nodes.BEH_Conduite_Automate_INF_Gerer_UniteInconnues }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_Freiner_RompreContact, "ACT_Ordre_Automate_Continue", nodes.ACT_Ordre_Automate_Continue }
connections[ #connections + 1 ] = { nodes.BEH_CoordTir_Automate_INF_Intervention_LCAR, "BEH_CoordTir_Automate_INF_EvalueActivite_Eni", nodes.BEH_CoordTir_Automate_INF_EvalueActivite_Eni }
