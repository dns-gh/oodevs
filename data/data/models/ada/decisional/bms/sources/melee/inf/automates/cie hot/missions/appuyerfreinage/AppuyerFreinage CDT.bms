includedFiles = includedFiles or {}
includedFiles["sources/melee/inf/automates/cie hot/missions/appuyerfreinage/AppuyerFreinage CDT.bms"] = true

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JCR 03-07-29 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Inf/Automates/Cie Hot/Missions/AppuyerFreinage/AppuyerFreinage CDT.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 20/06/05 16:03 $
]]--[[// $Revision: 15 $
]]--[[// $Workfile: AppuyerFreinage CDT.hal $
]]--[[//
]]--[[// *****************************************************************************
]]
node "MIS_Automate_CDT_INF_AppuyerUnFreinage"
{
    activations =
    {
        { "BEH_Conduite_Automate_GererFuseau", {} },
        { "BEH_Conduite_Automate_INF_Defaut", {} },
        { "BEH_Conduite_Automate_INF_AppuyerFreinage", {} },
        { "BEH_Conduite_Automate_INF_CadreRetrograde", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
                self.eActionMission = self.eActionMission or eActionEnCours
        self.eActionHorsFuseau = self.eActionHorsFuseau or eActionEnCours
        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                DEC_SetMission( myself, self._namedParams.mission )
                StartActivate( self.activations.BEH_Conduite_Automate_GererFuseau, 1, setmetatable( {}, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eActionHorsFuseau = v else rawset( t, k, v ) end end } ) )
            end
--[[// Conduite des pions au niveau section
]]--[[//-----------------------------------------------------------------------------				
]]        end

        if( self.eActionMission == eActionEffectuee ) then
            do
                self.eActionMission = eActionEnCours
                                do
                                        self.params.__returnValue = eActionEffectuee
                    Halt( self )
                    do return end

                end

            end
        end

        Activate( self.activations.BEH_Conduite_Automate_INF_Defaut, 1, setmetatable( { true, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eActionMission = v else rawset( t, k, v ) end end } ) )
        Activate( self.activations.BEH_Conduite_Automate_INF_AppuyerFreinage, 1, {} )
        Activate( self.activations.BEH_Conduite_Automate_INF_CadreRetrograde, 1, {} )--[[// behavior BEH_Conduite_Automate_INF_Appuyer( mission.compagnie_ );
]]
    end,

    destroy = function( self )
            end,

--[[// ----------------------------------------------------------------------------
]]--[[// $Created : JCR : 13/09/2004 16:41
]]--[[// Coordination avec le dispositif appuye
]]--[[// ----------------------------------------------------------------------------
]]}

node "BEH_Conduite_Automate_INF_AppuyerFreinage"
{
    activations =
    {
        { "ACT_Conduite_Automate_HOT_AppuiFreinage", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        local selPionsPE = S_ObtenirPionsDe( eEtatEchelon_Premier, eEtatDestruction_None )
        local selPionsHOT = S_Cherche_Automate_Filtre_TypePion( selPionsPE, "SectionInfanterie_HOT" )
        for _,x in pairs( selPionsHOT ) do
        local _continue = true
            Activate( self.activations.ACT_Conduite_Automate_HOT_AppuiFreinage, 1, { x, } )

        end

    end,

--[[// behavior BEH_Conduite_Automate_Gerer_UniteInconnues();	
]]}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Automate_CDT_INF_AppuyerUnFreinage = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_INF_AppuyerFreinage, "ACT_Conduite_Automate_HOT_AppuiFreinage", nodes.ACT_Conduite_Automate_HOT_AppuiFreinage }
connections[ #connections + 1 ] = { nodes.MIS_Automate_CDT_INF_AppuyerUnFreinage, "BEH_Conduite_Automate_GererFuseau", nodes.BEH_Conduite_Automate_GererFuseau }
connections[ #connections + 1 ] = { nodes.MIS_Automate_CDT_INF_AppuyerUnFreinage, "BEH_Conduite_Automate_INF_Defaut", nodes.BEH_Conduite_Automate_INF_Defaut }
connections[ #connections + 1 ] = { nodes.MIS_Automate_CDT_INF_AppuyerUnFreinage, "BEH_Conduite_Automate_INF_AppuyerFreinage", nodes.BEH_Conduite_Automate_INF_AppuyerFreinage }
connections[ #connections + 1 ] = { nodes.MIS_Automate_CDT_INF_AppuyerUnFreinage, "BEH_Conduite_Automate_INF_CadreRetrograde", nodes.BEH_Conduite_Automate_INF_CadreRetrograde }
