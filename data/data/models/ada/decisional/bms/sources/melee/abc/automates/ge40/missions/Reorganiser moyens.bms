includedFiles = includedFiles or {}
includedFiles["sources/melee/abc/automates/ge40/missions/Reorganiser moyens.bms"] = true

--[[// *****************************************************************************
]]--[[// behavior BEH_GTIA_OrganiserMoyensVersPionsOp
]]--[[// 
]]--[[// Commentaires: PROTO en cours de tests -- réorganisation en fonction des moyens
]]--[[//               "redispatche" les pions subordonnes de la liste passée en
]]--[[//               paramètre vers les compagnies opérationnelles
]]--[[//
]]--[[// *****************************************************************************
]]node "BEH_GTIA_OrganiserMoyensVersPionsOp"
{
    activations =
    {
        { "BEH_GTIA_TransfererMoyensOp", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.listePions = self.params[1]
    end,

    activate = function( self )
        if( DIA_IsListEmpty( self._namedParams.listePions ) ) then
            return
        end

        local listePionsMeleeOperationnels = S_Cherche_GE_Filtre_PasFinMission( S_Cherche_GE_AutomateOperationnels( S_Cherche_GE_Filtre_TypeAutomate_Melee( DEC_Automate_AutomatesSubordonnes() ) ) )
        for _,pion in pairs( self._namedParams.listePions ) do
        local _continue = true
            Activate( self.activations.BEH_GTIA_TransfererMoyensOp, 1, { pion, listePionsMeleeOperationnels, } )

        end

    end,

--[[// *****************************************************************************
]]--[[// behavior BEH_GTIA_TransfererMoyensOp
]]--[[// 
]]--[[// Commentaires: transfere les pions subordonnes de non détruit 'pion' vers les 
]]--[[//               pions (compagnies) de listePions. 
]]--[[//               ATTENTION R: pas de règle en particulier pion de PE au hasard
]]--[[//                            Doctrine? Règle? vers le pion le moyen 
]]--[[//                            opérationnel?
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_GTIA_TransfererMoyensOp"
{
    activations =
    {
        { "ACT_GTIA_TransfererMoyensVers", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.pion = self.params[1]
        self._namedParams.listePions = self.params[2]
    end,

    activate = function( self )
        if( DIA_IsListEmpty( self._namedParams.listePions ) ) then
            return
        end

        local listePionsSubNonDetruit = S_Cherche_Automate_PionsOperationnels( DEC_Automate_PionsDeAutomateSansPC( self._namedParams.pion ) )
        local rIterateur = 0
        for _,pionSub in pairs( listePionsSubNonDetruit ) do
        local _continue = true
do
                Activate( self.activations.ACT_GTIA_TransfererMoyensVers, 1, { pionSub, DIA_GetAt( self._namedParams.listePions, rIterateur ), } )
                                rIterateur = rIterateur + 1
                if( rIterateur == #( self._namedParams.listePions ) ) then
                    rIterateur = 0
                end

            end

        end

    end,

--[[// *****************************************************************************
]]--[[// ACT_GTIA_TransfererMoyensVers
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "ACT_GTIA_TransfererMoyensVers"
{
    create = function( self )
        self._namedParams = {}
        self._namedParams.pionSub = self.params[1]
        self._namedParams.pionCompagnie = self.params[2]
    end,

    select = function( self )
        if( DIA_GetLocalFakeActuator( self._namedParams.pionSub ) < GetActivity() ) then
            do
                DIA_SetLocalFakeActuator( self._namedParams.pionSub, GetActivity() )
                if( ModuleBegins() ) then
                    DEC_Pion_ChangeAutomate( self._namedParams.pionSub, self._namedParams.pionCompagnie )
                end

            end
        end

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_GTIA_OrganiserMoyensVersPionsOp, "BEH_GTIA_TransfererMoyensOp", nodes.BEH_GTIA_TransfererMoyensOp }
connections[ #connections + 1 ] = { nodes.BEH_GTIA_TransfererMoyensOp, "ACT_GTIA_TransfererMoyensVers", nodes.ACT_GTIA_TransfererMoyensVers }
