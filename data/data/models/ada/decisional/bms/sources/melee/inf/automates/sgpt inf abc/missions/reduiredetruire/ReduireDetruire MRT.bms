includedFiles = includedFiles or {}
includedFiles["sources/melee/inf/automates/sgpt inf abc/missions/reduiredetruire/ReduireDetruire MRT.bms"] = true

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JCR 03-07-07 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Inf/Automates/Sgpt Inf Abc/Missions/ReduireDetruire/ReduireDetruire MRT.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 24/05/05 13:56 $
]]--[[// $Revision: 16 $
]]--[[// $Workfile: ReduireDetruire MRT.hal $
]]--[[//
]]--[[// *****************************************************************************
]]

--[[// ******************************************************************************
]]--[[// MIS_Automate_MRT_INF_Reduire
]]--[[// 
]]--[[//
]]--[[// ******************************************************************************
]]node "MIS_Automate_MRT_INF_Reduire"
{
    feedbacks = { { { "done_MIS_Automate_MRT_INF_Reduire" }, "MIS_Automate_MRT_INF_Reduire" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_MIS_Automate_MRT_INF_Reduire, {value} ) end,
    activations =
    {
        { "BEH_Medo_Automate_INF_PreparerMission_Manoeuvre", { "done_BEH_Medo_Automate_INF_PreparerMission_Manoeuvre" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        local Activate = Activate
                self.eCreationMRT = self.eCreationMRT or eActionEnCours
        self.rN_Loc = self.rN_Loc or DEC_ListePoints_Size( self._namedParams.mission.pointsResistance_ )
        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                DEC_SetMission( myself, self._namedParams.mission )
                DEC_Trace( "T_Mission_Automate_INF_Reduire : debut MRT" )
            end
--[[//-----------------------------------------------------------------------------
]]--[[// MRT creee
]]--[[//-----------------------------------------------------------------------------
]]        end

        if( self.eCreationMRT == eActionImpossible ) then
            do
                                do
                    DEC_RC( eRC_MissionImpossible )
                end

                                self:SendFeedback( eActionImpossible )
                Halt( self )
                do return end

            end
        end

        if( self.eCreationMRT == eActionEffectuee ) then
            do
                self.eCreationMRT = eActionEnCours
                                do
                    DEC_Trace( "T_Mission_Automate_INF_Reduire : fin MRT" )
                    DEC_MRT_Valide()
                                        self:SendFeedback( eActionEffectuee )
                    Halt( self )
                    do return end

                end

            end
--[[//-----------------------------------------------------------------------------
]]--[[// Modalité d'exécution
]]--[[//-----------------------------------------------------------------------------
]]--[[// behavior BEH_Medo_Automate_INF_ReduireDetruire() return in eCreationMRT;		
]]        end

        Activate( self.activations.BEH_Medo_Automate_INF_PreparerMission_Manoeuvre, 1, { "T_Mission_Automate_INF_Reduire", self.rN_Loc, } )
self.done_BEH_Medo_Automate_INF_PreparerMission_Manoeuvre = function( self, _, v ) self.eCreationMRT = v[1] end
    end,

    destroy = function( self )
            end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Automate_MRT_INF_Reduire = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.MIS_Automate_MRT_INF_Reduire, "BEH_Medo_Automate_INF_PreparerMission_Manoeuvre", nodes.BEH_Medo_Automate_INF_PreparerMission_Manoeuvre }
