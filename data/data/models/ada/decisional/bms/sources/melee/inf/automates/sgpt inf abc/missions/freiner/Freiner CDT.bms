includedFiles = includedFiles or {}
includedFiles["sources/melee/inf/automates/sgpt inf abc/missions/freiner/Freiner CDT.bms"] = true

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JCR 03-07-29 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Inf/Automates/Sgpt Inf Abc/Missions/Freiner/Freiner CDT.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 8/07/05 16:21 $
]]--[[// $Revision: 15 $
]]--[[// $Workfile: Freiner CDT.hal $
]]--[[//
]]--[[// *****************************************************************************
]]
node "MIS_Automate_CDT_INF_Freiner"
{
    feedbacks = { { { "done_MIS_Automate_CDT_INF_Freiner" }, "MIS_Automate_CDT_INF_Freiner" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_MIS_Automate_CDT_INF_Freiner, {value} ) end,
    activations =
    {
        { "BEH_Conduite_Automate_INF_Defaut", { "done_BEH_Conduite_Automate_INF_Defaut" } },
        { "BEH_Conduite_Automate_INF_CadreRetrograde", { "done_BEH_Conduite_Automate_INF_CadreRetrograde" } },
        { "BEH_Conduite_Automate_INF_Freiner", { "done_BEH_Conduite_Automate_INF_Freiner" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
                self.eActionMission = self.eActionMission or eActionEnCours
        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                DEC_Trace( "Conduite Freiner : debut" )
                DEC_SetMission( myself, self._namedParams.mission )
            end
--[[// /* MIA ADA //start behavior BEH_Conduite_Automate_GererFuseau();*/
]]--[[// Conduite des pions au niveau section
]]--[[//-----------------------------------------------------------------------------		
]]        end

        if( self.eActionMission == eActionEffectuee ) then
            do
                self.eActionMission = eActionEnCours
                                do
                                        self:SendFeedback( eActionEffectuee )
                    Halt( self )
                    do return end

                end

            end
        end

        Activate( self.activations.BEH_Conduite_Automate_INF_Defaut, 1, { true, } )
self.done_BEH_Conduite_Automate_INF_Defaut = function( self, _, v ) self.eActionMission = v[1] end
        Activate( self.activations.BEH_Conduite_Automate_INF_CadreRetrograde, 1, {} )
        Activate( self.activations.BEH_Conduite_Automate_INF_Freiner, 1, {} )
    end,

    destroy = function( self )
            end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Automate_CDT_INF_Freiner = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.MIS_Automate_CDT_INF_Freiner, "BEH_Conduite_Automate_INF_Defaut", nodes.BEH_Conduite_Automate_INF_Defaut }
connections[ #connections + 1 ] = { nodes.MIS_Automate_CDT_INF_Freiner, "BEH_Conduite_Automate_INF_CadreRetrograde", nodes.BEH_Conduite_Automate_INF_CadreRetrograde }
connections[ #connections + 1 ] = { nodes.MIS_Automate_CDT_INF_Freiner, "BEH_Conduite_Automate_INF_Freiner", nodes.BEH_Conduite_Automate_INF_Freiner }
