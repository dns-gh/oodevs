includedFiles = includedFiles or {}
includedFiles["sources/melee/abc/automates/ge40/missions/defensives/donnercouparret/BUG.bms"] = true

--[[// *****************************************************************************
]]--[[// MIS_Automate_CDT_ABC_GTIA_DonnerCoupArret
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]node "MIS_Automate_CDT_ABC_GTIA_DonnerCoupArret"
{
    activations =
    {
        { "ACT_GTIA_AnalyserSituationPourMissionRetrograde", {} },
        { "BEH_GTIA_OrganiserLesMoyensPourDonnerCAR", {} },
        { "BEH_GTIA_RendreCompte", {} },
        { "BEH_GTIA_EchelonnerDispositif", {} },
        { "BEH_GTIA_RepartirDansFuseaux", {} },
        { "BEH_GTIA_GererAppuisInternesEnDefense", {} },
        { "BEH_GTIA_AssignerLesOrdresPourCoupArret", {} },
        { "BEH_GTIA_ORDRE_Decrocher", {} },
        { "BEH_GTIA_Decrocher", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        self.objectifsPrioritaires = self.objectifsPrioritaires or {}--[[//Vide dans cette mission
]]
        Activate( self.activations.ACT_GTIA_AnalyserSituationPourMissionRetrograde, 1, {} )--[[// Analyse environnement
]]
        --[[// Init
]]if( ModuleBegins() ) then
            do
                DEC_SetMission( myself, self._namedParams.mission )
                                return
--[[//{    g_bPhaseReceuil = false;    selection listePionsSubordonnes = DEC_Automate_AutomatesSubordonnes();    with( x in listePionsSubordonnes )    {        T_AutomateModeleDEC automat = x;        F_Automat_SeteEtatEchelon( automat, eEtatEchelon_None );        F_Automat_SeteEtatPhaseMission( automat, eEtatPhaseMission_None );    }}
]]
            end
--[[/* **************TEST *******************/]]        end

        if( not self._namedParams.mission.sansRearticulation_ ) then
            Activate( self.activations.BEH_GTIA_OrganiserLesMoyensPourDonnerCAR, 10, {} )
        end

        Activate( self.activations.BEH_GTIA_RendreCompte, 1, {} )--[[// CR
]]
        Activate( self.activations.BEH_GTIA_EchelonnerDispositif, 1, {} )--[[// Dispositif  
]]
        Activate( self.activations.BEH_GTIA_RepartirDansFuseaux, 1, { self.objectifsPrioritaires, } )
        --[[// Missions
]]--[[//priorite 1
]]Activate( self.activations.BEH_GTIA_GererAppuisInternesEnDefense, 10, {} )
        --[[//priorite 2
]]Activate( self.activations.BEH_GTIA_AssignerLesOrdresPourCoupArret, 1, { self._namedParams.mission.travaux_, self._namedParams.mission.zoneRegroupement_, } )
        Activate( self.activations.BEH_GTIA_ORDRE_Decrocher, 1, {} )--[[//si utilisateur veut faire décrocher le GTIA sur ordre
]]
        Activate( self.activations.BEH_GTIA_Decrocher, 1, {} )--[[// Décrocher sur RapFor
]]
    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Automate_CDT_ABC_GTIA_DonnerCoupArret = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.MIS_Automate_CDT_ABC_GTIA_DonnerCoupArret, "ACT_GTIA_AnalyserSituationPourMissionRetrograde", nodes.ACT_GTIA_AnalyserSituationPourMissionRetrograde }
connections[ #connections + 1 ] = { nodes.MIS_Automate_CDT_ABC_GTIA_DonnerCoupArret, "BEH_GTIA_OrganiserLesMoyensPourDonnerCAR", nodes.BEH_GTIA_OrganiserLesMoyensPourDonnerCAR }
connections[ #connections + 1 ] = { nodes.MIS_Automate_CDT_ABC_GTIA_DonnerCoupArret, "BEH_GTIA_RendreCompte", nodes.BEH_GTIA_RendreCompte }
connections[ #connections + 1 ] = { nodes.MIS_Automate_CDT_ABC_GTIA_DonnerCoupArret, "BEH_GTIA_EchelonnerDispositif", nodes.BEH_GTIA_EchelonnerDispositif }
connections[ #connections + 1 ] = { nodes.MIS_Automate_CDT_ABC_GTIA_DonnerCoupArret, "BEH_GTIA_RepartirDansFuseaux", nodes.BEH_GTIA_RepartirDansFuseaux }
connections[ #connections + 1 ] = { nodes.MIS_Automate_CDT_ABC_GTIA_DonnerCoupArret, "BEH_GTIA_GererAppuisInternesEnDefense", nodes.BEH_GTIA_GererAppuisInternesEnDefense }
connections[ #connections + 1 ] = { nodes.MIS_Automate_CDT_ABC_GTIA_DonnerCoupArret, "BEH_GTIA_AssignerLesOrdresPourCoupArret", nodes.BEH_GTIA_AssignerLesOrdresPourCoupArret }
connections[ #connections + 1 ] = { nodes.MIS_Automate_CDT_ABC_GTIA_DonnerCoupArret, "BEH_GTIA_ORDRE_Decrocher", nodes.BEH_GTIA_ORDRE_Decrocher }
connections[ #connections + 1 ] = { nodes.MIS_Automate_CDT_ABC_GTIA_DonnerCoupArret, "BEH_GTIA_Decrocher", nodes.BEH_GTIA_Decrocher }
