includedFiles = includedFiles or {}
includedFiles["sources/melee/inf/pions/son hot/Behaviors - Surete.bms"] = true

include "bit.lua"


--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JCR 03-02-20 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Inf/Pions/Son Hot/Behaviors - Surete.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 24/08/05 15:59 $
]]--[[// $Revision: 21 $
]]--[[// $Workfile: Behaviors - Surete.hal $
]]--[[//
]]--[[// *****************************************************************************
]]


--[[//=============================================================================
]]--[[// comportements definies dans $Workfile: Behaviors - Surete.hal $ 
]]--[[//=============================================================================
]]--[[//
]]--[[//	behavior BEH_Pion_HOT_Appuyer( Perception_Pion repAmi, Perception_Pion repEni, string type )
]]--[[//
]]--[[//
]]--[[//=============================================================================
]]--[[//
]]


--[[//-----------------------------------------------------------------------------
]]--[[// Appuyer une unite donnée
]]--[[//-----------------------------------------------------------------------------
]]node "BEH_Manoeuvre_Pion_HOT_Appuyer"
{
    instances =
    {
        max = 1,
    },

    activations =
    {
        { "BEH_Dep_Pion_HOT_AppuyerFreinage", {} },
        { "BEH_Dep_Pion_INF_Appuyer", {} },
        { "BEH_Eni_Pion_HOT_Appuyer", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.tAmi = self.params[1]
        self._namedParams.type = self.params[2]
    end,

    activate = function( self )
        self.eAction = self.eAction or eActionEnCours
        self.eActionSuivi = self.eActionSuivi or eActionEnCours
        self.eCurrentPhase = self.eCurrentPhase or eSuivreUnite
        if( ModuleBegins() ) then
            do
                DEC_Trace( "debut appui " )
            end
--[[// Gestion du deplacement / Coordination
]]--[[//-------------------------------------------------------------------------	
]]        end

        do
        end

        if( myself.bAppuieFreinage_ ) then
            Activate( self.activations.BEH_Dep_Pion_HOT_AppuyerFreinage, GetMotivation( "MOT_Mission" ), setmetatable( { self._namedParams.tAmi, M_DISTANCE_SUIVI_MIN(), M_DISTANCE_SUIVI_MAX(), }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eCurrentPhase = v else rawset( t, k, v ) end end } ) )
        else
            Activate( self.activations.BEH_Dep_Pion_INF_Appuyer, GetMotivation( "MOT_Mission" ), setmetatable( { self._namedParams.tAmi, M_DISTANCE_SUIVI_MIN(), M_DISTANCE_SUIVI_MAX(), }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eCurrentPhase = v else rawset( t, k, v ) end end } ) )
        end

        --[[// Gestion des ennemis
]]--[[//-------------------------------------------------------------------------
]]--[[// float	rMotivation 
]]--[[// Appui feu en faveur de la section appuyee
]]--[[// behavior BEH_Eni_Pion_HOT_TirAppui( tAmi ) : strength = 1.5 * rMotivation;
]]--[[// Ennemi propre a la section
]]Activate( self.activations.BEH_Eni_Pion_HOT_Appuyer, GetMotivation( "MOT_ManoeuvrerSurEnis" ), {} )
    end,

}

node "BEH_Eni_Pion_HOT_Appuyer"
{
    activations =
    {
        { "BEH_Feu_Pion_INF_ConduireLesFeux_Sur", {} },
        { "ACT_Misc_UnitesEnAppui_EnPosition", {} },
        { "ACT_Dep_SePosterFaceA", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        local lstEnisPercus = DEC_Connaissances_UnitesEnnemiesVivantesPercues()
        for _,ksEni in pairs( lstEnisPercus ) do
        local _continue = true
do
                if( DEC_ConnaissanceAgent_EstDetruitTactique( ksEni ) ) then
                    _continue = false
                end

                    if _continue then
                    if( not S_Eni_EstNiveauPerceptionGTIA( ksEni, F_Pion_GeteNiveauAction( myself ) ) ) then
                        _continue = false
                    end

                        if _continue then
                        --[[// Si l'eni n'est pas a pied 
]]--[[// Si non motorisee
]]local rForce_Arme = 1
                        --[[// On favorise les blindes
]]--[[//		switch ( S_Eni_NatureArme( ksEni ) )
]]--[[//		{
]]--[[//			case eNatureWeapon_Cavalerie:
]]--[[//			case eNatureWeapon_Blinde:
]]--[[//			{
]]--[[//				rForce_Arme = 1.5;
]]--[[//				break;
]]--[[//			}
]]--[[//		}
]]--[[// On essaie d'abord de tirer les ennemis les plus loin
]]local dist = DEC_Geometrie_Distance( DEC_ConnaissanceAgent_Position( ksEni ), DEC_Agent_Position() ) / 1000
                        local rForce_Action = dist * rForce_Arme * S_Force_DangerSur( ksEni )
                        Activate( self.activations.BEH_Feu_Pion_INF_ConduireLesFeux_Sur, rForce_Action, { ksEni, eFormationTir, } )
                        --[[// Si on est a porte, on se poste		
]]if( S_Tir_EstAPortee( ksEni, GetStateVariable( "VE_Agressivite_Tir" ) ) ) then
                            do
                                Activate( self.activations.ACT_Misc_UnitesEnAppui_EnPosition, 1, {} )
                                Activate( self.activations.ACT_Dep_SePosterFaceA, 1, { ksEni, } )
                            end
                        end

                    end
                end
            end

        end

    end,

}

node "BEH_Dep_Pion_HOT_AppuyerFreinage"
{
    activations =
    {
        { "ACT_Misc_Pion_Ambiance", {} },
        { "ACT_Dep_ModulationVitesse", {} },
        { "ACT_Dep_PasserEnModeFurtif", {} },
        { "ACT_RC", {} },
        { "BEH_Dep_Pion_INF_RejoindrePositionAppui", {} },
        { "ACT_Obs_EtablirVisionFaceADir", {} },
        { "ACT_Misc_UnitesEnAppui_EnPosition", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.tAmi = self.params[1]
        self._namedParams.rDist_SuiviMin = self.params[2]
        self._namedParams.rDist_SuiviMax = self.params[3]
    end,

    activate = function( self )
                self.eAction = self.eAction or eActionEnCours
        self.ePhase = self.ePhase or eAppuyer
        self.repCurEni = self.repCurEni or nil
        if( ModuleBegins() ) then
            do
                F_AddToselUnitesEnAppui( self._namedParams.tAmi )
            end
        end

        Activate( self.activations.ACT_Misc_Pion_Ambiance, 1, { F_Pion_GeteEtatAmbiance( self._namedParams.tAmi ), } )
        Activate( self.activations.ACT_Dep_ModulationVitesse, 2, { 1, } )
        local rDist = DEC_Geometrie_Distance( DEC_Agent_Position(), self._namedParams.tAmi:DEC_Agent_Position() )
        self.repCurEni = S_Eni_Pion_INF_ChercheAppui()
        if( rDist < self._namedParams.rDist_SuiviMin or rDist > self._namedParams.rDist_SuiviMax ) then
            self.ePhase = eAppuyer
        else
            self.ePhase = eSePoster
        end

        Activate( self.activations.ACT_Dep_PasserEnModeFurtif, 1, {} )--[[// on rejoint la position d'appui a couvert
]]
        do
        end

         do
            local switch_1 = self.ePhase
            local cases_switch_1 = {}
                if switch_1 == eAppuyer then
                    Activate( self.activations.ACT_RC, 1, { eRC_PasseEnAppui, } )
                    StartActivate( self.activations.BEH_Dep_Pion_INF_RejoindrePositionAppui, 1, { self._namedParams.tAmi, self.repCurEni, eProgressionDirect, } )
                    
                                cases_switch_1[1] = true
elseif switch_1 == eSePoster then
                    Activate( self.activations.ACT_RC, 1, { eRC_EnAppui, } )
                    local mission = DEC_GetMission( myself )
                    Activate( self.activations.ACT_Obs_EtablirVisionFaceADir, 1, { DEC_GetDirectionDanger( mission ), } )
                    Activate( self.activations.ACT_Misc_UnitesEnAppui_EnPosition, 1, {} )--[[// on indique a l'unites appuyee que la section
]]--[[// est en position d'appui
]]
                    
                                cases_switch_1[2] = true

                else
                                end
            end

                self.params.__returnValue = self.ePhase
        return

    end,

    destroy = function( self )
                F_RemoveFromselUnitesEnAppui( self._namedParams.tAmi )
    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Dep_Pion_HOT_AppuyerFreinage, "ACT_Misc_Pion_Ambiance", nodes.ACT_Misc_Pion_Ambiance }
connections[ #connections + 1 ] = { nodes.BEH_Dep_Pion_HOT_AppuyerFreinage, "ACT_Dep_ModulationVitesse", nodes.ACT_Dep_ModulationVitesse }
connections[ #connections + 1 ] = { nodes.BEH_Dep_Pion_HOT_AppuyerFreinage, "ACT_Dep_PasserEnModeFurtif", nodes.ACT_Dep_PasserEnModeFurtif }
connections[ #connections + 1 ] = { nodes.BEH_Dep_Pion_HOT_AppuyerFreinage, "ACT_RC", nodes.ACT_RC }
connections[ #connections + 1 ] = { nodes.BEH_Dep_Pion_HOT_AppuyerFreinage, "BEH_Dep_Pion_INF_RejoindrePositionAppui", nodes.BEH_Dep_Pion_INF_RejoindrePositionAppui }
connections[ #connections + 1 ] = { nodes.BEH_Dep_Pion_HOT_AppuyerFreinage, "ACT_Obs_EtablirVisionFaceADir", nodes.ACT_Obs_EtablirVisionFaceADir }
connections[ #connections + 1 ] = { nodes.BEH_Dep_Pion_HOT_AppuyerFreinage, "ACT_Misc_UnitesEnAppui_EnPosition", nodes.ACT_Misc_UnitesEnAppui_EnPosition }
connections[ #connections + 1 ] = { nodes.BEH_Eni_Pion_HOT_Appuyer, "BEH_Feu_Pion_INF_ConduireLesFeux_Sur", nodes.BEH_Feu_Pion_INF_ConduireLesFeux_Sur }
connections[ #connections + 1 ] = { nodes.BEH_Eni_Pion_HOT_Appuyer, "ACT_Misc_UnitesEnAppui_EnPosition", nodes.ACT_Misc_UnitesEnAppui_EnPosition }
connections[ #connections + 1 ] = { nodes.BEH_Eni_Pion_HOT_Appuyer, "ACT_Dep_SePosterFaceA", nodes.ACT_Dep_SePosterFaceA }
connections[ #connections + 1 ] = { nodes.BEH_Manoeuvre_Pion_HOT_Appuyer, "BEH_Dep_Pion_HOT_AppuyerFreinage", nodes.BEH_Dep_Pion_HOT_AppuyerFreinage }
connections[ #connections + 1 ] = { nodes.BEH_Manoeuvre_Pion_HOT_Appuyer, "BEH_Dep_Pion_INF_Appuyer", nodes.BEH_Dep_Pion_INF_Appuyer }
connections[ #connections + 1 ] = { nodes.BEH_Manoeuvre_Pion_HOT_Appuyer, "BEH_Eni_Pion_HOT_Appuyer", nodes.BEH_Eni_Pion_HOT_Appuyer }
