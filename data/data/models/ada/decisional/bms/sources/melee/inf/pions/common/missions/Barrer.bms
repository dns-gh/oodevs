includedFiles = includedFiles or {}
includedFiles["sources/melee/inf/pions/common/missions/Barrer.bms"] = true

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JCR 03-02-20 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Inf/Pions/Common/Missions/Barrer.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 23/08/05 15:21 $
]]--[[// $Revision: 20 $
]]--[[// $Workfile: Barrer.hal $
]]--[[//
]]--[[// *****************************************************************************
]]

--[[//=============================================================================
]]--[[//						Squelette de Mission Barrer 
]]--[[//=============================================================================
]]node "BEH_Mission_Pion_INF_Barrer"
{
    activations =
    {
        { "BEH_Mot_Pion_Embarquer", {} },
        { "BEH_Dep_Pion_INF_MiseEnPlace_Mission", {} },
        { "ACT_RC", {} },
        { "ACT_MAJ_EtatPhaseMission", {} },
        { "BEH_Dispositif_Pion_VAB_InstallationDefensive", {} },
        { "ACT_Misc_Pion_DelaiInstallation", {} },
        { "BEH_Eni_Pion_INF_Tenir", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        self.mission = self.mission or DEC_GetMission( myself )
        self.ePhase = self.ePhase or eSeMettreEnPlace
        self.eAction = self.eAction or eActionEnCours
        do
        end

        switch_1 = self.ePhase
            if switch_1 == eSeMettreEnPlace then
                if( self.eAction == eActionEffectuee ) then
                    do
                        self.eAction = eActionEnCours
                                                do
                            self.ePhase = eInstallerDispositif
                                                        self.params.__returnValue = self.ePhase
                            return

                        end

                    end
                end

                Activate( self.activations.BEH_Mot_Pion_Embarquer, 1, {} )
                --[[// Rejoins une position d'observation de la position a Barrer
]]Activate( self.activations.BEH_Dep_Pion_INF_MiseEnPlace_Mission, 1, setmetatable( { M_TEMPS_PREPARATION_MISSION(), self.mission.positionABarrer_, true, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eAction = v else rawset( t, k, v ) end end } ) )
                
            elseif switch_1 == eInstallerDispositif then
                --[[// Lorsque la preparation est terminee, on reste en Attente	
]]Activate( self.activations.ACT_RC, 1, { eRC_ArriveSurPosition, } )
                Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_InstallationDispositif, } )
                --[[// action ACT_MAJ_EtatPhaseMission( eEtatPhaseMission_ArriveSurLocalisation );				
]]--[[// detectabilite tres faible
]]--[[// vulnerabilite faible								
]]StartActivate( self.activations.BEH_Dispositif_Pion_VAB_InstallationDefensive, 1, { self.mission.positionABarrer_, false, } )
                if( self.eAction == eActionEffectuee ) then
                    do
                        self.eAction = eActionEnCours
                                                do
                            self.ePhase = eSurveiller
                                                        self.params.__returnValue = self.ePhase
                            return

                        end

                    end
--[[// Temps de mise en place du dispositif
]]                end

                Activate( self.activations.ACT_Misc_Pion_DelaiInstallation, 1, setmetatable( { eNiveauInstallation_PosteAmenage, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eAction = v else rawset( t, k, v ) end end } ) )
                
            elseif switch_1 == eSurveiller then
                --[[// action ACT_RC( eRC_DispositifInstalle );
]]--[[// action ACT_MAJ_EtatPhaseMission( eEtatPhaseMission_Tenir );
]]Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_DispositifInstalle, } )
                Activate( self.activations.BEH_Eni_Pion_INF_Tenir, 1, { 1.5, } )
                
            
            else
                        end

                self.params.__returnValue = self.ePhase
        return

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_Barrer, "BEH_Mot_Pion_Embarquer", nodes.BEH_Mot_Pion_Embarquer }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_Barrer, "BEH_Dep_Pion_INF_MiseEnPlace_Mission", nodes.BEH_Dep_Pion_INF_MiseEnPlace_Mission }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_Barrer, "ACT_RC", nodes.ACT_RC }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_Barrer, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_Barrer, "BEH_Dispositif_Pion_VAB_InstallationDefensive", nodes.BEH_Dispositif_Pion_VAB_InstallationDefensive }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_Barrer, "ACT_Misc_Pion_DelaiInstallation", nodes.ACT_Misc_Pion_DelaiInstallation }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_Barrer, "BEH_Eni_Pion_INF_Tenir", nodes.BEH_Eni_Pion_INF_Tenir }
