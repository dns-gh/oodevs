includedFiles = includedFiles or {}
includedFiles["sources/melee/inf/pions/son hot/missions/Barrer.bms"] = true

include "bit.lua"


--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JCR 03-02-20 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Inf/Pions/Son Hot/Missions/Barrer.hal $
]]--[[// $Author: Jcr $
]]--[[// $Modtime: 22/09/05 18:25 $
]]--[[// $Revision: 21 $
]]--[[// $Workfile: Barrer.hal $
]]--[[//
]]--[[// *****************************************************************************
]]
node "MIS_Pion_INF_Barrer"
{
    activations =
    {
        { "BEH_Misc_Pion_DefinirTypeMission", { "onHalt" } },
        { "BEH_MAJ_AgressiviteMission", { "onHalt" } },
        { "BEH_Ordre_Inopine", { "onHalt" } },
        { "BEH_Mission_Pion_INF_Barrer", { "onHalt" } },
        { "ACT_MAJ_EtatPhaseMission", { "onHalt" } },
        { "BEH_Poste_Pion_INF_TomberEnGarde", { "onHalt" } },
    },

    onHalt = OnHalt,

    feedbacks = { { { "onHalt" }, "MIS_Pion_INF_Barrer" } },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        self.eAction = self.eAction or eActionEnCours
        self.eActionPAP = self.eActionPAP or eActionEnCours
        self.eEtatPhase = self.eEtatPhase or eActionEnCours
        self.ePhase = self.ePhase or eBarrer
        self.eCurrentPhase = self.eCurrentPhase or eInstallerDispositif
        if( ModuleBegins() ) then
            do
                DEC_SetMission( myself, self._namedParams.mission )
                F_Pion_SeteEtatEchelon( myself, eEtatEchelon_Premier )
                F_Pion_SeteEtatAmbiance( myself, eEtatAmbiance_Vitesse )
                DEC_Trace( "Mission 'Barrer' : debut" )
            end
        end

        Activate( self.activations.BEH_Misc_Pion_DefinirTypeMission, 1, { eTypeContact_Defensif, } )
        Activate( self.activations.BEH_MAJ_AgressiviteMission, 1, { eReconnu, M_TIR_PH_MISSION_STATIQUE(), } )
        self.eEtatOrdreFinMission = self.eEtatOrdreFinMission or eActionEnCours
        Activate( self.activations.BEH_Ordre_Inopine, 1, setmetatable( {}, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eEtatOrdreFinMission = v else rawset( t, k, v ) end end } ) )
        if( self.eEtatOrdreFinMission == eActionHalt ) then
            do
                self.ePhase = eSeReplier
                self.eAction = eActionEnCours
                self.eEtatOrdreFinMission = eActionEnCours
            end
        end

         do
            local switch_1 = self.ePhase
            local cases_switch_1 = {}
                if switch_1 == eBarrer then
                    if( self.eCurrentPhase == eFinMission or self.eEtatPhase == eActionHalt ) then
                        do
                            self.eAction = eActionEnCours
                            self.ePhase = eFinMission
                                                        return

                        end
                    end

                    if( self.eAction == eActionEffectuee ) then
                        do
                            self.eAction = eActionEnCours
                                                        do
                                self.ePhase = eFinMission
                                                                return

                            end

                        end
                    end

                    Activate( self.activations.BEH_Mission_Pion_INF_Barrer, 1, setmetatable( {}, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eCurrentPhase = v else rawset( t, k, v ) end end } ) )
                    
                                cases_switch_1[1] = true
elseif switch_1 == eFinMission then
                    if( self.eAction == eActionEffectuee ) then
                        do
                            self.eAction = eActionEnCours
                                                        do
                                --[[//-----------------------------------------------------------------------------
]]--[[// On rend compte de la mission
]]--[[//-----------------------------------------------------------------------------
]]DEC_Trace( "Mission 'Barrer' : fin" )
                                                                do
                                    if( not DEC_Agent_AutomateEstEmbraye() ) then
                                        DEC_RC( eRC_FinMission )
                                    else
                                        DEC_Message( eRC_FinMission )
                                    end

                                end

                                DEC_FinMission()
                                                                self.params.__returnValue = eActionEffectuee
                                Feedback( self.feedbacks["onHalt"], { "MIS_Pion_INF_Barrer" } )
Halt( self )
                                do return end

                            end

                        end
                    end

                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_FinMission, } )
                    Activate( self.activations.BEH_Poste_Pion_INF_TomberEnGarde, 1, setmetatable( { false, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eAction = v else rawset( t, k, v ) end end } ) )
                    
                                cases_switch_1[2] = true

                else
                                end
            end

    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Pion_INF_Barrer = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Barrer, "BEH_Misc_Pion_DefinirTypeMission", nodes.BEH_Misc_Pion_DefinirTypeMission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Barrer, "BEH_MAJ_AgressiviteMission", nodes.BEH_MAJ_AgressiviteMission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Barrer, "BEH_Ordre_Inopine", nodes.BEH_Ordre_Inopine }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Barrer, "BEH_Mission_Pion_INF_Barrer", nodes.BEH_Mission_Pion_INF_Barrer }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Barrer, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Barrer, "BEH_Poste_Pion_INF_TomberEnGarde", nodes.BEH_Poste_Pion_INF_TomberEnGarde }
