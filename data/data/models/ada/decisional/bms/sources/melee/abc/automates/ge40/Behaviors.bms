includedFiles = includedFiles or {}
includedFiles["sources/melee/abc/automates/ge40/Behaviors.bms"] = true

use_priority = no

max_instances = 200

max_activations = 200


actuators = {
etat_OrdreCoordination = 1,
releve = 1,
}


include "Melee/Abc/Automates/Common/Behaviors.bms"

include "Melee/Abc/Automates/GE40/Actions.bms"

include "Melee/Abc/Automates/GE40/Missions/Missions.bms"


--[[// *****************************************************************************
]]--[[// BEH_GTIA_AFFICHE_temp
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]node "BEH_GTIA_AFFICHE_temp"
{
    activations =
    {
        { "ACT_AFFICHE_EtatDecisionnel", { "onHalt" } },
    },

    onHalt = OnHalt,

    feedbacks = { { { "onHalt" }, "BEH_GTIA_AFFICHE_temp" } },

    create = function( self )
    end,

    activate = function( self )
        Activate( self.activations.ACT_AFFICHE_EtatDecisionnel, 1, { "--------------", "--------------", } )
        if( g_rEstimationDelais == 1 ) then
            Activate( self.activations.ACT_AFFICHE_EtatDecisionnel, 1, { "DELAIS", "-- COURTS -- ", } )
        else
            Activate( self.activations.ACT_AFFICHE_EtatDecisionnel, 1, { "INTERPRETATION RETARD", "-- CONFORTABLE -- ", } )
        end

        if( S_AnalyseDelai_GE_EstEnRetard() ) then
            Activate( self.activations.ACT_AFFICHE_EtatDecisionnel, 1, { "INTERPRETATION RETARD", FloatToString( g_rEstimationRetard ) .. " -- retard -- ", } )
        else
            Activate( self.activations.ACT_AFFICHE_EtatDecisionnel, 1, { "INTERPRETATION RETARD", FloatToString( g_rEstimationRetard ) .. " ** OK **", } )
        end

        Activate( self.activations.ACT_AFFICHE_EtatDecisionnel, 1, { "ENI embarques", FloatToString( g_rRapEniEmbarques ) .. " --", } )
        Activate( self.activations.ACT_AFFICHE_EtatDecisionnel, 1, { "ENI debarques", FloatToString( g_rRapEniDebarques ) .. " --", } )
        Activate( self.activations.ACT_AFFICHE_EtatDecisionnel, 1, { "Terrain cloisonne", FloatToString( g_rRapTerrainComp ) .. " **", } )
        Activate( self.activations.ACT_AFFICHE_EtatDecisionnel, 1, { "Terrain ouvert", FloatToString( g_rRapTerrainOuvert ) .. " **", } )
    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_GTIA_AFFICHE_temp, "ACT_AFFICHE_EtatDecisionnel", nodes.ACT_AFFICHE_EtatDecisionnel }
