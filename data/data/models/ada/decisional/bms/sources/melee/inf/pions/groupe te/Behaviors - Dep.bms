includedFiles = includedFiles or {}
includedFiles["sources/melee/inf/pions/groupe te/Behaviors - Dep.bms"] = true

include "bit.lua"


--[[// *****************************************************************************
]]--[[/** \file S VAB - Behaviors - Deplacement.hal
 *
 * $Author: Ggr $
 * $Modtime: 22/08/05 16:07 $
 * $Revision: 19 $
 *
 */]]--[[// Created: JCR 03-02-12
]]--[[// *****************************************************************************
]]--[[//=============================================================================
]]
--[[//
]]--[[// Ensemble des comportements lies au deplacement
]]--[[//
]]
--[[//=============================================================================
]]

--[[// Rejoint la derniere une position ennemi
]]--[[// Si celui-ci se deplace de plus de 1200 de sa position d'origine, on 
]]--[[// recalcule l'itineraire
]]--[[//=============================================================================
]]
node "BEH_Dep_Pion_INF_AborderEnnemi"
{
    feedbacks = { { { "done_BEH_Dep_Pion_INF_AborderEnnemi" }, "BEH_Dep_Pion_INF_AborderEnnemi" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Dep_Pion_INF_AborderEnnemi, {value} ) end,
    activations =
    {
        { "BEH_Dep_ProgressionVers", { "done_BEH_Dep_ProgressionVers" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ksEni = self.params[1]
    end,

    activate = function( self )
                self.eActionDeplacement = self.eActionDeplacement or eActionEnCours
        self.ptPosition_Ennemie = self.ptPosition_Ennemie or DEC_Geometrie_CreerPoint()
        --[[// Si l'ennemi s'eloigne de plus de 300m, on essaie de revenir dessus
]]local ptEni_Courant = DEC_ConnaissanceAgent_Position( self._namedParams.ksEni )
        if( ModuleBegins() ) then
            do
                DEC_Copie_Point( ptEni_Courant, self.ptPosition_Ennemie )
            end
--[[// Si l'ennemi s'est deplace de plus de 1200 on recalcule tout.					
]]        end

        if( self.eActionDeplacement == eActionEffectuee ) then
            do
                self.eActionDeplacement = eActionEnCours
                                do
                    if( S_Geometrie_EstProchePosition( DEC_Agent_Position(), ptEni_Courant, 100 ) ) then
                        self:SendFeedback( eActionEffectuee )
                        do return end
                    end

                    DEC_Copie_Point( ptEni_Courant, self.ptPosition_Ennemie )
                end

            end
        end

        if( not S_Geometrie_EstProchePosition( self.ptPosition_Ennemie, ptEni_Courant, 1200 ) or not ( S_Eni_EstEnMouvement( self._namedParams.ksEni ) or S_Geometrie_EstProchePosition( self.ptPosition_Ennemie, ptEni_Courant, 300 ) ) ) then
            do
                DEC_Copie_Point( ptEni_Courant, self.ptPosition_Ennemie )
                                self:SendFeedback( eActionEnPause )
                do return end

            end
        end

        Activate( self.activations.BEH_Dep_ProgressionVers, 1, { self.ptPosition_Ennemie, eProgressionDirect, eTypeItiAttaque, } )
self.done_BEH_Dep_ProgressionVers = function( self, _, v ) self.eActionDeplacement = v[1] end
    end,

    destroy = function( self )
            end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Dep_Pion_INF_AborderEnnemi, "BEH_Dep_ProgressionVers", nodes.BEH_Dep_ProgressionVers }
