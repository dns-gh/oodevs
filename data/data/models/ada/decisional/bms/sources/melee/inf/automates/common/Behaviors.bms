includedFiles = includedFiles or {}
includedFiles["sources/melee/inf/automates/common/Behaviors.bms"] = true

include "bit.lua"


--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JCR 03-06-18 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Inf/Automates/Common/Behaviors.hal $
]]--[[// $Author: Jcr $
]]--[[// $Modtime: 23/09/05 15:11 $
]]--[[// $Revision: 24 $
]]--[[// $Workfile: Behaviors.hal $
]]--[[//
]]--[[// *****************************************************************************
]]

include "Common/Automates/Behaviors.bms"

include "Common/Automates/Behaviors/Medo/Behaviors - Medo - INF.bms"

include "Common/Automates/Behaviors/Medo/Behaviors - Medo - ABC.bms"


include "Melee/Inf/Automates/Common/Actions.bms"


include "Melee/Inf/Automates/Common/Behaviors Conduite.bms"


include "Melee/Inf/Automates/Common/Missions/Behaviors.bms"



--[[// *****************************************************************************
]]--[[// BEH_Defaut
]]--[[//
]]--[[// Commentaires: 
]]--[[//
]]--[[// *****************************************************************************
]]node "BEH_Defaut"
{
    activations =
    {
        { "BEH_RC_Automate_Situation", {} },
        { "BEH_Nbc_Automate_GererAlerteNiv4", {} },
        { "BEH_ROE_Automate_GererOrdre", {} },
        { "BEH_Misc_Automate_GererLesMoyens", {} },
        { "BEH_Rens_Automate_GererSilenceRadio", {} },
        { "BEH_Ordre_Automate_RecevoirOrdreInopine", {} },
        { "BEH_Ordre_Automate_INF_GererTransporteur", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.nDummy = self.params[1]
    end,

    activate = function( self )
        Activate( self.activations.BEH_RC_Automate_Situation, 1, {} )--[[// ---------------------------------------------------------------------
]]--[[// CR automates génériques sur eni et situation mission
]]--[[// ---------------------------------------------------------------------
]]
        --[[// ========================== En embrayé SEULEMENT =========================
]]if( not DEC_Automate_EstEmbraye() ) then
            return
        end

        Activate( self.activations.BEH_Nbc_Automate_GererAlerteNiv4, 1, {} )--[[//--------------------------------------------------------------------------
]]--[[// NBC --> alerte de niveau 4
]]--[[//--------------------------------------------------------------------------
]]
        Activate( self.activations.BEH_ROE_Automate_GererOrdre, 1, {} )--[[//--------------------------------------------------------------------------
]]--[[// ROE --> Tir libre, sur riposte, interdit
]]--[[//--------------------------------------------------------------------------
]]
        Activate( self.activations.BEH_Misc_Automate_GererLesMoyens, 1, {} )--[[//--------------------------------------------------------------------------
]]--[[// Gestion des pions --> init de la place dans le dispositif
]]--[[//--------------------------------------------------------------------------
]]
        Activate( self.activations.BEH_Rens_Automate_GererSilenceRadio, 1, {} )--[[//--------------------------------------------------------------------------
]]--[[// Silence radio
]]--[[//--------------------------------------------------------------------------
]]
        --[[// Lorsque l'automate a une mission	
]]--[[// =========================================================================
]]if( ( DEC_GetMission( myself ) == 0 or DEC_GetMission( myself ) == nil ) ) then
            return
        end

        Activate( self.activations.BEH_Ordre_Automate_RecevoirOrdreInopine, 1, {} )--[[// Gestion des Ordres venant du GTIA
]]--[[//-------------------------------------------------------------------------- 	 	
]]
        Activate( self.activations.BEH_Ordre_Automate_INF_GererTransporteur, 1, {} )--[[// Gestion de l'ordre de conduite permettant de recuperer les transporteurs
]]--[[//-------------------------------------------------------------------------- 	 	
]]
    end,

--[[//-----------------------------------------------------------------------------
]]--[[// Gestion de la Fin de mission Automate
]]--[[//-----------------------------------------------------------------------------
]]}

node "BEH_Situation_Automate_INF_FinDeMission_Sur"
{
    activations =
    {
        { "BEH_Situation_Automate_INF_FinDeMission", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.pion = self.params[1]
    end,

    activate = function( self )
        if( ModuleBegins() ) then
            DEC_Trace( DEC_GetSzName( self._namedParams.pion ) .. " : fin de mission." )
        end

        Activate( self.activations.BEH_Situation_Automate_INF_FinDeMission, 1, {} )
    end,

}

node "BEH_Situation_Automate_INF_FinDeMission"
{
    create = function( self )
    end,

    activate = function( self )
        --[[// Revoir	 
]]self.lst_Pions_EnTete = self.lst_Pions_EnTete or S_ObtenirTousPionsDe( eEtatEchelon_Premier )
        --[[// On laisse un pas de temps pour la MAJ de S_PionsEnTete()	
]]if( ( #( self.lst_Pions_EnTete ) == 0 or #( self.lst_Pions_EnTete ) == nil ) ) then
            do
                                do
                end

                self.lst_Pions_EnTete = S_ObtenirTousPionsDe( eEtatEchelon_Premier )
                                self.params.__returnValue = eActionEnCours
                return

            end
        end

        local rFinDeMission = #( self.lst_Pions_EnTete ) + 1
        do
        end

        do
        end

        if( GetActivity() >= rFinDeMission ) then
            self.params.__returnValue = eActionEffectuee
            return
        end

                self.params.__returnValue = eActionEnCours
        return

    end,

}

node "BEH_Ordre_Automate_INF_GererTransporteur"
{
    activations =
    {
        { "ACT_Ordre_Suppression", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        --[[// =============================================================================
]]--[[// Reception d'un ordre de l'ANIBAS
]]--[[// =============================================================================
]]local ordres_recus = DEC_GetCategory( "ordres_recus" )
        for _,x in pairs( ordres_recus ) do
        local _continue = true
do
                local repOrdre = x
                if( repOrdre:GetType() == "Rep_OrderConduite_RecupererTransporteurs" ) then
                    do
                    end
--[[//$$$$GGR : WARNING JCR
]]--[[//with ( x_pion in DEC_Automate_PionsAvecPC() )				
]]--[[//	DEC_CDT_DonneOrderConduiteAPion( x_pion, Rep_OrderConduite_RecupererTransporteurs );
]]                end

                Activate( self.activations.ACT_Ordre_Suppression, 1, { x, } )
            end

        end

    end,

--[[//Ajout LLS pour mission Soutenir 28/02/2007
]]}

node "BEH_Conduite_Automate_HOT_Defaut"
{
    activations =
    {
        { "BEH_Dispositif_Automate_INF_GererLesPionsDetruits", {} },
        { "BEH_Dispositif_Automate_INF_GererReleve", {} },
        { "BEH_Conduite_Automate_INF_GererAppuis_INF", {} },
        { "BEH_Conduite_Automate_INF_GererAppuis_ABC", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        --[[// Gestion des pions detruits		
]]Activate( self.activations.BEH_Dispositif_Automate_INF_GererLesPionsDetruits, 1, { true, } )
        Activate( self.activations.BEH_Dispositif_Automate_INF_GererReleve, 1, {} )
        Activate( self.activations.BEH_Conduite_Automate_INF_GererAppuis_INF, 1, {} )--[[//-------------------------------------------------------------------------
]]--[[// Coordination du front
]]--[[//-------------------------------------------------------------------------		
]]
        Activate( self.activations.BEH_Conduite_Automate_INF_GererAppuis_ABC, 1, {} )
    end,

--[[// behavior BEH_Conduite_Automate_Gerer_UniteInconnues();	
]]--[[// *****************************************************************************
]]--[[// BEH_RC_Automate_GererConditionOperationnelle
]]--[[//
]]--[[// Commentaires:s
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_RC_Automate_GererConditionOperationnelle"
{
    activations =
    {
        { "ACT_Warning", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.eEtatEchelon = self.params[1]
    end,

    activate = function( self )
        --[[//-----------------------------------------------------------------------------
]]--[[// Gerer la condition opérationnelle de l'echelon
]]--[[//-----------------------------------------------------------------------------
]]local listePEcl = S_ObtenirTousPionsDe( eEtatEchelon_Eclairage )
        local listePE = S_ObtenirTousPionsDe( eEtatEchelon_Premier )
         do
            local switch_1 = self._namedParams.eEtatEchelon
            local cases_switch_1 = {}
                if switch_1 == eEtatEchelon_Premier then
                    if( DIA_IsListEmpty( listePE ) ) then
                        Activate( self.activations.ACT_Warning, 1, { eRC_MissionImpossibleUnitesSubordonneesNonOperationnelles, } )
                    end

                    
                                cases_switch_1[1] = true
elseif switch_1 == eEtatEchelon_Eclairage then
                    if( DIA_IsListEmpty( listePE ) and DIA_IsListEmpty( listePEcl ) ) then
                        Activate( self.activations.ACT_Warning, 1, { eRC_MissionImpossibleUnitesSubordonneesNonOperationnelles, } )
                    end

                    
                                cases_switch_1[2] = true
                end
            end

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_HOT_Defaut, "BEH_Dispositif_Automate_INF_GererLesPionsDetruits", nodes.BEH_Dispositif_Automate_INF_GererLesPionsDetruits }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_HOT_Defaut, "BEH_Dispositif_Automate_INF_GererReleve", nodes.BEH_Dispositif_Automate_INF_GererReleve }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_HOT_Defaut, "BEH_Conduite_Automate_INF_GererAppuis_INF", nodes.BEH_Conduite_Automate_INF_GererAppuis_INF }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_HOT_Defaut, "BEH_Conduite_Automate_INF_GererAppuis_ABC", nodes.BEH_Conduite_Automate_INF_GererAppuis_ABC }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_RC_Automate_Situation", nodes.BEH_RC_Automate_Situation }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Nbc_Automate_GererAlerteNiv4", nodes.BEH_Nbc_Automate_GererAlerteNiv4 }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_ROE_Automate_GererOrdre", nodes.BEH_ROE_Automate_GererOrdre }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Misc_Automate_GererLesMoyens", nodes.BEH_Misc_Automate_GererLesMoyens }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Rens_Automate_GererSilenceRadio", nodes.BEH_Rens_Automate_GererSilenceRadio }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Ordre_Automate_RecevoirOrdreInopine", nodes.BEH_Ordre_Automate_RecevoirOrdreInopine }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Ordre_Automate_INF_GererTransporteur", nodes.BEH_Ordre_Automate_INF_GererTransporteur }
connections[ #connections + 1 ] = { nodes.BEH_Ordre_Automate_INF_GererTransporteur, "ACT_Ordre_Suppression", nodes.ACT_Ordre_Suppression }
connections[ #connections + 1 ] = { nodes.BEH_RC_Automate_GererConditionOperationnelle, "ACT_Warning", nodes.ACT_Warning }
connections[ #connections + 1 ] = { nodes.BEH_Situation_Automate_INF_FinDeMission_Sur, "BEH_Situation_Automate_INF_FinDeMission", nodes.BEH_Situation_Automate_INF_FinDeMission }
