includedFiles = includedFiles or {}
includedFiles["sources/melee/inf/automates/sgpt inf ac/missions/couparret/CoupArret MRT.bms"] = true

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JCR 03-07-29 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Inf/Automates/Sgpt Inf Ac/Missions/CoupArret/CoupArret MRT.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 24/05/05 13:56 $
]]--[[// $Revision: 15 $
]]--[[// $Workfile: CoupArret MRT.hal $
]]--[[//
]]--[[// *****************************************************************************
]]


--[[//=============================================================================
]]--[[// 
]]--[[// Description :
]]--[[// 
]]--[[// S’installant sur une zone favorable, il s’agit, pour le sous-groupement, 
]]--[[// d’infliger à l’ennemi des pertes  telles qu’il soit contraint de marquer 
]]--[[// un temps d’arrêt.  L’exécution  de cette  mission  demande des délais de 
]]--[[// préparation et des renforcements tant en feux directs et indirects qu’en 
]]--[[// moyens de valorisation du terrain et de protection.
]]--[[//
]]--[[// Les missions « donner un coup d’arrêt » et « barrer une direction » sont 
]]--[[// généralement assorties d’une  notion  de durée afin de ne pas exposer, à 
]]--[[// terme, l’unité à un  rapport  de  forces incompatible avec ses capacités 
]]--[[// tactiques. Elles  peuvent  se   situer  dans  le  cadre  des missions de 
]]--[[// l’échelon supérieur suivantes : freiner, couvrir, recueillir.
]]--[[//
]]--[[// 
]]--[[// Parametres la mission:
]]--[[//
]]--[[// La mission doit imperativement contenir une LCAR (Ligne de Coup d'ARret).
]]--[[// C'est a partir de celle-ci que l'automate definit son dispositif.
]]--[[//
]]--[[//
]]--[[// 
]]--[[//
]]--[[//
]]--[[//=============================================================================
]]

node "MIS_Automate_MRT_INF_DonnerCoupArret"
{
    feedbacks = { { { "done_MIS_Automate_MRT_INF_DonnerCoupArret" }, "MIS_Automate_MRT_INF_DonnerCoupArret" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_MIS_Automate_MRT_INF_DonnerCoupArret, {value} ) end,
    activations =
    {
        { "BEH_Medo_Automate_INF_PreparerMission_Statique", { "done_BEH_Medo_Automate_INF_PreparerMission_Statique" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        local Activate = Activate
                self.eCreationMRT = self.eCreationMRT or eActionEnCours
        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                DEC_SetMission( myself, self._namedParams.mission )
                DEC_Trace( "MIS_Automate_MRT_INF_DonnerCoupArret : debut MRT" )
            end
--[[//-----------------------------------------------------------------------------
]]--[[// MRT creee
]]--[[//-----------------------------------------------------------------------------
]]        end

        if( self.eCreationMRT == eActionImpossible ) then
            do
                                do
                    DEC_RC( eRC_MissionImpossible )
                end

                                self:SendFeedback( eActionImpossible )
                Halt( self )
                do return end

            end
        end

        if( self.eCreationMRT == eActionEffectuee ) then
            do
                self.eCreationMRT = eActionEnCours
                                do
                    DEC_Trace( "MIS_Automate_MRT_INF_DonnerCoupArret : fin MRT" )
                    DEC_MRT_Valide()
                                        self:SendFeedback( eActionEffectuee )
                    Halt( self )
                    do return end

                end

            end
--[[//-----------------------------------------------------------------------------
]]--[[// Modalité d'exécution
]]--[[//-----------------------------------------------------------------------------
]]        end

        Activate( self.activations.BEH_Medo_Automate_INF_PreparerMission_Statique, 1, { "T_Mission_Automate_INF_DonnerCoupArret", 0, } )
self.done_BEH_Medo_Automate_INF_PreparerMission_Statique = function( self, _, v ) self.eCreationMRT = v[1] end
    end,

    destroy = function( self )
            end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Automate_MRT_INF_DonnerCoupArret = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.MIS_Automate_MRT_INF_DonnerCoupArret, "BEH_Medo_Automate_INF_PreparerMission_Statique", nodes.BEH_Medo_Automate_INF_PreparerMission_Statique }
