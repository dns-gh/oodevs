includedFiles = includedFiles or {}
includedFiles["sources/glaise/glaise_melee/abc/automates/common/Types.bms"] = true

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: MIA 02-11-08 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Abc/Automates/Common/Types.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 13/05/05 16:30 $
]]--[[// $Revision: 8 $
]]--[[// $Workfile: Types.hal $
]]--[[//
]]--[[// *****************************************************************************
]]

--[[// -----------------------------------------------------------------------------
]]--[[// ABC
]]--[[// -----------------------------------------------------------------------------
]]--[[/*
typedef struct T_Mission_Automate_ABC_Appuyer  : T_Mission_Automate
{
    T_Automate  compagnie_;
};

typedef struct T_Mission_Automate_ABC_Attaquer  : T_Mission_Automate
{
    T_ListeLocalisations     objectifs_;
};

typedef struct T_Mission_Automate_ABC_ContreAttaquer  : T_Mission_Automate
{
    T_ListeLocalisations     objectifs_;
};

typedef struct T_Mission_Automate_ABC_Controler  : T_Mission_Automate
{
    T_Localisation  secteur_;
    T_Localisation  pointRegroupement_;
};

typedef struct T_Mission_Automate_ABC_Couvrir  : T_Mission_Automate
{
    T_Automate     compagnie_;
    T_Localisation zone_;
};

typedef struct T_Mission_Automate_ABC_Soutenir  : T_Mission_Automate
{
    T_Automate compagnie_;
};

typedef struct T_Mission_Automate_ABC_DonnerCoupArret  : T_Mission_Automate
{
    T_Localisation  pointRegroupement_;
};

typedef struct T_Mission_Automate_ABC_Eclairer  : T_Mission_Automate
{
};

typedef struct T_Mission_Automate_ABC_EffectuerRaid  : T_Mission_Automate
{
    T_ListeLocalisations     objectifs_;
};

typedef struct T_Mission_Automate_ABC_Fixer  : T_Mission_Automate
{
    T_ConnaissanceAgentListe ennemis_;
};

typedef struct T_Mission_Automate_ABC_Freiner  : T_Mission_Automate
{
};

typedef struct T_Mission_Automate_ABC_FlancGarder : T_Mission_Automate
{
    T_Pion compagnie_;
};

typedef struct T_Mission_Automate_ABC_Interdire  : T_Mission_Automate
{
};

typedef struct T_Mission_Automate_ABC_Jalonner  : T_Mission_Automate
{
};

typedef struct T_Mission_Automate_ABC_PrendrePreciserContact  : T_Mission_Automate
{
};

typedef struct T_Mission_Automate_ABC_Reconnaitre  : T_Mission_Automate
{
};

typedef struct T_Mission_Automate_ABC_ReconnaitrePoint  : T_Mission_Automate
{
    T_Localisation  point_;
};

typedef struct T_Mission_Automate_ABC_Reduire  : T_Mission_Automate
{
    T_Localisation zoneResistance_;
};

typedef struct T_Mission_Automate_ABC_ReleverEnDepassant  : T_Mission_Automate
{
    T_Automate  compagnie_;
};

typedef struct T_Mission_Automate_ABC_RenseignerItineraire  : T_Mission_Automate
{
    T_ListePoints    itineraire_;
};

typedef struct T_Mission_Automate_ABC_RenseignerPointLigne  : T_Mission_Automate
{
    T_Localisation  localisation_;
};

typedef struct T_Mission_Automate_ABC_RenseignerSecteur  : T_Mission_Automate
{
    T_Localisation  localisation_;
};

typedef struct T_Mission_Automate_ABC_Semparer  : T_Mission_Automate
{
    T_Localisation  objectif_;
};

typedef struct T_Mission_Automate_ABC_SurveillerItineraire  : T_Mission_Automate
{
    T_ListePoints   itineraire_;
};

typedef struct T_Mission_Automate_ABC_Tenir  : T_Mission_Automate
{
    T_Localisation  zone_;
};

typedef struct T_Mission_Automate_ABC_Surveiller : T_Mission_Automate
{
    T_Localisation  zone_;
    T_Localisation  pointRegroupement_;
};


typedef struct T_Mission_Automate_ABC_RenseignerSurUnAxe : T_Mission_Automate
{
    T_ListePoints itineraire_;
};

typedef struct T_Mission_Automate_ABC_RenseignerSur : T_Mission_Automate
{
    T_Localisation zone_;
};
*/]]
