includedFiles = includedFiles or {}
includedFiles["sources/glaise/glaise_melee/inf/pions/son inf meca/missions/Freiner.bms"] = true

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JDY 02-11-06 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Inf/Pions/Son Vab/Missions/Freiner.hal $
]]--[[// $Author: Jcr $
]]--[[// $Modtime: 22/09/05 18:29 $
]]--[[// $Revision: 21 $
]]--[[// $Workfile: Freiner.hal $
]]--[[//
]]--[[// *****************************************************************************
]]node "MIS_Pion_INF_Freiner"
{
    feedbacks = { { { "done_MIS_Pion_INF_Freiner" }, "MIS_Pion_INF_Freiner" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_MIS_Pion_INF_Freiner, {value} ) end,
    activations =
    {
        { "BEH_Misc_Pion_DefinirTypeMission", { "done_BEH_Misc_Pion_DefinirTypeMission" } },
        { "BEH_MAJ_AgressiviteMission", { "done_BEH_MAJ_AgressiviteMission" } },
        { "BEH_Ordre_Inopine", { "done_BEH_Ordre_Inopine" } },
        { "ACT_Ordre_Suppression", { "done_ACT_Ordre_Suppression" } },
        { "BEH_Mission_Pion_INF_Freiner", { "done_BEH_Mission_Pion_INF_Freiner" } },
        { "ACT_MAJ_EtatPhaseMission", { "done_ACT_MAJ_EtatPhaseMission" } },
        { "BEH_Poste_Pion_INF_TomberEnGarde", { "done_BEH_Poste_Pion_INF_TomberEnGarde" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        local Activate = Activate
                self.ePhaseMission = self.ePhaseMission or eSeMettreEnPlace
        self.ePhase = self.ePhase or eFreiner
        self.eAction = self.eAction or eActionEnCours
        self.eActionOrdre = self.eActionOrdre or eActionEnCours
        if( ModuleBegins() ) then
            do
                DEC_GetMission( myself )
                F_Pion_SeteEtatEchelon( myself, eEtatEchelon_Premier )
                F_Pion_SeteEtatAmbiance( myself, eEtatAmbiance_Vitesse )
                DEC_Trace( "Mission 'Freiner' : debut" )
                DEC_Trace( "Direction Dangereuse : " .. DEC_DirectionToString( self._namedParams.mission.dirDangereuse_ ) )
            end
        end

        Activate( self.activations.BEH_Misc_Pion_DefinirTypeMission, 1, { eTypeContact_Defensif, } )
        Activate( self.activations.BEH_MAJ_AgressiviteMission, 1, { eReconnu, M_TIR_PH_MISSION_DETRUIRE(), } )
        --[[// ----------------------------------------------------------------------------		
]]--[[// Reception des ordres principaux de la mission
]]--[[// ----------------------------------------------------------------------------				
]]if( self.eActionOrdre == eActionHalt ) then
            do
                self.ePhase = eFinMission
                self.eActionOrdre = eActionEnCours
                self.eAction = eActionEnCours
            end
        end

        Activate( self.activations.BEH_Ordre_Inopine, 1, {} )
self.done_BEH_Ordre_Inopine = function( self, _, v ) self.eActionOrdre = v[1] end
        local ordres_recus = DEC_GetCategory( "ordres_recus" )
        for _,x in pairs( ordres_recus or {} ) do
        local _continue = true
do
                local ordre = x
                --[[//-----------------------------------------------------------------
]]--[[// ordre de conduite
]]--[[//-----------------------------------------------------------------
]]local repOrdre = ordre
                local bDel = true
                 do
                    local _continue = true
                    local switch_1 = repOrdre:GetType()
                    local cases_switch_1 = {}
                        if switch_1 == "Rep_OrderConduite_Decrocher" then
                            SetStateVariable( "VE_SePoster", 0 )
                            _continue = false
                        --[[// ordre non reconnu a ce niveau
]]--[[// on ne le detruit pas
]]                        cases_switch_1[1] = true

                        else
                            bDel = false
                        end
                    end
--[[// on a finit de traiter l'ordre, on le supprime
]]
                if( bDel ) then
                    Activate( self.activations.ACT_Ordre_Suppression, 1, { repOrdre, } )
                end

            end

        end

        do
        end
--[[//=====================================================================
]]--[[// Mission Controler Secteur : squelette principal
]]--[[//=====================================================================
]]
         do
            local _continue = true
            local switch_1 = self.ePhase
            local cases_switch_1 = {}
                if switch_1 == eFreiner then
                    if( self.ePhaseMission ~= eFinMission ) then
                        do
                            Activate( self.activations.BEH_Mission_Pion_INF_Freiner, GetMotivation( "MOT_Mission" ), {} )
self.done_BEH_Mission_Pion_INF_Freiner = function( self, _, v ) self.ePhaseMission = v[1] end
                            _continue = false
                        end
                    else
                        self.ePhase = eFinMission
                    end

                --[[// Fin de mission
]]                cases_switch_1[1] = true
elseif switch_1 == eFinMission then
                    if( self.eAction == eActionEffectuee ) then
                        do
                            self.eAction = eActionEnCours
                                                        do
                                DEC_FinMission()
                                                                self:SendFeedback( eActionEffectuee )
                                Halt( self )
                                do return end

                            end

                        end
                    end

                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_FinMission, } )
                    Activate( self.activations.BEH_Poste_Pion_INF_TomberEnGarde, 1, { true, } )
self.done_BEH_Poste_Pion_INF_TomberEnGarde = function( self, _, v ) self.eAction = v[1] end
                    _continue = false
                                cases_switch_1[2] = true

                else
                                end
            end

    end,

    destroy = function( self )
            end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Pion_INF_Freiner = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Freiner, "BEH_Misc_Pion_DefinirTypeMission", nodes.BEH_Misc_Pion_DefinirTypeMission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Freiner, "BEH_MAJ_AgressiviteMission", nodes.BEH_MAJ_AgressiviteMission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Freiner, "BEH_Ordre_Inopine", nodes.BEH_Ordre_Inopine }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Freiner, "ACT_Ordre_Suppression", nodes.ACT_Ordre_Suppression }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Freiner, "BEH_Mission_Pion_INF_Freiner", nodes.BEH_Mission_Pion_INF_Freiner }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Freiner, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Freiner, "BEH_Poste_Pion_INF_TomberEnGarde", nodes.BEH_Poste_Pion_INF_TomberEnGarde }
