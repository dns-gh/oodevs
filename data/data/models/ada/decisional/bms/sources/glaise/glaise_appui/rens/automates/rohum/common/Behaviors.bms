includedFiles = includedFiles or {}
includedFiles["sources/glaise/glaise_appui/rens/automates/rohum/common/Behaviors.bms"] = true

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: MIA 02-11-08 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Appui/Rens/Automates/Rohum/Common/Behaviors.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 24/05/05 16:47 $
]]--[[// $Revision: 13 $
]]--[[// $Workfile: Behaviors.hal $
]]--[[//
]]--[[// *****************************************************************************
]]
--[[// Communs aux pions Rens
]]include "glaise/glaise_Appui/Rens/Automates/Rohum/Common/Actions.bms"

include "glaise/glaise_Appui/Rens/Automates/Rohum/Common/MRT generique.bms"


--[[// *****************************************************************************
]]--[[// Comportement par défaut.
]]--[[//
]]--[[// Commentaires: 
]]--[[//
]]--[[// *****************************************************************************
]]node "BEH_Defaut"
{
    activations =
    {
        { "BEH_Nbc_Automate_GererAlerteNiv4", {} },
        { "BEH_Rens_Automate_GererSilenceRadio", {} },
        { "BEH_ROE_Automate_GererOrdre", {} },
        { "BEH_Misc_Automate_GererLesMoyens", {} },
        { "BEH_Ordre_Automate_RecevoirOrdreInopine", {} },
        { "BEH_RC_Automate_Situation", {} },
        { "ACT_Info_Trace", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.nDummy = self.params[1]
    end,

    activate = function( self )
        --[[// ========================== En embrayé ET débrayé ===========================
]]--[[// ========================== En embrayé SEULEMENT ============================
]]if( not DEC_Automate_EstEmbraye() ) then
            do return end
        end

        Activate( self.activations.BEH_Nbc_Automate_GererAlerteNiv4, 1, {} )--[[//-----------------------------------------------------------------------------
]]--[[// NBC --> alerte de niveau 4
]]--[[//-----------------------------------------------------------------------------
]]
        Activate( self.activations.BEH_Rens_Automate_GererSilenceRadio, 1, {} )--[[//-----------------------------------------------------------------------------
]]--[[// Silence radio
]]--[[//-----------------------------------------------------------------------------
]]
        Activate( self.activations.BEH_ROE_Automate_GererOrdre, 1, {} )--[[//-----------------------------------------------------------------------------
]]--[[// ROE --> Tir libre, sur riposte, interdit
]]--[[//-----------------------------------------------------------------------------
]]
        Activate( self.activations.BEH_Misc_Automate_GererLesMoyens, 1, {} )--[[//-----------------------------------------------------------------------------
]]--[[// Gestion des pions --> init de la place dans le dispositif
]]--[[//-----------------------------------------------------------------------------
]]
        --[[//-----------------------------------------------------------------------------
]]--[[// Seulement pendant une mission
]]--[[//-----------------------------------------------------------------------------
]]if( ( DEC_GetMission( myself ) ~= 0 and DEC_GetMission( myself ) ~= nil ) ) then
            do
                Activate( self.activations.BEH_Ordre_Automate_RecevoirOrdreInopine, 1, {} )--[[// reception d'ordre venant du dessus
]]
                Activate( self.activations.BEH_RC_Automate_Situation, 1, {} )--[[//behavior BEH_Conduite_Automate_GererFuseau();
]]--[[// CR automates sur eni et situation mission
]]
            end
--[[//-----------------------------------------------------------------------------
]]--[[// TEMP // DEBUG
]]--[[//-----------------------------------------------------------------------------
]]        end

        local listePE = S_ObtenirTousPionsDe( eEtatEchelon_Premier )
        local listeSE = S_ObtenirTousPionsDe( eEtatEchelon_Second )
        Activate( self.activations.ACT_Info_Trace, 1, { "Nombre PE   ==> " .. FloatToString( #( listePE ) ), } )
        Activate( self.activations.ACT_Info_Trace, 1, { "Nombre SE   ==> " .. FloatToString( #( listeSE ) ), } )
    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Nbc_Automate_GererAlerteNiv4", nodes.BEH_Nbc_Automate_GererAlerteNiv4 }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Rens_Automate_GererSilenceRadio", nodes.BEH_Rens_Automate_GererSilenceRadio }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_ROE_Automate_GererOrdre", nodes.BEH_ROE_Automate_GererOrdre }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Misc_Automate_GererLesMoyens", nodes.BEH_Misc_Automate_GererLesMoyens }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Ordre_Automate_RecevoirOrdreInopine", nodes.BEH_Ordre_Automate_RecevoirOrdreInopine }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_RC_Automate_Situation", nodes.BEH_RC_Automate_Situation }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "ACT_Info_Trace", nodes.ACT_Info_Trace }
