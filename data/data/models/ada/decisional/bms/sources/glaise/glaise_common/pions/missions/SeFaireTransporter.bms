includedFiles = includedFiles or {}
includedFiles["sources/glaise/glaise_common/pions/missions/SeFaireTransporter.bms"] = true

--[[// *****************************************************************************
]]--[[// MIS_Pion_SeFaireTransporter
]]--[[//
]]--[[// Commentaires: 
]]--[[//
]]--[[// *****************************************************************************
]]node "MIS_Pion_SeFaireTransporter"
{
    feedbacks = { { { "done_MIS_Pion_SeFaireTransporter" }, "MIS_Pion_SeFaireTransporter" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_MIS_Pion_SeFaireTransporter, {value} ) end,
    activations =
    {
        { "BEH_Ordre_Inopine", { "done_BEH_Ordre_Inopine" } },
        { "ACT_MAJ_EtatPhaseMission", { "done_ACT_MAJ_EtatPhaseMission" } },
        { "BEH_Dep_ProgressionVers", { "done_BEH_Dep_ProgressionVers" } },
        { "BEH_Dep_SePosterFaceADirectionDangereuse", { "done_BEH_Dep_SePosterFaceADirectionDangereuse" } },
        { "ACT_Dep_Trans_TransportEnCours", { "done_ACT_Dep_Trans_TransportEnCours" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        self.ePhase = self.ePhase or ePreparerMission
        self.eEtat = self.eEtat or eActionEnCours
        self.aEteTransporte = self.aEteTransporte or false
        self.eEtatOrdreFinMission = self.eEtatOrdreFinMission or eActionEnCours
        Activate( self.activations.BEH_Ordre_Inopine, 1, {} )
self.done_BEH_Ordre_Inopine = function( self, _, v ) self.eEtatOrdreFinMission = v[1] end
        if( self.eEtatOrdreFinMission == eActionHalt ) then
            do
                self.ePhase = eFinMission
                self.eEtat = eActionEnCours
                self.eEtatOrdreFinMission = eActionEnCours
            end
--[[// Fin transport
]]        end

        if( DEC_Agent_EstTransporte() ) then
            self.ePhase = eFinMission
        end

        if( ModuleBegins() ) then
            do
                F_Pion_SeteEtatAmbiance( myself, eEtatAmbiance_Vitesse )
                DEC_SetMission( myself, self._namedParams.mission )
            end
--[[//=============================================================================
]]--[[// Calcule it et progression
]]--[[//=============================================================================
]]        end

         do
            local _continue = true
            local switch_1 = self.ePhase
            local cases_switch_1 = {}
                if switch_1 == ePreparerMission then
                    --[[// 1) Preparation de la mission
]]Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_DebutMission, } )
                    self.ePhase = eProgresser
                    _continue = false
                --[[// Deplacement
]]                cases_switch_1[1] = true
elseif switch_1 == eProgresser then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_ProgressionVersLocalisation, } )
                    if( self.eEtat == eActionEffectuee ) then
                        do
                            self.eEtat = eActionEnCours
                                                        do
                                self.ePhase = eFinMission
                                                                do return end

                            end

                        end
                    end

                    Activate( self.activations.BEH_Dep_ProgressionVers, 1, { self._namedParams.mission.pointEmbarquement_, eProgressionDirect, eTypeItiMouvement, } )
self.done_BEH_Dep_ProgressionVers = function( self, _, v ) self.eEtat = v[1] end
                    _continue = false
                --[[// Attendre le transport
]]                cases_switch_1[2] = true
elseif switch_1 == eAttendre then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_ArriveSurLocalisation, } )
                    Activate( self.activations.BEH_Dep_SePosterFaceADirectionDangereuse, 1, {} )
                    _continue = false
                --[[// Fin mission
]]                cases_switch_1[3] = true
elseif switch_1 == eFinMission then
                    if( DEC_Agent_EstTransporte() ) then
                        do
                            Activate( self.activations.ACT_Dep_Trans_TransportEnCours, 1, {} )
                            self.aEteTransporte = true
                        end
                    else
do
                            if( self.aEteTransporte ) then
                                do
                                    DEC_FinMission()
                                                                        self:SendFeedback( eActionEffectuee )
                                    Halt( self )
                                    do return end

                                end
                            end

                            Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_FinMission, } )
                            Activate( self.activations.BEH_Dep_SePosterFaceADirectionDangereuse, 1, {} )
                        end
                    end

                                cases_switch_1[4] = true
                end
            end

    end,

--[[// *****************************************************************************
]]--[[// ACT_Dep_Trans_TransportEnCours
]]--[[//
]]--[[// Commentaires: Juste RC
]]--[[//
]]--[[// *****************************************************************************
]]}

node "ACT_Dep_Trans_TransportEnCours"
{
    feedbacks = { { { "done_ACT_Dep_Trans_TransportEnCours" }, "ACT_Dep_Trans_TransportEnCours" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_ACT_Dep_Trans_TransportEnCours, {value} ) end,
    create = function( self )
    end,

    select = function( self )
        if( ModuleBegins() ) then
            do
                if( not DEC_Agent_AutomateEstEmbraye() ) then
                    DEC_RC( eRC_TransportEnCours )
                else
                    DEC_Message( eRC_TransportEnCours )
                end

            end
        end

    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Pion_SeFaireTransporter = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.MIS_Pion_SeFaireTransporter, "BEH_Ordre_Inopine", nodes.BEH_Ordre_Inopine }
connections[ #connections + 1 ] = { nodes.MIS_Pion_SeFaireTransporter, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_SeFaireTransporter, "BEH_Dep_ProgressionVers", nodes.BEH_Dep_ProgressionVers }
connections[ #connections + 1 ] = { nodes.MIS_Pion_SeFaireTransporter, "BEH_Dep_SePosterFaceADirectionDangereuse", nodes.BEH_Dep_SePosterFaceADirectionDangereuse }
connections[ #connections + 1 ] = { nodes.MIS_Pion_SeFaireTransporter, "ACT_Dep_Trans_TransportEnCours", nodes.ACT_Dep_Trans_TransportEnCours }
