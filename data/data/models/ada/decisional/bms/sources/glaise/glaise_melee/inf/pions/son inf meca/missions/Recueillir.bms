includedFiles = includedFiles or {}
includedFiles["sources/glaise/glaise_melee/inf/pions/son inf meca/missions/Recueillir.bms"] = true

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JDY 02-11-06 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Inf/Pions/Son Vab/Missions/Recueillir.hal $
]]--[[// $Author: Jcr $
]]--[[// $Modtime: 23/09/05 17:39 $
]]--[[// $Revision: 24 $
]]--[[// $Workfile: Recueillir.hal $
]]--[[//
]]--[[// *****************************************************************************
]]
--[[//=============================================================================
]]--[[// 
]]--[[//=============================================================================
]]node "MIS_Pion_INF_Recueillir"
{
    feedbacks = { { { "done_MIS_Pion_INF_Recueillir" }, "MIS_Pion_INF_Recueillir" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_MIS_Pion_INF_Recueillir, {value} ) end,
    activations =
    {
        { "BEH_Misc_Pion_DefinirTypeMission", { "done_BEH_Misc_Pion_DefinirTypeMission" } },
        { "BEH_MAJ_AgressiviteMission", { "done_BEH_MAJ_AgressiviteMission" } },
        { "BEH_Ordre_Inopine", { "done_BEH_Ordre_Inopine" } },
        { "ACT_Ordre_Suppression", { "done_ACT_Ordre_Suppression" } },
        { "BEH_Mission_Pion_VAB_Recueillir", { "done_BEH_Mission_Pion_VAB_Recueillir" } },
        { "BEH_Manoeuvre_RompreContact", { "done_BEH_Manoeuvre_RompreContact" } },
        { "ACT_MAJ_EtatPhaseMission", { "done_ACT_MAJ_EtatPhaseMission" } },
        { "BEH_Poste_Pion_INF_TomberEnGarde", { "done_BEH_Poste_Pion_INF_TomberEnGarde" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        local Activate = Activate
                self.eCurrentPhase = self.eCurrentPhase or ePreparerMission
        self.ePhase = self.ePhase or eSeMettreEnPlace
        self.eAction = self.eAction or eActionEnCours
        self.eActionEnnemi = self.eActionEnnemi or eActionEnCours
        self.eActionOrdre = self.eActionOrdre or eActionEnCours
        --[[//-----------------------------------------------------------------------------
]]--[[// Initialisations
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                DEC_SetMission( myself, self._namedParams.mission )
                F_Pion_SeteEtatEchelon( myself, eEtatEchelon_Premier )
                F_Pion_SeteEtatAmbiance( myself, eEtatAmbiance_Vitesse )
                DEC_Trace( "Mission 'Recueillir' : debut" )
            end
        end

        Activate( self.activations.BEH_Misc_Pion_DefinirTypeMission, 1, { eTypeContact_Defensif, } )
        Activate( self.activations.BEH_MAJ_AgressiviteMission, 1, { eReconnu, M_TIR_PH_MISSION_STATIQUE(), } )
        --[[// gestion des ordres generaux				
]]if( self.eActionOrdre == eActionHalt ) then
            do
                self.ePhase = eFinMission
                self.eActionOrdre = eActionEnCours
                self.eAction = eActionEnCours
            end
        end

        Activate( self.activations.BEH_Ordre_Inopine, 1, {} )
self.done_BEH_Ordre_Inopine = function( self, _, v ) self.eActionOrdre = v[1] end
        --[[///////////////////////////////////////////////////////////////////////////////
]]--[[//=============================================================================
]]--[[//  Ordre recus
]]--[[//=============================================================================
]]--[[///////////////////////////////////////////////////////////////////////////////
]]--[[// On commence par prendre en compte les ordres recus
]]local selOrder = DEC_GetCategory( "ordres_recus" )
        for _,repOrder in pairs( selOrder or {} ) do
        local _continue = true
do
                --[[//-----------------------------------------------------------------------------
]]--[[// ordre de conduite
]]--[[//-----------------------------------------------------------------------------            
]]DEC_Trace( "reception ordre de conduite" )
                local repOrdreCond = repOrder
                local bEstUtilise = true
                 do
                    local _continue = true
                    local switch_1 = repOrdreCond:GetType()
                    local cases_switch_1 = {}
                        if switch_1 == "Rep_OrderConduite_Decrocher" then
                            self.ePhase = eRompreContact
                            self.eAction = eActionEnCours
                            _continue = false
                                                cases_switch_1[1] = true

                        else
                            bEstUtilise = false
                        end
                    end

                if( bEstUtilise ) then
                    do
                        Activate( self.activations.ACT_Ordre_Suppression, 1, { repOrdreCond, } )
                    end
                end

            end

        end

        do
        end
--[[///////////////////////////////////////////////////////////////////////////////
]]--[[//=============================================================================
]]--[[// Squellette de la mission
]]--[[//=============================================================================
]]--[[///////////////////////////////////////////////////////////////////////////////
]]
         do
            local _continue = true
            local switch_1 = self.ePhase
            local cases_switch_1 = {}
                if switch_1 == eSeMettreEnPlace then
                    --[[// eInterdire
]]if( self.eCurrentPhase == eFinMission ) then
                        do
                            self.ePhase = eFinMission
                                                        do return end

                        end
                    end

                    Activate( self.activations.BEH_Mission_Pion_VAB_Recueillir, GetMotivation( "MOT_Mission" ), {} )
self.done_BEH_Mission_Pion_VAB_Recueillir = function( self, _, v ) self.eCurrentPhase = v[1] end
                    _continue = false
                                cases_switch_1[1] = true
elseif switch_1 == eRompreContact then
                    if( self.eAction == eActionEffectuee ) then
                        do
                            self.eAction = eActionEnCours
                                                        do
                                self.ePhase = eFinMission
                                                                do return end

                            end

                        end
                    end

                    Activate( self.activations.BEH_Manoeuvre_RompreContact, 1, {} )
self.done_BEH_Manoeuvre_RompreContact = function( self, _, v ) self.eAction = v[1] end
                    _continue = false
                --[[//------------------------------------------------------------------
]]--[[//  Fin de mission
]]--[[//------------------------------------------------------------------
]]                cases_switch_1[2] = true
elseif switch_1 == eFinMission then
                    --[[//-----------------------------------------------------------------------------
]]--[[// On rend compte de la mission
]]--[[//-----------------------------------------------------------------------------
]]if( self.eAction == eActionEffectuee ) then
                        do
                            self.eAction = eActionEnCours
                                                        do
                                DEC_Trace( "mission MIS_Pion_INF_Interdire: fin" )
                                DEC_FinMission()
                                                                self:SendFeedback( eActionEffectuee )
                                Halt( self )
                                do return end

                            end

                        end
                    end

                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_FinMission, } )
                    Activate( self.activations.BEH_Poste_Pion_INF_TomberEnGarde, 1, { true, } )
self.done_BEH_Poste_Pion_INF_TomberEnGarde = function( self, _, v ) self.eAction = v[1] end
                    _continue = false
                                cases_switch_1[3] = true

                else
                                end
            end

    end,

    destroy = function( self )
            end,

--[[//=============================================================================
]]--[[//							Squelette de la mission
]]--[[//=============================================================================
]]}

node "BEH_Mission_Pion_VAB_Recueillir"
{
    feedbacks = { { { "done_BEH_Mission_Pion_VAB_Recueillir" }, "BEH_Mission_Pion_VAB_Recueillir" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Pion_VAB_Recueillir, {value} ) end,
    activations =
    {
        { "BEH_Lima_Pion_RejoindreFuseau_EnAttente", { "done_BEH_Lima_Pion_RejoindreFuseau_EnAttente" } },
        { "BEH_Dep_Pion_INF_MiseEnPlace_Mission", { "done_BEH_Dep_Pion_INF_MiseEnPlace_Mission" } },
        { "ACT_RC", { "done_ACT_RC" } },
        { "ACT_MAJ_EtatPhaseMission", { "done_ACT_MAJ_EtatPhaseMission" } },
        { "BEH_Dispositif_Pion_VAB_InstallationDefensive", { "done_BEH_Dispositif_Pion_VAB_InstallationDefensive" } },
        { "ACT_Misc_Pion_DelaiInstallation", { "done_ACT_Misc_Pion_DelaiInstallation" } },
        { "BEH_RC_Pion_VAB_SurveillerPIA", { "done_BEH_RC_Pion_VAB_SurveillerPIA" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        --[[// Mission
]]--[[//----------------------------------------------------------------------
]]        self.mission = self.mission or DEC_GetMission( myself )
        self.ePhase = self.ePhase or eSeMettreEnPlace
        self.eAction = self.eAction or eActionEnCours
        --[[// Positions de l'interdiction
]]--[[//----------------------------------------------------------------------
]]self.ptMission = self.ptMission or self.mission.positionInstallation_
        if( ModuleBegins() ) then
            do
                --[[// Verifie que l'on est bien dans son fuseau
]]StartActivateOverride( self, self.activations.BEH_Lima_Pion_RejoindreFuseau_EnAttente, 1.1, {} )
            end
--[[///////////////////////////////////////////////////////////////////////////////
]]--[[//=============================================================================
]]--[[// Squellette de la mission
]]--[[//=============================================================================
]]--[[///////////////////////////////////////////////////////////////////////////////
]]        end

         do
            local _continue = true
            local switch_1 = self.ePhase
            local cases_switch_1 = {}
                if switch_1 == eSeMettreEnPlace then
                    --[[//------------------------------------------------------------------
]]--[[// On va se mettre en position en restant sur nos garde
]]--[[//------------------------------------------------------------------
]]if( self.eAction == eActionImpossible ) then
                        do
                            DEC_Trace( "pas de position valide" )
                            DEC_Warning( eRC_MissionImpossible )
                                                        self:SendFeedback( eFinMission )
                            Halt( self )
                            do return end

                        end
                    end

                    if( self.eAction == eActionEffectuee ) then
                        do
                            self.eAction = eActionEnCours
                                                        do
                                self.ePhase = eInstallerDispositif
                                self.eAction = eActionEnCours
                            end

                        end
                    else
do
                            Activate( self.activations.BEH_Dep_Pion_INF_MiseEnPlace_Mission, 1, { M_TEMPS_PREPARATION_MISSION(), self.ptMission, true, } )
self.done_BEH_Dep_Pion_INF_MiseEnPlace_Mission = function( self, _, v ) self.eAction = v[1] end
                                                        do return end

                        end
                    end

                --[[//------------------------------------------------------------------
]]--[[//  On verifie les alentours, et on attend de debusquer un ennemi
]]--[[//------------------------------------------------------------------
]]                cases_switch_1[1] = true
                end
                if cases_switch_1[1] or switch_1 == eInstallerDispositif then
                    Activate( self.activations.ACT_RC, 1, { eRC_ArriveSurPosition, } )
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_InstallationDispositif, } )
                    --[[// action ACT_MAJ_EtatPhaseMission( eEtatPhaseMission_ArriveSurLocalisation );
]]--[[// On surveille la zone en meme temps que l'on prepare
]]--[[// On fait d'abord debarquer				
]]StartActivateOverride( self, self.activations.BEH_Dispositif_Pion_VAB_InstallationDefensive, 1, { self.ptMission, false, } )
                    --[[// Prepare la mission d'interdiction
]]if( self.eAction == eActionEffectuee ) then
                        do
                            self.eAction = eActionEnCours
                                                        do
                                Activate( self.activations.ACT_RC, 1, { eRC_FinInstallation, } )
                                self.ePhase = eSurveiller
                                                                self:SendFeedback( self.ePhase )
                                do return end

                            end

                        end
                    end

                    Activate( self.activations.ACT_Misc_Pion_DelaiInstallation, 1, { eNiveauInstallation_Poste, } )
self.done_ACT_Misc_Pion_DelaiInstallation = function( self, _, v ) self.eAction = v[1] end
                    StartActivateOverride( self, self.activations.BEH_RC_Pion_VAB_SurveillerPIA, 1, {} )
                    _continue = false
                --[[//------------------------------------------------------------------
]]--[[//  On se met en position de tir 
]]--[[//------------------------------------------------------------------
]]                cases_switch_1[2] = true
elseif switch_1 == eSurveiller then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_EnRecueil, } )
                    _continue = false
                                cases_switch_1[3] = true

                else
                                end
            end

                self:SendFeedback( self.ePhase )
        do return end

    end,

    destroy = function( self )
            end,

}

node "BEH_RC_Pion_VAB_SurveillerPIA"
{
    feedbacks = { { { "done_BEH_RC_Pion_VAB_SurveillerPIA" }, "BEH_RC_Pion_VAB_SurveillerPIA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_RC_Pion_VAB_SurveillerPIA, {value} ) end,
    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
    end,

--[[//	with (  )
]]--[[//		action ACT_RC_PIA()
]]}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Pion_INF_Recueillir = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_VAB_Recueillir, "BEH_Lima_Pion_RejoindreFuseau_EnAttente", nodes.BEH_Lima_Pion_RejoindreFuseau_EnAttente }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_VAB_Recueillir, "BEH_Dep_Pion_INF_MiseEnPlace_Mission", nodes.BEH_Dep_Pion_INF_MiseEnPlace_Mission }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_VAB_Recueillir, "ACT_RC", nodes.ACT_RC }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_VAB_Recueillir, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_VAB_Recueillir, "BEH_Dispositif_Pion_VAB_InstallationDefensive", nodes.BEH_Dispositif_Pion_VAB_InstallationDefensive }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_VAB_Recueillir, "ACT_Misc_Pion_DelaiInstallation", nodes.ACT_Misc_Pion_DelaiInstallation }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_VAB_Recueillir, "BEH_RC_Pion_VAB_SurveillerPIA", nodes.BEH_RC_Pion_VAB_SurveillerPIA }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Recueillir, "BEH_Misc_Pion_DefinirTypeMission", nodes.BEH_Misc_Pion_DefinirTypeMission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Recueillir, "BEH_MAJ_AgressiviteMission", nodes.BEH_MAJ_AgressiviteMission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Recueillir, "BEH_Ordre_Inopine", nodes.BEH_Ordre_Inopine }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Recueillir, "ACT_Ordre_Suppression", nodes.ACT_Ordre_Suppression }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Recueillir, "BEH_Mission_Pion_VAB_Recueillir", nodes.BEH_Mission_Pion_VAB_Recueillir }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Recueillir, "BEH_Manoeuvre_RompreContact", nodes.BEH_Manoeuvre_RompreContact }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Recueillir, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Recueillir, "BEH_Poste_Pion_INF_TomberEnGarde", nodes.BEH_Poste_Pion_INF_TomberEnGarde }
