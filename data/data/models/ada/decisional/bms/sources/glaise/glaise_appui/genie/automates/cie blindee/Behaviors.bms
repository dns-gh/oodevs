includedFiles = includedFiles or {}
includedFiles["sources/glaise/glaise_appui/genie/automates/cie blindee/Behaviors.bms"] = true

local emptyTable = emptyTable

--[[// Paramètres généraux
]]--[[// -------------------
]]use_priority = no

max_instances = 100

max_activations = 100


actuators = {
etat_OrdreCoordination = 1,
releve = 1,
}


include "glaise/glaise_appui/Genie/Automates/Cie Blindee/Actions.bms"

include "glaise/glaise_appui/Genie/Automates/Behaviors.bms"

include "glaise/glaise_appui/Genie/Automates/Cie Blindee/Missions/Missions.bms"



--[[// *****************************************************************************
]]--[[// Comportement par défaut.
]]--[[//
]]--[[// Commentaires: 
]]--[[//
]]--[[// *****************************************************************************
]]node "BEH_Defaut"
{
    feedbacks = { { { "done_BEH_Defaut" }, "BEH_Defaut" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Defaut, {value} ) end,
    activations =
    {
        { "BEH_RC_Automate_Situation", { "done_BEH_RC_Automate_Situation" } },
        { "BEH_Ordre_Automate_GEN_ActiverObstacle", { "done_BEH_Ordre_Automate_GEN_ActiverObstacle" } },
        { "BEH_Nbc_Automate_GererAlerteNiv4", { "done_BEH_Nbc_Automate_GererAlerteNiv4" } },
        { "BEH_ROE_Automate_GererOrdre", { "done_BEH_ROE_Automate_GererOrdre" } },
        { "BEH_Misc_Automate_GererLesMoyens", { "done_BEH_Misc_Automate_GererLesMoyens" } },
        { "BEH_Rens_Automate_GererSilenceRadio", { "done_BEH_Rens_Automate_GererSilenceRadio" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.nDummy = self.params[1]
    end,

    activate = function( self )
        local Activate = Activate
        Activate( self.activations.BEH_RC_Automate_Situation, 1, emptyTable )--[[//-----------------------------------------------------------------------------
]]--[[// CR
]]--[[//-----------------------------------------------------------------------------
]]
        --[[//-----------------------------------------------------------------------------
]]--[[// Automate actif si embrayé
]]--[[//-----------------------------------------------------------------------------
]]if( not DEC_Automate_EstEmbraye() ) then
            do return end
        end

        Activate( self.activations.BEH_Ordre_Automate_GEN_ActiverObstacle, 1, emptyTable )--[[//-----------------------------------------------------------------------------
]]--[[// Activation des obstacles
]]--[[//-----------------------------------------------------------------------------
]]
        Activate( self.activations.BEH_Nbc_Automate_GererAlerteNiv4, 1, emptyTable )--[[//-----------------------------------------------------------------------------
]]--[[// NBC --> alerte de niveau 4
]]--[[//-----------------------------------------------------------------------------
]]
        Activate( self.activations.BEH_ROE_Automate_GererOrdre, 1, emptyTable )--[[//-----------------------------------------------------------------------------
]]--[[// ROE --> Tir libre, sur riposte, interdit
]]--[[//-----------------------------------------------------------------------------
]]
        Activate( self.activations.BEH_Misc_Automate_GererLesMoyens, 1, emptyTable )--[[//-----------------------------------------------------------------------------
]]--[[// Gestion des pions --> init de la place dans le dispositif
]]--[[//-----------------------------------------------------------------------------
]]
        Activate( self.activations.BEH_Rens_Automate_GererSilenceRadio, 1, emptyTable )--[[//-----------------------------------------------------------------------------
]]--[[// Silence radio
]]--[[//-----------------------------------------------------------------------------
]]
    end,

--[[// *****************************************************************************
]]--[[// BEH_Ordre_Automate_GEN_ActiverObstacle
]]--[[//
]]--[[// Commentaires:activation de l'objet passer en parmètre
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Ordre_Automate_GEN_ActiverObstacle"
{
    feedbacks = { { { "done_BEH_Ordre_Automate_GEN_ActiverObstacle" }, "BEH_Ordre_Automate_GEN_ActiverObstacle" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Ordre_Automate_GEN_ActiverObstacle, {value} ) end,
    activations =
    {
        { "ACT_Ordre_Automate_GEN_Activer", { "done_ACT_Ordre_Automate_GEN_Activer" } },
        { "ACT_Ordre_Suppression", { "done_ACT_Ordre_Suppression" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        --[[//-----------------------------------------------------------------
]]--[[// En fonction de l'ordre recu
]]--[[//-----------------------------------------------------------------
]]local ordres_recus = DEC_GetCategory( "ordres_recus" )
        for _,x in pairs( ordres_recus or emptyTable ) do
        local _continue = true
do
                local ordre = x
                --[[// cast
]]local repOrdre = ordre
                if( repOrdre:GetType() == "Rep_OrderConduite_Automate_ActiverObstacle" ) then
                    do
                        --[[// cast
]]local ordreActiver = repOrdre
                        DEC_Trace( "$ --- ORDRE ACTIVER OBSTACLE ---$" )
                        Activate( self.activations.ACT_Ordre_Automate_GEN_Activer, 1, { ordreActiver:GetorderConduiteAutomateActiverObstacle_(), } )
                    end
                end

                Activate( self.activations.ACT_Ordre_Suppression, 1, { ordre, } )
            end

        end

    end,

--[[// *****************************************************************************
]]--[[// BEH_Objet_Automate_GEN_VerifierRenfortPourConstruireObjets
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Objet_Automate_GEN_VerifierRenfortPourConstruireObjets"
{
    feedbacks = { { { "done_BEH_Objet_Automate_GEN_VerifierRenfortPourConstruireObjets" }, "BEH_Objet_Automate_GEN_VerifierRenfortPourConstruireObjets" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Objet_Automate_GEN_VerifierRenfortPourConstruireObjets, {value} ) end,
    activations =
    {
        { "BEH_Objet_Automate_GEN_VerifierRenfortPourConstruire", { "done_BEH_Objet_Automate_GEN_VerifierRenfortPourConstruire" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.objets = self.params[1]
    end,

    activate = function( self )
        local Activate = Activate
        for _,objet in pairs( self._namedParams.objets or emptyTable ) do
        local _continue = true
            Activate( self.activations.BEH_Objet_Automate_GEN_VerifierRenfortPourConstruire, 1, { objet, } )

        end

    end,

--[[// *****************************************************************************
]]--[[// BEH_Objet_Automate_GEN_VerifierRenfortPourConstruire
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Objet_Automate_GEN_VerifierRenfortPourConstruire"
{
    feedbacks = { { { "done_BEH_Objet_Automate_GEN_VerifierRenfortPourConstruire" }, "BEH_Objet_Automate_GEN_VerifierRenfortPourConstruire" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Objet_Automate_GEN_VerifierRenfortPourConstruire, {value} ) end,
    activations =
    {
        { "ACT_Info_Automate_GEN_RendreComptePourRenfort", { "done_ACT_Info_Automate_GEN_RendreComptePourRenfort" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.objet = self.params[1]
    end,

    activate = function( self )
        local Activate = Activate
        local eValidite = nil
        local listePions = DEC_Automate_PionsSansPC()
        for _,pion in pairs( listePions or emptyTable ) do
        local _continue = true
do
                if( DEC_Automate_PionPeutConstruireObjet( pion, DEC_GenObject_Type( self._namedParams.objet ) ) ) then
                    do return end
--[[// au moins un pion est capable
]]                end

            end

        end

        Activate( self.activations.ACT_Info_Automate_GEN_RendreComptePourRenfort, 1, emptyTable )
    end,

--[[// *****************************************************************************
]]--[[// BEH_Ordre_Automate_GEN_VerifierRenfortPourDetruireObjets
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Ordre_Automate_GEN_VerifierRenfortPourDetruireObjets"
{
    feedbacks = { { { "done_BEH_Ordre_Automate_GEN_VerifierRenfortPourDetruireObjets" }, "BEH_Ordre_Automate_GEN_VerifierRenfortPourDetruireObjets" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Ordre_Automate_GEN_VerifierRenfortPourDetruireObjets, {value} ) end,
    activations =
    {
        { "BEH_Objet_Automate_GEN_VerifierRenfortPourDetruireObjet", { "done_BEH_Objet_Automate_GEN_VerifierRenfortPourDetruireObjet" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.objets = self.params[1]
    end,

    activate = function( self )
        local Activate = Activate
        for _,objet in pairs( self._namedParams.objets or emptyTable ) do
        local _continue = true
if( DEC_ConnaissanceObjet_EstValide( objet ) ) then
                Activate( self.activations.BEH_Objet_Automate_GEN_VerifierRenfortPourDetruireObjet, 1, { objet, } )
            end

        end

    end,

--[[// *****************************************************************************
]]--[[// BEH_Objet_Automate_GEN_VerifierRenfortPourDetruireObjet
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Objet_Automate_GEN_VerifierRenfortPourDetruireObjet"
{
    feedbacks = { { { "done_BEH_Objet_Automate_GEN_VerifierRenfortPourDetruireObjet" }, "BEH_Objet_Automate_GEN_VerifierRenfortPourDetruireObjet" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Objet_Automate_GEN_VerifierRenfortPourDetruireObjet, {value} ) end,
    activations =
    {
        { "ACT_Info_Automate_GEN_RendreComptePourRenfort", { "done_ACT_Info_Automate_GEN_RendreComptePourRenfort" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.objet = self.params[1]
    end,

    activate = function( self )
        local Activate = Activate
        local eValidite = nil
        local listePions = DEC_Automate_PionsSansPC()
        for _,pion in pairs( listePions or emptyTable ) do
        local _continue = true
do
                if( DEC_Automate_PionPeutDetruireObjet( pion, DEC_ConnaissanceObjet_Type( self._namedParams.objet, eValidite ) ) ) then
                    do return end
--[[// au moins un pion est capable
]]                end

            end

        end

        Activate( self.activations.ACT_Info_Automate_GEN_RendreComptePourRenfort, 1, emptyTable )
    end,

--[[// *****************************************************************************
]]--[[// BEH_Objet_Automate_GEN_VerifierRenfortPourContournerObjets
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Objet_Automate_GEN_VerifierRenfortPourContournerObjets"
{
    feedbacks = { { { "done_BEH_Objet_Automate_GEN_VerifierRenfortPourContournerObjets" }, "BEH_Objet_Automate_GEN_VerifierRenfortPourContournerObjets" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Objet_Automate_GEN_VerifierRenfortPourContournerObjets, {value} ) end,
    activations =
    {
        { "BEH_Objet_Automate_GEN_VerifierRenfortPourContourner", { "done_BEH_Objet_Automate_GEN_VerifierRenfortPourContourner" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.objets = self.params[1]
    end,

    activate = function( self )
        local Activate = Activate
        for _,objet in pairs( self._namedParams.objets or emptyTable ) do
        local _continue = true
if( DEC_ConnaissanceObjet_EstValide( objet ) ) then
                Activate( self.activations.BEH_Objet_Automate_GEN_VerifierRenfortPourContourner, 1, { objet, } )
            end

        end

    end,

--[[// *****************************************************************************
]]--[[// BEH_Objet_Automate_GEN_VerifierRenfortPourContourner
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Objet_Automate_GEN_VerifierRenfortPourContourner"
{
    feedbacks = { { { "done_BEH_Objet_Automate_GEN_VerifierRenfortPourContourner" }, "BEH_Objet_Automate_GEN_VerifierRenfortPourContourner" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Objet_Automate_GEN_VerifierRenfortPourContourner, {value} ) end,
    activations =
    {
        { "ACT_Info_Automate_GEN_RendreComptePourRenfort", { "done_ACT_Info_Automate_GEN_RendreComptePourRenfort" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.objet = self.params[1]
    end,

    activate = function( self )
        local Activate = Activate
        if( not DEC_ConnaissanceObjet_EstValide( self._namedParams.objet ) ) then
            Halt( self )
            do return end
        end

        local eValidite = nil
        local listePions = DEC_Automate_PionsSansPC()
        for _,pion in pairs( listePions or emptyTable ) do
        local _continue = true
do
                if( DEC_Automate_PionPeutConstruireContournementObjet( pion, DEC_ConnaissanceObjet_Type( self._namedParams.objet, eValidite ) ) ) then
                    do return end
--[[// au moins un pion est capable
]]                end

            end

        end

        Activate( self.activations.ACT_Info_Automate_GEN_RendreComptePourRenfort, 1, emptyTable )
    end,

--[[// *****************************************************************************
]]--[[// ACT_Info_Automate_GEN_RendreComptePourRenfort
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "ACT_Info_Automate_GEN_RendreComptePourRenfort"
{
    feedbacks = { { { "done_ACT_Info_Automate_GEN_RendreComptePourRenfort" }, "ACT_Info_Automate_GEN_RendreComptePourRenfort" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_ACT_Info_Automate_GEN_RendreComptePourRenfort, {value} ) end,
    create = function( self )
    end,

    select = function( self )
                if( ModuleBegins() ) then
            DEC_Warning( eRC_AttenteRenforcement )
        end

    end,

    deselect = function( self )
            end,

    destroy = function( self )
                DEC_Warning( eRC_Operationnel )
    end,

}

--[[// *****************************************************************************
]]--[[// ACT_Ordre_Automate_GEN_Activer
]]--[[//
]]--[[// Commentaires:activation de l'objet passer en parmètre
]]--[[//
]]--[[// *****************************************************************************
]]node "ACT_Ordre_Automate_GEN_Activer"
{
    feedbacks = { { { "done_ACT_Ordre_Automate_GEN_Activer" }, "ACT_Ordre_Automate_GEN_Activer" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_ACT_Ordre_Automate_GEN_Activer, {value} ) end,
    create = function( self )
        self._namedParams = {}
        self._namedParams.objetAActiver = self.params[1]
    end,

    select = function( self )
        --[[//-----------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------
]]if( ModuleBegins() ) then
            DEC_ActiverObjet( self._namedParams.objetAActiver )
        end

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_RC_Automate_Situation", nodes.BEH_RC_Automate_Situation }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Ordre_Automate_GEN_ActiverObstacle", nodes.BEH_Ordre_Automate_GEN_ActiverObstacle }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Nbc_Automate_GererAlerteNiv4", nodes.BEH_Nbc_Automate_GererAlerteNiv4 }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_ROE_Automate_GererOrdre", nodes.BEH_ROE_Automate_GererOrdre }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Misc_Automate_GererLesMoyens", nodes.BEH_Misc_Automate_GererLesMoyens }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Rens_Automate_GererSilenceRadio", nodes.BEH_Rens_Automate_GererSilenceRadio }
connections[ #connections + 1 ] = { nodes.BEH_Objet_Automate_GEN_VerifierRenfortPourConstruire, "ACT_Info_Automate_GEN_RendreComptePourRenfort", nodes.ACT_Info_Automate_GEN_RendreComptePourRenfort }
connections[ #connections + 1 ] = { nodes.BEH_Objet_Automate_GEN_VerifierRenfortPourConstruireObjets, "BEH_Objet_Automate_GEN_VerifierRenfortPourConstruire", nodes.BEH_Objet_Automate_GEN_VerifierRenfortPourConstruire }
connections[ #connections + 1 ] = { nodes.BEH_Objet_Automate_GEN_VerifierRenfortPourContourner, "ACT_Info_Automate_GEN_RendreComptePourRenfort", nodes.ACT_Info_Automate_GEN_RendreComptePourRenfort }
connections[ #connections + 1 ] = { nodes.BEH_Objet_Automate_GEN_VerifierRenfortPourContournerObjets, "BEH_Objet_Automate_GEN_VerifierRenfortPourContourner", nodes.BEH_Objet_Automate_GEN_VerifierRenfortPourContourner }
connections[ #connections + 1 ] = { nodes.BEH_Objet_Automate_GEN_VerifierRenfortPourDetruireObjet, "ACT_Info_Automate_GEN_RendreComptePourRenfort", nodes.ACT_Info_Automate_GEN_RendreComptePourRenfort }
connections[ #connections + 1 ] = { nodes.BEH_Ordre_Automate_GEN_ActiverObstacle, "ACT_Ordre_Automate_GEN_Activer", nodes.ACT_Ordre_Automate_GEN_Activer }
connections[ #connections + 1 ] = { nodes.BEH_Ordre_Automate_GEN_ActiverObstacle, "ACT_Ordre_Suppression", nodes.ACT_Ordre_Suppression }
connections[ #connections + 1 ] = { nodes.BEH_Ordre_Automate_GEN_VerifierRenfortPourDetruireObjets, "BEH_Objet_Automate_GEN_VerifierRenfortPourDetruireObjet", nodes.BEH_Objet_Automate_GEN_VerifierRenfortPourDetruireObjet }
