includedFiles = includedFiles or {}
includedFiles["sources/glaise/glaise_appui/nbc/pions/common/missions/ReconnaitreSiteROTA.bms"] = true

local emptyTable = emptyTable

--[[// *****************************************************************************
]]--[[// BEH_Mission_Pion_NBC_ReconnaitreUnSiteROTA
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// Comportements:
]]--[[//
]]--[[// *****************************************************************************
]]node "BEH_Mission_Pion_NBC_ReconnaitreUnSiteROTA"
{
    feedbacks = { { { "done_BEH_Mission_Pion_NBC_ReconnaitreUnSiteROTA" }, "BEH_Mission_Pion_NBC_ReconnaitreUnSiteROTA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Pion_NBC_ReconnaitreUnSiteROTA, {value} ) end,
    activations =
    {
        { "BEH_Ordre_Inopine", { "done_BEH_Ordre_Inopine" } },
        { "ACT_MAJ_EtatPhaseMission", { "done_ACT_MAJ_EtatPhaseMission" } },
        { "ACT_Info_Trace", { "done_ACT_Info_Trace" } },
        { "BEH_Dep_ProgressionVers", { "done_BEH_Dep_ProgressionVers" } },
        { "BEH_Pion_Nbc_ReconnaitreSiteROTA", { "done_BEH_Pion_Nbc_ReconnaitreSiteROTA" } },
        { "BEH_Dep_SePosterFaceADirectionDangereuse", { "done_BEH_Dep_SePosterFaceADirectionDangereuse" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params[1]
    end,

    activate = function( self )
        local Activate = Activate
        self.eEtat = self.eEtat or eActionEnCours
        self.ePhaseMission = self.ePhaseMission or ePreparerMission
        self.positionROTA = self.positionROTA or S_Obj_Position( self._namedParams.mission.siteROTA_ )
        --[[//-----------------------------------------------------------------------------
]]--[[// Conditions de terminaisons --> validité objet
]]--[[//-----------------------------------------------------------------------------
]]if( not DEC_ConnaissanceObjet_EstValide( self._namedParams.mission.siteROTA_ ) ) then
            do
                DEC_Trace( "$************ Le site ROTA a été détruit ***********$" )
                self.ePhaseMission = eFinMission
                                do return end

            end
        end

        self.eEtatOrdreFinMission = self.eEtatOrdreFinMission or eActionEnCours
        Activate( self.activations.BEH_Ordre_Inopine, 1, emptyTable )
self.done_BEH_Ordre_Inopine = function( self, _, v ) self.eEtatOrdreFinMission = v[1] end
        if( self.eEtatOrdreFinMission == eActionHalt ) then
            do
                self.ePhaseMission = eFinMission
                self.eEtat = eActionEnCours
                self.eEtatOrdreFinMission = eActionEnCours
            end
--[[//-----------------------------------------------------------------------------
]]--[[// Pion detruit
]]--[[//-----------------------------------------------------------------------------
]]        end

        if( F_Pion_GeteEtatDestruction( myself ) ~= eEtatDestruction_None ) then
            self:SendFeedback( eActionEffectuee )
            Halt( self )
            do return end
        end

        --[[//-------------------------------------------------------------------------
]]--[[// Appuis ou soutiens
]]--[[//-------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                SetStateVariable( "VE_NiveauNBC", 4 )
                F_Pion_SeteEtatAmbiance( myself, eEtatAmbiance_Vitesse )
            end
        end

         do
            local _continue = true
--[[// 1) Prepa
]]--[[// 2) Progression jusqu'au point à reconnaitre
]]--[[//-----------------------------------------------------------------------------
]]--[[// Progresser vers le center de la zone
]]--[[//-----------------------------------------------------------------------------
]]--[[//---------------------------------------------------------------------
]]--[[// Faire des mesures
]]--[[//---------------------------------------------------------------------
]]--[[//behavior BEH_Nbc_Pion_FaireDesMesures() : strength = 1.1; // Poste pour mesure donc en comptète avec deplacement
]]--[[// Se poster
]]--[[//---------------------------------------------------------------------
]]--[[// Si site reconnu fin de mission
]]--[[//---------------------------------------------------------------------
]]--[[//---------------------------------------------------------------------
]]--[[// Reconnaître le site
]]--[[//---------------------------------------------------------------------
]]--[[// return in pas nécéssaire
]]--[[// Fin de la mission --> SUR ORDRE DU SUPERIEUR
]]            local switch_1 = self.ePhaseMission
                if switch_1 == ePreparerMission then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_DebutMission, } )
                    Activate( self.activations.ACT_Info_Trace, 1, { "BEH_Mission_Pion_NBC_ReconnaitreUnSiteROTA", } )
                    self.ePhaseMission = eRejoindrePosition
                    _continue = false
                elseif switch_1 == eRejoindrePosition then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_ProgressionVersLocalisation, } )
                    if( self.eEtat == eActionEffectuee ) then
                        do
                            self.eEtat = eActionEnCours
                                                        do
                                self.ePhaseMission = eSePoster
                                                                do return end

                            end

                        end
                    end

                    Activate( self.activations.BEH_Dep_ProgressionVers, 1, { self.positionROTA, eProgressionReco, eTypeItiMouvement, } )
self.done_BEH_Dep_ProgressionVers = function( self, _, v ) self.eEtat = v[1] end
                    _continue = false
                elseif switch_1 == eSePoster then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_ArriveSurLocalisation, } )
                    local eValidite = nil
                    if( DEC_ConnaissanceObjet_EstReconnu( self._namedParams.mission.siteROTA_, eValidite ) ) then
                        do
                            self.ePhaseMission = eFinMission
                                                        do return end

                        end
                    end

                    if( self.eEtat == eActionEffectuee ) then
                        do
                            self.eEtat = eActionEnCours
                                                        do
                                self.ePhaseMission = eFinMission
                                                                do return end

                            end

                        end
                    end

                    Activate( self.activations.BEH_Pion_Nbc_ReconnaitreSiteROTA, 1, { self._namedParams.mission.siteROTA_, } )
self.done_BEH_Pion_Nbc_ReconnaitreSiteROTA = function( self, _, v ) self.eEtat = v[1] end
                    _continue = false
                elseif switch_1 == eFinMission then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_FinMission, } )
                    Activate( self.activations.BEH_Dep_SePosterFaceADirectionDangereuse, 1, emptyTable )
                    _continue = false
                
                else
                                end
            end

    end,

--[[// *****************************************************************************
]]--[[// BEH_Pion_Nbc_ReconnaitreSiteROTA
]]--[[//
]]--[[// Commentaires: 
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Pion_Nbc_ReconnaitreSiteROTA"
{
    feedbacks = { { { "done_BEH_Pion_Nbc_ReconnaitreSiteROTA" }, "BEH_Pion_Nbc_ReconnaitreSiteROTA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Pion_Nbc_ReconnaitreSiteROTA, {value} ) end,
    activations =
    {
        { "ACT_Pion_Nbc_ReconnaitreSiteROTA", { "done_ACT_Pion_Nbc_ReconnaitreSiteROTA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.siteROTA = self.params[1]
    end,

    activate = function( self )
        local Activate = Activate
        self.eEtat = self.eEtat or eActionEnCours
        if( self.eEtat == eActionEffectuee ) then
            self:SendFeedback( eActionEffectuee )
            do return end
        end

        if( DEC_Agent_NiveauInstallation() >= eNiveauInstallation_Poste ) then
            Activate( self.activations.ACT_Pion_Nbc_ReconnaitreSiteROTA, 1, { self._namedParams.siteROTA, } )
self.done_ACT_Pion_Nbc_ReconnaitreSiteROTA = function( self, _, v ) self.eEtat = v[1] end
        end

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_NBC_ReconnaitreUnSiteROTA, "BEH_Ordre_Inopine", nodes.BEH_Ordre_Inopine }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_NBC_ReconnaitreUnSiteROTA, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_NBC_ReconnaitreUnSiteROTA, "ACT_Info_Trace", nodes.ACT_Info_Trace }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_NBC_ReconnaitreUnSiteROTA, "BEH_Dep_ProgressionVers", nodes.BEH_Dep_ProgressionVers }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_NBC_ReconnaitreUnSiteROTA, "BEH_Pion_Nbc_ReconnaitreSiteROTA", nodes.BEH_Pion_Nbc_ReconnaitreSiteROTA }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_NBC_ReconnaitreUnSiteROTA, "BEH_Dep_SePosterFaceADirectionDangereuse", nodes.BEH_Dep_SePosterFaceADirectionDangereuse }
connections[ #connections + 1 ] = { nodes.BEH_Pion_Nbc_ReconnaitreSiteROTA, "ACT_Pion_Nbc_ReconnaitreSiteROTA", nodes.ACT_Pion_Nbc_ReconnaitreSiteROTA }
