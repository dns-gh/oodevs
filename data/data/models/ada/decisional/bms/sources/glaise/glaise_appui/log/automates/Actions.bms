includedFiles = includedFiles or {}
includedFiles["sources/glaise/glaise_appui/log/automates/Actions.bms"] = true

--[[// *****************************************************************************
]]--[[// ACT_Ordre_Automate_LOG_OrdresInopines
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]node "ACT_Ordre_Automate_LOG_OrdresInopines"
{
    feedbacks = { { { "done_ACT_Ordre_Automate_LOG_OrdresInopines" }, "ACT_Ordre_Automate_LOG_OrdresInopines" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_ACT_Ordre_Automate_LOG_OrdresInopines, {value} ) end,
    create = function( self )
    end,

    select = function( self )
        local ordres_recus = DEC_GetCategory( "ordres_recus" )
        for _,x in pairs( ordres_recus or {} ) do
        local _continue = true
do
                local ordre = x
                --[[//-----------------------------------------------------------------------------
]]--[[// ordre de conduite
]]--[[//-----------------------------------------------------------------------------
]]local repOrdre = ordre
                local bEstUtilise = true
                 do
                    local _continue = true
                    local switch_1 = repOrdre:GetType()
                    local cases_switch_1 = {}
                        if switch_1 == "Rep_OrderConduite_ModifierRegimeTravailMaintenance" then
                            local repOrderRegimeMaint = ordre
                            DEC_Maintenance_ChangerRegimeTravail( repOrderRegimeMaint:GetorderConduiteModifierRegimeTravailMaintenance_() )
                            _continue = false
                                                cases_switch_1[1] = true
elseif switch_1 == "Rep_OrderConduite_ModifierPrioritesReparations" then
                            local repOrdrePrioriteMain = ordre
                            DEC_Maintenance_ChangerPriorites( repOrdrePrioriteMain:GetorderConduiteModifierPrioritesReparations_() )
                            _continue = false
                                                cases_switch_1[2] = true
elseif switch_1 == "Rep_OrderConduite_ModifierPrioritesBlesses" then
                            local repOrdrePrioriteSan = ordre
                            DEC_Sante_ChangerPriorites( repOrdrePrioriteSan:GetorderConduiteModifierPrioritesBlesses_() )
                            _continue = false
                                                cases_switch_1[3] = true

                        else
                            bEstUtilise = false
                            _continue = false
                                                end
                    end

                if( bEstUtilise ) then
                    do
                        --[[// on a finit de traiter l'ordre, on le supprime
]]DEC_RemoveFromCategory( "ordres_recus", ordre )
                        DEC_DeleteRepresentation( ordre )
                    end
                end

            end

        end

    end,

}

