includedFiles = includedFiles or {}
includedFiles["sources/glaise/glaise_appui/nbc/automates/common/Coordination.bms"] = true

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: MIA 04-02-24 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Appui/Nbc/Automates/Common/Coordination.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 24/05/05 16:47 $
]]--[[// $Revision: 6 $
]]--[[// $Workfile: Coordination.hal $
]]--[[//
]]--[[// *****************************************************************************
]]


--[[//     /* Coordination  */
]]--[[// behavior BEH_CoordDep_Automate_NBC_AssurerLaCoordinationInterne_()
]]--[[// behavior BEH_CoordDep_Automate_NBC_CoordonnerPEAvecSE_
]]

--[[// *****************************************************************************
]]--[[// BEH_CoordDep_Automate_NBC_AssurerLaCoordinationInterne_
]]--[[//
]]--[[// Commentaires: coordonner interne de la compagnie.
]]--[[//
]]--[[//
]]--[[// *****************************************************************************
]]node "BEH_CoordDep_Automate_NBC_AssurerLaCoordinationInterne_"
{
    feedbacks = { { { "done_BEH_CoordDep_Automate_NBC_AssurerLaCoordinationInterne_" }, "BEH_CoordDep_Automate_NBC_AssurerLaCoordinationInterne_" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_CoordDep_Automate_NBC_AssurerLaCoordinationInterne_, {value} ) end,
    activations =
    {
        { "ACT_Info_Automate_Trace", { "done_ACT_Info_Automate_Trace" } },
        { "BEH_CoordDep_Automate_NBC_CoordonnerPEAvecSE_", { "done_BEH_CoordDep_Automate_NBC_CoordonnerPEAvecSE_" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        Activate( self.activations.ACT_Info_Automate_Trace, 1, { "***$$$ Activation des coordinations $$$***", } )
        Activate( self.activations.BEH_CoordDep_Automate_NBC_CoordonnerPEAvecSE_, 1, {} )
    end,

--[[// *****************************************************************************
]]--[[// BEH_CoordDep_Automate_NBC_CoordonnerPEAvecSE_
]]--[[//
]]--[[// Commentaires: PAS POUR MISSION RETROGRADE
]]--[[//               Controle l'écart entre éléments de têtes et de queues
]]--[[//
]]--[[//  ATTENTION: à activer qd toutes les unités sont dans le fuseau
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_CoordDep_Automate_NBC_CoordonnerPEAvecSE_"
{
    feedbacks = { { { "done_BEH_CoordDep_Automate_NBC_CoordonnerPEAvecSE_" }, "BEH_CoordDep_Automate_NBC_CoordonnerPEAvecSE_" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_CoordDep_Automate_NBC_CoordonnerPEAvecSE_, {value} ) end,
    activations =
    {
        { "BEH_CoordDep_Automate_NBC_ActiverCoordinnationSur", { "done_BEH_CoordDep_Automate_NBC_ActiverCoordinnationSur" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        local listePions = S_ObtenirPionsEchelonPremierEtSecond( eEtatDestruction_None )
        --[[//-----------------------------------------------------------------------------
]]--[[// Inutile si plus de pions
]]--[[//-----------------------------------------------------------------------------
]]if( DIA_IsListEmpty( listePions ) ) then
            do return end
        end

        --[[//-----------------------------------------------------------------------------
]]--[[// Coordinnation SE / PE 
]]--[[//-----------------------------------------------------------------------------
]]Activate( self.activations.BEH_CoordDep_Automate_NBC_ActiverCoordinnationSur, 1, { listePions, } )
    end,

--[[// *****************************************************************************
]]--[[// BEH_CoordDep_Automate_NBC_ActiverCoordinnationSur
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[//            // $$$$ MIA 04-01-13: Nouvelle instance du comportement à chaque 
]]--[[//            // $$$$ MIA 04-01-13: fois que la liste des pions amis change 
]]--[[//            // $$$$ MIA 04-01-13: (pions détruits tactiquements)
]]--[[//
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_CoordDep_Automate_NBC_ActiverCoordinnationSur"
{
    feedbacks = { { { "done_BEH_CoordDep_Automate_NBC_ActiverCoordinnationSur" }, "BEH_CoordDep_Automate_NBC_ActiverCoordinnationSur" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_CoordDep_Automate_NBC_ActiverCoordinnationSur, {value} ) end,
    activations =
    {
        { "ACT_Info_Automate_Trace", { "done_ACT_Info_Automate_Trace" } },
        { "ACT_Ordre_Automate_Ralentir", { "done_ACT_Ordre_Automate_Ralentir" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.listePionsACoordonner = self.params[1]
    end,

    activate = function( self )
        local Activate = Activate
                self.resultatCalcul = self.resultatCalcul or nil
        self.pionEnQueue = self.pionEnQueue or nil
        --[[//-------------------------------------------------------------------------
]]--[[// Init
]]--[[//-------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                DEC_Trace( "$$ Nombre de pions a coordonner = " .. FloatToString( #( self._namedParams.listePionsACoordonner ) ) .. " $$" )
                self.resultatCalcul = DEC_Geometrie_StartCalculLignesAvantEtArriere( self._namedParams.listePionsACoordonner )
            end
--[[//-----------------------------------------------------------------------------
]]--[[// Determiner le pion de queue
]]--[[//-----------------------------------------------------------------------------
]]        end

        for _,x in pairs( self._namedParams.listePionsACoordonner or {} ) do
        local _continue = true
do
                local pion = x
                local rDistanceLAR = DEC_Geometrie_CalculerDistanceLigneArriere( self.resultatCalcul, pion )
                if( rDistanceLAR <= 20 ) then
                    self.pionEnQueue = pion
                end

            end

        end

        if( self.pionEnQueue == 0 ) then
            do return end
        end

        --[[//=============================================================================
]]--[[// Coordinnation
]]--[[//=============================================================================
]]--[[//-----------------------------------------------------------------------------
]]--[[// Escadron trop etalé --> le PE ralentit
]]--[[//-----------------------------------------------------------------------------
]]if( DEC_Geometrie_CalculerDistanceLigneAvant( self.resultatCalcul, self.pionEnQueue ) > M_MODELE_AUTOMATE_NBC_DISTANCE_ETALEMENT_ESC_MAX() ) then
            do
                Activate( self.activations.ACT_Info_Automate_Trace, 1, { "==< Coordinnation active >==", } )
                for _,x in pairs( self._namedParams.listePionsACoordonner or {} ) do
                local _continue = true
                    do
                        local pion = x
                        --[[// 1) Ralentir
]]if( DEC_Geometrie_CalculerDistanceLigneAvant( self.resultatCalcul, pion ) < M_MODELE_AUTOMATE_NBC_DISTANCE_LAV_MIN() ) then
                            do
                                Activate( self.activations.ACT_Info_Automate_Trace, 1, { " ==> Coordination ESC --> ORDRE ralentir à " .. DEC_GetSzName( pion ), } )
                                Activate( self.activations.ACT_Ordre_Automate_Ralentir, 1, { pion, } )
                            end
                        end

                    end

                end

            end
        end

    end,

    destroy = function( self )
                DEC_Geometrie_StopCalculLignesAvantEtArriere( self.resultatCalcul )
    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_CoordDep_Automate_NBC_ActiverCoordinnationSur, "ACT_Info_Automate_Trace", nodes.ACT_Info_Automate_Trace }
connections[ #connections + 1 ] = { nodes.BEH_CoordDep_Automate_NBC_ActiverCoordinnationSur, "ACT_Ordre_Automate_Ralentir", nodes.ACT_Ordre_Automate_Ralentir }
connections[ #connections + 1 ] = { nodes.BEH_CoordDep_Automate_NBC_AssurerLaCoordinationInterne_, "ACT_Info_Automate_Trace", nodes.ACT_Info_Automate_Trace }
connections[ #connections + 1 ] = { nodes.BEH_CoordDep_Automate_NBC_AssurerLaCoordinationInterne_, "BEH_CoordDep_Automate_NBC_CoordonnerPEAvecSE_", nodes.BEH_CoordDep_Automate_NBC_CoordonnerPEAvecSE_ }
connections[ #connections + 1 ] = { nodes.BEH_CoordDep_Automate_NBC_CoordonnerPEAvecSE_, "BEH_CoordDep_Automate_NBC_ActiverCoordinnationSur", nodes.BEH_CoordDep_Automate_NBC_ActiverCoordinnationSur }
