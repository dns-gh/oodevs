includedFiles = includedFiles or {}
includedFiles["sources/glaise/glaise_appui/artfdp/automates/common/Behaviors - Conduite.bms"] = true

local emptyTable = emptyTable

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JCR 03-05-15 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Appui/ArtFdp/Automates/Common/Behaviors - Conduite.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 19/09/05 10:14 $
]]--[[// $Revision: 14 $
]]--[[// $Workfile: Behaviors - Conduite.hal $
]]--[[//
]]--[[// *****************************************************************************
]]

--[[//-----------------------------------------------------------------------------
]]--[[// @bFinMission : Gere ou non dans le comportement la fin de mission
]]--[[//-----------------------------------------------------------------------------
]]node "BEH_Conduite_Automate_ASS_Defaut"
{
    feedbacks = { { { "done_BEH_Conduite_Automate_ASS_Defaut" }, "BEH_Conduite_Automate_ASS_Defaut" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Conduite_Automate_ASS_Defaut, {value} ) end,
    activations =
    {
        { "BEH_Situation_Automate_ASS_FinMission", { "done_BEH_Situation_Automate_ASS_FinMission" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionMission = self.eActionMission or eActionEnCours
        --[[//-----------------------------------------------------------------------------
]]--[[// Gestion de la sauvegarde de la compagnie
]]--[[//-----------------------------------------------------------------------------
]]--[[// behavior BEH_Mot_Automate_GererSauvegardeFaceAuxEnis();
]]--[[//-----------------------------------------------------------------------------
]]--[[// Gestion de la fin de mission
]]--[[//-----------------------------------------------------------------------------
]]if( self.eActionMission == eActionEffectuee ) then
            do
                self.eActionMission = eActionEnCours
                                do
                    DEC_RC( eRC_FinMission )
                    DEC_FinMission()
                                        self:SendFeedback( eActionEffectuee )
                    Halt( self )
                    do return end

                end

            end
        end

        Activate( self.activations.BEH_Situation_Automate_ASS_FinMission, 1, emptyTable )
self.done_BEH_Situation_Automate_ASS_FinMission = function( self, _, v ) self.eActionMission = v[1] end
    end,

--[[//-----------------------------------------------------------------------------
]]--[[// Gestion des RC recus 
]]--[[//-----------------------------------------------------------------------------	
]]--[[// behavior BEH_Situation_Automate_ASS_Defaut();
]]}

node "BEH_Situation_Automate_ASS_FinMission"
{
    feedbacks = { { { "done_BEH_Situation_Automate_ASS_FinMission" }, "BEH_Situation_Automate_ASS_FinMission" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Situation_Automate_ASS_FinMission, {value} ) end,
    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        self.lst_Pions_EnTete = self.lst_Pions_EnTete or {}
        if( #( self.lst_Pions_EnTete ) == 0 ) then
            do
                self.lst_Pions_EnTete = S_ObtenirTousPionsDe( eEtatEchelon_Premier )
                                do return end

            end
        end

        local rN_Fin = 0
        for _,x in pairs( self.lst_Pions_EnTete or emptyTable ) do
        local _continue = true
do
                local x_pion = x
                 do
                    local _continue = true
--[[// Situation Mission
]]--[[// --------------------------------------------------------------------
]]                    local switch_1 = F_Pion_GeteEtatPhaseMission( x_pion )
                        if switch_1 == eEtatPhaseMission_None
                        or switch_1 == eEtatPhaseMission_FinMission then
                                                        rN_Fin = rN_Fin + 1
                            _continue = false
                                                end
                    end

            end

        end

        if( rN_Fin == #( self.lst_Pions_EnTete ) ) then
            self:SendFeedback( eActionEffectuee )
            do return end
        end

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_ASS_Defaut, "BEH_Situation_Automate_ASS_FinMission", nodes.BEH_Situation_Automate_ASS_FinMission }
