includedFiles = includedFiles or {}
includedFiles["sources/glaise/glaise_appui/nbc/pions/common/Behaviors - Dep.bms"] = true

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: MIA 03-04-29 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Appui/Nbc/Pions/Common/Behaviors - Dep.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 25/08/05 17:45 $
]]--[[// $Revision: 16 $
]]--[[// $Workfile: Behaviors - Dep.hal $
]]--[[//
]]--[[// *****************************************************************************
]]


--[[//=============================================================================
]]--[[// behavior BEH_Dep_Pion_NBC_SeCoordonnerAvec
]]--[[//=============================================================================
]]

--[[// ******************************************************************************
]]--[[// BEH_Dep_Pion_NBC_SeCoordonnerAvec
]]--[[// 
]]--[[// Commentaires: utilisé par les missions de couverture
]]--[[//
]]--[[// 
]]--[[// ******************************************************************************
]]node "BEH_Dep_Pion_NBC_SeCoordonnerAvec"
{
    feedbacks = { { { "done_BEH_Dep_Pion_NBC_SeCoordonnerAvec" }, "BEH_Dep_Pion_NBC_SeCoordonnerAvec" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Dep_Pion_NBC_SeCoordonnerAvec, {value} ) end,
    activations =
    {
        { "ACT_Dep_ModulationVitesse", { "done_ACT_Dep_ModulationVitesse" } },
        { "ACT_Dep_SePoster", { "done_ACT_Dep_SePoster" } },
        { "ACT_Info_Trace", { "done_ACT_Info_Trace" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.listePions = self.params[1]
    end,

    activate = function( self )
        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            DEC_Trace( "<== Coordinnation active avec amis ==>" )
        end

        --[[// -----------------------------------------------------------------------------
]]--[[// Aller au plus vite si mission ou un deplacement 
]]--[[// -----------------------------------------------------------------------------
]]Activate( self.activations.ACT_Dep_ModulationVitesse, 1.5, { 1, } )
        --[[// -----------------------------------------------------------------------------
]]--[[// Cas ou aucun ami en paramètre (ex:si tous détruits)
]]--[[// -----------------------------------------------------------------------------
]]if( DIA_IsListEmpty( self._namedParams.listePions ) ) then
            do
                Activate( self.activations.ACT_Dep_SePoster, 1, {} )
                Activate( self.activations.ACT_Info_Trace, 1, { "<== Pas d'amis avec lesquels se coordonner ==>", } )
                                do return end

            end
--[[//-----------------------------------------------------------------------------
]]--[[// Se coordonner par rapport au centre de gravité des pions couvert
]]--[[//-----------------------------------------------------------------------------
]]--[[/* ?? */]]        end

        local rDistance = DEC_Geometrie_CalculerDistanceLigneMoyenne( self._namedParams.listePions, myself )
        if( rDistance < M_MODELE_PION_NBC_DISTANCE_LIGNE_AMI_MIN() ) then
            do
                Activate( self.activations.ACT_Info_Trace, 1, { "<== L'unite se poste ==>", } )
                Activate( self.activations.ACT_Dep_SePoster, 1, {} )
            end
        end

    end,

--[[//=============================================================================
]]--[[// behavior BEH_Lima_Pion_NBC_SePosterSurLCA                   
]]--[[// behavior BEH_Lima_Pion_NBC_SePosterSurLC                    
]]--[[//
]]--[[// behavior BEH_Obs_Pion_NBC_ReconnaitrePoint                 
]]--[[// behavior BEH_Obs_Pion_NBC_SePosterSurBond                              
]]--[[//
]]--[[//=============================================================================
]]--[[// ******************************************************************************
]]--[[// BEH_Lima_Pion_NBC_SePosterSurLCA
]]--[[// 
]]--[[// Commentaires: se poster sur une ligne de changement d'attitude pendant un 
]]--[[//               deplacement.
]]--[[//				 Toujours face à une direction dangereuse: celle de la mission
]]--[[//               inclus un changement de dispositif --> vers dispositif de surete
]]--[[// ******************************************************************************
]]}

node "BEH_Lima_Pion_NBC_SePosterSurLCA"
{
    feedbacks = { { { "done_BEH_Lima_Pion_NBC_SePosterSurLCA" }, "BEH_Lima_Pion_NBC_SePosterSurLCA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Lima_Pion_NBC_SePosterSurLCA, {value} ) end,
    activations =
    {
        { "ACT_Dep_PasserSurLima", { "done_ACT_Dep_PasserSurLima" } },
        { "BEH_Dep_SePoster", { "done_BEH_Dep_SePoster" } },
        { "ACT_Obs_EtablirVisionCur", { "done_ACT_Obs_EtablirVisionCur" } },
    },

    create = function( self )
    end,

    activate = function( self )
        --[[// init
]]self.eEtat = self.eEtat or eActionEnCours
        --[[//-----------------------------------------------------------------------------
]]--[[// Terminaison
]]--[[//-----------------------------------------------------------------------------
]]if( DEC_Agent_NiveauInstallation() == eNiveauInstallation_PosteReflexe ) then
            self:SendFeedback( eActionEffectuee )
            Halt( self )
            do return end
        end

        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            DEC_Trace( "En poste sur LCA" )
        end

        --[[//-----------------------------------------------------------------------------
]]--[[// Etat du pion
]]--[[//-----------------------------------------------------------------------------
]]Activate( self.activations.ACT_Dep_PasserSurLima, 1, { eEtatLima_LCA, } )
        Activate( self.activations.BEH_Dep_SePoster, 1, {} )--[[//-----------------------------------------------------------------------------
]]--[[// Posture
]]--[[//-----------------------------------------------------------------------------
]]
        Activate( self.activations.ACT_Obs_EtablirVisionCur, 1, {} )
        --[[//-----------------------------------------------------------------------------
]]--[[// Passer en alerte de niveau 4
]]--[[//-----------------------------------------------------------------------------
]]SetStateVariable( "VE_NiveauNBC", 4 )
    end,

--[[// ******************************************************************************
]]--[[// BEH_Obs_Pion_NBC_ReconnaitrePoint
]]--[[// 
]]--[[// Commentaires: 
]]--[[//
]]--[[// ******************************************************************************
]]}

node "BEH_Obs_Pion_NBC_ReconnaitrePoint"
{
    feedbacks = { { { "done_BEH_Obs_Pion_NBC_ReconnaitrePoint" }, "BEH_Obs_Pion_NBC_ReconnaitrePoint" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Obs_Pion_NBC_ReconnaitrePoint, {value} ) end,
    activations =
    {
        { "ACT_Obs_ReconnaitrePoint", { "done_ACT_Obs_ReconnaitrePoint" } },
        { "ACT_Obs_EtablirVisionVersPt", { "done_ACT_Obs_EtablirVisionVersPt" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.repPoint = self.params[1]
    end,

    activate = function( self )
        self.point = self.point or DEC_Geometrie_CreerPoint()
        self.eEtat = self.eEtat or eActionEnCours
        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            --[[// Rep_Point
]]DEC_Copie_Point( self._namedParams.repPoint:Getpoint_(), self.point )
        end

        if( self.eEtat == eActionEffectuee ) then
            do
                self.eEtat = eActionEnCours
                                do
                    DEC_Trace( "Fin reconnaissance point" )
                                        self:SendFeedback( eActionEffectuee )
                    Halt( self )
                    do return end

                end

            end
--[[//-----------------------------------------------------------------------------
]]--[[// reco
]]--[[//-----------------------------------------------------------------------------
]]        end

        Activate( self.activations.ACT_Obs_ReconnaitrePoint, 1, { self.point, } )
self.done_ACT_Obs_ReconnaitrePoint = function( self, _, v ) self.eEtat = v[1] end
        Activate( self.activations.ACT_Obs_EtablirVisionVersPt, 1, { self.point, } )
    end,

--[[// ******************************************************************************
]]--[[// BEH_Obs_Pion_NBC_SePosterSurBond
]]--[[// 
]]--[[// Commentaires: se poster sur une limite de bond pendant un deplacement.
]]--[[//				 Toujours face à une direction dangereuse: celle de la mission. 
]]--[[//
]]--[[// ******************************************************************************
]]}

node "BEH_Obs_Pion_NBC_SePosterSurBond"
{
    feedbacks = { { { "done_BEH_Obs_Pion_NBC_SePosterSurBond" }, "BEH_Obs_Pion_NBC_SePosterSurBond" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Obs_Pion_NBC_SePosterSurBond, {value} ) end,
    activations =
    {
        { "ACT_Info_Trace", { "done_ACT_Info_Trace" } },
        { "ACT_Dep_SePoster", { "done_ACT_Dep_SePoster" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.repBond = self.params[1]
    end,

    activate = function( self )
        self.point = self.point or DEC_Geometrie_CreerPoint()
        self.eEtat = self.eEtat or eActionEnCours
        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                Activate( self.activations.ACT_Info_Trace, 1, { "-- En poste sur bond --", } )
                DEC_Copie_Point( self._namedParams.repBond:Getpoint_(), self.point )
            end
--[[//-----------------------------------------------------------------------------
]]--[[// En fonction de l'ambiance
]]--[[//-----------------------------------------------------------------------------
]]        end

        if( F_Pion_GeteEtatAmbiance( myself ) == eEtatAmbiance_Vitesse ) then
            do
                if( DEC_Agent_NiveauInstallation() >= eNiveauInstallation_Arret ) then
                    self:SendFeedback( eActionEffectuee )
                    Halt( self )
                    do return end
                end

            end
--[[// ambiance surete ou eni
]]        else
do
                if( DEC_Agent_NiveauInstallation() >= eNiveauInstallation_PosteReflexe ) then
                    self:SendFeedback( eActionEffectuee )
                    Halt( self )
                    do return end
                end

            end
--[[//-----------------------------------------------------------------------------
]]--[[// Posture / vision / delai
]]--[[//-----------------------------------------------------------------------------
]]        end

        Activate( self.activations.ACT_Dep_SePoster, 1, {} )
    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Dep_Pion_NBC_SeCoordonnerAvec, "ACT_Dep_ModulationVitesse", nodes.ACT_Dep_ModulationVitesse }
connections[ #connections + 1 ] = { nodes.BEH_Dep_Pion_NBC_SeCoordonnerAvec, "ACT_Dep_SePoster", nodes.ACT_Dep_SePoster }
connections[ #connections + 1 ] = { nodes.BEH_Dep_Pion_NBC_SeCoordonnerAvec, "ACT_Info_Trace", nodes.ACT_Info_Trace }
connections[ #connections + 1 ] = { nodes.BEH_Lima_Pion_NBC_SePosterSurLCA, "ACT_Dep_PasserSurLima", nodes.ACT_Dep_PasserSurLima }
connections[ #connections + 1 ] = { nodes.BEH_Lima_Pion_NBC_SePosterSurLCA, "BEH_Dep_SePoster", nodes.BEH_Dep_SePoster }
connections[ #connections + 1 ] = { nodes.BEH_Lima_Pion_NBC_SePosterSurLCA, "ACT_Obs_EtablirVisionCur", nodes.ACT_Obs_EtablirVisionCur }
connections[ #connections + 1 ] = { nodes.BEH_Obs_Pion_NBC_ReconnaitrePoint, "ACT_Obs_ReconnaitrePoint", nodes.ACT_Obs_ReconnaitrePoint }
connections[ #connections + 1 ] = { nodes.BEH_Obs_Pion_NBC_ReconnaitrePoint, "ACT_Obs_EtablirVisionVersPt", nodes.ACT_Obs_EtablirVisionVersPt }
connections[ #connections + 1 ] = { nodes.BEH_Obs_Pion_NBC_SePosterSurBond, "ACT_Info_Trace", nodes.ACT_Info_Trace }
connections[ #connections + 1 ] = { nodes.BEH_Obs_Pion_NBC_SePosterSurBond, "ACT_Dep_SePoster", nodes.ACT_Dep_SePoster }
