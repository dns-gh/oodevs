includedFiles = includedFiles or {}
includedFiles["sources/glaise/glaise_common/automates/actions/Actions - Conduite.bms"] = true

--[[// *****************************************************************************
]]--[[// ACT_Conduite_Automate_PointRegroupement_Pion
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]node "ACT_Conduite_Automate_PointRegroupement_Pion"
{
    create = function( self )
        self._namedParams = {}
        self._namedParams.pion = self.params[1]
        self._namedParams.ptRegroupement = self.params[2]
    end,

    select = function( self )
        if( ( self._namedParams.ptRegroupement == 0 or self._namedParams.ptRegroupement == nil ) ) then
            do return end
        end

        if( ( F_Pion_GetobjectifEsquive( self._namedParams.pion ) == 0 or F_Pion_GetobjectifEsquive( self._namedParams.pion ) == nil ) ) then
            F_Pion_SetobjectifEsquive( self._namedParams.pion, DEC_Geometrie_CreerPoint() )
        end

        DEC_Copie_Point( self._namedParams.ptRegroupement, F_Pion_GetobjectifEsquive( self._namedParams.pion ) )
        DEC_DebugAffichePoint( F_Pion_GetobjectifEsquive( self._namedParams.pion ) )
    end,

}

--[[// *****************************************************************************
]]--[[// ACT_Conduite_Automate_ReleverUnite
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]node "ACT_Conduite_Automate_ReleverUnite"
{
    create = function( self )
        self._namedParams = {}
        self._namedParams.pionReleve = self.params[1]
        self._namedParams.pionARelever = self.params[2]
    end,

    select = function( self )
        self.bRelevePossible = self.bRelevePossible or false
        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                DEC_Trace( "** Demande " .. DEC_GetSzName( self._namedParams.pionReleve ) .. " Relever " .. DEC_GetSzName( self._namedParams.pionARelever ) .. " **" )
                self.bRelevePossible = DEC_Automate_PionRelevePion( self._namedParams.pionReleve, self._namedParams.pionARelever )
                if( self.bRelevePossible ) then
                    DEC_RC( eRC_Releve, self._namedParams.pionARelever )
                end

            end
        end

        if( not self.bRelevePossible ) then
            self.params.__returnValue = eActionImpossible
            do return end
        end

        --[[// On met a jour l'echelon
]]F_Pion_SeteEtatEchelon( self._namedParams.pionReleve, F_Pion_GeteEtatEchelon( self._namedParams.pionARelever ) )
                self.params.__returnValue = eActionEffectuee
        do return end

    end,

}

