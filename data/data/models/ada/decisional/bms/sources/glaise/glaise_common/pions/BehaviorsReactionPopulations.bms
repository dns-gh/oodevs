includedFiles = includedFiles or {}
includedFiles["sources/glaise/glaise_common/pions/BehaviorsReactionPopulations.bms"] = true

include "bit.lua"


include "Glaise/Glaise_Common/Pions/Actions/Actions - POP.bms"

include "Glaise/Glaise_Common/Pions/Actions/Actions - POP - Maj.bms"

include "Glaise/Glaise_Common/Pions/Actions/Actions - POP - Tir.bms"


include "Glaise/Glaise_Common/Pions/Behaviors/Behaviors - POP - Mot.bms"

include "Glaise/Glaise_Common/Pions/Behaviors/Behaviors - POP - Feu.bms"

include "Glaise/Glaise_Common/Pions/Behaviors/Behaviors - POP - Dep.bms"

include "Glaise/Glaise_Common/Pions/Behaviors/Behaviors - POP - Roe.bms"

include "Glaise/Glaise_Common/Pions/behaviors/behaviors - POP - Rens.bms"


--[[// *****************************************************************************
]]--[[// BEH_Default_ReactionPopulations
]]--[[//
]]--[[//
]]--[[// *****************************************************************************
]]node "BEH_Default_ReactionPopulations"
{
    feedbacks = { { { "done_BEH_Default_ReactionPopulations" }, "BEH_Default_ReactionPopulations" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Default_ReactionPopulations, {value} ) end,
    activations =
    {
        { "BEH_ROE_Recevoir_OrdreInopinePopulation", { "done_BEH_ROE_Recevoir_OrdreInopinePopulation" } },
        { "BEH_Pop_RC", { "done_BEH_Pop_RC" } },
        { "BEH_Pop_RenseignerAuContact", { "done_BEH_Pop_RenseignerAuContact" } },
    },

    create = function( self )
    end,

    activate = function( self )
        Activate( self.activations.BEH_ROE_Recevoir_OrdreInopinePopulation, 1, {} )
        Activate( self.activations.BEH_Pop_RC, 1, {} )
        Activate( self.activations.BEH_Pop_RenseignerAuContact, 1, {} )
    end,

--[[// *****************************************************************************
]]--[[// BEH_Pop_RC
]]--[[//
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Pop_RC"
{
    feedbacks = { { { "done_BEH_Pop_RC" }, "BEH_Pop_RC" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Pop_RC, {value} ) end,
    create = function( self )
    end,

    activate = function( self )
        self.populationDangereuseSignalee = self.populationDangereuseSignalee or false
        self.lstPopsPAPenCours = self.lstPopsPAPenCours or {}
        self.mission = self.mission or DEC_GetMission( myself )
        --[[//-------------------------------------------------------------------------
]]--[[// Monitoring de g_DistanceEsquivePopulation
]]--[[// reinitialisé à chaque nouvelle mission
]]--[[//-------------------------------------------------------------------------
]]if( self.mission ~= DEC_GetMission( myself ) ) then
            do
                g_DistanceEsquivePopulation = S_Reset_g_DistanceEsquivePopulation()
                self.mission = DEC_GetMission( myself )
            end
--[[//-------------------------------------------------------------------------
]]--[[//  Signalisation de la presence d'une population dangereuse
]]--[[//-------------------------------------------------------------------------
]]        end

        local lstPops = DEC_Connaissances_Populations()
        local populationDangereuse = false
        for _,pop in pairs( lstPops or {} ) do
        local _continue = true
do
                if( DEC_ConnaissancePopulation_Dangerosite( pop ) > 1 ) then
                    do
                        if( not self.populationDangereuseSignalee ) then
                            do
                                if( not DEC_Agent_AutomateEstEmbraye() ) then
                                    DEC_RC( eRC_PopulationDangereuseAProximite )
                                else
                                    DEC_Message( eRC_PopulationDangereuseAProximite )
                                end

                            end
                        end

                        populationDangereuse = true
                        break
                    end
                end

            end

        end

        self.populationDangereuseSignalee = populationDangereuse
        --[[//-------------------------------------------------------------------------
]]--[[//  Signalisation d'une prise a partie par une population
]]--[[//-------------------------------------------------------------------------
]]local lstPopsPAP = DEC_Connaissances_PopulationsPrenantAPartie()
        local rNouvellesPopPAP = 0
        local rTailleNouvelleListe = #( lstPopsPAP )
        for _,pop in pairs( lstPopsPAP or {} ) do
        local _continue = true
if( not DEC_UserTypeList_Contient( self.lstPopsPAPenCours, pop ) ) then
                do
                    rNouvellesPopPAP = rNouvellesPopPAP + 1
                    if( not DEC_Agent_AutomateEstEmbraye() ) then
                        DEC_RC( eRC_PriseAPartieParPopulation, pop )
                    else
                        DEC_Message( eRC_PriseAPartieParPopulation, pop )
                    end

                end
--[[//-------------------------------------------------------------------------
]]--[[//  Signalisation de la fin de la prise à partie
]]--[[//-------------------------------------------------------------------------
]]            end

        end

        local rTailleAncienneListe = #( self.lstPopsPAPenCours )
        self.lstPopsPAPenCours = lstPopsPAP
        if( ( ( GetMotivation( "MOT_EsquivePopulations" ) == 0 or GetMotivation( "MOT_EsquivePopulations" ) == nil ) ) and ( ( rTailleAncienneListe - ( rTailleNouvelleListe - rNouvellesPopPAP ) ) > 0 ) ) then
            do
                if( not DEC_Agent_AutomateEstEmbraye() ) then
                    DEC_RC( eRC_PopulationTemporairementRepoussee )
                else
                    DEC_Message( eRC_PopulationTemporairementRepoussee )
                end

            end
        end

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Default_ReactionPopulations, "BEH_ROE_Recevoir_OrdreInopinePopulation", nodes.BEH_ROE_Recevoir_OrdreInopinePopulation }
connections[ #connections + 1 ] = { nodes.BEH_Default_ReactionPopulations, "BEH_Pop_RC", nodes.BEH_Pop_RC }
connections[ #connections + 1 ] = { nodes.BEH_Default_ReactionPopulations, "BEH_Pop_RenseignerAuContact", nodes.BEH_Pop_RenseignerAuContact }
