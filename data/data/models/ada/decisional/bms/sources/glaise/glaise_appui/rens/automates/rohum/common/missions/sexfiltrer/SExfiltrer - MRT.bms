includedFiles = includedFiles or {}
includedFiles["sources/glaise/glaise_appui/rens/automates/rohum/common/missions/sexfiltrer/SExfiltrer - MRT.bms"] = true

--[[// *****************************************************************************
]]--[[// BEH_Medo_Automate_RENS_ROHUM_AssignerSExfiltrerA
]]--[[//
]]--[[// Commentaires: 
]]--[[//
]]--[[// *****************************************************************************
]]node "BEH_Medo_Automate_RENS_ROHUM_AssignerSExfiltrerA"
{
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_NOK", {} },
        { "BEH_Mission_Automate_RENS_ROHUM_AssignerSExfiltrerA", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.listePions = self.params[1]
        self._namedParams.eEtatEchelon = self.params[2]
    end,

    activate = function( self )
        self.mission = self.mission or DEC_GetMission( myself )
        self.eErrorCode = self.eErrorCode or eNoError
        self.centreZone = self.centreZone or DEC_Geometrie_CalculerBarycentreLocalisationDansFuseau( self.mission.zoneDeRegroupement_, self.eErrorCode )
        --[[//---------------------------------------------------------------------
]]--[[// Assignation des missions
]]--[[//---------------------------------------------------------------------	
]]if( ModuleBegins() ) then
            do
                --[[// JCR : 11/08/2005 10:27
]]if( self.eErrorCode ~= eNoError ) then
                    do
                        DEC_Warning( eRC_MissionImpossibleZoneHorsFuseau )
                        StartActivateOverride( self, self.activations.ACT_Mission_Automate_ControleCreation_NOK, 1, {} )
                                                do return end

                    end
                end

                for _,pion in pairs( DEC_Automate_PionsAvecPC() or {} ) do
                local _continue = true
                    StartActivateOverride( self, self.activations.BEH_Mission_Automate_RENS_ROHUM_AssignerSExfiltrerA, 1, { ePhase_MRT, pion, self.mission.zoneDeRegroupement_, self._namedParams.eEtatEchelon, } )

                end

            end
        end

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Medo_Automate_RENS_ROHUM_AssignerSExfiltrerA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Medo_Automate_RENS_ROHUM_AssignerSExfiltrerA, "BEH_Mission_Automate_RENS_ROHUM_AssignerSExfiltrerA", nodes.BEH_Mission_Automate_RENS_ROHUM_AssignerSExfiltrerA }
