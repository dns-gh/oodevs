includedFiles = includedFiles or {}
includedFiles["sources/glaise/glaise_common/pions/missionsreactionpopulations/Filtrer.bms"] = true

--[[// *****************************************************************************
]]--[[// MIS_Pion_FilterPopulations
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]node "MIS_Pion_FiltrerPopulations"
{
    feedbacks = { { { "done_MIS_Pion_FiltrerPopulations" }, "MIS_Pion_FiltrerPopulations" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_MIS_Pion_FiltrerPopulations, {value} ) end,
    activations =
    {
        { "BEH_MAJ_AgressiviteMission", { "done_BEH_MAJ_AgressiviteMission" } },
        { "BEH_Pop_Pion_BloquerPopulation", { "done_BEH_Pop_Pion_BloquerPopulation" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        self.objectif = self.objectif or self._namedParams.mission.point_
        self.eEtatAction = self.eEtatAction or eActionEnCours
        Activate( self.activations.BEH_MAJ_AgressiviteMission, 1, { eReconnu, 0.5, } )
        --[[//-----------------------------------------------------------------------------
]]--[[// Pion detruit
]]--[[//-----------------------------------------------------------------------------
]]if( F_Pion_GeteEtatDestruction( myself ) ~= eEtatDestruction_None ) then
            self:SendFeedback( eActionEffectuee )
            Halt( self )
            do return end
        end

        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                F_Pion_SeteEtatAmbiance( myself, eEtatAmbiance_Vitesse )
                DEC_SetMission( myself, self._namedParams.mission )
                if( not DEC_Geometrie_EstPointDansFuseau( self.objectif ) ) then
                    do
                        DEC_Warning( eRC_MissionImpossibleZoneHorsFuseau )
                                                Halt( self )
                        do return end

                    end
                end

            end
--[[//-----------------------------------------------------------------------------
]]--[[// Filtrer la ou les  pop
]]--[[//-----------------------------------------------------------------------------
]]        end

        if( self.eEtatAction == eActionHalt ) then
            do
                                Halt( self )
                do return end

            end
        end

        Activate( self.activations.BEH_Pop_Pion_BloquerPopulation, 1, { self.objectif, 100, 125, 0.5, "MIS_FiltrerPopulations", } )
self.done_BEH_Pop_Pion_BloquerPopulation = function( self, _, v ) self.eEtatAction = v[1] end
    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Pion_FiltrerPopulations = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.MIS_Pion_FiltrerPopulations, "BEH_MAJ_AgressiviteMission", nodes.BEH_MAJ_AgressiviteMission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_FiltrerPopulations, "BEH_Pop_Pion_BloquerPopulation", nodes.BEH_Pop_Pion_BloquerPopulation }
