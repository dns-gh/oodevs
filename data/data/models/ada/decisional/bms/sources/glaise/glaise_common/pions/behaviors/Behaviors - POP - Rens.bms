includedFiles = includedFiles or {}
includedFiles["sources/glaise/glaise_common/pions/behaviors/Behaviors - POP - Rens.bms"] = true

include "bit.lua"


--[[// *****************************************************************************
]]--[[// BEH_Pop_RenseignerAuContact
]]--[[//
]]--[[// Commentaires
]]--[[//
]]--[[// *****************************************************************************
]]node "BEH_Pop_RenseignerAuContact"
{
    feedbacks = { { { "done_BEH_Pop_RenseignerAuContact" }, "BEH_Pop_RenseignerAuContact" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Pop_RenseignerAuContact, {value} ) end,
    activations =
    {
        { "ACT_Pion_RenseignerSurPop", { "done_ACT_Pion_RenseignerSurPop" } },
    },

    create = function( self )
    end,

    activate = function( self )
        --[[//-----------------------------------------------------------------------------
]]--[[// Renseigner sur les pop
]]--[[//-----------------------------------------------------------------------------
]]local lstPop = DEC_Connaissances_CollisionsPopulations()
        for _,pop in pairs( lstPop or {} ) do
        local _continue = true
do
                if( not DEC_ConnaissancePopulation_EstReconnu( pop ) ) then
                    Activate( self.activations.ACT_Pion_RenseignerSurPop, 1, { pop, } )
                end

            end

        end

    end,

--[[// *****************************************************************************
]]--[[// BEH_Pion_RenseignerSurPops
]]--[[//
]]--[[// Commentaires
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Pion_RenseignerSurPops"
{
    feedbacks = { { { "done_BEH_Pion_RenseignerSurPops" }, "BEH_Pion_RenseignerSurPops" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Pion_RenseignerSurPops, {value} ) end,
    activations =
    {
        { "BEH_Pion_RenseignerSurPop", { "done_BEH_Pion_RenseignerSurPop" } },
    },

    create = function( self )
    end,

    activate = function( self )
        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                if( not DEC_Agent_AutomateEstEmbraye() ) then
                    DEC_RC( eRC_CollecteRenseignementsSurPopulations )
                else
                    DEC_Message( eRC_CollecteRenseignementsSurPopulations )
                end

            end
--[[//-----------------------------------------------------------------------------
]]--[[// Renseigner sur les pop
]]--[[//-----------------------------------------------------------------------------
]]        end

        local lstPop = DEC_Connaissances_Populations()
        for _,pop in pairs( lstPop or {} ) do
        local _continue = true
            Activate( self.activations.BEH_Pion_RenseignerSurPop, 1, { pop, } )

        end

    end,

--[[// *****************************************************************************
]]--[[// BEH_Pion_RenseignerSurPop
]]--[[//
]]--[[// Commentaires
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Pion_RenseignerSurPop"
{
    feedbacks = { { { "done_BEH_Pion_RenseignerSurPop" }, "BEH_Pion_RenseignerSurPop" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Pion_RenseignerSurPop, {value} ) end,
    activations =
    {
        { "ACT_Pion_RenseignerSurPop", { "done_ACT_Pion_RenseignerSurPop" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.pop = self.params[1]
    end,

    activate = function( self )
        --[[//-----------------------------------------------------------------------------
]]--[[// Renseigner si...
]]--[[//-----------------------------------------------------------------------------
]]if( DEC_Agent_NiveauInstallation() >= eNiveauInstallation_Poste and not DEC_ConnaissancePopulation_EstReconnu( self._namedParams.pop ) ) then
            do
                if( DEC_ConnaissancePopulation_EstPercueParUnite( self._namedParams.pop ) ) then
                    Activate( self.activations.ACT_Pion_RenseignerSurPop, 1, { self._namedParams.pop, } )
                end

            end
        end

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Pion_RenseignerSurPop, "ACT_Pion_RenseignerSurPop", nodes.ACT_Pion_RenseignerSurPop }
connections[ #connections + 1 ] = { nodes.BEH_Pion_RenseignerSurPops, "BEH_Pion_RenseignerSurPop", nodes.BEH_Pion_RenseignerSurPop }
connections[ #connections + 1 ] = { nodes.BEH_Pop_RenseignerAuContact, "ACT_Pion_RenseignerSurPop", nodes.ACT_Pion_RenseignerSurPop }
