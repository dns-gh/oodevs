includedFiles = includedFiles or {}
includedFiles["sources/glaise/glaise_appui/nbc/pions/common/missions/ArmerPlotDecontamination.bms"] = true

local emptyTable = emptyTable

--[[// *****************************************************************************
]]--[[// BEH_Mission_Pion_NBC_AnimerPlotDecontamination
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]node "BEH_Mission_Pion_NBC_AnimerPlotDecontamination"
{
    feedbacks = { { { "done_BEH_Mission_Pion_NBC_AnimerPlotDecontamination" }, "BEH_Mission_Pion_NBC_AnimerPlotDecontamination" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Pion_NBC_AnimerPlotDecontamination, {value} ) end,
    activations =
    {
        { "BEH_Ordre_Inopine", { "done_BEH_Ordre_Inopine" } },
        { "ACT_MAJ_EtatPhaseMission", { "done_ACT_MAJ_EtatPhaseMission" } },
        { "ACT_Info_Trace", { "done_ACT_Info_Trace" } },
        { "BEH_Dep_ProgressionVers", { "done_BEH_Dep_ProgressionVers" } },
        { "ACT_Pion_Nbc_CreerSiteSur", { "done_ACT_Pion_Nbc_CreerSiteSur" } },
        { "ACT_Warning", { "done_ACT_Warning" } },
        { "BEH_Pion_NBC_AnimerSite", { "done_BEH_Pion_NBC_AnimerSite" } },
        { "BEH_Dep_SePosterFaceADirectionDangereuse", { "done_BEH_Dep_SePosterFaceADirectionDangereuse" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params[1]
    end,

    activate = function( self )
        local Activate = Activate
        self.eEtat = self.eEtat or eActionEnCours
        self.ePhaseMission = self.ePhaseMission or ePreparerMission
        self.siteDecontamination = self.siteDecontamination or nil
        self.eEtatOrdreFinMission = self.eEtatOrdreFinMission or eActionEnCours
        Activate( self.activations.BEH_Ordre_Inopine, 1, emptyTable )
self.done_BEH_Ordre_Inopine = function( self, _, v ) self.eEtatOrdreFinMission = v[1] end
        if( self.eEtatOrdreFinMission == eActionHalt ) then
            do
                self.ePhaseMission = eFinMission
                self.eEtat = eActionEnCours
                self.eEtatOrdreFinMission = eActionEnCours
            end
--[[//-----------------------------------------------------------------------------
]]--[[// Pion detruit
]]--[[//-----------------------------------------------------------------------------
]]        end

        if( F_Pion_GeteEtatDestruction( myself ) ~= eEtatDestruction_None ) then
            self:SendFeedback( eActionEffectuee )
            Halt( self )
            do return end
        end

        --[[//-----------------------------------------------------------------------------
]]--[[// Ambiance
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                SetStateVariable( "VE_NiveauNBC", 4 )
                F_Pion_SeteEtatAmbiance( myself, eEtatAmbiance_Vitesse )
            end
        end

         do
            local _continue = true
--[[// 1) Preparer mission
]]--[[// 2) Rejoindre la position
]]--[[// 3) Qd prêt Barrer la direction dangereuse
]]--[[//---------------------------------------------------------------------
]]--[[// Tester la saturation du site
]]--[[//---------------------------------------------------------------------
]]--[[//---------------------------------------------------------------------
]]--[[// Rejoindre le site
]]--[[//---------------------------------------------------------------------
]]--[[//---------------------------------------------------------------------
]]--[[// Animer le site
]]--[[//---------------------------------------------------------------------
]]--[[// 4) Fin de la mission de reconnaissance SUR ORDRE
]]            local switch_1 = self.ePhaseMission
                if switch_1 == ePreparerMission then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_DebutMission, } )
                    Activate( self.activations.ACT_Info_Trace, 1, { "BEH_Mission_Pion_NBC_Animer Site: debut", } )
                    self.ePhaseMission = eProgresser
                    _continue = false
                elseif switch_1 == eProgresser then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_ProgressionVersLocalisation, } )
                    if( DEC_Geometrie_Distance( myself:DEC_Agent_Position(), self._namedParams.mission.positionSiteDecontamination_ ) < 300 ) then
                        self.ePhaseMission = eAnimer
                    end

                    Activate( self.activations.BEH_Dep_ProgressionVers, 1, { self._namedParams.mission.positionSiteDecontamination_, eProgressionBond, eTypeItiMouvement, } )
                    _continue = false
                elseif switch_1 == eAnimer then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_ArriveSurLocalisation, } )
                    self.siteDecontamination = S_Nbc_ObtenirSiteSur( self._namedParams.mission.positionSiteDecontamination_ )
                    if( self.siteDecontamination == nil ) then
                        do
                            Activate( self.activations.ACT_Pion_Nbc_CreerSiteSur, 1, { self._namedParams.mission.positionSiteDecontamination_, } )
                                                        do return end

                        end
                    end

                    if( not DEC_ConnaissanceObjet_PeutEtreAnime( self.siteDecontamination ) ) then
                        do
                            Activate( self.activations.ACT_Warning, 1, { eRC_SiteSature, } )
                            Activate( self.activations.ACT_Info_Trace, 1, { "Le site est saturé...en attente", } )
                                                        do return end

                        end
                    end

                    if( DEC_Geometrie_Distance( myself:DEC_Agent_Position(), self._namedParams.mission.positionSiteDecontamination_ ) > 300 ) then
                        self.ePhaseMission = eProgresser
                    end

                    Activate( self.activations.BEH_Pion_NBC_AnimerSite, 1, { self.siteDecontamination, } )
                    _continue = false
                elseif switch_1 == eFinMission then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_FinMission, } )
                    Activate( self.activations.BEH_Dep_SePosterFaceADirectionDangereuse, 1, emptyTable )
                    _continue = false
                
                else
                                end
            end

    end,

--[[// *****************************************************************************
]]--[[// BEH_Pion_NBC_AnimerSite
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Pion_NBC_AnimerSite"
{
    feedbacks = { { { "done_BEH_Pion_NBC_AnimerSite" }, "BEH_Pion_NBC_AnimerSite" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Pion_NBC_AnimerSite, {value} ) end,
    activations =
    {
        { "ACT_Pion_Nbc_AnimerSite", { "done_ACT_Pion_Nbc_AnimerSite" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.siteDecontamination = self.params[1]
    end,

    activate = function( self )
        local Activate = Activate
        if( DEC_Agent_NiveauInstallation() >= eNiveauInstallation_Poste ) then
            Activate( self.activations.ACT_Pion_Nbc_AnimerSite, 1, { self._namedParams.siteDecontamination, } )
        end

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_NBC_AnimerPlotDecontamination, "BEH_Ordre_Inopine", nodes.BEH_Ordre_Inopine }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_NBC_AnimerPlotDecontamination, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_NBC_AnimerPlotDecontamination, "ACT_Info_Trace", nodes.ACT_Info_Trace }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_NBC_AnimerPlotDecontamination, "BEH_Dep_ProgressionVers", nodes.BEH_Dep_ProgressionVers }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_NBC_AnimerPlotDecontamination, "ACT_Pion_Nbc_CreerSiteSur", nodes.ACT_Pion_Nbc_CreerSiteSur }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_NBC_AnimerPlotDecontamination, "ACT_Warning", nodes.ACT_Warning }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_NBC_AnimerPlotDecontamination, "BEH_Pion_NBC_AnimerSite", nodes.BEH_Pion_NBC_AnimerSite }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_NBC_AnimerPlotDecontamination, "BEH_Dep_SePosterFaceADirectionDangereuse", nodes.BEH_Dep_SePosterFaceADirectionDangereuse }
connections[ #connections + 1 ] = { nodes.BEH_Pion_NBC_AnimerSite, "ACT_Pion_Nbc_AnimerSite", nodes.ACT_Pion_Nbc_AnimerSite }
