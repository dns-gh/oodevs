includedFiles = includedFiles or {}
includedFiles["sources/glaise/glaise_appui/log/pions/Behaviors.bms"] = true

local emptyTable = emptyTable

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: SDE 02-11-22 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Appui/Log/Pions/Behaviors.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 20/09/05 13:25 $
]]--[[// $Revision: 39 $
]]--[[// $Workfile: Behaviors.hal $
]]--[[//
]]--[[// *****************************************************************************
]]
--[[// Paramètres généraux
]]--[[// -------------------
]]use_priority = no

max_instances = 100

max_activations = 100


actuators = {
installation = 1,
etat_OrdreCoordination = 1,
deplacement = 1,
tir = 1,
vitesse = 1,
observation = 1,
obstacle = 1,
reconnaissance = 1,
etat_Dec = 1,
etat_Lima = 1,
etat_Destruction = 1,
ennemi = 1,
etat_Mission = 1,
objectifEsquive = 1,
controlePopulation = 1,
etat_ROE = 1,
}


include "glaise/glaise_Common/Pions/Behaviors.bms"


--[[//missions génériques
]]include "glaise/glaise_Common/Pions/MissionsGeneriques.bms"


include "glaise/glaise_Appui/Log/Pions/Actions.bms"

include "glaise/glaise_Appui/Log/Pions/Missions/Missions.bms"


--[[// *****************************************************************************
]]--[[// Comportement par défaut.
]]--[[//
]]--[[// Commentaires: 
]]--[[//
]]--[[// *****************************************************************************
]]node "BEH_Defaut"
{
    feedbacks = { { { "done_BEH_Defaut" }, "BEH_Defaut" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Defaut, {value} ) end,
    activations =
    {
        { "BEH_Mot_AffecterVariablesDEtat", { "done_BEH_Mot_AffecterVariablesDEtat" } },
        { "BEH_MAJ_EtatDefaut", { "done_BEH_MAJ_EtatDefaut" } },
        { "BEH_Ambiance", { "done_BEH_Ambiance" } },
        { "BEH_Nbc", { "done_BEH_Nbc" } },
        { "BEH_ROE", { "done_BEH_ROE" } },
        { "BEH_Rens", { "done_BEH_Rens" } },
        { "BEH_Ordre_Pion_LOG_OrdresInopines", { "done_BEH_Ordre_Pion_LOG_OrdresInopines" } },
        { "ACT_Misc_Pion_LOG_ActiverSante", { "done_ACT_Misc_Pion_LOG_ActiverSante" } },
        { "ACT_Misc_Pion_LOG_ActiverMaintenance", { "done_ACT_Misc_Pion_LOG_ActiverMaintenance" } },
        { "ACT_Misc_Pion_LOG_ActiverRavitaillement", { "done_ACT_Misc_Pion_LOG_ActiverRavitaillement" } },
        { "BEH_Log_Pion_GererActivationsChaines", { "done_BEH_Log_Pion_GererActivationsChaines" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.nDummy = self.params[1]
    end,

    activate = function( self )
        local Activate = Activate
        Activate( self.activations.BEH_Mot_AffecterVariablesDEtat, 1, emptyTable )--[[//-----------------------------------------------------------------------------
]]--[[// MAJ VE
]]--[[//-----------------------------------------------------------------------------
]]
        Activate( self.activations.BEH_MAJ_EtatDefaut, 1, emptyTable )--[[//-----------------------------------------------------------------------------
]]--[[// MAJ de l'état DEC par défaut 
]]--[[//-----------------------------------------------------------------------------
]]
        Activate( self.activations.BEH_Ambiance, 1, emptyTable )--[[// ---------------------------------------------------------------------
]]--[[// Comp générique
]]--[[// ---------------------------------------------------------------------
]]
        Activate( self.activations.BEH_Nbc, 1, emptyTable )
        Activate( self.activations.BEH_ROE, 1, emptyTable )
        Activate( self.activations.BEH_Rens, 1, emptyTable )
        Activate( self.activations.BEH_Ordre_Pion_LOG_OrdresInopines, 1, emptyTable )--[[// ---------------------------------------------------------------------
]]--[[// Spé log --> marche quand mission en cours
]]--[[// ---------------------------------------------------------------------
]]
        --[[//-----------////////// activation des chaînes //////////-------------//
]]--[[//---------------------------------------------------------------------
]]--[[// Cas du TC2
]]--[[//---------------------------------------------------------------------
]]if( myself:GetType() == "SectionLOGTC2" ) then
            do
                Activate( self.activations.ACT_Misc_Pion_LOG_ActiverSante, 1, emptyTable )
                Activate( self.activations.ACT_Misc_Pion_LOG_ActiverMaintenance, 1, emptyTable )
                Activate( self.activations.ACT_Misc_Pion_LOG_ActiverRavitaillement, 1, emptyTable )
                                do return end

            end
--[[//---------------------------------------------------------------------
]]--[[// Cas des convois
]]--[[//---------------------------------------------------------------------
]]        end

        if( myself:GetType() == "PionConvoi" ) then
            do
                --[[// fin de la mission si destruction
]]if( S_Misc_EstDetruitPhysique() ) then
                    DEC_Ravitaillement_Convoi_FinMission()
                end

                                do return end

            end
--[[//---------------------------------------------------------------------
]]--[[// Sinon activation quand posté
]]--[[//---------------------------------------------------------------------
]]        end

        Activate( self.activations.BEH_Log_Pion_GererActivationsChaines, 1, emptyTable )
    end,

--[[// *****************************************************************************
]]--[[// Mise à jour des variables d'Etat du Pion
]]--[[// (MIA)
]]--[[//
]]--[[// Commentaire : Ce comportement est à inclure dans le BEH_Defaut du pion
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mot_AffecterVariablesDEtat"
{
    feedbacks = { { { "done_BEH_Mot_AffecterVariablesDEtat" }, "BEH_Mot_AffecterVariablesDEtat" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mot_AffecterVariablesDEtat, {value} ) end,
    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
    end,

--[[// $$$$ MIA: esquive uniquement sur PAP   
]]--[[// *****************************************************************************
]]--[[// BEH_Ordre_Pion_LOG_OrdresInopines
]]--[[//
]]--[[// Commentaires: 
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Ordre_Pion_LOG_OrdresInopines"
{
    feedbacks = { { { "done_BEH_Ordre_Pion_LOG_OrdresInopines" }, "BEH_Ordre_Pion_LOG_OrdresInopines" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Ordre_Pion_LOG_OrdresInopines, {value} ) end,
    activations =
    {
        { "ACT_Misc_Pion_LOG_PreterRemorqueurs", { "done_ACT_Misc_Pion_LOG_PreterRemorqueurs" } },
        { "ACT_Misc_Pion_LOG_RecupererRemorqueurs", { "done_ACT_Misc_Pion_LOG_RecupererRemorqueurs" } },
        { "ACT_Misc_Pion_LOG_PreterVSRAM", { "done_ACT_Misc_Pion_LOG_PreterVSRAM" } },
        { "ACT_Misc_Pion_LOG_RecupererVSRAM", { "done_ACT_Misc_Pion_LOG_RecupererVSRAM" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        local ordres_recus = DEC_GetCategory( "ordres_recus" )
        for _,x in pairs( ordres_recus or emptyTable ) do
        local _continue = true
do
                local ordre = x
                --[[//-----------------------------------------------------------------------------
]]--[[// ordre de conduite
]]--[[//-----------------------------------------------------------------------------
]]local repOrdre = ordre
                local bEstUtilise = true
                 do
                    local _continue = true
                    local switch_1 = repOrdre:GetType()
                    local cases_switch_1 = {}
                        if switch_1 == "Rep_OrderConduite_Pion_RenforcerEnRemorqueurs" then
                            local repOrdreRenforcer = ordre
                            StartActivateOverride( self, self.activations.ACT_Misc_Pion_LOG_PreterRemorqueurs, 1, { repOrdreRenforcer:GetpionARenforcer_(), repOrdreRenforcer:GetnbrRemorqueurs_(), } )
                            _continue = false
                                                cases_switch_1[1] = true
elseif switch_1 == "Rep_OrderConduite_Pion_TransfererRemorqueurs" then
                            local repOrdreTransferer = ordre
                            StartActivateOverride( self, self.activations.ACT_Misc_Pion_LOG_PreterRemorqueurs, 1, { repOrdreTransferer:GetpionARenforcer_(), repOrdreTransferer:GetnbrRemorqueurs_(), } )
                            _continue = false
                                                cases_switch_1[2] = true
elseif switch_1 == "Rep_OrderConduite_Pion_ReprendreAuxOrdresRemorqueurs" then
                            local repOrdreReprendre = ordre
                            StartActivateOverride( self, self.activations.ACT_Misc_Pion_LOG_RecupererRemorqueurs, 1, { repOrdreReprendre:GetpionRenforce_(), repOrdreReprendre:GetnbrRemorqueurs_(), } )
                            _continue = false
                                                cases_switch_1[3] = true
elseif switch_1 == "Rep_OrderConduite_Pion_RenforcerEnVSRAM" then
                            local repOrdreRenforcer = ordre
                            StartActivateOverride( self, self.activations.ACT_Misc_Pion_LOG_PreterVSRAM, 1, { repOrdreRenforcer:GetpionARenforcer_(), repOrdreRenforcer:GetnbrAmbulances_(), } )
                            _continue = false
                                                cases_switch_1[4] = true
elseif switch_1 == "Rep_OrderConduite_Pion_TransfererVSRAM" then
                            local repOrdreTransferer = ordre
                            StartActivateOverride( self, self.activations.ACT_Misc_Pion_LOG_PreterVSRAM, 1, { repOrdreTransferer:GetpionARenforcer_(), repOrdreTransferer:GetnbrAmbulances_(), } )
                            _continue = false
                                                cases_switch_1[5] = true
elseif switch_1 == "Rep_OrderConduite_Pion_ReprendreAuxOrdresVSRAM" then
                            local repOrdreReprendre = ordre
                            StartActivateOverride( self, self.activations.ACT_Misc_Pion_LOG_RecupererVSRAM, 1, { repOrdreReprendre:GetpionRenforce_(), repOrdreReprendre:GetnbrAmbulances_(), } )
                            _continue = false
                                                cases_switch_1[6] = true
elseif switch_1 == "Rep_OrderConduite_ModifierRegimeTravailMaintenance" then
                            local repOrderRegimeMaint = ordre
                            DEC_Maintenance_ChangerRegimeTravail( repOrderRegimeMaint:GetorderConduiteModifierRegimeTravailMaintenance_() )
                            _continue = false
                                                cases_switch_1[7] = true
elseif switch_1 == "Rep_OrderConduite_ModifierPrioritesReparations" then
                            local repOrdrePrioriteMain = ordre
                            DEC_Maintenance_ChangerPriorites( repOrdrePrioriteMain:GetorderConduiteModifierPrioritesReparations_() )
                            _continue = false
                                                cases_switch_1[8] = true
elseif switch_1 == "Rep_OrderConduite_ModifierPrioritesBlesses" then
                            local repOrdrePrioriteSan = ordre
                            DEC_Sante_ChangerPriorites( repOrdrePrioriteSan:GetorderConduiteModifierPrioritesBlesses_() )
                            _continue = false
                                                cases_switch_1[9] = true
elseif switch_1 == "Rep_OrderConduite_ModifierPrioritesTactiquesReparations" then
                            local tmp = ordre
                            DEC_Maintenance_ChangerPrioritesTactiques( tmp:GetorderConduiteModifierPrioritesTactiquesReparations_() )
                            _continue = false
                                                cases_switch_1[10] = true
elseif switch_1 == "Rep_OrderConduite_ModifierPrioritesTactiquesBlesses" then
                            local tmp = ordre
                            DEC_Sante_ChangerPrioritesTactiques( tmp:GetorderConduiteModifierPrioritesTactiquesBlesses_() )
                            _continue = false
                                                cases_switch_1[11] = true

                        else
                            bEstUtilise = false
                            _continue = false
                                                end
                    end

                if( bEstUtilise ) then
                    do
                        --[[// on a finit de traiter l'ordre, on le supprime
]]DEC_RemoveFromCategory( "ordres_recus", ordre )
                        DEC_DeleteRepresentation( ordre )
                    end
                end

            end

        end

    end,

--[[// *****************************************************************************
]]--[[// BEH_Log_Pion_GererActivationsChaines
]]--[[//
]]--[[// Commentaires: seulement si on est installé
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Log_Pion_GererActivationsChaines"
{
    feedbacks = { { { "done_BEH_Log_Pion_GererActivationsChaines" }, "BEH_Log_Pion_GererActivationsChaines" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Log_Pion_GererActivationsChaines, {value} ) end,
    activations =
    {
        { "ACT_Misc_Pion_LOG_ActiverSante", { "done_ACT_Misc_Pion_LOG_ActiverSante" } },
        { "ACT_Misc_Pion_LOG_ActiverMaintenance", { "done_ACT_Misc_Pion_LOG_ActiverMaintenance" } },
        { "ACT_Misc_Pion_LOG_ActiverRavitaillement", { "done_ACT_Misc_Pion_LOG_ActiverRavitaillement" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        if( DEC_Agent_EstInstalle() ) then
            do
                Activate( self.activations.ACT_Misc_Pion_LOG_ActiverSante, 1, emptyTable )
                Activate( self.activations.ACT_Misc_Pion_LOG_ActiverMaintenance, 1, emptyTable )
                Activate( self.activations.ACT_Misc_Pion_LOG_ActiverRavitaillement, 1, emptyTable )
            end
        end

    end,

--[[////////////////////////////// PARTIE COMPORTEMENTS VIRTUELS /////////////////////////////////////////////////////
]]--[[// *****************************************************************************
]]--[[// BEH_Dep_Virtuel_ProgressionVers
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Dep_Virtuel_ProgressionVers"
{
    feedbacks = { { { "done_BEH_Dep_Virtuel_ProgressionVers" }, "BEH_Dep_Virtuel_ProgressionVers" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Dep_Virtuel_ProgressionVers, {value} ) end,
    activations =
    {
        { "BEH_Dep_ProgressionVers", { "done_BEH_Dep_ProgressionVers" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.point = self.params[1]
        self._namedParams.eTypeProgression = self.params[2]
        self._namedParams.eTypeIti = self.params[3]
    end,

    activate = function( self )
        local Activate = Activate
        Activate( self.activations.BEH_Dep_ProgressionVers, 1, { self._namedParams.point, self._namedParams.eTypeProgression, self._namedParams.eTypeIti, } )
    end,

--[[// *****************************************************************************
]]--[[// BEH_Dep_Virtuel_PreparationAction
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Dep_Virtuel_PreparationAction"
{
    feedbacks = { { { "done_BEH_Dep_Virtuel_PreparationAction" }, "BEH_Dep_Virtuel_PreparationAction" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Dep_Virtuel_PreparationAction, {value} ) end,
    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
                self:SendFeedback( eActionEffectuee )
        do return end

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Mot_AffecterVariablesDEtat", nodes.BEH_Mot_AffecterVariablesDEtat }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_MAJ_EtatDefaut", nodes.BEH_MAJ_EtatDefaut }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Ambiance", nodes.BEH_Ambiance }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Nbc", nodes.BEH_Nbc }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_ROE", nodes.BEH_ROE }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Rens", nodes.BEH_Rens }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Ordre_Pion_LOG_OrdresInopines", nodes.BEH_Ordre_Pion_LOG_OrdresInopines }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "ACT_Misc_Pion_LOG_ActiverSante", nodes.ACT_Misc_Pion_LOG_ActiverSante }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "ACT_Misc_Pion_LOG_ActiverMaintenance", nodes.ACT_Misc_Pion_LOG_ActiverMaintenance }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "ACT_Misc_Pion_LOG_ActiverRavitaillement", nodes.ACT_Misc_Pion_LOG_ActiverRavitaillement }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Log_Pion_GererActivationsChaines", nodes.BEH_Log_Pion_GererActivationsChaines }
connections[ #connections + 1 ] = { nodes.BEH_Dep_Virtuel_ProgressionVers, "BEH_Dep_ProgressionVers", nodes.BEH_Dep_ProgressionVers }
connections[ #connections + 1 ] = { nodes.BEH_Log_Pion_GererActivationsChaines, "ACT_Misc_Pion_LOG_ActiverSante", nodes.ACT_Misc_Pion_LOG_ActiverSante }
connections[ #connections + 1 ] = { nodes.BEH_Log_Pion_GererActivationsChaines, "ACT_Misc_Pion_LOG_ActiverMaintenance", nodes.ACT_Misc_Pion_LOG_ActiverMaintenance }
connections[ #connections + 1 ] = { nodes.BEH_Log_Pion_GererActivationsChaines, "ACT_Misc_Pion_LOG_ActiverRavitaillement", nodes.ACT_Misc_Pion_LOG_ActiverRavitaillement }
connections[ #connections + 1 ] = { nodes.BEH_Ordre_Pion_LOG_OrdresInopines, "ACT_Misc_Pion_LOG_PreterRemorqueurs", nodes.ACT_Misc_Pion_LOG_PreterRemorqueurs }
connections[ #connections + 1 ] = { nodes.BEH_Ordre_Pion_LOG_OrdresInopines, "ACT_Misc_Pion_LOG_RecupererRemorqueurs", nodes.ACT_Misc_Pion_LOG_RecupererRemorqueurs }
connections[ #connections + 1 ] = { nodes.BEH_Ordre_Pion_LOG_OrdresInopines, "ACT_Misc_Pion_LOG_PreterVSRAM", nodes.ACT_Misc_Pion_LOG_PreterVSRAM }
connections[ #connections + 1 ] = { nodes.BEH_Ordre_Pion_LOG_OrdresInopines, "ACT_Misc_Pion_LOG_RecupererVSRAM", nodes.ACT_Misc_Pion_LOG_RecupererVSRAM }
