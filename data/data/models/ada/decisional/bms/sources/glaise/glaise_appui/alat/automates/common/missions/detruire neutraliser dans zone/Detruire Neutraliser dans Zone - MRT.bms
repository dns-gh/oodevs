includedFiles = includedFiles or {}
includedFiles["sources/glaise/glaise_appui/alat/automates/common/missions/detruire neutraliser dans zone/Detruire Neutraliser dans Zone - MRT.bms"] = true

--[[// -----------------------------------------------------------------------------
]]--[[// Detruire Neutraliser dans zone :
]]--[[// -----------------------------------------------------------------------------
]]node "MIS_Automate_MRT_ALAT_DetruireNeutraliserDansZone"
{
    feedbacks = { { { "done_MIS_Automate_MRT_ALAT_DetruireNeutraliserDansZone" }, "MIS_Automate_MRT_ALAT_DetruireNeutraliserDansZone" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_MIS_Automate_MRT_ALAT_DetruireNeutraliserDansZone, {value} ) end,
    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        self.selPions = self.selPions or S_Cherche_Automate_PionsOperationnels( DEC_Automate_PionsSansPC() )
        self.listeHAH = self.listeHAH or S_Cherche_Automate_Filtre_TypePion( self.selPions, "PatrouilleHAH" )
        self.listeTigre = self.listeTigre or S_Cherche_Automate_Filtre_TypePion( self.selPions, "PatrouilleTigre" )
        self.listeHAPCanons = self.listeHAPCanons or S_Cherche_Automate_Filtre_TypePion( self.selPions, "PatrouilleHAC" )
        self.listeHAM = self.listeHAM or S_Cherche_Automate_Filtre_TypePion( self.selPions, "PatrouilleHAM" )
        self.listeDetruire = self.listeDetruire or {}
        if( ModuleBegins() ) then
            do
                S_Liste_Concatene( self.listeDetruire, self.listeHAH, self.listeTigre )
                S_Liste_Concatene( self.listeDetruire, self.listeDetruire, self.listeHAPCanons )
                myself.sPlotsDeRavitaillement_ = self._namedParams.mission.plotsRavitaillement_
                DEC_SetMission( myself, self._namedParams.mission )
                if( DIA_IsListEmpty( self.listeDetruire ) ) then
                    do
                        DEC_Warning( eRC_MissionImpossibleUnitesSubordonneesNonOperationnelles )
                                                self:SendFeedback( eActionImpossible )
                        Halt( self )
                        do return end

                    end
                end

            end
        end

        DEC_MRT_Valide()
                self:SendFeedback( eActionEffectuee )
        Halt( self )
        do return end

    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Automate_MRT_ALAT_DetruireNeutraliserDansZone = { "mission" }
