includedFiles = includedFiles or {}
includedFiles["sources/glaise/glaise_melee/inf/pions/common/Behaviors - Mot.bms"] = true

local emptyTable = emptyTable

include "bit.lua"


--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JCR 03-02-20 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Inf/Pions/Common/Behaviors - Mot.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 8/07/05 16:21 $
]]--[[// $Revision: 14 $
]]--[[// $Workfile: Behaviors - Mot.hal $
]]--[[//
]]--[[// *****************************************************************************
]]


--[[// Motivations specifiques pour l'infanterie : en parallele
]]--[[// ------------------------------------------------------------------------
]]node "BEH_MOT_Pion_INF_GarderSesDistances"
{
    feedbacks = { { { "done_BEH_MOT_Pion_INF_GarderSesDistances" }, "BEH_MOT_Pion_INF_GarderSesDistances" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_MOT_Pion_INF_GarderSesDistances, {value} ) end,
    activations =
    {
        { "BEH_MOT_Pion_INF_GarderSesDistancesFaceA", { "done_BEH_MOT_Pion_INF_GarderSesDistancesFaceA" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        local lstEnisDangereux = DEC_Connaissances_UnitesEnnemiesDangereuses()
        for _,ksEni in pairs( lstEnisDangereux or emptyTable ) do
        local _continue = true
            Activate( self.activations.BEH_MOT_Pion_INF_GarderSesDistancesFaceA, S_Force_DangerSur( ksEni ), { ksEni, } )

        end

    end,

--[[// ----------------------------------------------------------------------------
]]--[[// BEH_MOT_Pion_INF_GarderSesDistancesFaceA
]]--[[// ----------------------------------------------------------------------------
]]}

node "BEH_MOT_Pion_INF_GarderSesDistancesFaceA"
{
    feedbacks = { { { "done_BEH_MOT_Pion_INF_GarderSesDistancesFaceA" }, "BEH_MOT_Pion_INF_GarderSesDistancesFaceA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_MOT_Pion_INF_GarderSesDistancesFaceA, {value} ) end,
    activations =
    {
        { "ACT_Tir_INF_FumigeneVersEni", { "done_ACT_Tir_INF_FumigeneVersEni" } },
        { "ACT_MAJ_EnnemiEnCours", { "done_ACT_MAJ_EnnemiEnCours" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ksEni = self.params[1]
    end,

    activate = function( self )
        local Activate = Activate
        self.bAutoriseDebarquement = self.bAutoriseDebarquement or ( myself:GetType() ~= "SectionInfanterie_HOT" ) or ( not DEC_Agent_EstPC() )
        if( ModuleBegins() ) then
            do
                --[[// Tir les fumigenes	
]]if( S_Eni_SuisDetectePar( self._namedParams.ksEni ) ) then
                    StartActivateOverride( self, self.activations.ACT_Tir_INF_FumigeneVersEni, 1, { self._namedParams.ksEni, } )
                end

            end
        end

        Activate( self.activations.ACT_MAJ_EnnemiEnCours, 1, { self._namedParams.ksEni, } )
    end,

--[[// ----------------------------------------------------------------------------
]]--[[// BEH_MOT_Pion_INF_GarderSesDistances_GererTransport
]]--[[//
]]--[[// Debarque si la motivation de garder sa distance est active et que l'on est 
]]--[[// arrete
]]--[[// ----------------------------------------------------------------------------
]]}

node "BEH_MOT_Pion_INF_GarderSesDistances_GererTransport"
{
    feedbacks = { { { "done_BEH_MOT_Pion_INF_GarderSesDistances_GererTransport" }, "BEH_MOT_Pion_INF_GarderSesDistances_GererTransport" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_MOT_Pion_INF_GarderSesDistances_GererTransport, {value} ) end,
    activations =
    {
        { "BEH_MOT_Pion_INF_Debarquer", { "done_BEH_MOT_Pion_INF_Debarquer" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        if( DEC_Agent_EstEmbarque() and ( eNiveauInstallation_Poste == DEC_Agent_NiveauInstallation() ) ) then
            do
                local lstEnisDangereux = DEC_Connaissances_UnitesEnnemiesDangereuses()
                for _,ksEni in pairs( lstEnisDangereux or emptyTable ) do
                local _continue = true
                    StartActivateOverride( self, self.activations.BEH_MOT_Pion_INF_Debarquer, 1, emptyTable )--[[// : strength = 1.1 * S_Force_DangerSur( ksEni );
]]

                end

            end
        end

    end,

--[[// ----------------------------------------------------------------------------
]]--[[// BEH_MOT_Pion_INF_EtrePrudent_GererTransport
]]--[[//
]]--[[// Debarque si la motivation d'etre prudent est active 
]]--[[// ----------------------------------------------------------------------------
]]}

node "BEH_MOT_Pion_INF_EtrePrudent_GererTransport"
{
    feedbacks = { { { "done_BEH_MOT_Pion_INF_EtrePrudent_GererTransport" }, "BEH_MOT_Pion_INF_EtrePrudent_GererTransport" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_MOT_Pion_INF_EtrePrudent_GererTransport, {value} ) end,
    activations =
    {
        { "BEH_MOT_Pion_INF_Debarquer", { "done_BEH_MOT_Pion_INF_Debarquer" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        if( F_Pion_GeteEtatDecPrudence( myself ) == eEtatDecPrudence_Actif and DEC_Agent_EstEmbarque() ) then
            do
                local lstEnisDangereux = DEC_Connaissances_UnitesEnnemiesDangereuses()
                for _,ksEni in pairs( lstEnisDangereux or emptyTable ) do
                local _continue = true
                    StartActivateOverride( self, self.activations.BEH_MOT_Pion_INF_Debarquer, 1, emptyTable )--[[// : strength = 1.1 * S_Force_DangerSur( ksEni );
]]

                end

            end
        end

    end,

--[[// ----------------------------------------------------------------------------
]]--[[// BEH_Mot_Delai_Pion_INF_AugmenterAgression
]]--[[//  Desactive la sauvegarde pendant le delai escompte
]]--[[// ----------------------------------------------------------------------------
]]}

node "BEH_Mot_Delai_Pion_INF_AugmenterAgression"
{
    feedbacks = { { { "done_BEH_Mot_Delai_Pion_INF_AugmenterAgression" }, "BEH_Mot_Delai_Pion_INF_AugmenterAgression" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mot_Delai_Pion_INF_AugmenterAgression, {value} ) end,
    activations =
    {
        { "ACT_Misc_Delai", { "done_ACT_Misc_Delai" } },
        { "BEH_MOT_DesactiveSauvegarde", { "done_BEH_MOT_DesactiveSauvegarde" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.rDelai = self.params[1]
    end,

    activate = function( self )
        local Activate = Activate
        self.eAction = self.eAction or eActionEnCours
        if( ModuleBegins() ) then
            DEC_Trace( "CBT Rencontre : desactive" )
        end

        if( self.eAction == eActionEffectuee ) then
            do
                self.eAction = eActionEnCours
                                do
                                        self:SendFeedback( eActionEffectuee )
                    Halt( self )
                    do return end

                end

            end
        end

        Activate( self.activations.ACT_Misc_Delai, 1, { 1, self._namedParams.rDelai, } )
self.done_ACT_Misc_Delai = function( self, _, v ) self.eAction = v[1] end
        Activate( self.activations.BEH_MOT_DesactiveSauvegarde, 1, emptyTable )
    end,

--[[// ----------------------------------------------------------------------------
]]--[[// BEH_MOT_Pion_InitialisePreparationMission
]]--[[// ----------------------------------------------------------------------------
]]}

node "BEH_MOT_Pion_InitialisePreparationMission"
{
    feedbacks = { { { "done_BEH_MOT_Pion_InitialisePreparationMission" }, "BEH_MOT_Pion_InitialisePreparationMission" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_MOT_Pion_InitialisePreparationMission, {value} ) end,
    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        if( ModuleBegins() ) then
            SetStateVariable( "VE_PreparationMission", 0 )
        end

    end,

--[[// ----------------------------------------------------------------------------
]]--[[// BEH_MOT_Pion_INF_InitialisePoste
]]--[[// ----------------------------------------------------------------------------
]]}

node "BEH_MOT_Pion_INF_InitialisePoste"
{
    feedbacks = { { { "done_BEH_MOT_Pion_INF_InitialisePoste" }, "BEH_MOT_Pion_INF_InitialisePoste" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_MOT_Pion_INF_InitialisePoste, {value} ) end,
    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        if( ModuleBegins() ) then
            SetStateVariable( "VE_SePoster", 0 )
        end

    end,

--[[// ----------------------------------------------------------------------------
]]--[[// BEH_MOT_Pion_INF_Debarquer()
]]--[[// Maintenir etat doit etre > 1 sinon, il risque d'avoir une force < a un 
]]--[[// comportement de embarquement recevant une force > a celle de debarquer
]]--[[// ----------------------------------------------------------------------------
]]}

node "BEH_MOT_Pion_INF_Debarquer"
{
    feedbacks = { { { "done_BEH_MOT_Pion_INF_Debarquer" }, "BEH_MOT_Pion_INF_Debarquer" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_MOT_Pion_INF_Debarquer, {value} ) end,
    activations =
    {
        { "ACT_Transport_Pion_INF_Debarquer", { "done_ACT_Transport_Pion_INF_Debarquer" } },
        { "ACT_Transport_MaintenirEtat", { "done_ACT_Transport_MaintenirEtat" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        if( DEC_Agent_TransporteursPret() and DEC_Agent_EstEmbarque() ) then
            StartActivateOverride( self, self.activations.ACT_Transport_Pion_INF_Debarquer, 2.01, emptyTable )
        end

        Activate( self.activations.ACT_Transport_MaintenirEtat, 2, { eEtatTransport_Debarque, } )
    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_MOT_Pion_INF_Debarquer, "ACT_Transport_Pion_INF_Debarquer", nodes.ACT_Transport_Pion_INF_Debarquer }
connections[ #connections + 1 ] = { nodes.BEH_MOT_Pion_INF_Debarquer, "ACT_Transport_MaintenirEtat", nodes.ACT_Transport_MaintenirEtat }
connections[ #connections + 1 ] = { nodes.BEH_MOT_Pion_INF_EtrePrudent_GererTransport, "BEH_MOT_Pion_INF_Debarquer", nodes.BEH_MOT_Pion_INF_Debarquer }
connections[ #connections + 1 ] = { nodes.BEH_MOT_Pion_INF_GarderSesDistances, "BEH_MOT_Pion_INF_GarderSesDistancesFaceA", nodes.BEH_MOT_Pion_INF_GarderSesDistancesFaceA }
connections[ #connections + 1 ] = { nodes.BEH_MOT_Pion_INF_GarderSesDistancesFaceA, "ACT_Tir_INF_FumigeneVersEni", nodes.ACT_Tir_INF_FumigeneVersEni }
connections[ #connections + 1 ] = { nodes.BEH_MOT_Pion_INF_GarderSesDistancesFaceA, "ACT_MAJ_EnnemiEnCours", nodes.ACT_MAJ_EnnemiEnCours }
connections[ #connections + 1 ] = { nodes.BEH_MOT_Pion_INF_GarderSesDistances_GererTransport, "BEH_MOT_Pion_INF_Debarquer", nodes.BEH_MOT_Pion_INF_Debarquer }
connections[ #connections + 1 ] = { nodes.BEH_Mot_Delai_Pion_INF_AugmenterAgression, "ACT_Misc_Delai", nodes.ACT_Misc_Delai }
connections[ #connections + 1 ] = { nodes.BEH_Mot_Delai_Pion_INF_AugmenterAgression, "BEH_MOT_DesactiveSauvegarde", nodes.BEH_MOT_DesactiveSauvegarde }
