includedFiles = includedFiles or {}
includedFiles["sources/glaise/glaise_appui/nbc/pions/common/missions/DecontaminerZone.bms"] = true

--[[// *****************************************************************************
]]--[[// BEH_Mission_Pion_NBC_DecontaminerZone
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]node "BEH_Mission_Pion_NBC_DecontaminerZone"
{
    activations =
    {
        { "BEH_Ordre_Inopine", {} },
        { "ACT_MAJ_EtatPhaseMission", {} },
        { "ACT_Info_Trace", {} },
        { "BEH_Dep_ProgressionVers", {} },
        { "ACT_Nbc_Pion_Nbc_Decontaminer", {} },
        { "BEH_Dep_SePosterFaceADirectionDangereuse", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params[1]
    end,

    activate = function( self )
        self.eEtat = self.eEtat or eActionEnCours
        self.ePhaseMission = self.ePhaseMission or ePreparerMission
        self.positionDansZone = self.positionDansZone or S_Geometrie_BarycentreZone( self._namedParams.mission.zone_ )
        self.eEtatOrdreFinMission = self.eEtatOrdreFinMission or eActionEnCours
        Activate( self.activations.BEH_Ordre_Inopine, 1, setmetatable( {}, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eEtatOrdreFinMission = v else rawset( t, k, v ) end end } ) )
        if( self.eEtatOrdreFinMission == eActionHalt ) then
            do
                self.ePhaseMission = eFinMission
                self.eEtat = eActionEnCours
                self.eEtatOrdreFinMission = eActionEnCours
            end
--[[//-----------------------------------------------------------------------------
]]--[[// Pion detruit
]]--[[//-----------------------------------------------------------------------------
]]        end

        if( F_Pion_GeteEtatDestruction( myself ) ~= eEtatDestruction_None ) then
            self.params.__returnValue = eActionEffectuee
            Halt( self )
            do return end
        end

        --[[//-------------------------------------------------------------------------
]]--[[// Appuis ou soutiens
]]--[[//-------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                SetStateVariable( "VE_NiveauNBC", 4 )
                F_Pion_SeteEtatAmbiance( myself, eEtatAmbiance_Vitesse )
            end
        end

         do
            local _continue = true
            local switch_1 = self.ePhaseMission
            local cases_switch_1 = {}
                if switch_1 == ePreparerMission then
                    --[[// 1) Prepa
]]Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_DebutMission, } )
                    Activate( self.activations.ACT_Info_Trace, 1, { "BEH_Mission_Pion_NBC_Decontaminer Zonet", } )
                    self.ePhaseMission = eRejoindrePosition
                    _continue = false
                --[[// 2) Progression jusqu'au point à reconnaitre
]]                cases_switch_1[1] = true
elseif switch_1 == eRejoindrePosition then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_ProgressionVersLocalisation, } )
                    --[[//-----------------------------------------------------------------------------
]]--[[// Progresser vers le center de la zone
]]--[[//-----------------------------------------------------------------------------
]]if( self.eEtat == eActionEffectuee ) then
                        do
                            self.eEtat = eActionEnCours
                                                        do
                                self.ePhaseMission = eReconnaitre
                                                                do return end

                            end

                        end
                    end

                    Activate( self.activations.BEH_Dep_ProgressionVers, 1, setmetatable( { self.positionDansZone, eProgressionReco, eTypeItiMouvement, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eEtat = v else rawset( t, k, v ) end end } ) )
                    _continue = false
                --[[// 3) Decontamination (joue un délai de decontamination)
]]                cases_switch_1[2] = true
elseif switch_1 == eReconnaitre then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_ArriveSurLocalisation, } )
                    if( DEC_Agent_NiveauInstallation() >= eNiveauInstallation_Poste ) then
                        do
                            Activate( self.activations.ACT_Nbc_Pion_Nbc_Decontaminer, 1, { self._namedParams.mission.zone_, } )
                            self.ePhaseMission = eFinMission
                        end
                    end

                    _continue = false
                --[[// Fin de la mission --> SUR ORDRE DU SUPERIEUR
]]                cases_switch_1[3] = true
elseif switch_1 == eFinMission then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_FinMission, } )
                    Activate( self.activations.BEH_Dep_SePosterFaceADirectionDangereuse, 1, {} )
                    _continue = false
                                cases_switch_1[4] = true

                else
                                end
            end

    end,

--[[// *****************************************************************************
]]--[[// ACT_Nbc_Pion_Nbc_Decontaminer
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "ACT_Nbc_Pion_Nbc_Decontaminer"
{
    actuators =
    {
        deplacement = 1,
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.zone = self.params[1]
    end,

    select = function( self )
        --[[//---------------------------------------------------------------------
]]--[[// Init
]]--[[//---------------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                DEC_DecontaminerZone( self._namedParams.zone )
                if( not DEC_Agent_AutomateEstEmbraye() ) then
                    DEC_RC( eRC_ZoneDecontaminee )
                else
                    DEC_Message( eRC_ZoneDecontaminee )
                end

            end
        end

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_NBC_DecontaminerZone, "BEH_Ordre_Inopine", nodes.BEH_Ordre_Inopine }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_NBC_DecontaminerZone, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_NBC_DecontaminerZone, "ACT_Info_Trace", nodes.ACT_Info_Trace }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_NBC_DecontaminerZone, "BEH_Dep_ProgressionVers", nodes.BEH_Dep_ProgressionVers }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_NBC_DecontaminerZone, "ACT_Nbc_Pion_Nbc_Decontaminer", nodes.ACT_Nbc_Pion_Nbc_Decontaminer }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_NBC_DecontaminerZone, "BEH_Dep_SePosterFaceADirectionDangereuse", nodes.BEH_Dep_SePosterFaceADirectionDangereuse }
