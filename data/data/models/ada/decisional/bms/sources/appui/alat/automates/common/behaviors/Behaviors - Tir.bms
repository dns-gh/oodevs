includedFiles = includedFiles or {}
includedFiles["sources/appui/alat/automates/common/behaviors/Behaviors - Tir.bms"] = true

--[[// -----------------------------------------------------------------------------
]]--[[// Ce comportement permet de gerer la synchronisation des feux au niveau de
]]--[[// l'automate alat.
]]--[[// -----------------------------------------------------------------------------
]]node "BEH_Automate_ALAT_CoordonnerFeux"
{
    feedbacks = { { { "onHalt" }, "BEH_Automate_ALAT_CoordonnerFeux" } },

    create = function( self )
        self._namedParams = {}
        self._namedParams.listePionsACoordonner = self.params[1]
        self._namedParams.pourcentageEngagement = self.params[2]
    end,

    activate = function( self )
        local pourcentageEffectif = 0
        local compteur = 0
        if( DIA_IsListEmpty( self._namedParams.listePionsACoordonner ) ) then
            Feedback( self.feedbacks["onHalt"], { "BEH_Automate_ALAT_CoordonnerFeux" } )
Halt( self )
            do return end
        end

        for _,x in pairs( self._namedParams.listePionsACoordonner ) do
        local _continue = true
do
                local pion = x
                if( F_Pion_GeteniEnCours( pion ) == nil ) then
                    _continue = false
                end

                    if _continue then
                                        compteur = compteur + 1
                end
            end

        end

        pourcentageEffectif = compteur / #( self._namedParams.listePionsACoordonner )
        if( pourcentageEffectif >= self._namedParams.pourcentageEngagement ) then
            do
                for _,x in pairs( self._namedParams.listePionsACoordonner ) do
                local _continue = true
                    do
                        local pion = x
                        pion:SetStateVariable( "VE_Coordination_Tir", 1 )
                    end

                end

            end
        end

    end,

}

