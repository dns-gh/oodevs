includedFiles = includedFiles or {}
includedFiles["sources/appui/genie/automates/Globals.bms"] = true

include "bit.lua"



--[[//-----------------------------------------------------------------------------
]]--[[// fichiers à inclure
]]--[[//-----------------------------------------------------------------------------
]]include "Common/Automates/Globals.bms"


--[[//=============================================================================
]]--[[// Definition des variables globales
]]--[[//=============================================================================
]]--[[// Variable temporaire en attendant une fonction DEC permettant de faire un
]]--[[// quicksort.
]]g_selObstacles = {}
--[[// Selection de T_ConnaissanceObjet_local étant impossible de passer en référance
]]--[[// ce type de structure.
]]g_selConnaissanceObs = {}

--[[// Liste des obstacles à réaliser
]]g_selObs_ARealiser = {}
--[[//=============================================================================
]]--[[// Definition des fonctions script
]]--[[//=============================================================================
]]--[[//-------------------------------------------------------------------------
]]--[[// S_Mission_Automate_GEN_PionRenforceAMission
]]--[[//
]]--[[// Permet de savoir si le pion que l'on renforce a encore sa mission
]]--[[//-------------------------------------------------------------------------
]]--[[// si le pion renforcé n'a pas de mission, on renvoi true
]]--[[//-------------------------------------------------------------------------
]]--[[// Init Echelonnage et listes globales
]]--[[//-------------------------------------------------------------------------
]]--[[// Place dans dispositif
]]--[[// Securite
]]--[[// cast
]]--[[// Réinitialisation des listes globales, si le pion n'a pas de mission
]]--[[// *****************************************************************************
]]--[[// Valeurs paramètrables
]]--[[// *****************************************************************************
]]function S_Mission_Automate_GEN_PionRenforceAMission( pion )
    local _returnValue = false
    _returnValue = false
     do
        local _continue = true
        local switch_1 = pion:GetType()
        local cases_switch_1 = {}
            if switch_1 == "GroupeEBG"
            or switch_1 == "GroupeMPG"
            or switch_1 == "GroupePAA"
            or switch_1 == "GroupeDISP"
            or switch_1 == "SectionSOUVIM"
            or switch_1 == "GroupeEFA"
            or switch_1 == "GroupeMFRD"
            or switch_1 == "GroupeOT"
            or switch_1 == "SectionPFM"
            or switch_1 == "SectionDeminageLourd"
            or switch_1 == "GroupeMADEZ"
            or switch_1 == "GroupeMATS"
            or switch_1 == "GroupeMLF"
            or switch_1 == "GroupeEnfouisseur"
            or switch_1 == "GroupeChantier" then
                local mission = DEC_GetMission( pion )
                if( ( mission == 0 or mission == nil ) or mission:GetType() ~= "T_Mission_Pion_GEN_Renforcer" ) then
                    _continue = false
                end

                    if _continue then
                    local missionRenforcer = DEC_GetMission( pion )
                    if( DEC_GetMission( missionRenforcer.unite_ ) ~= nil ) then
                        _returnValue = true
                    end

                end
                        cases_switch_1[1] = true
            end
        end

    do return _returnValue end
end

function S_Dispositif_Automate_Init( )
    local listePionsSubordonnes = DEC_Automate_PionsAvecPC()
    for _,x in pairs( listePionsSubordonnes ) do
    local _continue = true
do
            local pion = x
            F_Pion_SeteEtatEchelon( pion, eEtatEchelon_Second )
            if( pion:GetType() == "SectionGenie" ) then
                do
                    local section = pion
                    section:SetobjMisEnCours_( nil )
                end
            end

        end

    end

    DIA_Clear( g_selObstacles )
    DIA_Clear( g_selConnaissanceObs )
    DIA_Clear( g_selObs_ARealiser )
end

function M_MODELE_Pion_GEN_MAX_DIST_DECROCHE()
    return 1200
end



function M_MODELE_Automate_GEN_MAX_DIST_FINMISSION()
    return 500
end



function M_Dep_Pion_GEN_AMBIANCE_SURETE()
    return 0.5
end



function M_Dep_Pion_GEN_AMBIANCE_ENI()
    return 0.3
end



function M_Dep_Pion_GEN_AMBIANCE_VITESSE()
    return 0.7
end



function M_MODELE_Pion_GEN_DIST_RENFORT()
    return 1000
end


