includedFiles = includedFiles or {}
includedFiles["sources/appui/artfdp/automates/bat reco cobra/missions/reconnaitrezonesdeploiement/ReconnaitreZonesDeploiement MRT.bms"] = true

--[[// *****************************************************************************
]]--[[// $Created$
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Appui/ArtFdp/Automates/Bat Reco COBRA/Missions/ReconnaitreZonesDeploiement/ReconnaitreZonesDeploiement MRT.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 24/05/05 16:46 $
]]--[[// $Revision: 14 $
]]--[[// $Workfile: ReconnaitreZonesDeploiement MRT.hal $
]]--[[// *****************************************************************************
]]
--[[// *****************************************************************************
]]--[[// MIS_Automate_MRT_Stationner
]]--[[//
]]--[[// Commentaires: 
]]--[[//
]]--[[// *****************************************************************************
]]node "MIS_Automate_MRT_ASS_ReconnaitreZonesDeploiement"
{
    activations =
    {
        { "BEH_Medo_Automate_PreparerMission_ReconnaitreZonesDeploiement", { "onHalt" } },
    },

    onHalt = OnHalt,

    feedbacks = { { { "onHalt" }, "MIS_Automate_MRT_ASS_ReconnaitreZonesDeploiement" } },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        self.eValidationMRT = self.eValidationMRT or eActionEnCours
        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                DEC_Trace( "Mission 'ReconnaitreZonesDeploiement': starting MRT" )
                DEC_SetMission( myself, self._namedParams.mission )
            end
--[[//-----------------------------------------------------------------------------
]]--[[// Assignation et vérification
]]--[[//-----------------------------------------------------------------------------
]]        end

        if( self.eValidationMRT == eActionImpossible ) then
            do
                DEC_MRT_Valide()
                DEC_Trace( "!!!!Mind out some first line units didn't receive mission!!!!" )
                                self.params.__returnValue = eActionImpossible
                Feedback( self.feedbacks["onHalt"], { "MIS_Automate_MRT_ASS_ReconnaitreZonesDeploiement" } )
Halt( self )
                do return end

            end
        end

        if( self.eValidationMRT == eActionEffectuee ) then
            do
                self.eValidationMRT = eActionEnCours
                DEC_MRT_Valide()
                                self.params.__returnValue = eActionEffectuee
                Feedback( self.feedbacks["onHalt"], { "MIS_Automate_MRT_ASS_ReconnaitreZonesDeploiement" } )
Halt( self )
                do return end

            end
        end

        Activate( self.activations.BEH_Medo_Automate_PreparerMission_ReconnaitreZonesDeploiement, 1, setmetatable( {}, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eValidationMRT = v else rawset( t, k, v ) end end } ) )
    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Automate_MRT_ASS_ReconnaitreZonesDeploiement = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.MIS_Automate_MRT_ASS_ReconnaitreZonesDeploiement, "BEH_Medo_Automate_PreparerMission_ReconnaitreZonesDeploiement", nodes.BEH_Medo_Automate_PreparerMission_ReconnaitreZonesDeploiement }
