includedFiles = includedFiles or {}
includedFiles["sources/appui/nbc/automates/common/Gestion deuxieme echelon.bms"] = true

include "bit.lua"


--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: MIA 04-02-24 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Appui/Nbc/Automates/Common/Gestion deuxieme echelon.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 24/05/05 16:47 $
]]--[[// $Revision: 9 $
]]--[[// $Workfile: Gestion deuxieme echelon.hal $
]]--[[//
]]--[[// *****************************************************************************
]]

--[[/* --- Gestion dynamique du deuxieme echelon ---*/]]
--[[// behavior BEH_Dispositif_Automate_NBC_FaireSuivreLeSE_
]]--[[// behavior BEH_Dispositif_Automate_NBC_FaireSuivre       // Pion NBC ou autres
]]--[[// behavior BEH_Dispositif_Automate_NBC_FaireSuivreLePC_
]]

--[[// *****************************************************************************
]]--[[// BEH_Dispositif_Automate_NBC_FaireSuivreLeSE_
]]--[[//
]]--[[// Commentaires: assignation des missions pour le second echelon 
]]--[[// --> suivre "en mesure de"
]]--[[// 
]]--[[//
]]--[[//
]]--[[// *****************************************************************************
]]node "BEH_Dispositif_Automate_NBC_FaireSuivreLeSE_"
{
    activations =
    {
        { "BEH_Mission_Automate_AssignerSuivreA", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        local rIterateurPionASuivre = 0
        --[[// Ces listes peuvent évoluer...en fonction des destructions
]]local selNBC_PE = S_ObtenirPionsDe( eEtatEchelon_Premier, eEtatDestruction_None )
        local selNBC_SE = S_ObtenirTousPionsDe( eEtatEchelon_Second )
        --[[//-----------------------------------------------------------------------------
]]--[[// Assignation des missions
]]--[[//-----------------------------------------------------------------------------
]]if( DIA_IsListEmpty( selNBC_SE ) or DIA_IsListEmpty( selNBC_PE ) ) then
            return
        end

        for _,pion in pairs( selNBC_SE ) do
        local _continue = true
do
                --[[// Pion du PE à suivre
]]local pionPE = DIA_GetAt( selNBC_PE, rIterateurPionASuivre )
                Activate( self.activations.BEH_Mission_Automate_AssignerSuivreA, 1, { ePhase_CDT, pion, pionPE, } )
                                rIterateurPionASuivre = rIterateurPionASuivre + 1
                if( not ( rIterateurPionASuivre < #( selNBC_PE ) ) ) then
                    --[[// revenir au premier élément de la liste de PE
]]rIterateurPionASuivre = 0
                end

            end

        end

    end,

--[[// *****************************************************************************
]]--[[// BEH_Dispositif_Automate_NBC_FaireSuivreLePC_
]]--[[//
]]--[[// Commentaires: assignation de la mission "suivre" a PC
]]--[[// 
]]--[[//
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Dispositif_Automate_NBC_FaireSuivreLePC_"
{
    activations =
    {
        { "BEH_Mission_Automate_AssignerSuivreA", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        self.pionPC = self.pionPC or DEC_Automate_PionPC()
        local listePionsSE = S_ObtenirPionsDe( eEtatEchelon_Second, eEtatDestruction_None )
        local listePionsPE = S_ObtenirPionsDe( eEtatEchelon_Premier, eEtatDestruction_None )
        local listePionsEcl = S_ObtenirPionsDe( eEtatEchelon_Eclairage, eEtatDestruction_None )
        --[[// -----------------------------------------------------------------------------
]]--[[// On suit au hasard un pion de SE
]]--[[// -----------------------------------------------------------------------------
]]if( not DIA_IsListEmpty( listePionsSE ) ) then
            do
                Activate( self.activations.BEH_Mission_Automate_AssignerSuivreA, 1, { ePhase_CDT, self.pionPC, DIA_GetAt( listePionsSE, 0 ), } )
                                return

            end
--[[// on a que des pions de premier echelon ou ecl
]]        end

        if( not DIA_IsListEmpty( listePionsPE ) ) then
            do
                Activate( self.activations.BEH_Mission_Automate_AssignerSuivreA, 1, { ePhase_CDT, self.pionPC, DIA_GetAt( listePionsPE, 0 ), } )
                                return

            end
        end

        if( not DIA_IsListEmpty( listePionsEcl ) ) then
            Activate( self.activations.BEH_Mission_Automate_AssignerSuivreA, 1, { ePhase_CDT, self.pionPC, DIA_GetAt( listePionsEcl, 0 ), } )
        end

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Dispositif_Automate_NBC_FaireSuivreLePC_, "BEH_Mission_Automate_AssignerSuivreA", nodes.BEH_Mission_Automate_AssignerSuivreA }
connections[ #connections + 1 ] = { nodes.BEH_Dispositif_Automate_NBC_FaireSuivreLeSE_, "BEH_Mission_Automate_AssignerSuivreA", nodes.BEH_Mission_Automate_AssignerSuivreA }
