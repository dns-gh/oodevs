includedFiles = includedFiles or {}
includedFiles["sources/appui/rens/pions/roim/common/Behaviors SMO_DRAC.bms"] = true

--[[// *****************************************************************************
]]--[[// BEH_Dep_Pion_Rens_GererDrones
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]node "BEH_Dep_Pion_Rens_GererDrones"
{
    feedbacks = { { { "done_BEH_Dep_Pion_Rens_GererDrones" }, "BEH_Dep_Pion_Rens_GererDrones" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Dep_Pion_Rens_GererDrones, {value} ) end,
    activations =
    {
        { "ACT_Info_Trace", { "done_ACT_Info_Trace" } },
        { "BEH_Dep_Pion_Rens_GererEmbarquementDrone", { "done_BEH_Dep_Pion_Rens_GererEmbarquementDrone" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local selDrones = S_Misc_Pion_Rens_ObtenirDronesAssignes()
        --[[//-----------------------------------------------------------------------------
]]--[[// INIT
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                DEC_Transport_EmbarquerPionsSansDelais( selDrones, false )
                for _,x in pairs( selDrones or {} ) do
                local _continue = true
                    do
                        local drone = x
                        drone:SetbMiseEnOeuvre_( false )
                        drone:SetbEnExploitation_( false )
                    end

                end

            end
--[[//-----------------------------------------------------------------------------
]]--[[// Récuperation du drone
]]--[[//-----------------------------------------------------------------------------
]]        end

        Activate( self.activations.ACT_Info_Trace, 1, { " --- Nombre de Drones assignes: " .. FloatToString( #( selDrones ) ) .. " --- ", } )
        for _,drone in pairs( --[[//-----------------------------------------------------------------------------
]]--[[// Gestion de chaque drone
]]--[[//-----------------------------------------------------------------------------
]]selDrones or {} ) do
        local _continue = true
            Activate( self.activations.BEH_Dep_Pion_Rens_GererEmbarquementDrone, S_Force_DistancePt( drone:DEC_Agent_Position() ), { drone, } )

        end

    end,

--[[// *****************************************************************************
]]--[[// BEH_Dep_Pion_Rens_GererEmbarquementDrone
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Dep_Pion_Rens_GererEmbarquementDrone"
{
    feedbacks = { { { "done_BEH_Dep_Pion_Rens_GererEmbarquementDrone" }, "BEH_Dep_Pion_Rens_GererEmbarquementDrone" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Dep_Pion_Rens_GererEmbarquementDrone, {value} ) end,
    activations =
    {
        { "BEH_Transport_Pion_Rens_GererEmbarquementDrone", { "done_BEH_Transport_Pion_Rens_GererEmbarquementDrone" } },
        { "BEH_Dep_ProgressionVers", { "done_BEH_Dep_ProgressionVers" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.pionDrone = self.params[1]
    end,

    activate = function( self )
        --[[//-----------------------------------------------------------------------------
]]--[[// On ne gere pas les drones détruits
]]--[[//-----------------------------------------------------------------------------
]]if( F_Pion_GeteEtatDestruction( self._namedParams.pionDrone ) ~= eEtatDestruction_None ) then
            do return end
        end

        --[[//-----------------------------------------------------------------------------
]]--[[// Gestion embarquement
]]--[[//-----------------------------------------------------------------------------
]]if( F_Pion_GeteEtatDestruction( self._namedParams.pionDrone ) == eEtatPhaseMission_FinMission ) then
            do
                if( DEC_Geometrie_Distance( DEC_Agent_Position(), self._namedParams.pionDrone:DEC_Agent_Position() ) < 100 ) then
                    Activate( self.activations.BEH_Transport_Pion_Rens_GererEmbarquementDrone, 1, { self._namedParams.pionDrone, } )
                else
if( DEC_Geometrie_Distance( DEC_Agent_Position(), self._namedParams.pionDrone:DEC_Agent_Position() ) < 2000 ) then
                        Activate( self.activations.BEH_Dep_ProgressionVers, 1.1, { self._namedParams.pionDrone:DEC_Agent_Position(), eProgressionDirect, eTypeItiMouvement, } )
                    end
                end

            end
        end

    end,

--[[// *****************************************************************************
]]--[[// BEH_Transport_Pion_Rens_GererEmbarquementDrone
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Transport_Pion_Rens_GererEmbarquementDrone"
{
    feedbacks = { { { "done_BEH_Transport_Pion_Rens_GererEmbarquementDrone" }, "BEH_Transport_Pion_Rens_GererEmbarquementDrone" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Transport_Pion_Rens_GererEmbarquementDrone, {value} ) end,
    activations =
    {
        { "BEH_Transport_Pion_Rens_EmbarquerDrone", { "done_BEH_Transport_Pion_Rens_EmbarquerDrone" } },
        { "BEH_Transport_Pion_Rens_ExploiterDrone", { "done_BEH_Transport_Pion_Rens_ExploiterDrone" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.pionDrone = self.params[1]
    end,

    activate = function( self )
        --[[//-----------------------------------------------------------------------------
]]--[[// Gestion embarquement
]]--[[//-----------------------------------------------------------------------------
]]Activate( self.activations.BEH_Transport_Pion_Rens_EmbarquerDrone, 1, { self._namedParams.pionDrone, } )
        --[[//-----------------------------------------------------------------------------
]]--[[// Exploitation
]]--[[//-----------------------------------------------------------------------------
]]Activate( self.activations.BEH_Transport_Pion_Rens_ExploiterDrone, 1, { self._namedParams.pionDrone, } )
    end,

--[[// *****************************************************************************
]]--[[// BEH_Transport_Pion_Rens_EmbarquerDrone
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Transport_Pion_Rens_EmbarquerDrone"
{
    feedbacks = { { { "done_BEH_Transport_Pion_Rens_EmbarquerDrone" }, "BEH_Transport_Pion_Rens_EmbarquerDrone" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Transport_Pion_Rens_EmbarquerDrone, {value} ) end,
    activations =
    {
        { "ACT_Misc_Pion_Rens_EmbarquerDrone", { "done_ACT_Misc_Pion_Rens_EmbarquerDrone" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.pionDrone = self.params[1]
    end,

    activate = function( self )
        Activate( self.activations.ACT_Misc_Pion_Rens_EmbarquerDrone, 1, { self._namedParams.pionDrone, } )
    end,

--[[// *****************************************************************************
]]--[[// BEH_Transport_Pion_Rens_ExploiterDrone
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Transport_Pion_Rens_ExploiterDrone"
{
    feedbacks = { { { "done_BEH_Transport_Pion_Rens_ExploiterDrone" }, "BEH_Transport_Pion_Rens_ExploiterDrone" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Transport_Pion_Rens_ExploiterDrone, {value} ) end,
    activations =
    {
        { "ACT_RC", { "done_ACT_RC" } },
        { "ACT_Misc_Pion_Rens_ExploiterDrone", { "done_ACT_Misc_Pion_Rens_ExploiterDrone" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.pionDrone = self.params[1]
    end,

    activate = function( self )
        if( ModuleBegins() ) then
            do
                                do
                    if( not DEC_Agent_AutomateEstEmbraye() ) then
                        DEC_RC( eRC_DroneEnExploitation )
                    else
                        DEC_Message( eRC_DroneEnExploitation )
                    end

                end

                self._namedParams.pionDrone:SetbEnExploitation_( true )
            end
--[[//-----------------------------------------------------------------------------
]]--[[// Juste delai
]]--[[//-----------------------------------------------------------------------------
]]        end

        do
            do
                self.rTempsDebut = self.rTempsDebut or DEC_TempsSim()
                if( ModuleBegins() ) then
                    do
                    end
                end

                do
                end

                if( 120 * 60 <= DEC_TempsSim() - self.rTempsDebut ) then
                    do
                        Activate( self.activations.ACT_RC, 1, { eRC_DroneExploite, } )
                        Activate( self.activations.ACT_Misc_Pion_Rens_ExploiterDrone, 1, { self._namedParams.pionDrone, } )
                    end
                end

            end

        end

    end,

--[[// *****************************************************************************
]]--[[// ACT_Misc_Pion_Rens_EmbarquerDrone
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "ACT_Misc_Pion_Rens_EmbarquerDrone"
{
    feedbacks = { { { "done_ACT_Misc_Pion_Rens_EmbarquerDrone" }, "ACT_Misc_Pion_Rens_EmbarquerDrone" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_ACT_Misc_Pion_Rens_EmbarquerDrone, {value} ) end,
    create = function( self )
        self._namedParams = {}
        self._namedParams.pionDrone = self.params[1]
    end,

    select = function( self )
        if( ModuleBegins() ) then
            do
                DEC_Transport_EmbarquerPionSansDelais( self._namedParams.pionDrone, false )
                self._namedParams.pionDrone:SetbMiseEnOeuvre_( false )
            end
        end

    end,

}

--[[// *****************************************************************************
]]--[[// ACT_Misc_Pion_Rens_ExploiterDrone
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]node "ACT_Misc_Pion_Rens_ExploiterDrone"
{
    feedbacks = { { { "done_ACT_Misc_Pion_Rens_ExploiterDrone" }, "ACT_Misc_Pion_Rens_ExploiterDrone" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_ACT_Misc_Pion_Rens_ExploiterDrone, {value} ) end,
    create = function( self )
        self._namedParams = {}
        self._namedParams.pionDrone = self.params[1]
    end,

    select = function( self )
        if( ModuleBegins() ) then
            self._namedParams.pionDrone:SetbEnExploitation_( false )
        end

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Dep_Pion_Rens_GererDrones, "ACT_Info_Trace", nodes.ACT_Info_Trace }
connections[ #connections + 1 ] = { nodes.BEH_Dep_Pion_Rens_GererDrones, "BEH_Dep_Pion_Rens_GererEmbarquementDrone", nodes.BEH_Dep_Pion_Rens_GererEmbarquementDrone }
connections[ #connections + 1 ] = { nodes.BEH_Dep_Pion_Rens_GererEmbarquementDrone, "BEH_Transport_Pion_Rens_GererEmbarquementDrone", nodes.BEH_Transport_Pion_Rens_GererEmbarquementDrone }
connections[ #connections + 1 ] = { nodes.BEH_Dep_Pion_Rens_GererEmbarquementDrone, "BEH_Dep_ProgressionVers", nodes.BEH_Dep_ProgressionVers }
connections[ #connections + 1 ] = { nodes.BEH_Transport_Pion_Rens_EmbarquerDrone, "ACT_Misc_Pion_Rens_EmbarquerDrone", nodes.ACT_Misc_Pion_Rens_EmbarquerDrone }
connections[ #connections + 1 ] = { nodes.BEH_Transport_Pion_Rens_ExploiterDrone, "ACT_RC", nodes.ACT_RC }
connections[ #connections + 1 ] = { nodes.BEH_Transport_Pion_Rens_ExploiterDrone, "ACT_Misc_Pion_Rens_ExploiterDrone", nodes.ACT_Misc_Pion_Rens_ExploiterDrone }
connections[ #connections + 1 ] = { nodes.BEH_Transport_Pion_Rens_GererEmbarquementDrone, "BEH_Transport_Pion_Rens_EmbarquerDrone", nodes.BEH_Transport_Pion_Rens_EmbarquerDrone }
connections[ #connections + 1 ] = { nodes.BEH_Transport_Pion_Rens_GererEmbarquementDrone, "BEH_Transport_Pion_Rens_ExploiterDrone", nodes.BEH_Transport_Pion_Rens_ExploiterDrone }
