includedFiles = includedFiles or {}
includedFiles["sources/appui/genie/pions/missions/appui aide au deploiement/Realiser travaux aide au deploiement.bms"] = true

--[[// *****************************************************************************
]]--[[// MIS_Pion_GEN_RealiserTravauxAppuiDeploiement
]]--[[//
]]--[[// Commentaires: Refonte 27/10/2006
]]--[[//
]]--[[// *****************************************************************************
]]node "MIS_Pion_GEN_RealiserTravauxAppuiDeploiement"
{
    activations =
    {
        { "BEH_Ordre_Inopine", {} },
        { "ACT_MAJ_EtatPhaseMission", {} },
        { "BEH_Dep_GEN_AllerFaireTravauxSur", {} },
        { "BEH_Dep_SePosterFaceADirectionDangereuse", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        self.eEtat = self.eEtat or eActionEnCours
        self.ePhaseMission = self.ePhaseMission or ePreparerMission
        --[[//-----------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                DEC_Trace( "------------- Realiser travaux aide au deploiement -----------------" )
                F_Pion_SeteEtatAmbiance( myself, eEtatAmbiance_Vitesse )
                DEC_SetMission( myself, self._namedParams.mission )
            end
--[[//-----------------------------------------------------------------
]]--[[// Squelette de mission
]]--[[//-----------------------------------------------------------------
]]        end

        self.eEtatOrdreFinMission = self.eEtatOrdreFinMission or eActionEnCours
        Activate( self.activations.BEH_Ordre_Inopine, 1, setmetatable( {}, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eEtatOrdreFinMission = v else rawset( t, k, v ) end end } ) )
        if( self.eEtatOrdreFinMission == eActionHalt ) then
            do
                self.ePhaseMission = eFinMission
                self.eEtat = eActionEnCours
                self.eEtatOrdreFinMission = eActionEnCours
            end
        end

        switch_1 = self.ePhaseMission
            if switch_1 == ePreparerMission then
                --[[// Preparation de la mission
]]Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_DebutMission, } )
                self.ePhaseMission = eProgresser
                
            --[[// Progression tactique
]]elseif switch_1 == eProgresser then
                Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_ProgressionVersLocalisation, } )
                if( self.eEtat == eActionEffectuee ) then
                    do
                        self.eEtat = eActionEnCours
                        self.ePhaseMission = eFinMission
                                                return

                    end
                end

                Activate( self.activations.BEH_Dep_GEN_AllerFaireTravauxSur, 1, setmetatable( { self._namedParams.mission.travaux_, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eEtat = v else rawset( t, k, v ) end end } ) )
                
            --[[// Fin de la mission
]]elseif switch_1 == eFinMission then
                Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_FinMission, } )
                Activate( self.activations.BEH_Dep_SePosterFaceADirectionDangereuse, 1, {} )
                
                        end

    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Pion_GEN_RealiserTravauxAppuiDeploiement = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.MIS_Pion_GEN_RealiserTravauxAppuiDeploiement, "BEH_Ordre_Inopine", nodes.BEH_Ordre_Inopine }
connections[ #connections + 1 ] = { nodes.MIS_Pion_GEN_RealiserTravauxAppuiDeploiement, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_GEN_RealiserTravauxAppuiDeploiement, "BEH_Dep_GEN_AllerFaireTravauxSur", nodes.BEH_Dep_GEN_AllerFaireTravauxSur }
connections[ #connections + 1 ] = { nodes.MIS_Pion_GEN_RealiserTravauxAppuiDeploiement, "BEH_Dep_SePosterFaceADirectionDangereuse", nodes.BEH_Dep_SePosterFaceADirectionDangereuse }
