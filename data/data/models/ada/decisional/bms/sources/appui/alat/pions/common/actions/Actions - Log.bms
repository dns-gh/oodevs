includedFiles = includedFiles or {}
includedFiles["sources/appui/alat/pions/common/actions/Actions - Log.bms"] = true

--[[//------------------------------------------------------------------------------
]]--[[// Realiser un plot logistique
]]--[[//------------------------------------------------------------------------------
]]node "ACT_Log_Pion_ALAT_RealiserPlotLogistique"
{
    create = function( self )
        self._namedParams = {}
        self._namedParams.point = self.params[1]
    end,

    select = function( self )
                self.bInterompu = self.bInterompu or false
        self.eEtatConstruction = self.eEtatConstruction or nil
        self.repPlotLogistique = self.repPlotLogistique or nil
        self.localisation = self.localisation or nil
        self.actionCreerPlot = self.actionCreerPlot or nil
        assert( self._namedParams.point ~= nil, "ALAT : Realiser plot log position invalide" )
        if( ModuleBegins() ) then
            do
                self.localisation = DEC_Geometrie_ConvertirPointEnLocalisation( self._namedParams.point )
                self.actionCreerPlot = DEC_StartCreerObjet( self.repPlotLogistique,
                                                   S_TypeObject_ToString( eTypeObjectPlotRavitaillement ),
                                                   self.localisation,
                                                   -1 )
                actionCallbacks[ self.actionCreerPlot ] = function( arg ) self.eEtatConstruction = arg end
                actionKnowledgeCallbacks[ self.actionCreerPlot ] = function( arg ) self.repPlotLogistique = arg end

            end
        end

        if( self.bInterompu ) then
            do
                self.bInterompu = false
                DEC_ReprendAction( self.actionCreerPlot )
            end
        end

        switch_1 = self.eEtatConstruction
            if switch_1 == eActionObjetTerminee then
                self.actionCreerPlot = DEC_StopAction( self.actionCreerPlot )
                                self.params.__returnValue = eActionEffectuee
                Halt()

            elseif switch_1 == eActionObjetManqueDotation then
                self.actionCreerPlot = DEC_StopAction( self.actionCreerPlot )
                                self.params.__returnValue = eActionImpossible
                Halt()

            elseif switch_1 == eActionObjetImpossible then
                self.actionCreerPlot = DEC_StopAction( self.actionCreerPlot )
                                self.params.__returnValue = eActionImpossible
                Halt()

            elseif switch_1 == eActionObjetPasDeCapacite then
                self.actionCreerPlot = DEC_StopAction( self.actionCreerPlot )
                                self.params.__returnValue = eActionImpossible
                Halt()

                        end

    end,

    deselect = function( self )
                self.bInterompu = true
        DEC_PauseAction( self.actionCreerPlot )
    end,

    destroy = function( self )
                self.actionCreerPlot = DEC_StopAction( self.actionCreerPlot )
    end,

}

