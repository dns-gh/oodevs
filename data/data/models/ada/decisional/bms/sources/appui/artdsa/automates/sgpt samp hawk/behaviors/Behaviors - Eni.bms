includedFiles = includedFiles or {}
includedFiles["sources/appui/artdsa/automates/sgpt samp hawk/behaviors/Behaviors - Eni.bms"] = true

--[[//------------------------------------------------------------------------------
]]--[[// Pour chaque ennemi connu, on tente de donner un ordre de tir au pion le plus
]]--[[// proche sur l'agent ennemi le plus proche d'une connaissance amie
]]--[[//------------------------------------------------------------------------------
]]node "BEH_Eni_ASA_HAWK_GererTirsDefendreZone"
{
    activations =
    {
        { "BEH_Eni_Automate_ASA_HAWK_AffecterPistesASectionsDeTir", { "onHalt" } },
    },

    onHalt = OnHalt,

    feedbacks = { { { "onHalt" }, "BEH_Eni_ASA_HAWK_GererTirsDefendreZone" } },

    create = function( self )
        self._namedParams = {}
        self._namedParams.zone = self.params[1]
    end,

    activate = function( self )
        --[[// variables locales
]]local listeSAMP = S_Cherche_Automate_Filtre_TypePionOperationnels( DEC_Automate_PionsSansPC(), "TheaterHighAltitudeDefenseTroop" )
        local sListeEnis = S_ConnaissancesEnnemiesVivantesPercuesVolantesPourSgpt( DEC_Automate_PionsAvecPC() )
        local sListeEnisADetruire = {}
        for _,x in pairs( --[[//effacer les piste des unites hawk subordonnées
]]listeSAMP ) do
        local _continue = true
do
                local pionHawk = x
                DIA_Clear( pionHawk:GetlisteEnisTirAutorise_() )
            end
--[[// Trie des unites : priorite dans cette mission aux unites qui sont 
]]--[[// dangereuses pour les connaissances amies qui sont dans la zone et les
]]--[[// pions de la batterie; Dans l'ASA, on considère qu'une unité est dangereuse
]]--[[// a partir du moment ou elle est reconnue ennemie est qu'elle est volante.
]]
        end

        sListeEnisADetruire = S_Eni_Automate_ASA_HAWK_TrieParDangerositeSurAmisDansZone( sListeEnis, self._namedParams.zone )
        --[[//Affectation des pistes de tir en fonction des distances relatives aux
]]--[[//sections de tir hawk
]]Activate( self.activations.BEH_Eni_Automate_ASA_HAWK_AffecterPistesASectionsDeTir, 1, { sListeEnisADetruire, listeSAMP, } )
    end,

--[[//------------------------------------------------------------------------------
]]--[[// Pour chaque ennemi connu, on tente de donner un ordre de tir au pion le plus
]]--[[// proche. On considere en priorité les ennemis les plus proche du site
]]--[[//------------------------------------------------------------------------------
]]}

node "BEH_Eni_ASA_HAWK_GererTirsDefendreSite"
{
    activations =
    {
        { "BEH_Eni_Automate_ASA_HAWK_AffecterPistesASectionsDeTir", { "onHalt" } },
    },

    onHalt = OnHalt,

    feedbacks = { { { "onHalt" }, "BEH_Eni_ASA_HAWK_GererTirsDefendreSite" } },

    create = function( self )
        self._namedParams = {}
        self._namedParams.site = self.params[1]
    end,

    activate = function( self )
        --[[// variables locales
]]local listeSAMP = S_Cherche_Automate_Filtre_TypePionOperationnels( DEC_Automate_PionsSansPC(), "TheaterHighAltitudeDefenseTroop" )
        local sListeEnis = S_ConnaissancesEnnemiesVivantesPercuesVolantesPourSgpt( DEC_Automate_PionsAvecPC() )
        local sListeEnisADetruire = {}
        for _,x in pairs( --[[//effacer les piste des unites hawk subordonnées
]]listeSAMP ) do
        local _continue = true
do
                local pionHawk = x
                DIA_Clear( pionHawk:GetlisteEnisTirAutorise_() )
            end
--[[// Trie des unites : priorite dans cette mission aux unites qui sont proches
]]--[[// du barycentre de la zone a defendre et qui sont dangereuses pour les pions 
]]--[[// de la batterie;
]]
        end

        sListeEnisADetruire = S_Eni_Automate_ASA_HAWK_TrieParDangerositeSurSite( sListeEnis, self._namedParams.site )
        --[[//Affectation des pistes de tir en fonction des distances relatives aux
]]--[[//sections de tir hawk
]]Activate( self.activations.BEH_Eni_Automate_ASA_HAWK_AffecterPistesASectionsDeTir, 1, { sListeEnisADetruire, listeSAMP, } )
    end,

--[[//------------------------------------------------------------------------------
]]--[[// idem defendre site
]]--[[//------------------------------------------------------------------------------
]]}

node "BEH_Eni_ASA_HAWK_GererTirsSurveiller"
{
    activations =
    {
        { "BEH_Eni_Automate_ASA_HAWK_AffecterPistesASectionsDeTir", { "onHalt" } },
    },

    onHalt = OnHalt,

    feedbacks = { { { "onHalt" }, "BEH_Eni_ASA_HAWK_GererTirsSurveiller" } },

    create = function( self )
        self._namedParams = {}
        self._namedParams.site = self.params[1]
    end,

    activate = function( self )
        --[[// variables locales
]]local listeSAMP = S_Cherche_Automate_Filtre_TypePionOperationnels( DEC_Automate_PionsSansPC(), "TheaterHighAltitudeDefenseTroop" )
        local sListeEnis = S_ConnaissancesEnnemiesVivantesPercuesVolantesPourSgpt( DEC_Automate_PionsAvecPC() )
        local sListeEnisADetruire = {}
        for _,x in pairs( --[[//effacer les piste des unites hawk subordonnées
]]listeSAMP ) do
        local _continue = true
do
                local pionHawk = x
                DIA_Clear( pionHawk:GetlisteEnisTirAutorise_() )
            end

        end

        sListeEnisADetruire = S_Eni_Automate_ASA_HAWK_TrieParDangerositeSurSite( sListeEnis, self._namedParams.site )
        --[[//Affectation des pistes de tir en fonction des distances relatives aux
]]--[[//sections de tir hawk
]]Activate( self.activations.BEH_Eni_Automate_ASA_HAWK_AffecterPistesASectionsDeTir, 1, { sListeEnisADetruire, listeSAMP, } )
    end,

--[[// -----------------------------------------------------------------------------
]]--[[// affectation des pistes en fonction de la distance des pieces de tir aux 
]]--[[// ennemis
]]--[[// -----------------------------------------------------------------------------
]]}

node "BEH_Eni_Automate_ASA_HAWK_AffecterPistesASectionsDeTir"
{
    feedbacks = { { { "onHalt" }, "BEH_Eni_Automate_ASA_HAWK_AffecterPistesASectionsDeTir" } },

    create = function( self )
        self._namedParams = {}
        self._namedParams.sListeEnisADetruire = self.params[1]
        self._namedParams.listeSectionsTir = self.params[2]
    end,

    activate = function( self )
        for _,x in pairs( --[[//tri par distances des ennemis
]]self._namedParams.listeSectionsTir ) do
        local _continue = true
do
                if( x:GetType() ~= "TheaterHighAltitudeDefenseTroop" ) then
                    _continue = false
                end

                    if _continue then
                    local sectionHAWK = x
                    sectionHAWK:SetlisteEnisTirAutorise_( S_Liste_TrierParDistanceAPion( sectionHAWK, self._namedParams.sListeEnisADetruire ) )
                end
            end
--[[// gestion de l'overkill. Deux sections de tir ne doivent pas avoir les memes
]]--[[// pistes à traiter.
]]
        end

        for _,x in pairs( self._namedParams.listeSectionsTir ) do
        local _continue = true
do
                if( x:GetType() ~= "TheaterHighAltitudeDefenseTroop" ) then
                    _continue = false
                end

                    if _continue then
                    S_Liste_GererOverKill( x, self._namedParams.listeSectionsTir )
                end
            end

        end

        S_Eni_Automate_ASA_HAWK_AffecterPistes( self._namedParams.listeSectionsTir )
    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Eni_ASA_HAWK_GererTirsDefendreSite, "BEH_Eni_Automate_ASA_HAWK_AffecterPistesASectionsDeTir", nodes.BEH_Eni_Automate_ASA_HAWK_AffecterPistesASectionsDeTir }
connections[ #connections + 1 ] = { nodes.BEH_Eni_ASA_HAWK_GererTirsDefendreZone, "BEH_Eni_Automate_ASA_HAWK_AffecterPistesASectionsDeTir", nodes.BEH_Eni_Automate_ASA_HAWK_AffecterPistesASectionsDeTir }
connections[ #connections + 1 ] = { nodes.BEH_Eni_ASA_HAWK_GererTirsSurveiller, "BEH_Eni_Automate_ASA_HAWK_AffecterPistesASectionsDeTir", nodes.BEH_Eni_Automate_ASA_HAWK_AffecterPistesASectionsDeTir }
