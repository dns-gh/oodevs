includedFiles = includedFiles or {}
includedFiles["sources/appui/rens/automates/roem/elge/missions/appuyer/Appuyer - MRT.bms"] = true

--[[// *****************************************************************************
]]--[[// MIS_Automate_MRT_RENS_ROEM_Appuyer
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]node "MIS_Automate_MRT_RENS_ROEM_Appuyer"
{
    activations =
    {
        { "BEH_Medo_Automate_ControleCreationMission", {} },
        { "BEH_Medo_Automate_RENS_ROEM_AssignerAppuyerA", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        self.eValidationMRT = self.eValidationMRT or eActionEnCours
        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                DEC_Trace( "$ MIS AUTO ProtegerPC: debut MRT $" )
                DEC_SetMission( myself, self._namedParams.mission )
                                do
                    local listePionsSubordonnes = DEC_Automate_PionsSansPC()
                    for _,x in pairs( listePionsSubordonnes or {} ) do
                    local _continue = true
                        do
                            local pion = x
                            F_Pion_SeteEtatEchelon( pion, eEtatEchelon_Second )
                            F_Pion_SeteEtatSoutien( pion, eEtatSoutien_aucun )
                        end

                    end

                end

            end
--[[//-----------------------------------------------------------------------------
]]--[[// Assignation et vérification
]]--[[//-----------------------------------------------------------------------------
]]        end

        if( self.eValidationMRT == eActionImpossible ) then
            do
                                do
                    DEC_MRT_Valide()
                    DEC_Trace( "!!!!Mind out some first line units didn't receive mission!!!!" )
                end

                                self.params.__returnValue = eActionImpossible
                Halt( self )
                do return end

            end
        end

        if( self.eValidationMRT == eActionEffectuee ) then
            do
                self.eValidationMRT = eActionEnCours
                                do
                    DEC_MRT_Valide()
                                        self.params.__returnValue = eActionEffectuee
                    Halt( self )
                    do return end

                end

            end
        end

        Activate( self.activations.BEH_Medo_Automate_ControleCreationMission, 1, setmetatable( { 1, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eValidationMRT = v else rawset( t, k, v ) end end } ) )
        Activate( self.activations.BEH_Medo_Automate_RENS_ROEM_AssignerAppuyerA, 1, { DEC_Automate_PionPC(), } )
    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Automate_MRT_RENS_ROEM_Appuyer = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.MIS_Automate_MRT_RENS_ROEM_Appuyer, "BEH_Medo_Automate_ControleCreationMission", nodes.BEH_Medo_Automate_ControleCreationMission }
connections[ #connections + 1 ] = { nodes.MIS_Automate_MRT_RENS_ROEM_Appuyer, "BEH_Medo_Automate_RENS_ROEM_AssignerAppuyerA", nodes.BEH_Medo_Automate_RENS_ROEM_AssignerAppuyerA }
