includedFiles = includedFiles or {}
includedFiles["sources/appui/alat/pions/common/Behaviors.bms"] = true

local emptyTable = emptyTable

include "bit.lua"


--[[//génériques pions scipio
]]include "Common/Pions/Behaviors.bms"

--[[//inclusion des actions communes aux pions alat
]]include "Appui/Alat/Pions/Common/Actions.bms"


--[[// comportements génériques aux pions alat
]]include "Appui/Alat/Pions/Common/Behaviors/Behaviors - Dep.bms"

include "Appui/Alat/Pions/Common/Behaviors/Behaviors - Log.bms"

include "Appui/Alat/Pions/Common/Behaviors/Behaviors - Manoeuvre.bms"

include "Appui/Alat/Pions/Common/Behaviors/Behaviors - Obs.bms"

include "Appui/Alat/Pions/Common/Behaviors/Behaviors - Mot.bms"

include "Appui/Alat/Pions/Common/Behaviors/Behaviors - Eni.bms"

include "Appui/Alat/Pions/Common/Behaviors/Behaviors - Ambiance.bms"

include "Appui/Alat/Pions/Common/Behaviors/Behaviors - Ordre.bms"


--[[//missions generques aux pions alat
]]include "Appui/Alat/Pions/Common/MissionsGeneriques.bms"


--[[//missions populations
]]include "Common/Pions/MissionsReactionPopulations.bms"


--[[// -----------------------------------------------------------------------------
]]--[[// Comportement par défaut.
]]--[[//
]]--[[// Commentaires: Les helicopteres sont tous posés pour au debut. Ils n'ont pas
]]--[[// d'objectif ni de plot de rafitaillement
]]--[[//
]]--[[// toutes les actions et les comportements par défaut sont activé avec une force 
]]--[[// maximale de 0.5
]]--[[// -----------------------------------------------------------------------------
]]node "BEH_Defaut"
{
    feedbacks = { { { "done_BEH_Defaut" }, "BEH_Defaut" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Defaut, {value} ) end,
    activations =
    {
        { "BEH_MAJ_EtatDefaut", { "done_BEH_MAJ_EtatDefaut" } },
        { "BEH_Mot_Pion_ALAT_AffecterVariablesDEtat", { "done_BEH_Mot_Pion_ALAT_AffecterVariablesDEtat" } },
        { "BEH_ALAT_Ambiance", { "done_BEH_ALAT_Ambiance" } },
        { "BEH_Nbc", { "done_BEH_Nbc" } },
        { "BEH_ROE", { "done_BEH_ROE" } },
        { "BEH_Rens", { "done_BEH_Rens" } },
        { "BEH_Ordre_Pion_ALAT_ChangerParametresRecompletement", { "done_BEH_Ordre_Pion_ALAT_ChangerParametresRecompletement" } },
        { "BEH_Info_Pion_RendreCompte", { "done_BEH_Info_Pion_RendreCompte" } },
        { "BEH_Dep_Pion_ALAT_SePoser", { "done_BEH_Dep_Pion_ALAT_SePoser" } },
        { "BEH_Log_Pion_ALAT_Recompletement", { "done_BEH_Log_Pion_ALAT_Recompletement" } },
        { "BEH_Lima_GererLimas", { "done_BEH_Lima_GererLimas" } },
        { "BEH_Manoeuvre_Pion_SeCoordonner", { "done_BEH_Manoeuvre_Pion_SeCoordonner" } },
        { "BEH_Manoeuvre_Pion_GestionDestruction", { "done_BEH_Manoeuvre_Pion_GestionDestruction" } },
        { "BEH_Log_Pion_ALAT_AjoutNouveauPlotsDansFuseau", { "done_BEH_Log_Pion_ALAT_AjoutNouveauPlotsDansFuseau" } },
        { "BEH_Log_Pion_ALAT_GererPlotsRavitaillement", { "done_BEH_Log_Pion_ALAT_GererPlotsRavitaillement" } },
        { "BEH_Eni_Pion_ALAT_EviterContactsAvecEnnemisConnus", { "done_BEH_Eni_Pion_ALAT_EviterContactsAvecEnnemisConnus" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.nDummy = self.params[1]
    end,

    activate = function( self )
        local Activate = Activate
        if( ModuleBegins() ) then
            do
                --[[//initialisation des atributs de la patrouille ALAT
]]F_Pion_SetobjectifEsquive( myself, nil )
                myself.objectifCourant_ = nil
                myself.bEnPhaseRavitaillement_ = false
                myself.rNiveauAlerteRavitaillement_ = 0
                myself.bEnCoursExtractionPersonnel_ = false
                myself.bDemandeOrdreConduitePoursuivre_ = false
                --[[//initialisation de la position de regroupement avec notre position 
]]--[[//initiale         ]]
                F_Pion_SeteEtatEchelon( myself, eEtatEchelon_Premier )
                --[[// Activation de l'écoute radar
]]DEC_Perception_ActiverRadar( eRadarType_EcouteRadar )
                --[[// Initialisation des paramètres de recompletement
]]myself.porteeAction_ = eMoyennePortee
                myself.ambianceMission_ = ePolyvalent
            end
--[[// MAJ par défaut
]]        end

        Activate( self.activations.BEH_MAJ_EtatDefaut, 1, emptyTable )
        Activate( self.activations.BEH_Mot_Pion_ALAT_AffecterVariablesDEtat, 1, emptyTable )
        Activate( self.activations.BEH_ALAT_Ambiance, 1, emptyTable )
        Activate( self.activations.BEH_Nbc, 1, emptyTable )
        Activate( self.activations.BEH_ROE, 1, emptyTable )
        Activate( self.activations.BEH_Rens, 1, emptyTable )
        Activate( self.activations.BEH_Ordre_Pion_ALAT_ChangerParametresRecompletement, 1, emptyTable )
        Activate( self.activations.BEH_Info_Pion_RendreCompte, 1, emptyTable )
        myself.plotsRavitaillement_ = S_Obj_ListeObjetsValides( myself.plotsRavitaillement_ or {} )
        if( S_Misc_EstDetruitPhysique() ) then
            do return end
        end

        Activate( self.activations.BEH_Dep_Pion_ALAT_SePoser, 0.5, emptyTable )
        if( myself.bEnPhaseRavitaillement_ ) then
            Activate( self.activations.BEH_Log_Pion_ALAT_Recompletement, 100000, emptyTable )
        end

        Activate( self.activations.BEH_Lima_GererLimas, 1, emptyTable )--[[// Gestion automatique du vol furtif
]]
        --[[// coordination du feu    	
]]if( not DEC_Agent_AutomateEstEmbraye() ) then
            SetStateVariable( "VE_Coordination_Tir", 1 )
        else
            Activate( self.activations.BEH_Manoeuvre_Pion_SeCoordonner, 100, emptyTable )
        end

        --[[// gestion de la déstruction tactique
]]Activate( self.activations.BEH_Manoeuvre_Pion_GestionDestruction, 10000, emptyTable )
        --[[// ---------------------------------------------------------------------
]]--[[// choix du plot de ravitaillement si l'automate n'a pas de mission
]]--[[//
]]--[[// Contrôle d'alerte ravitaillement ( Cf. Motivations sur Temps de Vol )
]]--[[// ---------------------------------------------------------------------
]]local automate = DEC_GetAutomate( myself )
        if( DEC_GetMission( automate ) == nil ) then
            do
                local mission = DEC_GetMission( myself )
                if( mission == nil or mission:GetType() ~= "T_Mission_Pion_ALAT_AllerSeRecompleter" ) then
                    Activate( self.activations.BEH_Log_Pion_ALAT_AjoutNouveauPlotsDansFuseau, 1, emptyTable )
                end

                Activate( self.activations.BEH_Log_Pion_ALAT_GererPlotsRavitaillement, 1, emptyTable )
            end
--[[// implémentation du pathfind adaptatif
]]--[[// ------------------------------------
]]        end

        Activate( self.activations.BEH_Eni_Pion_ALAT_EviterContactsAvecEnnemisConnus, 1, emptyTable )
    end,

--[[//------------------------------------------------------------------------------
]]--[[// BEH_Dep_Virtuel_ProgressionVers
]]--[[//------------------------------------------------------------------------------
]]}

node "BEH_Dep_Virtuel_ProgressionVers"
{
    feedbacks = { { { "done_BEH_Dep_Virtuel_ProgressionVers" }, "BEH_Dep_Virtuel_ProgressionVers" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Dep_Virtuel_ProgressionVers, {value} ) end,
    activations =
    {
        { "BEH_Dep_Pion_ALAT_RejoindrePoint", { "done_BEH_Dep_Pion_ALAT_RejoindrePoint" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.point = self.params[1]
        self._namedParams.eTypeProgression = self.params[2]
        self._namedParams.eTypeIti = self.params[3]
    end,

    activate = function( self )
        local Activate = Activate
        Activate( self.activations.BEH_Dep_Pion_ALAT_RejoindrePoint, 1, { self._namedParams.point, self._namedParams.eTypeProgression, self._namedParams.eTypeIti, } )
    end,

--[[//------------------------------------------------------------------------------
]]--[[// BEH_Dep_Virtuel_PreparationAction
]]--[[//------------------------------------------------------------------------------
]]}

node "BEH_Dep_Virtuel_PreparationAction"
{
    feedbacks = { { { "done_BEH_Dep_Virtuel_PreparationAction" }, "BEH_Dep_Virtuel_PreparationAction" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Dep_Virtuel_PreparationAction, {value} ) end,
    activations =
    {
        { "BEH_Dep_Pion_ALAT_Voler", { "done_BEH_Dep_Pion_ALAT_Voler" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        Activate( self.activations.BEH_Dep_Pion_ALAT_Voler, 1, emptyTable )--[[//Gestion du vol pour les hélicopteres
]]
                self:SendFeedback( eActionEffectuee )
        do return end

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_MAJ_EtatDefaut", nodes.BEH_MAJ_EtatDefaut }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Mot_Pion_ALAT_AffecterVariablesDEtat", nodes.BEH_Mot_Pion_ALAT_AffecterVariablesDEtat }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_ALAT_Ambiance", nodes.BEH_ALAT_Ambiance }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Nbc", nodes.BEH_Nbc }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_ROE", nodes.BEH_ROE }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Rens", nodes.BEH_Rens }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Ordre_Pion_ALAT_ChangerParametresRecompletement", nodes.BEH_Ordre_Pion_ALAT_ChangerParametresRecompletement }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Info_Pion_RendreCompte", nodes.BEH_Info_Pion_RendreCompte }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Dep_Pion_ALAT_SePoser", nodes.BEH_Dep_Pion_ALAT_SePoser }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Log_Pion_ALAT_Recompletement", nodes.BEH_Log_Pion_ALAT_Recompletement }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Lima_GererLimas", nodes.BEH_Lima_GererLimas }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Manoeuvre_Pion_SeCoordonner", nodes.BEH_Manoeuvre_Pion_SeCoordonner }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Manoeuvre_Pion_GestionDestruction", nodes.BEH_Manoeuvre_Pion_GestionDestruction }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Log_Pion_ALAT_AjoutNouveauPlotsDansFuseau", nodes.BEH_Log_Pion_ALAT_AjoutNouveauPlotsDansFuseau }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Log_Pion_ALAT_GererPlotsRavitaillement", nodes.BEH_Log_Pion_ALAT_GererPlotsRavitaillement }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Eni_Pion_ALAT_EviterContactsAvecEnnemisConnus", nodes.BEH_Eni_Pion_ALAT_EviterContactsAvecEnnemisConnus }
connections[ #connections + 1 ] = { nodes.BEH_Dep_Virtuel_PreparationAction, "BEH_Dep_Pion_ALAT_Voler", nodes.BEH_Dep_Pion_ALAT_Voler }
connections[ #connections + 1 ] = { nodes.BEH_Dep_Virtuel_ProgressionVers, "BEH_Dep_Pion_ALAT_RejoindrePoint", nodes.BEH_Dep_Pion_ALAT_RejoindrePoint }
