includedFiles = includedFiles or {}
includedFiles["sources/appui/alat/automates/common/missions/aller se recompleter/Aller Se Recompleter - MRT.bms"] = true

--[[// -----------------------------------------------------------------------------
]]--[[// Aller Se Recompleter :
]]--[[// ----------------------
]]--[[//
]]--[[// Commentaires : mission de recompletement spécifique aux unités de l'ALAT.
]]--[[//                Les unités subordonnés recoivent la mission de recompletement
]]--[[//                ALAT vers le point de ravitaillement le plus proche (TC2 ou 
]]--[[//                plot de ravitaillement )
]]--[[// -----------------------------------------------------------------------------
]]node "MIS_Automate_MRT_ALAT_AllerSeRecompleter"
{
    feedbacks = { { { "done_MIS_Automate_MRT_ALAT_AllerSeRecompleter" }, "MIS_Automate_MRT_ALAT_AllerSeRecompleter" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_MIS_Automate_MRT_ALAT_AllerSeRecompleter, {value} ) end,
    activations =
    {
        { "BEH_Medo_Automate_ControleCreationMission", { "done_BEH_Medo_Automate_ControleCreationMission" } },
        { "BEH_Medo_Automate_ALAT_AssignerMissionsAllerSeRecompleterAListe", { "done_BEH_Medo_Automate_ALAT_AssignerMissionsAllerSeRecompleterAListe" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        local Activate = Activate
        self.ePhase = self.ePhase or eMRT_AssignerMissions
        self.eEtatMissionsAllerSeRecompleter = self.eEtatMissionsAllerSeRecompleter or eActionEnCours
        self.selPions = self.selPions or S_Cherche_Automate_PionsOperationnels( S_ListePionsALAT( DEC_Automate_PionsAvecPC() ) )
        if( ModuleBegins() ) then
            do
                myself.sPlotsDeRavitaillement_ = self._namedParams.mission.plotsRavitaillement_ or emptyTable
                DEC_SetMission( myself, self._namedParams.mission )
            end
        end

         do
            local _continue = true
--[[// GESTION DES ERREURS / CONTROLE VALIDITE MRT
]]--[[// Reconnaitre le contour ennemi : controle de creation mission
]]--[[// Reconnaitre le contour ennemi : ordre de creation des missions
]]            local switch_1 = self.ePhase
                if switch_1 == eMRT_AssignerMissions then
                    if( self.eEtatMissionsAllerSeRecompleter == eActionImpossible ) then
                        do
                            self.ePhase = eMRT_MissionImpossible
                                                        do return end

                        end
                    end

                    if( self.eEtatMissionsAllerSeRecompleter == eActionEffectuee ) then
                        do
                            self.ePhase = eMRT_Valider
                                                        do return end

                        end
                    end

                    Activate( self.activations.BEH_Medo_Automate_ControleCreationMission, 1, { #( self.selPions ), } )
self.done_BEH_Medo_Automate_ControleCreationMission = function( self, _, v ) self.eEtatMissionsAllerSeRecompleter = v[1] end
                    if( not DIA_IsListEmpty( self.selPions ) ) then
                        Activate( self.activations.BEH_Medo_Automate_ALAT_AssignerMissionsAllerSeRecompleterAListe, 1, { ePhase_MRT, self.selPions, self._namedParams.mission.plotsRavitaillement_, } )
                    end

                    _continue = false
                elseif switch_1 == eMRT_MissionImpossible then
                    DEC_RC( eRC_MissionImpossible )
                                        self:SendFeedback( eActionImpossible )
                    Halt( self )
                    do return end

                                end
                if switch_1 == eMRT_Valider then
                    DEC_MRT_Valide()
                                        self:SendFeedback( eActionEffectuee )
                    Halt( self )
                    do return end

                                end
            end

    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Automate_MRT_ALAT_AllerSeRecompleter = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.MIS_Automate_MRT_ALAT_AllerSeRecompleter, "BEH_Medo_Automate_ControleCreationMission", nodes.BEH_Medo_Automate_ControleCreationMission }
connections[ #connections + 1 ] = { nodes.MIS_Automate_MRT_ALAT_AllerSeRecompleter, "BEH_Medo_Automate_ALAT_AssignerMissionsAllerSeRecompleterAListe", nodes.BEH_Medo_Automate_ALAT_AssignerMissionsAllerSeRecompleterAListe }
