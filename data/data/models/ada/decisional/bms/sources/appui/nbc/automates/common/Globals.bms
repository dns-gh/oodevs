includedFiles = includedFiles or {}
includedFiles["sources/appui/nbc/automates/common/Globals.bms"] = true

include "bit.lua"


--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: MIA 02-11-08 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Appui/Nbc/Automates/Common/Globals.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 20/09/05 18:12 $
]]--[[// $Revision: 14 $
]]--[[// $Workfile: Globals.hal $
]]--[[//
]]--[[// *****************************************************************************
]]
include "Common/Automates/Globals.bms"


include "Appui/Nbc/Automates/Common/Parameters.bms"

include "Appui/Nbc/Globals.bms"

--[[//=============================================================================
]]--[[// Definition des functions ecrites en script ABC
]]--[[//=============================================================================
]]--[[//-----------------------------------------------------------------------------
]]--[[// Renvoie vrai qd tous les pions passer en paramètre sont en position( mission statique )
]]--[[//-----------------------------------------------------------------------------
]]--[[// TEMP
]]--[[//-------------------------------------------------------------------------
]]--[[// Renvoie la liste des sites non reconnus (filtre)
]]--[[//-------------------------------------------------------------------------
]]--[[// T_ConnaissanceObjet site = x;
]]--[[//-------------------------------------------------------------------------
]]--[[// Renvoie la liste des pion RE non detruits
]]--[[//-------------------------------------------------------------------------
]]--[[//-------------------------------------------------------------------------
]]--[[// Renvoie le point le 
]]--[[//-------------------------------------------------------------------------
]]--[[// 1105199104
]]--[[// Attention :sécurité si l'objet est invalide
]]function S_Misc_Automate_NBC_PionsEnPosition( listePions )
    local _returnValue = false
    _returnValue = false
    local rNbrePionsPrets = 0
    for _,x in pairs( listePions ) do
    local _continue = true
do
            local pion = x
            if( F_Pion_GeteEtatPhaseMission( pion ) == eEtatPhaseMission_EnPosition ) then
                                rNbrePionsPrets = rNbrePionsPrets + 1
            end

        end

    end

    _returnValue = ( rNbrePionsPrets == #( listePions ) )
    return _returnValue
end

function S_NBC_ObtenirSitesNonReconnus( listeSite )
    local _returnValue = {}
    local listeTemp = {}
    for _,site in pairs( listeSite ) do
    local _continue = true
do
            if( not DEC_ConnaissanceObjet_EstReconnu( site ) ) then
                DEC_UserTypeList_PushBack( listeTemp, site )
            end

        end

    end

    _returnValue = listeTemp
    return _returnValue
end

function S_NBC_ObtenirPionsROTADisposnibles( )
    local _returnValue = {}
    local listeTemp = {}
    for _,x in pairs( DEC_Automate_PionsAvecPC() ) do
    local _continue = true
do
            local pion = x
            if( pion:GetType() == "Patrouille_NBC_RE" and F_Pion_GeteEtatDestruction( pion ) == "eEtatDestruction_None" and ( ( DEC_GetMission( pion ) == 0 or DEC_GetMission( pion ) == nil ) or F_Pion_GeteEtatPhaseMission( pion ) == eEtatPhaseMission_FinMission ) ) then
                DIA_PushFront( listeTemp, pion )
            end

        end

    end

    _returnValue = listeTemp
    return _returnValue
end

function S_Misc_ObtenirSiteProche( listeObjets, positionPion )
    local _returnValue = nil
    _returnValue = nil
    local rDistanceProche = 1105199104
    local rDistanceCourante = 0
    for _,objet in pairs( listeObjets ) do
    local _continue = true
do
            if( not DEC_ConnaissanceObjet_EstValide( objet ) ) then
                _continue = false
            end

                if _continue then
                local positionObjet = S_Obj_Position( objet )
                rDistanceCourante = DEC_Geometrie_Distance( positionObjet, positionPion )
                if( rDistanceCourante < rDistanceProche ) then
                    do
                        rDistanceProche = rDistanceCourante
                        _returnValue = objet
                    end
                end

            end
        end

    end

    return _returnValue
end

