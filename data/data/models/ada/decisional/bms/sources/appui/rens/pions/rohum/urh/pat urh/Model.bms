includedFiles = includedFiles or {}
includedFiles["sources/appui/rens/pions/rohum/urh/pat urh/Model.bms"] = true



--[[//=============================================================================
]]--[[// Fichiers de définition
]]--[[//=============================================================================
]]include "MacroFunctions.bms"

include "Appui/Rens/Pions/Rohum/URH/Pat URH/Globals.bms"
include "Common/Pions/Perception.bms"
include "Appui/Rens/Pions/Rohum/URH/Pat URH/Motivations.bms"
include "Appui/Rens/Pions/Rohum/URH/Pat URH/Behaviors.bms"

local actualConnections = {}
if connections then
    for i, entry in pairs( connections ) do
        if entry[3] == nil then
            entry[3] = nodes[entry[2]]
        end
        if entry[3] ~= nil or type( entry[2] ) ~= "string" then
            actualConnections[#actualConnections + 1] = entry
        end
    end
end
eventmanager_plugin = eventmanager_plugin or {}
if not nodes.BEH_Defaut then node "BEH_Defaut" {} end
eventmanager_plugin.BEH_Defaut = {}
local table = {
    eventmanager_plugin = eventmanager_plugin,
    connections = actualConnections,
    actuators = actuators or {},
    motivation_plugin = motivation_plugin or {},
}
local dummyClass = setmetatable( { "dummyClass" }, { __persist = function() end } )
masalife.brain.knowledge.createKnowledgeImplementation { className = dummyClass }
masalife.brain.knowledge:registerRole( masalife.brain.knowledge.create( dummyClass, {} ) )
masalife.brain.knowledge.me.body = masalife.brain.knowledge.create( dummyClass, {} )
brain "name" ( table )