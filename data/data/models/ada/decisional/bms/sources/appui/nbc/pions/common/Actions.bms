includedFiles = includedFiles or {}
includedFiles["sources/appui/nbc/pions/common/Actions.bms"] = true

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: MIA 02-11-08 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Appui/Nbc/Pions/Common/Actions.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 1/09/05 9:59 $
]]--[[// $Revision: 11 $
]]--[[// $Workfile: Actions.hal $
]]--[[//
]]--[[// *****************************************************************************
]]
--[[// *****************************************************************************
]]--[[// ACT_Pion_Nbc_CreerSite
]]--[[//
]]--[[// Commentaires: MIA A VIRER TROP COMPLIQUER A voir avec SDE/NLD
]]--[[//
]]--[[// *****************************************************************************
]]node "ACT_Pion_Nbc_CreerSiteSur"
{
    feedbacks = { { { "done_ACT_Pion_Nbc_CreerSiteSur" }, "ACT_Pion_Nbc_CreerSiteSur" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_ACT_Pion_Nbc_CreerSiteSur, {value} ) end,
    create = function( self )
        self._namedParams = {}
        self._namedParams.position = self.params[1]
    end,

    select = function( self )
        self.localisation = self.localisation or nil
        --[[//-----------------------------------------------------------------------------
]]--[[// Init --> commencer à construire l'objet
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                self.localisation = DEC_Geometrie_ConvertirPointEnLocalisation( self._namedParams.position )
                DEC_CreerObjetSansDelais( S_TypeObject_ToString( eTypeObjectSiteDecontamination ), self.localisation )
            end
        end

    end,

}

--[[// *****************************************************************************
]]--[[// ACT_Pion_Nbc_AnimerSite
]]--[[//
]]--[[// Commentaires: 
]]--[[//
]]--[[// *****************************************************************************
]]node "ACT_Pion_Nbc_AnimerSite"
{
    feedbacks = { { { "done_ACT_Pion_Nbc_AnimerSite" }, "ACT_Pion_Nbc_AnimerSite" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_ACT_Pion_Nbc_AnimerSite, {value} ) end,
    actuators =
    {
        deplacement = 1,
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.siteDecontamination = self.params[1]
    end,

    select = function( self )
                self.actionAnimer = self.actionAnimer or 0
        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                if( not DEC_Agent_AutomateEstEmbraye() ) then
                    DEC_RC( eRC_SiteDecontaminationAnime )
                else
                    DEC_Message( eRC_SiteDecontaminationAnime )
                end

                DEC_Trace( "Animation du site" )
                self.actionAnimer = DEC__StartAnimerObjet( self._namedParams.siteDecontamination )
            end
        end

    end,

    deselect = function( self )
                DEC_Trace( "Site non anime" )
        self.actionAnimer = DEC_StopAction( self.actionAnimer )
        if( not DEC_Agent_AutomateEstEmbraye() ) then
            DEC_RC( eRC_SiteDecontaminationDesactive )
        else
            DEC_Message( eRC_SiteDecontaminationDesactive )
        end

                Halt( self )
        do return end

    end,

    destroy = function( self )
                DEC_Trace( "Site non anime" )
        self.actionAnimer = DEC_StopAction( self.actionAnimer )
        if( not DEC_Agent_AutomateEstEmbraye() ) then
            DEC_RC( eRC_SiteDecontaminationDesactive )
        else
            DEC_Message( eRC_SiteDecontaminationDesactive )
        end

    end,

}

--[[// *****************************************************************************
]]--[[// ACT_Pion_Nbc_ReconnaitreSiteROTA
]]--[[//
]]--[[// Commentaires: 
]]--[[//
]]--[[// *****************************************************************************
]]node "ACT_Pion_Nbc_ReconnaitreSiteROTA"
{
    feedbacks = { { { "done_ACT_Pion_Nbc_ReconnaitreSiteROTA" }, "ACT_Pion_Nbc_ReconnaitreSiteROTA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_ACT_Pion_Nbc_ReconnaitreSiteROTA, {value} ) end,
    actuators =
    {
        deplacement = 1,
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.siteROTA = self.params[1]
    end,

    select = function( self )
        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]        if( ModuleBegins() ) then
            do
                if( not DEC_Agent_AutomateEstEmbraye() ) then
                    DEC_RC( eRC_SiteROTAReconnu )
                else
                    DEC_Message( eRC_SiteROTAReconnu )
                end

            end
--[[//-----------------------------------------------------------------------------
]]--[[// Fin reco dévoiler les attribus du site ROTA
]]--[[//-----------------------------------------------------------------------------
]]        end

        DEC_ConnaissanceObjet_Reconnaitre( self._namedParams.siteROTA )
                self:SendFeedback( eActionEffectuee )
        do return end

    end,

    deselect = function( self )
            end,

}

--[[// *****************************************************************************
]]--[[// ACT_Pion_Nbc_ReconnaitreZone
]]--[[//
]]--[[// Commentaires: 
]]--[[//
]]--[[// *****************************************************************************
]]node "ACT_Pion_Nbc_ReconnaitreZone"
{
    feedbacks = { { { "done_ACT_Pion_Nbc_ReconnaitreZone" }, "ACT_Pion_Nbc_ReconnaitreZone" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_ACT_Pion_Nbc_ReconnaitreZone, {value} ) end,
    actuators =
    {
        deplacement = 1,
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.zoneNBC = self.params[1]
    end,

    select = function( self )
        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]        if( ModuleBegins() ) then
            do
                if( not DEC_Agent_AutomateEstEmbraye() ) then
                    DEC_RC( eRC_ZoneReconnue )
                else
                    DEC_Message( eRC_ZoneReconnue )
                end

            end
--[[//-----------------------------------------------------------------------------
]]--[[// Fin reco dévoiler les attribus du site ROTA
]]--[[//-----------------------------------------------------------------------------
]]        end

        DEC_ConnaissanceObjet_Reconnaitre( self._namedParams.zoneNBC )
                self:SendFeedback( eActionEffectuee )
        do return end

    end,

    deselect = function( self )
            end,

}

