includedFiles = includedFiles or {}
includedFiles["sources/appui/alat/pions/common/behaviors/Behaviors - Manoeuvre.bms"] = true

--[[// -----------------------------------------------------------------------------
]]--[[// Ce comportement doit etre appelé avec une force comprise entre la plage des 
]]--[[// forces reservée pour les comportements de mission, et la plage entre reservée
]]--[[// aux comportements de combat de rencontre
]]--[[// -----------------------------------------------------------------------------
]]node "BEH_Manoeuvre_Pion_SeCoordonner"
{
    activations =
    {
        { "BEH_Dep_Pion_ALAT_Suivre", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        for _,x in pairs( myself.listePionsCoordination_ ) do
        local _continue = true
do
                --[[//seulement sur les pions alat pour le moment
]]if( not S_EstPatrouilleALAT( x ) ) then
                    _continue = false
                end

                    if _continue then
                    Activate( self.activations.BEH_Dep_Pion_ALAT_Suivre, S_Force_Pion_ALAT_Raprochement( DEC_Geometrie_Distance( myself:DEC_Agent_Position(), x:DEC_Agent_Position() ), 0 ), { x, 0, eProgressionDefaut, eTypeItiInfiltration, } )
                end
            end

        end

    end,

--[[// -----------------------------------------------------------------------------
]]--[[// Gerer Destruction Tactique ou Physique
]]--[[// -----------------------------------------------------------------------------
]]}

node "BEH_Manoeuvre_Pion_GestionDestruction"
{
    activations =
    {
        { "BEH_Dep_Pion_ALAT_SePoser", {} },
        { "BEH_Dep_Pion_ALAT_RejoindrePoint", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        self.eEtat = self.eEtat or eActionEnCours
        if( S_Misc_EstDetruitTactique() ) then
            do
                if( self.eEtat == eActionEffectuee ) then
                    Activate( self.activations.BEH_Dep_Pion_ALAT_SePoser, 1, {} )
                else
                    Activate( self.activations.BEH_Dep_Pion_ALAT_RejoindrePoint, 1, setmetatable( { myself.pointRegroupement_, eProgressionDefaut, eTypeItiInfiltration, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eEtat = v else rawset( t, k, v ) end end } ) )
                end

            end
        end

    end,

--[[// -----------------------------------------------------------------------------
]]--[[// Gerer Destruction Tactique ou Physique
]]--[[// -----------------------------------------------------------------------------
]]}

node "BEH_Manoeuvre_Pion_AllerStationner"
{
    activations =
    {
        { "ACT_Maj_Pions_ObjectifEsquive", {} },
        { "BEH_Dep_Pion_ALAT_RejoindrePoint", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.objectif = self.params[1]
    end,

    activate = function( self )
        self.eEtat = self.eEtat or eActionEnCours
        Activate( self.activations.ACT_Maj_Pions_ObjectifEsquive, 1, { self._namedParams.objectif, } )
        Activate( self.activations.BEH_Dep_Pion_ALAT_RejoindrePoint, 1, setmetatable( { self._namedParams.objectif, eProgressionDefaut, eTypeItiInfiltration, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eEtat = v else rawset( t, k, v ) end end } ) )
        if( self.eEtat == eActionEffectuee ) then
            self.params.__returnValue = eActionEffectuee
            Halt( self )
            do return end
        end

                self.params.__returnValue = self.eEtat
        do return end

    end,

--[[// -----------------------------------------------------------------------------
]]--[[// Gerer le recueil
]]--[[// -----------------------------------------------------------------------------
]]}

node "BEH_Manoeuvre_Pion_GererRecueil"
{
    activations =
    {
        { "BEH_Lima_GererLIA", {} },
        { "BEH_Lima_GererLR", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        Activate( self.activations.BEH_Lima_GererLIA, 1, {} )
        Activate( self.activations.BEH_Lima_GererLR, 1, {} )
    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Manoeuvre_Pion_AllerStationner, "ACT_Maj_Pions_ObjectifEsquive", nodes.ACT_Maj_Pions_ObjectifEsquive }
connections[ #connections + 1 ] = { nodes.BEH_Manoeuvre_Pion_AllerStationner, "BEH_Dep_Pion_ALAT_RejoindrePoint", nodes.BEH_Dep_Pion_ALAT_RejoindrePoint }
connections[ #connections + 1 ] = { nodes.BEH_Manoeuvre_Pion_GererRecueil, "BEH_Lima_GererLIA", nodes.BEH_Lima_GererLIA }
connections[ #connections + 1 ] = { nodes.BEH_Manoeuvre_Pion_GererRecueil, "BEH_Lima_GererLR", nodes.BEH_Lima_GererLR }
connections[ #connections + 1 ] = { nodes.BEH_Manoeuvre_Pion_GestionDestruction, "BEH_Dep_Pion_ALAT_SePoser", nodes.BEH_Dep_Pion_ALAT_SePoser }
connections[ #connections + 1 ] = { nodes.BEH_Manoeuvre_Pion_GestionDestruction, "BEH_Dep_Pion_ALAT_RejoindrePoint", nodes.BEH_Dep_Pion_ALAT_RejoindrePoint }
connections[ #connections + 1 ] = { nodes.BEH_Manoeuvre_Pion_SeCoordonner, "BEH_Dep_Pion_ALAT_Suivre", nodes.BEH_Dep_Pion_ALAT_Suivre }
