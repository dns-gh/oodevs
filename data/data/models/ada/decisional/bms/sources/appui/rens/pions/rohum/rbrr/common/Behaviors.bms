includedFiles = includedFiles or {}
includedFiles["sources/appui/rens/pions/rohum/rbrr/common/Behaviors.bms"] = true

--[[// *****************************************************************************
]]--[[// Comportement par défaut.
]]--[[//
]]--[[// Commentaires: 
]]--[[//
]]--[[// *****************************************************************************
]]node "BEH_Defaut"
{
    feedbacks = { { { "done_BEH_Defaut" }, "BEH_Defaut" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Defaut, {value} ) end,
    activations =
    {
        { "BEH_Dep_Pion_GererFurtivite", { "done_BEH_Dep_Pion_GererFurtivite" } },
        { "BEH_MAJ_EtatDefaut", { "done_BEH_MAJ_EtatDefaut" } },
        { "BEH_ROE", { "done_BEH_ROE" } },
        { "BEH_Ambiance", { "done_BEH_Ambiance" } },
        { "BEH_Nbc", { "done_BEH_Nbc" } },
        { "BEH_Rens", { "done_BEH_Rens" } },
        { "BEH_Mot_Pion_Embarquer", { "done_BEH_Mot_Pion_Embarquer" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.nDummy = self.params[1]
    end,

    activate = function( self )
        Activate( self.activations.BEH_Dep_Pion_GererFurtivite, 1, {} )--[[// Furtivité Attention Hack --> normalement utilisée seulement pd les missions.
]]--[[// DONC pas de mise à jour du rapFor. Esquive seulement sur prise à partie
]]
        Activate( self.activations.BEH_MAJ_EtatDefaut, 1, {} )--[[//-----------------------------------------------------------------------------
]]--[[// MAJ VE
]]--[[//-----------------------------------------------------------------------------
]]--[[//behavior BEH_Mot_Pion_Rens_AffecterVariablesDEtat();
]]--[[//-----------------------------------------------------------------------------
]]--[[// MAJ de l'état DEC par défaut 
]]--[[//-----------------------------------------------------------------------------
]]
        --[[// Si totalement detruit...
]]if( S_Misc_EstDetruitPhysique() ) then
            do return end
        end

        Activate( self.activations.BEH_ROE, 1, {} )--[[//-----------------------------------------------------------------------------
]]--[[// Comp générique
]]--[[//-----------------------------------------------------------------------------
]]
        Activate( self.activations.BEH_Ambiance, 1, {} )
        Activate( self.activations.BEH_Nbc, 1, {} )
        Activate( self.activations.BEH_Rens, 1, {} )
        Activate( self.activations.BEH_Mot_Pion_Embarquer, 1, {} )--[[//-------------------------------------------------------------------------
]]--[[// Embarquement apres Heliportage
]]--[[// ------------------------------------------------------------------------
]]
    end,

--[[// *****************************************************************************
]]--[[// BEH_Mot_Pion_Rens_AffecterVariablesDEtat
]]--[[//
]]--[[// Commentaire : Ce comportement est à inclure dans le BEH_Defaut du pion
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mot_Pion_Rens_AffecterVariablesDEtat"
{
    feedbacks = { { { "done_BEH_Mot_Pion_Rens_AffecterVariablesDEtat" }, "BEH_Mot_Pion_Rens_AffecterVariablesDEtat" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mot_Pion_Rens_AffecterVariablesDEtat, {value} ) end,
    create = function( self )
    end,

    activate = function( self )
        --[[//////////////// BMS OPTIM  ///////////////////
]]        if( F_Pion_GeteEtatDec( myself ) == eEtatDec_Sauvegarde ) then
            do return end
        end

         do
            local _continue = true
            local switch_1 = --[[////////////// FIN OPTIM  /////////////////////
]]--[[//-----------------------------------------------------------------------------
]]--[[// En fonction du moral...
]]--[[//-----------------------------------------------------------------------------
]]DEC_FacteurHumain_Moral()
            local cases_switch_1 = {}
                if switch_1 == eMoral_Fanatique then
                    --[[//-----------------------------------------------------------------------------
]]--[[// Fanatique --> esquive sur PAP, pas de ralentissement
]]--[[//-----------------------------------------------------------------------------
]]--[[// Rien
]]SetStateVariable( "VE_RapForPrudence", 0 )
                    SetStateVariable( "VE_RapFor", 0 )
                    _continue = false
                --[[//-----------------------------------------------------------------------------
]]--[[// Moral bon --> esquive sur PAP et effet rapFor défavorable --> ralentissement
]]--[[//-----------------------------------------------------------------------------
]]                cases_switch_1[1] = true
elseif switch_1 == eMoral_Moyen
                or switch_1 == eMoral_Bon then
                    --[[//-----------------------------------------------------------------------------
]]--[[// En fonction de la mission...  --> idem moral mauvais
]]--[[//-----------------------------------------------------------------------------
]]if( ( DEC_GetMission( myself ) == 0 or DEC_GetMission( myself ) == nil ) ) then
                        do
                            SetStateVariable( "VE_RapFor", ( 5 - DEC_RapportDeForceLocal() ) )
                            SetStateVariable( "VE_RapForPrudence", 0 )
                            _continue = false
                        end
--[[// sinon
]]                    end

                        if _continue then
                        SetStateVariable( "VE_RapForPrudence", ( 5 - DEC_RapportDeForceLocal() ) )
                        SetStateVariable( "VE_RapFor", 0 )
                        _continue = false
                    end
                --[[//-----------------------------------------------------------------------------
]]--[[// Moral mauvais: --> esquive sur PAP et sur rapFor défavorable
]]--[[//-----------------------------------------------------------------------------
]]                cases_switch_1[2] = true
elseif switch_1 == eMoral_Mauvais then
                    SetStateVariable( "VE_RapFor", ( 5 - DEC_RapportDeForceLocal() ) )
                    SetStateVariable( "VE_RapForPrudence", 0 )
                    _continue = false
                                cases_switch_1[3] = true
                end
            end

    end,

    destroy = function( self )
                SetStateVariable( "VE_RapFor", 0 )
        SetStateVariable( "VE_RapForPrudence", 0 )
    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Dep_Pion_GererFurtivite", nodes.BEH_Dep_Pion_GererFurtivite }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_MAJ_EtatDefaut", nodes.BEH_MAJ_EtatDefaut }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_ROE", nodes.BEH_ROE }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Ambiance", nodes.BEH_Ambiance }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Nbc", nodes.BEH_Nbc }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Rens", nodes.BEH_Rens }
connections[ #connections + 1 ] = { nodes.BEH_Defaut, "BEH_Mot_Pion_Embarquer", nodes.BEH_Mot_Pion_Embarquer }
