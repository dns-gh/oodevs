includedFiles = includedFiles or {}
includedFiles["sources/appui/trans/automates/behaviors/Behaviors - Medo.bms"] = true

local emptyTable = emptyTable

include "Appui/Trans/Automates/Actions/Actions - Medo.bms"


--[[// *****************************************************************************
]]--[[// BEH_Medo_Automate_ControleCreationMission()
]]--[[//
]]--[[// Commentaires :
]]--[[//
]]--[[// *****************************************************************************
]]--[[// ****************************************************************************
]]--[[// BEH_Mission_Automate_TRANS_AssignerEtablirGererLiaisonAListe
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// ****************************************************************************
]]node "BEH_Mission_Automate_TRANS_AssignerEtablirGererLiaisonAListe"
{
    feedbacks = { { { "done_BEH_Mission_Automate_TRANS_AssignerEtablirGererLiaisonAListe" }, "BEH_Mission_Automate_TRANS_AssignerEtablirGererLiaisonAListe" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_TRANS_AssignerEtablirGererLiaisonAListe, {value} ) end,
    activations =
    {
        { "BEH_Mission_Automate_TRANS_AssignerEtablirGererLiaisonA", { "done_BEH_Mission_Automate_TRANS_AssignerEtablirGererLiaisonA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.listePions = self.params[2]
        self._namedParams.position = self.params[3]
    end,

    activate = function( self )
        local Activate = Activate
        assert( #( self._namedParams.listePions ) ~= 0, "Liste pions vide" )
        if( ModuleBegins() ) then
            do
                for _,x in pairs( self._namedParams.listePions or emptyTable ) do
                local _continue = true
                    StartActivateOverride( self, self.activations.BEH_Mission_Automate_TRANS_AssignerEtablirGererLiaisonA, 1, { self._namedParams.ePhase, x, self._namedParams.position, } )

                end

            end
        end

    end,

--[[// ****************************************************************************
]]--[[// BEH_Mission_Automate_TRANS_AssignerEtablirGererLiaisonA
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// ****************************************************************************
]]}

node "BEH_Mission_Automate_TRANS_AssignerEtablirGererLiaisonA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_TRANS_AssignerEtablirGererLiaisonA" }, "BEH_Mission_Automate_TRANS_AssignerEtablirGererLiaisonA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_TRANS_AssignerEtablirGererLiaisonA, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_TRANS_AssignerEtablirGererLiaisonA", { "done_ACT_Mission_Automate_TRANS_AssignerEtablirGererLiaisonA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pion = self.params[2]
        self._namedParams.position = self.params[3]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        Activate( self.activations.ACT_Mission_Automate_TRANS_AssignerEtablirGererLiaisonA, rForce, { self._namedParams.ePhase, self._namedParams.pion, self._namedParams.position, } )
self.done_ACT_Mission_Automate_TRANS_AssignerEtablirGererLiaisonA = function( self, _, v ) self.eActionCreation = v[1] end
    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_TRANS_AssignerEtablirGererLiaisonA, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_TRANS_AssignerEtablirGererLiaisonA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_TRANS_AssignerEtablirGererLiaisonA, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_TRANS_AssignerEtablirGererLiaisonA, "ACT_Mission_Automate_TRANS_AssignerEtablirGererLiaisonA", nodes.ACT_Mission_Automate_TRANS_AssignerEtablirGererLiaisonA }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_TRANS_AssignerEtablirGererLiaisonAListe, "BEH_Mission_Automate_TRANS_AssignerEtablirGererLiaisonA", nodes.BEH_Mission_Automate_TRANS_AssignerEtablirGererLiaisonA }
