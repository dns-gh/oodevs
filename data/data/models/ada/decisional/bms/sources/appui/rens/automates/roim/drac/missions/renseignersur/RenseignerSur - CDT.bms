includedFiles = includedFiles or {}
includedFiles["sources/appui/rens/automates/roim/drac/missions/renseignersur/RenseignerSur - CDT.bms"] = true

local emptyTable = emptyTable

--[[// *****************************************************************************
]]--[[// MIS_Automate_CDT_RENS_ROIM_SDTI_RenseignerSur
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]node "MIS_Automate_CDT_RENS_ROIM_SDTI_RenseignerSur"
{
    feedbacks = { { { "done_MIS_Automate_CDT_RENS_ROIM_SDTI_RenseignerSur" }, "MIS_Automate_CDT_RENS_ROIM_SDTI_RenseignerSur" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_MIS_Automate_CDT_RENS_ROIM_SDTI_RenseignerSur, {value} ) end,
    activations =
    {
        { "BEH_Dispositif_Automate_RENS_GererPionsDetruits_", { "done_BEH_Dispositif_Automate_RENS_GererPionsDetruits_" } },
        { "BEH_Conduite_Automate_RENS_ROIM_DRAC_GererMiseEnOeuvre", { "done_BEH_Conduite_Automate_RENS_ROIM_DRAC_GererMiseEnOeuvre" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        local Activate = Activate
        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            DEC_SetMission( myself, self._namedParams.mission )
        end

        Activate( self.activations.BEH_Dispositif_Automate_RENS_GererPionsDetruits_, 1, emptyTable )--[[//-----------------------------------------------------------------------------
]]--[[// Gestion
]]--[[//-----------------------------------------------------------------------------
]]
        Activate( self.activations.BEH_Conduite_Automate_RENS_ROIM_DRAC_GererMiseEnOeuvre, 1, emptyTable )--[[//behavior BEH_Dispositif_Automate_RENS_GererLeSE_();
]]--[[//-----------------------------------------------------------------------------
]]--[[// Gestion du drone
]]--[[//-----------------------------------------------------------------------------
]]
    end,

--[[// *****************************************************************************
]]--[[// BEH_Conduite_Automate_RENS_ROIM_SDTI_GererMiseEnOeuvre
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Conduite_Automate_RENS_ROIM_DRAC_GererMiseEnOeuvre"
{
    feedbacks = { { { "done_BEH_Conduite_Automate_RENS_ROIM_DRAC_GererMiseEnOeuvre" }, "BEH_Conduite_Automate_RENS_ROIM_DRAC_GererMiseEnOeuvre" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Conduite_Automate_RENS_ROIM_DRAC_GererMiseEnOeuvre, {value} ) end,
    activations =
    {
        { "ACT_Info_Trace", { "done_ACT_Info_Trace" } },
        { "BEH_Conduite_Automate_RENS_ROIM_DRAC_LancerDrone", { "done_BEH_Conduite_Automate_RENS_ROIM_DRAC_LancerDrone" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        self.bLancementEffectue = self.bLancementEffectue or false
        local pionDrone = S_Dispositif_Automate_RENS_ObtenirPionDroneMiseEnOeuvre( "Drone_SDTI" )
        --[[//-----------------------------------------------------------------------------
]]--[[// Si pas de drone disponible, attendre
]]--[[//-----------------------------------------------------------------------------
]]if( pionDrone == nil ) then
            do
                Activate( self.activations.ACT_Info_Trace, 1, { "---- En attente de DRAC disponible -----", } )
                                do return end

            end
--[[//-----------------------------------------------------------------------------
]]--[[// Lancer un seul drone
]]--[[//-----------------------------------------------------------------------------
]]        end

        if( not self.bLancementEffectue ) then
            do
                StartActivateOverride( self, self.activations.BEH_Conduite_Automate_RENS_ROIM_DRAC_LancerDrone, 1, { pionDrone, } )
                self.bLancementEffectue = true
            end
        end

    end,

--[[// *****************************************************************************
]]--[[// BEH_Conduite_Automate_RENS_ROIM_SDTI_LancerDrone
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Conduite_Automate_RENS_ROIM_DRAC_LancerDrone"
{
    feedbacks = { { { "done_BEH_Conduite_Automate_RENS_ROIM_DRAC_LancerDrone" }, "BEH_Conduite_Automate_RENS_ROIM_DRAC_LancerDrone" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Conduite_Automate_RENS_ROIM_DRAC_LancerDrone, {value} ) end,
    activations =
    {
        { "ACT_RC_Automate", { "done_ACT_RC_Automate" } },
        { "BEH_Mission_Automate_RENS_ROIM_SDTI_AssignerRenseignerSur", { "done_BEH_Mission_Automate_RENS_ROIM_SDTI_AssignerRenseignerSur" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.pionDrone = self.params[1]
    end,

    activate = function( self )
        local Activate = Activate
        --[[//-----------------------------------------------------------------------------
]]--[[// Assigner mission au drone
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                Activate( self.activations.ACT_RC_Automate, 1, { eRC_DroneLance, } )
                local mission = DEC_GetMission( myself )
                Activate( self.activations.BEH_Mission_Automate_RENS_ROIM_SDTI_AssignerRenseignerSur, 1, { ePhase_CDT, self._namedParams.pionDrone, mission.ficelleDeVole_, eEtatEchelon_Premier, } )
            end
        end

    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Automate_CDT_RENS_ROIM_SDTI_RenseignerSur = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_RENS_ROIM_DRAC_GererMiseEnOeuvre, "ACT_Info_Trace", nodes.ACT_Info_Trace }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_RENS_ROIM_DRAC_GererMiseEnOeuvre, "BEH_Conduite_Automate_RENS_ROIM_DRAC_LancerDrone", nodes.BEH_Conduite_Automate_RENS_ROIM_DRAC_LancerDrone }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_RENS_ROIM_DRAC_LancerDrone, "ACT_RC_Automate", nodes.ACT_RC_Automate }
connections[ #connections + 1 ] = { nodes.BEH_Conduite_Automate_RENS_ROIM_DRAC_LancerDrone, "BEH_Mission_Automate_RENS_ROIM_SDTI_AssignerRenseignerSur", nodes.BEH_Mission_Automate_RENS_ROIM_SDTI_AssignerRenseignerSur }
connections[ #connections + 1 ] = { nodes.MIS_Automate_CDT_RENS_ROIM_SDTI_RenseignerSur, "BEH_Dispositif_Automate_RENS_GererPionsDetruits_", nodes.BEH_Dispositif_Automate_RENS_GererPionsDetruits_ }
connections[ #connections + 1 ] = { nodes.MIS_Automate_CDT_RENS_ROIM_SDTI_RenseignerSur, "BEH_Conduite_Automate_RENS_ROIM_DRAC_GererMiseEnOeuvre", nodes.BEH_Conduite_Automate_RENS_ROIM_DRAC_GererMiseEnOeuvre }
