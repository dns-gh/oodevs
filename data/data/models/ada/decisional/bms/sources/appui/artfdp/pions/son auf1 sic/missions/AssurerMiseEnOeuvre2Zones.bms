includedFiles = includedFiles or {}
includedFiles["sources/appui/artfdp/pions/son auf1 sic/missions/AssurerMiseEnOeuvre2Zones.bms"] = true

--[[// *****************************************************************************
]]--[[/** \file S VAB - Actions.hal
 *
 * $Author: Ggr $
 * $Modtime: 19/09/05 10:12 $
 * $Revision: 16 $
 *
 */]]--[[// Created: JCR 03-02-13
]]--[[// *****************************************************************************
]]--[[//------------------------------------------------------------------------------
]]--[[//Rejoins une position et cree un site de deploiement
]]--[[//------------------------------------------------------------------------------
]]
--[[//behavior MIS_Pion_ASS_AssurerMiseEnOeuvre( T_Mission_Pion_ASS_AssurerMiseEnOeuvre2Zones mission, id blurp )
]]
node "MIS_Pion_ASS_AssurerMiseEnOeuvre2Zones"
{
    activations =
    {
        { "BEH_Ordre_Inopine", {} },
        { "BEH_Pion_ASS_GererOrdre_AppliquerFeux_SIC", {} },
        { "BEH_Info_Pion_ASS_GererDisponibiliteAuTir", {} },
        { "BEH_Pion_ASS_AssurerMiseEnOeuvre_Mission", {} },
        { "ACT_MAJ_EtatPhaseMission", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
                self.ePhase = self.ePhase or eMettreEnOeuvre
        if( ModuleBegins() ) then
            do
                DEC_SetMission( myself, self._namedParams.mission )
                F_Pion_SeteEtatAmbiance( myself, eEtatAmbiance_Vitesse )
                --[[// Prise en charge de l'ordre d'application des feux
]]F_Pion_SeteEtatEchelon( myself, eEtatEchelon_Premier )
                --[[//---------------------------------------------------------------------
]]DEC_Trace( "Reception mission 'AssurerMiseEnOeuvre'" )
            end
        end

        self.eEtatOrdreFinMission = self.eEtatOrdreFinMission or eActionEnCours
        Activate( self.activations.BEH_Ordre_Inopine, 1, setmetatable( {}, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eEtatOrdreFinMission = v else rawset( t, k, v ) end end } ) )
        if( self.eEtatOrdreFinMission == eActionHalt ) then
            do
                self.ePhase = eFinMission
                self.eEtatOrdreFinMission = eActionEnCours
            end
--[[// Gere la disponibilite aux feux
]]--[[//---------------------------------------------------------------------
]]        end

        Activate( self.activations.BEH_Pion_ASS_GererOrdre_AppliquerFeux_SIC, 1, { true, self._namedParams.mission.zoneImplantation2_, } )
        --[[// Mission 
]]Activate( self.activations.BEH_Info_Pion_ASS_GererDisponibiliteAuTir, 1, { true, } )
         do
            local _continue = true
            local switch_1 = --[[//---------------------------------------------------------------------
]]self.ePhase
            local cases_switch_1 = {}
                if switch_1 == eMettreEnOeuvre then
                    Activate( self.activations.BEH_Pion_ASS_AssurerMiseEnOeuvre_Mission, GetMotivation( "MOT_Mission" ), { M_DELAI_PREPARATION_RECO_AUF1(), } )
                    _continue = false
                                cases_switch_1[1] = true
elseif switch_1 == eFinMission then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_FinMission, } )
                    if( F_Pion_GeteEtatPhaseMission( myself ) == eEtatPhaseMission_FinMission ) then
                        do
                            DEC_FinMission()
                                                        self.params.__returnValue = eActionEffectuee
                            Halt( self )
                            do return end

                        end
                    end

                    _continue = false
                                cases_switch_1[2] = true
                end
            end

    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Pion_ASS_AssurerMiseEnOeuvre2Zones = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.MIS_Pion_ASS_AssurerMiseEnOeuvre2Zones, "BEH_Ordre_Inopine", nodes.BEH_Ordre_Inopine }
connections[ #connections + 1 ] = { nodes.MIS_Pion_ASS_AssurerMiseEnOeuvre2Zones, "BEH_Pion_ASS_GererOrdre_AppliquerFeux_SIC", nodes.BEH_Pion_ASS_GererOrdre_AppliquerFeux_SIC }
connections[ #connections + 1 ] = { nodes.MIS_Pion_ASS_AssurerMiseEnOeuvre2Zones, "BEH_Info_Pion_ASS_GererDisponibiliteAuTir", nodes.BEH_Info_Pion_ASS_GererDisponibiliteAuTir }
connections[ #connections + 1 ] = { nodes.MIS_Pion_ASS_AssurerMiseEnOeuvre2Zones, "BEH_Pion_ASS_AssurerMiseEnOeuvre_Mission", nodes.BEH_Pion_ASS_AssurerMiseEnOeuvre_Mission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_ASS_AssurerMiseEnOeuvre2Zones, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
