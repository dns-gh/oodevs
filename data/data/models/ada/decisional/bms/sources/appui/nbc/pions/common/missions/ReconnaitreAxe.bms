includedFiles = includedFiles or {}
includedFiles["sources/appui/nbc/pions/common/missions/ReconnaitreAxe.bms"] = true

--[[// *****************************************************************************
]]--[[// BEH_Mission_Pion_NBC_ReconnaitreAxe
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]node "BEH_Mission_Pion_NBC_ReconnaitreAxe"
{
    activations =
    {
        { "BEH_Ordre_Inopine", {} },
        { "ACT_MAJ_EtatPhaseMission", {} },
        { "ACT_Info_Trace", {} },
        { "BEH_Nbc_Pion_FaireDesMesures", {} },
        { "BEH_Dep_ProgressionSur", {} },
        { "BEH_Dep_SePosterFaceADirectionDangereuse", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params[1]
    end,

    activate = function( self )
        self.eEtat = self.eEtat or eActionEnCours
        self.ePhaseMission = self.ePhaseMission or ePreparerMission
        self.eEtatOrdreFinMission = self.eEtatOrdreFinMission or eActionEnCours
        Activate( self.activations.BEH_Ordre_Inopine, 1, setmetatable( {}, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eEtatOrdreFinMission = v else rawset( t, k, v ) end end } ) )
        if( self.eEtatOrdreFinMission == eActionHalt ) then
            do
                self.ePhaseMission = eFinMission
                self.eEtat = eActionEnCours
                self.eEtatOrdreFinMission = eActionEnCours
            end
--[[//-----------------------------------------------------------------------------
]]--[[// Pion detruit
]]--[[//-----------------------------------------------------------------------------
]]        end

        if( F_Pion_GeteEtatDestruction( myself ) ~= eEtatDestruction_None ) then
            self.params.__returnValue = eActionEffectuee
            self.deselect = function() end
            self.destroy = function() end
            Halt()
        end

        --[[//-----------------------------------------------------------------------------
]]--[[// Ambiance
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                SetStateVariable( "VE_NiveauNBC", 4 )
                F_Pion_SeteEtatAmbiance( myself, eEtatAmbiance_Vitesse )
            end
        end

         do
            local switch_1 = self.ePhaseMission
            local cases_switch_1 = {}
                if switch_1 == ePreparerMission then
                    --[[// 1) Prepa
]]Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_DebutMission, } )
                    Activate( self.activations.ACT_Info_Trace, 1, { "Route reconnaissance mission begining", } )
                    self.ePhaseMission = eProgresser
                    
                --[[// 2) Progression tactique
]]                cases_switch_1[1] = true
elseif switch_1 == eProgresser then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_ProgressionSurAxe, } )
                    --[[//---------------------------------------------------------------------
]]--[[// Faire des mesures
]]--[[//---------------------------------------------------------------------
]]--[[// Poste pour mesure donc en comptète avec deplacement
]]Activate( self.activations.BEH_Nbc_Pion_FaireDesMesures, 1.1, {} )
                    --[[//---------------------------------------------------------------------
]]--[[// Deplacement
]]--[[//---------------------------------------------------------------------
]]if( self.eEtat == eActionEffectuee ) then
                        do
                            self.eEtat = eActionEnCours
                                                        do
                                self.ePhaseMission = eFinMission
                                                                return

                            end

                        end
--[[// force de 1.
]]                    end

                    Activate( self.activations.BEH_Dep_ProgressionSur, 1, setmetatable( { self._namedParams.mission.itineraire_, eProgressionReco, eTypeItiMouvement, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eEtat = v else rawset( t, k, v ) end end } ) )
                    
                --[[// 4) Fin de la mission de reconnaissance
]]elseif switch_1 == eFinMission then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_FinMission, } )
                    Activate( self.activations.BEH_Dep_SePosterFaceADirectionDangereuse, 1, {} )
                    
                                cases_switch_1[3] = true

                else
                                end
            end

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_NBC_ReconnaitreAxe, "BEH_Ordre_Inopine", nodes.BEH_Ordre_Inopine }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_NBC_ReconnaitreAxe, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_NBC_ReconnaitreAxe, "ACT_Info_Trace", nodes.ACT_Info_Trace }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_NBC_ReconnaitreAxe, "BEH_Nbc_Pion_FaireDesMesures", nodes.BEH_Nbc_Pion_FaireDesMesures }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_NBC_ReconnaitreAxe, "BEH_Dep_ProgressionSur", nodes.BEH_Dep_ProgressionSur }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_NBC_ReconnaitreAxe, "BEH_Dep_SePosterFaceADirectionDangereuse", nodes.BEH_Dep_SePosterFaceADirectionDangereuse }
