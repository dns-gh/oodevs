includedFiles = includedFiles or {}
includedFiles["sources/appui/trans/automates/actions/Actions - Medo.bms"] = true

--[[// ****************************************************************************
]]--[[// ACT_Mission_Automate_ControleCreation_EnCours
]]--[[//
]]--[[// Commentaires: A utiliser par l'ABC et l'INF
]]--[[//
]]--[[// *****************************************************************************
]]--[[// ****************************************************************************
]]--[[// AssignerEtablirGererLiaisonA
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// ****************************************************************************
]]node "ACT_Mission_Automate_TRANS_AssignerEtablirGererLiaisonA"
{
    feedbacks = { { { "done_ACT_Mission_Automate_TRANS_AssignerEtablirGererLiaisonA" }, "ACT_Mission_Automate_TRANS_AssignerEtablirGererLiaisonA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_ACT_Mission_Automate_TRANS_AssignerEtablirGererLiaisonA, {value} ) end,
    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pion = self.params[2]
        self._namedParams.pt = self.params[3]
    end,

    select = function( self )
        self.missionPion = self.missionPion or nil--[[//-------------------------------------------------------------------------
]]--[[// Cree la myself.mission_
]]--[[//-------------------------------------------------------------------------
]]
        if( ModuleBegins() ) then
            do
                 do
                    local _continue = true
                    local switch_1 = self._namedParams.ePhase
                        if switch_1 == ePhase_MRT then
                                                    local misMRT = DEC_MRT_CreerMissionPion( self._namedParams.pion, "T_Mission_Pion_TRANS_EtablirGererLiaison" )
                            self.missionPion = misMRT
                            _continue = false
                        elseif switch_1 == ePhase_CDT then
                                                    local misCDT = DEC_CDT_CreerMissionPion( self._namedParams.pion, "T_Mission_Pion_TRANS_EtablirGererLiaison" )
                            self.missionPion = misCDT
                            _continue = false
                        
                        else
                            assert( false, "parametre invalide : ePhase" )
                        end
                    end

            end
        end

        if( self.missionPion == nil ) then
            self:SendFeedback( eActionImpossible )
            do return end
        end

        --[[//-------------------------------------------------------------------------
]]S_Misc_Copie_MissionPion_Mission( DEC_GetMission( myself ), self.missionPion )
        F_Pion_SeteEtatPhaseMission( self._namedParams.pion, eEtatPhaseMission_EnAttenteDeMission )
        DEC_Copie_Point_Mission( self._namedParams.pt, self.missionPion, "positionDeploiement_" )
        --[[// Echelon
]]F_Pion_SeteEtatEchelon( self._namedParams.pion, eEtatEchelon_Premier )
        --[[//-------------------------------------------------------------------------
]]--[[// Envoie la myself.mission_ si l'on se trouve dans la conduite
]]--[[//-------------------------------------------------------------------------
]]if( self._namedParams.ePhase == ePhase_CDT ) then
            DEC_CDT_DonnerMissionPion_Mission( self.missionPion )
        end

                self:SendFeedback( eActionEffectuee )
        do return end

    end,

}

--[[//-------------------------------------------------------------------------
]]