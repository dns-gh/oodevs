includedFiles = includedFiles or {}
includedFiles["sources/appui/trans/automates/missions/commander/Commander - MRT.bms"] = true

--[[// *****************************************************************************
]]--[[// MIS_Automate_MRT_TRANS_Commander
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]node "MIS_Automate_MRT_TRANS_Commander"
{
    activations =
    {
        { "BEH_Medo_Automate_ControleCreationMission", {} },
        { "BEH_Mission_Automate_TRANS_AssignerEtablirGererLiaisonAListe", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        local selPions = S_Cherche_Automate_PionsOperationnels( DEC_Automate_PionsAvecPC() )
        self.ePhase = self.ePhase or eMRT_AssignerMissions
        self.eEtatMissionCommander = self.eEtatMissionCommander or eActionEnCours
        self.ptDest = self.ptDest or S_Geometrie_BarycentreZone( self._namedParams.mission.zoneDeploiement_ )
        --[[//---------------------------------------------------------------------
]]--[[// Init
]]--[[//---------------------------------------------------------------------
]]if( ModuleBegins() ) then
            DEC_SetMission( myself, self._namedParams.mission )
        end

         do
            local _continue = true
            local switch_1 = self.ePhase
            local cases_switch_1 = {}
                if switch_1 == eMRT_AssignerMissions then
                    --[[// GESTION DES ERREURS / CONTROLE VALIDITE MRT
]]if( self.eEtatMissionCommander == eActionImpossible ) then
                        do
                            self.ePhase = eMRT_MissionImpossible
                                                        do return end

                        end
                    end

                    if( self.eEtatMissionCommander == eActionEffectuee ) then
                        do
                            self.ePhase = eMRT_Valider
                                                        do return end

                        end
--[[// controle de creation mission
]]                    end

                    Activate( self.activations.BEH_Medo_Automate_ControleCreationMission, 1, setmetatable( { #( selPions ), }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eEtatMissionCommander = v else rawset( t, k, v ) end end } ) )
                    --[[// ordre de creation des missions
]]if( ( #( selPions ) ~= 0 and #( selPions ) ~= nil ) ) then
                        Activate( self.activations.BEH_Mission_Automate_TRANS_AssignerEtablirGererLiaisonAListe, 1, { ePhase_MRT, selPions, self.ptDest, } )
                    end

                    _continue = false
                                cases_switch_1[1] = true
elseif switch_1 == eMRT_MissionImpossible then
                    --[[//DEC_RC( eRC_MissionImpossible );
]]                    self.params.__returnValue = eActionImpossible
                    Halt( self )
                    do return end

                    _continue = false
                elseif switch_1 == eMRT_Valider then
                    DEC_MRT_Valide()
                                        self.params.__returnValue = eActionEffectuee
                    Halt( self )
                    do return end

                    _continue = false
                
                else
                                end
            end

    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Automate_MRT_TRANS_Commander = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.MIS_Automate_MRT_TRANS_Commander, "BEH_Medo_Automate_ControleCreationMission", nodes.BEH_Medo_Automate_ControleCreationMission }
connections[ #connections + 1 ] = { nodes.MIS_Automate_MRT_TRANS_Commander, "BEH_Mission_Automate_TRANS_AssignerEtablirGererLiaisonAListe", nodes.BEH_Mission_Automate_TRANS_AssignerEtablirGererLiaisonAListe }
