includedFiles = includedFiles or {}
includedFiles["sources/appui/nbc/pions/common/Behaviors - Dep.bms"] = true

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: MIA 03-04-29 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Appui/Nbc/Pions/Common/Behaviors - Dep.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 25/08/05 17:45 $
]]--[[// $Revision: 16 $
]]--[[// $Workfile: Behaviors - Dep.hal $
]]--[[//
]]--[[// *****************************************************************************
]]


--[[//=============================================================================
]]--[[// behavior BEH_Lima_Pion_NBC_SePosterSurLCA                   
]]--[[// behavior BEH_Lima_Pion_NBC_SePosterSurLC                    
]]--[[//
]]--[[// behavior BEH_Obs_Pion_NBC_ReconnaitrePoint                 
]]--[[// behavior BEH_Obs_Pion_NBC_SePosterSurBond                              
]]--[[//
]]--[[//=============================================================================
]]


--[[// ******************************************************************************
]]--[[// BEH_Lima_Pion_NBC_SePosterSurLCA
]]--[[// 
]]--[[// Commentaires: se poster sur une ligne de changement d'attitude pendant un 
]]--[[//               deplacement.
]]--[[//				 Toujours face à une direction dangereuse: celle de la mission
]]--[[//               inclus un changement de dispositif --> vers dispositif de surete
]]--[[// ******************************************************************************
]]node "BEH_Lima_Pion_NBC_SePosterSurLCA"
{
    activations =
    {
        { "ACT_Dep_PasserSurLima", { "onHalt" } },
        { "BEH_Dep_SePoster", { "onHalt" } },
        { "ACT_Obs_EtablirVisionCur", { "onHalt" } },
    },

    onHalt = OnHalt,

    feedbacks = { { { "onHalt" }, "BEH_Lima_Pion_NBC_SePosterSurLCA" } },

    create = function( self )
    end,

    activate = function( self )
        --[[// init
]]self.eEtat = self.eEtat or eActionEnCours
        --[[//-----------------------------------------------------------------------------
]]--[[// Terminaison
]]--[[//-----------------------------------------------------------------------------
]]if( DEC_Agent_NiveauInstallation() == eNiveauInstallation_PosteReflexe ) then
            self.params.__returnValue = eActionEffectuee
            Feedback( self.feedbacks["onHalt"], { "BEH_Lima_Pion_NBC_SePosterSurLCA" } )
Halt( self )
            do return end
        end

        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            DEC_Trace( "En poste sur LCA" )
        end

        --[[//-----------------------------------------------------------------------------
]]--[[// Etat du pion
]]--[[//-----------------------------------------------------------------------------
]]Activate( self.activations.ACT_Dep_PasserSurLima, 1, { eEtatLima_LCA, } )
        Activate( self.activations.BEH_Dep_SePoster, 1, {} )--[[//-----------------------------------------------------------------------------
]]--[[// Posture
]]--[[//-----------------------------------------------------------------------------
]]
        Activate( self.activations.ACT_Obs_EtablirVisionCur, 1, {} )
        --[[//-----------------------------------------------------------------------------
]]--[[// Passer en alerte de niveau 4
]]--[[//-----------------------------------------------------------------------------
]]SetStateVariable( "VE_NiveauNBC", 4 )
    end,

--[[// ******************************************************************************
]]--[[// BEH_Obs_Pion_NBC_ReconnaitrePoint
]]--[[// 
]]--[[// Commentaires: 
]]--[[//
]]--[[// ******************************************************************************
]]}

node "BEH_Obs_Pion_NBC_ReconnaitrePoint"
{
    activations =
    {
        { "ACT_Obs_ReconnaitrePoint", { "onHalt" } },
        { "ACT_Obs_EtablirVisionVersPt", { "onHalt" } },
    },

    onHalt = OnHalt,

    feedbacks = { { { "onHalt" }, "BEH_Obs_Pion_NBC_ReconnaitrePoint" } },

    create = function( self )
        self._namedParams = {}
        self._namedParams.repPoint = self.params[1]
    end,

    activate = function( self )
        self.point = self.point or DEC_Geometrie_CreerPoint()
        self.eEtat = self.eEtat or eActionEnCours
        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            --[[// Rep_Point
]]DEC_Copie_Point( DEC_GetRepPoint( self._namedParams.repPoint ), self.point )
        end

        if( self.eEtat == eActionEffectuee ) then
            do
                self.eEtat = eActionEnCours
                                do
                    DEC_Trace( "Fin reconnaissance point" )
                                        self.params.__returnValue = eActionEffectuee
                    Feedback( self.feedbacks["onHalt"], { "BEH_Obs_Pion_NBC_ReconnaitrePoint" } )
Halt( self )
                    do return end

                end

            end
--[[//-----------------------------------------------------------------------------
]]--[[// reco
]]--[[//-----------------------------------------------------------------------------
]]        end

        Activate( self.activations.ACT_Obs_ReconnaitrePoint, 1, setmetatable( { self.point, }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eEtat = v else rawset( t, k, v ) end end } ) )
        Activate( self.activations.ACT_Obs_EtablirVisionVersPt, 1, { self.point, } )
    end,

--[[// ******************************************************************************
]]--[[// BEH_Obs_Pion_NBC_SePosterSurBond
]]--[[// 
]]--[[// Commentaires: se poster sur une limite de bond pendant un deplacement.
]]--[[//				 Toujours face à une direction dangereuse: celle de la mission. 
]]--[[//
]]--[[// ******************************************************************************
]]}

node "BEH_Obs_Pion_NBC_SePosterSurBond"
{
    activations =
    {
        { "ACT_Info_Trace", { "onHalt" } },
        { "ACT_Dep_SePoster", { "onHalt" } },
    },

    onHalt = OnHalt,

    feedbacks = { { { "onHalt" }, "BEH_Obs_Pion_NBC_SePosterSurBond" } },

    create = function( self )
        self._namedParams = {}
        self._namedParams.repBond = self.params[1]
    end,

    activate = function( self )
        self.point = self.point or DEC_Geometrie_CreerPoint()
        self.eEtat = self.eEtat or eActionEnCours
        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                Activate( self.activations.ACT_Info_Trace, 1, { "Posted on observation position", } )
                DEC_Copie_Point( DEC_GetRepPoint( self._namedParams.repBond ), self.point )
            end
--[[//-----------------------------------------------------------------------------
]]--[[// En fonction de l'ambiance
]]--[[//-----------------------------------------------------------------------------
]]        end

        if( F_Pion_GeteEtatAmbiance( myself ) == eEtatAmbiance_Vitesse ) then
            do
                if( DEC_Agent_NiveauInstallation() >= eNiveauInstallation_Arret ) then
                    self.params.__returnValue = eActionEffectuee
                    Feedback( self.feedbacks["onHalt"], { "BEH_Obs_Pion_NBC_SePosterSurBond" } )
Halt( self )
                    do return end
                end

            end
--[[// ambiance surete ou eni
]]        else
do
                if( DEC_Agent_NiveauInstallation() >= eNiveauInstallation_PosteReflexe ) then
                    self.params.__returnValue = eActionEffectuee
                    Feedback( self.feedbacks["onHalt"], { "BEH_Obs_Pion_NBC_SePosterSurBond" } )
Halt( self )
                    do return end
                end

            end
--[[//-----------------------------------------------------------------------------
]]--[[// Posture / vision / delai
]]--[[//-----------------------------------------------------------------------------
]]        end

        Activate( self.activations.ACT_Dep_SePoster, 1, {} )
    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Lima_Pion_NBC_SePosterSurLCA, "ACT_Dep_PasserSurLima", nodes.ACT_Dep_PasserSurLima }
connections[ #connections + 1 ] = { nodes.BEH_Lima_Pion_NBC_SePosterSurLCA, "BEH_Dep_SePoster", nodes.BEH_Dep_SePoster }
connections[ #connections + 1 ] = { nodes.BEH_Lima_Pion_NBC_SePosterSurLCA, "ACT_Obs_EtablirVisionCur", nodes.ACT_Obs_EtablirVisionCur }
connections[ #connections + 1 ] = { nodes.BEH_Obs_Pion_NBC_ReconnaitrePoint, "ACT_Obs_ReconnaitrePoint", nodes.ACT_Obs_ReconnaitrePoint }
connections[ #connections + 1 ] = { nodes.BEH_Obs_Pion_NBC_ReconnaitrePoint, "ACT_Obs_EtablirVisionVersPt", nodes.ACT_Obs_EtablirVisionVersPt }
connections[ #connections + 1 ] = { nodes.BEH_Obs_Pion_NBC_SePosterSurBond, "ACT_Info_Trace", nodes.ACT_Info_Trace }
connections[ #connections + 1 ] = { nodes.BEH_Obs_Pion_NBC_SePosterSurBond, "ACT_Dep_SePoster", nodes.ACT_Dep_SePoster }
