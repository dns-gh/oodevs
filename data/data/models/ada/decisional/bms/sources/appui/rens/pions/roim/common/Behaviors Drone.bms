includedFiles = includedFiles or {}
includedFiles["sources/appui/rens/pions/roim/common/Behaviors Drone.bms"] = true


--[[// *****************************************************************************
]]--[[// BEH_Dep_Pion_Rens_VolerSur
]]--[[//
]]--[[// Commentaires : Revenir si manque de carburants
]]--[[//
]]--[[// *****************************************************************************
]]node "BEH_Dep_Pion_Rens_GererRetour"
{
    feedbacks = { { { "done_BEH_Dep_Pion_Rens_GererRetour" }, "BEH_Dep_Pion_Rens_GererRetour" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Dep_Pion_Rens_GererRetour, {value} ) end,
    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
    end,

--[[// A FAIRE
]]--[[// A faire avec fonction Temps de vol restant
]]--[[// *****************************************************************************
]]--[[// ACT_Dep_Pion_RENS_VolerA
]]--[[//
]]--[[// Commentaires : Un drone vole seulement si il est mise en oeuvre
]]--[[//
]]--[[// *****************************************************************************
]]}

node "ACT_Dep_Pion_RENS_VolerA"
{
    feedbacks = { { { "done_ACT_Dep_Pion_RENS_VolerA" }, "ACT_Dep_Pion_RENS_VolerA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_ACT_Dep_Pion_RENS_VolerA, {value} ) end,
    create = function( self )
        self._namedParams = {}
        self._namedParams.hauteur = self.params[1]
    end,

    select = function( self )
                if( ModuleBegins() ) then
            DEC_Agent_HauteurDeVol( self._namedParams.hauteur )
        end

    end,

    deselect = function( self )
            end,

    destroy = function( self )
                DEC_Agent_HauteurDeVol( 0 )
    end,

}

--[[// *****************************************************************************
]]--[[// ACT_Obs_Pion_RENS_ActiverCamera
]]--[[//
]]--[[// Commentaires : 
]]--[[//
]]--[[// *****************************************************************************
]]node "ACT_Obs_Pion_RENS_ActiverCamera"
{
    feedbacks = { { { "done_ACT_Obs_Pion_RENS_ActiverCamera" }, "ACT_Obs_Pion_RENS_ActiverCamera" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_ACT_Obs_Pion_RENS_ActiverCamera, {value} ) end,
    create = function( self )
    end,

    select = function( self )
                if( ModuleBegins() ) then
            DEC_Perception_ActiverSenseurs()
        end

    end,

    deselect = function( self )
            end,

    destroy = function( self )
                DEC_Perception_DesactiverSenseurs()
    end,

}

--[[// *****************************************************************************
]]--[[// BEH_Info_Pion_Rens_Disponibilite
]]--[[//
]]--[[// Commentaires : Revenir si manque de carburants
]]--[[//
]]--[[// *****************************************************************************
]]node "BEH_Info_Pion_Rens_Disponibilite"
{
    feedbacks = { { { "done_BEH_Info_Pion_Rens_Disponibilite" }, "BEH_Info_Pion_Rens_Disponibilite" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Info_Pion_Rens_Disponibilite, {value} ) end,
    activations =
    {
        { "ACT_RC", { "done_ACT_RC" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        if( myself.bMiseEnOeuvre_ ) then
            Activate( self.activations.ACT_RC, 1, { eRC_DroneDisponible, } )
        end

        if( myself.bEnExploitation_ ) then
            Activate( self.activations.ACT_RC, 1, { eRC_DroneEnExploitation, } )
        else
            Activate( self.activations.ACT_RC, 1, { eRC_DroneExploite, } )
        end

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Info_Pion_Rens_Disponibilite, "ACT_RC", nodes.ACT_RC }
