includedFiles = includedFiles or {}
includedFiles["sources/appui/rens/automates/common/Gestion deuxieme echelon.bms"] = true

include "bit.lua"


--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: MIA 04-02-24 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Appui/Rens/Automates/Common/Gestion deuxieme echelon.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 24/05/05 16:47 $
]]--[[// $Revision: 5 $
]]--[[// $Workfile: Gestion deuxieme echelon.hal $
]]--[[//
]]--[[// *****************************************************************************
]]
--[[/* --- Gestion dynamique du deuxieme echelon ---*/]]
--[[// behavior BEH_Dispositif_Automate_RENS_GererLeSE_
]]
--[[// *****************************************************************************
]]--[[// BEH_Dispositif_Automate_RENS_GererLeSE_
]]--[[//
]]--[[// Commentaires: 
]]--[[//
]]--[[// *****************************************************************************
]]node "BEH_Dispositif_Automate_RENS_GererLeSE_"
{
    activations =
    {
        { "BEH_Mission_Automate_AssignerSuivreA", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        local rIterateurPionASuivre = 0
        --[[// Ces listes peuvent évoluer...en fonction des destructions
]]--[[// SMO et drone
]]local sel_PE = S_ObtenirPionsDe( eEtatEchelon_Premier, eEtatDestruction_None )
        local sel_SE = S_ObtenirTousPionsDe( eEtatEchelon_Second )
        --[[//-----------------------------------------------------------------------------
]]--[[// Assignation des missions
]]--[[//-----------------------------------------------------------------------------
]]if( DIA_IsListEmpty( sel_PE ) or DIA_IsListEmpty( sel_SE ) ) then
            do return end
        end

        for _,x in pairs( sel_SE or {} ) do
        local _continue = true
do
                local pion = x
                local pionPE = DIA_GetAt( sel_PE, rIterateurPionASuivre )
                Activate( self.activations.BEH_Mission_Automate_AssignerSuivreA, 1, { ePhase_CDT, pion, pionPE, } )
                                rIterateurPionASuivre = rIterateurPionASuivre + 1
                if( rIterateurPionASuivre >= #( sel_PE ) ) then
                    --[[// revenir au premier élément de la liste de PE
]]rIterateurPionASuivre = 0
                end

            end

        end

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Dispositif_Automate_RENS_GererLeSE_, "BEH_Mission_Automate_AssignerSuivreA", nodes.BEH_Mission_Automate_AssignerSuivreA }
