includedFiles = includedFiles or {}
includedFiles["sources/appui/artdsa/pions/samp hawk/behaviors/Behaviors - Eni.bms"] = true

--[[// -----------------------------------------------------------------------------
]]--[[// Gestion de l'interception balystique pour la section HAWK
]]--[[// -----------------------------------------------------------------------------
]]node "BEH_Eni_Pion_ASA_HAWK_InterceptionBalistique"
{
    instances =
    {
        boost = 1.0001,
    },

    activations =
    {
        { "BEH_Eni_Pion_ASA_InterceptionBalistique_Direct", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ennemi = self.params[1]
        self._namedParams.niveauPerception = self.params[2]
        self._namedParams.pH = self.params[3]
        self._namedParams.vitesseProjectile = self.params[4]
        self._namedParams.sePosterEnAttendant = self.params[5]
        self._namedParams.pourcentageComposantes = self.params[6]
    end,

    activate = function( self )
        if( DEC_ConnaissanceAgent_EstMort( self._namedParams.ennemi ) ) then
            self.params.__returnValue = eActionEffectuee
            Halt( self )
            do return end
        end

        local distance = DEC_Geometrie_Distance( myself:DEC_Agent_Position(), DEC_ConnaissanceAgent_Position( self._namedParams.ennemi ) )
        Activate( self.activations.BEH_Eni_Pion_ASA_InterceptionBalistique_Direct, 1, { self._namedParams.ennemi, self._namedParams.niveauPerception, self._namedParams.pourcentageComposantes, self._namedParams.pH, self._namedParams.vitesseProjectile, self._namedParams.sePosterEnAttendant, } )
    end,

--[[// -----------------------------------------------------------------------------
]]--[[// le tir se fait dans l'ordre de prioroté donné par l'automate
]]--[[// on ne tir jamais avec plus de deux pieces sur une unité
]]--[[// -----------------------------------------------------------------------------
]]}

node "BEH_Eni_GererDemandesDeTirsCentralisees"
{
    activations =
    {
        { "BEH_Eni_Pion_ASA_HAWK_InterceptionBalistique", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        --[[// variables locales
]]local nbComposanteesRestantes = M_MODELE_NOMBRE_UNITES_ENI_ENGAGEABLE_PAR_TIC()
        local nbComposantees = 0
        for _,eni in pairs( myself.listeEnisTirAutorise_ ) do
        local _continue = true
do
                if( DEC_ConnaissanceAgent_EstMort( eni ) ) then
                    _continue = false
                end

                    if _continue then
                    if( not S_ConnaissanceAgent_EstEnVol( eni ) ) then
                        _continue = false
                    end

                        if _continue then
                        nbComposantees = 1 / nbComposanteesRestantes
                                                nbComposanteesRestantes = nbComposanteesRestantes - 1
                        --[[//critere d'arret sur nb de prises a partie
]]if( ( nbComposanteesRestantes == 0 or nbComposanteesRestantes == nil ) ) then
                            return
                        end

                        --[[// comportement d'interception balistique du hawk
]]--[[// avec ordenancement par ordre de priorité
]]Activate( self.activations.BEH_Eni_Pion_ASA_HAWK_InterceptionBalistique, nbComposanteesRestantes, { eni, eReconnu, M_DOCTRINE_PION_ASA_PH(), M_MODELE_VITESSE_MISSILE_HAWK(), true, nbComposantees, } )
                    end
                end
            end

        end

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Eni_GererDemandesDeTirsCentralisees, "BEH_Eni_Pion_ASA_HAWK_InterceptionBalistique", nodes.BEH_Eni_Pion_ASA_HAWK_InterceptionBalistique }
connections[ #connections + 1 ] = { nodes.BEH_Eni_Pion_ASA_HAWK_InterceptionBalistique, "BEH_Eni_Pion_ASA_InterceptionBalistique_Direct", nodes.BEH_Eni_Pion_ASA_InterceptionBalistique_Direct }
