includedFiles = includedFiles or {}
includedFiles["sources/appui/artdsa/automates/sgpt satcp mistral/missions/defendre site/Defendre Site - CDT.bms"] = true

--[[// -----------------------------------------------------------------------------
]]--[[// Conduite de la mission Automate ASA Defendre Site
]]--[[// -----------------------------------------------------------------------------
]]node "MIS_Automate_CDT_ASA_MISTRAL_DefendreSite"
{
    feedbacks = { { { "done_MIS_Automate_CDT_ASA_MISTRAL_DefendreSite" }, "MIS_Automate_CDT_ASA_MISTRAL_DefendreSite" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_MIS_Automate_CDT_ASA_MISTRAL_DefendreSite, {value} ) end,
    activations =
    {
        { "BEH_Medo_Automate_ASA_MISTRAL_AssignerMissionsDefendreSiteAListe", { "done_BEH_Medo_Automate_ASA_MISTRAL_AssignerMissionsDefendreSiteAListe" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        local Activate = Activate
        self.pionPC = self.pionPC or DEC_Automate_PionPC()
        self.barycentreLocalisation = self.barycentreLocalisation or S_Geometrie_BarycentreZone( self._namedParams.mission.zone_ )
        self.pointDevantDispositif = self.pointDevantDispositif or DEC_Geometrie_PositionTranslateDir( self.barycentreLocalisation, DEC_GetDirectionEnnemi( self._namedParams.mission ), M_POLY_DOCTRINE_DISTANCE_MAX_ENTRE_SECTIONS() )
        self.listePositionsPourSectionsRestantes = self.listePositionsPourSectionsRestantes or DEC_Geometrie_CreerListePoints()
        self.selPions = self.selPions or {}
        self.listeDefendreSite = self.listeDefendreSite or {}
        self.listeSectionsRestantes = self.listeSectionsRestantes or {}
        self.selPions = {}
        self.selPions = DEC_Automate_PionsSansPC()
        self.listeDefendreSite = {}
        self.listeDefendreSite = S_Cherche_Automate_Filtre_TypeMission( self.selPions, "T_Mission_Pion_ASA_MISTRAL_DefendreSiteAPartirPosition" )
        self.listeSectionsRestantes = S_Cherche_Automate_Filtre_PionNonDansListe( self.selPions, self.listeDefendreSite )
        if( ModuleBegins() ) then
            do
                 do
                    local _continue = true
                    local switch_1 = self._namedParams.mission.modeDeploiement_
                        if switch_1 == deploiementNasseTroisSections
                        or switch_1 == deploiementNasseQuatreSections
                        or switch_1 == deploiementSimpleRideau
                        or switch_1 == deploiementDoubleRideau then
                                                    DEC_ListePoints_PushBack( self.listePositionsPourSectionsRestantes, self.barycentreLocalisation )
                            _continue = false
                        elseif switch_1 == deploiementOmnidirectionnelEnCarreAutourZone
                        or switch_1 == deploiementOmnidirectionnelEnTriangleAutourZone then
                                                    DEC_ListePoints_PushBack( self.listePositionsPourSectionsRestantes, self.pointDevantDispositif )
                            _continue = false
                                                end
                    end

            end
        end

        if( not DIA_IsListEmpty( self.listeSectionsRestantes ) ) then
            Activate( self.activations.BEH_Medo_Automate_ASA_MISTRAL_AssignerMissionsDefendreSiteAListe, 1, { ePhase_CDT, self.listeSectionsRestantes, self.listePositionsPourSectionsRestantes, self._namedParams.mission.zone_, eEtatDeploiement_omnidirectionnel, } )
        end

    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Automate_CDT_ASA_MISTRAL_DefendreSite = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.MIS_Automate_CDT_ASA_MISTRAL_DefendreSite, "BEH_Medo_Automate_ASA_MISTRAL_AssignerMissionsDefendreSiteAListe", nodes.BEH_Medo_Automate_ASA_MISTRAL_AssignerMissionsDefendreSiteAListe }
