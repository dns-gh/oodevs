includedFiles = includedFiles or {}
includedFiles["sources/appui/alat/automates/common/fonctions/Fonctions - Listes.bms"] = true

local emptyTable = emptyTable

include "bit.lua"

--[[// -------------------------------------------------------------------------
]]--[[// filtre liste pions qui sont en cours de ravitaillement
]]--[[// -------------------------------------------------------------------------
]]--[[// -------------------------------------------------------------------------
]]--[[// filtre liste pions non en cours de ravitaillement
]]--[[// -------------------------------------------------------------------------
]]--[[// -------------------------------------------------------------------------
]]--[[// filtre liste pions non opérarationnels
]]--[[// -------------------------------------------------------------------------
]]--[[// -------------------------------------------------------------------------
]]--[[// filtre liste pions non en cours d'extraction
]]--[[// -------------------------------------------------------------------------
]]--[[// -------------------------------------------------------------------------
]]--[[// filtre liste pions à appuyer
]]--[[// - non détruits physiquement
]]--[[// - qui sont de l'alat
]]--[[// -------------------------------------------------------------------------
]]--[[//if( patrouilleAlat.bEnPhaseRavitaillement_ )
]]--[[//    continue;
]]function S_Liste_Automate_ALAT_PionsEnCoursRavitaillement( listePions )
    local _returnValue = {}
    local patrouilleAlat = nil
    _returnValue = {}
    for _,x in pairs( listePions or emptyTable ) do
    local _continue = true
do
            if( not S_EstPatrouilleALAT( x ) ) then
                _continue = false
            end

                if _continue then
                patrouilleAlat = x
                if( patrouilleAlat:GetbEnPhaseRavitaillement_() ) then
                    DIA_PushBack( _returnValue, x )
                end

            end
        end

    end

    do return _returnValue end
end

function S_Liste_Automate_ALAT_PionsNonEnCoursRavitaillement( listePions )
    local _returnValue = {}
    local listeEnCoursRavitaillement = S_Liste_Automate_ALAT_PionsEnCoursRavitaillement( listePions )
    local patrouilleAlat = nil
    _returnValue = {}
    for _,x in pairs( listePions or emptyTable ) do
    local _continue = true
do
            if( S_EstPatrouilleALAT( x ) and not DIA_Contains( listeEnCoursRavitaillement, x ) ) then
                DIA_PushBack( _returnValue, x )
            end

        end

    end

    do return _returnValue end
end

function S_Liste_Automate_ALAT_PionsNonOperationnels( listePions )
    local _returnValue = {}
    local pionDEC = nil
    _returnValue = {}
    for _,x in pairs( listePions or emptyTable ) do
    local _continue = true
do
            pionDEC = x
            if( S_Pion_EstDetruitTactique( pionDEC ) ) then
                DIA_PushBack( _returnValue, x )
            end

        end

    end

    do return _returnValue end
end

function S_Liste_Automate_ALAT_PionsNonEnCoursExtraction( listePions )
    local _returnValue = {}
    local patrouilleALAT = nil
    _returnValue = {}
    for _,x in pairs( listePions or emptyTable ) do
    local _continue = true
do
            if( not S_EstPatrouilleALAT( x ) ) then
                _continue = false
            end

                if _continue then
                patrouilleALAT = x
                if( not patrouilleALAT:GetbEnCoursExtractionPersonnel_() ) then
                    DIA_PushBack( _returnValue, patrouilleALAT )
                end

            end
        end

    end

    do return _returnValue end
end

function S_Liste_Automate_ALAT_UnitesAAppuyer( listeUnites )
    local _returnValue = {}
    local patrouilleAlat = nil
    _returnValue = {}
    for _,x in pairs( listeUnites or emptyTable ) do
    local _continue = true
do
            if( S_Pion_EstDetruitPhysique( x ) ) then
                _continue = false
            end

                if _continue then
                if( not S_EstPatrouilleALAT( x ) ) then
                    _continue = false
                end

                    if _continue then
                    patrouilleAlat = x
                    DIA_PushBack( _returnValue, x )
                end
            end
        end

    end

    do return _returnValue end
end

