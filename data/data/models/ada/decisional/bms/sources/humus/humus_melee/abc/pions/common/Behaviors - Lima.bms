includedFiles = includedFiles or {}
includedFiles["sources/humus/humus_melee/abc/pions/common/Behaviors - Lima.bms"] = true

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JCR 03-02-20 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Inf/Pions/Common/Behaviors - Lima.hal $
]]--[[// $Author: Jcr $
]]--[[// $Modtime: 23/09/05 19:24 $
]]--[[// $Revision: 22 $
]]--[[// $Workfile: Behaviors - Lima.hal $
]]--[[//
]]--[[// *****************************************************************************
]]--[[// ******************************************************************************
]]--[[// BEH_Dep_Pion_ABC_SeCoordonnerAvec
]]--[[// 
]]--[[// Commentaires: utilisé par les missions de couverture
]]--[[//
]]--[[// 
]]--[[// ******************************************************************************
]]node "BEH_Dep_Pion_ABC_SeCoordonnerAvec"
{
    feedbacks = { { { "done_BEH_Dep_Pion_ABC_SeCoordonnerAvec" }, "BEH_Dep_Pion_ABC_SeCoordonnerAvec" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Dep_Pion_ABC_SeCoordonnerAvec, {value} ) end,
    activations =
    {
        { "ACT_Dep_ModulationVitesse", { "done_ACT_Dep_ModulationVitesse" } },
        { "ACT_Dep_SePoster", { "done_ACT_Dep_SePoster" } },
        { "ACT_Info_Trace", { "done_ACT_Info_Trace" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.listePions = self.params[1]
    end,

    activate = function( self )
        local Activate = Activate
        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            DEC_Trace( "<== Coordinnation active avec amis ==>" )
        end

        --[[// -----------------------------------------------------------------------------
]]--[[// Aller au plus vite si mission ou un deplacement 
]]--[[// -----------------------------------------------------------------------------
]]Activate( self.activations.ACT_Dep_ModulationVitesse, 1.5, { 1, } )
        --[[// -----------------------------------------------------------------------------
]]--[[// Cas ou aucun ami en paramètre (ex:si tous détruits)
]]--[[// -----------------------------------------------------------------------------
]]if( DIA_IsListEmpty( self._namedParams.listePions ) ) then
            do
                Activate( self.activations.ACT_Dep_SePoster, 1, {} )
                Activate( self.activations.ACT_Info_Trace, 1, { "<== Pas d'amis avec lesquels se coordonner ==>", } )
                                do return end

            end
--[[//-----------------------------------------------------------------------------
]]--[[// Se coordonner par rapport au centre de gravité des pions couvert
]]--[[//-----------------------------------------------------------------------------
]]        end

        local rDistance = DEC_Geometrie_CalculerDistanceLigneMoyenne( self._namedParams.listePions, myself )
        if( rDistance < M_MODELE_PION_ABC_DISTANCE_LIGNE_AMI_MIN() ) then
            do
                Activate( self.activations.ACT_Info_Trace, 1, { "<== L'unite se poste ==>", } )
                Activate( self.activations.ACT_Dep_SePoster, 1, {} )
            end
        end

    end,

--[[// ******************************************************************************
]]--[[// BEH_Lima_Pion_ABC_SePosterSurLCA
]]--[[// 
]]--[[// Commentaires: se poster sur une ligne de changement d'attitude pendant un 
]]--[[//               deplacement.
]]--[[//				 Toujours face à une direction dangereuse: celle de la mission
]]--[[//               inclus un changement de dispositif --> vers dispositif de surete
]]--[[// ******************************************************************************
]]}

node "BEH_Lima_Pion_ABC_SePosterSurLCA"
{
    feedbacks = { { { "done_BEH_Lima_Pion_ABC_SePosterSurLCA" }, "BEH_Lima_Pion_ABC_SePosterSurLCA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Lima_Pion_ABC_SePosterSurLCA, {value} ) end,
    activations =
    {
        { "ACT_Dep_PasserSurLima", { "done_ACT_Dep_PasserSurLima" } },
        { "BEH_Dep_SePoster", { "done_BEH_Dep_SePoster" } },
        { "ACT_Obs_EtablirVisionCur", { "done_ACT_Obs_EtablirVisionCur" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        --[[// init
]]self.eEtat = self.eEtat or eActionEnCours
        --[[//-----------------------------------------------------------------------------
]]--[[// Terminaison
]]--[[//-----------------------------------------------------------------------------
]]if( DEC_Agent_NiveauInstallation() == eNiveauInstallation_PosteReflexe ) then
            self:SendFeedback( eActionEffectuee )
            Halt( self )
            do return end
        end

        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            DEC_Trace( "En poste sur LCA" )
        end

        --[[//-----------------------------------------------------------------------------
]]--[[// MAJ Etat Lima
]]--[[//-----------------------------------------------------------------------------
]]Activate( self.activations.ACT_Dep_PasserSurLima, 1, { eEtatLima_LCA, } )
        Activate( self.activations.BEH_Dep_SePoster, 1, {} )--[[//-----------------------------------------------------------------------------
]]--[[// Posture
]]--[[//-----------------------------------------------------------------------------
]]
        Activate( self.activations.ACT_Obs_EtablirVisionCur, 1, {} )
    end,

--[[// ******************************************************************************
]]--[[// BEH_Lima_Pion_ABC_PasserSurLD
]]--[[// 
]]--[[// Commentaires: 
]]--[[//
]]--[[// ******************************************************************************
]]}

node "BEH_Lima_Pion_ABC_PasserSurLD"
{
    feedbacks = { { { "done_BEH_Lima_Pion_ABC_PasserSurLD" }, "BEH_Lima_Pion_ABC_PasserSurLD" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Lima_Pion_ABC_PasserSurLD, {value} ) end,
    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        --[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            DEC_Trace( "Passage sur LD" )
        end

    end,

--[[/*
//Nouvelle version BEH_Lima_Pion_ABC_PasserSurLD, utile pour semparer de normal
//Rajouter par LLS pour mission REZZOU et arrêt sur une ligne de débouché
// ******************************************************************************
// BEH_Lima_Pion_ABC_PasserSurLD
// 
// Commentaires: utilisé par ABC SemparerZone
// ******************************************************************************
behavior BEH_Lima_Pion_ABC_PasserSurLD() 
{
	when updated:
	{

		//-----------------------------------------------------------------------------
		// Init
		//-----------------------------------------------------------------------------
		if( DIA_ModuleBegins() )
		{
			S_Mot_Pion_AffecterEtat( VE_SePoster, 2 ); // apres le premier tick on aura envie de se poster
			action ACT_Dep_SePoster();
			return;
		}
		
		//-----------------------------------------------------------------------------
		// Condition de terminaison --> équivaut à "poursuivre"
		//-----------------------------------------------------------------------------
		if( DIA_GetInternalState( VE_SePoster ) == 0 )
			halt;

		//-----------------------------------------------------------------------------
		// MAJ Etat Lima
		//-----------------------------------------------------------------------------
		action ACT_Dep_PasserSurLima( eEtatLima_LD );
	}
	
	on spontaneous end:
	{
		S_Mot_Pion_AffecterEtat( VE_SePoster, 0 );
	}
}
*/]]--[[// ******************************************************************************
]]--[[// BEH_Lima_Pion_ABC_SePosterSurLCAR
]]--[[// 
]]--[[// Commentaires: utilisé par freiner
]]--[[// mettre des nouveaux context LCAR et nouveau type de RC
]]--[[// ******************************************************************************
]]--[[//-----------------------------------------------------------------------------
]]--[[// Init
]]--[[//-----------------------------------------------------------------------------
]]--[[// apres le premier tick on aura envie de se poster
]]--[[//-----------------------------------------------------------------------------
]]--[[// Condition de terminaison --> équivaut à "poursuivre"
]]--[[//-----------------------------------------------------------------------------
]]--[[//-----------------------------------------------------------------------------
]]--[[// MAJ Etat Lima
]]--[[//-----------------------------------------------------------------------------
]]}

node "BEH_Lima_Pion_ABC_SePosterSurLCAR"
{
    feedbacks = { { { "done_BEH_Lima_Pion_ABC_SePosterSurLCAR" }, "BEH_Lima_Pion_ABC_SePosterSurLCAR" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Lima_Pion_ABC_SePosterSurLCAR, {value} ) end,
    activations =
    {
        { "ACT_Dep_SePoster", { "done_ACT_Dep_SePoster" } },
        { "ACT_Dep_PasserSurLima", { "done_ACT_Dep_PasserSurLima" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
                if( ModuleBegins() ) then
            do
                SetStateVariable( "VE_SePoster", 2 )
                Activate( self.activations.ACT_Dep_SePoster, 1, {} )
                                do return end

            end
        end

        if( GetStateVariable( "VE_SePoster" ) == 0 ) then
            Halt( self )
            do return end
        end

        Activate( self.activations.ACT_Dep_PasserSurLima, 1, { eEtatLima_LCAR, } )
    end,

    destroy = function( self )
                SetStateVariable( "VE_SePoster", 0 )
    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Dep_Pion_ABC_SeCoordonnerAvec, "ACT_Dep_ModulationVitesse", nodes.ACT_Dep_ModulationVitesse }
connections[ #connections + 1 ] = { nodes.BEH_Dep_Pion_ABC_SeCoordonnerAvec, "ACT_Dep_SePoster", nodes.ACT_Dep_SePoster }
connections[ #connections + 1 ] = { nodes.BEH_Dep_Pion_ABC_SeCoordonnerAvec, "ACT_Info_Trace", nodes.ACT_Info_Trace }
connections[ #connections + 1 ] = { nodes.BEH_Lima_Pion_ABC_SePosterSurLCA, "ACT_Dep_PasserSurLima", nodes.ACT_Dep_PasserSurLima }
connections[ #connections + 1 ] = { nodes.BEH_Lima_Pion_ABC_SePosterSurLCA, "BEH_Dep_SePoster", nodes.BEH_Dep_SePoster }
connections[ #connections + 1 ] = { nodes.BEH_Lima_Pion_ABC_SePosterSurLCA, "ACT_Obs_EtablirVisionCur", nodes.ACT_Obs_EtablirVisionCur }
connections[ #connections + 1 ] = { nodes.BEH_Lima_Pion_ABC_SePosterSurLCAR, "ACT_Dep_SePoster", nodes.ACT_Dep_SePoster }
connections[ #connections + 1 ] = { nodes.BEH_Lima_Pion_ABC_SePosterSurLCAR, "ACT_Dep_PasserSurLima", nodes.ACT_Dep_PasserSurLima }
