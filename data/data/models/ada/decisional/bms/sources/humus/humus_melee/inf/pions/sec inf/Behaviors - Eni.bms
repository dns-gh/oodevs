includedFiles = includedFiles or {}
includedFiles["sources/humus/humus_melee/inf/pions/sec inf/Behaviors - Eni.bms"] = true

local emptyTable = emptyTable

--[[// *****************************************************************************
]]--[[/** \file S VAB - Behaviors - Destruction.hal
 *
 * $Author: Ggr $
 * $Modtime: 25/08/05 18:19 $
 * $Revision: 28 $
 *
 */]]--[[// Created: JCR 03-02-12
]]--[[// *****************************************************************************
]]--[[//=============================================================================
]]--[[// Comportements lies a l'assaut
]]--[[//=============================================================================
]]
--[[//	behavior BEH_Eni_Pion_VAB_Fixer				( T_ConnaissanceAgent repEni, bool bInitiative )
]]--[[//=============================================================================
]]
--[[//-----------------------------------------------------------------------------
]]--[[// Fixer un ennemi
]]--[[//-----------------------------------------------------------------------------
]]--[[// $$$$ Revoir qd est que l'ennemi est fixe.		
]]--[[// TODO : Rejoindre position de tir Debarque. 
]]--[[//
]]

node "BEH_Eni_Pion_VAB_Fixer"
{
    feedbacks = { { { "done_BEH_Eni_Pion_VAB_Fixer" }, "BEH_Eni_Pion_VAB_Fixer" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Eni_Pion_VAB_Fixer, {value} ) end,
    instances =
    {
        boost = 1.1,
        max = 1,
    },

    activations =
    {
        { "ACT_MAJ_EnnemiEnCours", { "done_ACT_MAJ_EnnemiEnCours" } },
        { "BEH_MOT_Pion_INF_Debarquer", { "done_BEH_MOT_Pion_INF_Debarquer" } },
        { "BEH_Dep_ProgressionVers", { "done_BEH_Dep_ProgressionVers" } },
        { "ACT_RC", { "done_ACT_RC" } },
        { "ACT_MAJ_EtatSituationEni", { "done_ACT_MAJ_EtatSituationEni" } },
        { "ACT_Dep_SePoster", { "done_ACT_Dep_SePoster" } },
        { "BEH_Feu_Pion_INF_TirFixer", { "done_BEH_Feu_Pion_INF_TirFixer" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.repEni = self.params[1]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionFixer = self.eActionFixer or eActionEnCours
        self.ptEni_EnCours = self.ptEni_EnCours or S_Eni_Position( self._namedParams.repEni )
        --[[// On arrete de tirer lorsque la section est detruite tactiquement
]]local rPH = GetStateVariable( "VE_Agressivite_Tir" )
        if( ModuleBegins() ) then
            do
            end
--[[// on traite l'ennemi en cours
]]        end

        if( S_Eni_EstDetruitTactique( self._namedParams.repEni ) ) then
            self.eActionFixer = eActionEffectuee
        end

        --[[// On debarque
]]if( self.eActionFixer == eActionImpossible ) then
            do
                                do
                end

                                self:SendFeedback( eActionImpossible )
                Halt( self )
                do return end

            end
        end

        if( self.eActionFixer == eActionEffectuee ) then
            do
                self.eActionFixer = eActionEnCours
                                do
                                        self:SendFeedback( eActionEffectuee )
                    Halt( self )
                    do return end

                end

            end
        end

        Activate( self.activations.ACT_MAJ_EnnemiEnCours, 1, { self._namedParams.repEni, } )
        if( S_Tir_EstAPortee( self._namedParams.repEni, rPH / 2 ) ) then
            Activate( self.activations.BEH_MOT_Pion_INF_Debarquer, 1.2, emptyTable )
        end

        --[[// Attention / si l'ennemi est en mouvement
]]if( not S_Tir_EstAPortee_Debarque( self._namedParams.repEni, rPH ) ) then
            do
                if( S_Geometrie_EstProchePosition( self.ptEni_EnCours, S_Eni_Position( self._namedParams.repEni ), 500 ) ) then
                    self.ptEni_EnCours = S_Eni_Position( self._namedParams.repEni )
                end

                --[[// MAJs etats
]]Activate( self.activations.BEH_Dep_ProgressionVers, 1.1, { self.ptEni_EnCours, eProgressionDirect, eTypeItiInfiltration, } )
            end
--[[// Se poste
]]        else
do
                Activate( self.activations.ACT_RC, 1, { eRC_PretPourConduiteTir, } )
                Activate( self.activations.ACT_MAJ_EtatSituationEni, 1, { eEtatSituationEnnemi_PretPourConduiteTir, } )
                Activate( self.activations.ACT_Dep_SePoster, 1, emptyTable )--[[// ----------------------------------------------------------------------------
]]--[[// Gestion du tir
]]
                --[[// ----------------------------------------------------------------------------
]]Activate( self.activations.BEH_Feu_Pion_INF_TirFixer, 1, { self._namedParams.repEni, } )
self.done_BEH_Feu_Pion_INF_TirFixer = function( self, _, v ) self.eActionFixer = v[1] end
            end
        end

    end,

}

node "BEH_Eni_Pion_INF_GererContactEni"
{
    feedbacks = { { { "done_BEH_Eni_Pion_INF_GererContactEni" }, "BEH_Eni_Pion_INF_GererContactEni" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Eni_Pion_INF_GererContactEni, {value} ) end,
    activations =
    {
        { "BEH_Feu_Pion_VAB_Detruire_SurEni", { "done_BEH_Feu_Pion_VAB_Detruire_SurEni" } },
        { "BEH_Eni_Pion_VAB_Fixer", { "done_BEH_Eni_Pion_VAB_Fixer" } },
        { "BEH_Eni_Pion_INF_DetruitEtFixe", { "done_BEH_Eni_Pion_INF_DetruitEtFixe" } },
        { "BEH_Feu_Pion_INF_TirAppui", { "done_BEH_Feu_Pion_INF_TirAppui" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ksEni = self.params[1]
    end,

    activate = function( self )
        local Activate = Activate
        if( DEC_ConnaissanceAgent_EstDetruitTactique( self._namedParams.ksEni ) ) then
            do return end
        end

         do
            local _continue = true
            local switch_1 = F_Pion_GeteTypeContact( myself )
            local cases_switch_1 = {}
                if switch_1 == eTypeContact_Offensif then
                    Activate( self.activations.BEH_Feu_Pion_VAB_Detruire_SurEni, 1, { self._namedParams.ksEni, true, } )
                    if( S_Misc_EstMissionAffectee( "T_Mission_Pion_INF_Fixer" ) ) then
                        Activate( self.activations.BEH_Eni_Pion_VAB_Fixer, 1, { self._namedParams.ksEni, } )
                    end

                    _continue = false
                                cases_switch_1[1] = true
elseif switch_1 == eTypeContact_Defensif then
                    Activate( self.activations.BEH_Eni_Pion_INF_DetruitEtFixe, 1, { self._namedParams.ksEni, false, } )
                    _continue = false
                                cases_switch_1[2] = true
elseif switch_1 == eTypeContact_Appui then
                    Activate( self.activations.BEH_Feu_Pion_INF_TirAppui, 1, { self._namedParams.ksEni, } )
                    _continue = false
                                cases_switch_1[3] = true

                else
                    Activate( self.activations.BEH_Eni_Pion_INF_DetruitEtFixe, 1, { self._namedParams.ksEni, true, } )
                end
            end

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Eni_Pion_INF_GererContactEni, "BEH_Feu_Pion_VAB_Detruire_SurEni", nodes.BEH_Feu_Pion_VAB_Detruire_SurEni }
connections[ #connections + 1 ] = { nodes.BEH_Eni_Pion_INF_GererContactEni, "BEH_Eni_Pion_VAB_Fixer", nodes.BEH_Eni_Pion_VAB_Fixer }
connections[ #connections + 1 ] = { nodes.BEH_Eni_Pion_INF_GererContactEni, "BEH_Eni_Pion_INF_DetruitEtFixe", nodes.BEH_Eni_Pion_INF_DetruitEtFixe }
connections[ #connections + 1 ] = { nodes.BEH_Eni_Pion_INF_GererContactEni, "BEH_Feu_Pion_INF_TirAppui", nodes.BEH_Feu_Pion_INF_TirAppui }
connections[ #connections + 1 ] = { nodes.BEH_Eni_Pion_VAB_Fixer, "ACT_MAJ_EnnemiEnCours", nodes.ACT_MAJ_EnnemiEnCours }
connections[ #connections + 1 ] = { nodes.BEH_Eni_Pion_VAB_Fixer, "BEH_MOT_Pion_INF_Debarquer", nodes.BEH_MOT_Pion_INF_Debarquer }
connections[ #connections + 1 ] = { nodes.BEH_Eni_Pion_VAB_Fixer, "BEH_Dep_ProgressionVers", nodes.BEH_Dep_ProgressionVers }
connections[ #connections + 1 ] = { nodes.BEH_Eni_Pion_VAB_Fixer, "ACT_RC", nodes.ACT_RC }
connections[ #connections + 1 ] = { nodes.BEH_Eni_Pion_VAB_Fixer, "ACT_MAJ_EtatSituationEni", nodes.ACT_MAJ_EtatSituationEni }
connections[ #connections + 1 ] = { nodes.BEH_Eni_Pion_VAB_Fixer, "ACT_Dep_SePoster", nodes.ACT_Dep_SePoster }
connections[ #connections + 1 ] = { nodes.BEH_Eni_Pion_VAB_Fixer, "BEH_Feu_Pion_INF_TirFixer", nodes.BEH_Feu_Pion_INF_TirFixer }
