includedFiles = includedFiles or {}
includedFiles["sources/humus/humus_melee/inf/pions/sec cdo/missions/SEmparerObjectif.bms"] = true

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JDY 02-11-06 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Inf/Pions/Son Vab/Missions/SEmparerObjectif.hal $
]]--[[// $Author: Jcr $
]]--[[// $Modtime: 22/09/05 18:29 $
]]--[[// $Revision: 26 $
]]--[[// $Workfile: SEmparerObjectif.hal $
]]--[[//
]]--[[// *****************************************************************************
]]

node "MIS_Pion_INF_Semparer"
{
    feedbacks = { { { "done_MIS_Pion_INF_Semparer" }, "MIS_Pion_INF_Semparer" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_MIS_Pion_INF_Semparer, {value} ) end,
    activations =
    {
        { "BEH_Misc_Defini_AppuisMobile", { "done_BEH_Misc_Defini_AppuisMobile" } },
        { "BEH_Misc_Pion_DefinirTypeMission", { "done_BEH_Misc_Pion_DefinirTypeMission" } },
        { "BEH_MAJ_AgressiviteMission", { "done_BEH_MAJ_AgressiviteMission" } },
        { "BEH_Ordre_Inopine", { "done_BEH_Ordre_Inopine" } },
        { "BEH_Mission_Pion_HUMUS_Harceler", { "done_BEH_Mission_Pion_HUMUS_Harceler" } },
        { "BEH_Obj_Pion_VAB_NettoyerObstacle", { "done_BEH_Obj_Pion_VAB_NettoyerObstacle" } },
        { "BEH_Manoeuvre_RompreContact", { "done_BEH_Manoeuvre_RompreContact" } },
        { "ACT_MAJ_EtatPhaseMission", { "done_ACT_MAJ_EtatPhaseMission" } },
        { "BEH_Poste_Pion_INF_TomberEnGarde", { "done_BEH_Poste_Pion_INF_TomberEnGarde" } },
        { "ACT_Info_Trace", { "done_ACT_Info_Trace" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        local Activate = Activate
        self.ePhaseMission = self.ePhaseMission or eSeMettreEnPlace
        self.ePhase = self.ePhase or eSurveiller
        self.eAction = self.eAction or eActionEnCours
        self.eActionEnnemi = self.eActionEnnemi or eActionEnCours
        if( ModuleBegins() ) then
            do
                DEC_Trace( "Mission 'S emparer' : " )
                DEC_SetMission( myself, self._namedParams.mission )
                F_Pion_SeteEtatEchelon( myself, eEtatEchelon_Premier )
                F_Pion_SeteEtatAmbiance( myself, eEtatAmbiance_Vitesse )
            end
        end

        Activate( self.activations.BEH_Misc_Defini_AppuisMobile, 1, {} )
        Activate( self.activations.BEH_Misc_Pion_DefinirTypeMission, 1, { eTypeContact_Defensif, } )
        Activate( self.activations.BEH_MAJ_AgressiviteMission, 1, { eReconnu, M_TIR_PH_MISSION_MANOEUVRE(), } )
        self.eEtatOrdreFinMission = self.eEtatOrdreFinMission or eActionEnCours
        Activate( self.activations.BEH_Ordre_Inopine, 1, {} )
self.done_BEH_Ordre_Inopine = function( self, _, v ) self.eEtatOrdreFinMission = v[1] end
        if( self.eEtatOrdreFinMission == eActionHalt ) then
            do
                self.ePhase = eSeReplier
                self.eAction = eActionEnCours
                self.eEtatOrdreFinMission = eActionEnCours
            end
        end

        do
        end

        if( not DEC_Nuit() ) then
            do
                 do
                    local _continue = true
                    local switch_1 = self.ePhase
                    local cases_switch_1 = {}
                        if switch_1 == eSurveiller then
                                                    if( self.ePhaseMission == eFinMission ) then
                                do
                                    self.ePhase = eFinMission
                                                                        do return end

                                end
                            end

                            Activate( self.activations.BEH_Mission_Pion_HUMUS_Harceler, GetMotivation( "MOT_Mission" ), {} )
self.done_BEH_Mission_Pion_HUMUS_Harceler = function( self, _, v ) self.ePhaseMission = v[1] end
                            _continue = false
                        --[[// Rejoindre la position de repli
]]                        cases_switch_1[1] = true
elseif switch_1 == eSeReplier then
                            if( F_Pion_GeteniEnCours( myself ) == nil ) then
                                StartActivateOverride( self, self.activations.BEH_Obj_Pion_VAB_NettoyerObstacle, 1.2, {} )
                            end

                            if( self.eAction == eActionEffectuee ) then
                                do
                                    self.eAction = eActionEnCours
                                                                        do
                                        self.ePhase = eFinMission
                                    end

                                end
                            else
do
                                    Activate( self.activations.BEH_Manoeuvre_RompreContact, 1, {} )
self.done_BEH_Manoeuvre_RompreContact = function( self, _, v ) self.eAction = v[1] end
                                                                        do return end

                                end
                            end

                                                cases_switch_1[2] = true
                        end
                        if cases_switch_1[2] or switch_1 == eFinMission then
                            if( self.eAction == eActionEffectuee ) then
                                do
                                    self.eAction = eActionEnCours
                                                                        do
                                        DEC_FinMission()
                                                                                self:SendFeedback( eActionEffectuee )
                                        Halt( self )
                                        do return end

                                    end

                                end
                            end

                            Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_FinMission, } )
                            Activate( self.activations.BEH_Poste_Pion_INF_TomberEnGarde, 1, { true, } )
self.done_BEH_Poste_Pion_INF_TomberEnGarde = function( self, _, v ) self.eAction = v[1] end
                            _continue = false
                                                cases_switch_1[3] = true

                        else
                                                end
                    end

            end
        else
do
                Activate( self.activations.ACT_Info_Trace, 1, { "Il fait nuit, l'unité s'arrête", } )
            end
        end

    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Pion_INF_Semparer = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Semparer, "BEH_Misc_Defini_AppuisMobile", nodes.BEH_Misc_Defini_AppuisMobile }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Semparer, "BEH_Misc_Pion_DefinirTypeMission", nodes.BEH_Misc_Pion_DefinirTypeMission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Semparer, "BEH_MAJ_AgressiviteMission", nodes.BEH_MAJ_AgressiviteMission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Semparer, "BEH_Ordre_Inopine", nodes.BEH_Ordre_Inopine }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Semparer, "BEH_Mission_Pion_HUMUS_Harceler", nodes.BEH_Mission_Pion_HUMUS_Harceler }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Semparer, "BEH_Obj_Pion_VAB_NettoyerObstacle", nodes.BEH_Obj_Pion_VAB_NettoyerObstacle }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Semparer, "BEH_Manoeuvre_RompreContact", nodes.BEH_Manoeuvre_RompreContact }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Semparer, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Semparer, "BEH_Poste_Pion_INF_TomberEnGarde", nodes.BEH_Poste_Pion_INF_TomberEnGarde }
connections[ #connections + 1 ] = { nodes.MIS_Pion_INF_Semparer, "ACT_Info_Trace", nodes.ACT_Info_Trace }
