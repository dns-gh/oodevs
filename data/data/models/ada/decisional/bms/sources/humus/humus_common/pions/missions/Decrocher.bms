includedFiles = includedFiles or {}
includedFiles["sources/humus/humus_common/pions/missions/Decrocher.bms"] = true


--[[// *****************************************************************************
]]--[[// MIS_Pion_Decrocher
]]--[[//
]]--[[// Commentaires: BUT: au niveau de la patrouille, renseigner en permanence sur
]]--[[//               un eni sans se laisser accrocher NI identifier. Au niveau de
]]--[[//               de la patrouille, pas d'opportunité d'ouverture du feu.
]]--[[//
]]--[[// *****************************************************************************
]]
--[[// ****************************************************************************
]]--[[//                     le code mis en commentaire ci-dessous correspond au code
]]--[[//                            utilisé pour les pions autres que les pions humus
]]--[[// ----------------------------------------------------------------------------
]]--[[//                                                          25/09/2008 01:24:17
]]--[[// ****************************************************************************
]]
node "MIS_Pion_Decrocher"
{
    feedbacks = { { { "done_MIS_Pion_Decrocher" }, "MIS_Pion_Decrocher" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_MIS_Pion_Decrocher, {value} ) end,
    activations =
    {
        { "BEH_MOT_DesactiveSauvegarde", { "done_BEH_MOT_DesactiveSauvegarde" } },
        { "BEH_Ordre_Inopine", { "done_BEH_Ordre_Inopine" } },
        { "ACT_MAJ_EtatPhaseMission", { "done_ACT_MAJ_EtatPhaseMission" } },
        { "ACT_Info_Trace", { "done_ACT_Info_Trace" } },
        { "BEH_Dep_ProgressionVers", { "done_BEH_Dep_ProgressionVers" } },
        { "BEH_Lima_GererLR", { "done_BEH_Lima_GererLR" } },
        { "BEH_Dep_SePosterFaceADirectionDangereuse", { "done_BEH_Dep_SePosterFaceADirectionDangereuse" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        self.eEtat = self.eEtat or eActionEnCours
        self.ePhaseMission = self.ePhaseMission or ePreparerMission
        if( ModuleBegins() ) then
            do
                DEC_SetMission( myself, self._namedParams.mission )
                F_Pion_SeteEtatAmbiance( myself, eEtatAmbiance_Vitesse )
                StartActivateOverride( self, self.activations.BEH_MOT_DesactiveSauvegarde, 1, {} )
            end
        end

        self.eEtatOrdreFinMission = self.eEtatOrdreFinMission or eActionEnCours
        Activate( self.activations.BEH_Ordre_Inopine, 1, {} )
self.done_BEH_Ordre_Inopine = function( self, _, v ) self.eEtatOrdreFinMission = v[1] end
        if( self.eEtatOrdreFinMission == eActionHalt ) then
            do
                self.ePhaseMission = eFinMission
                self.eEtat = eActionEnCours
                self.eEtatOrdreFinMission = eActionEnCours
            end
        end

        if( not DEC_Nuit() ) then
            do
                 do
                    local _continue = true
                    local switch_1 = self.ePhaseMission
                    local cases_switch_1 = {}
                        if switch_1 == ePreparerMission then
                                                    --[[// 1) Preparation de la mission
]]Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_DebutMission, } )
                            Activate( self.activations.ACT_Info_Trace, 1, { "** MIS DECROCHER **", } )
                            self.ePhaseMission = eDecrocher
                            _continue = false
                        --[[// 2) Decrocher
]]                        cases_switch_1[1] = true
elseif switch_1 == eDecrocher then
                                                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_Decroche, } )
                            if( self.eEtat == eActionEffectuee ) then
                                do
                                    self.eEtat = eActionEnCours
                                                                        do
                                        self.ePhaseMission = eFinMission
                                                                                do return end

                                    end

                                end
                            end

                            Activate( self.activations.BEH_Dep_ProgressionVers, 1, { self._namedParams.mission.pointRegroupement_, eProgressionDirect, eTypeItiMouvement, } )
self.done_BEH_Dep_ProgressionVers = function( self, _, v ) self.eEtat = v[1] end
                            Activate( self.activations.BEH_Lima_GererLR, 1, {} )
                            _continue = false
                        --[[// 4) Fin de la mission
]]                        cases_switch_1[2] = true
elseif switch_1 == eFinMission then
                            StopActivateOverride( self, self.activations.BEH_MOT_DesactiveSauvegarde, {} )
                            Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_FinMission, } )
                            Activate( self.activations.BEH_Dep_SePosterFaceADirectionDangereuse, 1, {} )
                            _continue = false
                                                cases_switch_1[3] = true

                        else
                                                end
                    end

            end
        else
do
                Activate( self.activations.ACT_Info_Trace, 1, { "Il fait nuit, l'unité s'arrête", } )
            end
        end

    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Pion_Decrocher = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.MIS_Pion_Decrocher, "BEH_MOT_DesactiveSauvegarde", nodes.BEH_MOT_DesactiveSauvegarde }
connections[ #connections + 1 ] = { nodes.MIS_Pion_Decrocher, "BEH_Ordre_Inopine", nodes.BEH_Ordre_Inopine }
connections[ #connections + 1 ] = { nodes.MIS_Pion_Decrocher, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
connections[ #connections + 1 ] = { nodes.MIS_Pion_Decrocher, "ACT_Info_Trace", nodes.ACT_Info_Trace }
connections[ #connections + 1 ] = { nodes.MIS_Pion_Decrocher, "BEH_Dep_ProgressionVers", nodes.BEH_Dep_ProgressionVers }
connections[ #connections + 1 ] = { nodes.MIS_Pion_Decrocher, "BEH_Lima_GererLR", nodes.BEH_Lima_GererLR }
connections[ #connections + 1 ] = { nodes.MIS_Pion_Decrocher, "BEH_Dep_SePosterFaceADirectionDangereuse", nodes.BEH_Dep_SePosterFaceADirectionDangereuse }
