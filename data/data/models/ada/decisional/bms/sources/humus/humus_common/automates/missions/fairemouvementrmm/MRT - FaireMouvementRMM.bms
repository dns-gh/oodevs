includedFiles = includedFiles or {}
includedFiles["sources/humus/humus_common/automates/missions/fairemouvementrmm/MRT - FaireMouvementRMM.bms"] = true

--[[// *****************************************************************************
]]--[[// $Created$
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Common/Automates/Missions/FaireMouvementRMM/MRT - FaireMouvementRMM.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 19/09/05 9:45 $
]]--[[// $Revision: 14 $
]]--[[// $Workfile: MRT - FaireMouvementRMM.hal $
]]--[[// *****************************************************************************
]]
--[[// *****************************************************************************
]]--[[// SeDeplacer
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]node "MIS_Automate_MRT_FaireMouvementRMM"
{
    feedbacks = { { { "done_MIS_Automate_MRT_FaireMouvementRMM" }, "MIS_Automate_MRT_FaireMouvementRMM" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_MIS_Automate_MRT_FaireMouvementRMM, {value} ) end,
    activations =
    {
        { "BEH_Automate_MRT_SeDeplacer", { "done_BEH_Automate_MRT_SeDeplacer" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params.mission
    end,

    activate = function( self )
        self.ePhase = self.ePhase or eDonnerMission
        self.eEtat = self.eEtat or eActionEnCours
        --[[//---------------------------------------------------------------------
]]--[[// Init
]]--[[//---------------------------------------------------------------------
]]if( ModuleBegins() ) then
            do
                DEC_SetMission( myself, self._namedParams.mission )
                DEC_Trace( "$ MIS_Automate_MRT_SeDeplacer : debut MRT $" )
            end
--[[//-----------------------------------------------------------------------------
]]--[[// MRT
]]--[[//-----------------------------------------------------------------------------
]]        end

         do
            local _continue = true
            local switch_1 = self.ePhase
            local cases_switch_1 = {}
                if switch_1 == eDonnerMission then
                    --[[//-----------------------------------------------------------------------------
]]--[[// Assignation des mission SeDeplacer aux pions
]]--[[//-----------------------------------------------------------------------------
]]if( self.eEtat == eActionEffectuee ) then
                        do
                            self.eEtat = eActionEnCours
                                                        do
                                self.ePhase = eTerminerMission
                                _continue = false
                            end

                        end
                    end

                        if _continue then
                        Activate( self.activations.BEH_Automate_MRT_SeDeplacer, 1, { myself:DEC_Automate_PionsSansPC(), self._namedParams.mission.itineraire_, } )
self.done_BEH_Automate_MRT_SeDeplacer = function( self, _, v ) self.eEtat = v[1] end
                        _continue = false
                    end
                --[[//-----------------------------------------------------------------------------
]]--[[// Validation 
]]--[[//-----------------------------------------------------------------------------
]]                cases_switch_1[1] = true
elseif switch_1 == eTerminerMission then
                    --[[//Fin MRT
]]DEC_MRT_Valide()
                                        self:SendFeedback( eActionEffectuee )
                    Halt( self )
                    do return end

                end
                if not cases_switch_1[1] then
                                end
            end

    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.MIS_Automate_MRT_FaireMouvementRMM = { "mission" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.MIS_Automate_MRT_FaireMouvementRMM, "BEH_Automate_MRT_SeDeplacer", nodes.BEH_Automate_MRT_SeDeplacer }
