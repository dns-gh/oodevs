includedFiles = includedFiles or {}
includedFiles["sources/humus/humus_melee/inf/pions/common/Behaviors - Lima.bms"] = true

include "bit.lua"


--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JCR 03-02-20 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Inf/Pions/Common/Behaviors - Lima.hal $
]]--[[// $Author: Jcr $
]]--[[// $Modtime: 23/09/05 19:24 $
]]--[[// $Revision: 22 $
]]--[[// $Workfile: Behaviors - Lima.hal $
]]--[[//
]]--[[// *****************************************************************************
]]

--[[//-----------------------------------------------------------------------------
]]--[[// Comportement sur LCA
]]--[[//-----------------------------------------------------------------------------
]]node "BEH_Lima_Pion_INF_SurLCA"
{
    activations =
    {
        { "ACT_Dep_PasserSurLima", {} },
        { "BEH_Poste_Pion_INF_ArretCourt", {} },
        { "BEH_Misc_Pion_INF_MAJ_Repli", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        self.eAction = self.eAction or eActionEnCours
        self.repPt = self.repPt or DEC_Agent_Position()
        if( ModuleBegins() ) then
            do
                DEC_Trace( "sur ligne de changement d'attitude" )
                if( F_Pion_GeteEtatAmbiance( myself ) == eEtatAmbiance_Vitesse ) then
                    F_Pion_SeteEtatAmbiance( myself, eEtatAmbiance_Surete )
                else
                    F_Pion_SeteEtatAmbiance( myself, eEtatAmbiance_Vitesse )
                end

            end
        end

        Activate( self.activations.ACT_Dep_PasserSurLima, 1, { eEtatLima_LCA, } )
        if( self.eAction ~= eActionEnCours ) then
            self.params.__returnValue = eActionEffectuee
            Halt( self )
            do return end
        end

        --[[// $$$$ Pour le moment comme les points particuliers	
]]Activate( self.activations.BEH_Poste_Pion_INF_ArretCourt, 1, setmetatable( { self.repPt, S_TempsObservationPoint_Ambiance(), }, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eAction = v else rawset( t, k, v ) end end } ) )
        Activate( self.activations.BEH_Misc_Pion_INF_MAJ_Repli, 1, {} )
    end,

--[[//-----------------------------------------------------------------------------
]]--[[// Comportement Generique sur LD
]]--[[//	Attends que l'on donne l'ordre de continuer
]]--[[//-----------------------------------------------------------------------------
]]}

node "BEH_Lima_Pion_INF_SurLD"
{
    activations =
    {
        { "BEH_Ordre_SePoster_EnAttente", {} },
        { "ACT_Dep_PasserSurLima", {} },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.lima = self.params[1]
    end,

    activate = function( self )
        self.eOrdre = self.eOrdre or eActionEnCours
        if( self.eOrdre == eActionEffectuee ) then
            do
                --[[// Cas embrayé --> on flague la lima pour tout le monde
]]DEC_SetMissionLimaFlag( self._namedParams.lima, true )
                                self.params.__returnValue = eActionEffectuee
                Halt( self )
                do return end

            end
--[[// Se poster
]]        end

        Activate( self.activations.BEH_Ordre_SePoster_EnAttente, 1, setmetatable( {}, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eOrdre = v else rawset( t, k, v ) end end } ) )
        --[[// MAJ Etat Lima
]]Activate( self.activations.ACT_Dep_PasserSurLima, 1, { eEtatLima_LD, } )
    end,

--[[//-----------------------------------------------------------------------------
]]--[[// Comportement Generique sur LCAR
]]--[[//	Le comportement reste specifique pour la mission Freiner
]]--[[//-----------------------------------------------------------------------------
]]}

node "BEH_Lima_Pion_INF_SurLCAR"
{
    activations =
    {
        { "ACT_Dep_PasserSurLima", {} },
        { "BEH_Poste_Pion_INF_TomberEnGarde", {} },
        { "BEH_Ordre_SePoster_EnAttente", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        self.eAction = self.eAction or eActionEnCours
        if( ModuleBegins() ) then
            do
                DEC_Trace( "Sur lima: LCAR" )
            end
        end

        Activate( self.activations.ACT_Dep_PasserSurLima, 1, { eEtatLima_LCAR, } )
        --[[// comportement sur LCAR termine
]]--[[// Desctive le combat de rencontre
]]if( self.eAction == eActionEffectuee ) then
            do
                self.eAction = eActionEnCours
                                do
                    StartEvent( "BEH_Mot_Delai_Pion_INF_AugmenterAgression", 5 )
                                        self.params.__returnValue = eActionEffectuee
                    Halt( self )
                    do return end

                end

            end
        end

        Activate( self.activations.BEH_Poste_Pion_INF_TomberEnGarde, 1, { true, } )
        Activate( self.activations.BEH_Ordre_SePoster_EnAttente, 1, setmetatable( {}, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eAction = v else rawset( t, k, v ) end end } ) )
    end,

}

node "BEH_Lima_Pion_INF_SurLR"
{
    create = function( self )
    end,

    activate = function( self )
        if( ModuleBegins() ) then
            F_Pion_SeteEtatAmbiance( myself, eEtatAmbiance_Vitesse )
        end

    end,

--[[// *****************************************************************************
]]--[[// BEH_Lima_GererLR
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Lima_Pion_INF_GererLIA"
{
    activations =
    {
        { "ACT_RC", {} },
        { "ACT_Dep_PasserSurLima", {} },
        { "ACT_Limas_Suppression", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        if( ( myself.ptPIA_ ~= 0 and myself.ptPIA_ ~= nil ) and S_Geometrie_EstProchePosition( DEC_Agent_Position(), myself.ptPIA_, 100 ) ) then
            do
                Activate( self.activations.ACT_RC, 1, { eRC_PassageSurPIA, } )
            end
--[[//-----------------------------------------------------------------------------
]]--[[// Traiter les points interressants
]]--[[//-----------------------------------------------------------------------------
]]        end

        local listePointInterressant = DEC_GetCategory( "points_interressants" )
        for _,x in pairs( listePointInterressant or {} ) do
        local _continue = true
do
                local pointABC = x
                if( pointABC:GetType() == "Rep_PointLima" ) then
                    do
                        --[[// cast
]]local pointLima = pointABC
                        if( DEC_GetTypeLimaPoint( pointLima ) == eTypeLima_LIA ) then
                            do
                                local lima = DEC_GetLimaPoint( pointLima )
                                if( not DEC_GetMissionLimaFlag( lima ) ) then
                                    do
                                        DEC_SetMissionLimaFlag( lima, true )
                                        Activate( self.activations.ACT_Dep_PasserSurLima, 1, { eEtatLima_LIA, } )
                                    end
                                end

                            end
                        end

                        Activate( self.activations.ACT_Limas_Suppression, 1, { pointLima, } )
                    end
                end

            end

        end

    end,

--[[// *****************************************************************************
]]--[[// BEH_Lima_Pion_RejoindreFuseau_EnAttente
]]--[[//
]]--[[// Commentaires: Gerer la coordination sur les fuseaux. Lorsque l'on rejoint
]]--[[//	 son fuseau, le pion attent l'ordre de pousuivre (deboucher)
]]--[[//
]]--[[// OPT: MIA spé JCR à déplacer ou à virer
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Lima_Pion_RejoindreFuseau_EnAttente"
{
    activations =
    {
        { "ACT_MAJ_EtatPhaseMission", {} },
        { "ACT_Dep_PasserSurLima", {} },
        { "BEH_Ordre_SePoster_EnAttente", {} },
    },

    create = function( self )
    end,

    activate = function( self )
        self.ePhase = self.ePhase or eRejoindre
        self.eOrdre = self.eOrdre or eActionEnCours
        if( ModuleBegins() ) then
if( DEC_Geometrie_EstPointDansFuseau( DEC_Agent_Position() ) ) then
                self.params.__returnValue = eActionEffectuee
                Halt( self )
                do return end
            end
        end

        if( self.eOrdre == eActionEffectuee ) then
            self.params.__returnValue = eActionEffectuee
            Halt( self )
            do return end
        end

        Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_RejointFuseau, } )
        if( self.ePhase == eAttendre ) then
            Activate( self.activations.ACT_Dep_PasserSurLima, 1, { eEtatLima_Fuseau, } )
        end

         do
            local _continue = true
            local switch_1 = self.ePhase
            local cases_switch_1 = {}
                if switch_1 == eRejoindre then
                    if( not DEC_Geometrie_EstPointDansFuseau( DEC_Agent_Position() ) ) then
                        do return end
                    end

                    self.ePhase = eAttendre
                                cases_switch_1[1] = true
                end
                if cases_switch_1[1] or switch_1 == eAttendre then
                    Activate( self.activations.BEH_Ordre_SePoster_EnAttente, 1, setmetatable( {}, { __newindex = function( t, k, v ) if k == "__returnValue" then self.eOrdre = v else rawset( t, k, v ) end end } ) )
                    _continue = false
                                cases_switch_1[2] = true
                end
            end

    end,

}

eventmanager_plugin = eventmanager_plugin or {}
eventmanager_plugin.BEH_Mot_Delai_Pion_INF_AugmenterAgression = { "param" }
connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Lima_Pion_INF_GererLIA, "ACT_RC", nodes.ACT_RC }
connections[ #connections + 1 ] = { nodes.BEH_Lima_Pion_INF_GererLIA, "ACT_Dep_PasserSurLima", nodes.ACT_Dep_PasserSurLima }
connections[ #connections + 1 ] = { nodes.BEH_Lima_Pion_INF_GererLIA, "ACT_Limas_Suppression", nodes.ACT_Limas_Suppression }
connections[ #connections + 1 ] = { nodes.BEH_Lima_Pion_INF_SurLCA, "ACT_Dep_PasserSurLima", nodes.ACT_Dep_PasserSurLima }
connections[ #connections + 1 ] = { nodes.BEH_Lima_Pion_INF_SurLCA, "BEH_Poste_Pion_INF_ArretCourt", nodes.BEH_Poste_Pion_INF_ArretCourt }
connections[ #connections + 1 ] = { nodes.BEH_Lima_Pion_INF_SurLCA, "BEH_Misc_Pion_INF_MAJ_Repli", nodes.BEH_Misc_Pion_INF_MAJ_Repli }
connections[ #connections + 1 ] = { nodes.BEH_Lima_Pion_INF_SurLCAR, "ACT_Dep_PasserSurLima", nodes.ACT_Dep_PasserSurLima }
connections[ #connections + 1 ] = { nodes.BEH_Lima_Pion_INF_SurLCAR, "BEH_Poste_Pion_INF_TomberEnGarde", nodes.BEH_Poste_Pion_INF_TomberEnGarde }
connections[ #connections + 1 ] = { nodes.BEH_Lima_Pion_INF_SurLCAR, "BEH_Ordre_SePoster_EnAttente", nodes.BEH_Ordre_SePoster_EnAttente }
connections[ #connections + 1 ] = { nodes.BEH_Lima_Pion_INF_SurLD, "BEH_Ordre_SePoster_EnAttente", nodes.BEH_Ordre_SePoster_EnAttente }
connections[ #connections + 1 ] = { nodes.BEH_Lima_Pion_INF_SurLD, "ACT_Dep_PasserSurLima", nodes.ACT_Dep_PasserSurLima }
connections[ #connections + 1 ] = { nodes.BEH_Lima_Pion_RejoindreFuseau_EnAttente, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
connections[ #connections + 1 ] = { nodes.BEH_Lima_Pion_RejoindreFuseau_EnAttente, "ACT_Dep_PasserSurLima", nodes.ACT_Dep_PasserSurLima }
connections[ #connections + 1 ] = { nodes.BEH_Lima_Pion_RejoindreFuseau_EnAttente, "BEH_Ordre_SePoster_EnAttente", nodes.BEH_Ordre_SePoster_EnAttente }
