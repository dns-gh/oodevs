includedFiles = includedFiles or {}
includedFiles["sources/humus/humus_melee/inf/pions/common/Parameters.bms"] = true

--[[//=============================================================================
]]--[[//	Les parametres sont communs a l'ensemble de l'infanterie
]]--[[//=============================================================================
]]
function M_TIR_PH_MISSION_APPUYER()
    return 0.5
end



function M_TIR_PH_MISSION_STATIQUE()
    return 0.5
end



function M_TIR_PH_MISSION_MANOEUVRE()
    return 0.6
end



function M_TIR_PH_MISSION_DETRUIRE()
    return 0.7
end



--[[// -----------------------------------------------------------------------------
]]--[[//		temps preparation mission / observation / foule
]]--[[// -----------------------------------------------------------------------------
]]
--[[//
]]function M_TEMPS_FOUILLE()
    return 5
end



--[[// Preparation : 5 mn
]]function M_TEMPS_PREPARATION_MISSION()
    return 10
end



function M_TEMPS_RECO_POINT()
    return 5
end



function M_TEMPS_ATTENTE_APPUI()
    return 1
end



function M_DELAI_TOMBE_EN_GARDE()
    return 0.5
end



function M_DELAI_RUPTURECONTACT()
    return 5
end



function M_CAPACITE_SURVEILLANCE()
    return 4000
end



--[[// Delai de reconnaissance en fonction de l'ambiance
]]--[[// ============================================================================
]]
function M_TEMPS_ARRET_POINT_OBSERVATION()
    return 0.5
end



function M_TEMPS_ARRET_POINT_OBSERVATION_SURETE()
    return 1
end



function M_TEMPS_ARRET_POINT_RECO()
    return 1
end



function M_TEMPS_ARRET_POINT_RECO_SURETE()
    return 3
end







function M_DELAI_NETTOYAGE()
    return 5
end



function M_DELAI_NETTOYAGE_RECO()
    return 10
end

--[[//-----------------------------------------------------------------------------
]]--[[// Section débarquée ou non 
]]--[[//-----------------------------------------------------------------------------
]]--[[// Vitesse de l'infanterie debarque em metre/min (3km/h)
]]--[[// En Ambiance Vitesse
]]--[[// en km/h temp?
]]--[[// -----------------------------------------------------------------------------
]]--[[// Distance sur laquelle on va chercher un noeud
]]--[[// -----------------------------------------------------------------------------
]]function M_VITESSE_INF_MIN( )
    local _returnValue = 0
    _returnValue = 50
    do return _returnValue end
end

function M_TEMPS_RECO_MIN( )
    local _returnValue = 0
    _returnValue = 1
    do return _returnValue end
end

function S_TempsObservationPoint_Ambiance( )
    local _returnValue = 0
    _returnValue = M_TEMPS_ARRET_POINT_OBSERVATION()
    if( F_Pion_GeteEtatAmbiance( myself ) ~= eEtatAmbiance_Vitesse ) then
        _returnValue = M_TEMPS_ARRET_POINT_OBSERVATION_SURETE()
    end

    do return _returnValue end
end

function S_TempsRecoPoint_Ambiance( )
    local _returnValue = 0
    _returnValue = M_TEMPS_ARRET_POINT_RECO()
    if( F_Pion_GeteEtatAmbiance( myself ) ~= eEtatAmbiance_Vitesse ) then
        _returnValue = M_TEMPS_ARRET_POINT_RECO_SURETE()
    end

    do return _returnValue end
end

function S_VitesseRecoPoint_Ambiance( )
    local _returnValue = 0
    _returnValue = 6
    if( F_Pion_GeteEtatAmbiance( myself ) ~= eEtatAmbiance_Vitesse ) then
        _returnValue = 2
    end

    do return _returnValue end
end


function S_DistanceInstallationObstacle( )
    local _returnValue = 0
    _returnValue = 0
    local mission = DEC_GetMission( myself )
    if( mission == nil ) then
        do return _returnValue end
    end

     do
        local _continue = true
        local switch_1 = mission:GetType()
        local cases_switch_1 = {}
            if switch_1 == "T_Mission_Pion_INF_ControlerSecteur" then
                _returnValue = 1500
                _continue = false
                        cases_switch_1[1] = true

            else
                _returnValue = 300
                        end
        end

    do return _returnValue end
end

