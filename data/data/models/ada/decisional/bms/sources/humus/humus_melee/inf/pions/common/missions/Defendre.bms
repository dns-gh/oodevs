includedFiles = includedFiles or {}
includedFiles["sources/humus/humus_melee/inf/pions/common/missions/Defendre.bms"] = true

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JDY 02-11-06 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Inf/Pions/Common/Missions/Defendre.hal $
]]--[[// $Author: Jcr $
]]--[[// $Modtime: 23/09/05 17:39 $
]]--[[// $Revision: 11 $
]]--[[// $Workfile: Defendre.hal $
]]--[[//
]]--[[// *****************************************************************************
]]


--[[//=============================================================================
]]--[[//                            Squelette de mission
]]--[[//=============================================================================
]]
node "BEH_Mission_Pion_INF_Defendre"
{
    feedbacks = { { { "done_BEH_Mission_Pion_INF_Defendre" }, "BEH_Mission_Pion_INF_Defendre" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Pion_INF_Defendre, {value} ) end,
    activations =
    {
        { "BEH_Lima_Pion_RejoindreFuseau_EnAttente", { "done_BEH_Lima_Pion_RejoindreFuseau_EnAttente" } },
        { "BEH_Mot_Pion_Embarquer", { "done_BEH_Mot_Pion_Embarquer" } },
        { "BEH_Dep_Pion_INF_MiseEnPlace_Mission", { "done_BEH_Dep_Pion_INF_MiseEnPlace_Mission" } },
        { "ACT_RC", { "done_ACT_RC" } },
        { "ACT_MAJ_EtatPhaseMission", { "done_ACT_MAJ_EtatPhaseMission" } },
        { "BEH_Dispositif_Pion_VAB_InstallationDefensive", { "done_BEH_Dispositif_Pion_VAB_InstallationDefensive" } },
        { "ACT_Misc_Pion_DelaiInstallation", { "done_ACT_Misc_Pion_DelaiInstallation" } },
        { "BEH_Eni_Pion_INF_Tenir", { "done_BEH_Eni_Pion_INF_Tenir" } },
    },

    create = function( self )
    end,

    activate = function( self )
        self.mission = self.mission or DEC_GetMission( myself )
        self.ePhase = self.ePhase or eSeMettreEnPlace
        self.eAction = self.eAction or eActionEnCours
        self.locADefendre = self.locADefendre or DEC_Geometrie_ConvertirPointEnLocalisation( self.mission.pointADefendre_ )
        if( S_RapForLocal() == eEtatRapportDeForce_Favorable ) then
            do
                if( ModuleBegins() ) then
                    StartActivateOverride( self, self.activations.BEH_Lima_Pion_RejoindreFuseau_EnAttente, 1.1, {} )
                end

                 do
                    local _continue = true
                    local switch_1 = self.ePhase
                    local cases_switch_1 = {}
                        if switch_1 == eSeMettreEnPlace then
                            if( self.eAction == eActionEffectuee ) then
                                do
                                    self.eAction = eActionEnCours
                                                                        do
                                        self.ePhase = eInstallerDispositif
                                                                                self:SendFeedback( self.ePhase )
                                        do return end

                                    end

                                end
                            end

                            Activate( self.activations.BEH_Mot_Pion_Embarquer, 1, {} )
                            --[[// Rejoins une position d'observation de la position a Barrer
]]Activate( self.activations.BEH_Dep_Pion_INF_MiseEnPlace_Mission, 1, { M_TEMPS_PREPARATION_MISSION(), self.mission.pointADefendre_, true, } )
self.done_BEH_Dep_Pion_INF_MiseEnPlace_Mission = function( self, _, v ) self.eAction = v[1] end
                            _continue = false
                                                cases_switch_1[1] = true
elseif switch_1 == eInstallerDispositif then
                            Activate( self.activations.ACT_RC, 1, { eRC_ArriveSurPosition, } )
                            Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_InstallationDispositif, } )
                            --[[// action ACT_MAJ_EtatPhaseMission( eEtatPhaseMission_ArriveSurLocalisation );
]]--[[// On surveille la zone en meme temps que l'on prepare
]]--[[// On fait d'abord debarquer                
]]StartActivateOverride( self, self.activations.BEH_Dispositif_Pion_VAB_InstallationDefensive, 1, { self.mission.pointADefendre_, self.mission.preparerTerrain_, } )
                            --[[// preparation 5min
]]if( self.eAction == eActionEffectuee ) then
                                do
                                    self.eAction = eActionEnCours
                                                                        do
                                        self.ePhase = eSurveiller
                                                                                self:SendFeedback( self.ePhase )
                                        do return end

                                    end

                                end
--[[// Temps de mise en place du dispositif
]]                            end

                            Activate( self.activations.ACT_Misc_Pion_DelaiInstallation, 1, { eNiveauInstallation_PosteAmenage, } )
self.done_ACT_Misc_Pion_DelaiInstallation = function( self, _, v ) self.eAction = v[1] end
                            _continue = false
                        --[[// On surveille jusqu'a la fin...
]]                        cases_switch_1[2] = true
elseif switch_1 == eSurveiller then
                            --[[//            action ACT_MAJ_EtatPhaseMission( eEtatPhaseMission_DispositifInstalle );
]]--[[//            behavior BEH_Eni_Pion_INF_Tenir( 1 );
]]--[[//            break;
]]Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_DispositifInstalle, } )
                            if( S_RapForLocal() == eEtatRapportDeForce_Favorable ) then
                                do
                                    Activate( self.activations.BEH_Eni_Pion_INF_Tenir, 1, { 1, } )
                                end
--[[//Rapport de force défavorable ou neutre => se replier
]]                            else
do
                                    DEC_Trace( "Rapport de force défavorable - Repli sur la zone de regroupement" )
                                    self.ePhase = eSeReplier
                                end
                            end

                            _continue = false
                                                cases_switch_1[3] = true

                        else
                                                end
                    end

                                self:SendFeedback( self.ePhase )
                do return end

            end
--[[//Rapport de force défavorable ou neutre => se replier
]]        else
do
                DEC_Trace( "Rapport de force défavorable - Repli sur la zone de regroupement" )
                self.ePhase = eSeReplier
            end
        end

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_Defendre, "BEH_Lima_Pion_RejoindreFuseau_EnAttente", nodes.BEH_Lima_Pion_RejoindreFuseau_EnAttente }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_Defendre, "BEH_Mot_Pion_Embarquer", nodes.BEH_Mot_Pion_Embarquer }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_Defendre, "BEH_Dep_Pion_INF_MiseEnPlace_Mission", nodes.BEH_Dep_Pion_INF_MiseEnPlace_Mission }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_Defendre, "ACT_RC", nodes.ACT_RC }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_Defendre, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_Defendre, "BEH_Dispositif_Pion_VAB_InstallationDefensive", nodes.BEH_Dispositif_Pion_VAB_InstallationDefensive }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_Defendre, "ACT_Misc_Pion_DelaiInstallation", nodes.ACT_Misc_Pion_DelaiInstallation }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_Defendre, "BEH_Eni_Pion_INF_Tenir", nodes.BEH_Eni_Pion_INF_Tenir }
