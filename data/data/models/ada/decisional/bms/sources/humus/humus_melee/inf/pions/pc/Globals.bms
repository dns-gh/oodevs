includedFiles = includedFiles or {}
includedFiles["sources/humus/humus_melee/inf/pions/pc/Globals.bms"] = true

include "bit.lua"


--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JDY 02-11-06 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Inf/Pions/PC/Globals.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 8/07/05 16:21 $
]]--[[// $Revision: 11 $
]]--[[// $Workfile: Globals.hal $
]]--[[//
]]--[[// *****************************************************************************
]]
include "Humus/Humus_Melee/Inf/Pions/Common/Globals.bms"


include "Humus/Humus_Melee/Inf/Pions/PC/Parameters.bms"

include "Humus/Humus_Melee/Inf/Pions/PC/Globals Poly.bms"


function M_DEPLACEMENT_ACTUATEURS()
    return deplacement
end



function M_TIR_ACTUATEURS()
    return tir
end

--[[//=============================================================================
]]--[[// Definition des functions ecrites en script
]]--[[//=============================================================================
]]function S_Tir_EstAPortee_Debarque( pPion, rPH )
    local _returnValue = false
    local eValidite = nil
    _returnValue = DEC_Geometrie_Distance( DEC_Agent_Position(), S_Eni_Position( pPion ) ) < DEC_Tir_PorteeMaxPourTirerSurUnite( pPion, eValidite, rPH )
    local rDist_Max = DEC_Tir_PorteeMaxPourTirerSurUnite( pPion, eValidite, rPH )
    local rDist = DEC_Geometrie_Distance( DEC_Agent_Position(), S_Eni_Position( pPion ) )
    if( eRequeteInvalide == eValidite ) then
        _returnValue = false
    end

    do return _returnValue end
end

function S_CalculerPositionAppui( pion, rDist )
    local _returnValue = nil
    if( F_Pion_GeteTypeContact( myself ) == eTypeContact_Offensif or DEC_GetMission( myself ) == nil ) then
        _returnValue = DEC_Geometrie_CalculerPositionAppui( pion, rDist )
    else
do
            local mission = DEC_GetMission( myself )
            _returnValue = S_Geometrie_PtInvDirDangereuse( pion:DEC_Agent_Position(), DEC_GetDirectionDanger( mission ), 900 )
        end
    end

    do return _returnValue end
end

