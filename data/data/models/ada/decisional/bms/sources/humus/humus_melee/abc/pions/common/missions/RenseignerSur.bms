includedFiles = includedFiles or {}
includedFiles["sources/humus/humus_melee/abc/pions/common/missions/RenseignerSur.bms"] = true

local emptyTable = emptyTable

--[[// *****************************************************************************
]]--[[// $Created$
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Abc/Pions/Common/Missions/RenseignerSur.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 23/08/05 15:21 $
]]--[[// $Revision: 25 $
]]--[[// $Workfile: RenseignerSur.hal $
]]--[[// *****************************************************************************
]]
--[[// *****************************************************************************
]]--[[// BEH_Mission_Pion_ABC_RenseignerSur
]]--[[//
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]node "BEH_Mission_Pion_ABC_RenseignerSur"
{
    feedbacks = { { { "done_BEH_Mission_Pion_ABC_RenseignerSur" }, "BEH_Mission_Pion_ABC_RenseignerSur" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Pion_ABC_RenseignerSur, {value} ) end,
    activations =
    {
        { "BEH_Ordre_Inopine", { "done_BEH_Ordre_Inopine" } },
        { "BEH_MAJ_Pion_ABC_AgressiviteTir", { "done_BEH_MAJ_Pion_ABC_AgressiviteTir" } },
        { "ACT_MAJ_EtatPhaseMission", { "done_ACT_MAJ_EtatPhaseMission" } },
        { "ACT_Info_Trace", { "done_ACT_Info_Trace" } },
        { "BEH_Dep_ProgressionVers", { "done_BEH_Dep_ProgressionVers" } },
        { "BEH_Obs_Pion_ABC_RenseignerSurPoint", { "done_BEH_Obs_Pion_ABC_RenseignerSurPoint" } },
        { "BEH_Dep_SePosterFaceADirectionDangereuse", { "done_BEH_Dep_SePosterFaceADirectionDangereuse" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.mission = self.params[1]
        self._namedParams.rPH = self.params[2]
        self._namedParams.eNiveauIdentificationEni = self.params[3]
    end,

    activate = function( self )
        local Activate = Activate
        self.eEtat = self.eEtat or eActionEnCours
        self.ePhaseMission = self.ePhaseMission or ePreparerMission
        self.eEtatOrdreFinMission = self.eEtatOrdreFinMission or eActionEnCours
        Activate( self.activations.BEH_Ordre_Inopine, 1, emptyTable )
self.done_BEH_Ordre_Inopine = function( self, _, v ) self.eEtatOrdreFinMission = v[1] end
        if( self.eEtatOrdreFinMission == eActionHalt ) then
            do
                self.ePhaseMission = eFinMission
                self.eEtat = eActionEnCours
                self.eEtatOrdreFinMission = eActionEnCours
            end
--[[//-----------------------------------------------------------------------------
]]--[[// Pion detruit
]]--[[//-----------------------------------------------------------------------------
]]        end

        if( F_Pion_GeteEtatDestruction( myself ) ~= eEtatDestruction_None ) then
            self:SendFeedback( eActionEffectuee )
            Halt( self )
            do return end
        end

        --[[//-----------------------------------------------------------------------------
]]--[[// Agressivite
]]--[[//-----------------------------------------------------------------------------
]]Activate( self.activations.BEH_MAJ_Pion_ABC_AgressiviteTir, 1, { self._namedParams.rPH, } )
        --[[//-------------------------------------------------------------------------
]]--[[// Appuis ou soutiens
]]--[[//-------------------------------------------------------------------------
]]if( ModuleBegins() ) then
            F_Pion_SeteEtatAmbiance( myself, eEtatAmbiance_Vitesse )
        end

         do
            local _continue = true
            local switch_1 = self.ePhaseMission
            local cases_switch_1 = {}
                if switch_1 == ePreparerMission then
                    --[[// Preparation de la mission
]]Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_DebutMission, } )
                    Activate( self.activations.ACT_Info_Trace, 1, { "** MIS_ABC_RenseignerSur: debut **", } )
                    self.ePhaseMission = eRejoindre
                    _continue = false
                --[[// Progresser
]]                cases_switch_1[1] = true
elseif switch_1 == eRejoindre then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_ProgressionVersLocalisation, } )
                    --[[// Simulation d'un point d'observation à 500 m
]]if( DEC_Geometrie_Distance( DEC_Agent_Position(), self._namedParams.mission.pointARenseigner_ ) < M_MODELE_PION_ABC_DISTANCE_POSITION_OBSERVATION() ) then
                        do
                            self.ePhaseMission = eSurveiller
                                                        do return end

                        end
--[[// Progression vers position d'observation.
]]                    end

                    Activate( self.activations.BEH_Dep_ProgressionVers, 1, { self._namedParams.mission.pointARenseigner_, eProgressionReco, eTypeItiReconnaissance, } )
                    _continue = false
                --[[// Renseigner sur le point
]]                cases_switch_1[2] = true
elseif switch_1 == eSurveiller then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_ArriveSurLocalisation, } )
                    Activate( self.activations.BEH_Obs_Pion_ABC_RenseignerSurPoint, 1, { self._namedParams.mission.pointARenseigner_, } )
                    _continue = false
                --[[// Fin de la mission --> SUR ORDRE
]]                cases_switch_1[3] = true
elseif switch_1 == eFinMission then
                    Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_FinMission, } )
                    Activate( self.activations.BEH_Dep_SePosterFaceADirectionDangereuse, 1, emptyTable )
                    _continue = false
                                cases_switch_1[4] = true

                else
                                end
            end

    end,

--[[// *****************************************************************************
]]--[[// BEH_Obs_Pion_ABC_RenseignerSurPoint
]]--[[//
]]--[[// Commentaires: est-ce vraiment utile? Juste encapsulation
]]--[[//
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Obs_Pion_ABC_RenseignerSurPoint"
{
    feedbacks = { { { "done_BEH_Obs_Pion_ABC_RenseignerSurPoint" }, "BEH_Obs_Pion_ABC_RenseignerSurPoint" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Obs_Pion_ABC_RenseignerSurPoint, {value} ) end,
    activations =
    {
        { "ACT_Obs_ObserverPoint", { "done_ACT_Obs_ObserverPoint" } },
        { "ACT_Obs_EtablirVisionVersPt", { "done_ACT_Obs_EtablirVisionVersPt" } },
        { "ACT_Dep_SePoster", { "done_ACT_Dep_SePoster" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ptAObserver = self.params[1]
    end,

    activate = function( self )
        local Activate = Activate
        self.eEtat = self.eEtat or eActionEnCours
        if( DEC_Agent_NiveauInstallation() >= eNiveauInstallation_Poste ) then
            Activate( self.activations.ACT_Obs_ObserverPoint, 1, { self._namedParams.ptAObserver, } )
        end

        Activate( self.activations.ACT_Obs_EtablirVisionVersPt, 1, { self._namedParams.ptAObserver, } )
        Activate( self.activations.ACT_Dep_SePoster, 1, emptyTable )
    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_RenseignerSur, "BEH_Ordre_Inopine", nodes.BEH_Ordre_Inopine }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_RenseignerSur, "BEH_MAJ_Pion_ABC_AgressiviteTir", nodes.BEH_MAJ_Pion_ABC_AgressiviteTir }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_RenseignerSur, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_RenseignerSur, "ACT_Info_Trace", nodes.ACT_Info_Trace }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_RenseignerSur, "BEH_Dep_ProgressionVers", nodes.BEH_Dep_ProgressionVers }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_RenseignerSur, "BEH_Obs_Pion_ABC_RenseignerSurPoint", nodes.BEH_Obs_Pion_ABC_RenseignerSurPoint }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_ABC_RenseignerSur, "BEH_Dep_SePosterFaceADirectionDangereuse", nodes.BEH_Dep_SePosterFaceADirectionDangereuse }
connections[ #connections + 1 ] = { nodes.BEH_Obs_Pion_ABC_RenseignerSurPoint, "ACT_Obs_ObserverPoint", nodes.ACT_Obs_ObserverPoint }
connections[ #connections + 1 ] = { nodes.BEH_Obs_Pion_ABC_RenseignerSurPoint, "ACT_Obs_EtablirVisionVersPt", nodes.ACT_Obs_EtablirVisionVersPt }
connections[ #connections + 1 ] = { nodes.BEH_Obs_Pion_ABC_RenseignerSurPoint, "ACT_Dep_SePoster", nodes.ACT_Dep_SePoster }
