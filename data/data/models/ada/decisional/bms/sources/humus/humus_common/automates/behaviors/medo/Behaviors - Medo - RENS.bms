includedFiles = includedFiles or {}
includedFiles["sources/humus/humus_common/automates/behaviors/medo/Behaviors - Medo - RENS.bms"] = true

local emptyTable = emptyTable

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JCR 03-05-15 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Common/Automates/Behaviors/Medo/Behaviors - Medo - RENS.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 20/06/05 11:05 $
]]--[[// $Revision: 18 $
]]--[[// $Workfile: Behaviors - Medo - RENS.hal $
]]--[[//
]]--[[// *****************************************************************************
]]
include "Common/Automates/Actions/Medo/Actions - Medo - RENS.bms"


--[[//=============================================================================
]]--[[// Missions ROHUM
]]--[[//=============================================================================
]]--[[// *****************************************************************************
]]--[[// BEH_Mission_Automate_RENS_ROHUM_AssignerRenseignerA
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]node "BEH_Mission_Automate_RENS_ROHUM_AssignerRenseignerA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_RENS_ROHUM_AssignerRenseignerA" }, "BEH_Mission_Automate_RENS_ROHUM_AssignerRenseignerA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_RENS_ROHUM_AssignerRenseignerA, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_RENS_ROHUM_AssignerRenseignerA", { "done_ACT_Mission_Automate_RENS_ROHUM_AssignerRenseignerA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pion = self.params[2]
        self._namedParams.zone = self.params[3]
        self._namedParams.eEtatEchelon = self.params[4]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        Activate( self.activations.ACT_Mission_Automate_RENS_ROHUM_AssignerRenseignerA, rForce, { self._namedParams.ePhase, self._namedParams.pion, self._namedParams.zone, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_RENS_ROHUM_AssignerRenseignerA = function( self, _, v ) self.eActionCreation = v[1] end
    end,

--[[// *****************************************************************************
]]--[[// BEH_Mission_Automate_RENS_ROHUM_AssignerSExfiltrerA
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mission_Automate_RENS_ROHUM_AssignerSExfiltrerA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_RENS_ROHUM_AssignerSExfiltrerA" }, "BEH_Mission_Automate_RENS_ROHUM_AssignerSExfiltrerA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_RENS_ROHUM_AssignerSExfiltrerA, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_RENS_ROHUM_AssignerSExfiltrerA", { "done_ACT_Mission_Automate_RENS_ROHUM_AssignerSExfiltrerA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pion = self.params[2]
        self._namedParams.zone = self.params[3]
        self._namedParams.eEtatEchelon = self.params[4]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        Activate( self.activations.ACT_Mission_Automate_RENS_ROHUM_AssignerSExfiltrerA, rForce, { self._namedParams.ePhase, self._namedParams.pion, self._namedParams.zone, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_RENS_ROHUM_AssignerSExfiltrerA = function( self, _, v ) self.eActionCreation = v[1] end
    end,

--[[// *****************************************************************************
]]--[[// BEH_Mission_Automate_RENS_ROHUM_AssignerGuiderA
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mission_Automate_RENS_ROHUM_AssignerGuiderA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_RENS_ROHUM_AssignerGuiderA" }, "BEH_Mission_Automate_RENS_ROHUM_AssignerGuiderA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_RENS_ROHUM_AssignerGuiderA, {value} ) end,
    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pion = self.params[2]
        self._namedParams.pionAmi = self.params[3]
        self._namedParams.eEtatEchelon = self.params[4]
    end,

    activate = function( self )
        local Activate = Activate
    end,

--[[/*
	persistent E_EtatAction	eActionCreation = eActionEnCours;	float	   rForce = 1 / DIA_GetActivity();		switch ( eActionCreation )	{					case eActionEnCours:		{						action ACT_Mission_Automate_ControleCreation_EnCours() : strength = rForce;			break;		}		case eActionHalt:		case eActionImpossible:		{			action ACT_Mission_Automate_ControleCreation_NOK() : strength = rForce;			return;		}		case eActionEffectuee:		{			action ACT_Mission_Automate_ControleCreation_OK() : strength = -rForce;			return;		}	}	  action    
	ACT_Mission_Automate_RENS_ROHUM_AssignerSExfiltrerA( ePhase, pion, zone, eEtatEchelon )    return in eActionCreation : strength = rForce;
	*/]]--[[// A FAIRE
]]--[[//=============================================================================
]]--[[// Missions ROIM
]]--[[//=============================================================================
]]--[[// *****************************************************************************
]]--[[// BEH_Mission_Automate_RENS_ROIM_SDTI_AssignerREnseignerSur
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mission_Automate_RENS_ROIM_SDTI_AssignerRenseignerSur"
{
    feedbacks = { { { "done_BEH_Mission_Automate_RENS_ROIM_SDTI_AssignerRenseignerSur" }, "BEH_Mission_Automate_RENS_ROIM_SDTI_AssignerRenseignerSur" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_RENS_ROIM_SDTI_AssignerRenseignerSur, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_RENS_ROIM_SDTI_AssignerRenseignerSur", { "done_ACT_Mission_Automate_RENS_ROIM_SDTI_AssignerRenseignerSur" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pion = self.params[2]
        self._namedParams.ficelleDeVole = self.params[3]
        self._namedParams.eEtatEchelon = self.params[4]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        Activate( self.activations.ACT_Mission_Automate_RENS_ROIM_SDTI_AssignerRenseignerSur, rForce, { self._namedParams.ePhase, self._namedParams.pion, self._namedParams.ficelleDeVole, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_RENS_ROIM_SDTI_AssignerRenseignerSur = function( self, _, v ) self.eActionCreation = v[1] end
    end,

--[[// *****************************************************************************
]]--[[// BEH_Mission_Automate_RENS_ROIM_CL289_AssignerREnseignerSur
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mission_Automate_RENS_ROIM_CL289_AssignerRenseignerSur"
{
    feedbacks = { { { "done_BEH_Mission_Automate_RENS_ROIM_CL289_AssignerRenseignerSur" }, "BEH_Mission_Automate_RENS_ROIM_CL289_AssignerRenseignerSur" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_RENS_ROIM_CL289_AssignerRenseignerSur, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_RENS_ROIM_CL289_AssignerRenseignerSur", { "done_ACT_Mission_Automate_RENS_ROIM_CL289_AssignerRenseignerSur" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pion = self.params[2]
        self._namedParams.ficelleDeVole = self.params[3]
        self._namedParams.zonesDeRecherches = self.params[4]
        self._namedParams.eEtatEchelon = self.params[5]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        Activate( self.activations.ACT_Mission_Automate_RENS_ROIM_CL289_AssignerRenseignerSur, rForce, { self._namedParams.ePhase, self._namedParams.pion, self._namedParams.ficelleDeVole, self._namedParams.zonesDeRecherches, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_RENS_ROIM_CL289_AssignerRenseignerSur = function( self, _, v ) self.eActionCreation = v[1] end
    end,

--[[// *****************************************************************************
]]--[[// BEH_Mission_Automate_RENS_ROIM_AssignerMettreEnOeuvreA
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mission_Automate_RENS_ROIM_AssignerMettreEnOeuvreA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_RENS_ROIM_AssignerMettreEnOeuvreA" }, "BEH_Mission_Automate_RENS_ROIM_AssignerMettreEnOeuvreA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_RENS_ROIM_AssignerMettreEnOeuvreA, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_RENS_ROIM_AssignerMettreEnOeuvreA", { "done_ACT_Mission_Automate_RENS_ROIM_AssignerMettreEnOeuvreA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pionSMO = self.params[2]
        self._namedParams.position = self.params[3]
        self._namedParams.eEtatEchelon = self.params[4]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        --[[//=============================================================================
]]Activate( self.activations.ACT_Mission_Automate_RENS_ROIM_AssignerMettreEnOeuvreA, rForce, { self._namedParams.ePhase, self._namedParams.pionSMO, self._namedParams.position, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_RENS_ROIM_AssignerMettreEnOeuvreA = function( self, _, v ) self.eActionCreation = v[1] end
    end,

--[[// Missions ROEM
]]--[[//=============================================================================
]]--[[// *****************************************************************************
]]--[[// BEH_Mission_Automate_RENS_ROEM_AssignerAppuyerA
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mission_Automate_RENS_ROEM_AssignerAppuyerA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_RENS_ROEM_AssignerAppuyerA" }, "BEH_Mission_Automate_RENS_ROEM_AssignerAppuyerA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_RENS_ROEM_AssignerAppuyerA, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_RENS_ROEM_AssignerAppuyerA", { "done_ACT_Mission_Automate_RENS_ROEM_AssignerAppuyerA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pion = self.params[2]
        self._namedParams.positionDeploiement = self.params[3]
        self._namedParams.positionReplie = self.params[4]
        self._namedParams.eEtatEchelon = self.params[5]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        --[[// *****************************************************************************
]]Activate( self.activations.ACT_Mission_Automate_RENS_ROEM_AssignerAppuyerA, rForce, { self._namedParams.ePhase, self._namedParams.pion, self._namedParams.positionDeploiement, self._namedParams.positionReplie, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_RENS_ROEM_AssignerAppuyerA = function( self, _, v ) self.eActionCreation = v[1] end
    end,

--[[// BEH_Mission_Automate_RENS_ROEM_AssignerRenseignerA
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mission_Automate_RENS_ROEM_AssignerRenseignerA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_RENS_ROEM_AssignerRenseignerA" }, "BEH_Mission_Automate_RENS_ROEM_AssignerRenseignerA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_RENS_ROEM_AssignerRenseignerA, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_RENS_ROEM_AssignerRenseignerA", { "done_ACT_Mission_Automate_RENS_ROEM_AssignerRenseignerA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pion = self.params[2]
        self._namedParams.zone = self.params[3]
        self._namedParams.eEtatEchelon = self.params[4]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        --[[// *****************************************************************************
]]Activate( self.activations.ACT_Mission_Automate_RENS_ROEM_AssignerRenseignerA, rForce, { self._namedParams.ePhase, self._namedParams.pion, self._namedParams.zone, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_RENS_ROEM_AssignerRenseignerA = function( self, _, v ) self.eActionCreation = v[1] end
    end,

--[[// BEH_Mission_Automate_RENS_ROEM_AssignerRenseignerA
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mission_Automate_RENS_ROEM_AssignerMettreEnOeuvreA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_RENS_ROEM_AssignerMettreEnOeuvreA" }, "BEH_Mission_Automate_RENS_ROEM_AssignerMettreEnOeuvreA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_RENS_ROEM_AssignerMettreEnOeuvreA, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_RENS_ROEM_AssignerMettreEnOeuvreA", { "done_ACT_Mission_Automate_RENS_ROEM_AssignerMettreEnOeuvreA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pion = self.params[2]
        self._namedParams.positionDeploiement = self.params[3]
        self._namedParams.eEtatEchelon = self.params[4]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        Activate( self.activations.ACT_Mission_Automate_RENS_ROEM_AssignerMettreEnOeuvreA, rForce, { self._namedParams.ePhase, self._namedParams.pion, self._namedParams.positionDeploiement, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_RENS_ROEM_AssignerMettreEnOeuvreA = function( self, _, v ) self.eActionCreation = v[1] end
    end,

--[[//=============================================================================
]]--[[// Missions RADINT
]]--[[//=============================================================================
]]--[[// *****************************************************************************
]]--[[// BEH_Mission_Automate_RENS_RADINT_AssignerRenseignerA
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mission_Automate_RENS_RADINT_AssignerRenseignerA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_RENS_RADINT_AssignerRenseignerA" }, "BEH_Mission_Automate_RENS_RADINT_AssignerRenseignerA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_RENS_RADINT_AssignerRenseignerA, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_RENS_RADINT_AssignerRenseignerA", { "done_ACT_Mission_Automate_RENS_RADINT_AssignerRenseignerA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pion = self.params[2]
        self._namedParams.zone = self.params[3]
        self._namedParams.eEtatEchelon = self.params[4]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        --[[// *****************************************************************************
]]Activate( self.activations.ACT_Mission_Automate_RENS_RADINT_AssignerRenseignerA, rForce, { self._namedParams.ePhase, self._namedParams.pion, self._namedParams.zone, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_RENS_RADINT_AssignerRenseignerA = function( self, _, v ) self.eActionCreation = v[1] end
    end,

--[[// BEH_Mission_Automate_RENS_RADINT_AssignerMettreEnOeuvreA
]]--[[// 
]]--[[// Commentaires:
]]--[[//
]]--[[// *****************************************************************************
]]}

node "BEH_Mission_Automate_RENS_RADINT_AssignerMettreEnOeuvreA"
{
    feedbacks = { { { "done_BEH_Mission_Automate_RENS_RADINT_AssignerMettreEnOeuvreA" }, "BEH_Mission_Automate_RENS_RADINT_AssignerMettreEnOeuvreA" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Automate_RENS_RADINT_AssignerMettreEnOeuvreA, {value} ) end,
    activations =
    {
        { "ACT_Mission_Automate_ControleCreation_EnCours", { "done_ACT_Mission_Automate_ControleCreation_EnCours" } },
        { "ACT_Mission_Automate_ControleCreation_NOK", { "done_ACT_Mission_Automate_ControleCreation_NOK" } },
        { "ACT_Mission_Automate_ControleCreation_OK", { "done_ACT_Mission_Automate_ControleCreation_OK" } },
        { "ACT_Mission_Automate_RENS_RADINT_AssignerMettreEnOeuvreA", { "done_ACT_Mission_Automate_RENS_RADINT_AssignerMettreEnOeuvreA" } },
    },

    create = function( self )
        self._namedParams = {}
        self._namedParams.ePhase = self.params[1]
        self._namedParams.pion = self.params[2]
        self._namedParams.positionDeploiement = self.params[3]
        self._namedParams.eEtatEchelon = self.params[4]
    end,

    activate = function( self )
        local Activate = Activate
        self.eActionCreation = self.eActionCreation or eActionEnCours
        local rForce = 1 / GetActivity()
         do
            local _continue = true
            local switch_1 = self.eActionCreation
                if switch_1 == eActionEnCours then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_EnCours, rForce, emptyTable )
                    _continue = false
                elseif switch_1 == eActionHalt
                or switch_1 == eActionImpossible then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_NOK, rForce, emptyTable )
                                        do return end

                                end
                if switch_1 == eActionEffectuee then
                    Activate( self.activations.ACT_Mission_Automate_ControleCreation_OK, -rForce, emptyTable )
                                        do return end

                                end
            end

        Activate( self.activations.ACT_Mission_Automate_RENS_RADINT_AssignerMettreEnOeuvreA, rForce, { self._namedParams.ePhase, self._namedParams.pion, self._namedParams.positionDeploiement, self._namedParams.eEtatEchelon, } )
self.done_ACT_Mission_Automate_RENS_RADINT_AssignerMettreEnOeuvreA = function( self, _, v ) self.eActionCreation = v[1] end
    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_RADINT_AssignerMettreEnOeuvreA, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_RADINT_AssignerMettreEnOeuvreA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_RADINT_AssignerMettreEnOeuvreA, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_RADINT_AssignerMettreEnOeuvreA, "ACT_Mission_Automate_RENS_RADINT_AssignerMettreEnOeuvreA", nodes.ACT_Mission_Automate_RENS_RADINT_AssignerMettreEnOeuvreA }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_RADINT_AssignerRenseignerA, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_RADINT_AssignerRenseignerA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_RADINT_AssignerRenseignerA, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_RADINT_AssignerRenseignerA, "ACT_Mission_Automate_RENS_RADINT_AssignerRenseignerA", nodes.ACT_Mission_Automate_RENS_RADINT_AssignerRenseignerA }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROEM_AssignerAppuyerA, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROEM_AssignerAppuyerA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROEM_AssignerAppuyerA, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROEM_AssignerAppuyerA, "ACT_Mission_Automate_RENS_ROEM_AssignerAppuyerA", nodes.ACT_Mission_Automate_RENS_ROEM_AssignerAppuyerA }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROEM_AssignerMettreEnOeuvreA, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROEM_AssignerMettreEnOeuvreA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROEM_AssignerMettreEnOeuvreA, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROEM_AssignerMettreEnOeuvreA, "ACT_Mission_Automate_RENS_ROEM_AssignerMettreEnOeuvreA", nodes.ACT_Mission_Automate_RENS_ROEM_AssignerMettreEnOeuvreA }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROEM_AssignerRenseignerA, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROEM_AssignerRenseignerA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROEM_AssignerRenseignerA, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROEM_AssignerRenseignerA, "ACT_Mission_Automate_RENS_ROEM_AssignerRenseignerA", nodes.ACT_Mission_Automate_RENS_ROEM_AssignerRenseignerA }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROHUM_AssignerRenseignerA, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROHUM_AssignerRenseignerA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROHUM_AssignerRenseignerA, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROHUM_AssignerRenseignerA, "ACT_Mission_Automate_RENS_ROHUM_AssignerRenseignerA", nodes.ACT_Mission_Automate_RENS_ROHUM_AssignerRenseignerA }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROHUM_AssignerSExfiltrerA, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROHUM_AssignerSExfiltrerA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROHUM_AssignerSExfiltrerA, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROHUM_AssignerSExfiltrerA, "ACT_Mission_Automate_RENS_ROHUM_AssignerSExfiltrerA", nodes.ACT_Mission_Automate_RENS_ROHUM_AssignerSExfiltrerA }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROIM_AssignerMettreEnOeuvreA, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROIM_AssignerMettreEnOeuvreA, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROIM_AssignerMettreEnOeuvreA, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROIM_AssignerMettreEnOeuvreA, "ACT_Mission_Automate_RENS_ROIM_AssignerMettreEnOeuvreA", nodes.ACT_Mission_Automate_RENS_ROIM_AssignerMettreEnOeuvreA }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROIM_CL289_AssignerRenseignerSur, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROIM_CL289_AssignerRenseignerSur, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROIM_CL289_AssignerRenseignerSur, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROIM_CL289_AssignerRenseignerSur, "ACT_Mission_Automate_RENS_ROIM_CL289_AssignerRenseignerSur", nodes.ACT_Mission_Automate_RENS_ROIM_CL289_AssignerRenseignerSur }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROIM_SDTI_AssignerRenseignerSur, "ACT_Mission_Automate_ControleCreation_EnCours", nodes.ACT_Mission_Automate_ControleCreation_EnCours }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROIM_SDTI_AssignerRenseignerSur, "ACT_Mission_Automate_ControleCreation_NOK", nodes.ACT_Mission_Automate_ControleCreation_NOK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROIM_SDTI_AssignerRenseignerSur, "ACT_Mission_Automate_ControleCreation_OK", nodes.ACT_Mission_Automate_ControleCreation_OK }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Automate_RENS_ROIM_SDTI_AssignerRenseignerSur, "ACT_Mission_Automate_RENS_ROIM_SDTI_AssignerRenseignerSur", nodes.ACT_Mission_Automate_RENS_ROIM_SDTI_AssignerRenseignerSur }
