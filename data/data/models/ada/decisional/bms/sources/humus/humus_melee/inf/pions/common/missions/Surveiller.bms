includedFiles = includedFiles or {}
includedFiles["sources/humus/humus_melee/inf/pions/common/missions/Surveiller.bms"] = true

local emptyTable = emptyTable

--[[// *****************************************************************************
]]--[[//
]]--[[// $Created: JCR 03-02-20 $
]]--[[// $Archive: /MVW_v10/Build/Data/Data/Modeles/Sources/Melee/Inf/Pions/Common/Missions/Surveiller.hal $
]]--[[// $Author: Ggr $
]]--[[// $Modtime: 29/08/05 14:44 $
]]--[[// $Revision: 21 $
]]--[[// $Workfile: Surveiller.hal $
]]--[[//
]]--[[// *****************************************************************************
]]

node "BEH_Mission_Pion_INF_SurveillerSecteur"
{
    feedbacks = { { { "done_BEH_Mission_Pion_INF_SurveillerSecteur" }, "BEH_Mission_Pion_INF_SurveillerSecteur" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Mission_Pion_INF_SurveillerSecteur, {value} ) end,
    activations =
    {
        { "BEH_Lima_Pion_RejoindreFuseau_EnAttente", { "done_BEH_Lima_Pion_RejoindreFuseau_EnAttente" } },
        { "BEH_Mot_Pion_Embarquer", { "done_BEH_Mot_Pion_Embarquer" } },
        { "BEH_Dep_Pion_INF_MiseEnPlace_Mission", { "done_BEH_Dep_Pion_INF_MiseEnPlace_Mission" } },
        { "ACT_Dep_PasserEnModeFurtif", { "done_ACT_Dep_PasserEnModeFurtif" } },
        { "BEH_Progression_Pion_INF_AborderObjectif", { "done_BEH_Progression_Pion_INF_AborderObjectif" } },
        { "ACT_RC", { "done_ACT_RC" } },
        { "ACT_MAJ_EtatPhaseMission", { "done_ACT_MAJ_EtatPhaseMission" } },
        { "BEH_Obj_RejoindreEmbossements", { "done_BEH_Obj_RejoindreEmbossements" } },
        { "BEH_MOT_Pion_INF_Debarquer", { "done_BEH_MOT_Pion_INF_Debarquer" } },
        { "ACT_Misc_Pion_Ambiance", { "done_ACT_Misc_Pion_Ambiance" } },
        { "ACT_Misc_Pion_DelaiInstallation", { "done_ACT_Misc_Pion_DelaiInstallation" } },
        { "BEH_MOT_DesactiveSauvegarde", { "done_BEH_MOT_DesactiveSauvegarde" } },
        { "ACT_Obs_EtablirVisionFaceADir", { "done_ACT_Obs_EtablirVisionFaceADir" } },
        { "ACT_Dep_Pion_INF_ActiverFurtivite", { "done_ACT_Dep_Pion_INF_ActiverFurtivite" } },
        { "ACT_Obs_ObserverZone", { "done_ACT_Obs_ObserverZone" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        self.mission = self.mission or DEC_GetMission( myself )
        self.ePhase = self.ePhase or eSeMettreEnPlace
        self.eAction = self.eAction or eActionEnCours
        self.ptMission = self.ptMission or self.mission.positionInstallation_
        self.ptFoo = self.ptFoo or 0
        if( S_RapForLocal() == eEtatRapportDeForce_Favorable ) then
            do
                if( ModuleBegins() ) then
                    do
                        if( F_Pion_GeteEtatEchelon( myself ) == eEtatEchelon_Premier ) then
                            StartActivateOverride( self, self.activations.BEH_Lima_Pion_RejoindreFuseau_EnAttente, 1.1, emptyTable )
                        end

                    end
                end

                do
                end

                 do
                    local _continue = true
                    local switch_1 = self.ePhase
                    local cases_switch_1 = {}
                        if switch_1 == eSeMettreEnPlace then
                            --[[// On va se mettre en position en restant sur nos garde
]]if( self.eAction == eActionEffectuee ) then
                                do
                                    self.eAction = eActionEnCours
                                                                        do
                                        self.ePhase = eAborderObjectif
                                                                                self:SendFeedback( self.ePhase )
                                        do return end

                                    end

                                end
                            end

                            Activate( self.activations.BEH_Mot_Pion_Embarquer, 1, emptyTable )
                            --[[// Rejoins une position d'observation de la position a Barrer
]]Activate( self.activations.BEH_Dep_Pion_INF_MiseEnPlace_Mission, 1, { M_TEMPS_PREPARATION_MISSION(), self.mission.positionInstallation_, false, } )
self.done_BEH_Dep_Pion_INF_MiseEnPlace_Mission = function( self, _, v ) self.eAction = v[1] end
                            _continue = false
                                                cases_switch_1[1] = true
elseif switch_1 == eAborderObjectif then
                            StartActivateOverride( self, self.activations.ACT_Dep_PasserEnModeFurtif, 1, emptyTable )
                            if( self.eAction == eActionEffectuee ) then
                                do
                                    self.eAction = eActionEnCours
                                                                        do
                                        self.ePhase = eInstallerDispositif
                                    end

                                end
                            else
do
                                    Activate( self.activations.BEH_Progression_Pion_INF_AborderObjectif, 1, { self.ptMission, } )
self.done_BEH_Progression_Pion_INF_AborderObjectif = function( self, _, v ) self.eAction = v[1] end
                                                                        do return end

                                end
                            end

                                                cases_switch_1[2] = true
                        end
                        if cases_switch_1[2] or switch_1 == eInstallerDispositif then
                            Activate( self.activations.ACT_RC, 1, { eRC_ArriveSurPosition, } )
                            Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_InstallationDispositif, } )
                            StartActivateOverride( self, self.activations.BEH_Obj_RejoindreEmbossements, 1.2, emptyTable )
                            StartActivateOverride( self, self.activations.BEH_MOT_Pion_INF_Debarquer, 1, emptyTable )
                            StartActivateOverride( self, self.activations.ACT_Misc_Pion_Ambiance, 1, { eEtatAmbiance_Surete, } )
                            --[[// Prepare la mission de surveillance
]]if( self.eAction == eActionEffectuee ) then
                                do
                                    self.eAction = eActionEnCours
                                                                        do
                                        Activate( self.activations.ACT_RC, 1, { eRC_FinInstallation, } )
                                        self.ePhase = eSurveiller
                                                                                self:SendFeedback( self.ePhase )
                                        do return end

                                    end

                                end
                            end

                            Activate( self.activations.ACT_Misc_Pion_DelaiInstallation, 1, { eNiveauInstallation_PosteAmenage, } )
self.done_ACT_Misc_Pion_DelaiInstallation = function( self, _, v ) self.eAction = v[1] end
                            _continue = false
                                                cases_switch_1[3] = true
elseif switch_1 == eSurveiller then
                            Activate( self.activations.ACT_MAJ_EtatPhaseMission, 1, { eEtatPhaseMission_EnSurveillance, } )
                            Activate( self.activations.BEH_MOT_DesactiveSauvegarde, 1, emptyTable )--[[// On desactive la sauvegarde pendant la phase de surveillance
]]
                            --[[// Se tourne vers les ennemis
]]Activate( self.activations.ACT_Obs_EtablirVisionFaceADir, 1, { DEC_GetDirectionDanger( self.mission ), } )
                            --[[// Reste discret
]]Activate( self.activations.ACT_Dep_Pion_INF_ActiverFurtivite, 1.2, { 0.1, } )
                            Activate( self.activations.ACT_Obs_ObserverZone, 1, { DEC_Agent_Position(), M_CAPACITE_SURVEILLANCE(), } )
                            if( not S_Geometrie_EstProchePosition( self.ptMission, DEC_Agent_Position(), 1000 ) ) then
                                do
                                    self.eAction = eActionEnCours
                                    self.ePhase = eAborderObjectif
                                end
                            end

                            _continue = false
                                                cases_switch_1[4] = true

                        else
                                                end
                    end

                                self:SendFeedback( self.ePhase )
                do return end

            end
--[[//Rapport de force défavorable ou neutre => se replier
]]        else
do
                DEC_Trace( "Rapport de force défavorable - Repli sur la zone de regroupement" )
                self.ePhase = eSeReplier
            end
        end

    end,

}

node "BEH_Eni_Pion_INF_SurveillerSecteur"
{
    feedbacks = { { { "done_BEH_Eni_Pion_INF_SurveillerSecteur" }, "BEH_Eni_Pion_INF_SurveillerSecteur" } },
    SendFeedback = function( self, value ) Feedback( self.feedbacks.done_BEH_Eni_Pion_INF_SurveillerSecteur, {value} ) end,
    activations =
    {
        { "ACT_RC", { "done_ACT_RC" } },
        { "BEH_Manoeuvre_RompreContact", { "done_BEH_Manoeuvre_RompreContact" } },
    },

    create = function( self )
    end,

    activate = function( self )
        local Activate = Activate
        local lstEnisPercus = DEC_Connaissances_UnitesEnnemiesVivantesPercuesDansFuseau()
        for _,ksEni in pairs( lstEnisPercus or emptyTable ) do
        local _continue = true
do
                if( S_Tir_EstAPorteePosturesReelles( ksEni, GetStateVariable( "VE_Agressivite_Tir" ) ) ) then
                    StartActivateOverride( self, self.activations.ACT_RC, 1, { eRC_PretPourEngagementSurEnnemi, } )
                end

            end

        end

        if( S_EstDetecteParEnis() ) then
            Activate( self.activations.BEH_Manoeuvre_RompreContact, 2, emptyTable )
        end

    end,

}

connections = connections or {}
connections[ #connections + 1 ] = { nodes.BEH_Eni_Pion_INF_SurveillerSecteur, "ACT_RC", nodes.ACT_RC }
connections[ #connections + 1 ] = { nodes.BEH_Eni_Pion_INF_SurveillerSecteur, "BEH_Manoeuvre_RompreContact", nodes.BEH_Manoeuvre_RompreContact }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_SurveillerSecteur, "BEH_Lima_Pion_RejoindreFuseau_EnAttente", nodes.BEH_Lima_Pion_RejoindreFuseau_EnAttente }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_SurveillerSecteur, "BEH_Mot_Pion_Embarquer", nodes.BEH_Mot_Pion_Embarquer }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_SurveillerSecteur, "BEH_Dep_Pion_INF_MiseEnPlace_Mission", nodes.BEH_Dep_Pion_INF_MiseEnPlace_Mission }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_SurveillerSecteur, "ACT_Dep_PasserEnModeFurtif", nodes.ACT_Dep_PasserEnModeFurtif }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_SurveillerSecteur, "BEH_Progression_Pion_INF_AborderObjectif", nodes.BEH_Progression_Pion_INF_AborderObjectif }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_SurveillerSecteur, "ACT_RC", nodes.ACT_RC }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_SurveillerSecteur, "ACT_MAJ_EtatPhaseMission", nodes.ACT_MAJ_EtatPhaseMission }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_SurveillerSecteur, "BEH_Obj_RejoindreEmbossements", nodes.BEH_Obj_RejoindreEmbossements }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_SurveillerSecteur, "BEH_MOT_Pion_INF_Debarquer", nodes.BEH_MOT_Pion_INF_Debarquer }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_SurveillerSecteur, "ACT_Misc_Pion_Ambiance", nodes.ACT_Misc_Pion_Ambiance }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_SurveillerSecteur, "ACT_Misc_Pion_DelaiInstallation", nodes.ACT_Misc_Pion_DelaiInstallation }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_SurveillerSecteur, "BEH_MOT_DesactiveSauvegarde", nodes.BEH_MOT_DesactiveSauvegarde }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_SurveillerSecteur, "ACT_Obs_EtablirVisionFaceADir", nodes.ACT_Obs_EtablirVisionFaceADir }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_SurveillerSecteur, "ACT_Dep_Pion_INF_ActiverFurtivite", nodes.ACT_Dep_Pion_INF_ActiverFurtivite }
connections[ #connections + 1 ] = { nodes.BEH_Mission_Pion_INF_SurveillerSecteur, "ACT_Obs_ObserverZone", nodes.ACT_Obs_ObserverZone }
