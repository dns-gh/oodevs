// *****************************************************************************
//
// $Created: JVT 2004-08-03 $
// $Archive: /MVW_v10/Build/Data Test/Data/Modeles/Sources/Common/Moteur/Types_Enums.hal $
// $Author: Nld $
// $Modtime: 29/07/05 12:19 $
// $Revision: 17 $
// $Workfile: Types_Enums.hal $
//
// *****************************************************************************

typedef enum E_ValiditeRequete
{
	eRequeteValide,
	eRequeteInvalide // Connaissance inexistante
};	 

typedef enum E_Tristate
{
    eTristate_True = 0,
    eTristate_False,
    eTristate_DontKnow,
};

typedef enum E_TypeLima
{
    eTypeLima_LD,    // Ligne de débouché
    eTypeLima_LCA,   // Ligne de changement d'attitude
    eTypeLima_LC,    // Ligne de coordination
    eTypeLima_LI,    // Ligne à interdire
    eTypeLima_LO,    // Ligne d'objectif
    eTypeLima_LCAR,  // Ligne de coup d'arrêt
    eTypeLima_LR,    // Ligne de recueil
    eTypeLima_LDM,   // Ligne de début de mission
    eTypeLima_LFM,   // Ligne de fin de mission
    eTypeLima_LIA    // Ligne d'identification et de recueil
};

typedef enum E_AmbianceMission
{
    eAmbianceMission_Surete,
    eAmbianceMission_Vitesse
};


// -----------------------------------------------------------------------------
// Retours de fonctions
// -----------------------------------------------------------------------------
typedef enum E_LocalisationFunctionsReturnCode
{
    eError_PionsPasDansMemeFuseau,
    eError_LocalisationPasDansFuseau,
    eWarning_DecoupageIncomplet,
    eNoError
};

// -----------------------------------------------------------------------------
// Etat entité
// -----------------------------------------------------------------------------
typedef enum E_DisponibiliteAuTir
{
    eDisponibiliteAuTir_None,
    eDisponibiliteAuTir_PretAuTir,
    eDisponibiliteAuTir_Indisponible    
};

typedef enum E_EtatOperationnel
{
    eEtatOp_DetruitTotalement,
    eEtatOp_DetruitTactiquement,
    eEtatOp_Operationnel
};

typedef enum E_EtatRapportDeForce
{
    eEtatRapportDeForce_None,
    eEtatRapportDeForce_Neutre,
    eEtatRapportDeForce_Favorable,
    eEtatRapportDeForce_Defavorable
};

typedef enum E_EtatROE
{
    eEtatROE_None,
    eEtatROE_TirLibre,
    eEtatROE_TirSurRiposte,
    eEtatROE_TirInterdit
};

typedef enum E_EtatROEPopulation
{
    eEtatROEPopulation_None,
    eEtatROEPopulation_EmploiForceInterdit,
    eEtatROEPopulation_MaintienADistanceParMoyensNonLetaux,
    eEtatROEPopulation_DispersionParMoyensDeDefenseActifs,
    eEtatROEPopulation_ArmesLetalesAutorisees    
};

typedef enum E_AttitudePopulation
{
    eAttitudePopulation_Calme,
    eAttitudePopulation_Agitee,
    eAttitudePopulation_Excitee,
    eAttitudePopulation_Agressive
};

typedef enum E_EtatCombatDeRencontre
{
    eEtatCombatDeRencontre_None,
    eEtatCombatDeRencontre_Esquive,
    eEtatCombatDeRencontre_Fixe,
    eEtatCombatDeRencontre_PoursuiteMission
};

typedef enum E_NiveauPerception
{
    eSignale    = 0,
    eDetecte    = 1,
    eReconnu    = 2,
    eIdentifie  = 3    
};

typedef enum E_NatureAtlasType
{
    eNatureAtlas_Blinde         = 32768, // NB : valeurs imposées par l'ASN
    eNatureAtlas_ASS            = 16384,
    eNatureAtlas_PC             = 8192,
    eNatureAtlas_Log            = 4096,
    eNatureAtlas_Mortier        = 2048,
    eNatureAtlas_LanceRoquette  = 1024,
    eNatureAtlas_Vehicule       = 512,
    eNatureAtlas_PersonnelAPied = 256,
    eNatureAtlas_Helicoptere    = 128,
    eNatureAtlas_Indefini       = 64,
    eNatureAtlas_ASA            = 32,
    eNatureAtlas_None           = 16,

};

typedef enum E_EtatNiveauInstallation
{
    eNiveauInstallation_Mouvement        ,
    eNiveauInstallation_MouvementDiscret ,
    eNiveauInstallation_Arret            ,
    eNiveauInstallation_PosteReflexe     ,
    eNiveauInstallation_Poste            ,
    eNiveauInstallation_PosteAmenage     ,
    eNiveauInstallation_PostePrepareGenie,
};

// -----------------------------------------------------------------------------
// Facteurs humains
// -----------------------------------------------------------------------------
typedef enum E_FacteurHumain_Fatigue
{
    eFatigue_Normal,
    eFatigue_Fatigue,
    eFatigue_Epuise
};

typedef enum E_FacteurHumain_Moral
{
    eMoral_Fanatique,
    eMoral_Bon,
    eMoral_Moyen,
    eMoral_Mauvais
};

typedef enum E_FacteurHumain_Experience
{
   eExperience_Veteran,
   eExperience_Experimente,
   eExperience_Conscrit
};

// -----------------------------------------------------------------------------
// Logistique
// -----------------------------------------------------------------------------

typedef enum E_MaintenanceRegimeTravail
{
    eMaintenance_R1,
    eMaintenance_R2,
    eMaintenance_R3,
    eMaintenance_R4
};

// -----------------------------------------------------------------------------
// Radars
// -----------------------------------------------------------------------------
typedef enum E_RadarType
{
    eRadarType_Radar,
    eRadarType_Ecoute,
    eRadarType_EcouteRadar
};

// -----------------------------------------------------------------------------
// Dotations
// -----------------------------------------------------------------------------
typedef enum E_TypeObus
{
    eObus_Explosif,
    eObus_Grenade,
    eObus_ACED,
    eObus_Fumigenes,
    eObus_Eclairant,
    eObus_Mine
};

typedef enum E_DotationMunitionClasse
{
    eMunitionClasse_Obus,
    eMunitionClasse_MissileSol,
    eMunitionClasse_MissileAir,
    eMunitionClasse_Mitraille
};

typedef enum E_TypeDotation
{
    eDotation_Munition,
    eDotation_Carburant,
    eDotation_Explosif,
    eDotation_Mine,    
    eDotation_Barbele,
    eDotation_Piece,
    eDotation_Ration
};

