// *****************************************************************************
//
// $Created: JVT 2004-08-03 $
// $Archive: /MVW_v10/Build/Data Test/Data/Modeles/Sources/Common/Moteur/Types_Actions.hal $
// $Author: Jvt $
// $Modtime: 2/05/05 11:31 $
// $Revision: 6 $
// $Workfile: Types_Actions.hal $
//
// *****************************************************************************

typedef enum E_EtatActionTransport
{
    eActionTransport_Running,
    eActionTransport_Finished,
    eActionTransport_Impossible
};

typedef enum E_EtatActionObjet
{
    eActionObjetEnCours,        // -> l'action est en cours d'exécution
    eActionObjetTerminee,       // -> l'action est terminée
    eActionObjetImpossible,     // -> l'action est impossible (cas arrivant, par exemple, quand un essaye de valoriser un objet qui ne peut pas l'être)
    eActionObjetManqueDotation, // -> l'action est arrêtée car l'unité ne posséde pas assez de dotations (mines, explosifs ...) pour la mener à bien
    eActionObjetPasDeCapacite   // -> l'action est arrêtée car l'unité ne posséde pas les capacités pour l'effectuer
};

typedef enum E_ModeTirDirect
{
    eTirDirectNormal,
    eTirDirectLibre
};

typedef enum E_EtatActionTirDirect
{
    eActionTirDirect_Impossible,
    eActionTirDirect_EnemyDestroyed , // -> le tir est terminé parceque le pion adverse est détruit
    eActionTirDirect_NoCapacity     , // -> le tir est terminé car il ne reste aucune composante ayant la capacité de tirer
    eActionTirDirect_NoAmmo         , // -> le tir est terminé parque qu'il reste des composante capables de tirer mais qu'il ne reste plus de munition adéquates
    eActionTirDirect_Running        , // -> le tir est en cours d'exécution
    eActionTirDirect_Finished       , // Stop tir
    eActionTirDirect_None             // Utilisé comme valeur par défaut par les scripts
};

typedef enum E_EtatActionTirIndirect
{
    eActionTirIndirect_EnCours,       
    eActionTirIndirect_PasDeCapacite, 
    eActionTirIndirect_Termine,
    eActionTirIndirect_Impossible,
    eActionTirIndirect_NoAmmo,
    eActionTirIndirect_None             // Utilisé comme valeur par défaut par les scripts
};

typedef enum E_EtatActionDeplacement
{
    eEtatActionDeplacement_EnCours,
    eEtatActionDeplacement_Termine,
    eEtatActionDeplacement_Pause,
    eEtatActionDeplacement_ManqueCarburant,
    eEtatActionDeplacement_NonAutorise,
    eEtatActionDeplacement_DejaEnDeplacement,
    eEtatActionDeplacement_ItineraireDoitEtreRejoint
};

typedef enum E_EtatActionEmbarquerDebarquer
{
    eActionEmbDeb_EnCours,
    eActionEmbDeb_Termine,
    eActionEmbDeb_PasDeTransporteurs,
    eActionEmbDeb_PasDeTransportes,
    eActionEmbDeb_ErreurEmbDebEnMemeTemps
};
