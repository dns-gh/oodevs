// *******************************************************************************************
// Pion mission types for DirectIA
// Created : 
// *******************************************************************************************


typedef struct T_Mission_Pion_LOG_SeDeployer : T_Mission_Pion
{
T_Point positionDeploiement_;
};

typedef struct T_Mission_Pion_LOG_Renforcer : T_Mission_Pion
{
T_Point lieuRenforcement_;
T_Automate automate_;
};

typedef struct T_Mission_Pion_LOG_PreparerBascule : T_Mission_Pion
{
T_Automate automatePourBascule_;
bool resterSurPlace_;
};

typedef struct T_Mission_Pion_LOG_DecontaminerBlesses : T_Mission_Pion
{
T_Point positionDeploiement_;
};

typedef struct T_Mission_Pion_LOG_TrierEtTraiterBlesses : T_Mission_Pion
{
T_SantePriorites blessuresTraitees_;
T_Point positionDeploiement_;
};

typedef struct T_Mission_Pion_LOG_TrierBlesses : T_Mission_Pion
{
T_Point positionDeploiement_;
};

typedef struct T_Mission_Pion_LOG_TraiterBlesses : T_Mission_Pion
{
T_SantePriorites blessuresTraitees_;
T_Point positionDeploiement_;
};

typedef struct T_Mission_Pion_LOG_PrendreEnCompteReactionsMentales : T_Mission_Pion
{
T_Point positionDeploiement_;
};

typedef struct T_Mission_Pion_LOG_Convoyer : T_Mission_Pion
{
};

typedef struct T_Mission_Pion_LOG_Reparer : T_Mission_Pion
{
T_Point positionDeploiement_;
};


typedef struct T_Mission_Pion_Test_Heliporter : T_Mission_Pion
{
T_ListePions agents_;
T_Point pointEmbarquement_;
T_Point pointDebarquement_;
};

typedef struct T_Mission_Pion_Test_MoveTo : T_Mission_Pion
{
T_ListePoints itineraire_;
id typeItineraire_;
bool debarque_;
id verrouillageVision_;
T_Point visionPoint_;
T_Direction visionDirection_;
};

typedef struct T_Mission_Pion_Test_CreateObject : T_Mission_Pion
{
T_Localisation forme_;
id type_;
float param1_;
float param2_;
};

typedef struct T_Mission_Pion_Test_DestroyObject : T_Mission_Pion
{
T_ConnaissanceObjet objet_;
};

typedef struct T_Mission_Pion_Test_CreateBypass : T_Mission_Pion
{
T_ConnaissanceObjet objet_;
};

typedef struct T_Mission_Pion_Test_Fire : T_Mission_Pion
{
T_Point point_;
bool tirIndirect_;
T_Dotation munitions_;
float nbIt_;
T_ListeConnaissancesAgent targets_;
};

typedef struct T_Mission_Pion_Test_ChangePosture : T_Mission_Pion
{
id posture_;
};

typedef struct T_Mission_Pion_Test_PathFind : T_Mission_Pion
{
float nbPathfind_;
};

typedef struct T_Mission_Pion_Test_FindPosition : T_Mission_Pion
{
T_Point point_;
T_Point retreat_;
T_ListePions unite_;
id typeObjectif_;
id typeOperation_;
bool avoid_;
bool reco_;
bool noObstacleAvoid_;
bool debordement_;
bool decPoints_;
id niveauIdentification_;
T_Direction dgo_;
};

typedef struct T_Mission_Pion_Test_Reinforce : T_Mission_Pion
{
T_Pion unite_;
bool renforce_;
};

typedef struct T_Mission_Pion_CanaliserPopulations : T_Mission_Pion
{
T_Localisation zone_;
};


typedef struct T_Mission_Pion_PrendreEnComptePrisonniers : T_Mission_Pion
{
T_ListeConnaissancesAgent unitesRendues_;
T_ConnaissanceObjet campPrisonniers_;
};

typedef struct T_Mission_Pion_OrienterRefugies : T_Mission_Pion
{
T_ListeConnaissancesAgent refugies_;
T_ConnaissanceObjet campRefugies_;
};

typedef struct T_Mission_Pion_Test_All : T_Mission_Pion 
{
    T_Pion agent_;
    T_ListePions agentList_;
    T_Automate automate_;
    T_ListeAutomates automateList_;
    E_NatureAtlasType natureAtlas_;
    T_ConnaissanceAgent agentKnowledge_;
    T_ListeConnaissancesAgent agentKnowledgeList_;
    T_ConnaissanceObjet objectKnowledge_;
    T_ListeConnaissancesObjet objectKnowledgeList_;
    T_ConnaissancePopulation populationKnowledge_;
    T_GenObjet genObject_;
    T_ListeGenObjets genObjectList_;
    T_ListePoints path_;
    T_ListeListesPoints pathList_;
    T_Point point_;
    T_ListePoints pointList_;
    T_Localisation polygon_;
    T_ListeLocalisations polygonList_;
    T_Localisation location_;
    T_ListeLocalisations locationList_;
    T_Dotation dotationType_;
};



