// *****************************************************************************
//
// $Created: JVT 2004-08-03 $
// $Archive: /MVW_v10/Build/Data Test/Data/Modeles/Sources/Common/Moteur/Types_PathFind.hal $
// $Author: Nld $
// $Modtime: 12/05/05 15:06 $
// $Revision: 6 $
// $Workfile: Types_PathFind.hal $
//
// *****************************************************************************

//-----------------------------------------------------------------------------
// Types d'itinéraires
//-----------------------------------------------------------------------------
typedef enum E_TypeItineraire
{
    eTypeItiMouvement,
    eTypeItiReconnaissance,
    eTypeItiInfiltration,
    eTypeItiAttaque,
    eTypeItiRepli,
    eTypeItiAppui,
    eTypeItiDeminage,
    eTypeItiLogistique
};

//-----------------------------------------------------------------------------
// Types de Terrain
//-----------------------------------------------------------------------------
typedef enum E_EtatCalculItineraire
{
    eItineraire_Invalide       = 0,         // chemin non valide
    eItineraire_CalculEnCours = 1,          // chemin dont le calcul est en cours
    eItineraire_Valide = 2,                 // chemin valide
    eItineraire_Impossible = 4,             // chemin impossible
    eItineraire_Partiel= 8,                 // chemin partiel
    eItineraire_Annule = 16                 // chemin annulé
};

//============================================================================
// POINTS
//============================================================================

//-----------------------------------------------------------------------------
// Types de point
//-----------------------------------------------------------------------------
typedef enum E_TypePoint
{
    eTypePointNormal        = 1,    // défaut
    eTypePointObservation   = 2,    // point d'observation
    eTypePointParticulier   = 4,    // point particulier
    eTypePointBond          = 8,    // point de limite de bond
    eTypePointLima          = 16,   // point sur une lima
    eTypePointSonde         = 32,   // point necessitant coup de sonde 
    eTypePointCCT           = 64    // point de changement de compartiment terrain
};


//-----------------------------------------------------------------------------
// Types de point particulier
//-----------------------------------------------------------------------------
typedef enum E_TypePointParticulier
{
    eTypePointParticulierPont       =1,         // un pont
    eTypePointParticulierCarrefour  =2,         // un carrefour
    eTypePointParticulierVillage    =4,         // un village
    eTypePointParticulierPointRoute =8,         // un point specifique d'une route
    eTypePointParticulierForet      =16         // une zone forestiere
};


//=============================================================================
// Representation des points terrains perçu : ponts, villages, carrefours ...
//============================================================================= 

typedef struct Rep_PointABC : Thing
{
};


//-----------------------------------------------------------------------------
// Representation d' un point
//-----------------------------------------------------------------------------
typedef struct Rep_Point : Rep_PointABC
{
};

//-----------------------------------------------------------------------------
// Representation d'un point avant un point
//-----------------------------------------------------------------------------
typedef struct Rep_AvantPoint : Rep_PointABC
{
};

//-----------------------------------------------------------------------------
// Representation générale d'un point particulier
//-----------------------------------------------------------------------------
typedef struct Rep_PointParticulier : Rep_Point
{
};

//-----------------------------------------------------------------------------
// Representation générale d'un point sur lima
//-----------------------------------------------------------------------------
typedef struct Rep_PointLima : Rep_Point
{
};

