/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 5.31, Date: 11-Apr-2007.
 */
#ifndef BASE_H
#define BASE_H

#include <stdio.h>
#include <stdlib.h>
#include "asn1per.h"
#include "asn1PerCppTypes.h"
#include "ASN1CBitStr.h"

/**************************************************************/
/*                                                            */
/*  BaseIncludes                                              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_BaseIncludes {
   ASN1OCTET __dummy__;
} ASN1T_BaseIncludes;

class EXTERN ASN1C_BaseIncludes : public ASN1CType {
public:
   ASN1T_BaseIncludes& msgData;
   ASN1C_BaseIncludes (
      ASN1MessageBuffer& msgBuf, ASN1T_BaseIncludes& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_BaseIncludes (ASN1CTXT* ctxt_p, ASN1T_BaseIncludes* pvalue);
EXTERN int asn1PD_BaseIncludes (ASN1CTXT* ctxt_p, ASN1T_BaseIncludes* pvalue);

EXTERN void asn1Print_BaseIncludes (ASN1ConstCharPtr name, ASN1T_BaseIncludes* pvalue);

/**************************************************************/
/*                                                            */
/*  BaseExports                                               */
/*                                                            */
/**************************************************************/

class EXTERN ASN1C_BaseExports : public ASN1CType {
public:
   ASN1C_BaseExports (
      ASN1MessageBuffer& msgBuf);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_BaseExports (ASN1CTXT* ctxt_p);
EXTERN int asn1PD_BaseExports (ASN1CTXT* ctxt_p);

EXTERN void asn1Print_BaseExports (ASN1ConstCharPtr name);

/**************************************************************/
/*                                                            */
/*  EnumTypeLocalisation                                      */
/*                                                            */
/**************************************************************/

struct EXTERN EnumTypeLocalisation {
   enum Root {
      circle = 0,
      ellipse = 1,
      line = 2,
      polygon = 3,
      point = 4,
      sector = 5
   } ;
} ;

typedef EnumTypeLocalisation::Root ASN1T_EnumTypeLocalisation;

class EXTERN ASN1C_EnumTypeLocalisation : public ASN1CType {
public:
   ASN1T_EnumTypeLocalisation& msgData;
   ASN1C_EnumTypeLocalisation (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumTypeLocalisation& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumTypeLocalisation (ASN1CTXT* ctxt_p, ASN1T_EnumTypeLocalisation value);
EXTERN int asn1PD_EnumTypeLocalisation (ASN1CTXT* ctxt_p, ASN1T_EnumTypeLocalisation* pvalue);

EXTERN void asn1Print_EnumTypeLocalisation (ASN1ConstCharPtr name, ASN1T_EnumTypeLocalisation* pvalue);

/**************************************************************/
/*                                                            */
/*  CoordUTM                                                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_CoordUTM {
   ASN1UINT numocts;
   ASN1OCTET data[15];
   // ctors
   ASN1T_CoordUTM () : numocts(0) {}
   ASN1T_CoordUTM (ASN1UINT _numocts, const ASN1OCTET* _data) :
      numocts(_numocts) {
      memcpy (data, _data, numocts);
   }
   ASN1T_CoordUTM (const char* cstring) {
      if (strlen(cstring) > 0) {
         numocts = MIN ((strlen(cstring)+1), sizeof(data));
         strncpy ((char*)data, cstring, sizeof(data));
      }
      else numocts = 0;
   }
   // assignment operators
   ASN1T_CoordUTM& operator= (const char* cstring) {
      if (strlen(cstring) > 0) {
         numocts = MIN ((strlen(cstring)+1), sizeof(data));
         strncpy ((char*)data, cstring, sizeof(data));
      }
      else numocts = 0;
      return *this;
   }
} ASN1T_CoordUTM;

class EXTERN ASN1C_CoordUTM : public ASN1CType {
public:
   ASN1T_CoordUTM& msgData;
   ASN1C_CoordUTM (
      ASN1MessageBuffer& msgBuf, ASN1T_CoordUTM& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_CoordUTM (ASN1CTXT* ctxt_p, ASN1T_CoordUTM value);
EXTERN int asn1PD_CoordUTM (ASN1CTXT* ctxt_p, ASN1T_CoordUTM* pvalue);

EXTERN void asn1Print_CoordUTM (ASN1ConstCharPtr name, ASN1T_CoordUTM* pvalue);

/**************************************************************/
/*                                                            */
/*  _SeqOfCoordUTM                                            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T__SeqOfCoordUTM {
   ASN1UINT n;
   ASN1T_CoordUTM *elem;
} ASN1T__SeqOfCoordUTM;

class EXTERN ASN1C__SeqOfCoordUTM : public ASN1CType {
public:
   ASN1T__SeqOfCoordUTM& msgData;
   ASN1C__SeqOfCoordUTM (
      ASN1MessageBuffer& msgBuf, ASN1T__SeqOfCoordUTM& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE__SeqOfCoordUTM (ASN1CTXT* ctxt_p, ASN1T__SeqOfCoordUTM* pvalue);
EXTERN int asn1PD__SeqOfCoordUTM (ASN1CTXT* ctxt_p, ASN1T__SeqOfCoordUTM* pvalue);

EXTERN void asn1Print__SeqOfCoordUTM (ASN1ConstCharPtr name, ASN1T__SeqOfCoordUTM* pvalue);

/**************************************************************/
/*                                                            */
/*  Localisation                                              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_Localisation {
   ASN1T_EnumTypeLocalisation  type;
   ASN1T__SeqOfCoordUTM  vecteur_point;
} ASN1T_Localisation;

class EXTERN ASN1C_Localisation : public ASN1CType {
public:
   ASN1T_Localisation& msgData;
   ASN1C_Localisation (
      ASN1MessageBuffer& msgBuf, ASN1T_Localisation& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Localisation (ASN1CTXT* ctxt_p, ASN1T_Localisation* pvalue);
EXTERN int asn1PD_Localisation (ASN1CTXT* ctxt_p, ASN1T_Localisation* pvalue);

EXTERN void asn1Print_Localisation (ASN1ConstCharPtr name, ASN1T_Localisation* pvalue);

/**************************************************************/
/*                                                            */
/*  Point                                                     */
/*                                                            */
/**************************************************************/

typedef ASN1T_Localisation ASN1T_Point;

class EXTERN ASN1C_Point : public ASN1CType {
public:
   ASN1T_Point& msgData;
   ASN1C_Point (
      ASN1MessageBuffer& msgBuf, ASN1T_Point& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Point (ASN1CTXT* ctxt_p, ASN1T_Point* pvalue);
EXTERN int asn1PD_Point (ASN1CTXT* ctxt_p, ASN1T_Point* pvalue);

EXTERN void asn1Print_Point (ASN1ConstCharPtr name, ASN1T_Point* pvalue);

/**************************************************************/
/*                                                            */
/*  Line                                                      */
/*                                                            */
/**************************************************************/

typedef ASN1T_Localisation ASN1T_Line;

class EXTERN ASN1C_Line : public ASN1CType {
public:
   ASN1T_Line& msgData;
   ASN1C_Line (
      ASN1MessageBuffer& msgBuf, ASN1T_Line& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Line (ASN1CTXT* ctxt_p, ASN1T_Line* pvalue);
EXTERN int asn1PD_Line (ASN1CTXT* ctxt_p, ASN1T_Line* pvalue);

EXTERN void asn1Print_Line (ASN1ConstCharPtr name, ASN1T_Line* pvalue);

/**************************************************************/
/*                                                            */
/*  Itineraire                                                */
/*                                                            */
/**************************************************************/

typedef ASN1T_Localisation ASN1T_Itineraire;

class EXTERN ASN1C_Itineraire : public ASN1CType {
public:
   ASN1T_Itineraire& msgData;
   ASN1C_Itineraire (
      ASN1MessageBuffer& msgBuf, ASN1T_Itineraire& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Itineraire (ASN1CTXT* ctxt_p, ASN1T_Itineraire* pvalue);
EXTERN int asn1PD_Itineraire (ASN1CTXT* ctxt_p, ASN1T_Itineraire* pvalue);

EXTERN void asn1Print_Itineraire (ASN1ConstCharPtr name, ASN1T_Itineraire* pvalue);

/**************************************************************/
/*                                                            */
/*  Polygon                                                   */
/*                                                            */
/**************************************************************/

typedef ASN1T_Localisation ASN1T_Polygon;

class EXTERN ASN1C_Polygon : public ASN1CType {
public:
   ASN1T_Polygon& msgData;
   ASN1C_Polygon (
      ASN1MessageBuffer& msgBuf, ASN1T_Polygon& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Polygon (ASN1CTXT* ctxt_p, ASN1T_Polygon* pvalue);
EXTERN int asn1PD_Polygon (ASN1CTXT* ctxt_p, ASN1T_Polygon* pvalue);

EXTERN void asn1Print_Polygon (ASN1ConstCharPtr name, ASN1T_Polygon* pvalue);

/**************************************************************/
/*                                                            */
/*  Segment                                                   */
/*                                                            */
/**************************************************************/

typedef ASN1T_Localisation ASN1T_Segment;

class EXTERN ASN1C_Segment : public ASN1CType {
public:
   ASN1T_Segment& msgData;
   ASN1C_Segment (
      ASN1MessageBuffer& msgBuf, ASN1T_Segment& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Segment (ASN1CTXT* ctxt_p, ASN1T_Segment* pvalue);
EXTERN int asn1PD_Segment (ASN1CTXT* ctxt_p, ASN1T_Segment* pvalue);

EXTERN void asn1Print_Segment (ASN1ConstCharPtr name, ASN1T_Segment* pvalue);

/**************************************************************/
/*                                                            */
/*  Circle                                                    */
/*                                                            */
/**************************************************************/

typedef ASN1T_Localisation ASN1T_Circle;

class EXTERN ASN1C_Circle : public ASN1CType {
public:
   ASN1T_Circle& msgData;
   ASN1C_Circle (
      ASN1MessageBuffer& msgBuf, ASN1T_Circle& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Circle (ASN1CTXT* ctxt_p, ASN1T_Circle* pvalue);
EXTERN int asn1PD_Circle (ASN1CTXT* ctxt_p, ASN1T_Circle* pvalue);

EXTERN void asn1Print_Circle (ASN1ConstCharPtr name, ASN1T_Circle* pvalue);

/**************************************************************/
/*                                                            */
/*  Ellipse                                                   */
/*                                                            */
/**************************************************************/

typedef ASN1T_Localisation ASN1T_Ellipse;

class EXTERN ASN1C_Ellipse : public ASN1CType {
public:
   ASN1T_Ellipse& msgData;
   ASN1C_Ellipse (
      ASN1MessageBuffer& msgBuf, ASN1T_Ellipse& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Ellipse (ASN1CTXT* ctxt_p, ASN1T_Ellipse* pvalue);
EXTERN int asn1PD_Ellipse (ASN1CTXT* ctxt_p, ASN1T_Ellipse* pvalue);

EXTERN void asn1Print_Ellipse (ASN1ConstCharPtr name, ASN1T_Ellipse* pvalue);

/**************************************************************/
/*                                                            */
/*  Sector                                                    */
/*                                                            */
/**************************************************************/

typedef ASN1T_Localisation ASN1T_Sector;

class EXTERN ASN1C_Sector : public ASN1CType {
public:
   ASN1T_Sector& msgData;
   ASN1C_Sector (
      ASN1MessageBuffer& msgBuf, ASN1T_Sector& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Sector (ASN1CTXT* ctxt_p, ASN1T_Sector* pvalue);
EXTERN int asn1PD_Sector (ASN1CTXT* ctxt_p, ASN1T_Sector* pvalue);

EXTERN void asn1Print_Sector (ASN1ConstCharPtr name, ASN1T_Sector* pvalue);

/**************************************************************/
/*                                                            */
/*  ListLocalisation                                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_ListLocalisation {
   ASN1UINT n;
   ASN1T_Localisation *elem;
} ASN1T_ListLocalisation;

class EXTERN ASN1C_ListLocalisation : public ASN1CType {
public:
   ASN1T_ListLocalisation& msgData;
   ASN1C_ListLocalisation (
      ASN1MessageBuffer& msgBuf, ASN1T_ListLocalisation& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_ListLocalisation (ASN1CTXT* ctxt_p, ASN1T_ListLocalisation* pvalue);
EXTERN int asn1PD_ListLocalisation (ASN1CTXT* ctxt_p, ASN1T_ListLocalisation* pvalue);

EXTERN void asn1Print_ListLocalisation (ASN1ConstCharPtr name, ASN1T_ListLocalisation* pvalue);

/**************************************************************/
/*                                                            */
/*  ListPolygon                                               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_ListPolygon {
   ASN1UINT n;
   ASN1T_Polygon *elem;
} ASN1T_ListPolygon;

class EXTERN ASN1C_ListPolygon : public ASN1CType {
public:
   ASN1T_ListPolygon& msgData;
   ASN1C_ListPolygon (
      ASN1MessageBuffer& msgBuf, ASN1T_ListPolygon& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_ListPolygon (ASN1CTXT* ctxt_p, ASN1T_ListPolygon* pvalue);
EXTERN int asn1PD_ListPolygon (ASN1CTXT* ctxt_p, ASN1T_ListPolygon* pvalue);

EXTERN void asn1Print_ListPolygon (ASN1ConstCharPtr name, ASN1T_ListPolygon* pvalue);

/**************************************************************/
/*                                                            */
/*  ListItineraire                                            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_ListItineraire {
   ASN1UINT n;
   ASN1T_Itineraire *elem;
} ASN1T_ListItineraire;

class EXTERN ASN1C_ListItineraire : public ASN1CType {
public:
   ASN1T_ListItineraire& msgData;
   ASN1C_ListItineraire (
      ASN1MessageBuffer& msgBuf, ASN1T_ListItineraire& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_ListItineraire (ASN1CTXT* ctxt_p, ASN1T_ListItineraire* pvalue);
EXTERN int asn1PD_ListItineraire (ASN1CTXT* ctxt_p, ASN1T_ListItineraire* pvalue);

EXTERN void asn1Print_ListItineraire (ASN1ConstCharPtr name, ASN1T_ListItineraire* pvalue);

/**************************************************************/
/*                                                            */
/*  ListPoint                                                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_ListPoint {
   ASN1UINT n;
   ASN1T_Point *elem;
} ASN1T_ListPoint;

class EXTERN ASN1C_ListPoint : public ASN1CType {
public:
   ASN1T_ListPoint& msgData;
   ASN1C_ListPoint (
      ASN1MessageBuffer& msgBuf, ASN1T_ListPoint& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_ListPoint (ASN1CTXT* ctxt_p, ASN1T_ListPoint* pvalue);
EXTERN int asn1PD_ListPoint (ASN1CTXT* ctxt_p, ASN1T_ListPoint* pvalue);

EXTERN void asn1Print_ListPoint (ASN1ConstCharPtr name, ASN1T_ListPoint* pvalue);

/**************************************************************/
/*                                                            */
/*  OID                                                       */
/*                                                            */
/**************************************************************/

typedef ASN1INT  ASN1T_OID;

class EXTERN ASN1C_OID : public ASN1CType {
public:
   ASN1T_OID& msgData;
   ASN1C_OID (
      ASN1MessageBuffer& msgBuf, ASN1T_OID& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_OID (ASN1CTXT* ctxt_p, ASN1T_OID value);
EXTERN int asn1PD_OID (ASN1CTXT* ctxt_p, ASN1T_OID* pvalue);

EXTERN void asn1Print_OID (ASN1ConstCharPtr name, ASN1T_OID* pvalue);

/**************************************************************/
/*                                                            */
/*  ListOID                                                   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_ListOID {
   ASN1UINT n;
   ASN1T_OID *elem;
} ASN1T_ListOID;

class EXTERN ASN1C_ListOID : public ASN1CType {
public:
   ASN1T_ListOID& msgData;
   ASN1C_ListOID (
      ASN1MessageBuffer& msgBuf, ASN1T_ListOID& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_ListOID (ASN1CTXT* ctxt_p, ASN1T_ListOID* pvalue);
EXTERN int asn1PD_ListOID (ASN1CTXT* ctxt_p, ASN1T_ListOID* pvalue);

EXTERN void asn1Print_ListOID (ASN1ConstCharPtr name, ASN1T_ListOID* pvalue);

/**************************************************************/
/*                                                            */
/*  TirPion                                                   */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_TirPion;

class EXTERN ASN1C_TirPion : public ASN1CType {
public:
   ASN1T_TirPion& msgData;
   ASN1C_TirPion (
      ASN1MessageBuffer& msgBuf, ASN1T_TirPion& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_TirPion (ASN1CTXT* ctxt_p, ASN1T_TirPion value);
EXTERN int asn1PD_TirPion (ASN1CTXT* ctxt_p, ASN1T_TirPion* pvalue);

EXTERN void asn1Print_TirPion (ASN1ConstCharPtr name, ASN1T_TirPion* pvalue);

/**************************************************************/
/*                                                            */
/*  TirPopulation                                             */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_TirPopulation;

class EXTERN ASN1C_TirPopulation : public ASN1CType {
public:
   ASN1T_TirPopulation& msgData;
   ASN1C_TirPopulation (
      ASN1MessageBuffer& msgBuf, ASN1T_TirPopulation& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_TirPopulation (ASN1CTXT* ctxt_p, ASN1T_TirPopulation value);
EXTERN int asn1PD_TirPopulation (ASN1CTXT* ctxt_p, ASN1T_TirPopulation* pvalue);

EXTERN void asn1Print_TirPopulation (ASN1ConstCharPtr name, ASN1T_TirPopulation* pvalue);

/**************************************************************/
/*                                                            */
/*  Agent                                                     */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_Agent;

class EXTERN ASN1C_Agent : public ASN1CType {
public:
   ASN1T_Agent& msgData;
   ASN1C_Agent (
      ASN1MessageBuffer& msgBuf, ASN1T_Agent& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Agent (ASN1CTXT* ctxt_p, ASN1T_Agent value);
EXTERN int asn1PD_Agent (ASN1CTXT* ctxt_p, ASN1T_Agent* pvalue);

EXTERN void asn1Print_Agent (ASN1ConstCharPtr name, ASN1T_Agent* pvalue);

/**************************************************************/
/*                                                            */
/*  Automate                                                  */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_Automate;

class EXTERN ASN1C_Automate : public ASN1CType {
public:
   ASN1T_Automate& msgData;
   ASN1C_Automate (
      ASN1MessageBuffer& msgBuf, ASN1T_Automate& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Automate (ASN1CTXT* ctxt_p, ASN1T_Automate value);
EXTERN int asn1PD_Automate (ASN1CTXT* ctxt_p, ASN1T_Automate* pvalue);

EXTERN void asn1Print_Automate (ASN1ConstCharPtr name, ASN1T_Automate* pvalue);

/**************************************************************/
/*                                                            */
/*  Population                                                */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_Population;

class EXTERN ASN1C_Population : public ASN1CType {
public:
   ASN1T_Population& msgData;
   ASN1C_Population (
      ASN1MessageBuffer& msgBuf, ASN1T_Population& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Population (ASN1CTXT* ctxt_p, ASN1T_Population value);
EXTERN int asn1PD_Population (ASN1CTXT* ctxt_p, ASN1T_Population* pvalue);

EXTERN void asn1Print_Population (ASN1ConstCharPtr name, ASN1T_Population* pvalue);

/**************************************************************/
/*                                                            */
/*  Camp                                                      */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_Camp;

class EXTERN ASN1C_Camp : public ASN1CType {
public:
   ASN1T_Camp& msgData;
   ASN1C_Camp (
      ASN1MessageBuffer& msgBuf, ASN1T_Camp& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Camp (ASN1CTXT* ctxt_p, ASN1T_Camp value);
EXTERN int asn1PD_Camp (ASN1CTXT* ctxt_p, ASN1T_Camp* pvalue);

EXTERN void asn1Print_Camp (ASN1ConstCharPtr name, ASN1T_Camp* pvalue);

/**************************************************************/
/*                                                            */
/*  Formation                                                 */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_Formation;

class EXTERN ASN1C_Formation : public ASN1CType {
public:
   ASN1T_Formation& msgData;
   ASN1C_Formation (
      ASN1MessageBuffer& msgBuf, ASN1T_Formation& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Formation (ASN1CTXT* ctxt_p, ASN1T_Formation value);
EXTERN int asn1PD_Formation (ASN1CTXT* ctxt_p, ASN1T_Formation* pvalue);

EXTERN void asn1Print_Formation (ASN1ConstCharPtr name, ASN1T_Formation* pvalue);

/**************************************************************/
/*                                                            */
/*  KnowledgeGroup                                            */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_KnowledgeGroup;

class EXTERN ASN1C_KnowledgeGroup : public ASN1CType {
public:
   ASN1T_KnowledgeGroup& msgData;
   ASN1C_KnowledgeGroup (
      ASN1MessageBuffer& msgBuf, ASN1T_KnowledgeGroup& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_KnowledgeGroup (ASN1CTXT* ctxt_p, ASN1T_KnowledgeGroup value);
EXTERN int asn1PD_KnowledgeGroup (ASN1CTXT* ctxt_p, ASN1T_KnowledgeGroup* pvalue);

EXTERN void asn1Print_KnowledgeGroup (ASN1ConstCharPtr name, ASN1T_KnowledgeGroup* pvalue);

/**************************************************************/
/*                                                            */
/*  KnowledgeAgent                                            */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_KnowledgeAgent;

class EXTERN ASN1C_KnowledgeAgent : public ASN1CType {
public:
   ASN1T_KnowledgeAgent& msgData;
   ASN1C_KnowledgeAgent (
      ASN1MessageBuffer& msgBuf, ASN1T_KnowledgeAgent& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_KnowledgeAgent (ASN1CTXT* ctxt_p, ASN1T_KnowledgeAgent value);
EXTERN int asn1PD_KnowledgeAgent (ASN1CTXT* ctxt_p, ASN1T_KnowledgeAgent* pvalue);

EXTERN void asn1Print_KnowledgeAgent (ASN1ConstCharPtr name, ASN1T_KnowledgeAgent* pvalue);

/**************************************************************/
/*                                                            */
/*  KnowledgeObject                                           */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_KnowledgeObject;

class EXTERN ASN1C_KnowledgeObject : public ASN1CType {
public:
   ASN1T_KnowledgeObject& msgData;
   ASN1C_KnowledgeObject (
      ASN1MessageBuffer& msgBuf, ASN1T_KnowledgeObject& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_KnowledgeObject (ASN1CTXT* ctxt_p, ASN1T_KnowledgeObject value);
EXTERN int asn1PD_KnowledgeObject (ASN1CTXT* ctxt_p, ASN1T_KnowledgeObject* pvalue);

EXTERN void asn1Print_KnowledgeObject (ASN1ConstCharPtr name, ASN1T_KnowledgeObject* pvalue);

/**************************************************************/
/*                                                            */
/*  KnowledgePopulation                                       */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_KnowledgePopulation;

class EXTERN ASN1C_KnowledgePopulation : public ASN1CType {
public:
   ASN1T_KnowledgePopulation& msgData;
   ASN1C_KnowledgePopulation (
      ASN1MessageBuffer& msgBuf, ASN1T_KnowledgePopulation& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_KnowledgePopulation (ASN1CTXT* ctxt_p, ASN1T_KnowledgePopulation value);
EXTERN int asn1PD_KnowledgePopulation (ASN1CTXT* ctxt_p, ASN1T_KnowledgePopulation* pvalue);

EXTERN void asn1Print_KnowledgePopulation (ASN1ConstCharPtr name, ASN1T_KnowledgePopulation* pvalue);

/**************************************************************/
/*                                                            */
/*  ListAutomate                                              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_ListAutomate {
   ASN1UINT n;
   ASN1T_Automate *elem;
} ASN1T_ListAutomate;

class EXTERN ASN1C_ListAutomate : public ASN1CType {
public:
   ASN1T_ListAutomate& msgData;
   ASN1C_ListAutomate (
      ASN1MessageBuffer& msgBuf, ASN1T_ListAutomate& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_ListAutomate (ASN1CTXT* ctxt_p, ASN1T_ListAutomate* pvalue);
EXTERN int asn1PD_ListAutomate (ASN1CTXT* ctxt_p, ASN1T_ListAutomate* pvalue);

EXTERN void asn1Print_ListAutomate (ASN1ConstCharPtr name, ASN1T_ListAutomate* pvalue);

/**************************************************************/
/*                                                            */
/*  ListAgent                                                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_ListAgent {
   ASN1UINT n;
   ASN1T_Agent *elem;
} ASN1T_ListAgent;

class EXTERN ASN1C_ListAgent : public ASN1CType {
public:
   ASN1T_ListAgent& msgData;
   ASN1C_ListAgent (
      ASN1MessageBuffer& msgBuf, ASN1T_ListAgent& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_ListAgent (ASN1CTXT* ctxt_p, ASN1T_ListAgent* pvalue);
EXTERN int asn1PD_ListAgent (ASN1CTXT* ctxt_p, ASN1T_ListAgent* pvalue);

EXTERN void asn1Print_ListAgent (ASN1ConstCharPtr name, ASN1T_ListAgent* pvalue);

/**************************************************************/
/*                                                            */
/*  ListKnowledgeAgent                                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_ListKnowledgeAgent {
   ASN1UINT n;
   ASN1T_KnowledgeAgent *elem;
} ASN1T_ListKnowledgeAgent;

class EXTERN ASN1C_ListKnowledgeAgent : public ASN1CType {
public:
   ASN1T_ListKnowledgeAgent& msgData;
   ASN1C_ListKnowledgeAgent (
      ASN1MessageBuffer& msgBuf, ASN1T_ListKnowledgeAgent& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_ListKnowledgeAgent (ASN1CTXT* ctxt_p, ASN1T_ListKnowledgeAgent* pvalue);
EXTERN int asn1PD_ListKnowledgeAgent (ASN1CTXT* ctxt_p, ASN1T_ListKnowledgeAgent* pvalue);

EXTERN void asn1Print_ListKnowledgeAgent (ASN1ConstCharPtr name, ASN1T_ListKnowledgeAgent* pvalue);

/**************************************************************/
/*                                                            */
/*  ListKnowledgeObject                                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_ListKnowledgeObject {
   ASN1UINT n;
   ASN1T_KnowledgeObject *elem;
} ASN1T_ListKnowledgeObject;

class EXTERN ASN1C_ListKnowledgeObject : public ASN1CType {
public:
   ASN1T_ListKnowledgeObject& msgData;
   ASN1C_ListKnowledgeObject (
      ASN1MessageBuffer& msgBuf, ASN1T_ListKnowledgeObject& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_ListKnowledgeObject (ASN1CTXT* ctxt_p, ASN1T_ListKnowledgeObject* pvalue);
EXTERN int asn1PD_ListKnowledgeObject (ASN1CTXT* ctxt_p, ASN1T_ListKnowledgeObject* pvalue);

EXTERN void asn1Print_ListKnowledgeObject (ASN1ConstCharPtr name, ASN1T_ListKnowledgeObject* pvalue);

/**************************************************************/
/*                                                            */
/*  ListCamp                                                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_ListCamp {
   ASN1UINT n;
   ASN1T_Camp *elem;
} ASN1T_ListCamp;

class EXTERN ASN1C_ListCamp : public ASN1CType {
public:
   ASN1T_ListCamp& msgData;
   ASN1C_ListCamp (
      ASN1MessageBuffer& msgBuf, ASN1T_ListCamp& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_ListCamp (ASN1CTXT* ctxt_p, ASN1T_ListCamp* pvalue);
EXTERN int asn1PD_ListCamp (ASN1CTXT* ctxt_p, ASN1T_ListCamp* pvalue);

EXTERN void asn1Print_ListCamp (ASN1ConstCharPtr name, ASN1T_ListCamp* pvalue);

/**************************************************************/
/*                                                            */
/*  ListPopulation                                            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_ListPopulation {
   ASN1UINT n;
   ASN1T_Population *elem;
} ASN1T_ListPopulation;

class EXTERN ASN1C_ListPopulation : public ASN1CType {
public:
   ASN1T_ListPopulation& msgData;
   ASN1C_ListPopulation (
      ASN1MessageBuffer& msgBuf, ASN1T_ListPopulation& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_ListPopulation (ASN1CTXT* ctxt_p, ASN1T_ListPopulation* pvalue);
EXTERN int asn1PD_ListPopulation (ASN1CTXT* ctxt_p, ASN1T_ListPopulation* pvalue);

EXTERN void asn1Print_ListPopulation (ASN1ConstCharPtr name, ASN1T_ListPopulation* pvalue);

/**************************************************************/
/*                                                            */
/*  ListFormation                                             */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_ListFormation {
   ASN1UINT n;
   ASN1T_Formation *elem;
} ASN1T_ListFormation;

class EXTERN ASN1C_ListFormation : public ASN1CType {
public:
   ASN1T_ListFormation& msgData;
   ASN1C_ListFormation (
      ASN1MessageBuffer& msgBuf, ASN1T_ListFormation& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_ListFormation (ASN1CTXT* ctxt_p, ASN1T_ListFormation* pvalue);
EXTERN int asn1PD_ListFormation (ASN1CTXT* ctxt_p, ASN1T_ListFormation* pvalue);

EXTERN void asn1Print_ListFormation (ASN1ConstCharPtr name, ASN1T_ListFormation* pvalue);

/**************************************************************/
/*                                                            */
/*  TypeEquipement                                            */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_TypeEquipement;

class EXTERN ASN1C_TypeEquipement : public ASN1CType {
public:
   ASN1T_TypeEquipement& msgData;
   ASN1C_TypeEquipement (
      ASN1MessageBuffer& msgBuf, ASN1T_TypeEquipement& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_TypeEquipement (ASN1CTXT* ctxt_p, ASN1T_TypeEquipement value);
EXTERN int asn1PD_TypeEquipement (ASN1CTXT* ctxt_p, ASN1T_TypeEquipement* pvalue);

EXTERN void asn1Print_TypeEquipement (ASN1ConstCharPtr name, ASN1T_TypeEquipement* pvalue);

/**************************************************************/
/*                                                            */
/*  TypeDotation                                              */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_TypeDotation;

class EXTERN ASN1C_TypeDotation : public ASN1CType {
public:
   ASN1T_TypeDotation& msgData;
   ASN1C_TypeDotation (
      ASN1MessageBuffer& msgBuf, ASN1T_TypeDotation& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_TypeDotation (ASN1CTXT* ctxt_p, ASN1T_TypeDotation value);
EXTERN int asn1PD_TypeDotation (ASN1CTXT* ctxt_p, ASN1T_TypeDotation* pvalue);

EXTERN void asn1Print_TypeDotation (ASN1ConstCharPtr name, ASN1T_TypeDotation* pvalue);

/**************************************************************/
/*                                                            */
/*  TypeDotationTrancheD                                      */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_TypeDotationTrancheD;

class EXTERN ASN1C_TypeDotationTrancheD : public ASN1CType {
public:
   ASN1T_TypeDotationTrancheD& msgData;
   ASN1C_TypeDotationTrancheD (
      ASN1MessageBuffer& msgBuf, ASN1T_TypeDotationTrancheD& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_TypeDotationTrancheD (ASN1CTXT* ctxt_p, ASN1T_TypeDotationTrancheD value);
EXTERN int asn1PD_TypeDotationTrancheD (ASN1CTXT* ctxt_p, ASN1T_TypeDotationTrancheD* pvalue);

EXTERN void asn1Print_TypeDotationTrancheD (ASN1ConstCharPtr name, ASN1T_TypeDotationTrancheD* pvalue);

/**************************************************************/
/*                                                            */
/*  TypePanne                                                 */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_TypePanne;

class EXTERN ASN1C_TypePanne : public ASN1CType {
public:
   ASN1T_TypePanne& msgData;
   ASN1C_TypePanne (
      ASN1MessageBuffer& msgBuf, ASN1T_TypePanne& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_TypePanne (ASN1CTXT* ctxt_p, ASN1T_TypePanne value);
EXTERN int asn1PD_TypePanne (ASN1CTXT* ctxt_p, ASN1T_TypePanne* pvalue);

EXTERN void asn1Print_TypePanne (ASN1ConstCharPtr name, ASN1T_TypePanne* pvalue);

/**************************************************************/
/*                                                            */
/*  TypePion                                                  */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_TypePion;

class EXTERN ASN1C_TypePion : public ASN1CType {
public:
   ASN1T_TypePion& msgData;
   ASN1C_TypePion (
      ASN1MessageBuffer& msgBuf, ASN1T_TypePion& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_TypePion (ASN1CTXT* ctxt_p, ASN1T_TypePion value);
EXTERN int asn1PD_TypePion (ASN1CTXT* ctxt_p, ASN1T_TypePion* pvalue);

EXTERN void asn1Print_TypePion (ASN1ConstCharPtr name, ASN1T_TypePion* pvalue);

/**************************************************************/
/*                                                            */
/*  TypeAutomate                                              */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_TypeAutomate;

class EXTERN ASN1C_TypeAutomate : public ASN1CType {
public:
   ASN1T_TypeAutomate& msgData;
   ASN1C_TypeAutomate (
      ASN1MessageBuffer& msgBuf, ASN1T_TypeAutomate& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_TypeAutomate (ASN1CTXT* ctxt_p, ASN1T_TypeAutomate value);
EXTERN int asn1PD_TypeAutomate (ASN1CTXT* ctxt_p, ASN1T_TypeAutomate* pvalue);

EXTERN void asn1Print_TypeAutomate (ASN1ConstCharPtr name, ASN1T_TypeAutomate* pvalue);

/**************************************************************/
/*                                                            */
/*  TypePopulation                                            */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_TypePopulation;

class EXTERN ASN1C_TypePopulation : public ASN1CType {
public:
   ASN1T_TypePopulation& msgData;
   ASN1C_TypePopulation (
      ASN1MessageBuffer& msgBuf, ASN1T_TypePopulation& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_TypePopulation (ASN1CTXT* ctxt_p, ASN1T_TypePopulation value);
EXTERN int asn1PD_TypePopulation (ASN1CTXT* ctxt_p, ASN1T_TypePopulation* pvalue);

EXTERN void asn1Print_TypePopulation (ASN1ConstCharPtr name, ASN1T_TypePopulation* pvalue);

/**************************************************************/
/*                                                            */
/*  Pourcentage                                               */
/*                                                            */
/**************************************************************/

typedef ASN1INT  ASN1T_Pourcentage;

class EXTERN ASN1C_Pourcentage : public ASN1CType {
public:
   ASN1T_Pourcentage& msgData;
   ASN1C_Pourcentage (
      ASN1MessageBuffer& msgBuf, ASN1T_Pourcentage& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Pourcentage (ASN1CTXT* ctxt_p, ASN1T_Pourcentage value);
EXTERN int asn1PD_Pourcentage (ASN1CTXT* ctxt_p, ASN1T_Pourcentage* pvalue);

EXTERN void asn1Print_Pourcentage (ASN1ConstCharPtr name, ASN1T_Pourcentage* pvalue);

/**************************************************************/
/*                                                            */
/*  PourcentageLibre                                          */
/*                                                            */
/**************************************************************/

typedef ASN1INT  ASN1T_PourcentageLibre;

class EXTERN ASN1C_PourcentageLibre : public ASN1CType {
public:
   ASN1T_PourcentageLibre& msgData;
   ASN1C_PourcentageLibre (
      ASN1MessageBuffer& msgBuf, ASN1T_PourcentageLibre& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_PourcentageLibre (ASN1CTXT* ctxt_p, ASN1T_PourcentageLibre value);
EXTERN int asn1PD_PourcentageLibre (ASN1CTXT* ctxt_p, ASN1T_PourcentageLibre* pvalue);

EXTERN void asn1Print_PourcentageLibre (ASN1ConstCharPtr name, ASN1T_PourcentageLibre* pvalue);

/**************************************************************/
/*                                                            */
/*  Hauteur                                                   */
/*                                                            */
/**************************************************************/

typedef ASN1INT  ASN1T_Hauteur;

class EXTERN ASN1C_Hauteur : public ASN1CType {
public:
   ASN1T_Hauteur& msgData;
   ASN1C_Hauteur (
      ASN1MessageBuffer& msgBuf, ASN1T_Hauteur& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Hauteur (ASN1CTXT* ctxt_p, ASN1T_Hauteur value);
EXTERN int asn1PD_Hauteur (ASN1CTXT* ctxt_p, ASN1T_Hauteur* pvalue);

EXTERN void asn1Print_Hauteur (ASN1ConstCharPtr name, ASN1T_Hauteur* pvalue);

/**************************************************************/
/*                                                            */
/*  Altitude                                                  */
/*                                                            */
/**************************************************************/

typedef ASN1INT  ASN1T_Altitude;

class EXTERN ASN1C_Altitude : public ASN1CType {
public:
   ASN1T_Altitude& msgData;
   ASN1C_Altitude (
      ASN1MessageBuffer& msgBuf, ASN1T_Altitude& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Altitude (ASN1CTXT* ctxt_p, ASN1T_Altitude value);
EXTERN int asn1PD_Altitude (ASN1CTXT* ctxt_p, ASN1T_Altitude* pvalue);

EXTERN void asn1Print_Altitude (ASN1ConstCharPtr name, ASN1T_Altitude* pvalue);

/**************************************************************/
/*                                                            */
/*  Vitesse                                                   */
/*                                                            */
/**************************************************************/

typedef ASN1INT  ASN1T_Vitesse;

class EXTERN ASN1C_Vitesse : public ASN1CType {
public:
   ASN1T_Vitesse& msgData;
   ASN1C_Vitesse (
      ASN1MessageBuffer& msgBuf, ASN1T_Vitesse& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Vitesse (ASN1CTXT* ctxt_p, ASN1T_Vitesse value);
EXTERN int asn1PD_Vitesse (ASN1CTXT* ctxt_p, ASN1T_Vitesse* pvalue);

EXTERN void asn1Print_Vitesse (ASN1ConstCharPtr name, ASN1T_Vitesse* pvalue);

/**************************************************************/
/*                                                            */
/*  Angle                                                     */
/*                                                            */
/**************************************************************/

typedef ASN1INT  ASN1T_Angle;

class EXTERN ASN1C_Angle : public ASN1CType {
public:
   ASN1T_Angle& msgData;
   ASN1C_Angle (
      ASN1MessageBuffer& msgBuf, ASN1T_Angle& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Angle (ASN1CTXT* ctxt_p, ASN1T_Angle value);
EXTERN int asn1PD_Angle (ASN1CTXT* ctxt_p, ASN1T_Angle* pvalue);

EXTERN void asn1Print_Angle (ASN1ConstCharPtr name, ASN1T_Angle* pvalue);

/**************************************************************/
/*                                                            */
/*  Direction                                                 */
/*                                                            */
/**************************************************************/

typedef ASN1INT  ASN1T_Direction;

class EXTERN ASN1C_Direction : public ASN1CType {
public:
   ASN1T_Direction& msgData;
   ASN1C_Direction (
      ASN1MessageBuffer& msgBuf, ASN1T_Direction& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Direction (ASN1CTXT* ctxt_p, ASN1T_Direction value);
EXTERN int asn1PD_Direction (ASN1CTXT* ctxt_p, ASN1T_Direction* pvalue);

EXTERN void asn1Print_Direction (ASN1ConstCharPtr name, ASN1T_Direction* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumGDH_Qualificatif                                      */
/*                                                            */
/**************************************************************/

struct EXTERN EnumGDH_Qualificatif {
   enum Root {
      at = 0,
      after = 1,
      as_of = 2,
      before = 3,
      cleared = 4,
      due = 5,
      end = 6,
      off = 7,
      on = 8,
      since = 9,
      start = 10,
      until = 11,
      wef = 12
   } ;
} ;

typedef EnumGDH_Qualificatif::Root ASN1T_EnumGDH_Qualificatif;

class EXTERN ASN1C_EnumGDH_Qualificatif : public ASN1CType {
public:
   ASN1T_EnumGDH_Qualificatif& msgData;
   ASN1C_EnumGDH_Qualificatif (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumGDH_Qualificatif& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumGDH_Qualificatif (ASN1CTXT* ctxt_p, ASN1T_EnumGDH_Qualificatif value);
EXTERN int asn1PD_EnumGDH_Qualificatif (ASN1CTXT* ctxt_p, ASN1T_EnumGDH_Qualificatif* pvalue);

EXTERN void asn1Print_EnumGDH_Qualificatif (ASN1ConstCharPtr name, ASN1T_EnumGDH_Qualificatif* pvalue);

/**************************************************************/
/*                                                            */
/*  GDH                                                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_GDH {
   ASN1INT   datation;
   ASN1T_EnumGDH_Qualificatif  qualificatif;
} ASN1T_GDH;

class EXTERN ASN1C_GDH : public ASN1CType {
public:
   ASN1T_GDH& msgData;
   ASN1C_GDH (
      ASN1MessageBuffer& msgBuf, ASN1T_GDH& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_GDH (ASN1CTXT* ctxt_p, ASN1T_GDH* pvalue);
EXTERN int asn1PD_GDH (ASN1CTXT* ctxt_p, ASN1T_GDH* pvalue);

EXTERN void asn1Print_GDH (ASN1ConstCharPtr name, ASN1T_GDH* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumFamilleDotation                                       */
/*                                                            */
/**************************************************************/

struct EXTERN EnumFamilleDotation {
   enum Root {
      munition = 0,
      carburant = 1,
      explosif = 2,
      mine = 3,
      barbele = 4,
      piece = 5,
      ration = 6
   } ;
} ;

typedef EnumFamilleDotation::Root ASN1T_EnumFamilleDotation;

class EXTERN ASN1C_EnumFamilleDotation : public ASN1CType {
public:
   ASN1T_EnumFamilleDotation& msgData;
   ASN1C_EnumFamilleDotation (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumFamilleDotation& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumFamilleDotation (ASN1CTXT* ctxt_p, ASN1T_EnumFamilleDotation value);
EXTERN int asn1PD_EnumFamilleDotation (ASN1CTXT* ctxt_p, ASN1T_EnumFamilleDotation* pvalue);

EXTERN void asn1Print_EnumFamilleDotation (ASN1ConstCharPtr name, ASN1T_EnumFamilleDotation* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumFamilleMunition                                       */
/*                                                            */
/**************************************************************/

struct EXTERN EnumFamilleMunition {
   enum Root {
      obus = 0,
      missile_air = 1,
      missile_sol = 2,
      mitraille = 3
   } ;
} ;

typedef EnumFamilleMunition::Root ASN1T_EnumFamilleMunition;

class EXTERN ASN1C_EnumFamilleMunition : public ASN1CType {
public:
   ASN1T_EnumFamilleMunition& msgData;
   ASN1C_EnumFamilleMunition (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumFamilleMunition& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumFamilleMunition (ASN1CTXT* ctxt_p, ASN1T_EnumFamilleMunition value);
EXTERN int asn1PD_EnumFamilleMunition (ASN1CTXT* ctxt_p, ASN1T_EnumFamilleMunition* pvalue);

EXTERN void asn1Print_EnumFamilleMunition (ASN1ConstCharPtr name, ASN1T_EnumFamilleMunition* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumUnitIdentificationLevel                               */
/*                                                            */
/**************************************************************/

struct EXTERN EnumUnitIdentificationLevel {
   enum Root {
      identifiee = 0,
      reconnue = 1,
      detectee = 2,
      signale = 3
   } ;
} ;

typedef EnumUnitIdentificationLevel::Root ASN1T_EnumUnitIdentificationLevel;

class EXTERN ASN1C_EnumUnitIdentificationLevel : public ASN1CType {
public:
   ASN1T_EnumUnitIdentificationLevel& msgData;
   ASN1C_EnumUnitIdentificationLevel (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumUnitIdentificationLevel& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumUnitIdentificationLevel (ASN1CTXT* ctxt_p, ASN1T_EnumUnitIdentificationLevel value);
EXTERN int asn1PD_EnumUnitIdentificationLevel (ASN1CTXT* ctxt_p, ASN1T_EnumUnitIdentificationLevel* pvalue);

EXTERN void asn1Print_EnumUnitIdentificationLevel (ASN1ConstCharPtr name, ASN1T_EnumUnitIdentificationLevel* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumNatureLevel                                           */
/*                                                            */
/**************************************************************/

struct EXTERN EnumNatureLevel {
   enum Root {
      none = 0,
      o = 1,
      oo = 2,
      ooo = 3,
      i = 4,
      ii = 5,
      iii = 6,
      x = 7,
      xx = 8,
      xxx = 9,
      xxxx = 10,
      xxxxx = 11
   } ;
} ;

typedef EnumNatureLevel::Root ASN1T_EnumNatureLevel;

class EXTERN ASN1C_EnumNatureLevel : public ASN1CType {
public:
   ASN1T_EnumNatureLevel& msgData;
   ASN1C_EnumNatureLevel (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumNatureLevel& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumNatureLevel (ASN1CTXT* ctxt_p, ASN1T_EnumNatureLevel value);
EXTERN int asn1PD_EnumNatureLevel (ASN1CTXT* ctxt_p, ASN1T_EnumNatureLevel* pvalue);

EXTERN void asn1Print_EnumNatureLevel (ASN1ConstCharPtr name, ASN1T_EnumNatureLevel* pvalue);

/**************************************************************/
/*                                                            */
/*  NatureAtlas                                               */
/*                                                            */
/**************************************************************/

/* Named bit constants */

#define BitMblinde                          0x80
#define BytXblinde                          0
#define BitMass                             0x40
#define BytXass                             0
#define BitMpc                              0x20
#define BytXpc                              0
#define BitMlog                             0x10
#define BytXlog                             0
#define BitMmortier                         0x08
#define BytXmortier                         0
#define BitMlance_roquette                  0x04
#define BytXlance_roquette                  0
#define BitMvehicule                        0x02
#define BytXvehicule                        0
#define BitMpersonnel_a_pied                0x01
#define BytXpersonnel_a_pied                0
#define BitMhelicoptere                     0x80
#define BytXhelicoptere                     1
#define BitMindefini                        0x40
#define BytXindefini                        1
#define BitMasa                             0x20
#define BytXasa                             1
#define BitMnone                            0x10
#define BytXnone                            1

typedef struct EXTERN ASN1T_NatureAtlas {
   ASN1UINT  numbits;
   ASN1OCTET data[2];
   // ctors
   ASN1T_NatureAtlas () : numbits(0) {}
   ASN1T_NatureAtlas (ASN1UINT _numbits, const ASN1OCTET* _data) :
      numbits(_numbits) {
      memcpy (data, _data, sizeof(data));
   }
} ASN1T_NatureAtlas;

class EXTERN ASN1C_NatureAtlas : public ASN1CBitStr {
public:
   // named bits
   enum { blinde = 0, ass = 1, pc = 2, log = 3, mortier = 4, lance_roquette = 5, vehicule = 6, personnel_a_pied = 7, helicoptere = 8, indefini = 9, asa = 10, none = 11 };

   ASN1T_NatureAtlas& msgData;
   ASN1C_NatureAtlas (
      ASN1MessageBuffer& msgBuf, ASN1T_NatureAtlas& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_NatureAtlas (ASN1CTXT* ctxt_p, ASN1T_NatureAtlas value);
EXTERN int asn1PD_NatureAtlas (ASN1CTXT* ctxt_p, ASN1T_NatureAtlas* pvalue);

EXTERN void asn1Print_NatureAtlas (ASN1ConstCharPtr name, ASN1T_NatureAtlas* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumHumanWound                                            */
/*                                                            */
/**************************************************************/

struct EXTERN EnumHumanWound {
   enum Root {
      non_blesse = 0,
      mort = 1,
      blesse_urgence_1 = 2,
      blesse_urgence_2 = 3,
      blesse_urgence_3 = 4,
      blesse_urgence_extreme = 5
   } ;
} ;

typedef EnumHumanWound::Root ASN1T_EnumHumanWound;

class EXTERN ASN1C_EnumHumanWound : public ASN1CType {
public:
   ASN1T_EnumHumanWound& msgData;
   ASN1C_EnumHumanWound (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumHumanWound& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumHumanWound (ASN1CTXT* ctxt_p, ASN1T_EnumHumanWound value);
EXTERN int asn1PD_EnumHumanWound (ASN1CTXT* ctxt_p, ASN1T_EnumHumanWound* pvalue);

EXTERN void asn1Print_EnumHumanWound (ASN1ConstCharPtr name, ASN1T_EnumHumanWound* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumHumanRank                                             */
/*                                                            */
/**************************************************************/

struct EXTERN EnumHumanRank {
   enum Root {
      officier = 0,
      sous_officer = 1,
      mdr = 2
   } ;
} ;

typedef EnumHumanRank::Root ASN1T_EnumHumanRank;

class EXTERN ASN1C_EnumHumanRank : public ASN1CType {
public:
   ASN1T_EnumHumanRank& msgData;
   ASN1C_EnumHumanRank (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumHumanRank& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumHumanRank (ASN1CTXT* ctxt_p, ASN1T_EnumHumanRank value);
EXTERN int asn1PD_EnumHumanRank (ASN1CTXT* ctxt_p, ASN1T_EnumHumanRank* pvalue);

EXTERN void asn1Print_EnumHumanRank (ASN1ConstCharPtr name, ASN1T_EnumHumanRank* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumChangeHierarchyErrorCode                              */
/*                                                            */
/**************************************************************/

struct EXTERN EnumChangeHierarchyErrorCode {
   enum Root {
      no_error = 0,
      error_invalid_pion = 1,
      error_invalid_automate = 2,
      error_invalid_automate_tc2 = 3,
      error_invalid_automate_maintenance = 4,
      error_invalid_automate_sante = 5,
      error_invalid_automate_ravitaillement = 6,
      error_unit_surrendered = 7,
      error_invalid_camp = 8,
      error_invalid_groupe_connaissance = 9,
      error_camps_incompatibles = 10
   } ;
} ;

typedef EnumChangeHierarchyErrorCode::Root ASN1T_EnumChangeHierarchyErrorCode;

class EXTERN ASN1C_EnumChangeHierarchyErrorCode : public ASN1CType {
public:
   ASN1T_EnumChangeHierarchyErrorCode& msgData;
   ASN1C_EnumChangeHierarchyErrorCode (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumChangeHierarchyErrorCode& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumChangeHierarchyErrorCode (ASN1CTXT* ctxt_p, ASN1T_EnumChangeHierarchyErrorCode value);
EXTERN int asn1PD_EnumChangeHierarchyErrorCode (ASN1CTXT* ctxt_p, ASN1T_EnumChangeHierarchyErrorCode* pvalue);

EXTERN void asn1Print_EnumChangeHierarchyErrorCode (ASN1ConstCharPtr name, ASN1T_EnumChangeHierarchyErrorCode* pvalue);

#endif
