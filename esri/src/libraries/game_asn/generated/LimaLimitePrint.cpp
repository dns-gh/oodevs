/* This file was generated by ASN1C V5.31 on 16-Feb-2007 */

#include "LimaLimite.h"

void asn1Print_LimaLimiteIncludes (ASN1ConstCharPtr name, ASN1T_LimaLimiteIncludes* pvalue)
{
   char namebuf[512];

   sprintf (namebuf, "%s.baseExports", name);

}

void ASN1C_LimaLimiteIncludes::Print (ASN1ConstCharPtr name)

{
   asn1Print_LimaLimiteIncludes (name, &msgData);
}

void asn1Print_LimaLimiteExports (ASN1ConstCharPtr name)
{
}

void ASN1C_LimaLimiteExports::Print (ASN1ConstCharPtr name)

{
   asn1Print_LimaLimiteExports (name);
}

void asn1Print_EnumInfoContextErrorCode (ASN1ConstCharPtr name, ASN1T_EnumInfoContextErrorCode* pvalue)
{
   printf ("%s = ", name);
   switch (*pvalue) {
      case 0: printf ("no_error\n"); break;
      case 1: printf ("error_invalid_id\n"); break;
      case 2: printf ("error_invalid_geometry\n"); break;
      case 3: printf ("error_invalid_lima_function\n"); break;
      case 4: printf ("error_invalid_diffusion\n"); break;
      default: printf ("???\n");
   }
}

void ASN1C_EnumInfoContextErrorCode::Print (ASN1ConstCharPtr name)

{
   asn1Print_EnumInfoContextErrorCode (name, &msgData);
}

void asn1Print_EnumTypeLima (ASN1ConstCharPtr name, ASN1T_EnumTypeLima* pvalue)
{
   printf ("%s = ", name);
   switch (*pvalue) {
      case 0: printf ("ligne_debouche\n"); break;
      case 1: printf ("ligne_changement_attitude\n"); break;
      case 2: printf ("ligne_coordination\n"); break;
      case 3: printf ("ligne_interdire\n"); break;
      case 4: printf ("ligne_objectif\n"); break;
      case 5: printf ("ligne_coup_arret\n"); break;
      case 6: printf ("ligne_recueil\n"); break;
      case 7: printf ("ligne_debut_mission\n"); break;
      case 8: printf ("ligne_fin_mission\n"); break;
      case 9: printf ("ligne_identification_accueil\n"); break;
      default: printf ("???\n");
   }
}

void ASN1C_EnumTypeLima::Print (ASN1ConstCharPtr name)

{
   asn1Print_EnumTypeLima (name, &msgData);
}

void asn1Print_TacticalLinesDiffusion (ASN1ConstCharPtr name, ASN1T_TacticalLinesDiffusion* pvalue)
{
   char namebuf[512];

   printf ("%s.t = %d\n", name, pvalue->t);
   switch (pvalue->t) {
      case 1:
         sprintf (namebuf, "%s.u.automate", name);
         asn1Print_Automate (namebuf, &pvalue->u.automate);
         break;

      case 2:
         sprintf (namebuf, "%s.u.formation", name);
         asn1Print_Formation (namebuf, &pvalue->u.formation);
         break;

      default:;
   }
}

void ASN1C_TacticalLinesDiffusion::Print (ASN1ConstCharPtr name)

{
   asn1Print_TacticalLinesDiffusion (name, &msgData);
}

void asn1Print__SeqOfEnumTypeLima (ASN1ConstCharPtr name, ASN1T__SeqOfEnumTypeLima* pvalue)
{
   char namebuf[512];

   printf ("%s.n = %d\n", name, pvalue->n);
   {
   ASN1UINT xx1;
   for (xx1 = 0; xx1 < pvalue->n; xx1++) {
      sprintf (namebuf, "%s.elem[%d]", name, xx1);
      asn1Print_EnumTypeLima (namebuf, &pvalue->elem[xx1]);
   }
   }

}

void ASN1C__SeqOfEnumTypeLima::Print (ASN1ConstCharPtr name)

{
   asn1Print__SeqOfEnumTypeLima (name, &msgData);
}

void asn1Print_LimaOrder (ASN1ConstCharPtr name, ASN1T_LimaOrder* pvalue)
{
   char namebuf[512];

   sprintf (namebuf, "%s.lima", name);
   asn1Print_Line (namebuf, &pvalue->lima);

   sprintf (namebuf, "%s.fonctions", name);
   asn1Print__SeqOfEnumTypeLima (namebuf, &pvalue->fonctions);

}

void ASN1C_LimaOrder::Print (ASN1ConstCharPtr name)

{
   asn1Print_LimaOrder (name, &msgData);
}

void asn1Print_LimasOrder (ASN1ConstCharPtr name, ASN1T_LimasOrder* pvalue)
{
   char namebuf[512];

   printf ("%s.n = %d\n", name, pvalue->n);
   {
   ASN1UINT xx1;
   for (xx1 = 0; xx1 < pvalue->n; xx1++) {
      sprintf (namebuf, "%s.elem[%d]", name, xx1);
      asn1Print_LimaOrder (namebuf, &pvalue->elem[xx1]);
   }
   }

}

void ASN1C_LimasOrder::Print (ASN1ConstCharPtr name)

{
   asn1Print_LimasOrder (name, &msgData);
}

void asn1Print_TacticalLine (ASN1ConstCharPtr name, ASN1T_TacticalLine* pvalue)
{
   char namebuf[512];

   sprintf (namebuf, "%s.nom", name);
   rtPrintCharStr (namebuf, pvalue->nom);

   sprintf (namebuf, "%s.geometrie", name);
   asn1Print_Line (namebuf, &pvalue->geometrie);

   sprintf (namebuf, "%s.diffusion", name);
   asn1Print_TacticalLinesDiffusion (namebuf, &pvalue->diffusion);

}

void ASN1C_TacticalLine::Print (ASN1ConstCharPtr name)

{
   asn1Print_TacticalLine (name, &msgData);
}

void asn1Print_MsgLimitCreationRequestAck (ASN1ConstCharPtr name, ASN1T_MsgLimitCreationRequestAck* pvalue)
{
   asn1Print_EnumInfoContextErrorCode (name, pvalue);
}

void ASN1C_MsgLimitCreationRequestAck::Print (ASN1ConstCharPtr name)

{
   asn1Print_MsgLimitCreationRequestAck (name, &msgData);
}

void asn1Print_MsgLimitCreationRequest (ASN1ConstCharPtr name, ASN1T_MsgLimitCreationRequest* pvalue)
{
   asn1Print_TacticalLine (name, pvalue);
}

void ASN1C_MsgLimitCreationRequest::Print (ASN1ConstCharPtr name)

{
   asn1Print_MsgLimitCreationRequest (name, &msgData);
}

void asn1Print_MsgLimitCreation (ASN1ConstCharPtr name, ASN1T_MsgLimitCreation* pvalue)
{
   char namebuf[512];

   sprintf (namebuf, "%s.oid", name);
   asn1Print_OID (namebuf, &pvalue->oid);

   sprintf (namebuf, "%s.tactical_line", name);
   asn1Print_TacticalLine (namebuf, &pvalue->tactical_line);

}

void ASN1C_MsgLimitCreation::Print (ASN1ConstCharPtr name)

{
   asn1Print_MsgLimitCreation (name, &msgData);
}

void asn1Print_MsgLimitUpdateRequestAck (ASN1ConstCharPtr name, ASN1T_MsgLimitUpdateRequestAck* pvalue)
{
   asn1Print_EnumInfoContextErrorCode (name, pvalue);
}

void ASN1C_MsgLimitUpdateRequestAck::Print (ASN1ConstCharPtr name)

{
   asn1Print_MsgLimitUpdateRequestAck (name, &msgData);
}

void asn1Print_MsgLimitUpdateRequest (ASN1ConstCharPtr name, ASN1T_MsgLimitUpdateRequest* pvalue)
{
   char namebuf[512];

   sprintf (namebuf, "%s.oid", name);
   asn1Print_OID (namebuf, &pvalue->oid);

   sprintf (namebuf, "%s.tactical_line", name);
   asn1Print_TacticalLine (namebuf, &pvalue->tactical_line);

}

void ASN1C_MsgLimitUpdateRequest::Print (ASN1ConstCharPtr name)

{
   asn1Print_MsgLimitUpdateRequest (name, &msgData);
}

void asn1Print_MsgLimitUpdate (ASN1ConstCharPtr name, ASN1T_MsgLimitUpdate* pvalue)
{
   char namebuf[512];

   sprintf (namebuf, "%s.oid", name);
   asn1Print_OID (namebuf, &pvalue->oid);

   sprintf (namebuf, "%s.tactical_line", name);
   asn1Print_TacticalLine (namebuf, &pvalue->tactical_line);

}

void ASN1C_MsgLimitUpdate::Print (ASN1ConstCharPtr name)

{
   asn1Print_MsgLimitUpdate (name, &msgData);
}

void asn1Print_MsgLimitDestructionRequestAck (ASN1ConstCharPtr name, ASN1T_MsgLimitDestructionRequestAck* pvalue)
{
   asn1Print_EnumInfoContextErrorCode (name, pvalue);
}

void ASN1C_MsgLimitDestructionRequestAck::Print (ASN1ConstCharPtr name)

{
   asn1Print_MsgLimitDestructionRequestAck (name, &msgData);
}

void asn1Print_MsgLimitDestructionRequest (ASN1ConstCharPtr name, ASN1T_MsgLimitDestructionRequest* pvalue)
{
   asn1Print_OID (name, pvalue);
}

void ASN1C_MsgLimitDestructionRequest::Print (ASN1ConstCharPtr name)

{
   asn1Print_MsgLimitDestructionRequest (name, &msgData);
}

void asn1Print_MsgLimitDestruction (ASN1ConstCharPtr name, ASN1T_MsgLimitDestruction* pvalue)
{
   asn1Print_OID (name, pvalue);
}

void ASN1C_MsgLimitDestruction::Print (ASN1ConstCharPtr name)

{
   asn1Print_MsgLimitDestruction (name, &msgData);
}

void asn1Print_MsgLimaCreationRequestAck (ASN1ConstCharPtr name, ASN1T_MsgLimaCreationRequestAck* pvalue)
{
   asn1Print_EnumInfoContextErrorCode (name, pvalue);
}

void ASN1C_MsgLimaCreationRequestAck::Print (ASN1ConstCharPtr name)

{
   asn1Print_MsgLimaCreationRequestAck (name, &msgData);
}

void asn1Print_MsgLimaCreationRequest (ASN1ConstCharPtr name, ASN1T_MsgLimaCreationRequest* pvalue)
{
   asn1Print_TacticalLine (name, pvalue);
}

void ASN1C_MsgLimaCreationRequest::Print (ASN1ConstCharPtr name)

{
   asn1Print_MsgLimaCreationRequest (name, &msgData);
}

void asn1Print_MsgLimaCreation (ASN1ConstCharPtr name, ASN1T_MsgLimaCreation* pvalue)
{
   char namebuf[512];

   sprintf (namebuf, "%s.oid", name);
   asn1Print_OID (namebuf, &pvalue->oid);

   sprintf (namebuf, "%s.tactical_line", name);
   asn1Print_TacticalLine (namebuf, &pvalue->tactical_line);

}

void ASN1C_MsgLimaCreation::Print (ASN1ConstCharPtr name)

{
   asn1Print_MsgLimaCreation (name, &msgData);
}

void asn1Print_MsgLimaUpdateRequestAck (ASN1ConstCharPtr name, ASN1T_MsgLimaUpdateRequestAck* pvalue)
{
   asn1Print_EnumInfoContextErrorCode (name, pvalue);
}

void ASN1C_MsgLimaUpdateRequestAck::Print (ASN1ConstCharPtr name)

{
   asn1Print_MsgLimaUpdateRequestAck (name, &msgData);
}

void asn1Print_MsgLimaUpdateRequest (ASN1ConstCharPtr name, ASN1T_MsgLimaUpdateRequest* pvalue)
{
   char namebuf[512];

   sprintf (namebuf, "%s.oid", name);
   asn1Print_OID (namebuf, &pvalue->oid);

   sprintf (namebuf, "%s.tactical_line", name);
   asn1Print_TacticalLine (namebuf, &pvalue->tactical_line);

}

void ASN1C_MsgLimaUpdateRequest::Print (ASN1ConstCharPtr name)

{
   asn1Print_MsgLimaUpdateRequest (name, &msgData);
}

void asn1Print_MsgLimaUpdate (ASN1ConstCharPtr name, ASN1T_MsgLimaUpdate* pvalue)
{
   char namebuf[512];

   sprintf (namebuf, "%s.oid", name);
   asn1Print_OID (namebuf, &pvalue->oid);

   sprintf (namebuf, "%s.tactical_line", name);
   asn1Print_TacticalLine (namebuf, &pvalue->tactical_line);

}

void ASN1C_MsgLimaUpdate::Print (ASN1ConstCharPtr name)

{
   asn1Print_MsgLimaUpdate (name, &msgData);
}

void asn1Print_MsgLimaDestructionRequestAck (ASN1ConstCharPtr name, ASN1T_MsgLimaDestructionRequestAck* pvalue)
{
   asn1Print_EnumInfoContextErrorCode (name, pvalue);
}

void ASN1C_MsgLimaDestructionRequestAck::Print (ASN1ConstCharPtr name)

{
   asn1Print_MsgLimaDestructionRequestAck (name, &msgData);
}

void asn1Print_MsgLimaDestructionRequest (ASN1ConstCharPtr name, ASN1T_MsgLimaDestructionRequest* pvalue)
{
   asn1Print_OID (name, pvalue);
}

void ASN1C_MsgLimaDestructionRequest::Print (ASN1ConstCharPtr name)

{
   asn1Print_MsgLimaDestructionRequest (name, &msgData);
}

void asn1Print_MsgLimaDestruction (ASN1ConstCharPtr name, ASN1T_MsgLimaDestruction* pvalue)
{
   asn1Print_OID (name, pvalue);
}

void ASN1C_MsgLimaDestruction::Print (ASN1ConstCharPtr name)

{
   asn1Print_MsgLimaDestruction (name, &msgData);
}

