<project name="gosword" default="all">

    <property environment="env"/>
    <property name="env.PONEY_HOME" value="//file1/masa/common/dev/common/poney"/>
    <import file="${env.PONEY_HOME}/poney.xml"/>

    <var name="repositories" value="${repositories},${sword.repository}"/>
    <property name="sword_branch" value="trunk"/>
    <property name="test.port" value="35000"/>

    <target name="update">
        <update name="gocheck"/>
        <update name="golang"/>
        <update name="goprotobuf"/>
        <update name="models" package="decisional-dev" todir="${data.dir}/data/models"/>
        <update name="models" package="terrains-dev" todir="${data.dir}/data/terrains"/>
        <update name="protobuf"/>
        <update name="sword" 
                version="Defense/releases/internal/${sword_branch}"
                package="protobuf-dev"
                todir="${src.dir}/sword"/>
        <update name="sword"
                version="Defense/releases/internal/${sword_branch}"
                package="SWORD_binaries_${platform}_${sword_branch}"
                todir="${run.dir}"/>
    </target>

    <target name="proto">
        <go_proto input="${src.dir}/sword"/>
    </target>

    <target name="configure" depends="update,proto"/>    

    <target name="build">
        <go cmd="install"/>
    </target>

    <target name="test">
        <echo message="test.port=${test.port}"/>
        <go cmd="vet"/>
        <go cmd="test">
            <arg value="-i"/>
        </go>
        <go cmd="test">
            <!-- We currently need this to avoid port collisions in tests
                 belonging to the same module. Note that it does not prevent
                 tests belonging to different modules to run concurrently. We
                 need a port allocation solution instead.
            -->
            <arg value="-test.parallel=1"/>
            <arg value="--application=${run.dir}/simulation_app.exe"/>
            <arg value="--root-dir=${data.dir}"/>
            <arg value="--test-port=${test.port}"/>
            <!--arg value="-v=true"/-->
        </go>
    </target>

    <target name="package">
        <go_package/>
    </target>

    <target name="all" depends="update,proto,build,test,package"/>

    <!-- helper targets -->
    <target name="fmt">
        <go cmd="fmt"/>
    </target>    

</project>
