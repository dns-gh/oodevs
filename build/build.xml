<?xml version="1.0"?>
<project name="csword" default="all">

    <import file="//install/masa/common/dev/common/poney/poney.xml"/>

    <exec executable="svn" outputproperty="svn.info" failonerror="true">
        <arg line="info"/>
    </exec>
    <propertyregex property="svn.version" input="${svn.info}" regexp="Last Changed Rev: ([0-9]+)" select="\1"/>
    <property name="version.company" value="MASA Group"/>
    <property name="version.product" value="Sword-OT"/>
    <property name="version.version" value="1,0,0,${svn.version}"/>

    <!--
    ============================================================================
      tools
    ============================================================================
    -->
    <macrodef name="echo-files">
        <attribute name="files"/>
        <sequential>
            <for list="@{files}" param="file" delimiter=";">
                <sequential>
                    <echo>ERROR: @{file}</echo>
                </sequential>
            </for>
        </sequential>
    </macrodef>

    <macrodef name="compare-dirs">
        <attribute name="dir1"/>
        <attribute name="dir2"/>
        <attribute name="excludes" default=""/>
        <attribute name="includes" default=""/>
        <attribute name="property"/>
        <sequential>
            <fileset id="@{dir1}.id" dir="@{dir1}" excludes="@{excludes}" includes="@{includes}">
                <different targetdir="@{dir2}" ignorefiletimes="true"/> <!-- ne prend pas en compte les fichiers 'en trop' dans dir2 -->
            </fileset>
            <pathconvert property="@{property}.@{dir1}" refid="@{dir1}.id" setonempty="false"/>
            <fileset id="@{dir2}.id" dir="@{dir2}" excludes="@{excludes}" includes="@{includes}">
                <different targetdir="@{dir1}" ignorefiletimes="true"/>
            </fileset>
            <pathconvert property="@{property}.@{dir2}" refid="@{dir2}.id" setonempty="false"/>
            <if>
                <and>
                    <isset property="@{property}.@{dir1}"/>
                    <isset property="@{property}.@{dir2}"/>
                </and>
                <then>
                    <property name="@{property}" value="${@{property}.@{dir1}};${@{property}.@{dir2}}"/>
                </then>
            </if>
            <if>
                <isset property="@{property}.@{dir1}"/>
                <then>
                    <property name="@{property}" value="${@{property}.@{dir1}}"/>
                </then>
            </if>
            <if>
                <isset property="@{property}.@{dir2}"/>
                <then>
                    <property name="@{property}" value="${@{property}.@{dir2}}"/>
                </then>
            </if>
        </sequential>
    </macrodef>

    <!--
    ============================================================================
      libraries
    ============================================================================
    -->
    <target name="libraries" description="build all libraries"
            depends="library.tools,library.MT_Tools,library.ENT,library.game_asn,library.game_asn,library.simulation_terrain,library.simulation_kernel,
                     library.clients_kernel,library.clients_gui,library.gaming,library.preparation,
                     library.bml_plugin,library.crossbow_plugin,library.gearth_plugin,library.hla_plugin,library.dis_plugin,library.tic_plugin,library.messenger_plugin,library.3a"/>

    <target name="library.tools" description="build tools static library">
        <build-lib name="tools" pattern="lib${ant.project.name}_tools-${platform}-mt@{suffix}" suffix="-gd">
            <includepath path="${include.dir}/masasn"/>
        </build-lib>
    </target>

    <target name="library.MT_Tools" description="build MT_Tools static library">
        <build-lib name="MT_Tools" pattern="lib${ant.project.name}_MT_Tools-${platform}-mt@{suffix}" suffix="-gd"/>
    </target>

    <target name="library.game_asn" description="build game asn static library">
        <build-lib name="game_asn" pattern="lib${ant.project.name}_game_asn-${platform}-mt@{suffix}" suffix="-gd" warnings="none">
            <includepath path="${include.dir}/masasn"/>
        </build-lib>
    </target>

    <target name="library.ENT" description="build ENT static library">
        <build-lib name="ENT" depends="qt" pattern="lib${ant.project.name}_ENT-${platform}-mt@{suffix}" suffix="-gd"/>
    </target>


    <target name="library.dispatcher" description="build dispatcher static library" depends="library.MT_Tools,library.tools,library.game_asn">
        <build-lib name="dispatcher" pattern="lib${ant.project.name}_dispatcher-${platform}-mt@{suffix}" suffix="-gd">
            <includepath path="${include.dir}/masasn"/>
        </build-lib>
    </target>

    <target name="library.simulation_terrain" description="build simulation_terrain static library" depends="library.MT_Tools">
        <build-lib name="simulation_terrain" pattern="lib${ant.project.name}_simulation_terrain-${platform}-mt@{suffix}" suffix="-gd"/>
    </target>

    <target name="library.simulation_kernel" description="build simulation_kernel static library" depends="library.tools,library.game_asn,library.simulation_terrain">
        <build-lib name="simulation_kernel" pattern="lib${ant.project.name}_simulation_kernel-${platform}-mt@{suffix}" suffix="-gd">
            <includepath path="${include.dir}/masasn"/>
            <includepath path="${libraries.dir}/simulation_kernel"/> <!-- pour MIL.h -->
            <defineset define="USE_DLL"/> <!-- folk use dll -->
        </build-lib>
    </target>

    <target name="library.clients_kernel" description="build clients_kernel static library" depends="library.tools,library.ENT">
        <build-lib name="clients_kernel" depends="qt" pattern="lib${ant.project.name}_clients_kernel-${platform}-mt@{suffix}" suffix="-gd"/>
    </target>

    <target name="library.clients_gui" description="build clients_gui static library" depends="library.clients_kernel">
        <build-lib name="clients_gui" excludes="**/font/*,**/splashscreen.cpp" depends="qt" pattern="lib${ant.project.name}_clients_gui-${platform}-mt@{suffix}" suffix="-gd"/>
        <zip destfile="${run.dir}/symbols.pak">
            <fileset dir="${libraries.dir}/clients_gui/svg" includes="**/*"/>
        </zip>
    </target>

    <target name="library.gaming" description="build gaming static library" depends="library.game_asn,library.clients_gui">
        <build-lib name="gaming" depends="qt" pattern="lib${ant.project.name}_gaming-${platform}-mt@{suffix}" suffix="-gd">
            <includepath path="${include.dir}/masasn"/>
        </build-lib>
    </target>

    <target name="library.preparation" description="build preparation static library" depends="library.clients_gui">
        <build-lib name="preparation" depends="qt" pattern="lib${ant.project.name}_preparation-${platform}-mt@{suffix}" suffix="-gd"/>
    </target>

    <target name="library.frontend" description="build frontend static library" depends="library.clients_gui">
        <build-lib name="frontend" depends="qt" pattern="lib${ant.project.name}_frontend-${platform}-mt@{suffix}" suffix="-gd"/>
    </target>

    <target name="library.3a" description="build 3a static library" depends="library.dispatcher">
        <build-lib name="3a" pattern="lib${ant.project.name}_3a-${platform}-mt@{suffix}" suffix="-gd">
            <includepath path="${include.dir}/masasn"/>
        </build-lib>
    </target>

    <target name="library.bml_plugin" description="build BML dispatcher plugin static library" depends="library.dispatcher">
        <build-lib name="bml_plugin" pattern="lib${ant.project.name}_bml_plugin-${platform}-mt@{suffix}" suffix="-gd">
            <includepath path="${include.dir}/masasn"/>
        </build-lib>
    </target>

    <target name="library.crossbow_plugin" description="build crossbow dispatcher plugin static library" depends="library.MT_Tools,library.tools,library.game_asn">
        <build-lib name="crossbow_plugin" pattern="lib${ant.project.name}_crossbow_plugin-${platform}-mt@{suffix}" suffix="-gd">
            <includepath path="${include.dir}/masasn"/>
            <includepath path="${include.dir}/esri"/>
        </build-lib>
    </target>

    <target name="library.gearth_plugin" description="build google-earth dispatcher plugin static library" depends="library.MT_Tools,library.tools,library.game_asn">
        <build-lib name="gearth_plugin" pattern="lib${ant.project.name}_gearth_plugin-${platform}-mt@{suffix}" suffix="-gd">
            <includepath path="${include.dir}/masasn"/>
        </build-lib>
    </target>

    <target name="library.hla_plugin" description="build hla_plugin static library" depends="library.dispatcher">
        <build-lib name="hla_plugin" pattern="lib${ant.project.name}_hla_plugin-${platform}-mt@{suffix}" suffix="-gd">
            <includepath path="${include.dir}/masasn"/>
        </build-lib>
    </target>

    <target name="library.dis_plugin" description="build dis_plugin static library" depends="library.dispatcher">
        <build-lib name="dis_plugin" pattern="lib${ant.project.name}_dis_plugin-${platform}-mt@{suffix}" suffix="-gd">
            <includepath path="${include.dir}/masasn"/>
        </build-lib>
    </target>

    <target name="library.tic_plugin" description="build tic_plugin static library" depends="library.dispatcher">
        <build-lib name="tic_plugin" pattern="lib${ant.project.name}_tic_plugin-${platform}-mt@{suffix}" suffix="-gd">
            <includepath path="${include.dir}/masasn"/>
        </build-lib>
    </target>

    <target name="library.messenger_plugin" description="build messenger_plugin static library" depends="library.dispatcher">
        <build-lib name="messenger_plugin" pattern="lib${ant.project.name}_messenger_plugin-${platform}-mt@{suffix}" suffix="-gd">
            <includepath path="${include.dir}/masasn"/>
        </build-lib>
    </target>

    <target name="library.plugins" description="build all dispatcher plugins"
            depends="library.messenger_plugin,library.tic_plugin,library.dis_plugin,library.hla_plugin,
                     library.bml_plugin,library.crossbow_plugin,library.gearth_plugin"/>

    <!--
    ============================================================================
     applications
    ============================================================================
    -->
    <target name="applications" description="build CSword executables"
            depends="applications.simulation,applications.clients,applications.frontends"/>

    <target name="applications.simulation" description="build CSword Simulation executables"
            depends="application.dispatcher_app,application.simulation_app,application.replayer_app,application.AGR" />

    <target name="applications.clients" description="build CSword Client executables"
            depends="application.gaming_app,application.preparation_app,application.adaptation_app"/>

    <target name="applications.frontends" description="build CSword Frontend executables"
            depends="application.selftraining_app,application.frontend_app"/>

    <target name="application.dispatcher_dll" description="build CSword Dispatcher dll" depends="library.dispatcher,library.plugins">
        <build-lib name="dispatcher_dll" outtype="shared" mode="release" depends="mt,din,boost,terrain,xeumeuleu,flexlm"
                   pattern="dispatcher-${platform}-mt@{suffix}"
                   libs="HLA,libFedTime,masalloc,tools,masasn
                         lib${ant.project.name}_tools-${platform}-mt
                         lib${ant.project.name}_MT_Tools-${platform}-mt
                         lib${ant.project.name}_game_asn-${platform}-mt
                         lib${ant.project.name}_dispatcher-${platform}-mt
                         lib${ant.project.name}_hla_plugin-${platform}-mt
                         lib${ant.project.name}_dis_plugin-${platform}-mt
                         lib${ant.project.name}_tic_plugin-${platform}-mt
                         lib${ant.project.name}_bml_plugin-${platform}-mt
                         lib${ant.project.name}_messenger_plugin-${platform}-mt
                         lib${ant.project.name}_clients_kernel-${platform}-mt">
            <syslibset libs="dbghelp,psapi,iphlpapi,user32"/>
            <includepath path="${include.dir}/masasn"/>
            <defineset define="DISPATCHER_DLL_EXPORTS"/>
            <linkerarg value="/FIXED:NO"/>
        </build-lib>
    </target>

    <target name="application.dispatcher_dll.crossbowed" description="build CSword Dispatcher dll with crossbow" depends="library.dispatcher,library.plugins">
        <build-lib name="dispatcher_dll_crossbowed" outtype="shared" mode="release" depends="mt,din,boost,terrain,xeumeuleu,flexlm" input="dispatcher_dll"
                   pattern="dispatcher_crossbowed-${platform}-mt@{suffix}"
                   libs="HLA,libFedTime,masalloc,tools,masasn
                         lib${ant.project.name}_tools-${platform}-mt
                         lib${ant.project.name}_MT_Tools-${platform}-mt
                         lib${ant.project.name}_game_asn-${platform}-mt
                         lib${ant.project.name}_dispatcher-${platform}-mt
                         lib${ant.project.name}_hla_plugin-${platform}-mt
                         lib${ant.project.name}_dis_plugin-${platform}-mt
                         lib${ant.project.name}_tic_plugin-${platform}-mt
                         lib${ant.project.name}_bml_plugin-${platform}-mt
                         lib${ant.project.name}_messenger_plugin-${platform}-mt
                         lib${ant.project.name}_crossbow_plugin-${platform}-mt
                         lib${ant.project.name}_gearth_plugin-${platform}-mt
                         lib${ant.project.name}_clients_kernel-${platform}-mt">
            <syslibset libs="dbghelp,psapi,iphlpapi,user32"/>
            <includepath path="${include.dir}/masasn"/>
            <defineset define="DISPATCHER_DLL_EXPORTS,CROSSBOW_PLUGIN"/>
            <linkerarg value="/FIXED:NO"/>
        </build-lib>
    </target>

    <target name="application.dispatcher_app" description="build CSword Dispatcher executable" depends="application.dispatcher_dll">
        <build-app name="dispatcher_app" subsystem="console" depends="mt,din,boost,terrain,xeumeuleu,flexlm"
                   libs="masalloc,tools
                         dispatcher-${platform}-mt@{suffix}
                         lib${ant.project.name}_tools-${platform}-mt@{suffix}
                         lib${ant.project.name}_MT_Tools-${platform}-mt@{suffix}">
            <syslibset libs="dbghelp,psapi,iphlpapi,user32"/>
        </build-app>
    </target>

    <target name="application.simulation_app" description="build CSword Simulation executable" depends="library.dispatcher">
        <build-app name="simulation_app" subsystem="console" depends="mt,din,dia3,terrain,boost,xeumeuleu,flexlm"
                   libs="HLA,libFedTime,masalloc,tools,masasn
                         population-${platform}-mt@{suffix}
                         dispatcher-${platform}-mt@{suffix}
                         lib${ant.project.name}_tools-${platform}-mt@{suffix}
                         lib${ant.project.name}_MT_Tools-${platform}-mt@{suffix}
                         lib${ant.project.name}_game_asn-${platform}-mt@{suffix}
                         lib${ant.project.name}_simulation_terrain-${platform}-mt@{suffix}
                         lib${ant.project.name}_simulation_kernel-${platform}-mt@{suffix}" >
            <syslibset libs="dbghelp,psapi,iphlpapi"/>
            <includepath path="${libraries.dir}/simulation_kernel"/>
            <includepath path="${include.dir}/masasn"/>
            <defineset define="_WIN32_WINNT=0x0400"/> <!-- for 'IsDebuggerPresent()' -->
            <linkerarg value="/STACK:15000000"/>      <!-- Because of boost serialization -->
            <linkerarg value="/LARGEADDRESSAWARE"/>   <!-- Executable can access 3GiB instead of 2GiB -->
        </build-app>
    </target>

    <target name="application.replayer_app" description="build CSword replayer executable" depends="library.dispatcher,library.3a">
        <build-app name="replayer_app" subsystem="console" depends="mt,din,dia3,terrain,boost,xeumeuleu,flexlm"
                   libs="HLA,libFedTime,tools,masasn,
                         lib${ant.project.name}_tools-${platform}-mt
                         lib${ant.project.name}_MT_Tools-${platform}-mt
                         lib${ant.project.name}_game_asn-${platform}-mt
                         lib${ant.project.name}_dispatcher-${platform}-mt
                         lib${ant.project.name}_3a-${platform}-mt
                         lib${ant.project.name}_clients_kernel-${platform}-mt" >
            <syslibset libs="dbghelp,psapi,iphlpapi,user32"/>
            <includepath path="${include.dir}/masasn"/>
        </build-app>
    </target>

    <target name="application.adaptation_app" description="build CSword Adaptation executable" depends="library.ENT,library.clients_gui">
        <build-app name="adaptation_app" depends="mt,qt,xeumeuleu,boost" excludes="**/XmlResources.cpp"
                   libs="lib${ant.project.name}_ENT-${platform}-mt
                         lib${ant.project.name}_clients_gui-${platform}-mt
                         lib${ant.project.name}_clients_kernel-${platform}-mt" pch-excludes="qtundo.cpp">
            <syslibset libs="advapi32,user32"/>
        </build-app>
    </target>

    <target name="application.gaming_app" description="build CSword Gaming executable" depends="library.gaming">
        <build-app name="gaming_app" excludes="**/**_Gen.*" depends="terrain,xeumeuleu,qt,boost,flexlm"
                   libs="masasn,svgl,zipstream,zlib1,shapelib,bugtrap
                         lib${ant.project.name}_tools-${platform}-mt
                         lib${ant.project.name}_game_asn-${platform}-mt
                         lib${ant.project.name}_ENT-${platform}-mt
                         lib${ant.project.name}_gaming-${platform}-mt
                         lib${ant.project.name}_clients_gui-${platform}-mt
                         lib${ant.project.name}_clients_kernel-${platform}-mt">
            <includepath path="${include.dir}/masasn"/>
            <syslibset libs="gdi32,psapi,dbghelp"/>
        </build-app>
    </target>

    <target name="application.preparation_app" description="build CSword Gaming executable" depends="library.preparation">
        <build-app name="preparation_app" excludes="**/**_Gen.*" depends="terrain,xeumeuleu,qt,boost,flexlm"
                   libs="svgl,zipstream,zlib1,bugtrap
                         lib${ant.project.name}_tools-${platform}-mt
                         lib${ant.project.name}_ENT-${platform}-mt
                         lib${ant.project.name}_preparation-${platform}-mt
                         lib${ant.project.name}_clients_gui-${platform}-mt
                         lib${ant.project.name}_clients_kernel-${platform}-mt">
            <syslibset libs="gdi32,psapi,dbghelp"/>
        </build-app>
    </target>

    <target name="application.frontend_app" description="build CSword Frontend executable" depends="library.frontend">
        <build-app name="frontend_app" depends="qt,boost,xeumeuleu,flexlm"
                   libs="bugtrap,zipstream,zlib1,tools
                         lib${ant.project.name}_tools-${platform}-mt
                         lib${ant.project.name}_ENT-${platform}-mt
                         lib${ant.project.name}_frontend-${platform}-mt
                         lib${ant.project.name}_clients_gui-${platform}-mt
                         lib${ant.project.name}_clients_kernel-${platform}-mt">
            <syslibset libs="gdi32"/>
        </build-app>
    </target>

    <target name="application.selftraining_app" description="build CSword Self-training executable" depends="library.frontend">
        <build-app name="selftraining_app" depends="qt,boost,xeumeuleu,flexlm" excludes="**/graphics.cpp"
                   libs="bugtrap,zipstream,zlib1,tools
                         lib${ant.project.name}_tools-${platform}-mt
                         lib${ant.project.name}_ENT-${platform}-mt
                         lib${ant.project.name}_frontend-${platform}-mt
                         lib${ant.project.name}_clients_gui-${platform}-mt
                         lib${ant.project.name}_clients_kernel-${platform}-mt">
            <syslibset libs="gdi32"/>
        </build-app>
    </target>

    <target name="application.AGR" description="build AGR executable">
        <build-app name="AGR" subsystem="console" excludes="**/*_Skeleton.*" depends="mt,boost,xeumeuleu">
            <syslibset libs="user32"/>
        </build-app>
    </target>

    <!--
    ============================================================================
      clean
    ============================================================================
    -->
    <target name="clean" description="clean intermediate build artifacts">
        <delete dir="${out.dir}"/>
    </target>

    <!--
    ============================================================================
      license
    ============================================================================
    -->
    <target name="generate-license" description="generate license file in run directory">
        <flexlm feature="sword" vendor="bkmasa"/>
    </target>

    <!--
    ============================================================================
      tests
    ============================================================================
    -->
    <target name="test" depends="generate-license,test-scripts,test-adaptation,3a_test,plugins_test" description="run all tests"/>

    <target name="3a_test" depends="library.3a">
        <build-test name="3a" depends="xeumeuleu,terrain,boost" libs="lib${ant.project.name}_3a-${platform}-mt@{suffix}">
            <includepath path="${include.dir}/masasn"/>
        </build-test>
    </target>

    <target name="plugins_test" depends="library.hla_plugin,library.tic_plugin,library.bml_plugin">
        <build-test name="plugins" depends="terrain,boost,xeumeuleu"
            libs="lib${ant.project.name}_hla_plugin-${platform}-mt@{suffix}
                  lib${ant.project.name}_tic_plugin-${platform}-mt@{suffix}
                  lib${ant.project.name}_bml_plugin-${platform}-mt@{suffix}"/>
    </target>

    <macrodef name="test-scripts">
        <attribute name="dataset"/>
        <attribute name="physical"/>
        <sequential>
            <delete dir="${data.dir}/exercises/test-scripts"/>
            <mkdir dir="${data.dir}/exercises/test-scripts"/>
            <mkdir dir="${data.dir}/exercises/test-scripts/sessions"/>
            <mkdir dir="${data.dir}/exercises/test-scripts/sessions/test-session"/>
            <copy file="test-scripts/session.xml" todir="${data.dir}/exercises/test-scripts/sessions/test-session"/>
            <copy file="test-scripts/orbat.xml" todir="${data.dir}/exercises/test-scripts"/>
            <copy file="test-scripts/profiles.xml" todir="${data.dir}/exercises/test-scripts"/>
            <copy file="test-scripts/weather.xml" todir="${data.dir}/exercises/test-scripts"/>
            <copy file="test-scripts/exercise.xml.tmpl" tofile="${data.dir}/exercises/test-scripts/exercise.xml" overwrite="true">
                <filterset>
                    <filter token="DATASET" value="@{dataset}"/>
                    <filter token="PHYSICAL" value="@{physical}"/>
                </filterset>
            </copy>
            <exec executable="${out.dir}/release/applications/simulation_app/simulation_app.exe" dir="${run.dir}" failonerror="true" resolveexecutable="true" vmlauncher="false">
                <arg value="--root-dir=../../data"/>
                <arg value="--exercise=test-scripts"/>
                <arg value="--session=test-session"/>
                <arg value="--test"/>
            </exec>
            <delete dir="${data.dir}/exercises/test-scripts"/>
        </sequential>
    </macrodef>

    <target name="test-scripts" description="run all tests">
        <test-scripts dataset="test" physical=""/>
        <test-scripts dataset="main" physical="france"/>
        <test-scripts dataset="main" physical="worldwide"/>
        <test-scripts dataset="ada" physical="france"/>
        <test-scripts dataset="ada" physical="worldwide"/>
    </target>

    <macrodef name="test-adaptation">
        <attribute name="physical"/>
        <sequential>
            <property name="adaptation_test.dir1" value="${data.dir}/data/models/@{physical}"/>
            <property name="adaptation_test.dir2" value="${run.dir}/adaptation_test/main"/>
            <delete dir="${adaptation_test.dir2}"/>
            <exec executable="${out.dir}/release/applications/adaptation_app/adaptation_app.exe" dir="${run.dir}" failonerror="true" resolveexecutable="true" vmlauncher="false">
                <arg value="-i"/>
                <arg value="${adaptation_test.dir1}/physical.xml"/>
                <arg value="-o"/>
                <arg value="${adaptation_test.dir2}/physical.xml"/>
            </exec>
            <compare-dirs dir1="${adaptation_test.dir1}" dir2="${adaptation_test.dir2}"
                          excludes="**/Pathfind.xml,**/dis.xml"
                          includes="**/*.xml" property="adaptation_test.is-different"/>
            <if>
                <isset property="adaptation_test.is-different"/>
                <then>
                    <echo>"ERROR: the following files differ :</echo>
                    <echo-files files="${adaptation_test.is-different}"/>
                    <fail message="saved data differs from loaded data."/>
                </then>
            </if>
        </sequential>
    </macrodef>

    <target name="test-adaptation" description="load and save adaptation main data, check that output==input">
        <test-adaptation physical="main/physical/worldwide"/>
        <test-adaptation physical="main/physical/france"/>
        <test-adaptation physical="test/physical"/>
    </target>

    <!--
    ============================================================================
      package
    ============================================================================
    -->
    <target name="package" description="create the installer">
        <!--nsis todir="${dist.dir}/current" name="sword-ot"      script="sword-ot.nsi"/-->
        <nsis todir="${dist.dir}/current/${platform}" name="sword-ot-ada"  script="sword-ot-ada.nsi">
            <arg value="/X!include sword-ot.nsh"/>
        </nsis>
        <nsis todir="${dist.dir}/current/${platform}" name="sword-ot-demo" script="sword-ot-demo.nsi" license="true">
            <arg value="/X!include sword-ot.nsh"/>
        </nsis>
    </target>

    <target name="crossbow-installer" description="create the crossbow installer">
        <nsis todir="${dist.dir}/current" name="crossbow_install" script="crossbow.nsi"/>
        <!-- <exec executable="${bin.dir}/RegAsm.exe">
            <arg value="../out/applications/crossbow_app/vc80/Release/Crossbow.dll"/>
            <arg value="/codebase"/>
            <arg value="/regfile:SwordCrossbow.reg"/>
        </exec> -->
        <!--<nsis todir="${dist.dir}/current" name="crossbow_installer" script="crossbow_installer.nsi"/>-->
    </target>
    <!--
    ============================================================================
      configure
    ============================================================================
    -->
    <target name="configure" description="initialize local project structure with libraries">
        <update name="terrain" modules="terrain,geometry,geocoord,graphics,pathfind"/>
        <update name="terrain" package="generation_app_${platform}"/>
        <update name="MT" modules="MT_Tools,MT_Memory,MT_IO,MT_Archive,MT_Patterns,MT_Profiler,MT_Time,MT_Thread,MT_Logger,MT_XmlTools,MT_Qt"/>
        <update name="qt" version="3.3.8"/>
        <update name="DIN"/>
        <update name="boost"/>
        <update name="rti"/>
        <update name="DIA" version="3.5"/>
        <update name="DIA" version="3.5" package="DIA_Tool_DebugGUI_${platform}"/>
        <update name="hla"/>
        <update name="tools"/>
        <update name="flexlm"/>
        <update name="xerces-c"/>
        <update name="xeumeuleu"/>
        <update name="svgl"/>
        <update name="zipstream"/>
        <update name="zlib"/>
        <update name="bugtrap"/>
        <update name="shapelib"/>
        <update name="esri"/>
        <update name="folk"/>
        <update name="mockpp"/>
        <update name="system"/>
    </target>

    <!--
    ============================================================================
      main
    ============================================================================
    -->
    <target name="build" depends="libraries,applications"/>

    <target name="all" depends="configure,build,test,package" description="build and package distribution"/>

</project>
