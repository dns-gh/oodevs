<?xml version="1.0"?>
<project name="csword" default="all">

    <!-- Generate 3 months evaluation license -->
    <property name="flex.name" value="evaluation"/>
    <property name="flex.hostid" value="ANY"/>
    <tstamp>
        <format property="flex.expiration" pattern="d-MMM-yyyy" offset="3" unit="month" locale="en,US"/>
    </tstamp>

    <import file="//install/masa/common/dev/common/poney/poney.xml"/>

    <svn>
        <status path="${root.dir}" lastChangedRevisionProperty="svn.version"/>
    </svn>
    <property name="version.company" value="MASA Group"/>
    <property name="version.product" value="Sword"/>
    <property name="version.major" value="4.1.1"/>
    <property name="version.minor" value="${version.major}.${svn.version}"/>
    <property name="version.version" value="${version.minor}"/><!-- required for version extension -->

    <!--
    ============================================================================
      tools
    ============================================================================
    -->
    <macrodef name="echo-files">
        <attribute name="files"/>
        <attribute name="prefix" default=""/>
        <sequential>
            <for list="@{files}" param="file" delimiter=";">
                <sequential>
                    <echo>@{prefix}@{file}</echo>
                </sequential>
            </for>
        </sequential>
    </macrodef>

    <macrodef name="compare-dirs">
        <attribute name="dir1"/>
        <attribute name="dir2"/>
        <attribute name="excludes" default=""/>
        <attribute name="includes" default=""/>
        <attribute name="property"/>
        <sequential>
            <fileset id="@{dir1}.id" dir="@{dir1}" excludes="@{excludes}" includes="@{includes}">
                <different targetdir="@{dir2}" ignorefiletimes="true"/> <!-- ne prend pas en compte les fichiers 'en trop' dans dir2 -->
            </fileset>
            <pathconvert property="@{property}.@{dir1}" refid="@{dir1}.id" setonempty="false"/>
            <fileset id="@{dir2}.id" dir="@{dir2}" excludes="@{excludes}" includes="@{includes}">
                <different targetdir="@{dir1}" ignorefiletimes="true"/>
            </fileset>
            <pathconvert property="@{property}.@{dir2}" refid="@{dir2}.id" setonempty="false"/>
            <if>
                <and>
                    <isset property="@{property}.@{dir1}"/>
                    <isset property="@{property}.@{dir2}"/>
                </and>
                <then>
                    <property name="@{property}" value="${@{property}.@{dir1}};${@{property}.@{dir2}}"/>
                </then>
            </if>
            <if>
                <isset property="@{property}.@{dir1}"/>
                <then>
                    <property name="@{property}" value="${@{property}.@{dir1}}"/>
                </then>
            </if>
            <if>
                <isset property="@{property}.@{dir2}"/>
                <then>
                    <property name="@{property}" value="${@{property}.@{dir2}}"/>
                </then>
            </if>
        </sequential>
    </macrodef>

    <!--
    ============================================================================
      libraries
    ============================================================================
    -->
    <target name="libraries.nocrossbow" description="build all libraries"
            depends="library.tools,library.MT_Tools,library.ENT,library.protocol,library.simulation_terrain,library.simulation_kernel,
                     library.clients_kernel,library.clients_gui,library.actions,library.actions_static,library.actions_gui,library.reports,library.gaming,library.preparation,
                     library.bml_plugin,library.hla_plugin,library.dis_plugin,library.tic_plugin,library.messenger_plugin,library.logger_plugin,
                     library.aar_plugin,library.rights_plugin,library.saver_plugin,library.replay_plugin,library.3a"/>

    <target name="libraries.crossbow" description="build all libraries" depends="libraries.nocrossbow,library.crossbow_plugin"/>

    <target name="library.tools" description="build tools static library">
        <build-lib name="tools" depends="qt" pattern="lib${ant.project.name}_tools-${platform}-mt@{suffix}" suffix="-gd">
            <defineset>
                <define name="APP_VERSION" value="${version.minor}"/>
            </defineset>
        </build-lib>
    </target>

    <target name="library.MT_Tools" description="build MT_Tools static library">
        <build-lib name="MT_Tools" pattern="lib${ant.project.name}_MT_Tools-${platform}-mt@{suffix}" suffix="-gd"/>
    </target>

    <target name="library.protocol" description="build protocol static library">
        <mkdir dir="${out.dir}/protocol"/>
        <exec dir="${bin.dir}" executable="${bin.dir}/protoc" failonerror="true" timeout="600000">
            <arg value="-I=${libraries.dir}/protocol/proto"/>
            <arg value="--cpp_out=${out.dir}/protocol"/>
            <arg value="${libraries.dir}/protocol/proto/*.proto"/>
        </exec>
        <compare-dirs dir1="${libraries.dir}/protocol/generated" dir2="${out.dir}/protocol"
                includes="**/*.h,**/*.cc" property="protocol.is-different"/>
        <if>
            <isset property="protocol.is-different"/>
            <then>
                <echo>"[protocol] The following files differ :</echo>
                <echo-files files="${protocol.is-different}"/>
                <copy todir="${libraries.dir}/protocol/generated">
                    <fileset dir="${out.dir}/protocol" includes="**/*.h,**.cc"/>
                </copy>
            </then>
        </if>
        <delete dir="${out.dir}/protocol"/>
        <build-lib name="protocol" pattern="lib${ant.project.name}_protocol-${platform}-mt@{suffix}" suffix="-gd" warnings="none" excludes="**/*.cc"/>
    </target>

    <target name="library.ENT" description="build ENT static library">
        <build-lib name="ENT" depends="qt" pattern="lib${ant.project.name}_ENT-${platform}-mt@{suffix}" suffix="-gd"/>
    </target>

    <target name="library.dispatcher" description="build dispatcher static library" depends="library.MT_Tools,library.tools,library.protocol,library.meteo">
        <build-lib name="dispatcher" pattern="lib${ant.project.name}_dispatcher-${platform}-mt@{suffix}" suffix="-gd" depends="qt">
            <defineset define="MT_AUTO_LINK"/>
        </build-lib>
    </target>

    <target name="library.simulation_terrain" description="build simulation_terrain static library" depends="library.MT_Tools">
        <build-lib name="simulation_terrain" pattern="lib${ant.project.name}_simulation_terrain-${platform}-mt@{suffix}" suffix="-gd"/>
    </target>

    <target name="library.simulation_kernel" description="build simulation_kernel static library" depends="library.tools,library.protocol,library.simulation_terrain,library.simulation_orders,library.meteo,library.resource_network">
        <build-lib name="simulation_kernel" pattern="lib${ant.project.name}_simulation_kernel-${platform}-mt@{suffix}" suffix="-gd">
            <includepath path="${libraries.dir}/simulation_kernel"/> <!-- pour MIL.h -->
            <defineset define="USE_DLL"/> <!-- folk use dll -->
        </build-lib>
    </target>

    <target name="library.simulation_orders" description="build simulation_orders static library" depends="library.tools,library.protocol">
        <build-lib name="simulation_orders" pattern="lib${ant.project.name}_simulation_orders-${platform}-mt@{suffix}" suffix="-gd"/>
    </target>

    <target name="library.clients_kernel" description="build clients_kernel static library" depends="library.tools,library.ENT">
        <build-lib name="clients_kernel" depends="qt" pattern="lib${ant.project.name}_clients_kernel-${platform}-mt@{suffix}" suffix="-gd"/>
    </target>

    <target name="library.clients_gui" description="build clients_gui static library" depends="library.clients_kernel">
        <build-lib name="clients_gui" excludes="**/font/*" depends="qt" pattern="lib${ant.project.name}_clients_gui-${platform}-mt@{suffix}" suffix="-gd" />
        <zip destfile="${run.dir}/resources/symbols.pak">
            <fileset dir="${libraries.dir}/clients_gui/svg" includes="**/*"/>
        </zip>
    </target>

    <target name="library.actions" description="build actions static library" depends="library.protocol,library.clients_kernel">
        <build-lib name="actions" depends="qt" pattern="lib${ant.project.name}_actions-${platform}-mt@{suffix}" suffix="-gd"/>
    </target>

    <target name="library.actions_static" description="build actions static library" depends="library.protocol,library.clients_kernel">
        <build-lib name="actions_static" depends="qt" pattern="lib${ant.project.name}_actions-static-${platform}-mt@{suffix}" input="actions" suffix="-gd"/>
    </target>

    <target name="library.actions_gui" description="build actions_gui static library" depends="library.clients_gui,library.actions">
        <build-lib name="actions_gui" depends="boost,qt,xerces" pattern="lib${ant.project.name}_actions_gui-${platform}-mt@{suffix}" suffix="-gd"/>
    </target>

    <target name="library.indicators" description="build indicators static library" depends="library.clients_kernel">
        <build-lib name="indicators" depends="boost,qt,xerces" pattern="lib${ant.project.name}_indicators-${platform}-mt@{suffix}" suffix="-gd"/>
    </target>

    <target name="library.reports" description="build reports static library" depends="library.protocol,library.clients_kernel">
        <build-lib name="reports" depends="qt" pattern="lib${ant.project.name}_reports-${platform}-mt@{suffix}" suffix="-gd"/>
    </target>

    <target name="library.gaming" description="build gaming static library" depends="library.protocol,library.clients_gui,library.actions,library.actions_gui,library.indicators,library.reports,library.meteo">
        <build-lib name="gaming" depends="qt" pattern="lib${ant.project.name}_gaming-${platform}-mt@{suffix}" suffix="-gd"/>
    </target>

    <target name="library.preparation" description="build preparation static library" depends="library.clients_gui,library.actions_gui,library.indicators">
        <build-lib name="preparation" depends="qt" pattern="lib${ant.project.name}_preparation-${platform}-mt@{suffix}" suffix="-gd"/>
    </target>

    <target name="library.frontend" description="build frontend static library" depends="library.clients_gui">
        <build-lib name="frontend" depends="qt" pattern="lib${ant.project.name}_frontend-${platform}-mt@{suffix}" suffix="-gd"/>
    </target>

    <target name="library.3a" description="build 3a static library" depends="library.dispatcher">
        <build-lib name="3a" pattern="lib${ant.project.name}_3a-${platform}-mt@{suffix}" suffix="-gd"/>
    </target>

    <target name="library.bml_plugin" description="build BML dispatcher plugin static library" depends="library.dispatcher">
        <build-lib name="bml_plugin" pattern="lib${ant.project.name}_bml_plugin-${platform}-mt@{suffix}" suffix="-gd" depends="qt"/>
    </target>

    <target name="library.crossbow_plugin" description="build crossbow dispatcher plugin static library" depends="library.MT_Tools,library.tools,library.protocol">
        <build-lib name="crossbow_plugin" pattern="lib${ant.project.name}_crossbow_plugin-${platform}-mt@{suffix}" suffix="-gd" depends="qt">
<!--            <includepath path="${include.dir}/esri"/> -->
        </build-lib>
    </target>

    <target name="library.hla_plugin" description="build hla_plugin static library" depends="library.dispatcher">
        <build-lib name="hla_plugin" pattern="lib${ant.project.name}_hla_plugin-${platform}-mt@{suffix}" suffix="-gd" depends="qt"/>
    </target>

    <target name="library.dis_plugin" description="build dis_plugin static library" depends="library.dispatcher">
        <build-lib name="dis_plugin" pattern="lib${ant.project.name}_dis_plugin-${platform}-mt@{suffix}" suffix="-gd" depends="qt"/>
    </target>

    <target name="library.tic_plugin" description="build tic_plugin static library" depends="library.dispatcher">
        <build-lib name="tic_plugin" pattern="lib${ant.project.name}_tic_plugin-${platform}-mt@{suffix}" suffix="-gd" depends="qt"/>
    </target>

    <target name="library.messenger_plugin" description="build messenger_plugin static library" depends="library.dispatcher">
        <build-lib name="messenger_plugin" pattern="lib${ant.project.name}_messenger_plugin-${platform}-mt@{suffix}" suffix="-gd" depends="qt"/>
    </target>

    <target name="library.aar_plugin" description="build aar_plugin static library" depends="library.dispatcher">
        <build-lib name="aar_plugin" pattern="lib${ant.project.name}_aar_plugin-${platform}-mt@{suffix}" suffix="-gd" depends="qt"/>
    </target>

    <target name="library.rights_plugin" description="build rights_plugin static library" depends="library.dispatcher">
        <build-lib name="rights_plugin" pattern="lib${ant.project.name}_rights_plugin-${platform}-mt@{suffix}" suffix="-gd" depends="qt"/>
    </target>

    <target name="library.saver_plugin" description="build saver_plugin static library" depends="library.dispatcher">
        <build-lib name="saver_plugin" pattern="lib${ant.project.name}_saver_plugin-${platform}-mt@{suffix}" suffix="-gd" depends="qt"/>
    </target>

    <target name="library.replay_plugin" description="build replay_plugin static library" depends="library.dispatcher">
        <build-lib name="replay_plugin" pattern="lib${ant.project.name}_replay_plugin-${platform}-mt@{suffix}" suffix="-gd" depends="qt"/>
    </target>

    <target name="library.resource_network" description="build resource network static library" depends="">
        <build-lib name="resource_network" pattern="lib${ant.project.name}_resource_network-${platform}-mt@{suffix}" suffix="-gd" depends=""/>
    </target>

    <target name="library.meteo" description="build meteo static library" depends="library.protocol,library.clients_kernel">
        <build-lib name="meteo" pattern="lib${ant.project.name}_meteo-${platform}-mt@{suffix}" suffix="-gd" depends="qt"/>
    </target>

    <target name="library.import" description="build import static library">
        <build-lib name="import" pattern="lib${ant.project.name}_import-${platform}-mt@{suffix}" suffix="-gd"/>
    </target>

    <target name="library.script_plugin" description="build script_plugin static library" depends="library.dispatcher">
        <build-lib name="script_plugin" pattern="lib${ant.project.name}_script_plugin-${platform}-mt@{suffix}" suffix="-gd" depends="qt"/>
        <mkdir dir="${run.dir}/resources/scripts"/>
        <copy todir="${run.dir}/resources/scripts">
            <fileset dir="${libraries.dir}/script_plugin" includes="**/*.lua"/>
        </copy>
    </target>

    <target name="library.timeline_plugin" description="build Timeline interoperability dispatcher plugin" depends="library.dispatcher">
        <build-lib name="timeline_plugin" pattern="lib${ant.project.name}_timeline_plugin-${platform}-mt@{suffix}" suffix="-gd" depends="qt"/>
    </target>

    <target name="library.score_plugin" description="build score_plugin static library" depends="library.dispatcher,library.3a,library.indicators">
        <build-lib name="score_plugin" depends="boost,qt" pattern="lib${ant.project.name}_score_plugin-${platform}-mt@{suffix}" suffix="-gd"/>
    </target>

    <target name="library.logger_plugin" description="build logger_plugin static library" depends="library.dispatcher,library.reports">
        <build-lib name="logger_plugin" depends="qt" pattern="lib${ant.project.name}_logger_plugin-${platform}-mt@{suffix}" suffix="-gd"/>
    </target>

    <target name="library.plugins.nocrossbow" description="build all dispatcher plugins"
            depends="library.messenger_plugin,library.tic_plugin,library.dis_plugin,library.hla_plugin,library.aar_plugin,
                     library.rights_plugin,library.saver_plugin,library.replay_plugin,library.3a,
                     library.bml_plugin,library.script_plugin,library.timeline_plugin,library.score_plugin,library.logger_plugin"/>

    <target name="library.plugins.crossbow" description="build all dispatcher plugins" depends="library.plugins.nocrossbow,library.crossbow_plugin"/>

    <!--
    ============================================================================
     applications
    ============================================================================
    -->
    <target name="applications.crossbow" description="build CSword executables"
            depends="applications.simulation.crossbow,applications.clients,applications.frontends"/>

    <target name="applications.nocrossbow" description="build CSword executables"
            depends="applications.simulation.nocrossbow,applications.clients,applications.frontends"/>

    <target name="applications.simulation.crossbow" description="build CSword Simulation executables"
            depends="application.dispatcher_app.crossbow,application.simulation_app.crossbow,application.replayer_app.crossbow,application.AGR" />

    <target name="applications.simulation.nocrossbow" description="build CSword Simulation executables"
            depends="application.simulation_app.nocrossbow,application.dispatcher_app.nocrossbow,application.replayer_app.nocrossbow,application.AGR" />

    <target name="applications.clients" description="build CSword Client executables"
            depends="application.gaming_app,application.preparation_app,application.adaptation_app,application.loadtester_app,application.import_app"/>

    <target name="applications.frontends" description="build CSword Frontend executables"
            depends="application.selftraining_app,application.frontend_app,application.package_app"/>

    <target name="application.dispatcher_dll.nocrossbow" description="build Sword Dispatcher dll without crossbow"
            depends="library.dispatcher,library.actions_static,library.clients_kernel,library.ENT,library.plugins.nocrossbow">
        <build-lib name="dispatcher_dll" outtype="shared" mode="release" depends="boost,terrain,qt,xerces,xalan"
                   pattern="dispatcher-${platform}-mt@{suffix}" input="dispatcher_dll"
                   libs="HLA,libFedTime,masalloc,tools,libprotobuf,
                         directia-${platform}-mt-4_6,
                         lib${ant.project.name}_actions-static-${platform}-mt@{suffix},
                         lib${ant.project.name}_ENT-${platform}-mt@{suffix},
                         lib${ant.project.name}_protocol-${platform}-mt@{suffix},
                         lib${ant.project.name}_aar_plugin-${platform}-mt@{suffix},
                         lib${ant.project.name}_hla_plugin-${platform}-mt@{suffix},
                         lib${ant.project.name}_dis_plugin-${platform}-mt@{suffix},
                         lib${ant.project.name}_tic_plugin-${platform}-mt@{suffix},
                         lib${ant.project.name}_bml_plugin-${platform}-mt@{suffix},
                         lib${ant.project.name}_rights_plugin-${platform}-mt@{suffix},
                         lib${ant.project.name}_reports-${platform}-mt@{suffix},
                         lib${ant.project.name}_replay_plugin-${platform}-mt@{suffix},
                         lib${ant.project.name}_saver_plugin-${platform}-mt@{suffix},
                         lib${ant.project.name}_logger_plugin-${platform}-mt@{suffix},
                         lib${ant.project.name}_messenger_plugin-${platform}-mt@{suffix},
                         lib${ant.project.name}_script_plugin-${platform}-mt@{suffix},
                         lib${ant.project.name}_timeline_plugin-${platform}-mt@{suffix},
                         lib${ant.project.name}_3a-${platform}-mt@{suffix},
                         lib${ant.project.name}_score_plugin-${platform}-mt@{suffix},
                         lib${ant.project.name}_dispatcher-${platform}-mt@{suffix},
                         lib${ant.project.name}_clients_kernel-${platform}-mt@{suffix},
                         lib${ant.project.name}_indicators-${platform}-mt,
                         lib${ant.project.name}_meteo-${platform}-mt@{suffix},
                         lib${ant.project.name}_MT_Tools-${platform}-mt@{suffix},
                         lib${ant.project.name}_tools-${platform}-mt@{suffix}">
            <syslibset libs="dbghelp,psapi,iphlpapi,user32,advapi32"/>
            <defineset define="DISPATCHER_DLL_EXPORTS"/>
            <linkerarg value="/FIXED:NO"/>
        </build-lib>
    </target>

    <target name="application.dispatcher_app.nocrossbow" description="build Sword Dispatcher executable without crossbow" depends="application.dispatcher_dll.nocrossbow">
        <build-app name="dispatcher_app" subsystem="console" mode="release" depends="boost,terrain,flexlm"
                   libs="masalloc,tools,
                         dispatcher-${platform}-mt@{suffix},
                         lib${ant.project.name}_MT_Tools-${platform}-mt@{suffix}">
            <syslibset libs="dbghelp,psapi,iphlpapi,user32,advapi32"/>
        </build-app>
    </target>

    <target name="application.simulation_app.nocrossbow" description="build Sword Simulation executable without crossbow" depends="library.dispatcher,library.simulation_kernel,application.dispatcher_dll.nocrossbow">
        <build-app name="simulation_app" depends="terrain,boost,xerces,xalan,flexlm,qt"
            libs="HLA,libFedTime,masalloc,libprotobuf,directia-${platform}-mt-4_6,library-${platform}-mt,
                  gdal_i,gdal_ogr,geodata,
                  dispatcher-${platform}-mt@{suffix},
                  lib${ant.project.name}_clients_kernel-${platform}-mt@{suffix},
                  lib${ant.project.name}_tools-${platform}-mt@{suffix},
                  lib${ant.project.name}_MT_Tools-${platform}-mt@{suffix},
                  lib${ant.project.name}_protocol-${platform}-mt@{suffix},
                  lib${ant.project.name}_simulation_terrain-${platform}-mt@{suffix},
                  lib${ant.project.name}_simulation_orders-${platform}-mt@{suffix},
                  lib${ant.project.name}_resource_network-${platform}-mt@{suffix},
                  lib${ant.project.name}_meteo-${platform}-mt@{suffix},
                  lib${ant.project.name}_simulation_kernel-${platform}-mt@{suffix}">
            <syslibset libs="dbghelp,winmm,psapi,shell32,iphlpapi,advapi32"/>
            <includepath path="${libraries.dir}/simulation_kernel"/>
            <defineset define="_WIN32_WINNT=0x0400"/> <!-- for 'IsDebuggerPresent()' -->
            <linkerarg value="/STACK:15000000"/>     <!-- Because of boost serialization -->
            <linkerarg value="/LARGEADDRESSAWARE"/>   <!-- Executable can access 3GiB instead of 2GiB -->
        </build-app>
    </target>

    <target name="application.replayer_app.nocrossbow" description="build Sword replayer executable without crossbow" depends="application.dispatcher_dll.nocrossbow,library.dispatcher,library.3a,library.score_plugin">
        <build-app name="replayer_app" depends="terrain,boost,flexlm,qt,xerces"
            libs="HLA,libFedTime,tools,directia-${platform}-mt-4_6,libprotobuf,
                  dispatcher-${platform}-mt@{suffix},
                  libprotobuf,
                  lib${ant.project.name}_tools-${platform}-mt,
                  lib${ant.project.name}_ENT-${platform}-mt,
                  lib${ant.project.name}_MT_Tools-${platform}-mt,
                  lib${ant.project.name}_protocol-${platform}-mt,
                  lib${ant.project.name}_3a-${platform}-mt,
                  lib${ant.project.name}_dispatcher-${platform}-mt,
                  lib${ant.project.name}_clients_kernel-${platform}-mt,
                  lib${ant.project.name}_meteo-${platform}-mt@{suffix},
                  lib${ant.project.name}_aar_plugin-${platform}-mt@{suffix},
                  lib${ant.project.name}_rights_plugin-${platform}-mt@{suffix},
                  lib${ant.project.name}_replay_plugin-${platform}-mt@{suffix},
                  lib${ant.project.name}_saver_plugin-${platform}-mt@{suffix},
                  lib${ant.project.name}_messenger_plugin-${platform}-mt@{suffix},
                  lib${ant.project.name}_score_plugin-${platform}-mt,
                  lib${ant.project.name}_indicators-${platform}-mt">
            <syslibset libs="dbghelp,psapi,iphlpapi,user32,shell32,advapi32"/>
        </build-app>
    </target>

    <!-- </not-crossbowed-applications> -->

    <!-- <crossbowed-applications> -->
    <target name="application.dispatcher_dll.crossbow" description="build Sword Dispatcher dll with crossbow" depends="library.dispatcher,library.actions_static,library.clients_kernel,library.ENT,library.plugins.crossbow">
        <build-lib name="dispatcher_crossbow_dll" outtype="shared" mode="release" depends="boost,terrain,qt,xerces,xalan"
            pattern="dispatcher-crossbow-${platform}-mt" input="dispatcher_dll"
            libs="HLA,libFedTime,masalloc,tools,libprotobuf,gdal_i,
                  directia-${platform}-mt-4_6,
                  lib${ant.project.name}_actions-static-${platform}-mt@{suffix},
                  lib${ant.project.name}_ENT-${platform}-mt@{suffix},
                  lib${ant.project.name}_protocol-${platform}-mt@{suffix},
                  lib${ant.project.name}_aar_plugin-${platform}-mt@{suffix},
                  lib${ant.project.name}_hla_plugin-${platform}-mt@{suffix},
                  lib${ant.project.name}_dis_plugin-${platform}-mt@{suffix},
                  lib${ant.project.name}_tic_plugin-${platform}-mt@{suffix},
                  lib${ant.project.name}_bml_plugin-${platform}-mt@{suffix},
                  lib${ant.project.name}_rights_plugin-${platform}-mt@{suffix},
                  lib${ant.project.name}_reports-${platform}-mt@{suffix},
                  lib${ant.project.name}_replay_plugin-${platform}-mt@{suffix},
                  lib${ant.project.name}_saver_plugin-${platform}-mt@{suffix},
                  lib${ant.project.name}_logger_plugin-${platform}-mt@{suffix},
                  lib${ant.project.name}_messenger_plugin-${platform}-mt@{suffix},
                  lib${ant.project.name}_script_plugin-${platform}-mt@{suffix},
                  lib${ant.project.name}_3a-${platform}-mt@{suffix},
                  lib${ant.project.name}_score_plugin-${platform}-mt@{suffix},
                  lib${ant.project.name}_timeline_plugin-${platform}-mt@{suffix},
                  lib${ant.project.name}_crossbow_plugin-${platform}-mt@{suffix},
                  lib${ant.project.name}_dispatcher-${platform}-mt@{suffix},
                  lib${ant.project.name}_clients_kernel-${platform}-mt@{suffix},
                  lib${ant.project.name}_indicators-${platform}-mt,
                  lib${ant.project.name}_meteo-${platform}-mt@{suffix},
                  lib${ant.project.name}_MT_Tools-${platform}-mt@{suffix},
                  lib${ant.project.name}_tools-${platform}-mt@{suffix}">
            <syslibset libs="dbghelp,psapi,iphlpapi,user32,advapi32"/>
            <defineset define="DISPATCHER_DLL_EXPORTS,CROSSBOW_PLUGIN"/>
            <linkerarg value="/FIXED:NO"/>
        </build-lib>
    </target>

    <target name="application.dispatcher_app.crossbow" description="build Sword Dispatcher executable" depends="application.dispatcher_dll.crossbow">
        <build-app name="dispatcher_crossbow_app" subsystem="console" mode="release" depends="boost,terrain,flexlm"
            pattern="dispatcher_crossbow_app" input="dispatcher_app"
            libs="masalloc,tools,
                  dispatcher-crossbow-${platform}-mt@{suffix},
                  lib${ant.project.name}_MT_Tools-${platform}-mt@{suffix}">
            <syslibset libs="dbghelp,psapi,iphlpapi,user32,advapi32"/>
        </build-app>
    </target>

    <target name="application.simulation_app.crossbow" description="build Sword Simulation executable" depends="library.dispatcher,library.simulation_kernel,application.dispatcher_dll.crossbow">
        <build-app name="simulation_crossbow_app" depends="terrain,boost,xerces,xalan,flexlm,qt"
            pattern="simulation_crossbow_app" input="simulation_app"
            libs="HLA,libFedTime,masalloc,libprotobuf,directia-${platform}-mt-4_6,library-${platform}-mt,
                  gdal_i,gdal_ogr,geodata,
                  dispatcher-crossbow-${platform}-mt@{suffix},
                  lib${ant.project.name}_clients_kernel-${platform}-mt@{suffix},
                  lib${ant.project.name}_tools-${platform}-mt@{suffix},
                  lib${ant.project.name}_MT_Tools-${platform}-mt@{suffix},
                  lib${ant.project.name}_protocol-${platform}-mt@{suffix},
                  lib${ant.project.name}_resource_network-${platform}-mt@{suffix},
                  lib${ant.project.name}_meteo-${platform}-mt@{suffix},
                  lib${ant.project.name}_simulation_terrain-${platform}-mt@{suffix},
                  lib${ant.project.name}_simulation_orders-${platform}-mt@{suffix},
                  lib${ant.project.name}_simulation_kernel-${platform}-mt@{suffix}">
            <syslibset libs="dbghelp,psapi,shell32,iphlpapi,advapi32"/>
            <includepath path="${libraries.dir}/simulation_kernel"/>
            <defineset define="_WIN32_WINNT=0x0400"/> <!-- for 'IsDebuggerPresent()' -->
            <linkerarg value="/STACK:15000000"/>      <!-- Because of boost serialization -->
            <linkerarg value="/LARGEADDRESSAWARE"/>   <!-- Executable can access 3GiB instead of 2GiB -->
        </build-app>
    </target>

    <!-- </crossbowed-applications> -->

    <target name="application.replayer_app.crossbow" description="build Sword replayer executable with crossbow" depends="application.dispatcher_dll.crossbow,library.dispatcher,library.3a,library.score_plugin">
        <build-app name="replayer_crossbow_app" depends="terrain,boost,flexlm,qt,xerces"
            pattern="replayer_crossbow_app" input="replayer_app"
            libs="HLA,libFedTime,tools,libprotobuf,directia-${platform}-mt-4_6,
                  dispatcher-crossbow-${platform}-mt@{suffix},
                  libprotobuf,
                  lib${ant.project.name}_tools-${platform}-mt,
                  lib${ant.project.name}_ENT-${platform}-mt,
                  lib${ant.project.name}_MT_Tools-${platform}-mt,
                  lib${ant.project.name}_protocol-${platform}-mt,
                  lib${ant.project.name}_3a-${platform}-mt,
                  lib${ant.project.name}_dispatcher-${platform}-mt,
                  lib${ant.project.name}_clients_kernel-${platform}-mt,
                  lib${ant.project.name}_meteo-${platform}-mt@{suffix},
                  lib${ant.project.name}_aar_plugin-${platform}-mt@{suffix},
                  lib${ant.project.name}_rights_plugin-${platform}-mt@{suffix},
                  lib${ant.project.name}_replay_plugin-${platform}-mt@{suffix},
                  lib${ant.project.name}_saver_plugin-${platform}-mt@{suffix},
                  lib${ant.project.name}_messenger_plugin-${platform}-mt@{suffix},
                  lib${ant.project.name}_score_plugin-${platform}-mt,
                  lib${ant.project.name}_indicators-${platform}-mt">
            <syslibset libs="dbghelp,psapi,iphlpapi,user32,shell32,advapi32"/>
        </build-app>
    </target>

    <target name="application.adaptation_app" description="build CSword Adaptation executable" depends="library.ENT,library.clients_gui">
        <build-app name="adaptation_app" depends="qt,xerces,xalan,boost" excludes="**/XmlResources.cpp"
                   libs="lib${ant.project.name}_ENT-${platform}-mt
                         lib${ant.project.name}_clients_gui-${platform}-mt
                         lib${ant.project.name}_clients_kernel-${platform}-mt
                         lib${ant.project.name}_MT_Tools-${platform}-mt@{suffix},
                         lib${ant.project.name}_tools-${platform}-mt" pch-excludes="qtundo.cpp">
            <syslibset libs="advapi32,user32,shell32"/>
        </build-app>
    </target>

    <target name="application.gaming_app" description="build CSword Gaming executable" depends="library.gaming">
        <build-app name="gaming_app" depends="terrain,xerces,xalan,qt,boost,flexlm"
                   libs="libprotobuf,svgl,zipstream,zlib1,bugtrap,shapelib,
                         lib${ant.project.name}_actions-${platform}-mt,
                         lib${ant.project.name}_actions_gui-${platform}-mt,
                         lib${ant.project.name}_clients_gui-${platform}-mt,
                         lib${ant.project.name}_clients_kernel-${platform}-mt,
                         lib${ant.project.name}_ENT-${platform}-mt,
                         lib${ant.project.name}_protocol-${platform}-mt,
                         lib${ant.project.name}_meteo-${platform}-mt@{suffix},
                         lib${ant.project.name}_reports-${platform}-mt,
                         lib${ant.project.name}_gaming-${platform}-mt,
                         lib${ant.project.name}_indicators-${platform}-mt,
                         lib${ant.project.name}_tools-${platform}-mt">
            <syslibset libs="gdi32,psapi,dbghelp,htmlhelp,advapi32"/>
        </build-app>
    </target>

    <target name="application.import_app" description="build Import LTO executable" depends="library.import">
        <build-app name="import_app" depends="terrain,xerces,boost,qt" libs="lib${ant.project.name}_tools-${platform}-mt,lib${ant.project.name}_import-${platform}-mt"/>
    </target>

    <target name="application.loadtester_app" description="build CSword load testing executable" depends="library.protocol,library.tools">
        <build-app name="loadtester_app" subsystem="console" depends="boost"
                   libs="libprotobuf,
                         lib${ant.project.name}_protocol-${platform}-mt,
                         lib${ant.project.name}_tools-${platform}-mt">
            <syslibset libs="gdi32,psapi,dbghelp,htmlhelp,advapi32"/>
        </build-app>
    </target>

    <target name="application.preparation_app" description="build CSword Gaming executable" depends="library.preparation">
        <build-app name="preparation_app" excludes="**/**_Gen.*" depends="terrain,xerces,xalan,qt,boost,flexlm"
                   libs="svgl,zipstream,zlib1,bugtrap,libprotobuf
                         lib${ant.project.name}_actions-${platform}-mt,
                         lib${ant.project.name}_actions_gui-${platform}-mt,
                         lib${ant.project.name}_clients_gui-${platform}-mt,
                         lib${ant.project.name}_clients_kernel-${platform}-mt,
                         lib${ant.project.name}_ENT-${platform}-mt,
                         lib${ant.project.name}_protocol-${platform}-mt,
                         lib${ant.project.name}_indicators-${platform}-mt,
                         lib${ant.project.name}_preparation-${platform}-mt,
                         lib${ant.project.name}_meteo-${platform}-mt,
                         lib${ant.project.name}_tools-${platform}-mt">
            <syslibset libs="gdi32,psapi,dbghelp,htmlhelp,advapi32"/>
        </build-app>
    </target>

    <target name="application.frontend_app" description="build CSword Frontend executable" depends="library.frontend">
        <build-app name="frontend_app" depends="qt,boost,xerces,flexlm"
            libs="bugtrap,zipstream,zlib1,tools,
                    lib${ant.project.name}_tools-${platform}-mt,
                    lib${ant.project.name}_ENT-${platform}-mt,
                    lib${ant.project.name}_frontend-${platform}-mt,
                    lib${ant.project.name}_clients_gui-${platform}-mt,
                    lib${ant.project.name}_clients_kernel-${platform}-mt">
            <syslibset libs="gdi32,shell32,htmlhelp,advapi32"/>
        </build-app>
    </target>

    <target name="application.selftraining_app" description="build CSword Self-training executable" depends="library.frontend">
        <build-app name="selftraining_app" depends="qt,boost,xerces,flexlm"
            libs="bugtrap,zipstream,zlib1,tools,
                    lib${ant.project.name}_tools-${platform}-mt,
                    lib${ant.project.name}_ENT-${platform}-mt,
                    lib${ant.project.name}_frontend-${platform}-mt,
                    lib${ant.project.name}_clients_gui-${platform}-mt,
                    lib${ant.project.name}_clients_kernel-${platform}-mt">
            <syslibset libs="gdi32,shell32,htmlhelp,advapi32"/>
        </build-app>
    </target>

    <target name="application.package_app" description="build CSword Package deployment executable">
        <build-app name="package_app" depends="boost" subsystem="console">
            <syslibset libs="user32"/>
        </build-app>
    </target>

    <target name="application.AGR" description="build AGR executable">
        <build-app name="AGR" subsystem="console" excludes="**/*_Skeleton.*" depends="boost,xerces">
            <syslibset libs="user32"/>
        </build-app>
    </target>

    <!--
    ============================================================================
    data
    ============================================================================
    -->

    <macrodef name="bmc">
        <attribute name="dir"/>
        <attribute name="core"/>
        <sequential>
            <java taskname="bmc" classname="net.masagroup.sword.bm.tools.bmc.Tool"
                fork="true" failonerror="true" outputproperty="" logerror="true">
                <classpath>
                    <fileset dir="${bin.dir}" includes="*.jar"/>
                </classpath>
                <arg value="-rootpath"/>
                <arg value="@{core};@{dir}"/>
                <arg value="@{dir}"/>
            </java>
        </sequential>
    </macrodef>

    <macrodef name="update-database">
        <attribute name="database"/>
        <attribute name="dir"/>
        <sequential>
            <delete dir="@{dir}"/>
            <update name="masalife" version="vm_sharing" package="@{database}" todir="@{dir}"/>
        </sequential>
    </macrodef>

    <target name="generate-database" description="compile behavior model database">
        <bmc dir="${data.dir}/data/models/ada/decisional/directia5/models/libs/core/src" core="${data.dir}/data/models/ada/decisional/directia5/models/libs/core/src"/>
        <bmc dir="${data.dir}/data/models/ada/decisional/directia5/models/libs/base" core="${data.dir}/data/models/ada/decisional/directia5/models/libs/core/src"/>
        <delete>
            <fileset dir="${data.dir}/data/models/ada/decisional/directia5/models/net.masagroup.sword/src" includes="**/*.bmt,**/*.bmk,**/*.bmr,**/*.bmq,**/*.bmsk"/>
            <fileset dir="${data.dir}/data/models/ada/decisional/directia5/models/net.masagroup.sword.test/src" includes="**/*.bmt,**/*.bmk,**/*.bmr,**/*.bmq,**/*.bmsk"/>
            <fileset dir="${data.dir}/data/models/ada/decisional/directia5/models/net.masagroup.sword.france/src" includes="**/*.bmt,**/*.bmk,**/*.bmr,**/*.bmq,**/*.bmsk"/>
            <fileset dir="${data.dir}/data/models/ada/decisional/directia5/models/net.masagroup.sword.security/src" includes="**/*.bmt,**/*.bmk,**/*.bmr,**/*.bmq,**/*.bmsk"/>
            <fileset dir="${data.dir}/data/models/ada/decisional/directia5/models/net.masagroup.sword.worldwide/src" includes="**/*.bmt,**/*.bmk,**/*.bmr,**/*.bmq,**/*.bmsk"/>
        </delete>
        <bmc dir="${data.dir}/data/models/ada/decisional/directia5/models/net.masagroup.sword/src" core="${data.dir}/data/models/ada/decisional/directia5/models/libs/core/src;${data.dir}/data/models/ada/decisional/directia5/models/libs/base"/>
        <bmc dir="${data.dir}/data/models/ada/decisional/directia5/models/net.masagroup.sword.test/src" core="${data.dir}/data/models/ada/decisional/directia5/models/libs/core/src;${data.dir}/data/models/ada/decisional/directia5/models/libs/base;${data.dir}/data/models/ada/decisional/directia5/models/net.masagroup.sword/src;"/>
        <bmc dir="${data.dir}/data/models/ada/decisional/directia5/models/net.masagroup.sword.france/src" core="${data.dir}/data/models/ada/decisional/directia5/models/libs/core/src;${data.dir}/data/models/ada/decisional/directia5/models/libs/base;${data.dir}/data/models/ada/decisional/directia5/models/net.masagroup.sword/src;"/>
        <bmc dir="${data.dir}/data/models/ada/decisional/directia5/models/net.masagroup.sword.security/src" core="${data.dir}/data/models/ada/decisional/directia5/models/libs/core/src;${data.dir}/data/models/ada/decisional/directia5/models/libs/base;${data.dir}/data/models/ada/decisional/directia5/models/net.masagroup.sword/src;"/>
        <bmc dir="${data.dir}/data/models/ada/decisional/directia5/models/net.masagroup.sword.worldwide/src" core="${data.dir}/data/models/ada/decisional/directia5/models/libs/core/src;${data.dir}/data/models/ada/decisional/directia5/models/libs/base;${data.dir}/data/models/ada/decisional/directia5/models/net.masagroup.sword/src;"/>
    </target>

    <target name="generate-data" depends="generate-database" description="generate data"/>

    <!--
    ============================================================================
    clean
    ============================================================================
    -->
    <target name="clean" description="clean intermediate build artifacts">
        <delete dir="${out.dir}"/>
    </target>

    <!--
    ============================================================================
    license
    ============================================================================
    -->
    <target name="generate-license" description="generate license file in run directory">
        <flexlm feature="sword" vendor="bkmasa"/>
    </target>

    <!--
    ============================================================================
    tests
    ============================================================================
    -->
    <target name="test" depends="generate-license,test-scripts.nocrossbow,test-adaptation,3a_test,plugins_test,clients_test,
                                 dispatcher_test,application.simulation_kernel_test,application.integration_decisionnal_test,
                                 protocol_test,checkpoint_test,import_test,actions_test" description="run all tests"/>

    <target name="3a_test" depends="library.3a">
        <build-test name="3a" depends="xerces,terrain,boost"
            libs="lib${ant.project.name}_3a-${platform}-mt@{suffix},libprotobuf,
            lib${ant.project.name}_protocol-${platform}-mt">
        </build-test>
    </target>

    <target name="plugins_test" depends="library.hla_plugin,library.tic_plugin,library.bml_plugin,library.crossbow_plugin">
        <build-test name="plugins" depends="xerces,terrain,boost"
            libs="directia-${platform}-mt-4_6,libprotobuf,
            lib${ant.project.name}_clients_kernel-${platform}-mt@{suffix},
            lib${ant.project.name}_hla_plugin-${platform}-mt@{suffix},
            lib${ant.project.name}_tic_plugin-${platform}-mt@{suffix},
            lib${ant.project.name}_bml_plugin-${platform}-mt@{suffix},
            lib${ant.project.name}_script_plugin-${platform}-mt@{suffix},
            lib${ant.project.name}_crossbow_plugin-${platform}-mt@{suffix},
            lib${ant.project.name}_protocol-${platform}-mt">
        </build-test>
    </target>

    <target name="clients_test" depends="library.indicators, library.preparation">
        <build-test name="clients" depends="terrain,boost,qt,xerces,xalan"
            libs="svgl,zipstream,zlib1,shapelib,libprotobuf,
            lib${ant.project.name}_tools-${platform}-mt,
            lib${ant.project.name}_ENT-${platform}-mt,
            lib${ant.project.name}_indicators-${platform}-mt,
            lib${ant.project.name}_clients_gui-${platform}-mt,
            lib${ant.project.name}_clients_kernel-${platform}-mt,
            lib${ant.project.name}_preparation-${platform}-mt,
            lib${ant.project.name}_protocol-${platform}-mt">
            <syslibset libs="gdi32"/>
        </build-test>
    </target>

    <target name="actions_test" depends="library.actions">
        <build-test name="actions" depends="terrain,boost,qt,xerces"
            libs="libprotobuf,
            lib${ant.project.name}_tools-${platform}-mt,
            lib${ant.project.name}_ENT-${platform}-mt,
            lib${ant.project.name}_actions-${platform}-mt,
            lib${ant.project.name}_clients_kernel-${platform}-mt,
            lib${ant.project.name}_protocol-${platform}-mt">
        </build-test>
    </target>

    <target name="dispatcher_test" depends="library.dispatcher">
        <build-test name="dispatcher" depends="boost,qt,xerces,terrain"
            libs="libprotobuf,
            lib${ant.project.name}_clients_kernel-${platform}-mt,
            lib${ant.project.name}_ENT-${platform}-mt@{suffix},
            lib${ant.project.name}_dispatcher-${platform}-mt,
            lib${ant.project.name}_tools-${platform}-mt,
            lib${ant.project.name}_protocol-${platform}-mt">
        </build-test>
    </target>

    <target name="import_test" depends="library.import">
        <build-test name="import" depends="boost,xerces" libs="geocoord,lib${ant.project.name}_import-${platform}-mt"/>
    </target>

    <macrodef name="test-scripts">
        <attribute name="dataset"/>
        <attribute name="physical"/>
        <attribute name="simulation" default="simulation_app"/>
        <sequential>
            <delete dir="${data.dir}/exercises/test-scripts"/>
            <mkdir dir="${data.dir}/exercises/test-scripts"/>
            <mkdir dir="${data.dir}/exercises/test-scripts/sessions"/>
            <mkdir dir="${data.dir}/exercises/test-scripts/sessions/test-session"/>
            <copy file="test-scripts/session.xml" todir="${data.dir}/exercises/test-scripts/sessions/test-session"/>
            <copy file="test-scripts/orbat.xml" todir="${data.dir}/exercises/test-scripts"/>
            <copy file="test-scripts/profiles.xml" todir="${data.dir}/exercises/test-scripts"/>
            <copy file="test-scripts/weather.xml" todir="${data.dir}/exercises/test-scripts"/>
            <copy file="test-scripts/exercise.xml.tmpl" tofile="${data.dir}/exercises/test-scripts/exercise.xml" overwrite="true">
                <filterset>
                    <filter token="DATASET" value="@{dataset}"/>
                    <filter token="PHYSICAL" value="@{physical}"/>
                </filterset>
            </copy>
            <exec executable="${out.dir}/release/applications/simulation_app/simulation_app.exe" dir="${run.dir}" failonerror="true" timeout="600000">
                <arg value="--root-dir=../../data"/>
                <arg value="--exercise=test-scripts"/>
                <arg value="--session=test-session"/>
                <arg value="--test"/>
            </exec>
            <delete dir="${data.dir}/exercises/test-scripts"/>
        </sequential>
    </macrodef>

    <target name="test-scripts.nocrossbow" description="run all tests" depends="application.simulation_app.nocrossbow">
        <test-scripts dataset="ada" physical="france"/>
        <test-scripts dataset="ada" physical="worldwide"/>
    </target>

    <target name="test-scripts.crossbow" depends="application.simulation_app.crossbow" description="Test models validity using simulation">
        <test-scripts dataset="test" physical="" simulation="simulation_crossbow_app"/>
        <test-scripts dataset="ada" physical="france" simulation="simulation_crossbow_app"/>
        <test-scripts dataset="ada" physical="worldwide" simulation="simulation_crossbow_app"/>
    </target>

    <target name="checkpoint_test" description="save and load a checkpoint" depends="application.simulation_app.nocrossbow">
        <exec executable="${out.dir}/release/applications/simulation_app/simulation_app.exe" dir="${run.dir}" failonerror="true" timeout="600000">
            <arg value="--root-dir=../../data"/>
            <arg value="--exercise=CheckpointTests"/>
            <arg value="--session=default"/>
            <arg value="--test"/>
            <arg value="--savecheckpoint=tempcheckpoint"/>
        </exec>
        <exec executable="${out.dir}/release/applications/simulation_app/simulation_app.exe" dir="${run.dir}" failonerror="true" timeout="600000">
            <arg value="--root-dir=../../data"/>
            <arg value="--exercise=CheckpointTests"/>
            <arg value="--session=default"/>
            <arg value="--test"/>
            <arg value="--checkpoint=tempcheckpoint"/>
            <arg value="--deletecheckpoint"/>
        </exec>
    </target>

    <macrodef name="test-adaptation">
        <attribute name="input"/>
        <sequential>
            <property name="adaptation_test.dir2" value="${run.dir}/adaptation_test/main"/>
            <echo>Testing models: @{input}</echo>
            <delete dir="${adaptation_test.dir2}"/>
            <exec executable="${out.dir}/release/applications/adaptation_app/adaptation_app.exe" dir="${run.dir}" failonerror="true" timeout="600000">
                <arg value="-i"/>
                <arg value="@{input}/physical.xml"/>
                <arg value="-o"/>
                <arg value="${adaptation_test.dir2}/physical.xml"/>
            </exec>
            <compare-dirs dir1="@{input}" dir2="${adaptation_test.dir2}"
                excludes="**/Pathfind.xml,**/dis.xml,**/HumanProtections.xml,**/Fire.xml,**/MedicalTreatment.xml,**/NBCAgents.xml,**/templates.xml,**/ObjectNames.xml,**/mapping.xml, **/DrawingTemplates.xml"
                includes="**/*.xml" property="adaptation_test.is-different"/>
            <if>
                <isset property="adaptation_test.is-different"/>
                <then>
                    <echo>"ERROR: the following files differ :</echo>
                    <echo-files files="${adaptation_test.is-different}" prefix="ERROR: "/>
                    <fail message="saved data differs from loaded data."/>
                </then>
            </if>
        </sequential>
    </macrodef>

    <target name="test-adaptation" description="load and save adaptation main data, check that output==input">
        <test-adaptation input="${data.dir}/data/models/ada/physical/worldwide"/>
        <test-adaptation input="${data.dir}/data/models/ada/physical/france"/>
        <test-adaptation input="${data.dir}/data/models/ada/physical/scipio-1.9.2"/>
    </target>

    <target name="application.simulation_kernel_test" description="build CSword Simulation kernel test executable" depends="library.simulation_kernel">
        <build-test name="simulation_kernel"
                   libs="HLA,libFedTime,masalloc,tools,libprotobuf,directia-${platform}-mt-4_6,library-${platform}-mt,
                   gdal_i,gdal_ogr,geodata,
                   dispatcher-${platform}-mt@{suffix},
                   lib${ant.project.name}_tools-${platform}-mt@{suffix},
                   lib${ant.project.name}_clients_kernel-${platform}-mt,
                   lib${ant.project.name}_MT_Tools-${platform}-mt@{suffix},
                   lib${ant.project.name}_protocol-${platform}-mt@{suffix},
                   lib${ant.project.name}_simulation_terrain-${platform}-mt@{suffix},
                   lib${ant.project.name}_simulation_orders-${platform}-mt@{suffix},
                   lib${ant.project.name}_resource_network-${platform}-mt@{suffix},
                   lib${ant.project.name}_meteo-${platform}-mt@{suffix},
                   lib${ant.project.name}_simulation_kernel-${platform}-mt@{suffix}"
            depends="xerces,terrain,boost,qt">
            <syslibset libs="dbghelp,psapi,shell32,iphlpapi,advapi32"/>
            <includepath path="${libraries.dir}/simulation_kernel"/>
            <linkerarg value="/STACK:15000000"/>      <!-- Because of boost serialization -->
        </build-test>
    </target>

    <target name="application.integration_decisionnal_test" description="build CSword Integration DIA5 test executable">
        <build-test name="integration_decisionnal"
            libs="directia-${platform}-mt-4_6"
            depends="boost"
            dir="../../data/data/models/ada/decisional/directia5">
            <includepath path="${libraries.dir}/simulation_kernel"/>
        </build-test>
    </target>

    <macrodef name="test-exercise">
        <attribute name="exercise"/>
        <attribute name="session" default="default"/>
        <attribute name="simulation" default="simulation_app"/>
        <sequential>
            <schemavalidate noNamespaceFile="${run.dir}/resources/schemas/exercise/exercise.xsd" file="../data/exercises/@{exercise}/exercise.xml" failonerror="true" warn="true"/>
            <schemavalidate noNamespaceFile="${run.dir}/resources/schemas/exercise/orbat.xsd" file="../data/exercises/@{exercise}/orbat.xml" failonerror="true" warn="true"/>
            <schemavalidate noNamespaceFile="${run.dir}/resources/schemas/exercise/profiles.xsd" file="../data/exercises/@{exercise}/profiles.xml" failonerror="true" warn="true"/>
            <schemavalidate noNamespaceFile="${run.dir}/resources/schemas/exercise/weather.xsd" file="../data/exercises/@{exercise}/weather.xml" failonerror="true" warn="true"/>
            <schemavalidate noNamespaceFile="${run.dir}/resources/schemas/exercise/session.xsd" file="../data/exercises/@{exercise}/sessions/@{session}/session.xml" failonerror="true" warn="true"/>
            <exec executable="${out.dir}/release/applications/@{simulation}/@{simulation}.exe" dir="${run.dir}" failonerror="true" timeout="900000">
                <arg value="--root-dir=../../data"/>
                <arg value="--exercise=@{exercise}"/>
                <arg value="--session=@{session}"/>
                <arg value="--test"/>
            </exec>
        </sequential>
    </macrodef>

    <target name="test-exercises" depends="application.simulation_app.nocrossbow" description="validates some significant exercises">
        <test-exercise exercise="Egypt"/>
        <test-exercise exercise="Cabourg"/>
    </target>

    <target name="test-exercises.crossbow" depends="application.simulation_app.crossbow" description="validates some significant exercises">
        <test-exercise exercise="Egypt" simulation="simulation_crossbow_app"/>
    </target>

    <target name="protocol_test" description="build Sword protocol test executable" depends="library.protocol,library.tools">
        <exec dir="${bin.dir}" executable="${bin.dir}/protoc" failonerror="true">
            <arg value="-I=${tests.dir}/protocol_test/proto"/>
            <arg value="--cpp_out=${tests.dir}/protocol_test/generated"/>
            <arg value="${tests.dir}/protocol_test/proto/*.proto"/>
        </exec>
        <build-test name="protocol" libs="masalloc,libprotobuf,
                         lib${ant.project.name}_tools-${platform}-mt@{suffix}
                         lib${ant.project.name}_protocol-${platform}-mt@{suffix}"
                   depends="boost" excludes="**/*.pb.cc">
        </build-test>
    </target>

    <!--
    ============================================================================
    package
    ============================================================================
    -->
    <target name="package" description="package the installers" depends="package.defense,package.france,package.security"/>

    <!-- standard packages -->
    <target name="package.defense" description="package the standard installer: worldwide, no license">
        <nsis name="sword-defense" script="sword-defense.nsi" nsh="config.nsh">
            <arg value="/DAPP_VERSION_MAJOR=${version.major}"/>
            <arg value="/DAPP_VERSION_MINOR=${version.minor}"/>
            <arg value="/DAPP_MODEL=worldwide"/>
            <arg value="/X!include sword-defense.nsh"/>
        </nsis>
    </target>

    <target name="package.security" description="create the installer">
        <nsis name="sword-security" script="sword-security.nsi" nsh="config.nsh">
            <arg value="/DAPP_VERSION_MAJOR=${version.major}"/>
            <arg value="/DAPP_VERSION_MINOR=${version.minor}"/>
            <arg value="/DAPP_MODEL=worldwide"/>
            <arg value="/DPRODUCT_SUFFIX=security"/>
            <arg value="/X!include sword-security.nsh"/>
        </nsis>
    </target>

    <target name="package.eval" description="package the standard installer: worlwide, 3 months license">
        <nsis name="sword-defense" script="sword-defense.nsi" nsh="config.nsh">
            <arg value="/DAPP_VERSION_MAJOR=${version.major}"/>
            <arg value="/DAPP_VERSION_MINOR=${version.minor}"/>
            <arg value="/DEVALUATION=1"/>
            <arg value="/DAPP_MODEL=worldwide"/>
            <arg value="/X!include sword-defense.nsh"/>
        </nsis>
    </target>

    <target name="package.france" description="package the french version of installer: france, no license">
        <nsis name="sword-defense" script="sword-defense.nsi" nsh="config.nsh">
            <arg value="/DAPP_VERSION_MAJOR=${version.major}"/>
            <arg value="/DAPP_VERSION_MINOR=${version.minor}"/>
            <arg value="/DAPP_MODEL=france"/>
            <arg value="/X!include sword-defense.nsh"/>
        </nsis>
    </target>

    <target name="package.patch" description="create a patch installer">
        <nsis name="sword-patch" script="resources/sword-patch.nsi" license="true">
            <arg value="/DAPP_VERSION_MAJOR=${version.major}"/>
            <arg value="/DAPP_VERSION_MINOR=${version.minor}"/>
            <arg value="/X!include sword-defense.nsh"/>
        </nsis>
    </target>

    <!--
    ============================================================================
    configure
    ============================================================================
    -->
    <target name="configure" description="initialize local project structure with libraries">
        <update name="geometry"/>
        <update name="geocoord"/>
        <update name="terrain" modules="terrain,graphics,pathfind,vmap,geodata,gdal_ogr" version="2.0"/>
        <update name="terrain" modules="urban"/>
        <update name="terrain" package="SWORD Terrain_${platform}.exe"/>
        <update name="qt" version="3.3.8"/>
        <update name="boost"/>
        <update name="boost" package="geometry" todir="${include.dir}"/>
        <update name="rti"/>
        <update name="models/military"/>
        <update name="masalife" version="vm_sharing" />
        <update name="masalife" version="vm_sharing" package="bmc" todir="${bin.dir}"/>
        <!--<update name="masalife_vm_sharing" package="directia4_${platform}_plugins" todir="${run.dir}"/>-->
        <update name="cgal"/> <!-- MGD For mpfr dll use in BM terrain analyse -->
        <update name="hla"/>
        <update name="tools"/>
        <update name="flexlm"/>
        <update name="xerces-c"/>
        <update name="xeumeuleu"/>
        <update name="xalan-c"/>
        <update name="xeuseuleu"/>
        <update name="svgl"/>
        <update name="zlib"/>
        <update name="bugtrap"/>
        <update name="shapelib"/>
        <update name="gdal" version="1.6.a"/>
        <update name="esri" version="9.2"/>
        <update name="turtle"/>
        <update name="protobuf"/>
        <update name="vcredist" package="vcredist"/>
        <update name="system"/>
        <update-database database="directia.core" dir="${data.dir}/data/models/ada/decisional/directia5/models/libs/core"/>
        <update name="models/military" package="net.masagroup.military" todir="${data.dir}/data/models/ada/decisional/directia5/models/libs/base"/>
        <antcall target="generate-data"/>
    </target>

    <!--
    ============================================================================
    main
    ============================================================================
    -->
    <target name="build" depends="build.crossbow,build.nocrossbow"/>

    <target name="build.crossbow" depends="libraries.crossbow,applications.crossbow"/>

    <target name="build.nocrossbow" depends="libraries.nocrossbow,applications.nocrossbow"/>

    <target name="all" depends="configure,build,test,package" description="build and package distribution"/>

</project>
