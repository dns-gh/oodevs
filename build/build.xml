<project name="gosword" default="all">

    <property environment="env"/>
    <property name="env.PONEY_HOME" value="//file1/masa/common/dev/common/poney"/>
    <import file="${env.PONEY_HOME}/poney.xml"/>

    <var name="repositories" value="${repositories},${sword.repository}"/>
    <property name="sword_branch" value="trunk"/>
    <property name="test.port" value="35000"/>
    <property name="licensepath" value="${run.dir}/license.dat"/>

    <target name="update">
        <update name="gocheck"/>
        <update name="golang" version="1.1.1"/>
        <update name="goprotobuf"/>
        <update name="models" package="decisional-dev" todir="${data.dir}/data/models"/>
        <update name="models" package="terrains-dev" todir="${data.dir}/data/terrains"/>
        <update name="protobuf" version="2.3.0"/>
        <update name="sword" package="protobuf" todir="${src.dir}/sword"/>
        <update name="sword" package="binaries_${platform}" todir="${run.dir}"/>
    </target>

    <target name="proto">
        <go_proto input="${src.dir}/sword"/>
    </target>

    <target name="configure" depends="update,proto"/>    

    <target name="build">
        <go cmd="install"/>
    </target>

    <macrodef name="runtests">
        <element name="args" implicit="true" optional="true"/>
        <sequential>
            <echo message="test.port=${test.port}"/>
            <go cmd="vet"/>
            <go cmd="test">
                <arg value="-i"/>
            </go>
            <go cmd="test">
                <env key="BKMASA_LICENSE_FILE" path="${licensepath}"/>
                <!-- We currently need this to avoid port collisions in tests
                     belonging to the same module. Note that it does not prevent
                     tests belonging to different modules to run concurrently. We
                     need a port allocation solution instead.
                -->
                <arg value="-test.parallel=1"/>
                <arg value="--application=${run.dir}/simulation_app.exe"/>
                <arg value="--root-dir=${data.dir}"/>
                <arg value="--test-port=${test.port}"/>
                <!--arg value="-v=true"/-->
                <args/>
            </go>
        </sequential>
    </macrodef>

    <target name="test-legacy">
        <runtests>
            <arg value="--legacy"/>
        </runtests>
    </target>

    <target name="test-nonlegacy">
        <runtests/>
    </target>

    <target name="test" depends="test-legacy,test-nonlegacy"/>

    <target name="package">
        <go_package/>
    </target>

    <target name="all" depends="update,proto,build,test,package"/>

    <!-- helper targets -->
    <target name="fmt">
        <go cmd="fmt"/>
    </target>    

</project>
