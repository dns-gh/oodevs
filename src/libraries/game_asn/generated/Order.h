/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 5.31, Date: 22-Oct-2007.
 */
#ifndef ORDER_H
#define ORDER_H

#include <stdio.h>
#include <stdlib.h>
#include "asn1per.h"
#include "asn1PerCppTypes.h"
#include "Base.h"
#include "LimaLimite.h"
#include "LogMaintenance.h"
#include "LogSante.h"
#include "Object.h"

/**************************************************************/
/*                                                            */
/*  OrderIncludes                                             */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_OrderIncludes {
} ASN1T_OrderIncludes;

class EXTERN ASN1C_OrderIncludes : public ASN1CType {
public:
   ASN1T_OrderIncludes& msgData;
   ASN1C_OrderIncludes (
      ASN1MessageBuffer& msgBuf, ASN1T_OrderIncludes& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_OrderIncludes (ASN1CTXT* ctxt_p, ASN1T_OrderIncludes* pvalue);
EXTERN int asn1PD_OrderIncludes (ASN1CTXT* ctxt_p, ASN1T_OrderIncludes* pvalue);

EXTERN void asn1Print_OrderIncludes (ASN1ConstCharPtr name, ASN1T_OrderIncludes* pvalue);

/**************************************************************/
/*                                                            */
/*  OrderExports                                              */
/*                                                            */
/**************************************************************/

class EXTERN ASN1C_OrderExports : public ASN1CType {
public:
   ASN1C_OrderExports (
      ASN1MessageBuffer& msgBuf);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_OrderExports (ASN1CTXT* ctxt_p);
EXTERN int asn1PD_OrderExports (ASN1CTXT* ctxt_p);

EXTERN void asn1Print_OrderExports (ASN1ConstCharPtr name);

/**************************************************************/
/*                                                            */
/*  EnumOrderErrorCode                                        */
/*                                                            */
/**************************************************************/

struct EXTERN EnumOrderErrorCode {
   enum Root {
      no_error = 0,
      error_invalid_unit = 1,
      error_invalid_limit = 2,
      error_invalid_lima = 3,
      error_invalid_mission = 4,
      error_invalid_mission_parameters = 5,
      error_unit_cannot_receive_order = 6,
      error_invalid_order_conduite = 7,
      error_invalid_order_mission = 8,
      error_invalid_order_initial = 9,
      error_invalid_order_conduite_parameters = 10,
      error_unit_surrendered = 11,
      error_invalid_lima_function = 12
   } ;
} ;

typedef EnumOrderErrorCode::Root ASN1T_EnumOrderErrorCode;

class EXTERN ASN1C_EnumOrderErrorCode : public ASN1CType {
public:
   ASN1T_EnumOrderErrorCode& msgData;
   ASN1C_EnumOrderErrorCode (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumOrderErrorCode& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumOrderErrorCode (ASN1CTXT* ctxt_p, ASN1T_EnumOrderErrorCode value);
EXTERN int asn1PD_EnumOrderErrorCode (ASN1CTXT* ctxt_p, ASN1T_EnumOrderErrorCode* pvalue);

EXTERN void asn1Print_EnumOrderErrorCode (ASN1ConstCharPtr name, ASN1T_EnumOrderErrorCode* pvalue);

/**************************************************************/
/*                                                            */
/*  OrderContext                                              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_OrderContext {
   struct {
      unsigned limite_gauchePresent : 1;
      unsigned limite_droitePresent : 1;
   } m;
   ASN1T_Line  limite_gauche;
   ASN1T_Line  limite_droite;
   ASN1T_LimasOrder  limas;
   ASN1T_Heading  direction_dangereuse;

   ASN1T_OrderContext () {
      m.limite_gauchePresent = 0;
      m.limite_droitePresent = 0;
   }
} ASN1T_OrderContext;

class EXTERN ASN1C_OrderContext : public ASN1CType {
public:
   ASN1T_OrderContext& msgData;
   ASN1C_OrderContext (
      ASN1MessageBuffer& msgBuf, ASN1T_OrderContext& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_OrderContext (ASN1CTXT* ctxt_p, ASN1T_OrderContext* pvalue);
EXTERN int asn1PD_OrderContext (ASN1CTXT* ctxt_p, ASN1T_OrderContext* pvalue);

EXTERN void asn1Print_OrderContext (ASN1ConstCharPtr name, ASN1T_OrderContext* pvalue);

/**************************************************************/
/*                                                            */
/*  MissionObjective                                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_MissionObjective {
   ASN1T_Location  localisation;
   ASN1T_DateTime  horaire;
} ASN1T_MissionObjective;

class EXTERN ASN1C_MissionObjective : public ASN1CType {
public:
   ASN1T_MissionObjective& msgData;
   ASN1C_MissionObjective (
      ASN1MessageBuffer& msgBuf, ASN1T_MissionObjective& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_MissionObjective (ASN1CTXT* ctxt_p, ASN1T_MissionObjective* pvalue);
EXTERN int asn1PD_MissionObjective (ASN1CTXT* ctxt_p, ASN1T_MissionObjective* pvalue);

EXTERN void asn1Print_MissionObjective (ASN1ConstCharPtr name, ASN1T_MissionObjective* pvalue);

/**************************************************************/
/*                                                            */
/*  MissionObjectiveList                                      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_MissionObjectiveList {
   ASN1UINT n;
   ASN1T_MissionObjective *elem;
} ASN1T_MissionObjectiveList;

class EXTERN ASN1C_MissionObjectiveList : public ASN1CType {
public:
   ASN1T_MissionObjectiveList& msgData;
   ASN1C_MissionObjectiveList (
      ASN1MessageBuffer& msgBuf, ASN1T_MissionObjectiveList& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_MissionObjectiveList (ASN1CTXT* ctxt_p, ASN1T_MissionObjectiveList* pvalue);
EXTERN int asn1PD_MissionObjectiveList (ASN1CTXT* ctxt_p, ASN1T_MissionObjectiveList* pvalue);

EXTERN void asn1Print_MissionObjectiveList (ASN1ConstCharPtr name, ASN1T_MissionObjectiveList* pvalue);

/**************************************************************/
/*                                                            */
/*  PlannedWork                                               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_PlannedWork {
   ASN1T_EnumObjectType  type;
   ASN1T_Location  position;
   ASN1T_EnumObstacleType  type_obstacle;
   ASN1REAL  densite;
   ASN1T_Automat  tc2;
   ASN1INT   activity_time;

   ASN1T_PlannedWork () {
      type_obstacle = EnumObstacleType::initial;
      densite = 0;
      tc2 = 0;
      activity_time = 0;
   }
} ASN1T_PlannedWork;

class EXTERN ASN1C_PlannedWork : public ASN1CType {
public:
   ASN1T_PlannedWork& msgData;
   ASN1C_PlannedWork (
      ASN1MessageBuffer& msgBuf, ASN1T_PlannedWork& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_PlannedWork (ASN1CTXT* ctxt_p, ASN1T_PlannedWork* pvalue);
EXTERN int asn1PD_PlannedWork (ASN1CTXT* ctxt_p, ASN1T_PlannedWork* pvalue);

EXTERN void asn1Print_PlannedWork (ASN1ConstCharPtr name, ASN1T_PlannedWork* pvalue);

/**************************************************************/
/*                                                            */
/*  PlannedWorkList                                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_PlannedWorkList {
   ASN1UINT n;
   ASN1T_PlannedWork *elem;
} ASN1T_PlannedWorkList;

class EXTERN ASN1C_PlannedWorkList : public ASN1CType {
public:
   ASN1T_PlannedWorkList& msgData;
   ASN1C_PlannedWorkList (
      ASN1MessageBuffer& msgBuf, ASN1T_PlannedWorkList& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_PlannedWorkList (ASN1CTXT* ctxt_p, ASN1T_PlannedWorkList* pvalue);
EXTERN int asn1PD_PlannedWorkList (ASN1CTXT* ctxt_p, ASN1T_PlannedWorkList* pvalue);

EXTERN void asn1Print_PlannedWorkList (ASN1ConstCharPtr name, ASN1T_PlannedWorkList* pvalue);

/**************************************************************/
/*                                                            */
/*  MissionParameter_value                                    */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_MissionParameter_value_aBool  1
#define T_MissionParameter_value_aReal  2
#define T_MissionParameter_value_enumeration 3
#define T_MissionParameter_value_path   4
#define T_MissionParameter_value_pathList 5
#define T_MissionParameter_value_point  6
#define T_MissionParameter_value_pointList 7
#define T_MissionParameter_value_polygon 8
#define T_MissionParameter_value_polygonList 9
#define T_MissionParameter_value_location 10
#define T_MissionParameter_value_locationList 11
#define T_MissionParameter_value_heading 12
#define T_MissionParameter_value_atlasNature 13
#define T_MissionParameter_value_unit   14
#define T_MissionParameter_value_unitList 15
#define T_MissionParameter_value_automat 16
#define T_MissionParameter_value_automatList 17
#define T_MissionParameter_value_unitKnowledge 18
#define T_MissionParameter_value_unitKnowledgeList 19
#define T_MissionParameter_value_objectKnowledge 20
#define T_MissionParameter_value_objectKnowledgeList 21
#define T_MissionParameter_value_populationKnowledge 22
#define T_MissionParameter_value_plannedWork 23
#define T_MissionParameter_value_plannedWorkList 24
#define T_MissionParameter_value_dotationType 25
#define T_MissionParameter_value_equipmentType 26
#define T_MissionParameter_value_tirIndirect 27
#define T_MissionParameter_value_dateTime 28
#define T_MissionParameter_value_logMaintenancePriorities 29
#define T_MissionParameter_value_logMedicalPriorities 30
#define T_MissionParameter_value_aCharStr 31
#define T_MissionParameter_value_missionObjective 32
#define T_MissionParameter_value_missionObjectiveList 33

typedef struct EXTERN ASN1T_MissionParameter_value {
   int t;
   union {
      /* t = 1 */
      ASN1BOOL  aBool;
      /* t = 2 */
      ASN1REAL  aReal;
      /* t = 3 */
      ASN1INT   enumeration;
      /* t = 4 */
      ASN1T_Path *path;
      /* t = 5 */
      ASN1T_PathList *pathList;
      /* t = 6 */
      ASN1T_Point *point;
      /* t = 7 */
      ASN1T_PointList *pointList;
      /* t = 8 */
      ASN1T_Polygon *polygon;
      /* t = 9 */
      ASN1T_PolygonList *polygonList;
      /* t = 10 */
      ASN1T_Location *location;
      /* t = 11 */
      ASN1T_LocationList *locationList;
      /* t = 12 */
      ASN1T_Heading  heading;
      /* t = 13 */
      ASN1T_AtlasNature *atlasNature;
      /* t = 14 */
      ASN1T_Unit  unit;
      /* t = 15 */
      ASN1T_UnitList *unitList;
      /* t = 16 */
      ASN1T_Automat  automat;
      /* t = 17 */
      ASN1T_AutomatList *automatList;
      /* t = 18 */
      ASN1T_UnitKnowledge  unitKnowledge;
      /* t = 19 */
      ASN1T_UnitKnowledgeList *unitKnowledgeList;
      /* t = 20 */
      ASN1T_ObjectKnowledge  objectKnowledge;
      /* t = 21 */
      ASN1T_ObjectKnowledgeList *objectKnowledgeList;
      /* t = 22 */
      ASN1T_PopulationKnowledge  populationKnowledge;
      /* t = 23 */
      ASN1T_PlannedWork *plannedWork;
      /* t = 24 */
      ASN1T_PlannedWorkList *plannedWorkList;
      /* t = 25 */
      ASN1T_DotationType  dotationType;
      /* t = 26 */
      ASN1T_EquipmentType  equipmentType;
      /* t = 27 */
      ASN1T_UnitFire  tirIndirect;
      /* t = 28 */
      ASN1T_DateTime *dateTime;
      /* t = 29 */
      ASN1T_LogMaintenancePriorities *logMaintenancePriorities;
      /* t = 30 */
      ASN1T_LogMedicalPriorities *logMedicalPriorities;
      /* t = 31 */
      ASN1VisibleString  aCharStr;
      /* t = 32 */
      ASN1T_MissionObjective *missionObjective;
      /* t = 33 */
      ASN1T_MissionObjectiveList *missionObjectiveList;
   } u;
} ASN1T_MissionParameter_value;

class EXTERN ASN1C_MissionParameter_value : public ASN1CType {
public:
   ASN1T_MissionParameter_value& msgData;
   ASN1C_MissionParameter_value (
      ASN1MessageBuffer& msgBuf, ASN1T_MissionParameter_value& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_MissionParameter_value (ASN1CTXT* ctxt_p, ASN1T_MissionParameter_value* pvalue);
EXTERN int asn1PD_MissionParameter_value (ASN1CTXT* ctxt_p, ASN1T_MissionParameter_value* pvalue);

EXTERN void asn1Print_MissionParameter_value (ASN1ConstCharPtr name, ASN1T_MissionParameter_value* pvalue);

/**************************************************************/
/*                                                            */
/*  MissionParameter                                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_MissionParameter {
   ASN1BOOL  null_value;
   ASN1T_MissionParameter_value  value;

   ASN1T_MissionParameter () {
      null_value = FALSE;
   }
} ASN1T_MissionParameter;

class EXTERN ASN1C_MissionParameter : public ASN1CType {
public:
   ASN1T_MissionParameter& msgData;
   ASN1C_MissionParameter (
      ASN1MessageBuffer& msgBuf, ASN1T_MissionParameter& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_MissionParameter (ASN1CTXT* ctxt_p, ASN1T_MissionParameter* pvalue);
EXTERN int asn1PD_MissionParameter (ASN1CTXT* ctxt_p, ASN1T_MissionParameter* pvalue);

EXTERN void asn1Print_MissionParameter (ASN1ConstCharPtr name, ASN1T_MissionParameter* pvalue);

/**************************************************************/
/*                                                            */
/*  MissionParameters                                         */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_MissionParameters {
   ASN1UINT n;
   ASN1T_MissionParameter *elem;
} ASN1T_MissionParameters;

class EXTERN ASN1C_MissionParameters : public ASN1CType {
public:
   ASN1T_MissionParameters& msgData;
   ASN1C_MissionParameters (
      ASN1MessageBuffer& msgBuf, ASN1T_MissionParameters& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_MissionParameters (ASN1CTXT* ctxt_p, ASN1T_MissionParameters* pvalue);
EXTERN int asn1PD_MissionParameters (ASN1CTXT* ctxt_p, ASN1T_MissionParameters* pvalue);

EXTERN void asn1Print_MissionParameters (ASN1ConstCharPtr name, ASN1T_MissionParameters* pvalue);

/**************************************************************/
/*                                                            */
/*  MsgUnitOrder                                              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_MsgUnitOrder {
   ASN1T_Unit  oid;
   ASN1T_OrderContext  order_context;
   ASN1T_OID  mission;
   ASN1T_MissionParameters  parametres;
} ASN1T_MsgUnitOrder;

class EXTERN ASN1C_MsgUnitOrder : public ASN1CType {
public:
   ASN1T_MsgUnitOrder& msgData;
   ASN1C_MsgUnitOrder (
      ASN1MessageBuffer& msgBuf, ASN1T_MsgUnitOrder& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_MsgUnitOrder (ASN1CTXT* ctxt_p, ASN1T_MsgUnitOrder* pvalue);
EXTERN int asn1PD_MsgUnitOrder (ASN1CTXT* ctxt_p, ASN1T_MsgUnitOrder* pvalue);

EXTERN void asn1Print_MsgUnitOrder (ASN1ConstCharPtr name, ASN1T_MsgUnitOrder* pvalue);

/**************************************************************/
/*                                                            */
/*  MsgUnitOrderAck                                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_MsgUnitOrderAck {
   ASN1T_Unit  oid;
   ASN1T_EnumOrderErrorCode  error_code;
} ASN1T_MsgUnitOrderAck;

class EXTERN ASN1C_MsgUnitOrderAck : public ASN1CType {
public:
   ASN1T_MsgUnitOrderAck& msgData;
   ASN1C_MsgUnitOrderAck (
      ASN1MessageBuffer& msgBuf, ASN1T_MsgUnitOrderAck& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_MsgUnitOrderAck (ASN1CTXT* ctxt_p, ASN1T_MsgUnitOrderAck* pvalue);
EXTERN int asn1PD_MsgUnitOrderAck (ASN1CTXT* ctxt_p, ASN1T_MsgUnitOrderAck* pvalue);

EXTERN void asn1Print_MsgUnitOrderAck (ASN1ConstCharPtr name, ASN1T_MsgUnitOrderAck* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumAutomatOrderFormation                                 */
/*                                                            */
/**************************************************************/

struct EXTERN EnumAutomatOrderFormation {
   enum Root {
      un_echelon = 0,
      deux_echelons = 1
   } ;
} ;

typedef EnumAutomatOrderFormation::Root ASN1T_EnumAutomatOrderFormation;

class EXTERN ASN1C_EnumAutomatOrderFormation : public ASN1CType {
public:
   ASN1T_EnumAutomatOrderFormation& msgData;
   ASN1C_EnumAutomatOrderFormation (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumAutomatOrderFormation& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumAutomatOrderFormation (ASN1CTXT* ctxt_p, ASN1T_EnumAutomatOrderFormation value);
EXTERN int asn1PD_EnumAutomatOrderFormation (ASN1CTXT* ctxt_p, ASN1T_EnumAutomatOrderFormation* pvalue);

EXTERN void asn1Print_EnumAutomatOrderFormation (ASN1ConstCharPtr name, ASN1T_EnumAutomatOrderFormation* pvalue);

/**************************************************************/
/*                                                            */
/*  MsgAutomatOrder                                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_MsgAutomatOrder {
   ASN1T_Automat  oid;
   ASN1T_OrderContext  order_context;
   ASN1T_OID  mission;
   ASN1T_MissionParameters  parametres;
   ASN1T_EnumAutomatOrderFormation  formation;
} ASN1T_MsgAutomatOrder;

class EXTERN ASN1C_MsgAutomatOrder : public ASN1CType {
public:
   ASN1T_MsgAutomatOrder& msgData;
   ASN1C_MsgAutomatOrder (
      ASN1MessageBuffer& msgBuf, ASN1T_MsgAutomatOrder& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_MsgAutomatOrder (ASN1CTXT* ctxt_p, ASN1T_MsgAutomatOrder* pvalue);
EXTERN int asn1PD_MsgAutomatOrder (ASN1CTXT* ctxt_p, ASN1T_MsgAutomatOrder* pvalue);

EXTERN void asn1Print_MsgAutomatOrder (ASN1ConstCharPtr name, ASN1T_MsgAutomatOrder* pvalue);

/**************************************************************/
/*                                                            */
/*  MsgAutomatOrderAck                                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_MsgAutomatOrderAck {
   ASN1T_Automat  oid;
   ASN1T_EnumOrderErrorCode  error_code;
} ASN1T_MsgAutomatOrderAck;

class EXTERN ASN1C_MsgAutomatOrderAck : public ASN1CType {
public:
   ASN1T_MsgAutomatOrderAck& msgData;
   ASN1C_MsgAutomatOrderAck (
      ASN1MessageBuffer& msgBuf, ASN1T_MsgAutomatOrderAck& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_MsgAutomatOrderAck (ASN1CTXT* ctxt_p, ASN1T_MsgAutomatOrderAck* pvalue);
EXTERN int asn1PD_MsgAutomatOrderAck (ASN1CTXT* ctxt_p, ASN1T_MsgAutomatOrderAck* pvalue);

EXTERN void asn1Print_MsgAutomatOrderAck (ASN1ConstCharPtr name, ASN1T_MsgAutomatOrderAck* pvalue);

/**************************************************************/
/*                                                            */
/*  MsgPopulationOrder                                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_MsgPopulationOrder {
   ASN1T_Population  oid;
   ASN1T_OID  mission;
   ASN1T_MissionParameters  parametres;
} ASN1T_MsgPopulationOrder;

class EXTERN ASN1C_MsgPopulationOrder : public ASN1CType {
public:
   ASN1T_MsgPopulationOrder& msgData;
   ASN1C_MsgPopulationOrder (
      ASN1MessageBuffer& msgBuf, ASN1T_MsgPopulationOrder& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_MsgPopulationOrder (ASN1CTXT* ctxt_p, ASN1T_MsgPopulationOrder* pvalue);
EXTERN int asn1PD_MsgPopulationOrder (ASN1CTXT* ctxt_p, ASN1T_MsgPopulationOrder* pvalue);

EXTERN void asn1Print_MsgPopulationOrder (ASN1ConstCharPtr name, ASN1T_MsgPopulationOrder* pvalue);

/**************************************************************/
/*                                                            */
/*  MsgPopulationOrderAck                                     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_MsgPopulationOrderAck {
   ASN1T_Population  oid;
   ASN1T_EnumOrderErrorCode  error_code;
} ASN1T_MsgPopulationOrderAck;

class EXTERN ASN1C_MsgPopulationOrderAck : public ASN1CType {
public:
   ASN1T_MsgPopulationOrderAck& msgData;
   ASN1C_MsgPopulationOrderAck (
      ASN1MessageBuffer& msgBuf, ASN1T_MsgPopulationOrderAck& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_MsgPopulationOrderAck (ASN1CTXT* ctxt_p, ASN1T_MsgPopulationOrderAck* pvalue);
EXTERN int asn1PD_MsgPopulationOrderAck (ASN1CTXT* ctxt_p, ASN1T_MsgPopulationOrderAck* pvalue);

EXTERN void asn1Print_MsgPopulationOrderAck (ASN1ConstCharPtr name, ASN1T_MsgPopulationOrderAck* pvalue);

/**************************************************************/
/*                                                            */
/*  MsgFragOrder                                              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_MsgFragOrder {
   ASN1T_OID  oid;
   ASN1T_OID  frag_order;
   ASN1T_MissionParameters  parametres;
} ASN1T_MsgFragOrder;

class EXTERN ASN1C_MsgFragOrder : public ASN1CType {
public:
   ASN1T_MsgFragOrder& msgData;
   ASN1C_MsgFragOrder (
      ASN1MessageBuffer& msgBuf, ASN1T_MsgFragOrder& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_MsgFragOrder (ASN1CTXT* ctxt_p, ASN1T_MsgFragOrder* pvalue);
EXTERN int asn1PD_MsgFragOrder (ASN1CTXT* ctxt_p, ASN1T_MsgFragOrder* pvalue);

EXTERN void asn1Print_MsgFragOrder (ASN1ConstCharPtr name, ASN1T_MsgFragOrder* pvalue);

/**************************************************************/
/*                                                            */
/*  MsgFragOrderAck                                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_MsgFragOrderAck {
   ASN1T_OID  oid;
   ASN1T_EnumOrderErrorCode  error_code;
} ASN1T_MsgFragOrderAck;

class EXTERN ASN1C_MsgFragOrderAck : public ASN1CType {
public:
   ASN1T_MsgFragOrderAck& msgData;
   ASN1C_MsgFragOrderAck (
      ASN1MessageBuffer& msgBuf, ASN1T_MsgFragOrderAck& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_MsgFragOrderAck (ASN1CTXT* ctxt_p, ASN1T_MsgFragOrderAck* pvalue);
EXTERN int asn1PD_MsgFragOrderAck (ASN1CTXT* ctxt_p, ASN1T_MsgFragOrderAck* pvalue);

EXTERN void asn1Print_MsgFragOrderAck (ASN1ConstCharPtr name, ASN1T_MsgFragOrderAck* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumReportType                                            */
/*                                                            */
/**************************************************************/

struct EXTERN EnumReportType {
   enum Root {
      message = 0,
      operationel = 1,
      evenement_exceptionnel = 2,
      warning = 3
   } ;
} ;

typedef EnumReportType::Root ASN1T_EnumReportType;

class EXTERN ASN1C_EnumReportType : public ASN1CType {
public:
   ASN1T_EnumReportType& msgData;
   ASN1C_EnumReportType (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumReportType& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumReportType (ASN1CTXT* ctxt_p, ASN1T_EnumReportType value);
EXTERN int asn1PD_EnumReportType (ASN1CTXT* ctxt_p, ASN1T_EnumReportType* pvalue);

EXTERN void asn1Print_EnumReportType (ASN1ConstCharPtr name, ASN1T_EnumReportType* pvalue);

/**************************************************************/
/*                                                            */
/*  MsgReport                                                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_MsgReport {
   ASN1T_OID  oid;
   ASN1T_OID  cr;
   ASN1T_OID  cr_oid;
   ASN1T_EnumReportType  type;
   ASN1T_DateTime  time;
   ASN1T_MissionParameters  parametres;
} ASN1T_MsgReport;

class EXTERN ASN1C_MsgReport : public ASN1CType {
public:
   ASN1T_MsgReport& msgData;
   ASN1C_MsgReport (
      ASN1MessageBuffer& msgBuf, ASN1T_MsgReport& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_MsgReport (ASN1CTXT* ctxt_p, ASN1T_MsgReport* pvalue);
EXTERN int asn1PD_MsgReport (ASN1CTXT* ctxt_p, ASN1T_MsgReport* pvalue);

EXTERN void asn1Print_MsgReport (ASN1ConstCharPtr name, ASN1T_MsgReport* pvalue);

/**************************************************************/
/*                                                            */
/*  MsgInvalidateReport                                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_MsgInvalidateReport {
   ASN1T_OID  oid;
   ASN1T_OID  cr_oid;
} ASN1T_MsgInvalidateReport;

class EXTERN ASN1C_MsgInvalidateReport : public ASN1CType {
public:
   ASN1T_MsgInvalidateReport& msgData;
   ASN1C_MsgInvalidateReport (
      ASN1MessageBuffer& msgBuf, ASN1T_MsgInvalidateReport& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_MsgInvalidateReport (ASN1CTXT* ctxt_p, ASN1T_MsgInvalidateReport* pvalue);
EXTERN int asn1PD_MsgInvalidateReport (ASN1CTXT* ctxt_p, ASN1T_MsgInvalidateReport* pvalue);

EXTERN void asn1Print_MsgInvalidateReport (ASN1ConstCharPtr name, ASN1T_MsgInvalidateReport* pvalue);

/**************************************************************/
/*                                                            */
/*  MsgTrace                                                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_MsgTrace {
   ASN1T_OID  oid;
   ASN1VisibleString  message;
} ASN1T_MsgTrace;

class EXTERN ASN1C_MsgTrace : public ASN1CType {
public:
   ASN1T_MsgTrace& msgData;
   ASN1C_MsgTrace (
      ASN1MessageBuffer& msgBuf, ASN1T_MsgTrace& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_MsgTrace (ASN1CTXT* ctxt_p, ASN1T_MsgTrace* pvalue);
EXTERN int asn1PD_MsgTrace (ASN1CTXT* ctxt_p, ASN1T_MsgTrace* pvalue);

EXTERN void asn1Print_MsgTrace (ASN1ConstCharPtr name, ASN1T_MsgTrace* pvalue);

/**************************************************************/
/*                                                            */
/*  MsgDecisionalState                                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_MsgDecisionalState {
   ASN1T_OID  oid;
   ASN1VisibleString  key;
   ASN1VisibleString  value;
} ASN1T_MsgDecisionalState;

class EXTERN ASN1C_MsgDecisionalState : public ASN1CType {
public:
   ASN1T_MsgDecisionalState& msgData;
   ASN1C_MsgDecisionalState (
      ASN1MessageBuffer& msgBuf, ASN1T_MsgDecisionalState& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_MsgDecisionalState (ASN1CTXT* ctxt_p, ASN1T_MsgDecisionalState* pvalue);
EXTERN int asn1PD_MsgDecisionalState (ASN1CTXT* ctxt_p, ASN1T_MsgDecisionalState* pvalue);

EXTERN void asn1Print_MsgDecisionalState (ASN1ConstCharPtr name, ASN1T_MsgDecisionalState* pvalue);

/**************************************************************/
/*                                                            */
/*  MsgDebugPoints                                            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_MsgDebugPoints {
   ASN1T_OID  oid;
   ASN1T_CoordUTMList  coordinates;
} ASN1T_MsgDebugPoints;

class EXTERN ASN1C_MsgDebugPoints : public ASN1CType {
public:
   ASN1T_MsgDebugPoints& msgData;
   ASN1C_MsgDebugPoints (
      ASN1MessageBuffer& msgBuf, ASN1T_MsgDebugPoints& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_MsgDebugPoints (ASN1CTXT* ctxt_p, ASN1T_MsgDebugPoints* pvalue);
EXTERN int asn1PD_MsgDebugPoints (ASN1CTXT* ctxt_p, ASN1T_MsgDebugPoints* pvalue);

EXTERN void asn1Print_MsgDebugPoints (ASN1ConstCharPtr name, ASN1T_MsgDebugPoints* pvalue);

#endif
