/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 5.31, Date: 06-Jan-2010.
 */
#include "Plugin.h"

/**************************************************************/
/*                                                            */
/*  PluginIncludes                                            */
/*                                                            */
/**************************************************************/

ASN1C_PluginIncludes::ASN1C_PluginIncludes (
   ASN1MessageBuffer& msgBuf, ASN1T_PluginIncludes& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_PluginIncludes (ASN1CTXT* ctxt_p, ASN1T_PluginIncludes* pvalue)
{
   int stat = ASN_OK;

   /* encode baseExports */

   stat = asn1PE_BaseExports (ctxt_p);
   if (stat != ASN_OK) return stat;

   /* encode armyExports */

   stat = asn1PE_ArmyExports (ctxt_p);
   if (stat != ASN_OK) return stat;

   /* encode intelligenceExports */

   stat = asn1PE_IntelligenceExports (ctxt_p);
   if (stat != ASN_OK) return stat;

   /* encode limaLimiteExports */

   stat = asn1PE_LimaLimiteExports (ctxt_p);
   if (stat != ASN_OK) return stat;

   return (stat);
}

int ASN1C_PluginIncludes::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_PluginIncludes (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_PluginIncludes (ASN1CTXT* ctxt_p, ASN1T_PluginIncludes* pvalue)
{
   int stat = ASN_OK;

   /* decode baseExports */

   stat = asn1PD_BaseExports (ctxt_p);
   if (stat != ASN_OK) return stat;

   /* decode armyExports */

   stat = asn1PD_ArmyExports (ctxt_p);
   if (stat != ASN_OK) return stat;

   /* decode intelligenceExports */

   stat = asn1PD_IntelligenceExports (ctxt_p);
   if (stat != ASN_OK) return stat;

   /* decode limaLimiteExports */

   stat = asn1PD_LimaLimiteExports (ctxt_p);
   if (stat != ASN_OK) return stat;


   return (stat);
}

int ASN1C_PluginIncludes::Decode ()
{
   return asn1PD_PluginIncludes (mpContext->GetPtr(), &msgData);
}

/**************************************************************/
/*                                                            */
/*  PluginExports                                             */
/*                                                            */
/**************************************************************/

ASN1C_PluginExports::ASN1C_PluginExports (
   ASN1MessageBuffer& msgBuf) :
   ASN1CType(msgBuf)
{}

EXTERN int asn1PE_PluginExports (ASN1CTXT* ctxt_p)
{
   int stat = ASN_OK;

   /* NULL */
   return (stat);
}

int ASN1C_PluginExports::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_PluginExports (mpContext->GetPtr());
   return stat;
}

EXTERN int asn1PD_PluginExports (ASN1CTXT* ctxt_p)
{
   int stat = ASN_OK;

   /* NULL */

   return (stat);
}

int ASN1C_PluginExports::Decode ()
{
   return asn1PD_PluginExports (mpContext->GetPtr());
}

/**************************************************************/
/*                                                            */
/*  MsgPluginTextMessage                                      */
/*                                                            */
/**************************************************************/

ASN1C_MsgPluginTextMessage::ASN1C_MsgPluginTextMessage (
   ASN1MessageBuffer& msgBuf, ASN1T_MsgPluginTextMessage& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_MsgPluginTextMessage (ASN1CTXT* ctxt_p, ASN1T_MsgPluginTextMessage* pvalue)
{
   int stat = ASN_OK;

   /* encode destinataire */

   stat = pe_VisibleString (ctxt_p, pvalue->destinataire, 0);
   if (stat != ASN_OK) return stat;

   /* encode message */

   stat = pe_VisibleString (ctxt_p, pvalue->message, 0);
   if (stat != ASN_OK) return stat;

   return (stat);
}

int ASN1C_MsgPluginTextMessage::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_MsgPluginTextMessage (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_MsgPluginTextMessage (ASN1CTXT* ctxt_p, ASN1T_MsgPluginTextMessage* pvalue)
{
   int stat = ASN_OK;

   /* decode destinataire */

   stat = pd_VisibleString (ctxt_p, &pvalue->destinataire, 0);
   if (stat != ASN_OK) return stat;

   /* decode message */

   stat = pd_VisibleString (ctxt_p, &pvalue->message, 0);
   if (stat != ASN_OK) return stat;


   return (stat);
}

int ASN1C_MsgPluginTextMessage::Decode ()
{
   return asn1PD_MsgPluginTextMessage (mpContext->GetPtr(), &msgData);
}

