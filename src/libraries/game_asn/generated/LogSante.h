/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 5.31, Date: 06-Jan-2010.
 */
#ifndef LOGSANTE_H
#define LOGSANTE_H

#include <stdio.h>
#include <stdlib.h>
#include "asn1per.h"
#include "asn1PerCppTypes.h"
#include "Base.h"

/**************************************************************/
/*                                                            */
/*  LogSanteIncludes                                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_LogSanteIncludes {
} ASN1T_LogSanteIncludes;

class EXTERN ASN1C_LogSanteIncludes : public ASN1CType {
public:
   ASN1T_LogSanteIncludes& msgData;
   ASN1C_LogSanteIncludes (
      ASN1MessageBuffer& msgBuf, ASN1T_LogSanteIncludes& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_LogSanteIncludes (ASN1CTXT* ctxt_p, ASN1T_LogSanteIncludes* pvalue);
EXTERN int asn1PD_LogSanteIncludes (ASN1CTXT* ctxt_p, ASN1T_LogSanteIncludes* pvalue);

EXTERN void asn1Print_LogSanteIncludes (ASN1ConstCharPtr name, ASN1T_LogSanteIncludes* pvalue);

/**************************************************************/
/*                                                            */
/*  LogSanteExports                                           */
/*                                                            */
/**************************************************************/

class EXTERN ASN1C_LogSanteExports : public ASN1CType {
public:
   ASN1C_LogSanteExports (
      ASN1MessageBuffer& msgBuf);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_LogSanteExports (ASN1CTXT* ctxt_p);
EXTERN int asn1PD_LogSanteExports (ASN1CTXT* ctxt_p);

EXTERN void asn1Print_LogSanteExports (ASN1ConstCharPtr name);

/**************************************************************/
/*                                                            */
/*  EnumLogMedicalHandlingStatus                              */
/*                                                            */
/**************************************************************/

struct EXTERN EnumLogMedicalHandlingStatus {
   enum Root {
      attente_disponibilite_ambulance_releve = 0,
      ambulance_releve_deplacement_aller = 1,
      ambulance_releve_chargement = 2,
      attente_chargement_complet_ambulance_releve = 3,
      ambulance_releve_deplacement_retour = 4,
      ambulance_releve_dechargement = 5,
      attente_disponibilite_medecin_pour_diagnostique = 6,
      diagnostique = 7,
      recherche_secteur_tri = 8,
      attente_disponibilite_medecin_pour_tri = 9,
      tri = 10,
      recherche_secteur_soin = 11,
      attente_disponibilite_medecin_pour_soin = 12,
      soin = 13,
      hospitalisation = 14,
      attente_disponibilite_ambulance_ramassage = 15,
      ambulance_ramassage_chargement = 16,
      attente_chargement_complet_ambulance_ramassage = 17,
      ambulance_ramassage_deplacement_aller = 18,
      ambulance_ramassage_dechargement = 19,
      termine = 20
   } ;
} ;

typedef EnumLogMedicalHandlingStatus::Root ASN1T_EnumLogMedicalHandlingStatus;

class EXTERN ASN1C_EnumLogMedicalHandlingStatus : public ASN1CType {
public:
   ASN1T_EnumLogMedicalHandlingStatus& msgData;
   ASN1C_EnumLogMedicalHandlingStatus (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumLogMedicalHandlingStatus& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumLogMedicalHandlingStatus (ASN1CTXT* ctxt_p, ASN1T_EnumLogMedicalHandlingStatus value);
EXTERN int asn1PD_EnumLogMedicalHandlingStatus (ASN1CTXT* ctxt_p, ASN1T_EnumLogMedicalHandlingStatus* pvalue);

EXTERN void asn1Print_EnumLogMedicalHandlingStatus (ASN1ConstCharPtr name, ASN1T_EnumLogMedicalHandlingStatus* pvalue);

/**************************************************************/
/*                                                            */
/*  MsgLogMedicalHandlingCreation                             */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_MsgLogMedicalHandlingCreation {
   ASN1T_OID  oid_consigne;
   ASN1T_Unit  oid_pion;
   ASN1INT   tick_creation;
   ASN1T_EnumHumanRank  rang;
   ASN1T_EnumHumanWound  blessure;
   ASN1BOOL  blesse_mental;
   ASN1BOOL  contamine_nbc;

   ASN1T_MsgLogMedicalHandlingCreation () {
      blesse_mental = FALSE;
      contamine_nbc = FALSE;
   }
} ASN1T_MsgLogMedicalHandlingCreation;

class EXTERN ASN1C_MsgLogMedicalHandlingCreation : public ASN1CType {
public:
   ASN1T_MsgLogMedicalHandlingCreation& msgData;
   ASN1C_MsgLogMedicalHandlingCreation (
      ASN1MessageBuffer& msgBuf, ASN1T_MsgLogMedicalHandlingCreation& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_MsgLogMedicalHandlingCreation (ASN1CTXT* ctxt_p, ASN1T_MsgLogMedicalHandlingCreation* pvalue);
EXTERN int asn1PD_MsgLogMedicalHandlingCreation (ASN1CTXT* ctxt_p, ASN1T_MsgLogMedicalHandlingCreation* pvalue);

EXTERN void asn1Print_MsgLogMedicalHandlingCreation (ASN1ConstCharPtr name, ASN1T_MsgLogMedicalHandlingCreation* pvalue);

/**************************************************************/
/*                                                            */
/*  MsgLogMedicalHandlingUpdate                               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_MsgLogMedicalHandlingUpdate {
   struct {
      unsigned oid_pion_log_traitantPresent : 1;
      unsigned blessurePresent : 1;
      unsigned blesse_mentalPresent : 1;
      unsigned contamine_nbcPresent : 1;
      unsigned etatPresent : 1;
      unsigned diagnostique_effectuePresent : 1;
   } m;
   ASN1T_OID  oid_consigne;
   ASN1T_Unit  oid_pion;
   ASN1T_Unit  oid_pion_log_traitant;
   ASN1T_EnumHumanWound  blessure;
   ASN1BOOL  blesse_mental;
   ASN1BOOL  contamine_nbc;
   ASN1T_EnumLogMedicalHandlingStatus  etat;
   ASN1BOOL  diagnostique_effectue;

   ASN1T_MsgLogMedicalHandlingUpdate () {
      m.oid_pion_log_traitantPresent = 0;
      m.blessurePresent = 0;
      m.blesse_mentalPresent = 0;
      m.contamine_nbcPresent = 0;
      m.etatPresent = 0;
      m.diagnostique_effectuePresent = 0;
   }
} ASN1T_MsgLogMedicalHandlingUpdate;

class EXTERN ASN1C_MsgLogMedicalHandlingUpdate : public ASN1CType {
public:
   ASN1T_MsgLogMedicalHandlingUpdate& msgData;
   ASN1C_MsgLogMedicalHandlingUpdate (
      ASN1MessageBuffer& msgBuf, ASN1T_MsgLogMedicalHandlingUpdate& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_MsgLogMedicalHandlingUpdate (ASN1CTXT* ctxt_p, ASN1T_MsgLogMedicalHandlingUpdate* pvalue);
EXTERN int asn1PD_MsgLogMedicalHandlingUpdate (ASN1CTXT* ctxt_p, ASN1T_MsgLogMedicalHandlingUpdate* pvalue);

EXTERN void asn1Print_MsgLogMedicalHandlingUpdate (ASN1ConstCharPtr name, ASN1T_MsgLogMedicalHandlingUpdate* pvalue);

/**************************************************************/
/*                                                            */
/*  MsgLogMedicalHandlingDestruction                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_MsgLogMedicalHandlingDestruction {
   ASN1T_OID  oid_consigne;
   ASN1T_Unit  oid_pion;
} ASN1T_MsgLogMedicalHandlingDestruction;

class EXTERN ASN1C_MsgLogMedicalHandlingDestruction : public ASN1CType {
public:
   ASN1T_MsgLogMedicalHandlingDestruction& msgData;
   ASN1C_MsgLogMedicalHandlingDestruction (
      ASN1MessageBuffer& msgBuf, ASN1T_MsgLogMedicalHandlingDestruction& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_MsgLogMedicalHandlingDestruction (ASN1CTXT* ctxt_p, ASN1T_MsgLogMedicalHandlingDestruction* pvalue);
EXTERN int asn1PD_MsgLogMedicalHandlingDestruction (ASN1CTXT* ctxt_p, ASN1T_MsgLogMedicalHandlingDestruction* pvalue);

EXTERN void asn1Print_MsgLogMedicalHandlingDestruction (ASN1ConstCharPtr name, ASN1T_MsgLogMedicalHandlingDestruction* pvalue);

/**************************************************************/
/*                                                            */
/*  LogMedicalEquipmentAvailability                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_LogMedicalEquipmentAvailability {
   struct {
      unsigned nbr_au_reposPresent : 1;
   } m;
   ASN1T_EquipmentType  type_equipement;
   ASN1INT   nbr_total;
   ASN1INT   nbr_disponibles;
   ASN1INT   nbr_au_travail;
   ASN1INT   nbr_pretes;
   ASN1INT   nbr_au_repos;

   ASN1T_LogMedicalEquipmentAvailability () {
      nbr_pretes = 0;
      m.nbr_au_reposPresent = 0;
   }
} ASN1T_LogMedicalEquipmentAvailability;

class EXTERN ASN1C_LogMedicalEquipmentAvailability : public ASN1CType {
public:
   ASN1T_LogMedicalEquipmentAvailability& msgData;
   ASN1C_LogMedicalEquipmentAvailability (
      ASN1MessageBuffer& msgBuf, ASN1T_LogMedicalEquipmentAvailability& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_LogMedicalEquipmentAvailability (ASN1CTXT* ctxt_p, ASN1T_LogMedicalEquipmentAvailability* pvalue);
EXTERN int asn1PD_LogMedicalEquipmentAvailability (ASN1CTXT* ctxt_p, ASN1T_LogMedicalEquipmentAvailability* pvalue);

EXTERN void asn1Print_LogMedicalEquipmentAvailability (ASN1ConstCharPtr name, ASN1T_LogMedicalEquipmentAvailability* pvalue);

/**************************************************************/
/*                                                            */
/*  LogMedicalPriorities                                      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_LogMedicalPriorities {
   ASN1UINT n;
   ASN1T_EnumHumanWound *elem;
} ASN1T_LogMedicalPriorities;

class EXTERN ASN1C_LogMedicalPriorities : public ASN1CType {
public:
   ASN1T_LogMedicalPriorities& msgData;
   ASN1C_LogMedicalPriorities (
      ASN1MessageBuffer& msgBuf, ASN1T_LogMedicalPriorities& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_LogMedicalPriorities (ASN1CTXT* ctxt_p, ASN1T_LogMedicalPriorities* pvalue);
EXTERN int asn1PD_LogMedicalPriorities (ASN1CTXT* ctxt_p, ASN1T_LogMedicalPriorities* pvalue);

EXTERN void asn1Print_LogMedicalPriorities (ASN1ConstCharPtr name, ASN1T_LogMedicalPriorities* pvalue);

/**************************************************************/
/*                                                            */
/*  _SeqOfLogMedicalEquipmentAvailability                     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T__SeqOfLogMedicalEquipmentAvailability {
   ASN1UINT n;
   ASN1T_LogMedicalEquipmentAvailability *elem;
} ASN1T__SeqOfLogMedicalEquipmentAvailability;

class EXTERN ASN1C__SeqOfLogMedicalEquipmentAvailability : public ASN1CType {
public:
   ASN1T__SeqOfLogMedicalEquipmentAvailability& msgData;
   ASN1C__SeqOfLogMedicalEquipmentAvailability (
      ASN1MessageBuffer& msgBuf, ASN1T__SeqOfLogMedicalEquipmentAvailability& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE__SeqOfLogMedicalEquipmentAvailability (ASN1CTXT* ctxt_p, ASN1T__SeqOfLogMedicalEquipmentAvailability* pvalue);
EXTERN int asn1PD__SeqOfLogMedicalEquipmentAvailability (ASN1CTXT* ctxt_p, ASN1T__SeqOfLogMedicalEquipmentAvailability* pvalue);

EXTERN void asn1Print__SeqOfLogMedicalEquipmentAvailability (ASN1ConstCharPtr name, ASN1T__SeqOfLogMedicalEquipmentAvailability* pvalue);

/**************************************************************/
/*                                                            */
/*  MsgLogMedicalState                                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_MsgLogMedicalState {
   struct {
      unsigned chaine_activeePresent : 1;
      unsigned prioritesPresent : 1;
      unsigned priorites_tactiquesPresent : 1;
      unsigned disponibilites_ambulances_relevePresent : 1;
      unsigned disponibilites_ambulances_ramassagePresent : 1;
      unsigned disponibilites_medecinsPresent : 1;
   } m;
   ASN1T_Unit  oid_pion;
   ASN1BOOL  chaine_activee;
   ASN1T_LogMedicalPriorities  priorites;
   ASN1T_AutomatList  priorites_tactiques;
   ASN1T__SeqOfLogMedicalEquipmentAvailability  disponibilites_ambulances_releve;
   ASN1T__SeqOfLogMedicalEquipmentAvailability  disponibilites_ambulances_ramassage;
   ASN1T__SeqOfLogMedicalEquipmentAvailability  disponibilites_medecins;

   ASN1T_MsgLogMedicalState () {
      m.chaine_activeePresent = 0;
      m.prioritesPresent = 0;
      m.priorites_tactiquesPresent = 0;
      m.disponibilites_ambulances_relevePresent = 0;
      m.disponibilites_ambulances_ramassagePresent = 0;
      m.disponibilites_medecinsPresent = 0;
   }
} ASN1T_MsgLogMedicalState;

class EXTERN ASN1C_MsgLogMedicalState : public ASN1CType {
public:
   ASN1T_MsgLogMedicalState& msgData;
   ASN1C_MsgLogMedicalState (
      ASN1MessageBuffer& msgBuf, ASN1T_MsgLogMedicalState& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_MsgLogMedicalState (ASN1CTXT* ctxt_p, ASN1T_MsgLogMedicalState* pvalue);
EXTERN int asn1PD_MsgLogMedicalState (ASN1CTXT* ctxt_p, ASN1T_MsgLogMedicalState* pvalue);

EXTERN void asn1Print_MsgLogMedicalState (ASN1ConstCharPtr name, ASN1T_MsgLogMedicalState* pvalue);

#endif
