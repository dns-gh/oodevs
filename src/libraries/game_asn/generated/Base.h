/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 5.31, Date: 30-Dec-2009.
 */
#ifndef BASE_H
#define BASE_H

#include <stdio.h>
#include <stdlib.h>
#include "asn1per.h"
#include "asn1PerCppTypes.h"
#include "ASN1CBitStr.h"

/**************************************************************/
/*                                                            */
/*  BaseIncludes                                              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_BaseIncludes {
   ASN1OCTET __dummy__;
} ASN1T_BaseIncludes;

class EXTERN ASN1C_BaseIncludes : public ASN1CType {
public:
   ASN1T_BaseIncludes& msgData;
   ASN1C_BaseIncludes (
      ASN1MessageBuffer& msgBuf, ASN1T_BaseIncludes& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_BaseIncludes (ASN1CTXT* ctxt_p, ASN1T_BaseIncludes* pvalue);
EXTERN int asn1PD_BaseIncludes (ASN1CTXT* ctxt_p, ASN1T_BaseIncludes* pvalue);

EXTERN void asn1Print_BaseIncludes (ASN1ConstCharPtr name, ASN1T_BaseIncludes* pvalue);

/**************************************************************/
/*                                                            */
/*  BaseExports                                               */
/*                                                            */
/**************************************************************/

class EXTERN ASN1C_BaseExports : public ASN1CType {
public:
   ASN1C_BaseExports (
      ASN1MessageBuffer& msgBuf);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_BaseExports (ASN1CTXT* ctxt_p);
EXTERN int asn1PD_BaseExports (ASN1CTXT* ctxt_p);

EXTERN void asn1Print_BaseExports (ASN1ConstCharPtr name);

/**************************************************************/
/*                                                            */
/*  EnumLocationType                                          */
/*                                                            */
/**************************************************************/

struct EXTERN EnumLocationType {
   enum Root {
      circle = 0,
      ellipse = 1,
      line = 2,
      polygon = 3,
      point = 4,
      sector = 5
   } ;
} ;

typedef EnumLocationType::Root ASN1T_EnumLocationType;

class EXTERN ASN1C_EnumLocationType : public ASN1CType {
public:
   ASN1T_EnumLocationType& msgData;
   ASN1C_EnumLocationType (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumLocationType& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumLocationType (ASN1CTXT* ctxt_p, ASN1T_EnumLocationType value);
EXTERN int asn1PD_EnumLocationType (ASN1CTXT* ctxt_p, ASN1T_EnumLocationType* pvalue);

EXTERN void asn1Print_EnumLocationType (ASN1ConstCharPtr name, ASN1T_EnumLocationType* pvalue);

/**************************************************************/
/*                                                            */
/*  CoordLatLong                                              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_CoordLatLong {
   ASN1REAL  latitude;
   ASN1REAL  longitude;
} ASN1T_CoordLatLong;

class EXTERN ASN1C_CoordLatLong : public ASN1CType {
public:
   ASN1T_CoordLatLong& msgData;
   ASN1C_CoordLatLong (
      ASN1MessageBuffer& msgBuf, ASN1T_CoordLatLong& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_CoordLatLong (ASN1CTXT* ctxt_p, ASN1T_CoordLatLong* pvalue);
EXTERN int asn1PD_CoordLatLong (ASN1CTXT* ctxt_p, ASN1T_CoordLatLong* pvalue);

EXTERN void asn1Print_CoordLatLong (ASN1ConstCharPtr name, ASN1T_CoordLatLong* pvalue);

/**************************************************************/
/*                                                            */
/*  CoordLatLongList                                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_CoordLatLongList {
   ASN1UINT n;
   ASN1T_CoordLatLong *elem;
} ASN1T_CoordLatLongList;

class EXTERN ASN1C_CoordLatLongList : public ASN1CType {
public:
   ASN1T_CoordLatLongList& msgData;
   ASN1C_CoordLatLongList (
      ASN1MessageBuffer& msgBuf, ASN1T_CoordLatLongList& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_CoordLatLongList (ASN1CTXT* ctxt_p, ASN1T_CoordLatLongList* pvalue);
EXTERN int asn1PD_CoordLatLongList (ASN1CTXT* ctxt_p, ASN1T_CoordLatLongList* pvalue);

EXTERN void asn1Print_CoordLatLongList (ASN1ConstCharPtr name, ASN1T_CoordLatLongList* pvalue);

/**************************************************************/
/*                                                            */
/*  Location                                                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_Location {
   ASN1T_EnumLocationType  type;
   ASN1T_CoordLatLongList  coordinates;
} ASN1T_Location;

class EXTERN ASN1C_Location : public ASN1CType {
public:
   ASN1T_Location& msgData;
   ASN1C_Location (
      ASN1MessageBuffer& msgBuf, ASN1T_Location& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Location (ASN1CTXT* ctxt_p, ASN1T_Location* pvalue);
EXTERN int asn1PD_Location (ASN1CTXT* ctxt_p, ASN1T_Location* pvalue);

EXTERN void asn1Print_Location (ASN1ConstCharPtr name, ASN1T_Location* pvalue);

/**************************************************************/
/*                                                            */
/*  Point                                                     */
/*                                                            */
/**************************************************************/

typedef ASN1T_Location ASN1T_Point;

class EXTERN ASN1C_Point : public ASN1CType {
public:
   ASN1T_Point& msgData;
   ASN1C_Point (
      ASN1MessageBuffer& msgBuf, ASN1T_Point& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Point (ASN1CTXT* ctxt_p, ASN1T_Point* pvalue);
EXTERN int asn1PD_Point (ASN1CTXT* ctxt_p, ASN1T_Point* pvalue);

EXTERN void asn1Print_Point (ASN1ConstCharPtr name, ASN1T_Point* pvalue);

/**************************************************************/
/*                                                            */
/*  Line                                                      */
/*                                                            */
/**************************************************************/

typedef ASN1T_Location ASN1T_Line;

class EXTERN ASN1C_Line : public ASN1CType {
public:
   ASN1T_Line& msgData;
   ASN1C_Line (
      ASN1MessageBuffer& msgBuf, ASN1T_Line& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Line (ASN1CTXT* ctxt_p, ASN1T_Line* pvalue);
EXTERN int asn1PD_Line (ASN1CTXT* ctxt_p, ASN1T_Line* pvalue);

EXTERN void asn1Print_Line (ASN1ConstCharPtr name, ASN1T_Line* pvalue);

/**************************************************************/
/*                                                            */
/*  Path                                                      */
/*                                                            */
/**************************************************************/

typedef ASN1T_Location ASN1T_Path;

class EXTERN ASN1C_Path : public ASN1CType {
public:
   ASN1T_Path& msgData;
   ASN1C_Path (
      ASN1MessageBuffer& msgBuf, ASN1T_Path& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Path (ASN1CTXT* ctxt_p, ASN1T_Path* pvalue);
EXTERN int asn1PD_Path (ASN1CTXT* ctxt_p, ASN1T_Path* pvalue);

EXTERN void asn1Print_Path (ASN1ConstCharPtr name, ASN1T_Path* pvalue);

/**************************************************************/
/*                                                            */
/*  Polygon                                                   */
/*                                                            */
/**************************************************************/

typedef ASN1T_Location ASN1T_Polygon;

class EXTERN ASN1C_Polygon : public ASN1CType {
public:
   ASN1T_Polygon& msgData;
   ASN1C_Polygon (
      ASN1MessageBuffer& msgBuf, ASN1T_Polygon& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Polygon (ASN1CTXT* ctxt_p, ASN1T_Polygon* pvalue);
EXTERN int asn1PD_Polygon (ASN1CTXT* ctxt_p, ASN1T_Polygon* pvalue);

EXTERN void asn1Print_Polygon (ASN1ConstCharPtr name, ASN1T_Polygon* pvalue);

/**************************************************************/
/*                                                            */
/*  Segment                                                   */
/*                                                            */
/**************************************************************/

typedef ASN1T_Location ASN1T_Segment;

class EXTERN ASN1C_Segment : public ASN1CType {
public:
   ASN1T_Segment& msgData;
   ASN1C_Segment (
      ASN1MessageBuffer& msgBuf, ASN1T_Segment& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Segment (ASN1CTXT* ctxt_p, ASN1T_Segment* pvalue);
EXTERN int asn1PD_Segment (ASN1CTXT* ctxt_p, ASN1T_Segment* pvalue);

EXTERN void asn1Print_Segment (ASN1ConstCharPtr name, ASN1T_Segment* pvalue);

/**************************************************************/
/*                                                            */
/*  Circle                                                    */
/*                                                            */
/**************************************************************/

typedef ASN1T_Location ASN1T_Circle;

class EXTERN ASN1C_Circle : public ASN1CType {
public:
   ASN1T_Circle& msgData;
   ASN1C_Circle (
      ASN1MessageBuffer& msgBuf, ASN1T_Circle& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Circle (ASN1CTXT* ctxt_p, ASN1T_Circle* pvalue);
EXTERN int asn1PD_Circle (ASN1CTXT* ctxt_p, ASN1T_Circle* pvalue);

EXTERN void asn1Print_Circle (ASN1ConstCharPtr name, ASN1T_Circle* pvalue);

/**************************************************************/
/*                                                            */
/*  Ellipse                                                   */
/*                                                            */
/**************************************************************/

typedef ASN1T_Location ASN1T_Ellipse;

class EXTERN ASN1C_Ellipse : public ASN1CType {
public:
   ASN1T_Ellipse& msgData;
   ASN1C_Ellipse (
      ASN1MessageBuffer& msgBuf, ASN1T_Ellipse& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Ellipse (ASN1CTXT* ctxt_p, ASN1T_Ellipse* pvalue);
EXTERN int asn1PD_Ellipse (ASN1CTXT* ctxt_p, ASN1T_Ellipse* pvalue);

EXTERN void asn1Print_Ellipse (ASN1ConstCharPtr name, ASN1T_Ellipse* pvalue);

/**************************************************************/
/*                                                            */
/*  Sector                                                    */
/*                                                            */
/**************************************************************/

typedef ASN1T_Location ASN1T_Sector;

class EXTERN ASN1C_Sector : public ASN1CType {
public:
   ASN1T_Sector& msgData;
   ASN1C_Sector (
      ASN1MessageBuffer& msgBuf, ASN1T_Sector& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Sector (ASN1CTXT* ctxt_p, ASN1T_Sector* pvalue);
EXTERN int asn1PD_Sector (ASN1CTXT* ctxt_p, ASN1T_Sector* pvalue);

EXTERN void asn1Print_Sector (ASN1ConstCharPtr name, ASN1T_Sector* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationList                                              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_LocationList {
   ASN1UINT n;
   ASN1T_Location *elem;
} ASN1T_LocationList;

class EXTERN ASN1C_LocationList : public ASN1CType {
public:
   ASN1T_LocationList& msgData;
   ASN1C_LocationList (
      ASN1MessageBuffer& msgBuf, ASN1T_LocationList& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_LocationList (ASN1CTXT* ctxt_p, ASN1T_LocationList* pvalue);
EXTERN int asn1PD_LocationList (ASN1CTXT* ctxt_p, ASN1T_LocationList* pvalue);

EXTERN void asn1Print_LocationList (ASN1ConstCharPtr name, ASN1T_LocationList* pvalue);

/**************************************************************/
/*                                                            */
/*  PolygonList                                               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_PolygonList {
   ASN1UINT n;
   ASN1T_Polygon *elem;
} ASN1T_PolygonList;

class EXTERN ASN1C_PolygonList : public ASN1CType {
public:
   ASN1T_PolygonList& msgData;
   ASN1C_PolygonList (
      ASN1MessageBuffer& msgBuf, ASN1T_PolygonList& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_PolygonList (ASN1CTXT* ctxt_p, ASN1T_PolygonList* pvalue);
EXTERN int asn1PD_PolygonList (ASN1CTXT* ctxt_p, ASN1T_PolygonList* pvalue);

EXTERN void asn1Print_PolygonList (ASN1ConstCharPtr name, ASN1T_PolygonList* pvalue);

/**************************************************************/
/*                                                            */
/*  PathList                                                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_PathList {
   ASN1UINT n;
   ASN1T_Path *elem;
} ASN1T_PathList;

class EXTERN ASN1C_PathList : public ASN1CType {
public:
   ASN1T_PathList& msgData;
   ASN1C_PathList (
      ASN1MessageBuffer& msgBuf, ASN1T_PathList& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_PathList (ASN1CTXT* ctxt_p, ASN1T_PathList* pvalue);
EXTERN int asn1PD_PathList (ASN1CTXT* ctxt_p, ASN1T_PathList* pvalue);

EXTERN void asn1Print_PathList (ASN1ConstCharPtr name, ASN1T_PathList* pvalue);

/**************************************************************/
/*                                                            */
/*  PointList                                                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_PointList {
   ASN1UINT n;
   ASN1T_Point *elem;
} ASN1T_PointList;

class EXTERN ASN1C_PointList : public ASN1CType {
public:
   ASN1T_PointList& msgData;
   ASN1C_PointList (
      ASN1MessageBuffer& msgBuf, ASN1T_PointList& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_PointList (ASN1CTXT* ctxt_p, ASN1T_PointList* pvalue);
EXTERN int asn1PD_PointList (ASN1CTXT* ctxt_p, ASN1T_PointList* pvalue);

EXTERN void asn1Print_PointList (ASN1ConstCharPtr name, ASN1T_PointList* pvalue);

/**************************************************************/
/*                                                            */
/*  OID                                                       */
/*                                                            */
/**************************************************************/

typedef ASN1INT  ASN1T_OID;

class EXTERN ASN1C_OID : public ASN1CType {
public:
   ASN1T_OID& msgData;
   ASN1C_OID (
      ASN1MessageBuffer& msgBuf, ASN1T_OID& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_OID (ASN1CTXT* ctxt_p, ASN1T_OID value);
EXTERN int asn1PD_OID (ASN1CTXT* ctxt_p, ASN1T_OID* pvalue);

EXTERN void asn1Print_OID (ASN1ConstCharPtr name, ASN1T_OID* pvalue);

/**************************************************************/
/*                                                            */
/*  ListOID                                                   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_ListOID {
   ASN1UINT n;
   ASN1T_OID *elem;
} ASN1T_ListOID;

class EXTERN ASN1C_ListOID : public ASN1CType {
public:
   ASN1T_ListOID& msgData;
   ASN1C_ListOID (
      ASN1MessageBuffer& msgBuf, ASN1T_ListOID& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_ListOID (ASN1CTXT* ctxt_p, ASN1T_ListOID* pvalue);
EXTERN int asn1PD_ListOID (ASN1CTXT* ctxt_p, ASN1T_ListOID* pvalue);

EXTERN void asn1Print_ListOID (ASN1ConstCharPtr name, ASN1T_ListOID* pvalue);

/**************************************************************/
/*                                                            */
/*  UnitFire                                                  */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_UnitFire;

class EXTERN ASN1C_UnitFire : public ASN1CType {
public:
   ASN1T_UnitFire& msgData;
   ASN1C_UnitFire (
      ASN1MessageBuffer& msgBuf, ASN1T_UnitFire& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_UnitFire (ASN1CTXT* ctxt_p, ASN1T_UnitFire value);
EXTERN int asn1PD_UnitFire (ASN1CTXT* ctxt_p, ASN1T_UnitFire* pvalue);

EXTERN void asn1Print_UnitFire (ASN1ConstCharPtr name, ASN1T_UnitFire* pvalue);

/**************************************************************/
/*                                                            */
/*  PopulationFire                                            */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_PopulationFire;

class EXTERN ASN1C_PopulationFire : public ASN1CType {
public:
   ASN1T_PopulationFire& msgData;
   ASN1C_PopulationFire (
      ASN1MessageBuffer& msgBuf, ASN1T_PopulationFire& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_PopulationFire (ASN1CTXT* ctxt_p, ASN1T_PopulationFire value);
EXTERN int asn1PD_PopulationFire (ASN1CTXT* ctxt_p, ASN1T_PopulationFire* pvalue);

EXTERN void asn1Print_PopulationFire (ASN1ConstCharPtr name, ASN1T_PopulationFire* pvalue);

/**************************************************************/
/*                                                            */
/*  Unit                                                      */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_Unit;

class EXTERN ASN1C_Unit : public ASN1CType {
public:
   ASN1T_Unit& msgData;
   ASN1C_Unit (
      ASN1MessageBuffer& msgBuf, ASN1T_Unit& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Unit (ASN1CTXT* ctxt_p, ASN1T_Unit value);
EXTERN int asn1PD_Unit (ASN1CTXT* ctxt_p, ASN1T_Unit* pvalue);

EXTERN void asn1Print_Unit (ASN1ConstCharPtr name, ASN1T_Unit* pvalue);

/**************************************************************/
/*                                                            */
/*  Automat                                                   */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_Automat;

class EXTERN ASN1C_Automat : public ASN1CType {
public:
   ASN1T_Automat& msgData;
   ASN1C_Automat (
      ASN1MessageBuffer& msgBuf, ASN1T_Automat& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Automat (ASN1CTXT* ctxt_p, ASN1T_Automat value);
EXTERN int asn1PD_Automat (ASN1CTXT* ctxt_p, ASN1T_Automat* pvalue);

EXTERN void asn1Print_Automat (ASN1ConstCharPtr name, ASN1T_Automat* pvalue);

/**************************************************************/
/*                                                            */
/*  Population                                                */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_Population;

class EXTERN ASN1C_Population : public ASN1CType {
public:
   ASN1T_Population& msgData;
   ASN1C_Population (
      ASN1MessageBuffer& msgBuf, ASN1T_Population& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Population (ASN1CTXT* ctxt_p, ASN1T_Population value);
EXTERN int asn1PD_Population (ASN1CTXT* ctxt_p, ASN1T_Population* pvalue);

EXTERN void asn1Print_Population (ASN1ConstCharPtr name, ASN1T_Population* pvalue);

/**************************************************************/
/*                                                            */
/*  Team                                                      */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_Team;

class EXTERN ASN1C_Team : public ASN1CType {
public:
   ASN1T_Team& msgData;
   ASN1C_Team (
      ASN1MessageBuffer& msgBuf, ASN1T_Team& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Team (ASN1CTXT* ctxt_p, ASN1T_Team value);
EXTERN int asn1PD_Team (ASN1CTXT* ctxt_p, ASN1T_Team* pvalue);

EXTERN void asn1Print_Team (ASN1ConstCharPtr name, ASN1T_Team* pvalue);

/**************************************************************/
/*                                                            */
/*  Formation                                                 */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_Formation;

class EXTERN ASN1C_Formation : public ASN1CType {
public:
   ASN1T_Formation& msgData;
   ASN1C_Formation (
      ASN1MessageBuffer& msgBuf, ASN1T_Formation& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Formation (ASN1CTXT* ctxt_p, ASN1T_Formation value);
EXTERN int asn1PD_Formation (ASN1CTXT* ctxt_p, ASN1T_Formation* pvalue);

EXTERN void asn1Print_Formation (ASN1ConstCharPtr name, ASN1T_Formation* pvalue);

/**************************************************************/
/*                                                            */
/*  UrbanBlock                                                */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_UrbanBlock;

class EXTERN ASN1C_UrbanBlock : public ASN1CType {
public:
   ASN1T_UrbanBlock& msgData;
   ASN1C_UrbanBlock (
      ASN1MessageBuffer& msgBuf, ASN1T_UrbanBlock& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_UrbanBlock (ASN1CTXT* ctxt_p, ASN1T_UrbanBlock value);
EXTERN int asn1PD_UrbanBlock (ASN1CTXT* ctxt_p, ASN1T_UrbanBlock* pvalue);

EXTERN void asn1Print_UrbanBlock (ASN1ConstCharPtr name, ASN1T_UrbanBlock* pvalue);

/**************************************************************/
/*                                                            */
/*  KnowledgeGroup                                            */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_KnowledgeGroup;

class EXTERN ASN1C_KnowledgeGroup : public ASN1CType {
public:
   ASN1T_KnowledgeGroup& msgData;
   ASN1C_KnowledgeGroup (
      ASN1MessageBuffer& msgBuf, ASN1T_KnowledgeGroup& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_KnowledgeGroup (ASN1CTXT* ctxt_p, ASN1T_KnowledgeGroup value);
EXTERN int asn1PD_KnowledgeGroup (ASN1CTXT* ctxt_p, ASN1T_KnowledgeGroup* pvalue);

EXTERN void asn1Print_KnowledgeGroup (ASN1ConstCharPtr name, ASN1T_KnowledgeGroup* pvalue);

/**************************************************************/
/*                                                            */
/*  UnitKnowledge                                             */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_UnitKnowledge;

class EXTERN ASN1C_UnitKnowledge : public ASN1CType {
public:
   ASN1T_UnitKnowledge& msgData;
   ASN1C_UnitKnowledge (
      ASN1MessageBuffer& msgBuf, ASN1T_UnitKnowledge& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_UnitKnowledge (ASN1CTXT* ctxt_p, ASN1T_UnitKnowledge value);
EXTERN int asn1PD_UnitKnowledge (ASN1CTXT* ctxt_p, ASN1T_UnitKnowledge* pvalue);

EXTERN void asn1Print_UnitKnowledge (ASN1ConstCharPtr name, ASN1T_UnitKnowledge* pvalue);

/**************************************************************/
/*                                                            */
/*  ObjectKnowledge                                           */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_ObjectKnowledge;

class EXTERN ASN1C_ObjectKnowledge : public ASN1CType {
public:
   ASN1T_ObjectKnowledge& msgData;
   ASN1C_ObjectKnowledge (
      ASN1MessageBuffer& msgBuf, ASN1T_ObjectKnowledge& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_ObjectKnowledge (ASN1CTXT* ctxt_p, ASN1T_ObjectKnowledge value);
EXTERN int asn1PD_ObjectKnowledge (ASN1CTXT* ctxt_p, ASN1T_ObjectKnowledge* pvalue);

EXTERN void asn1Print_ObjectKnowledge (ASN1ConstCharPtr name, ASN1T_ObjectKnowledge* pvalue);

/**************************************************************/
/*                                                            */
/*  UrbanKnowledge                                            */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_UrbanKnowledge;

class EXTERN ASN1C_UrbanKnowledge : public ASN1CType {
public:
   ASN1T_UrbanKnowledge& msgData;
   ASN1C_UrbanKnowledge (
      ASN1MessageBuffer& msgBuf, ASN1T_UrbanKnowledge& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_UrbanKnowledge (ASN1CTXT* ctxt_p, ASN1T_UrbanKnowledge value);
EXTERN int asn1PD_UrbanKnowledge (ASN1CTXT* ctxt_p, ASN1T_UrbanKnowledge* pvalue);

EXTERN void asn1Print_UrbanKnowledge (ASN1ConstCharPtr name, ASN1T_UrbanKnowledge* pvalue);

/**************************************************************/
/*                                                            */
/*  PopulationKnowledge                                       */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_PopulationKnowledge;

class EXTERN ASN1C_PopulationKnowledge : public ASN1CType {
public:
   ASN1T_PopulationKnowledge& msgData;
   ASN1C_PopulationKnowledge (
      ASN1MessageBuffer& msgBuf, ASN1T_PopulationKnowledge& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_PopulationKnowledge (ASN1CTXT* ctxt_p, ASN1T_PopulationKnowledge value);
EXTERN int asn1PD_PopulationKnowledge (ASN1CTXT* ctxt_p, ASN1T_PopulationKnowledge* pvalue);

EXTERN void asn1Print_PopulationKnowledge (ASN1ConstCharPtr name, ASN1T_PopulationKnowledge* pvalue);

/**************************************************************/
/*                                                            */
/*  AutomatList                                               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_AutomatList {
   ASN1UINT n;
   ASN1T_Automat *elem;
} ASN1T_AutomatList;

class EXTERN ASN1C_AutomatList : public ASN1CType {
public:
   ASN1T_AutomatList& msgData;
   ASN1C_AutomatList (
      ASN1MessageBuffer& msgBuf, ASN1T_AutomatList& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_AutomatList (ASN1CTXT* ctxt_p, ASN1T_AutomatList* pvalue);
EXTERN int asn1PD_AutomatList (ASN1CTXT* ctxt_p, ASN1T_AutomatList* pvalue);

EXTERN void asn1Print_AutomatList (ASN1ConstCharPtr name, ASN1T_AutomatList* pvalue);

/**************************************************************/
/*                                                            */
/*  UnitList                                                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_UnitList {
   ASN1UINT n;
   ASN1T_Unit *elem;
} ASN1T_UnitList;

class EXTERN ASN1C_UnitList : public ASN1CType {
public:
   ASN1T_UnitList& msgData;
   ASN1C_UnitList (
      ASN1MessageBuffer& msgBuf, ASN1T_UnitList& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_UnitList (ASN1CTXT* ctxt_p, ASN1T_UnitList* pvalue);
EXTERN int asn1PD_UnitList (ASN1CTXT* ctxt_p, ASN1T_UnitList* pvalue);

EXTERN void asn1Print_UnitList (ASN1ConstCharPtr name, ASN1T_UnitList* pvalue);

/**************************************************************/
/*                                                            */
/*  UnitKnowledgeList                                         */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_UnitKnowledgeList {
   ASN1UINT n;
   ASN1T_UnitKnowledge *elem;
} ASN1T_UnitKnowledgeList;

class EXTERN ASN1C_UnitKnowledgeList : public ASN1CType {
public:
   ASN1T_UnitKnowledgeList& msgData;
   ASN1C_UnitKnowledgeList (
      ASN1MessageBuffer& msgBuf, ASN1T_UnitKnowledgeList& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_UnitKnowledgeList (ASN1CTXT* ctxt_p, ASN1T_UnitKnowledgeList* pvalue);
EXTERN int asn1PD_UnitKnowledgeList (ASN1CTXT* ctxt_p, ASN1T_UnitKnowledgeList* pvalue);

EXTERN void asn1Print_UnitKnowledgeList (ASN1ConstCharPtr name, ASN1T_UnitKnowledgeList* pvalue);

/**************************************************************/
/*                                                            */
/*  ObjectKnowledgeList                                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_ObjectKnowledgeList {
   ASN1UINT n;
   ASN1T_ObjectKnowledge *elem;
} ASN1T_ObjectKnowledgeList;

class EXTERN ASN1C_ObjectKnowledgeList : public ASN1CType {
public:
   ASN1T_ObjectKnowledgeList& msgData;
   ASN1C_ObjectKnowledgeList (
      ASN1MessageBuffer& msgBuf, ASN1T_ObjectKnowledgeList& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_ObjectKnowledgeList (ASN1CTXT* ctxt_p, ASN1T_ObjectKnowledgeList* pvalue);
EXTERN int asn1PD_ObjectKnowledgeList (ASN1CTXT* ctxt_p, ASN1T_ObjectKnowledgeList* pvalue);

EXTERN void asn1Print_ObjectKnowledgeList (ASN1ConstCharPtr name, ASN1T_ObjectKnowledgeList* pvalue);

/**************************************************************/
/*                                                            */
/*  TeamList                                                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_TeamList {
   ASN1UINT n;
   ASN1T_Team *elem;
} ASN1T_TeamList;

class EXTERN ASN1C_TeamList : public ASN1CType {
public:
   ASN1T_TeamList& msgData;
   ASN1C_TeamList (
      ASN1MessageBuffer& msgBuf, ASN1T_TeamList& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_TeamList (ASN1CTXT* ctxt_p, ASN1T_TeamList* pvalue);
EXTERN int asn1PD_TeamList (ASN1CTXT* ctxt_p, ASN1T_TeamList* pvalue);

EXTERN void asn1Print_TeamList (ASN1ConstCharPtr name, ASN1T_TeamList* pvalue);

/**************************************************************/
/*                                                            */
/*  PopulationList                                            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_PopulationList {
   ASN1UINT n;
   ASN1T_Population *elem;
} ASN1T_PopulationList;

class EXTERN ASN1C_PopulationList : public ASN1CType {
public:
   ASN1T_PopulationList& msgData;
   ASN1C_PopulationList (
      ASN1MessageBuffer& msgBuf, ASN1T_PopulationList& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_PopulationList (ASN1CTXT* ctxt_p, ASN1T_PopulationList* pvalue);
EXTERN int asn1PD_PopulationList (ASN1CTXT* ctxt_p, ASN1T_PopulationList* pvalue);

EXTERN void asn1Print_PopulationList (ASN1ConstCharPtr name, ASN1T_PopulationList* pvalue);

/**************************************************************/
/*                                                            */
/*  FormationList                                             */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_FormationList {
   ASN1UINT n;
   ASN1T_Formation *elem;
} ASN1T_FormationList;

class EXTERN ASN1C_FormationList : public ASN1CType {
public:
   ASN1T_FormationList& msgData;
   ASN1C_FormationList (
      ASN1MessageBuffer& msgBuf, ASN1T_FormationList& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_FormationList (ASN1CTXT* ctxt_p, ASN1T_FormationList* pvalue);
EXTERN int asn1PD_FormationList (ASN1CTXT* ctxt_p, ASN1T_FormationList* pvalue);

EXTERN void asn1Print_FormationList (ASN1ConstCharPtr name, ASN1T_FormationList* pvalue);

/**************************************************************/
/*                                                            */
/*  EquipmentType                                             */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_EquipmentType;

class EXTERN ASN1C_EquipmentType : public ASN1CType {
public:
   ASN1T_EquipmentType& msgData;
   ASN1C_EquipmentType (
      ASN1MessageBuffer& msgBuf, ASN1T_EquipmentType& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EquipmentType (ASN1CTXT* ctxt_p, ASN1T_EquipmentType value);
EXTERN int asn1PD_EquipmentType (ASN1CTXT* ctxt_p, ASN1T_EquipmentType* pvalue);

EXTERN void asn1Print_EquipmentType (ASN1ConstCharPtr name, ASN1T_EquipmentType* pvalue);

/**************************************************************/
/*                                                            */
/*  DotationType                                              */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_DotationType;

class EXTERN ASN1C_DotationType : public ASN1CType {
public:
   ASN1T_DotationType& msgData;
   ASN1C_DotationType (
      ASN1MessageBuffer& msgBuf, ASN1T_DotationType& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_DotationType (ASN1CTXT* ctxt_p, ASN1T_DotationType value);
EXTERN int asn1PD_DotationType (ASN1CTXT* ctxt_p, ASN1T_DotationType* pvalue);

EXTERN void asn1Print_DotationType (ASN1ConstCharPtr name, ASN1T_DotationType* pvalue);

/**************************************************************/
/*                                                            */
/*  BreakdownType                                             */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_BreakdownType;

class EXTERN ASN1C_BreakdownType : public ASN1CType {
public:
   ASN1T_BreakdownType& msgData;
   ASN1C_BreakdownType (
      ASN1MessageBuffer& msgBuf, ASN1T_BreakdownType& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_BreakdownType (ASN1CTXT* ctxt_p, ASN1T_BreakdownType value);
EXTERN int asn1PD_BreakdownType (ASN1CTXT* ctxt_p, ASN1T_BreakdownType* pvalue);

EXTERN void asn1Print_BreakdownType (ASN1ConstCharPtr name, ASN1T_BreakdownType* pvalue);

/**************************************************************/
/*                                                            */
/*  UnitType                                                  */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_UnitType;

class EXTERN ASN1C_UnitType : public ASN1CType {
public:
   ASN1T_UnitType& msgData;
   ASN1C_UnitType (
      ASN1MessageBuffer& msgBuf, ASN1T_UnitType& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_UnitType (ASN1CTXT* ctxt_p, ASN1T_UnitType value);
EXTERN int asn1PD_UnitType (ASN1CTXT* ctxt_p, ASN1T_UnitType* pvalue);

EXTERN void asn1Print_UnitType (ASN1ConstCharPtr name, ASN1T_UnitType* pvalue);

/**************************************************************/
/*                                                            */
/*  AutomatType                                               */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_AutomatType;

class EXTERN ASN1C_AutomatType : public ASN1CType {
public:
   ASN1T_AutomatType& msgData;
   ASN1C_AutomatType (
      ASN1MessageBuffer& msgBuf, ASN1T_AutomatType& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_AutomatType (ASN1CTXT* ctxt_p, ASN1T_AutomatType value);
EXTERN int asn1PD_AutomatType (ASN1CTXT* ctxt_p, ASN1T_AutomatType* pvalue);

EXTERN void asn1Print_AutomatType (ASN1ConstCharPtr name, ASN1T_AutomatType* pvalue);

/**************************************************************/
/*                                                            */
/*  PopulationType                                            */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_PopulationType;

class EXTERN ASN1C_PopulationType : public ASN1CType {
public:
   ASN1T_PopulationType& msgData;
   ASN1C_PopulationType (
      ASN1MessageBuffer& msgBuf, ASN1T_PopulationType& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_PopulationType (ASN1CTXT* ctxt_p, ASN1T_PopulationType value);
EXTERN int asn1PD_PopulationType (ASN1CTXT* ctxt_p, ASN1T_PopulationType* pvalue);

EXTERN void asn1Print_PopulationType (ASN1ConstCharPtr name, ASN1T_PopulationType* pvalue);

/**************************************************************/
/*                                                            */
/*  KnowledgeGroupType                                        */
/*                                                            */
/**************************************************************/

typedef ASN1VisibleString ASN1T_KnowledgeGroupType;

class EXTERN ASN1C_KnowledgeGroupType : public ASN1CType {
public:
   ASN1T_KnowledgeGroupType& msgData;
   ASN1C_KnowledgeGroupType (
      ASN1MessageBuffer& msgBuf, ASN1T_KnowledgeGroupType& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_KnowledgeGroupType (ASN1CTXT* ctxt_p, ASN1T_KnowledgeGroupType value);
EXTERN int asn1PD_KnowledgeGroupType (ASN1CTXT* ctxt_p, ASN1T_KnowledgeGroupType* pvalue);

EXTERN void asn1Print_KnowledgeGroupType (ASN1ConstCharPtr name, ASN1T_KnowledgeGroupType* pvalue);

/**************************************************************/
/*                                                            */
/*  Percentage                                                */
/*                                                            */
/**************************************************************/

typedef ASN1INT  ASN1T_Percentage;

class EXTERN ASN1C_Percentage : public ASN1CType {
public:
   ASN1T_Percentage& msgData;
   ASN1C_Percentage (
      ASN1MessageBuffer& msgBuf, ASN1T_Percentage& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Percentage (ASN1CTXT* ctxt_p, ASN1T_Percentage value);
EXTERN int asn1PD_Percentage (ASN1CTXT* ctxt_p, ASN1T_Percentage* pvalue);

EXTERN void asn1Print_Percentage (ASN1ConstCharPtr name, ASN1T_Percentage* pvalue);

/**************************************************************/
/*                                                            */
/*  FreePercentage                                            */
/*                                                            */
/**************************************************************/

typedef ASN1INT  ASN1T_FreePercentage;

class EXTERN ASN1C_FreePercentage : public ASN1CType {
public:
   ASN1T_FreePercentage& msgData;
   ASN1C_FreePercentage (
      ASN1MessageBuffer& msgBuf, ASN1T_FreePercentage& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_FreePercentage (ASN1CTXT* ctxt_p, ASN1T_FreePercentage value);
EXTERN int asn1PD_FreePercentage (ASN1CTXT* ctxt_p, ASN1T_FreePercentage* pvalue);

EXTERN void asn1Print_FreePercentage (ASN1ConstCharPtr name, ASN1T_FreePercentage* pvalue);

/**************************************************************/
/*                                                            */
/*  Height                                                    */
/*                                                            */
/**************************************************************/

typedef ASN1INT  ASN1T_Height;

class EXTERN ASN1C_Height : public ASN1CType {
public:
   ASN1T_Height& msgData;
   ASN1C_Height (
      ASN1MessageBuffer& msgBuf, ASN1T_Height& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Height (ASN1CTXT* ctxt_p, ASN1T_Height value);
EXTERN int asn1PD_Height (ASN1CTXT* ctxt_p, ASN1T_Height* pvalue);

EXTERN void asn1Print_Height (ASN1ConstCharPtr name, ASN1T_Height* pvalue);

/**************************************************************/
/*                                                            */
/*  Elevation                                                 */
/*                                                            */
/**************************************************************/

typedef ASN1INT  ASN1T_Elevation;

class EXTERN ASN1C_Elevation : public ASN1CType {
public:
   ASN1T_Elevation& msgData;
   ASN1C_Elevation (
      ASN1MessageBuffer& msgBuf, ASN1T_Elevation& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Elevation (ASN1CTXT* ctxt_p, ASN1T_Elevation value);
EXTERN int asn1PD_Elevation (ASN1CTXT* ctxt_p, ASN1T_Elevation* pvalue);

EXTERN void asn1Print_Elevation (ASN1ConstCharPtr name, ASN1T_Elevation* pvalue);

/**************************************************************/
/*                                                            */
/*  Speed                                                     */
/*                                                            */
/**************************************************************/

typedef ASN1INT  ASN1T_Speed;

class EXTERN ASN1C_Speed : public ASN1CType {
public:
   ASN1T_Speed& msgData;
   ASN1C_Speed (
      ASN1MessageBuffer& msgBuf, ASN1T_Speed& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Speed (ASN1CTXT* ctxt_p, ASN1T_Speed value);
EXTERN int asn1PD_Speed (ASN1CTXT* ctxt_p, ASN1T_Speed* pvalue);

EXTERN void asn1Print_Speed (ASN1ConstCharPtr name, ASN1T_Speed* pvalue);

/**************************************************************/
/*                                                            */
/*  Heading                                                   */
/*                                                            */
/**************************************************************/

typedef ASN1INT  ASN1T_Heading;

class EXTERN ASN1C_Heading : public ASN1CType {
public:
   ASN1T_Heading& msgData;
   ASN1C_Heading (
      ASN1MessageBuffer& msgBuf, ASN1T_Heading& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Heading (ASN1CTXT* ctxt_p, ASN1T_Heading value);
EXTERN int asn1PD_Heading (ASN1CTXT* ctxt_p, ASN1T_Heading* pvalue);

EXTERN void asn1Print_Heading (ASN1ConstCharPtr name, ASN1T_Heading* pvalue);

/**************************************************************/
/*                                                            */
/*  DateTime                                                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_DateTime {
   ASN1UINT numocts;
   ASN1OCTET data[15];
   // ctors
   ASN1T_DateTime () : numocts(0) {}
   ASN1T_DateTime (ASN1UINT _numocts, const ASN1OCTET* _data) :
      numocts(_numocts) {
      memcpy (data, _data, numocts);
   }
   ASN1T_DateTime (const char* cstring) {
      if (strlen(cstring) > 0) {
         numocts = MIN ((strlen(cstring)+1), sizeof(data));
         strncpy ((char*)data, cstring, sizeof(data));
      }
      else numocts = 0;
   }
   // assignment operators
   ASN1T_DateTime& operator= (const char* cstring) {
      if (strlen(cstring) > 0) {
         numocts = MIN ((strlen(cstring)+1), sizeof(data));
         strncpy ((char*)data, cstring, sizeof(data));
      }
      else numocts = 0;
      return *this;
   }
} ASN1T_DateTime;

class EXTERN ASN1C_DateTime : public ASN1CType {
public:
   ASN1T_DateTime& msgData;
   ASN1C_DateTime (
      ASN1MessageBuffer& msgBuf, ASN1T_DateTime& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_DateTime (ASN1CTXT* ctxt_p, ASN1T_DateTime value);
EXTERN int asn1PD_DateTime (ASN1CTXT* ctxt_p, ASN1T_DateTime* pvalue);

EXTERN void asn1Print_DateTime (ASN1ConstCharPtr name, ASN1T_DateTime* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumDotationFamily                                        */
/*                                                            */
/**************************************************************/

struct EXTERN EnumDotationFamily {
   enum Root {
      munition = 0,
      carburant = 1,
      explosif = 2,
      mine = 3,
      barbele = 4,
      piece = 5,
      ration = 6
   } ;
} ;

typedef EnumDotationFamily::Root ASN1T_EnumDotationFamily;

class EXTERN ASN1C_EnumDotationFamily : public ASN1CType {
public:
   ASN1T_EnumDotationFamily& msgData;
   ASN1C_EnumDotationFamily (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumDotationFamily& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumDotationFamily (ASN1CTXT* ctxt_p, ASN1T_EnumDotationFamily value);
EXTERN int asn1PD_EnumDotationFamily (ASN1CTXT* ctxt_p, ASN1T_EnumDotationFamily* pvalue);

EXTERN void asn1Print_EnumDotationFamily (ASN1ConstCharPtr name, ASN1T_EnumDotationFamily* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumAmmunitionFamily                                      */
/*                                                            */
/**************************************************************/

struct EXTERN EnumAmmunitionFamily {
   enum Root {
      obus = 0,
      missile_air = 1,
      missile_sol = 2,
      mitraille = 3
   } ;
} ;

typedef EnumAmmunitionFamily::Root ASN1T_EnumAmmunitionFamily;

class EXTERN ASN1C_EnumAmmunitionFamily : public ASN1CType {
public:
   ASN1T_EnumAmmunitionFamily& msgData;
   ASN1C_EnumAmmunitionFamily (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumAmmunitionFamily& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumAmmunitionFamily (ASN1CTXT* ctxt_p, ASN1T_EnumAmmunitionFamily value);
EXTERN int asn1PD_EnumAmmunitionFamily (ASN1CTXT* ctxt_p, ASN1T_EnumAmmunitionFamily* pvalue);

EXTERN void asn1Print_EnumAmmunitionFamily (ASN1ConstCharPtr name, ASN1T_EnumAmmunitionFamily* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumUnitIdentificationLevel                               */
/*                                                            */
/**************************************************************/

struct EXTERN EnumUnitIdentificationLevel {
   enum Root {
      identifiee = 0,
      reconnue = 1,
      detectee = 2,
      signale = 3
   } ;
} ;

typedef EnumUnitIdentificationLevel::Root ASN1T_EnumUnitIdentificationLevel;

class EXTERN ASN1C_EnumUnitIdentificationLevel : public ASN1CType {
public:
   ASN1T_EnumUnitIdentificationLevel& msgData;
   ASN1C_EnumUnitIdentificationLevel (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumUnitIdentificationLevel& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumUnitIdentificationLevel (ASN1CTXT* ctxt_p, ASN1T_EnumUnitIdentificationLevel value);
EXTERN int asn1PD_EnumUnitIdentificationLevel (ASN1CTXT* ctxt_p, ASN1T_EnumUnitIdentificationLevel* pvalue);

EXTERN void asn1Print_EnumUnitIdentificationLevel (ASN1ConstCharPtr name, ASN1T_EnumUnitIdentificationLevel* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumUnitVisibility                                        */
/*                                                            */
/**************************************************************/

struct EXTERN EnumUnitVisibility {
   enum Root {
      invisible = 0,
      detected = 1,
      recognized = 2,
      identified = 3,
      recorded = 4
   } ;
} ;

typedef EnumUnitVisibility::Root ASN1T_EnumUnitVisibility;

class EXTERN ASN1C_EnumUnitVisibility : public ASN1CType {
public:
   ASN1T_EnumUnitVisibility& msgData;
   ASN1C_EnumUnitVisibility (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumUnitVisibility& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumUnitVisibility (ASN1CTXT* ctxt_p, ASN1T_EnumUnitVisibility value);
EXTERN int asn1PD_EnumUnitVisibility (ASN1CTXT* ctxt_p, ASN1T_EnumUnitVisibility* pvalue);

EXTERN void asn1Print_EnumUnitVisibility (ASN1ConstCharPtr name, ASN1T_EnumUnitVisibility* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumNatureLevel                                           */
/*                                                            */
/**************************************************************/

struct EXTERN EnumNatureLevel {
   enum Root {
      none = 0,
      o = 1,
      oo = 2,
      ooo = 3,
      i = 4,
      ii = 5,
      iii = 6,
      x = 7,
      xx = 8,
      xxx = 9,
      xxxx = 10,
      xxxxx = 11
   } ;
} ;

typedef EnumNatureLevel::Root ASN1T_EnumNatureLevel;

class EXTERN ASN1C_EnumNatureLevel : public ASN1CType {
public:
   ASN1T_EnumNatureLevel& msgData;
   ASN1C_EnumNatureLevel (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumNatureLevel& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumNatureLevel (ASN1CTXT* ctxt_p, ASN1T_EnumNatureLevel value);
EXTERN int asn1PD_EnumNatureLevel (ASN1CTXT* ctxt_p, ASN1T_EnumNatureLevel* pvalue);

EXTERN void asn1Print_EnumNatureLevel (ASN1ConstCharPtr name, ASN1T_EnumNatureLevel* pvalue);

/**************************************************************/
/*                                                            */
/*  AtlasNature                                               */
/*                                                            */
/**************************************************************/

/* Named bit constants */

#define BitMblinde                          0x80
#define BytXblinde                          0
#define BitMass                             0x40
#define BytXass                             0
#define BitMpc                              0x20
#define BytXpc                              0
#define BitMlog                             0x10
#define BytXlog                             0
#define BitMmortier                         0x08
#define BytXmortier                         0
#define BitMlance_roquette                  0x04
#define BytXlance_roquette                  0
#define BitMvehicule                        0x02
#define BytXvehicule                        0
#define BitMpersonnel_a_pied                0x01
#define BytXpersonnel_a_pied                0
#define BitMhelicoptere                     0x80
#define BytXhelicoptere                     1
#define BitMindefini                        0x40
#define BytXindefini                        1
#define BitMasa                             0x20
#define BytXasa                             1
#define BitMnone                            0x10
#define BytXnone                            1

typedef struct EXTERN ASN1T_AtlasNature {
   ASN1UINT  numbits;
   ASN1OCTET data[2];
   // ctors
   ASN1T_AtlasNature () : numbits(0) {}
   ASN1T_AtlasNature (ASN1UINT _numbits, const ASN1OCTET* _data) :
      numbits(_numbits) {
      memcpy (data, _data, sizeof(data));
   }
} ASN1T_AtlasNature;

class EXTERN ASN1C_AtlasNature : public ASN1CBitStr {
public:
   // named bits
   enum { blinde = 0, ass = 1, pc = 2, log = 3, mortier = 4, lance_roquette = 5, vehicule = 6, personnel_a_pied = 7, helicoptere = 8, indefini = 9, asa = 10, none = 11 };

   ASN1T_AtlasNature& msgData;
   ASN1C_AtlasNature (
      ASN1MessageBuffer& msgBuf, ASN1T_AtlasNature& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_AtlasNature (ASN1CTXT* ctxt_p, ASN1T_AtlasNature value);
EXTERN int asn1PD_AtlasNature (ASN1CTXT* ctxt_p, ASN1T_AtlasNature* pvalue);

EXTERN void asn1Print_AtlasNature (ASN1ConstCharPtr name, ASN1T_AtlasNature* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumHumanWound                                            */
/*                                                            */
/**************************************************************/

struct EXTERN EnumHumanWound {
   enum Root {
      non_blesse = 0,
      mort = 1,
      blesse_urgence_1 = 2,
      blesse_urgence_2 = 3,
      blesse_urgence_3 = 4,
      blesse_urgence_extreme = 5
   } ;
} ;

typedef EnumHumanWound::Root ASN1T_EnumHumanWound;

class EXTERN ASN1C_EnumHumanWound : public ASN1CType {
public:
   ASN1T_EnumHumanWound& msgData;
   ASN1C_EnumHumanWound (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumHumanWound& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumHumanWound (ASN1CTXT* ctxt_p, ASN1T_EnumHumanWound value);
EXTERN int asn1PD_EnumHumanWound (ASN1CTXT* ctxt_p, ASN1T_EnumHumanWound* pvalue);

EXTERN void asn1Print_EnumHumanWound (ASN1ConstCharPtr name, ASN1T_EnumHumanWound* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumHumanRank                                             */
/*                                                            */
/**************************************************************/

struct EXTERN EnumHumanRank {
   enum Root {
      officier = 0,
      sous_officer = 1,
      mdr = 2
   } ;
} ;

typedef EnumHumanRank::Root ASN1T_EnumHumanRank;

class EXTERN ASN1C_EnumHumanRank : public ASN1CType {
public:
   ASN1T_EnumHumanRank& msgData;
   ASN1C_EnumHumanRank (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumHumanRank& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumHumanRank (ASN1CTXT* ctxt_p, ASN1T_EnumHumanRank value);
EXTERN int asn1PD_EnumHumanRank (ASN1CTXT* ctxt_p, ASN1T_EnumHumanRank* pvalue);

EXTERN void asn1Print_EnumHumanRank (ASN1ConstCharPtr name, ASN1T_EnumHumanRank* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumChangeHierarchyErrorCode                              */
/*                                                            */
/**************************************************************/

struct EXTERN EnumChangeHierarchyErrorCode {
   enum Root {
      no_error = 0,
      error_invalid_pion = 1,
      error_invalid_automate = 2,
      error_invalid_formation = 3,
      error_invalid_automate_tc2 = 4,
      error_invalid_automate_maintenance = 5,
      error_invalid_automate_sante = 6,
      error_invalid_automate_ravitaillement = 7,
      error_unit_surrendered = 8,
      error_invalid_camp = 9,
      error_invalid_groupe_connaissance = 10,
      error_camps_incompatibles = 11
   } ;
} ;

typedef EnumChangeHierarchyErrorCode::Root ASN1T_EnumChangeHierarchyErrorCode;

class EXTERN ASN1C_EnumChangeHierarchyErrorCode : public ASN1CType {
public:
   ASN1T_EnumChangeHierarchyErrorCode& msgData;
   ASN1C_EnumChangeHierarchyErrorCode (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumChangeHierarchyErrorCode& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumChangeHierarchyErrorCode (ASN1CTXT* ctxt_p, ASN1T_EnumChangeHierarchyErrorCode value);
EXTERN int asn1PD_EnumChangeHierarchyErrorCode (ASN1CTXT* ctxt_p, ASN1T_EnumChangeHierarchyErrorCode* pvalue);

EXTERN void asn1Print_EnumChangeHierarchyErrorCode (ASN1ConstCharPtr name, ASN1T_EnumChangeHierarchyErrorCode* pvalue);

#endif
