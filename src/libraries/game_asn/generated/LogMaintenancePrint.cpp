/* This file was generated by ASN1C V5.31 on 18-Jun-2007 */

#include "LogMaintenance.h"

void asn1Print_LogMaintenanceIncludes (ASN1ConstCharPtr name, ASN1T_LogMaintenanceIncludes* pvalue)
{
   char namebuf[512];

   sprintf (namebuf, "%s.baseExports", name);

}

void ASN1C_LogMaintenanceIncludes::Print (ASN1ConstCharPtr name)

{
   asn1Print_LogMaintenanceIncludes (name, &msgData);
}

void asn1Print_LogMaintenanceExports (ASN1ConstCharPtr name)
{
}

void ASN1C_LogMaintenanceExports::Print (ASN1ConstCharPtr name)

{
   asn1Print_LogMaintenanceExports (name);
}

void asn1Print_EnumLogMaintenanceRegimeTravail (ASN1ConstCharPtr name, ASN1T_EnumLogMaintenanceRegimeTravail* pvalue)
{
   printf ("%s = ", name);
   switch (*pvalue) {
      case 0: printf ("regime_1\n"); break;
      case 1: printf ("regime_2\n"); break;
      case 2: printf ("regime_3\n"); break;
      case 3: printf ("regime_4\n"); break;
      default: printf ("???\n");
   }
}

void ASN1C_EnumLogMaintenanceRegimeTravail::Print (ASN1ConstCharPtr name)

{
   asn1Print_EnumLogMaintenanceRegimeTravail (name, &msgData);
}

void asn1Print_MsgLogMaintenanceHandlingCreation (ASN1ConstCharPtr name, ASN1T_MsgLogMaintenanceHandlingCreation* pvalue)
{
   char namebuf[512];

   sprintf (namebuf, "%s.oid_consigne", name);
   asn1Print_OID (namebuf, &pvalue->oid_consigne);

   sprintf (namebuf, "%s.oid_pion", name);
   asn1Print_Unit (namebuf, &pvalue->oid_pion);

   sprintf (namebuf, "%s.tick_creation", name);
   rtPrintInteger (namebuf, pvalue->tick_creation);

   sprintf (namebuf, "%s.type_equipement", name);
   asn1Print_EquipmentType (namebuf, &pvalue->type_equipement);

   sprintf (namebuf, "%s.type_panne", name);
   asn1Print_BreakdownType (namebuf, &pvalue->type_panne);

}

void ASN1C_MsgLogMaintenanceHandlingCreation::Print (ASN1ConstCharPtr name)

{
   asn1Print_MsgLogMaintenanceHandlingCreation (name, &msgData);
}

void asn1Print_EnumLogMaintenanceHandlingStatus (ASN1ConstCharPtr name, ASN1T_EnumLogMaintenanceHandlingStatus* pvalue)
{
   printf ("%s = ", name);
   switch (*pvalue) {
      case 0: printf ("deplacement_vers_chaine\n"); break;
      case 1: printf ("attente_disponibilite_remorqueur\n"); break;
      case 2: printf ("remorqueur_deplacement_aller\n"); break;
      case 3: printf ("remorqueur_chargement\n"); break;
      case 4: printf ("remorqueur_deplacement_retour\n"); break;
      case 5: printf ("remorqueur_dechargement\n"); break;
      case 6: printf ("diagnostique\n"); break;
      case 7: printf ("attente_prise_en_charge_par_niveau_superieur\n"); break;
      case 8: printf ("attente_disponibilite_pieces\n"); break;
      case 9: printf ("attente_disponibilite_reparateur\n"); break;
      case 10: printf ("reparation\n"); break;
      case 11: printf ("retour_pion\n"); break;
      case 12: printf ("termine\n"); break;
      default: printf ("???\n");
   }
}

void ASN1C_EnumLogMaintenanceHandlingStatus::Print (ASN1ConstCharPtr name)

{
   asn1Print_EnumLogMaintenanceHandlingStatus (name, &msgData);
}

void asn1Print_MsgLogMaintenanceHandlingUpdate (ASN1ConstCharPtr name, ASN1T_MsgLogMaintenanceHandlingUpdate* pvalue)
{
   char namebuf[512];

   printf ("%s.m.etatPresent = %d\n", name, (int)pvalue->m.etatPresent);
   printf ("%s.m.diagnostique_effectuePresent = %d\n", name, (int)pvalue->m.diagnostique_effectuePresent);
   sprintf (namebuf, "%s.oid_consigne", name);
   asn1Print_OID (namebuf, &pvalue->oid_consigne);

   sprintf (namebuf, "%s.oid_pion", name);
   asn1Print_Unit (namebuf, &pvalue->oid_pion);

   sprintf (namebuf, "%s.oid_pion_log_traitant", name);
   asn1Print_Unit (namebuf, &pvalue->oid_pion_log_traitant);

   if (pvalue->m.etatPresent) {
      sprintf (namebuf, "%s.etat", name);
      asn1Print_EnumLogMaintenanceHandlingStatus (namebuf, &pvalue->etat);
   }

   if (pvalue->m.diagnostique_effectuePresent) {
      sprintf (namebuf, "%s.diagnostique_effectue", name);
      rtPrintBoolean (namebuf, pvalue->diagnostique_effectue);
   }

}

void ASN1C_MsgLogMaintenanceHandlingUpdate::Print (ASN1ConstCharPtr name)

{
   asn1Print_MsgLogMaintenanceHandlingUpdate (name, &msgData);
}

void asn1Print_MsgLogMaintenanceHandlingDestruction (ASN1ConstCharPtr name, ASN1T_MsgLogMaintenanceHandlingDestruction* pvalue)
{
   char namebuf[512];

   sprintf (namebuf, "%s.oid_consigne", name);
   asn1Print_OID (namebuf, &pvalue->oid_consigne);

   sprintf (namebuf, "%s.oid_pion", name);
   asn1Print_Unit (namebuf, &pvalue->oid_pion);

}

void ASN1C_MsgLogMaintenanceHandlingDestruction::Print (ASN1ConstCharPtr name)

{
   asn1Print_MsgLogMaintenanceHandlingDestruction (name, &msgData);
}

void asn1Print_LogMaintenanceEquipmentAvailability (ASN1ConstCharPtr name, ASN1T_LogMaintenanceEquipmentAvailability* pvalue)
{
   char namebuf[512];

   printf ("%s.m.nbr_au_reposPresent = %d\n", name, (int)pvalue->m.nbr_au_reposPresent);
   sprintf (namebuf, "%s.type_equipement", name);
   asn1Print_EquipmentType (namebuf, &pvalue->type_equipement);

   sprintf (namebuf, "%s.nbr_total", name);
   rtPrintInteger (namebuf, pvalue->nbr_total);

   sprintf (namebuf, "%s.nbr_disponibles", name);
   rtPrintInteger (namebuf, pvalue->nbr_disponibles);

   sprintf (namebuf, "%s.nbr_au_travail", name);
   rtPrintInteger (namebuf, pvalue->nbr_au_travail);

   sprintf (namebuf, "%s.nbr_pretes", name);
   rtPrintInteger (namebuf, pvalue->nbr_pretes);

   if (pvalue->m.nbr_au_reposPresent) {
      sprintf (namebuf, "%s.nbr_au_repos", name);
      rtPrintInteger (namebuf, pvalue->nbr_au_repos);
   }

}

void ASN1C_LogMaintenanceEquipmentAvailability::Print (ASN1ConstCharPtr name)

{
   asn1Print_LogMaintenanceEquipmentAvailability (name, &msgData);
}

void asn1Print_LogMaintenancePriorities (ASN1ConstCharPtr name, ASN1T_LogMaintenancePriorities* pvalue)
{
   char namebuf[512];

   printf ("%s.n = %d\n", name, pvalue->n);
   {
   ASN1UINT xx1;
   for (xx1 = 0; xx1 < pvalue->n; xx1++) {
      sprintf (namebuf, "%s.elem[%d]", name, xx1);
      asn1Print_EquipmentType (namebuf, &pvalue->elem[xx1]);
   }
   }

}

void ASN1C_LogMaintenancePriorities::Print (ASN1ConstCharPtr name)

{
   asn1Print_LogMaintenancePriorities (name, &msgData);
}

void asn1Print__SeqOfLogMaintenanceEquipmentAvailability (ASN1ConstCharPtr name, ASN1T__SeqOfLogMaintenanceEquipmentAvailability* pvalue)
{
   char namebuf[512];

   printf ("%s.n = %d\n", name, pvalue->n);
   {
   ASN1UINT xx1;
   for (xx1 = 0; xx1 < pvalue->n; xx1++) {
      sprintf (namebuf, "%s.elem[%d]", name, xx1);
      asn1Print_LogMaintenanceEquipmentAvailability (namebuf, &pvalue->elem[xx1]);
   }
   }

}

void ASN1C__SeqOfLogMaintenanceEquipmentAvailability::Print (ASN1ConstCharPtr name)

{
   asn1Print__SeqOfLogMaintenanceEquipmentAvailability (name, &msgData);
}

void asn1Print_MsgLogMaintenanceState (ASN1ConstCharPtr name, ASN1T_MsgLogMaintenanceState* pvalue)
{
   char namebuf[512];

   printf ("%s.m.chaine_activeePresent = %d\n", name, (int)pvalue->m.chaine_activeePresent);
   printf ("%s.m.regime_travailPresent = %d\n", name, (int)pvalue->m.regime_travailPresent);
   printf ("%s.m.prioritesPresent = %d\n", name, (int)pvalue->m.prioritesPresent);
   printf ("%s.m.priorites_tactiquesPresent = %d\n", name, (int)pvalue->m.priorites_tactiquesPresent);
   printf ("%s.m.disponibilites_remorqueursPresent = %d\n", name, (int)pvalue->m.disponibilites_remorqueursPresent);
   printf ("%s.m.disponibilites_reparateursPresent = %d\n", name, (int)pvalue->m.disponibilites_reparateursPresent);
   sprintf (namebuf, "%s.oid_pion", name);
   asn1Print_Unit (namebuf, &pvalue->oid_pion);

   if (pvalue->m.chaine_activeePresent) {
      sprintf (namebuf, "%s.chaine_activee", name);
      rtPrintBoolean (namebuf, pvalue->chaine_activee);
   }

   if (pvalue->m.regime_travailPresent) {
      sprintf (namebuf, "%s.regime_travail", name);
      asn1Print_EnumLogMaintenanceRegimeTravail (namebuf, &pvalue->regime_travail);
   }

   if (pvalue->m.prioritesPresent) {
      sprintf (namebuf, "%s.priorites", name);
      asn1Print_LogMaintenancePriorities (namebuf, &pvalue->priorites);
   }

   if (pvalue->m.priorites_tactiquesPresent) {
      sprintf (namebuf, "%s.priorites_tactiques", name);
      asn1Print_AutomatList (namebuf, &pvalue->priorites_tactiques);
   }

   if (pvalue->m.disponibilites_remorqueursPresent) {
      sprintf (namebuf, "%s.disponibilites_remorqueurs", name);
      asn1Print__SeqOfLogMaintenanceEquipmentAvailability (namebuf, &pvalue->disponibilites_remorqueurs);
   }

   if (pvalue->m.disponibilites_reparateursPresent) {
      sprintf (namebuf, "%s.disponibilites_reparateurs", name);
      asn1Print__SeqOfLogMaintenanceEquipmentAvailability (namebuf, &pvalue->disponibilites_reparateurs);
   }

}

void ASN1C_MsgLogMaintenanceState::Print (ASN1ConstCharPtr name)

{
   asn1Print_MsgLogMaintenanceState (name, &msgData);
}

