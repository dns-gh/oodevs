/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 5.31, Date: 03-Sep-2007.
 */
#include "Folk.h"

/**************************************************************/
/*                                                            */
/*  FolkIncludes                                              */
/*                                                            */
/**************************************************************/

ASN1C_FolkIncludes::ASN1C_FolkIncludes (
   ASN1MessageBuffer& msgBuf, ASN1T_FolkIncludes& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_FolkIncludes (ASN1CTXT* ctxt_p, ASN1T_FolkIncludes* pvalue)
{
   int stat = ASN_OK;

   /* encode baseExports */

   stat = asn1PE_BaseExports (ctxt_p);
   if (stat != ASN_OK) return stat;

   return (stat);
}

int ASN1C_FolkIncludes::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_FolkIncludes (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_FolkIncludes (ASN1CTXT* ctxt_p, ASN1T_FolkIncludes* pvalue)
{
   int stat = ASN_OK;

   /* decode baseExports */

   stat = asn1PD_BaseExports (ctxt_p);
   if (stat != ASN_OK) return stat;


   return (stat);
}

int ASN1C_FolkIncludes::Decode ()
{
   return asn1PD_FolkIncludes (mpContext->GetPtr(), &msgData);
}

/**************************************************************/
/*                                                            */
/*  FolkExports                                               */
/*                                                            */
/**************************************************************/

ASN1C_FolkExports::ASN1C_FolkExports (
   ASN1MessageBuffer& msgBuf) :
   ASN1CType(msgBuf)
{}

EXTERN int asn1PE_FolkExports (ASN1CTXT* ctxt_p)
{
   int stat = ASN_OK;

   /* NULL */
   return (stat);
}

int ASN1C_FolkExports::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_FolkExports (mpContext->GetPtr());
   return stat;
}

EXTERN int asn1PD_FolkExports (ASN1CTXT* ctxt_p)
{
   int stat = ASN_OK;

   /* NULL */

   return (stat);
}

int ASN1C_FolkExports::Decode ()
{
   return asn1PD_FolkExports (mpContext->GetPtr());
}

/**************************************************************/
/*                                                            */
/*  MsgFolkCreation_profiles                                  */
/*                                                            */
/**************************************************************/

ASN1C_MsgFolkCreation_profiles::ASN1C_MsgFolkCreation_profiles (
   ASN1MessageBuffer& msgBuf, ASN1T_MsgFolkCreation_profiles& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_MsgFolkCreation_profiles (ASN1CTXT* ctxt_p, ASN1T_MsgFolkCreation_profiles* pvalue)
{
   int stat = ASN_OK;
   ASN1UINT xx1;

   /* encode length determinant */

   stat = pe_Length (ctxt_p, pvalue->n);
   if (stat < 0) return stat;

   /* encode elements */

   for (xx1 = 0; xx1 < pvalue->n; xx1++) {
      stat = pe_OctetString (ctxt_p, pvalue->elem[xx1].numocts, pvalue->elem[xx1].data);
      if (stat != ASN_OK) return stat;
   }
   return (stat);
}

int ASN1C_MsgFolkCreation_profiles::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_MsgFolkCreation_profiles (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_MsgFolkCreation_profiles (ASN1CTXT* ctxt_p, ASN1T_MsgFolkCreation_profiles* pvalue)
{
   int stat = ASN_OK;
   ASN1UINT xx1;

   /* decode length determinant */

   stat = pd_Length (ctxt_p, &pvalue->n);
   if (stat != ASN_OK) return stat;

   /* decode elements */

   ALLOC_ASN1ARRAY (ctxt_p, pvalue, ASN1TDynOctStr);

   for (xx1 = 0; xx1 < pvalue->n; xx1++) {
      stat = pd_DynOctetString (ctxt_p, (ASN1DynOctStr*)&pvalue->elem[xx1]);
      if (stat != ASN_OK) return stat;
   }


   return (stat);
}

int ASN1C_MsgFolkCreation_profiles::Decode ()
{
   return asn1PD_MsgFolkCreation_profiles (mpContext->GetPtr(), &msgData);
}

/**************************************************************/
/*                                                            */
/*  MsgFolkCreation_activities                                */
/*                                                            */
/**************************************************************/

ASN1C_MsgFolkCreation_activities::ASN1C_MsgFolkCreation_activities (
   ASN1MessageBuffer& msgBuf, ASN1T_MsgFolkCreation_activities& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_MsgFolkCreation_activities (ASN1CTXT* ctxt_p, ASN1T_MsgFolkCreation_activities* pvalue)
{
   int stat = ASN_OK;
   ASN1UINT xx1;

   /* encode length determinant */

   stat = pe_Length (ctxt_p, pvalue->n);
   if (stat < 0) return stat;

   /* encode elements */

   for (xx1 = 0; xx1 < pvalue->n; xx1++) {
      stat = pe_OctetString (ctxt_p, pvalue->elem[xx1].numocts, pvalue->elem[xx1].data);
      if (stat != ASN_OK) return stat;
   }
   return (stat);
}

int ASN1C_MsgFolkCreation_activities::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_MsgFolkCreation_activities (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_MsgFolkCreation_activities (ASN1CTXT* ctxt_p, ASN1T_MsgFolkCreation_activities* pvalue)
{
   int stat = ASN_OK;
   ASN1UINT xx1;

   /* decode length determinant */

   stat = pd_Length (ctxt_p, &pvalue->n);
   if (stat != ASN_OK) return stat;

   /* decode elements */

   ALLOC_ASN1ARRAY (ctxt_p, pvalue, ASN1TDynOctStr);

   for (xx1 = 0; xx1 < pvalue->n; xx1++) {
      stat = pd_DynOctetString (ctxt_p, (ASN1DynOctStr*)&pvalue->elem[xx1]);
      if (stat != ASN_OK) return stat;
   }


   return (stat);
}

int ASN1C_MsgFolkCreation_activities::Decode ()
{
   return asn1PD_MsgFolkCreation_activities (mpContext->GetPtr(), &msgData);
}

/**************************************************************/
/*                                                            */
/*  MsgFolkCreation                                           */
/*                                                            */
/**************************************************************/

ASN1C_MsgFolkCreation::ASN1C_MsgFolkCreation (
   ASN1MessageBuffer& msgBuf, ASN1T_MsgFolkCreation& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_MsgFolkCreation (ASN1CTXT* ctxt_p, ASN1T_MsgFolkCreation* pvalue)
{
   int stat = ASN_OK;

   /* encode profiles */

   stat = asn1PE_MsgFolkCreation_profiles (ctxt_p, &pvalue->profiles);
   if (stat != ASN_OK) return stat;

   /* encode activities */

   stat = asn1PE_MsgFolkCreation_activities (ctxt_p, &pvalue->activities);
   if (stat != ASN_OK) return stat;

   /* encode container_size */

   stat = pe_UnconsInteger (ctxt_p, pvalue->container_size);
   if (stat != ASN_OK) return stat;

   return (stat);
}

int ASN1C_MsgFolkCreation::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_MsgFolkCreation (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_MsgFolkCreation (ASN1CTXT* ctxt_p, ASN1T_MsgFolkCreation* pvalue)
{
   int stat = ASN_OK;

   /* decode profiles */

   stat = asn1PD_MsgFolkCreation_profiles (ctxt_p, &pvalue->profiles);
   if (stat != ASN_OK) return stat;

   /* decode activities */

   stat = asn1PD_MsgFolkCreation_activities (ctxt_p, &pvalue->activities);
   if (stat != ASN_OK) return stat;

   /* decode container_size */

   stat = pd_UnconsInteger (ctxt_p, &pvalue->container_size);
   if (stat != ASN_OK) return stat;


   return (stat);
}

int ASN1C_MsgFolkCreation::Decode ()
{
   return asn1PD_MsgFolkCreation (mpContext->GetPtr(), &msgData);
}

/**************************************************************/
/*                                                            */
/*  MsgFolkGraphEdgeUpdate_population_occupation              */
/*                                                            */
/**************************************************************/

ASN1C_MsgFolkGraphEdgeUpdate_population_occupation::ASN1C_MsgFolkGraphEdgeUpdate_population_occupation (
   ASN1MessageBuffer& msgBuf, ASN1T_MsgFolkGraphEdgeUpdate_population_occupation& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_MsgFolkGraphEdgeUpdate_population_occupation (ASN1CTXT* ctxt_p, ASN1T_MsgFolkGraphEdgeUpdate_population_occupation* pvalue)
{
   int stat = ASN_OK;
   ASN1UINT xx1;

   /* encode length determinant */

   stat = pe_Length (ctxt_p, pvalue->n);
   if (stat < 0) return stat;

   /* encode elements */

   for (xx1 = 0; xx1 < pvalue->n; xx1++) {
      stat = pe_ConsInteger (ctxt_p, pvalue->elem[xx1], 0, ASN1INT_MAX);
      if (stat != ASN_OK) return stat;

   }
   return (stat);
}

int ASN1C_MsgFolkGraphEdgeUpdate_population_occupation::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_MsgFolkGraphEdgeUpdate_population_occupation (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_MsgFolkGraphEdgeUpdate_population_occupation (ASN1CTXT* ctxt_p, ASN1T_MsgFolkGraphEdgeUpdate_population_occupation* pvalue)
{
   int stat = ASN_OK;
   ASN1UINT xx1;

   /* decode length determinant */

   stat = pd_Length (ctxt_p, &pvalue->n);
   if (stat != ASN_OK) return stat;

   /* decode elements */

   ALLOC_ASN1ARRAY (ctxt_p, pvalue, ASN1INT);

   for (xx1 = 0; xx1 < pvalue->n; xx1++) {
      stat = pd_ConsInteger (ctxt_p, &pvalue->elem[xx1], 0, ASN1INT_MAX);
      if (stat != ASN_OK) return stat;
   }


   return (stat);
}

int ASN1C_MsgFolkGraphEdgeUpdate_population_occupation::Decode ()
{
   return asn1PD_MsgFolkGraphEdgeUpdate_population_occupation (mpContext->GetPtr(), &msgData);
}

/**************************************************************/
/*                                                            */
/*  MsgFolkGraphEdgeUpdate                                    */
/*                                                            */
/**************************************************************/

ASN1C_MsgFolkGraphEdgeUpdate::ASN1C_MsgFolkGraphEdgeUpdate (
   ASN1MessageBuffer& msgBuf, ASN1T_MsgFolkGraphEdgeUpdate& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_MsgFolkGraphEdgeUpdate (ASN1CTXT* ctxt_p, ASN1T_MsgFolkGraphEdgeUpdate* pvalue)
{
   int stat = ASN_OK;

   /* encode oid */

   stat = asn1PE_OID (ctxt_p, pvalue->oid);
   if (stat != ASN_OK) return stat;

   /* encode population_occupation */

   stat = asn1PE_MsgFolkGraphEdgeUpdate_population_occupation (ctxt_p, &pvalue->population_occupation);
   if (stat != ASN_OK) return stat;

   return (stat);
}

int ASN1C_MsgFolkGraphEdgeUpdate::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_MsgFolkGraphEdgeUpdate (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_MsgFolkGraphEdgeUpdate (ASN1CTXT* ctxt_p, ASN1T_MsgFolkGraphEdgeUpdate* pvalue)
{
   int stat = ASN_OK;

   /* decode oid */

   stat = asn1PD_OID (ctxt_p, &pvalue->oid);
   if (stat != ASN_OK) return stat;

   /* decode population_occupation */

   stat = asn1PD_MsgFolkGraphEdgeUpdate_population_occupation (ctxt_p, &pvalue->population_occupation);
   if (stat != ASN_OK) return stat;


   return (stat);
}

int ASN1C_MsgFolkGraphEdgeUpdate::Decode ()
{
   return asn1PD_MsgFolkGraphEdgeUpdate (mpContext->GetPtr(), &msgData);
}

/**************************************************************/
/*                                                            */
/*  MsgFolkGraphUpdate                                        */
/*                                                            */
/**************************************************************/

ASN1C_MsgFolkGraphUpdate::ASN1C_MsgFolkGraphUpdate (
   ASN1MessageBuffer& msgBuf, ASN1T_MsgFolkGraphUpdate& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_MsgFolkGraphUpdate (ASN1CTXT* ctxt_p, ASN1T_MsgFolkGraphUpdate* pvalue)
{
   int stat = ASN_OK;
   ASN1UINT xx1;

   /* encode length determinant */

   stat = pe_Length (ctxt_p, pvalue->n);
   if (stat < 0) return stat;

   /* encode elements */

   for (xx1 = 0; xx1 < pvalue->n; xx1++) {
      stat = asn1PE_MsgFolkGraphEdgeUpdate (ctxt_p, &pvalue->elem[xx1]);
      if (stat != ASN_OK) return stat;
   }
   return (stat);
}

int ASN1C_MsgFolkGraphUpdate::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_MsgFolkGraphUpdate (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_MsgFolkGraphUpdate (ASN1CTXT* ctxt_p, ASN1T_MsgFolkGraphUpdate* pvalue)
{
   int stat = ASN_OK;
   ASN1UINT xx1;

   /* decode length determinant */

   stat = pd_Length (ctxt_p, &pvalue->n);
   if (stat != ASN_OK) return stat;

   /* decode elements */

   ALLOC_ASN1ARRAY (ctxt_p, pvalue, ASN1T_MsgFolkGraphEdgeUpdate);

   for (xx1 = 0; xx1 < pvalue->n; xx1++) {
      stat = asn1PD_MsgFolkGraphEdgeUpdate (ctxt_p, &pvalue->elem[xx1]);
      if (stat != ASN_OK) return stat;
   }


   return (stat);
}

int ASN1C_MsgFolkGraphUpdate::Decode ()
{
   return asn1PD_MsgFolkGraphUpdate (mpContext->GetPtr(), &msgData);
}

