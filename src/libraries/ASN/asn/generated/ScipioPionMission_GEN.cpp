/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 5.31, Date: 08-Nov-2006.
 */
#include "ScipioPionMission_GEN.h"

/**************************************************************/
/*                                                            */
/*  Mission_Pion_GEN_OuvrirItineraire                         */
/*                                                            */
/**************************************************************/

ASN1C_Mission_Pion_GEN_OuvrirItineraire::ASN1C_Mission_Pion_GEN_OuvrirItineraire (
   ASN1MessageBuffer& msgBuf, ASN1T_Mission_Pion_GEN_OuvrirItineraire& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_Mission_Pion_GEN_OuvrirItineraire (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_OuvrirItineraire* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PE_Mission_Pion_GEN_OuvrirItineraire: start\n");

   /* encode itineraire */

   PU_PUSHNAME (ctxt_p, "itineraire");

   stat = asn1PE_Itineraire (ctxt_p, &pvalue->itineraire);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);
   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PE_Mission_Pion_GEN_OuvrirItineraire: end\n");
   return (stat);
}

int ASN1C_Mission_Pion_GEN_OuvrirItineraire::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_Mission_Pion_GEN_OuvrirItineraire (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_Mission_Pion_GEN_OuvrirItineraire (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_OuvrirItineraire* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PD_Mission_Pion_GEN_OuvrirItineraire: start\n");

   /* decode itineraire */

   PU_PUSHNAME (ctxt_p, "itineraire");

   stat = asn1PD_Itineraire (ctxt_p, &pvalue->itineraire);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);

   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PD_Mission_Pion_GEN_OuvrirItineraire: end\n");

   return (stat);
}

int ASN1C_Mission_Pion_GEN_OuvrirItineraire::Decode ()
{
   return asn1PD_Mission_Pion_GEN_OuvrirItineraire (mpContext->GetPtr(), &msgData);
}

/**************************************************************/
/*                                                            */
/*  Mission_Pion_GEN_RetablirItineraire                       */
/*                                                            */
/**************************************************************/

ASN1C_Mission_Pion_GEN_RetablirItineraire::ASN1C_Mission_Pion_GEN_RetablirItineraire (
   ASN1MessageBuffer& msgBuf, ASN1T_Mission_Pion_GEN_RetablirItineraire& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_Mission_Pion_GEN_RetablirItineraire (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_RetablirItineraire* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PE_Mission_Pion_GEN_RetablirItineraire: start\n");

   /* encode itineraire */

   PU_PUSHNAME (ctxt_p, "itineraire");

   stat = asn1PE_Itineraire (ctxt_p, &pvalue->itineraire);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);
   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PE_Mission_Pion_GEN_RetablirItineraire: end\n");
   return (stat);
}

int ASN1C_Mission_Pion_GEN_RetablirItineraire::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_Mission_Pion_GEN_RetablirItineraire (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_Mission_Pion_GEN_RetablirItineraire (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_RetablirItineraire* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PD_Mission_Pion_GEN_RetablirItineraire: start\n");

   /* decode itineraire */

   PU_PUSHNAME (ctxt_p, "itineraire");

   stat = asn1PD_Itineraire (ctxt_p, &pvalue->itineraire);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);

   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PD_Mission_Pion_GEN_RetablirItineraire: end\n");

   return (stat);
}

int ASN1C_Mission_Pion_GEN_RetablirItineraire::Decode ()
{
   return asn1PD_Mission_Pion_GEN_RetablirItineraire (mpContext->GetPtr(), &msgData);
}

/**************************************************************/
/*                                                            */
/*  Mission_Pion_GEN_ReconnaitreItineraire                    */
/*                                                            */
/**************************************************************/

ASN1C_Mission_Pion_GEN_ReconnaitreItineraire::ASN1C_Mission_Pion_GEN_ReconnaitreItineraire (
   ASN1MessageBuffer& msgBuf, ASN1T_Mission_Pion_GEN_ReconnaitreItineraire& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_Mission_Pion_GEN_ReconnaitreItineraire (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_ReconnaitreItineraire* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PE_Mission_Pion_GEN_ReconnaitreItineraire: start\n");

   /* encode itineraire */

   PU_PUSHNAME (ctxt_p, "itineraire");

   stat = asn1PE_Itineraire (ctxt_p, &pvalue->itineraire);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);
   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PE_Mission_Pion_GEN_ReconnaitreItineraire: end\n");
   return (stat);
}

int ASN1C_Mission_Pion_GEN_ReconnaitreItineraire::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_Mission_Pion_GEN_ReconnaitreItineraire (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_Mission_Pion_GEN_ReconnaitreItineraire (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_ReconnaitreItineraire* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PD_Mission_Pion_GEN_ReconnaitreItineraire: start\n");

   /* decode itineraire */

   PU_PUSHNAME (ctxt_p, "itineraire");

   stat = asn1PD_Itineraire (ctxt_p, &pvalue->itineraire);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);

   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PD_Mission_Pion_GEN_ReconnaitreItineraire: end\n");

   return (stat);
}

int ASN1C_Mission_Pion_GEN_ReconnaitreItineraire::Decode ()
{
   return asn1PD_Mission_Pion_GEN_ReconnaitreItineraire (mpContext->GetPtr(), &msgData);
}

/**************************************************************/
/*                                                            */
/*  Mission_Pion_GEN_ReconnaitreZone                          */
/*                                                            */
/**************************************************************/

ASN1C_Mission_Pion_GEN_ReconnaitreZone::ASN1C_Mission_Pion_GEN_ReconnaitreZone (
   ASN1MessageBuffer& msgBuf, ASN1T_Mission_Pion_GEN_ReconnaitreZone& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_Mission_Pion_GEN_ReconnaitreZone (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_ReconnaitreZone* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PE_Mission_Pion_GEN_ReconnaitreZone: start\n");

   /* encode zone */

   PU_PUSHNAME (ctxt_p, "zone");

   stat = asn1PE_Localisation (ctxt_p, &pvalue->zone);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);
   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PE_Mission_Pion_GEN_ReconnaitreZone: end\n");
   return (stat);
}

int ASN1C_Mission_Pion_GEN_ReconnaitreZone::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_Mission_Pion_GEN_ReconnaitreZone (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_Mission_Pion_GEN_ReconnaitreZone (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_ReconnaitreZone* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PD_Mission_Pion_GEN_ReconnaitreZone: start\n");

   /* decode zone */

   PU_PUSHNAME (ctxt_p, "zone");

   stat = asn1PD_Localisation (ctxt_p, &pvalue->zone);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);

   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PD_Mission_Pion_GEN_ReconnaitreZone: end\n");

   return (stat);
}

int ASN1C_Mission_Pion_GEN_ReconnaitreZone::Decode ()
{
   return asn1PD_Mission_Pion_GEN_ReconnaitreZone (mpContext->GetPtr(), &msgData);
}

/**************************************************************/
/*                                                            */
/*  Mission_Pion_GEN_ReconnaitreSiteFranchissement            */
/*                                                            */
/**************************************************************/

ASN1C_Mission_Pion_GEN_ReconnaitreSiteFranchissement::ASN1C_Mission_Pion_GEN_ReconnaitreSiteFranchissement (
   ASN1MessageBuffer& msgBuf, ASN1T_Mission_Pion_GEN_ReconnaitreSiteFranchissement& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_Mission_Pion_GEN_ReconnaitreSiteFranchissement (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_ReconnaitreSiteFranchissement* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PE_Mission_Pion_GEN_ReconnaitreSiteFranchissement: start\n");

   /* encode site_franchissement */

   PU_PUSHNAME (ctxt_p, "site_franchissement");

   stat = asn1PE_KnowledgeObject (ctxt_p, pvalue->site_franchissement);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);
   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PE_Mission_Pion_GEN_ReconnaitreSiteFranchissement: end\n");
   return (stat);
}

int ASN1C_Mission_Pion_GEN_ReconnaitreSiteFranchissement::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_Mission_Pion_GEN_ReconnaitreSiteFranchissement (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_Mission_Pion_GEN_ReconnaitreSiteFranchissement (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_ReconnaitreSiteFranchissement* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PD_Mission_Pion_GEN_ReconnaitreSiteFranchissement: start\n");

   /* decode site_franchissement */

   PU_PUSHNAME (ctxt_p, "site_franchissement");

   stat = asn1PD_KnowledgeObject (ctxt_p, &pvalue->site_franchissement);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);

   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PD_Mission_Pion_GEN_ReconnaitreSiteFranchissement: end\n");

   return (stat);
}

int ASN1C_Mission_Pion_GEN_ReconnaitreSiteFranchissement::Decode ()
{
   return asn1PD_Mission_Pion_GEN_ReconnaitreSiteFranchissement (mpContext->GetPtr(), &msgData);
}

/**************************************************************/
/*                                                            */
/*  EnumGenTypePontage                                        */
/*                                                            */
/**************************************************************/

ASN1C_EnumGenTypePontage::ASN1C_EnumGenTypePontage (
   ASN1MessageBuffer& msgBuf, ASN1T_EnumGenTypePontage& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_EnumGenTypePontage (ASN1CTXT* ctxt_p, ASN1T_EnumGenTypePontage value)
{
   int stat = ASN_OK;
   ASN1UINT ui;

   rtdiag ("asn1PE_EnumGenTypePontage: start\n");

   switch (value) {
      case EnumGenTypePontage::continu: ui = 0; break;
      case EnumGenTypePontage::discontinu: ui = 1; break;
      default: return LOG_ASN1ERR (ctxt_p, ASN_E_INVENUM);
   }

   stat = pe_ConsUnsigned (ctxt_p, ui, 0, 1);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);

   rtdiag ("asn1PE_EnumGenTypePontage: end\n");
   return (stat);
}

int ASN1C_EnumGenTypePontage::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_EnumGenTypePontage (mpContext->GetPtr(), msgData);
   return stat;
}

EXTERN int asn1PD_EnumGenTypePontage (ASN1CTXT* ctxt_p, ASN1T_EnumGenTypePontage* pvalue)
{
   int stat = ASN_OK;
   ASN1UINT ui;

   rtdiag ("asn1PD_EnumGenTypePontage: start\n");

   stat = pd_ConsUnsigned (ctxt_p, &ui, 0, 1);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);

   switch (ui) {
      case 0: *pvalue = EnumGenTypePontage::continu; break;
      case 1: *pvalue = EnumGenTypePontage::discontinu; break;
      default: return LOG_ASN1ERR (ctxt_p, ASN_E_INVENUM);
   }

   rtdiag ("asn1PD_EnumGenTypePontage: end\n");

   return (stat);
}

int ASN1C_EnumGenTypePontage::Decode ()
{
   return asn1PD_EnumGenTypePontage (mpContext->GetPtr(), &msgData);
}

/**************************************************************/
/*                                                            */
/*  Mission_Pion_GEN_EquiperExploiterSiteFranchissement       */
/*                                                            */
/**************************************************************/

ASN1C_Mission_Pion_GEN_EquiperExploiterSiteFranchissement::ASN1C_Mission_Pion_GEN_EquiperExploiterSiteFranchissement (
   ASN1MessageBuffer& msgBuf, ASN1T_Mission_Pion_GEN_EquiperExploiterSiteFranchissement& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_Mission_Pion_GEN_EquiperExploiterSiteFranchissement (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_EquiperExploiterSiteFranchissement* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PE_Mission_Pion_GEN_EquiperExploiterSiteFranchissement: start\n");

   /* encode site_franchissement */

   PU_PUSHNAME (ctxt_p, "site_franchissement");

   stat = asn1PE_KnowledgeObject (ctxt_p, pvalue->site_franchissement);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);
   PU_POPNAME (ctxt_p);

   /* encode point_regroupement */

   PU_PUSHNAME (ctxt_p, "point_regroupement");

   stat = asn1PE_Point (ctxt_p, &pvalue->point_regroupement);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);
   PU_POPNAME (ctxt_p);

   /* encode type_pontage */

   PU_PUSHNAME (ctxt_p, "type_pontage");

   stat = asn1PE_EnumGenTypePontage (ctxt_p, pvalue->type_pontage);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);
   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PE_Mission_Pion_GEN_EquiperExploiterSiteFranchissement: end\n");
   return (stat);
}

int ASN1C_Mission_Pion_GEN_EquiperExploiterSiteFranchissement::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_Mission_Pion_GEN_EquiperExploiterSiteFranchissement (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_Mission_Pion_GEN_EquiperExploiterSiteFranchissement (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_EquiperExploiterSiteFranchissement* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PD_Mission_Pion_GEN_EquiperExploiterSiteFranchissement: start\n");

   /* decode site_franchissement */

   PU_PUSHNAME (ctxt_p, "site_franchissement");

   stat = asn1PD_KnowledgeObject (ctxt_p, &pvalue->site_franchissement);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);

   PU_POPNAME (ctxt_p);

   /* decode point_regroupement */

   PU_PUSHNAME (ctxt_p, "point_regroupement");

   stat = asn1PD_Point (ctxt_p, &pvalue->point_regroupement);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);

   PU_POPNAME (ctxt_p);

   /* decode type_pontage */

   PU_PUSHNAME (ctxt_p, "type_pontage");

   stat = asn1PD_EnumGenTypePontage (ctxt_p, &pvalue->type_pontage);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);

   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PD_Mission_Pion_GEN_EquiperExploiterSiteFranchissement: end\n");

   return (stat);
}

int ASN1C_Mission_Pion_GEN_EquiperExploiterSiteFranchissement::Decode ()
{
   return asn1PD_Mission_Pion_GEN_EquiperExploiterSiteFranchissement (mpContext->GetPtr(), &msgData);
}

/**************************************************************/
/*                                                            */
/*  Mission_Pion_GEN_ExecuterVariantement                     */
/*                                                            */
/**************************************************************/

ASN1C_Mission_Pion_GEN_ExecuterVariantement::ASN1C_Mission_Pion_GEN_ExecuterVariantement (
   ASN1MessageBuffer& msgBuf, ASN1T_Mission_Pion_GEN_ExecuterVariantement& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_Mission_Pion_GEN_ExecuterVariantement (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_ExecuterVariantement* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PE_Mission_Pion_GEN_ExecuterVariantement: start\n");

   /* encode site_franchissement */

   PU_PUSHNAME (ctxt_p, "site_franchissement");

   stat = asn1PE_KnowledgeObject (ctxt_p, pvalue->site_franchissement);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);
   PU_POPNAME (ctxt_p);

   /* encode point_regroupement */

   PU_PUSHNAME (ctxt_p, "point_regroupement");

   stat = asn1PE_Point (ctxt_p, &pvalue->point_regroupement);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);
   PU_POPNAME (ctxt_p);

   /* encode type_pontage */

   PU_PUSHNAME (ctxt_p, "type_pontage");

   stat = asn1PE_EnumGenTypePontage (ctxt_p, pvalue->type_pontage);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);
   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PE_Mission_Pion_GEN_ExecuterVariantement: end\n");
   return (stat);
}

int ASN1C_Mission_Pion_GEN_ExecuterVariantement::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_Mission_Pion_GEN_ExecuterVariantement (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_Mission_Pion_GEN_ExecuterVariantement (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_ExecuterVariantement* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PD_Mission_Pion_GEN_ExecuterVariantement: start\n");

   /* decode site_franchissement */

   PU_PUSHNAME (ctxt_p, "site_franchissement");

   stat = asn1PD_KnowledgeObject (ctxt_p, &pvalue->site_franchissement);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);

   PU_POPNAME (ctxt_p);

   /* decode point_regroupement */

   PU_PUSHNAME (ctxt_p, "point_regroupement");

   stat = asn1PD_Point (ctxt_p, &pvalue->point_regroupement);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);

   PU_POPNAME (ctxt_p);

   /* decode type_pontage */

   PU_PUSHNAME (ctxt_p, "type_pontage");

   stat = asn1PD_EnumGenTypePontage (ctxt_p, &pvalue->type_pontage);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);

   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PD_Mission_Pion_GEN_ExecuterVariantement: end\n");

   return (stat);
}

int ASN1C_Mission_Pion_GEN_ExecuterVariantement::Decode ()
{
   return asn1PD_Mission_Pion_GEN_ExecuterVariantement (mpContext->GetPtr(), &msgData);
}

/**************************************************************/
/*                                                            */
/*  Mission_Pion_GEN_DegagerObstacles                         */
/*                                                            */
/**************************************************************/

ASN1C_Mission_Pion_GEN_DegagerObstacles::ASN1C_Mission_Pion_GEN_DegagerObstacles (
   ASN1MessageBuffer& msgBuf, ASN1T_Mission_Pion_GEN_DegagerObstacles& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_Mission_Pion_GEN_DegagerObstacles (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_DegagerObstacles* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PE_Mission_Pion_GEN_DegagerObstacles: start\n");

   /* encode obstacles */

   PU_PUSHNAME (ctxt_p, "obstacles");

   stat = asn1PE_ListKnowledgeObject (ctxt_p, &pvalue->obstacles);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);
   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PE_Mission_Pion_GEN_DegagerObstacles: end\n");
   return (stat);
}

int ASN1C_Mission_Pion_GEN_DegagerObstacles::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_Mission_Pion_GEN_DegagerObstacles (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_Mission_Pion_GEN_DegagerObstacles (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_DegagerObstacles* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PD_Mission_Pion_GEN_DegagerObstacles: start\n");

   /* decode obstacles */

   PU_PUSHNAME (ctxt_p, "obstacles");

   stat = asn1PD_ListKnowledgeObject (ctxt_p, &pvalue->obstacles);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);

   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PD_Mission_Pion_GEN_DegagerObstacles: end\n");

   return (stat);
}

int ASN1C_Mission_Pion_GEN_DegagerObstacles::Decode ()
{
   return asn1PD_Mission_Pion_GEN_DegagerObstacles (mpContext->GetPtr(), &msgData);
}

/**************************************************************/
/*                                                            */
/*  Mission_Pion_GEN_ContournerObstacles                      */
/*                                                            */
/**************************************************************/

ASN1C_Mission_Pion_GEN_ContournerObstacles::ASN1C_Mission_Pion_GEN_ContournerObstacles (
   ASN1MessageBuffer& msgBuf, ASN1T_Mission_Pion_GEN_ContournerObstacles& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_Mission_Pion_GEN_ContournerObstacles (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_ContournerObstacles* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PE_Mission_Pion_GEN_ContournerObstacles: start\n");

   /* encode obstacles */

   PU_PUSHNAME (ctxt_p, "obstacles");

   stat = asn1PE_ListKnowledgeObject (ctxt_p, &pvalue->obstacles);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);
   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PE_Mission_Pion_GEN_ContournerObstacles: end\n");
   return (stat);
}

int ASN1C_Mission_Pion_GEN_ContournerObstacles::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_Mission_Pion_GEN_ContournerObstacles (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_Mission_Pion_GEN_ContournerObstacles (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_ContournerObstacles* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PD_Mission_Pion_GEN_ContournerObstacles: start\n");

   /* decode obstacles */

   PU_PUSHNAME (ctxt_p, "obstacles");

   stat = asn1PD_ListKnowledgeObject (ctxt_p, &pvalue->obstacles);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);

   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PD_Mission_Pion_GEN_ContournerObstacles: end\n");

   return (stat);
}

int ASN1C_Mission_Pion_GEN_ContournerObstacles::Decode ()
{
   return asn1PD_Mission_Pion_GEN_ContournerObstacles (mpContext->GetPtr(), &msgData);
}

/**************************************************************/
/*                                                            */
/*  Mission_Pion_GEN_DepolluerZone                            */
/*                                                            */
/**************************************************************/

ASN1C_Mission_Pion_GEN_DepolluerZone::ASN1C_Mission_Pion_GEN_DepolluerZone (
   ASN1MessageBuffer& msgBuf, ASN1T_Mission_Pion_GEN_DepolluerZone& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_Mission_Pion_GEN_DepolluerZone (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_DepolluerZone* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PE_Mission_Pion_GEN_DepolluerZone: start\n");

   /* encode zone */

   PU_PUSHNAME (ctxt_p, "zone");

   stat = asn1PE_Localisation (ctxt_p, &pvalue->zone);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);
   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PE_Mission_Pion_GEN_DepolluerZone: end\n");
   return (stat);
}

int ASN1C_Mission_Pion_GEN_DepolluerZone::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_Mission_Pion_GEN_DepolluerZone (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_Mission_Pion_GEN_DepolluerZone (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_DepolluerZone* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PD_Mission_Pion_GEN_DepolluerZone: start\n");

   /* decode zone */

   PU_PUSHNAME (ctxt_p, "zone");

   stat = asn1PD_Localisation (ctxt_p, &pvalue->zone);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);

   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PD_Mission_Pion_GEN_DepolluerZone: end\n");

   return (stat);
}

int ASN1C_Mission_Pion_GEN_DepolluerZone::Decode ()
{
   return asn1PD_Mission_Pion_GEN_DepolluerZone (mpContext->GetPtr(), &msgData);
}

/**************************************************************/
/*                                                            */
/*  Mission_Pion_GEN_Renforcer                                */
/*                                                            */
/**************************************************************/

ASN1C_Mission_Pion_GEN_Renforcer::ASN1C_Mission_Pion_GEN_Renforcer (
   ASN1MessageBuffer& msgBuf, ASN1T_Mission_Pion_GEN_Renforcer& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_Mission_Pion_GEN_Renforcer (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_Renforcer* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PE_Mission_Pion_GEN_Renforcer: start\n");

   /* encode lieu_renforcement */

   PU_PUSHNAME (ctxt_p, "lieu_renforcement");

   stat = asn1PE_Point (ctxt_p, &pvalue->lieu_renforcement);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);
   PU_POPNAME (ctxt_p);

   /* encode unite */

   PU_PUSHNAME (ctxt_p, "unite");

   stat = asn1PE_Agent (ctxt_p, pvalue->unite);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);
   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PE_Mission_Pion_GEN_Renforcer: end\n");
   return (stat);
}

int ASN1C_Mission_Pion_GEN_Renforcer::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_Mission_Pion_GEN_Renforcer (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_Mission_Pion_GEN_Renforcer (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_Renforcer* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PD_Mission_Pion_GEN_Renforcer: start\n");

   /* decode lieu_renforcement */

   PU_PUSHNAME (ctxt_p, "lieu_renforcement");

   stat = asn1PD_Point (ctxt_p, &pvalue->lieu_renforcement);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);

   PU_POPNAME (ctxt_p);

   /* decode unite */

   PU_PUSHNAME (ctxt_p, "unite");

   stat = asn1PD_Agent (ctxt_p, &pvalue->unite);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);

   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PD_Mission_Pion_GEN_Renforcer: end\n");

   return (stat);
}

int ASN1C_Mission_Pion_GEN_Renforcer::Decode ()
{
   return asn1PD_Mission_Pion_GEN_Renforcer (mpContext->GetPtr(), &msgData);
}

/**************************************************************/
/*                                                            */
/*  Mission_Pion_GEN_RealiserTravauxProtection                */
/*                                                            */
/**************************************************************/

ASN1C_Mission_Pion_GEN_RealiserTravauxProtection::ASN1C_Mission_Pion_GEN_RealiserTravauxProtection (
   ASN1MessageBuffer& msgBuf, ASN1T_Mission_Pion_GEN_RealiserTravauxProtection& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_Mission_Pion_GEN_RealiserTravauxProtection (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_RealiserTravauxProtection* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PE_Mission_Pion_GEN_RealiserTravauxProtection: start\n");

   /* encode travaux */

   PU_PUSHNAME (ctxt_p, "travaux");

   stat = asn1PE_ListMissionGenObject (ctxt_p, &pvalue->travaux);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);
   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PE_Mission_Pion_GEN_RealiserTravauxProtection: end\n");
   return (stat);
}

int ASN1C_Mission_Pion_GEN_RealiserTravauxProtection::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_Mission_Pion_GEN_RealiserTravauxProtection (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_Mission_Pion_GEN_RealiserTravauxProtection (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_RealiserTravauxProtection* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PD_Mission_Pion_GEN_RealiserTravauxProtection: start\n");

   /* decode travaux */

   PU_PUSHNAME (ctxt_p, "travaux");

   stat = asn1PD_ListMissionGenObject (ctxt_p, &pvalue->travaux);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);

   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PD_Mission_Pion_GEN_RealiserTravauxProtection: end\n");

   return (stat);
}

int ASN1C_Mission_Pion_GEN_RealiserTravauxProtection::Decode ()
{
   return asn1PD_Mission_Pion_GEN_RealiserTravauxProtection (mpContext->GetPtr(), &msgData);
}

/**************************************************************/
/*                                                            */
/*  Mission_Pion_GEN_RealiserTravauxContreMobilite            */
/*                                                            */
/**************************************************************/

ASN1C_Mission_Pion_GEN_RealiserTravauxContreMobilite::ASN1C_Mission_Pion_GEN_RealiserTravauxContreMobilite (
   ASN1MessageBuffer& msgBuf, ASN1T_Mission_Pion_GEN_RealiserTravauxContreMobilite& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_Mission_Pion_GEN_RealiserTravauxContreMobilite (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_RealiserTravauxContreMobilite* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PE_Mission_Pion_GEN_RealiserTravauxContreMobilite: start\n");

   /* encode travaux */

   PU_PUSHNAME (ctxt_p, "travaux");

   stat = asn1PE_ListMissionGenObject (ctxt_p, &pvalue->travaux);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);
   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PE_Mission_Pion_GEN_RealiserTravauxContreMobilite: end\n");
   return (stat);
}

int ASN1C_Mission_Pion_GEN_RealiserTravauxContreMobilite::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_Mission_Pion_GEN_RealiserTravauxContreMobilite (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_Mission_Pion_GEN_RealiserTravauxContreMobilite (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_RealiserTravauxContreMobilite* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PD_Mission_Pion_GEN_RealiserTravauxContreMobilite: start\n");

   /* decode travaux */

   PU_PUSHNAME (ctxt_p, "travaux");

   stat = asn1PD_ListMissionGenObject (ctxt_p, &pvalue->travaux);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);

   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PD_Mission_Pion_GEN_RealiserTravauxContreMobilite: end\n");

   return (stat);
}

int ASN1C_Mission_Pion_GEN_RealiserTravauxContreMobilite::Decode ()
{
   return asn1PD_Mission_Pion_GEN_RealiserTravauxContreMobilite (mpContext->GetPtr(), &msgData);
}

/**************************************************************/
/*                                                            */
/*  Mission_Pion_GEN_RealiserTravauxAppuiDeploiement          */
/*                                                            */
/**************************************************************/

ASN1C_Mission_Pion_GEN_RealiserTravauxAppuiDeploiement::ASN1C_Mission_Pion_GEN_RealiserTravauxAppuiDeploiement (
   ASN1MessageBuffer& msgBuf, ASN1T_Mission_Pion_GEN_RealiserTravauxAppuiDeploiement& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_Mission_Pion_GEN_RealiserTravauxAppuiDeploiement (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_RealiserTravauxAppuiDeploiement* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PE_Mission_Pion_GEN_RealiserTravauxAppuiDeploiement: start\n");

   /* encode travaux */

   PU_PUSHNAME (ctxt_p, "travaux");

   stat = asn1PE_ListMissionGenObject (ctxt_p, &pvalue->travaux);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);
   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PE_Mission_Pion_GEN_RealiserTravauxAppuiDeploiement: end\n");
   return (stat);
}

int ASN1C_Mission_Pion_GEN_RealiserTravauxAppuiDeploiement::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_Mission_Pion_GEN_RealiserTravauxAppuiDeploiement (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_Mission_Pion_GEN_RealiserTravauxAppuiDeploiement (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_RealiserTravauxAppuiDeploiement* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PD_Mission_Pion_GEN_RealiserTravauxAppuiDeploiement: start\n");

   /* decode travaux */

   PU_PUSHNAME (ctxt_p, "travaux");

   stat = asn1PD_ListMissionGenObject (ctxt_p, &pvalue->travaux);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);

   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PD_Mission_Pion_GEN_RealiserTravauxAppuiDeploiement: end\n");

   return (stat);
}

int ASN1C_Mission_Pion_GEN_RealiserTravauxAppuiDeploiement::Decode ()
{
   return asn1PD_Mission_Pion_GEN_RealiserTravauxAppuiDeploiement (mpContext->GetPtr(), &msgData);
}

/**************************************************************/
/*                                                            */
/*  Mission_Pion_GEN_RealiserCamps                            */
/*                                                            */
/**************************************************************/

ASN1C_Mission_Pion_GEN_RealiserCamps::ASN1C_Mission_Pion_GEN_RealiserCamps (
   ASN1MessageBuffer& msgBuf, ASN1T_Mission_Pion_GEN_RealiserCamps& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_Mission_Pion_GEN_RealiserCamps (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_RealiserCamps* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PE_Mission_Pion_GEN_RealiserCamps: start\n");

   /* encode travaux */

   PU_PUSHNAME (ctxt_p, "travaux");

   stat = asn1PE_ListMissionGenObject (ctxt_p, &pvalue->travaux);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);
   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PE_Mission_Pion_GEN_RealiserCamps: end\n");
   return (stat);
}

int ASN1C_Mission_Pion_GEN_RealiserCamps::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_Mission_Pion_GEN_RealiserCamps (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_Mission_Pion_GEN_RealiserCamps (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_RealiserCamps* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PD_Mission_Pion_GEN_RealiserCamps: start\n");

   /* decode travaux */

   PU_PUSHNAME (ctxt_p, "travaux");

   stat = asn1PD_ListMissionGenObject (ctxt_p, &pvalue->travaux);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);

   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PD_Mission_Pion_GEN_RealiserCamps: end\n");

   return (stat);
}

int ASN1C_Mission_Pion_GEN_RealiserCamps::Decode ()
{
   return asn1PD_Mission_Pion_GEN_RealiserCamps (mpContext->GetPtr(), &msgData);
}

/**************************************************************/
/*                                                            */
/*  Mission_Pion_GEN_ReprendreTravaux                         */
/*                                                            */
/**************************************************************/

ASN1C_Mission_Pion_GEN_ReprendreTravaux::ASN1C_Mission_Pion_GEN_ReprendreTravaux (
   ASN1MessageBuffer& msgBuf, ASN1T_Mission_Pion_GEN_ReprendreTravaux& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_Mission_Pion_GEN_ReprendreTravaux (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_ReprendreTravaux* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PE_Mission_Pion_GEN_ReprendreTravaux: start\n");

   /* encode travaux */

   PU_PUSHNAME (ctxt_p, "travaux");

   stat = asn1PE_KnowledgeObject (ctxt_p, pvalue->travaux);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);
   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PE_Mission_Pion_GEN_ReprendreTravaux: end\n");
   return (stat);
}

int ASN1C_Mission_Pion_GEN_ReprendreTravaux::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_Mission_Pion_GEN_ReprendreTravaux (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_Mission_Pion_GEN_ReprendreTravaux (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_ReprendreTravaux* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PD_Mission_Pion_GEN_ReprendreTravaux: start\n");

   /* decode travaux */

   PU_PUSHNAME (ctxt_p, "travaux");

   stat = asn1PD_KnowledgeObject (ctxt_p, &pvalue->travaux);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);

   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PD_Mission_Pion_GEN_ReprendreTravaux: end\n");

   return (stat);
}

int ASN1C_Mission_Pion_GEN_ReprendreTravaux::Decode ()
{
   return asn1PD_Mission_Pion_GEN_ReprendreTravaux (mpContext->GetPtr(), &msgData);
}

/**************************************************************/
/*                                                            */
/*  Mission_Pion_GEN_AmeliorerMobilite                        */
/*                                                            */
/**************************************************************/

ASN1C_Mission_Pion_GEN_AmeliorerMobilite::ASN1C_Mission_Pion_GEN_AmeliorerMobilite (
   ASN1MessageBuffer& msgBuf, ASN1T_Mission_Pion_GEN_AmeliorerMobilite& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_Mission_Pion_GEN_AmeliorerMobilite (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_AmeliorerMobilite* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PE_Mission_Pion_GEN_AmeliorerMobilite: start\n");

   /* encode zone */

   PU_PUSHNAME (ctxt_p, "zone");

   stat = asn1PE_Polygon (ctxt_p, &pvalue->zone);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);
   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PE_Mission_Pion_GEN_AmeliorerMobilite: end\n");
   return (stat);
}

int ASN1C_Mission_Pion_GEN_AmeliorerMobilite::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_Mission_Pion_GEN_AmeliorerMobilite (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_Mission_Pion_GEN_AmeliorerMobilite (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_AmeliorerMobilite* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PD_Mission_Pion_GEN_AmeliorerMobilite: start\n");

   /* decode zone */

   PU_PUSHNAME (ctxt_p, "zone");

   stat = asn1PD_Polygon (ctxt_p, &pvalue->zone);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);

   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PD_Mission_Pion_GEN_AmeliorerMobilite: end\n");

   return (stat);
}

int ASN1C_Mission_Pion_GEN_AmeliorerMobilite::Decode ()
{
   return asn1PD_Mission_Pion_GEN_AmeliorerMobilite (mpContext->GetPtr(), &msgData);
}

/**************************************************************/
/*                                                            */
/*  Mission_Pion_GEN_ActiverObstacle                          */
/*                                                            */
/**************************************************************/

ASN1C_Mission_Pion_GEN_ActiverObstacle::ASN1C_Mission_Pion_GEN_ActiverObstacle (
   ASN1MessageBuffer& msgBuf, ASN1T_Mission_Pion_GEN_ActiverObstacle& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_Mission_Pion_GEN_ActiverObstacle (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_ActiverObstacle* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PE_Mission_Pion_GEN_ActiverObstacle: start\n");

   /* encode obstacle */

   PU_PUSHNAME (ctxt_p, "obstacle");

   stat = asn1PE_KnowledgeObject (ctxt_p, pvalue->obstacle);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);
   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PE_Mission_Pion_GEN_ActiverObstacle: end\n");
   return (stat);
}

int ASN1C_Mission_Pion_GEN_ActiverObstacle::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_Mission_Pion_GEN_ActiverObstacle (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_Mission_Pion_GEN_ActiverObstacle (ASN1CTXT* ctxt_p, ASN1T_Mission_Pion_GEN_ActiverObstacle* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PD_Mission_Pion_GEN_ActiverObstacle: start\n");

   /* decode obstacle */

   PU_PUSHNAME (ctxt_p, "obstacle");

   stat = asn1PD_KnowledgeObject (ctxt_p, &pvalue->obstacle);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);

   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PD_Mission_Pion_GEN_ActiverObstacle: end\n");

   return (stat);
}

int ASN1C_Mission_Pion_GEN_ActiverObstacle::Decode ()
{
   return asn1PD_Mission_Pion_GEN_ActiverObstacle (mpContext->GetPtr(), &msgData);
}

