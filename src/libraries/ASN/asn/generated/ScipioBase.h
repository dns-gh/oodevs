/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 5.31, Date: 13-Oct-2005.
 */
#ifndef SCIPIOBASE_H
#define SCIPIOBASE_H

#include <stdio.h>
#include <stdlib.h>
#include "asn1per.h"
#include "asn1PerCppTypes.h"
#include "ASN1CBitStr.h"

/**************************************************************/
/*                                                            */
/*  EnumTypeLocalisation                                      */
/*                                                            */
/**************************************************************/

struct EXTERN EnumTypeLocalisation {
   enum Root {
      circle = 0,
      ellipse = 1,
      line = 2,
      polygon = 3,
      point = 4,
      sector = 5
   } ;
} ;

typedef EnumTypeLocalisation::Root ASN1T_EnumTypeLocalisation;

class EXTERN ASN1C_EnumTypeLocalisation : public ASN1CType {
public:
   ASN1T_EnumTypeLocalisation& msgData;
   ASN1C_EnumTypeLocalisation (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumTypeLocalisation& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumTypeLocalisation (ASN1CTXT* ctxt_p, ASN1T_EnumTypeLocalisation value);
EXTERN int asn1PD_EnumTypeLocalisation (ASN1CTXT* ctxt_p, ASN1T_EnumTypeLocalisation* pvalue);

EXTERN void asn1Print_EnumTypeLocalisation (ASN1ConstCharPtr name, ASN1T_EnumTypeLocalisation* pvalue);

/**************************************************************/
/*                                                            */
/*  CoordUTM                                                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_CoordUTM {
   ASN1UINT numocts;
   ASN1OCTET data[15];
   // ctors
   ASN1T_CoordUTM () : numocts(0) {}
   ASN1T_CoordUTM (ASN1UINT _numocts, const ASN1OCTET* _data) :
      numocts(_numocts) {
      memcpy (data, _data, numocts);
   }
   ASN1T_CoordUTM (const char* cstring) {
      if (strlen(cstring) > 0) {
         numocts = MIN ((strlen(cstring)+1), sizeof(data));
         strncpy ((char*)data, cstring, sizeof(data));
      }
      else numocts = 0;
   }
   // assignment operators
   ASN1T_CoordUTM& operator= (const char* cstring) {
      if (strlen(cstring) > 0) {
         numocts = MIN ((strlen(cstring)+1), sizeof(data));
         strncpy ((char*)data, cstring, sizeof(data));
      }
      else numocts = 0;
      return *this;
   }
} ASN1T_CoordUTM;

class EXTERN ASN1C_CoordUTM : public ASN1CType {
public:
   ASN1T_CoordUTM& msgData;
   ASN1C_CoordUTM (
      ASN1MessageBuffer& msgBuf, ASN1T_CoordUTM& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_CoordUTM (ASN1CTXT* ctxt_p, ASN1T_CoordUTM value);
EXTERN int asn1PD_CoordUTM (ASN1CTXT* ctxt_p, ASN1T_CoordUTM* pvalue);

EXTERN void asn1Print_CoordUTM (ASN1ConstCharPtr name, ASN1T_CoordUTM* pvalue);

/**************************************************************/
/*                                                            */
/*  _SeqOfCoordUTM                                            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T__SeqOfCoordUTM {
   ASN1UINT n;
   ASN1T_CoordUTM *elem;
} ASN1T__SeqOfCoordUTM;

class EXTERN ASN1C__SeqOfCoordUTM : public ASN1CType {
public:
   ASN1T__SeqOfCoordUTM& msgData;
   ASN1C__SeqOfCoordUTM (
      ASN1MessageBuffer& msgBuf, ASN1T__SeqOfCoordUTM& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE__SeqOfCoordUTM (ASN1CTXT* ctxt_p, ASN1T__SeqOfCoordUTM* pvalue);
EXTERN int asn1PD__SeqOfCoordUTM (ASN1CTXT* ctxt_p, ASN1T__SeqOfCoordUTM* pvalue);

EXTERN void asn1Print__SeqOfCoordUTM (ASN1ConstCharPtr name, ASN1T__SeqOfCoordUTM* pvalue);

/**************************************************************/
/*                                                            */
/*  Localisation                                              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_Localisation {
   ASN1T_EnumTypeLocalisation  type;
   ASN1T__SeqOfCoordUTM  vecteur_point;
} ASN1T_Localisation;

class EXTERN ASN1C_Localisation : public ASN1CType {
public:
   ASN1T_Localisation& msgData;
   ASN1C_Localisation (
      ASN1MessageBuffer& msgBuf, ASN1T_Localisation& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Localisation (ASN1CTXT* ctxt_p, ASN1T_Localisation* pvalue);
EXTERN int asn1PD_Localisation (ASN1CTXT* ctxt_p, ASN1T_Localisation* pvalue);

EXTERN void asn1Print_Localisation (ASN1ConstCharPtr name, ASN1T_Localisation* pvalue);

/**************************************************************/
/*                                                            */
/*  Polygon                                                   */
/*                                                            */
/**************************************************************/

typedef ASN1T_Localisation ASN1T_Polygon;

class EXTERN ASN1C_Polygon : public ASN1CType {
public:
   ASN1T_Polygon& msgData;
   ASN1C_Polygon (
      ASN1MessageBuffer& msgBuf, ASN1T_Polygon& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Polygon (ASN1CTXT* ctxt_p, ASN1T_Polygon* pvalue);
EXTERN int asn1PD_Polygon (ASN1CTXT* ctxt_p, ASN1T_Polygon* pvalue);

EXTERN void asn1Print_Polygon (ASN1ConstCharPtr name, ASN1T_Polygon* pvalue);

/**************************************************************/
/*                                                            */
/*  OID                                                       */
/*                                                            */
/**************************************************************/

typedef ASN1UINT ASN1T_OID;

class EXTERN ASN1C_OID : public ASN1CType {
public:
   ASN1T_OID& msgData;
   ASN1C_OID (
      ASN1MessageBuffer& msgBuf, ASN1T_OID& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_OID (ASN1CTXT* ctxt_p, ASN1T_OID value);
EXTERN int asn1PD_OID (ASN1CTXT* ctxt_p, ASN1T_OID* pvalue);

EXTERN void asn1Print_OID (ASN1ConstCharPtr name, ASN1T_OID* pvalue);

/**************************************************************/
/*                                                            */
/*  Automate                                                  */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_Automate;

class EXTERN ASN1C_Automate : public ASN1CType {
public:
   ASN1T_Automate& msgData;
   ASN1C_Automate (
      ASN1MessageBuffer& msgBuf, ASN1T_Automate& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Automate (ASN1CTXT* ctxt_p, ASN1T_Automate value);
EXTERN int asn1PD_Automate (ASN1CTXT* ctxt_p, ASN1T_Automate* pvalue);

EXTERN void asn1Print_Automate (ASN1ConstCharPtr name, ASN1T_Automate* pvalue);

/**************************************************************/
/*                                                            */
/*  Itineraire                                                */
/*                                                            */
/**************************************************************/

typedef ASN1T_Localisation ASN1T_Itineraire;

class EXTERN ASN1C_Itineraire : public ASN1CType {
public:
   ASN1T_Itineraire& msgData;
   ASN1C_Itineraire (
      ASN1MessageBuffer& msgBuf, ASN1T_Itineraire& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Itineraire (ASN1CTXT* ctxt_p, ASN1T_Itineraire* pvalue);
EXTERN int asn1PD_Itineraire (ASN1CTXT* ctxt_p, ASN1T_Itineraire* pvalue);

EXTERN void asn1Print_Itineraire (ASN1ConstCharPtr name, ASN1T_Itineraire* pvalue);

/**************************************************************/
/*                                                            */
/*  Agent                                                     */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_Agent;

class EXTERN ASN1C_Agent : public ASN1CType {
public:
   ASN1T_Agent& msgData;
   ASN1C_Agent (
      ASN1MessageBuffer& msgBuf, ASN1T_Agent& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Agent (ASN1CTXT* ctxt_p, ASN1T_Agent value);
EXTERN int asn1PD_Agent (ASN1CTXT* ctxt_p, ASN1T_Agent* pvalue);

EXTERN void asn1Print_Agent (ASN1ConstCharPtr name, ASN1T_Agent* pvalue);

/**************************************************************/
/*                                                            */
/*  ListAgent                                                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_ListAgent {
   ASN1UINT n;
   ASN1T_Agent *elem;
} ASN1T_ListAgent;

class EXTERN ASN1C_ListAgent : public ASN1CType {
public:
   ASN1T_ListAgent& msgData;
   ASN1C_ListAgent (
      ASN1MessageBuffer& msgBuf, ASN1T_ListAgent& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_ListAgent (ASN1CTXT* ctxt_p, ASN1T_ListAgent* pvalue);
EXTERN int asn1PD_ListAgent (ASN1CTXT* ctxt_p, ASN1T_ListAgent* pvalue);

EXTERN void asn1Print_ListAgent (ASN1ConstCharPtr name, ASN1T_ListAgent* pvalue);

/**************************************************************/
/*                                                            */
/*  Point                                                     */
/*                                                            */
/**************************************************************/

typedef ASN1T_Localisation ASN1T_Point;

class EXTERN ASN1C_Point : public ASN1CType {
public:
   ASN1T_Point& msgData;
   ASN1C_Point (
      ASN1MessageBuffer& msgBuf, ASN1T_Point& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Point (ASN1CTXT* ctxt_p, ASN1T_Point* pvalue);
EXTERN int asn1PD_Point (ASN1CTXT* ctxt_p, ASN1T_Point* pvalue);

EXTERN void asn1Print_Point (ASN1ConstCharPtr name, ASN1T_Point* pvalue);

/**************************************************************/
/*                                                            */
/*  NatureAtlas                                               */
/*                                                            */
/**************************************************************/

/* Named bit constants */

#define BitMblinde                          0x80
#define BytXblinde                          0
#define BitMass                             0x40
#define BytXass                             0
#define BitMpc                              0x20
#define BytXpc                              0
#define BitMlog                             0x10
#define BytXlog                             0
#define BitMmortier                         0x08
#define BytXmortier                         0
#define BitMlance_roquette                  0x04
#define BytXlance_roquette                  0
#define BitMvehicule                        0x02
#define BytXvehicule                        0
#define BitMpersonnel_a_pied                0x01
#define BytXpersonnel_a_pied                0
#define BitMhelicoptere                     0x80
#define BytXhelicoptere                     1
#define BitMindefini                        0x40
#define BytXindefini                        1
#define BitMasa                             0x20
#define BytXasa                             1
#define BitMnone                            0x10
#define BytXnone                            1

typedef struct EXTERN ASN1T_NatureAtlas {
   ASN1UINT  numbits;
   ASN1OCTET data[2];
   // ctors
   ASN1T_NatureAtlas () : numbits(0) {}
   ASN1T_NatureAtlas (ASN1UINT _numbits, const ASN1OCTET* _data) :
      numbits(_numbits) {
      memcpy (data, _data, sizeof(data));
   }
} ASN1T_NatureAtlas;

class EXTERN ASN1C_NatureAtlas : public ASN1CBitStr {
public:
   // named bits
   enum { blinde = 0, ass = 1, pc = 2, log = 3, mortier = 4, lance_roquette = 5, vehicule = 6, personnel_a_pied = 7, helicoptere = 8, indefini = 9, asa = 10, none = 11 };

   ASN1T_NatureAtlas& msgData;
   ASN1C_NatureAtlas (
      ASN1MessageBuffer& msgBuf, ASN1T_NatureAtlas& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_NatureAtlas (ASN1CTXT* ctxt_p, ASN1T_NatureAtlas value);
EXTERN int asn1PD_NatureAtlas (ASN1CTXT* ctxt_p, ASN1T_NatureAtlas* pvalue);

EXTERN void asn1Print_NatureAtlas (ASN1ConstCharPtr name, ASN1T_NatureAtlas* pvalue);

/**************************************************************/
/*                                                            */
/*  KnowledgeObject                                           */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_KnowledgeObject;

class EXTERN ASN1C_KnowledgeObject : public ASN1CType {
public:
   ASN1T_KnowledgeObject& msgData;
   ASN1C_KnowledgeObject (
      ASN1MessageBuffer& msgBuf, ASN1T_KnowledgeObject& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_KnowledgeObject (ASN1CTXT* ctxt_p, ASN1T_KnowledgeObject value);
EXTERN int asn1PD_KnowledgeObject (ASN1CTXT* ctxt_p, ASN1T_KnowledgeObject* pvalue);

EXTERN void asn1Print_KnowledgeObject (ASN1ConstCharPtr name, ASN1T_KnowledgeObject* pvalue);

/**************************************************************/
/*                                                            */
/*  ListKnowledgeObject                                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_ListKnowledgeObject {
   ASN1UINT n;
   ASN1T_KnowledgeObject *elem;
} ASN1T_ListKnowledgeObject;

class EXTERN ASN1C_ListKnowledgeObject : public ASN1CType {
public:
   ASN1T_ListKnowledgeObject& msgData;
   ASN1C_ListKnowledgeObject (
      ASN1MessageBuffer& msgBuf, ASN1T_ListKnowledgeObject& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_ListKnowledgeObject (ASN1CTXT* ctxt_p, ASN1T_ListKnowledgeObject* pvalue);
EXTERN int asn1PD_ListKnowledgeObject (ASN1CTXT* ctxt_p, ASN1T_ListKnowledgeObject* pvalue);

EXTERN void asn1Print_ListKnowledgeObject (ASN1ConstCharPtr name, ASN1T_ListKnowledgeObject* pvalue);

/**************************************************************/
/*                                                            */
/*  ListPoint                                                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_ListPoint {
   ASN1UINT n;
   ASN1T_Point *elem;
} ASN1T_ListPoint;

class EXTERN ASN1C_ListPoint : public ASN1CType {
public:
   ASN1T_ListPoint& msgData;
   ASN1C_ListPoint (
      ASN1MessageBuffer& msgBuf, ASN1T_ListPoint& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_ListPoint (ASN1CTXT* ctxt_p, ASN1T_ListPoint* pvalue);
EXTERN int asn1PD_ListPoint (ASN1CTXT* ctxt_p, ASN1T_ListPoint* pvalue);

EXTERN void asn1Print_ListPoint (ASN1ConstCharPtr name, ASN1T_ListPoint* pvalue);

/**************************************************************/
/*                                                            */
/*  Angle                                                     */
/*                                                            */
/**************************************************************/

typedef ASN1INT  ASN1T_Angle;

class EXTERN ASN1C_Angle : public ASN1CType {
public:
   ASN1T_Angle& msgData;
   ASN1C_Angle (
      ASN1MessageBuffer& msgBuf, ASN1T_Angle& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Angle (ASN1CTXT* ctxt_p, ASN1T_Angle value);
EXTERN int asn1PD_Angle (ASN1CTXT* ctxt_p, ASN1T_Angle* pvalue);

EXTERN void asn1Print_Angle (ASN1ConstCharPtr name, ASN1T_Angle* pvalue);

/**************************************************************/
/*                                                            */
/*  ListItineraire                                            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_ListItineraire {
   ASN1UINT n;
   ASN1T_Itineraire *elem;
} ASN1T_ListItineraire;

class EXTERN ASN1C_ListItineraire : public ASN1CType {
public:
   ASN1T_ListItineraire& msgData;
   ASN1C_ListItineraire (
      ASN1MessageBuffer& msgBuf, ASN1T_ListItineraire& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_ListItineraire (ASN1CTXT* ctxt_p, ASN1T_ListItineraire* pvalue);
EXTERN int asn1PD_ListItineraire (ASN1CTXT* ctxt_p, ASN1T_ListItineraire* pvalue);

EXTERN void asn1Print_ListItineraire (ASN1ConstCharPtr name, ASN1T_ListItineraire* pvalue);

/**************************************************************/
/*                                                            */
/*  ListPolygon                                               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_ListPolygon {
   ASN1UINT n;
   ASN1T_Polygon *elem;
} ASN1T_ListPolygon;

class EXTERN ASN1C_ListPolygon : public ASN1CType {
public:
   ASN1T_ListPolygon& msgData;
   ASN1C_ListPolygon (
      ASN1MessageBuffer& msgBuf, ASN1T_ListPolygon& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_ListPolygon (ASN1CTXT* ctxt_p, ASN1T_ListPolygon* pvalue);
EXTERN int asn1PD_ListPolygon (ASN1CTXT* ctxt_p, ASN1T_ListPolygon* pvalue);

EXTERN void asn1Print_ListPolygon (ASN1ConstCharPtr name, ASN1T_ListPolygon* pvalue);

/**************************************************************/
/*                                                            */
/*  ListOID                                                   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_ListOID {
   ASN1UINT n;
   ASN1T_OID *elem;
} ASN1T_ListOID;

class EXTERN ASN1C_ListOID : public ASN1CType {
public:
   ASN1T_ListOID& msgData;
   ASN1C_ListOID (
      ASN1MessageBuffer& msgBuf, ASN1T_ListOID& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_ListOID (ASN1CTXT* ctxt_p, ASN1T_ListOID* pvalue);
EXTERN int asn1PD_ListOID (ASN1CTXT* ctxt_p, ASN1T_ListOID* pvalue);

EXTERN void asn1Print_ListOID (ASN1ConstCharPtr name, ASN1T_ListOID* pvalue);

/**************************************************************/
/*                                                            */
/*  KnowledgeAgent                                            */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_KnowledgeAgent;

class EXTERN ASN1C_KnowledgeAgent : public ASN1CType {
public:
   ASN1T_KnowledgeAgent& msgData;
   ASN1C_KnowledgeAgent (
      ASN1MessageBuffer& msgBuf, ASN1T_KnowledgeAgent& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_KnowledgeAgent (ASN1CTXT* ctxt_p, ASN1T_KnowledgeAgent value);
EXTERN int asn1PD_KnowledgeAgent (ASN1CTXT* ctxt_p, ASN1T_KnowledgeAgent* pvalue);

EXTERN void asn1Print_KnowledgeAgent (ASN1ConstCharPtr name, ASN1T_KnowledgeAgent* pvalue);

/**************************************************************/
/*                                                            */
/*  ListKnowledgeAgent                                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_ListKnowledgeAgent {
   ASN1UINT n;
   ASN1T_KnowledgeAgent *elem;
} ASN1T_ListKnowledgeAgent;

class EXTERN ASN1C_ListKnowledgeAgent : public ASN1CType {
public:
   ASN1T_ListKnowledgeAgent& msgData;
   ASN1C_ListKnowledgeAgent (
      ASN1MessageBuffer& msgBuf, ASN1T_ListKnowledgeAgent& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_ListKnowledgeAgent (ASN1CTXT* ctxt_p, ASN1T_ListKnowledgeAgent* pvalue);
EXTERN int asn1PD_ListKnowledgeAgent (ASN1CTXT* ctxt_p, ASN1T_ListKnowledgeAgent* pvalue);

EXTERN void asn1Print_ListKnowledgeAgent (ASN1ConstCharPtr name, ASN1T_ListKnowledgeAgent* pvalue);

/**************************************************************/
/*                                                            */
/*  Line                                                      */
/*                                                            */
/**************************************************************/

typedef ASN1T_Localisation ASN1T_Line;

class EXTERN ASN1C_Line : public ASN1CType {
public:
   ASN1T_Line& msgData;
   ASN1C_Line (
      ASN1MessageBuffer& msgBuf, ASN1T_Line& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Line (ASN1CTXT* ctxt_p, ASN1T_Line* pvalue);
EXTERN int asn1PD_Line (ASN1CTXT* ctxt_p, ASN1T_Line* pvalue);

EXTERN void asn1Print_Line (ASN1ConstCharPtr name, ASN1T_Line* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumGDH_Qualificatif                                      */
/*                                                            */
/**************************************************************/

struct EXTERN EnumGDH_Qualificatif {
   enum Root {
      at = 0,
      after = 1,
      as_of = 2,
      before = 3,
      cleared = 4,
      due = 5,
      end = 6,
      off = 7,
      on = 8,
      since = 9,
      start = 10,
      until = 11,
      wef = 12
   } ;
} ;

typedef EnumGDH_Qualificatif::Root ASN1T_EnumGDH_Qualificatif;

class EXTERN ASN1C_EnumGDH_Qualificatif : public ASN1CType {
public:
   ASN1T_EnumGDH_Qualificatif& msgData;
   ASN1C_EnumGDH_Qualificatif (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumGDH_Qualificatif& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumGDH_Qualificatif (ASN1CTXT* ctxt_p, ASN1T_EnumGDH_Qualificatif value);
EXTERN int asn1PD_EnumGDH_Qualificatif (ASN1CTXT* ctxt_p, ASN1T_EnumGDH_Qualificatif* pvalue);

EXTERN void asn1Print_EnumGDH_Qualificatif (ASN1ConstCharPtr name, ASN1T_EnumGDH_Qualificatif* pvalue);

/**************************************************************/
/*                                                            */
/*  GDH                                                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_GDH {
   ASN1UINT  datation;
   ASN1T_EnumGDH_Qualificatif  qualificatif;
} ASN1T_GDH;

class EXTERN ASN1C_GDH : public ASN1CType {
public:
   ASN1T_GDH& msgData;
   ASN1C_GDH (
      ASN1MessageBuffer& msgBuf, ASN1T_GDH& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_GDH (ASN1CTXT* ctxt_p, ASN1T_GDH* pvalue);
EXTERN int asn1PD_GDH (ASN1CTXT* ctxt_p, ASN1T_GDH* pvalue);

EXTERN void asn1Print_GDH (ASN1ConstCharPtr name, ASN1T_GDH* pvalue);

/**************************************************************/
/*                                                            */
/*  Direction                                                 */
/*                                                            */
/**************************************************************/

typedef ASN1INT  ASN1T_Direction;

class EXTERN ASN1C_Direction : public ASN1CType {
public:
   ASN1T_Direction& msgData;
   ASN1C_Direction (
      ASN1MessageBuffer& msgBuf, ASN1T_Direction& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Direction (ASN1CTXT* ctxt_p, ASN1T_Direction value);
EXTERN int asn1PD_Direction (ASN1CTXT* ctxt_p, ASN1T_Direction* pvalue);

EXTERN void asn1Print_Direction (ASN1ConstCharPtr name, ASN1T_Direction* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumUnitIdentificationLevel                               */
/*                                                            */
/**************************************************************/

struct EXTERN EnumUnitIdentificationLevel {
   enum Root {
      identifiee = 0,
      reconnue = 1,
      detectee = 2,
      signale = 3
   } ;
} ;

typedef EnumUnitIdentificationLevel::Root ASN1T_EnumUnitIdentificationLevel;

class EXTERN ASN1C_EnumUnitIdentificationLevel : public ASN1CType {
public:
   ASN1T_EnumUnitIdentificationLevel& msgData;
   ASN1C_EnumUnitIdentificationLevel (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumUnitIdentificationLevel& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumUnitIdentificationLevel (ASN1CTXT* ctxt_p, ASN1T_EnumUnitIdentificationLevel value);
EXTERN int asn1PD_EnumUnitIdentificationLevel (ASN1CTXT* ctxt_p, ASN1T_EnumUnitIdentificationLevel* pvalue);

EXTERN void asn1Print_EnumUnitIdentificationLevel (ASN1ConstCharPtr name, ASN1T_EnumUnitIdentificationLevel* pvalue);

/**************************************************************/
/*                                                            */
/*  Segment                                                   */
/*                                                            */
/**************************************************************/

typedef ASN1T_Localisation ASN1T_Segment;

class EXTERN ASN1C_Segment : public ASN1CType {
public:
   ASN1T_Segment& msgData;
   ASN1C_Segment (
      ASN1MessageBuffer& msgBuf, ASN1T_Segment& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Segment (ASN1CTXT* ctxt_p, ASN1T_Segment* pvalue);
EXTERN int asn1PD_Segment (ASN1CTXT* ctxt_p, ASN1T_Segment* pvalue);

EXTERN void asn1Print_Segment (ASN1ConstCharPtr name, ASN1T_Segment* pvalue);

/**************************************************************/
/*                                                            */
/*  Circle                                                    */
/*                                                            */
/**************************************************************/

typedef ASN1T_Localisation ASN1T_Circle;

class EXTERN ASN1C_Circle : public ASN1CType {
public:
   ASN1T_Circle& msgData;
   ASN1C_Circle (
      ASN1MessageBuffer& msgBuf, ASN1T_Circle& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Circle (ASN1CTXT* ctxt_p, ASN1T_Circle* pvalue);
EXTERN int asn1PD_Circle (ASN1CTXT* ctxt_p, ASN1T_Circle* pvalue);

EXTERN void asn1Print_Circle (ASN1ConstCharPtr name, ASN1T_Circle* pvalue);

/**************************************************************/
/*                                                            */
/*  Ellipse                                                   */
/*                                                            */
/**************************************************************/

typedef ASN1T_Localisation ASN1T_Ellipse;

class EXTERN ASN1C_Ellipse : public ASN1CType {
public:
   ASN1T_Ellipse& msgData;
   ASN1C_Ellipse (
      ASN1MessageBuffer& msgBuf, ASN1T_Ellipse& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Ellipse (ASN1CTXT* ctxt_p, ASN1T_Ellipse* pvalue);
EXTERN int asn1PD_Ellipse (ASN1CTXT* ctxt_p, ASN1T_Ellipse* pvalue);

EXTERN void asn1Print_Ellipse (ASN1ConstCharPtr name, ASN1T_Ellipse* pvalue);

/**************************************************************/
/*                                                            */
/*  Sector                                                    */
/*                                                            */
/**************************************************************/

typedef ASN1T_Localisation ASN1T_Sector;

class EXTERN ASN1C_Sector : public ASN1CType {
public:
   ASN1T_Sector& msgData;
   ASN1C_Sector (
      ASN1MessageBuffer& msgBuf, ASN1T_Sector& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Sector (ASN1CTXT* ctxt_p, ASN1T_Sector* pvalue);
EXTERN int asn1PD_Sector (ASN1CTXT* ctxt_p, ASN1T_Sector* pvalue);

EXTERN void asn1Print_Sector (ASN1ConstCharPtr name, ASN1T_Sector* pvalue);

/**************************************************************/
/*                                                            */
/*  ListLocalisation                                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_ListLocalisation {
   ASN1UINT n;
   ASN1T_Localisation *elem;
} ASN1T_ListLocalisation;

class EXTERN ASN1C_ListLocalisation : public ASN1CType {
public:
   ASN1T_ListLocalisation& msgData;
   ASN1C_ListLocalisation (
      ASN1MessageBuffer& msgBuf, ASN1T_ListLocalisation& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_ListLocalisation (ASN1CTXT* ctxt_p, ASN1T_ListLocalisation* pvalue);
EXTERN int asn1PD_ListLocalisation (ASN1CTXT* ctxt_p, ASN1T_ListLocalisation* pvalue);

EXTERN void asn1Print_ListLocalisation (ASN1ConstCharPtr name, ASN1T_ListLocalisation* pvalue);

/**************************************************************/
/*                                                            */
/*  TirIndirect                                               */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_TirIndirect;

class EXTERN ASN1C_TirIndirect : public ASN1CType {
public:
   ASN1T_TirIndirect& msgData;
   ASN1C_TirIndirect (
      ASN1MessageBuffer& msgBuf, ASN1T_TirIndirect& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_TirIndirect (ASN1CTXT* ctxt_p, ASN1T_TirIndirect value);
EXTERN int asn1PD_TirIndirect (ASN1CTXT* ctxt_p, ASN1T_TirIndirect* pvalue);

EXTERN void asn1Print_TirIndirect (ASN1ConstCharPtr name, ASN1T_TirIndirect* pvalue);

/**************************************************************/
/*                                                            */
/*  TirDirect                                                 */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_TirDirect;

class EXTERN ASN1C_TirDirect : public ASN1CType {
public:
   ASN1T_TirDirect& msgData;
   ASN1C_TirDirect (
      ASN1MessageBuffer& msgBuf, ASN1T_TirDirect& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_TirDirect (ASN1CTXT* ctxt_p, ASN1T_TirDirect value);
EXTERN int asn1PD_TirDirect (ASN1CTXT* ctxt_p, ASN1T_TirDirect* pvalue);

EXTERN void asn1Print_TirDirect (ASN1ConstCharPtr name, ASN1T_TirDirect* pvalue);

/**************************************************************/
/*                                                            */
/*  Population                                                */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_Population;

class EXTERN ASN1C_Population : public ASN1CType {
public:
   ASN1T_Population& msgData;
   ASN1C_Population (
      ASN1MessageBuffer& msgBuf, ASN1T_Population& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Population (ASN1CTXT* ctxt_p, ASN1T_Population value);
EXTERN int asn1PD_Population (ASN1CTXT* ctxt_p, ASN1T_Population* pvalue);

EXTERN void asn1Print_Population (ASN1ConstCharPtr name, ASN1T_Population* pvalue);

/**************************************************************/
/*                                                            */
/*  ListAutomate                                              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_ListAutomate {
   ASN1UINT n;
   ASN1T_Automate *elem;
} ASN1T_ListAutomate;

class EXTERN ASN1C_ListAutomate : public ASN1CType {
public:
   ASN1T_ListAutomate& msgData;
   ASN1C_ListAutomate (
      ASN1MessageBuffer& msgBuf, ASN1T_ListAutomate& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_ListAutomate (ASN1CTXT* ctxt_p, ASN1T_ListAutomate* pvalue);
EXTERN int asn1PD_ListAutomate (ASN1CTXT* ctxt_p, ASN1T_ListAutomate* pvalue);

EXTERN void asn1Print_ListAutomate (ASN1ConstCharPtr name, ASN1T_ListAutomate* pvalue);

/**************************************************************/
/*                                                            */
/*  TypeEquipement                                            */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_TypeEquipement;

class EXTERN ASN1C_TypeEquipement : public ASN1CType {
public:
   ASN1T_TypeEquipement& msgData;
   ASN1C_TypeEquipement (
      ASN1MessageBuffer& msgBuf, ASN1T_TypeEquipement& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_TypeEquipement (ASN1CTXT* ctxt_p, ASN1T_TypeEquipement value);
EXTERN int asn1PD_TypeEquipement (ASN1CTXT* ctxt_p, ASN1T_TypeEquipement* pvalue);

EXTERN void asn1Print_TypeEquipement (ASN1ConstCharPtr name, ASN1T_TypeEquipement* pvalue);

/**************************************************************/
/*                                                            */
/*  TypeDotation                                              */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_TypeDotation;

class EXTERN ASN1C_TypeDotation : public ASN1CType {
public:
   ASN1T_TypeDotation& msgData;
   ASN1C_TypeDotation (
      ASN1MessageBuffer& msgBuf, ASN1T_TypeDotation& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_TypeDotation (ASN1CTXT* ctxt_p, ASN1T_TypeDotation value);
EXTERN int asn1PD_TypeDotation (ASN1CTXT* ctxt_p, ASN1T_TypeDotation* pvalue);

EXTERN void asn1Print_TypeDotation (ASN1ConstCharPtr name, ASN1T_TypeDotation* pvalue);

/**************************************************************/
/*                                                            */
/*  TypePanne                                                 */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_TypePanne;

class EXTERN ASN1C_TypePanne : public ASN1CType {
public:
   ASN1T_TypePanne& msgData;
   ASN1C_TypePanne (
      ASN1MessageBuffer& msgBuf, ASN1T_TypePanne& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_TypePanne (ASN1CTXT* ctxt_p, ASN1T_TypePanne value);
EXTERN int asn1PD_TypePanne (ASN1CTXT* ctxt_p, ASN1T_TypePanne* pvalue);

EXTERN void asn1Print_TypePanne (ASN1ConstCharPtr name, ASN1T_TypePanne* pvalue);

/**************************************************************/
/*                                                            */
/*  TypePion                                                  */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_TypePion;

class EXTERN ASN1C_TypePion : public ASN1CType {
public:
   ASN1T_TypePion& msgData;
   ASN1C_TypePion (
      ASN1MessageBuffer& msgBuf, ASN1T_TypePion& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_TypePion (ASN1CTXT* ctxt_p, ASN1T_TypePion value);
EXTERN int asn1PD_TypePion (ASN1CTXT* ctxt_p, ASN1T_TypePion* pvalue);

EXTERN void asn1Print_TypePion (ASN1ConstCharPtr name, ASN1T_TypePion* pvalue);

/**************************************************************/
/*                                                            */
/*  TypeAutomate                                              */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_TypeAutomate;

class EXTERN ASN1C_TypeAutomate : public ASN1CType {
public:
   ASN1T_TypeAutomate& msgData;
   ASN1C_TypeAutomate (
      ASN1MessageBuffer& msgBuf, ASN1T_TypeAutomate& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_TypeAutomate (ASN1CTXT* ctxt_p, ASN1T_TypeAutomate value);
EXTERN int asn1PD_TypeAutomate (ASN1CTXT* ctxt_p, ASN1T_TypeAutomate* pvalue);

EXTERN void asn1Print_TypeAutomate (ASN1ConstCharPtr name, ASN1T_TypeAutomate* pvalue);

/**************************************************************/
/*                                                            */
/*  TypePopulation                                            */
/*                                                            */
/**************************************************************/

typedef ASN1T_OID ASN1T_TypePopulation;

class EXTERN ASN1C_TypePopulation : public ASN1CType {
public:
   ASN1T_TypePopulation& msgData;
   ASN1C_TypePopulation (
      ASN1MessageBuffer& msgBuf, ASN1T_TypePopulation& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_TypePopulation (ASN1CTXT* ctxt_p, ASN1T_TypePopulation value);
EXTERN int asn1PD_TypePopulation (ASN1CTXT* ctxt_p, ASN1T_TypePopulation* pvalue);

EXTERN void asn1Print_TypePopulation (ASN1ConstCharPtr name, ASN1T_TypePopulation* pvalue);

/**************************************************************/
/*                                                            */
/*  Pourcentage                                               */
/*                                                            */
/**************************************************************/

typedef ASN1INT  ASN1T_Pourcentage;

class EXTERN ASN1C_Pourcentage : public ASN1CType {
public:
   ASN1T_Pourcentage& msgData;
   ASN1C_Pourcentage (
      ASN1MessageBuffer& msgBuf, ASN1T_Pourcentage& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Pourcentage (ASN1CTXT* ctxt_p, ASN1T_Pourcentage value);
EXTERN int asn1PD_Pourcentage (ASN1CTXT* ctxt_p, ASN1T_Pourcentage* pvalue);

EXTERN void asn1Print_Pourcentage (ASN1ConstCharPtr name, ASN1T_Pourcentage* pvalue);

/**************************************************************/
/*                                                            */
/*  PourcentageLibre                                          */
/*                                                            */
/**************************************************************/

typedef ASN1UINT ASN1T_PourcentageLibre;

class EXTERN ASN1C_PourcentageLibre : public ASN1CType {
public:
   ASN1T_PourcentageLibre& msgData;
   ASN1C_PourcentageLibre (
      ASN1MessageBuffer& msgBuf, ASN1T_PourcentageLibre& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_PourcentageLibre (ASN1CTXT* ctxt_p, ASN1T_PourcentageLibre value);
EXTERN int asn1PD_PourcentageLibre (ASN1CTXT* ctxt_p, ASN1T_PourcentageLibre* pvalue);

EXTERN void asn1Print_PourcentageLibre (ASN1ConstCharPtr name, ASN1T_PourcentageLibre* pvalue);

/**************************************************************/
/*                                                            */
/*  Hauteur                                                   */
/*                                                            */
/**************************************************************/

typedef ASN1UINT ASN1T_Hauteur;

class EXTERN ASN1C_Hauteur : public ASN1CType {
public:
   ASN1T_Hauteur& msgData;
   ASN1C_Hauteur (
      ASN1MessageBuffer& msgBuf, ASN1T_Hauteur& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Hauteur (ASN1CTXT* ctxt_p, ASN1T_Hauteur value);
EXTERN int asn1PD_Hauteur (ASN1CTXT* ctxt_p, ASN1T_Hauteur* pvalue);

EXTERN void asn1Print_Hauteur (ASN1ConstCharPtr name, ASN1T_Hauteur* pvalue);

/**************************************************************/
/*                                                            */
/*  Altitude                                                  */
/*                                                            */
/**************************************************************/

typedef ASN1UINT ASN1T_Altitude;

class EXTERN ASN1C_Altitude : public ASN1CType {
public:
   ASN1T_Altitude& msgData;
   ASN1C_Altitude (
      ASN1MessageBuffer& msgBuf, ASN1T_Altitude& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Altitude (ASN1CTXT* ctxt_p, ASN1T_Altitude value);
EXTERN int asn1PD_Altitude (ASN1CTXT* ctxt_p, ASN1T_Altitude* pvalue);

EXTERN void asn1Print_Altitude (ASN1ConstCharPtr name, ASN1T_Altitude* pvalue);

/**************************************************************/
/*                                                            */
/*  Vitesse                                                   */
/*                                                            */
/**************************************************************/

typedef ASN1UINT ASN1T_Vitesse;

class EXTERN ASN1C_Vitesse : public ASN1CType {
public:
   ASN1T_Vitesse& msgData;
   ASN1C_Vitesse (
      ASN1MessageBuffer& msgBuf, ASN1T_Vitesse& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_Vitesse (ASN1CTXT* ctxt_p, ASN1T_Vitesse value);
EXTERN int asn1PD_Vitesse (ASN1CTXT* ctxt_p, ASN1T_Vitesse* pvalue);

EXTERN void asn1Print_Vitesse (ASN1ConstCharPtr name, ASN1T_Vitesse* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumFamilleDotation                                       */
/*                                                            */
/**************************************************************/

struct EXTERN EnumFamilleDotation {
   enum Root {
      munition = 0,
      carburant = 1,
      explosif = 2,
      mine = 3,
      barbele = 4,
      piece = 5,
      ration = 6
   } ;
} ;

typedef EnumFamilleDotation::Root ASN1T_EnumFamilleDotation;

class EXTERN ASN1C_EnumFamilleDotation : public ASN1CType {
public:
   ASN1T_EnumFamilleDotation& msgData;
   ASN1C_EnumFamilleDotation (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumFamilleDotation& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumFamilleDotation (ASN1CTXT* ctxt_p, ASN1T_EnumFamilleDotation value);
EXTERN int asn1PD_EnumFamilleDotation (ASN1CTXT* ctxt_p, ASN1T_EnumFamilleDotation* pvalue);

EXTERN void asn1Print_EnumFamilleDotation (ASN1ConstCharPtr name, ASN1T_EnumFamilleDotation* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumFamilleMunition                                       */
/*                                                            */
/**************************************************************/

struct EXTERN EnumFamilleMunition {
   enum Root {
      obus = 0,
      missile_air = 1,
      missile_sol = 2,
      mitraille = 3
   } ;
} ;

typedef EnumFamilleMunition::Root ASN1T_EnumFamilleMunition;

class EXTERN ASN1C_EnumFamilleMunition : public ASN1CType {
public:
   ASN1T_EnumFamilleMunition& msgData;
   ASN1C_EnumFamilleMunition (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumFamilleMunition& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumFamilleMunition (ASN1CTXT* ctxt_p, ASN1T_EnumFamilleMunition value);
EXTERN int asn1PD_EnumFamilleMunition (ASN1CTXT* ctxt_p, ASN1T_EnumFamilleMunition* pvalue);

EXTERN void asn1Print_EnumFamilleMunition (ASN1ConstCharPtr name, ASN1T_EnumFamilleMunition* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumUnitNatureWeapon                                      */
/*                                                            */
/**************************************************************/

struct EXTERN EnumUnitNatureWeapon {
   enum Root {
      none = 0,
      antichar = 1,
      administration = 2,
      defense_aerienne = 3,
      centre_soutien_operations_aeriennes = 4,
      blinde = 5,
      aviation = 6,
      cavalerie = 7,
      genie = 8,
      deminage = 9,
      soutien_artillerie = 10,
      artillerie = 11,
      infanterie = 12,
      guerre_information = 13,
      forces_securite_interne = 14,
      execution_loi = 15,
      soutien_atterrissage = 16,
      logistique = 17,
      reparation = 18,
      manoeuvre = 19,
      medical = 20,
      renseignement_militaire = 21,
      missile = 22,
      nbc = 23,
      inconnue = 24,
      non_specifiee = 25,
      reconnaissance = 26,
      transmissions = 27,
      ravitaillement = 28,
      tactical_air_control_party = 29,
      transport = 30
   } ;
} ;

typedef EnumUnitNatureWeapon::Root ASN1T_EnumUnitNatureWeapon;

class EXTERN ASN1C_EnumUnitNatureWeapon : public ASN1CType {
public:
   ASN1T_EnumUnitNatureWeapon& msgData;
   ASN1C_EnumUnitNatureWeapon (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumUnitNatureWeapon& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumUnitNatureWeapon (ASN1CTXT* ctxt_p, ASN1T_EnumUnitNatureWeapon value);
EXTERN int asn1PD_EnumUnitNatureWeapon (ASN1CTXT* ctxt_p, ASN1T_EnumUnitNatureWeapon* pvalue);

EXTERN void asn1Print_EnumUnitNatureWeapon (ASN1ConstCharPtr name, ASN1T_EnumUnitNatureWeapon* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumUnitNatureSpecialization                              */
/*                                                            */
/**************************************************************/

struct EXTERN EnumUnitNatureSpecialization {
   enum Root {
      none = 0,
      aerien = 1,
      attaque_aerienne = 2,
      aeroporte = 3,
      blinde = 4,
      compose = 5,
      construction = 6,
      dentiste = 7,
      guerre_electronique = 8,
      finance = 9,
      voilure_fixe = 10,
      terrestre = 11,
      helicoptere = 12,
      jag = 13,
      mecanise = 14,
      police_militaire = 15,
      motorise = 16,
      naval = 17,
      service_du_personnel = 18,
      courrier = 19,
      psychologique = 20,
      chemin_de_fer = 21,
      religieux = 22,
      riverine = 23,
      security_police = 24,
      patrouille_cotiere = 25,
      chirurgie = 26,
      veterinaire = 27,
      decollage_atterissage_vertical_court = 28
   } ;
} ;

typedef EnumUnitNatureSpecialization::Root ASN1T_EnumUnitNatureSpecialization;

class EXTERN ASN1C_EnumUnitNatureSpecialization : public ASN1CType {
public:
   ASN1T_EnumUnitNatureSpecialization& msgData;
   ASN1C_EnumUnitNatureSpecialization (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumUnitNatureSpecialization& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumUnitNatureSpecialization (ASN1CTXT* ctxt_p, ASN1T_EnumUnitNatureSpecialization value);
EXTERN int asn1PD_EnumUnitNatureSpecialization (ASN1CTXT* ctxt_p, ASN1T_EnumUnitNatureSpecialization* pvalue);

EXTERN void asn1Print_EnumUnitNatureSpecialization (ASN1ConstCharPtr name, ASN1T_EnumUnitNatureSpecialization* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumUnitNatureQualifier                                   */
/*                                                            */
/**************************************************************/

struct EXTERN EnumUnitNatureQualifier {
   enum Root {
      none = 0,
      lourd = 1,
      leger = 2,
      moyen = 3
   } ;
} ;

typedef EnumUnitNatureQualifier::Root ASN1T_EnumUnitNatureQualifier;

class EXTERN ASN1C_EnumUnitNatureQualifier : public ASN1CType {
public:
   ASN1T_EnumUnitNatureQualifier& msgData;
   ASN1C_EnumUnitNatureQualifier (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumUnitNatureQualifier& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumUnitNatureQualifier (ASN1CTXT* ctxt_p, ASN1T_EnumUnitNatureQualifier value);
EXTERN int asn1PD_EnumUnitNatureQualifier (ASN1CTXT* ctxt_p, ASN1T_EnumUnitNatureQualifier* pvalue);

EXTERN void asn1Print_EnumUnitNatureQualifier (ASN1ConstCharPtr name, ASN1T_EnumUnitNatureQualifier* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumUnitNatureCategory                                    */
/*                                                            */
/**************************************************************/

struct EXTERN EnumUnitNatureCategory {
   enum Root {
      none = 0,
      combat = 1,
      soutien_logistique = 2,
      combat_support = 3,
      inconnu = 4
   } ;
} ;

typedef EnumUnitNatureCategory::Root ASN1T_EnumUnitNatureCategory;

class EXTERN ASN1C_EnumUnitNatureCategory : public ASN1CType {
public:
   ASN1T_EnumUnitNatureCategory& msgData;
   ASN1C_EnumUnitNatureCategory (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumUnitNatureCategory& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumUnitNatureCategory (ASN1CTXT* ctxt_p, ASN1T_EnumUnitNatureCategory value);
EXTERN int asn1PD_EnumUnitNatureCategory (ASN1CTXT* ctxt_p, ASN1T_EnumUnitNatureCategory* pvalue);

EXTERN void asn1Print_EnumUnitNatureCategory (ASN1ConstCharPtr name, ASN1T_EnumUnitNatureCategory* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumUnitNatureMobility                                    */
/*                                                            */
/**************************************************************/

struct EXTERN EnumUnitNatureMobility {
   enum Root {
      none = 0,
      aeroporte = 1,
      aerien_compose = 2,
      aerien_voilure_fixe = 3,
      aerien_plus_leger_que_air = 4,
      aerien_ailes_rotatives = 5,
      aerien_amphibie = 6,
      animal_monte = 7,
      demonte = 8,
      terrestre_chemin_de_fer = 9,
      terrestre_auto_propulse = 10,
      terrestre_chenille = 11,
      terrestre_remorque = 12,
      terrestre_roues = 13,
      maritime_sous_marin = 14,
      maritime_surface = 15,
      inconnu = 16
   } ;
} ;

typedef EnumUnitNatureMobility::Root ASN1T_EnumUnitNatureMobility;

class EXTERN ASN1C_EnumUnitNatureMobility : public ASN1CType {
public:
   ASN1T_EnumUnitNatureMobility& msgData;
   ASN1C_EnumUnitNatureMobility (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumUnitNatureMobility& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumUnitNatureMobility (ASN1CTXT* ctxt_p, ASN1T_EnumUnitNatureMobility value);
EXTERN int asn1PD_EnumUnitNatureMobility (ASN1CTXT* ctxt_p, ASN1T_EnumUnitNatureMobility* pvalue);

EXTERN void asn1Print_EnumUnitNatureMobility (ASN1ConstCharPtr name, ASN1T_EnumUnitNatureMobility* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumUnitCapaciteMission                                   */
/*                                                            */
/**************************************************************/

struct EXTERN EnumUnitCapaciteMission {
   enum Root {
      civilian_law_enforcement = 0,
      command_operations = 1,
      couverture_aerienne = 2,
      joint_intelligence = 3,
      morale_welfare_recreation = 4,
      reglage_electronique = 5,
      remplacement = 6,
      service_mortuaire = 7,
      signals_intelligence = 8,
      theatre_missile_defence = 9,
      utilitaire = 10,
      aeroporte = 11,
      affaires_publiques = 12,
      affaires_publiques_communication = 13,
      affaires_publiques_joint_information = 14,
      alpin = 15,
      amphibie = 16,
      arctique = 17,
      artillerie_reconnaissance = 18,
      attaque = 19,
      attaque_aerienne = 20,
      c2 = 21,
      chemin_de_fer = 22,
      ciblage = 23,
      contre_espionnage = 24,
      eclairage = 25,
      entretien = 26,
      entretien_materiel = 27,
      entretien_missile = 28,
      entretien_opto_electronique = 29,
      espionnage = 30,
      espionnage_militaire_aerial_exploitation = 31,
      espionnage_militaire_operation = 32,
      espionnage_militaire_tactical_exploitation = 33,
      evacuation_sanitaire = 34,
      finance = 35,
      genie_combat = 36,
      genie_construction = 37,
      genie_construction_navale = 38,
      guerre_electronique = 39,
      guerre_electronique_interception = 40,
      guerre_electronique_brouillage = 41,
      guerre_electronique_detection = 42,
      interrogation = 43,
      main_d_oeuvre = 44,
      maintien_de_la_paix = 45,
      marine = 46,
      mine_de_contre_mesure = 47,
      nbc_biologique = 48,
      nbc_chimique = 49,
      nbc_chimique_fumee = 50,
      nbc_decontamination = 51,
      nbc_decontamination_chimique = 52,
      nbc_nucleaire = 53,
      non_renseigne = 54,
      observation = 55,
      observation_capteur = 56,
      observation_longue_portee = 57,
      observation_meteo = 58,
      observation_module_terrestre = 59,
      purification_de_l_eau = 60,
      ravitaillement_class_i = 61,
      ravitaillement_class_ii = 62,
      ravitaillement_class_iii_aviation = 63,
      ravitaillement_class_iii = 64,
      ravitaillement_class_iv = 65,
      ravitaillement_class_v = 66,
      ravitaillement_eau = 67,
      ravitaillement_blanchisserie_bain = 68,
      recherche_et_sauvetage = 69,
      reconnaissance = 70,
      reconnaissance_aerienne_tactique = 71,
      recuperation = 72,
      service_du_personnel = 73,
      service_juridique = 74,
      support_aerien_rapproche = 75,
      transmissions_forward_communications = 76,
      transmissions_node_centre = 77,
      transmissions_node_large_extension = 78,
      transmissions_node_small_extension = 79,
      transmissions_radio_relay = 80,
      transmissions_radio_tactical_satellite = 81,
      transmissions_radio_teletype = 82,
      transmissions_support = 83,
      transmissions_radio = 84,
      transport_allocation_des_mouvements = 85,
      transport_apod_apoe = 86,
      transport_spod_spoe = 87,
      transport_missile = 88,
      verrouillage_de_cible = 89,
      verrouillage_de_cible_flash = 90,
      verrouillage_de_cible_radar = 91,
      verrouillage_de_cible_sonore = 92
   } ;
} ;

typedef EnumUnitCapaciteMission::Root ASN1T_EnumUnitCapaciteMission;

class EXTERN ASN1C_EnumUnitCapaciteMission : public ASN1CType {
public:
   ASN1T_EnumUnitCapaciteMission& msgData;
   ASN1C_EnumUnitCapaciteMission (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumUnitCapaciteMission& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumUnitCapaciteMission (ASN1CTXT* ctxt_p, ASN1T_EnumUnitCapaciteMission value);
EXTERN int asn1PD_EnumUnitCapaciteMission (ASN1CTXT* ctxt_p, ASN1T_EnumUnitCapaciteMission* pvalue);

EXTERN void asn1Print_EnumUnitCapaciteMission (ASN1ConstCharPtr name, ASN1T_EnumUnitCapaciteMission* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumNatureLevel                                           */
/*                                                            */
/**************************************************************/

struct EXTERN EnumNatureLevel {
   enum Root {
      none = 0,
      o = 1,
      oo = 2,
      ooo = 3,
      i = 4,
      ii = 5,
      iii = 6,
      x = 7,
      xx = 8,
      xxx = 9,
      xxxx = 10,
      xxxxx = 11
   } ;
} ;

typedef EnumNatureLevel::Root ASN1T_EnumNatureLevel;

class EXTERN ASN1C_EnumNatureLevel : public ASN1CType {
public:
   ASN1T_EnumNatureLevel& msgData;
   ASN1C_EnumNatureLevel (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumNatureLevel& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumNatureLevel (ASN1CTXT* ctxt_p, ASN1T_EnumNatureLevel value);
EXTERN int asn1PD_EnumNatureLevel (ASN1CTXT* ctxt_p, ASN1T_EnumNatureLevel* pvalue);

EXTERN void asn1Print_EnumNatureLevel (ASN1ConstCharPtr name, ASN1T_EnumNatureLevel* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumHumanWound                                            */
/*                                                            */
/**************************************************************/

struct EXTERN EnumHumanWound {
   enum Root {
      non_blesse = 0,
      mort = 1,
      blesse_urgence_1 = 2,
      blesse_urgence_2 = 3,
      blesse_urgence_3 = 4,
      blesse_urgence_extreme = 5
   } ;
} ;

typedef EnumHumanWound::Root ASN1T_EnumHumanWound;

class EXTERN ASN1C_EnumHumanWound : public ASN1CType {
public:
   ASN1T_EnumHumanWound& msgData;
   ASN1C_EnumHumanWound (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumHumanWound& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumHumanWound (ASN1CTXT* ctxt_p, ASN1T_EnumHumanWound value);
EXTERN int asn1PD_EnumHumanWound (ASN1CTXT* ctxt_p, ASN1T_EnumHumanWound* pvalue);

EXTERN void asn1Print_EnumHumanWound (ASN1ConstCharPtr name, ASN1T_EnumHumanWound* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumHumanRank                                             */
/*                                                            */
/**************************************************************/

struct EXTERN EnumHumanRank {
   enum Root {
      officier = 0,
      sous_officer = 1,
      mdr = 2
   } ;
} ;

typedef EnumHumanRank::Root ASN1T_EnumHumanRank;

class EXTERN ASN1C_EnumHumanRank : public ASN1CType {
public:
   ASN1T_EnumHumanRank& msgData;
   ASN1C_EnumHumanRank (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumHumanRank& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumHumanRank (ASN1CTXT* ctxt_p, ASN1T_EnumHumanRank value);
EXTERN int asn1PD_EnumHumanRank (ASN1CTXT* ctxt_p, ASN1T_EnumHumanRank* pvalue);

EXTERN void asn1Print_EnumHumanRank (ASN1ConstCharPtr name, ASN1T_EnumHumanRank* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumTempsBordee                                           */
/*                                                            */
/**************************************************************/

struct EXTERN EnumTempsBordee {
   enum Root {
      temps_8_heures = 0,
      temps_12_heures = 1,
      temps_16_heures = 2,
      temps_20_heures = 3,
      temps_24_heures = 4
   } ;
} ;

typedef EnumTempsBordee::Root ASN1T_EnumTempsBordee;

class EXTERN ASN1C_EnumTempsBordee : public ASN1CType {
public:
   ASN1T_EnumTempsBordee& msgData;
   ASN1C_EnumTempsBordee (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumTempsBordee& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumTempsBordee (ASN1CTXT* ctxt_p, ASN1T_EnumTempsBordee value);
EXTERN int asn1PD_EnumTempsBordee (ASN1CTXT* ctxt_p, ASN1T_EnumTempsBordee* pvalue);

EXTERN void asn1Print_EnumTempsBordee (ASN1ConstCharPtr name, ASN1T_EnumTempsBordee* pvalue);

/* Value definitions */

#define ASN1V_max_uint64 ASN1UINT_MAX
#define ASN1V_max_uint32 ASN1UINT_MAX
#define ASN1V_max_uint16 65535
#define ASN1V_max_uint8 255

#endif
