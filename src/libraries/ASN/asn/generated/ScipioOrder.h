/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 5.31, Date: 20-Nov-2006.
 */
#ifndef SCIPIOORDER_H
#define SCIPIOORDER_H

#include <stdio.h>
#include <stdlib.h>
#include "asn1per.h"
#include "asn1PerCppTypes.h"
#include "ScipioBase.h"
#include "ScipioLimaLimite.h"

/**************************************************************/
/*                                                            */
/*  EnumOrderErrorCode                                        */
/*                                                            */
/**************************************************************/

struct EXTERN EnumOrderErrorCode {
   enum Root {
      no_error = 0,
      error_invalid_unit = 1,
      error_invalid_limit = 2,
      error_invalid_lima = 3,
      error_invalid_mission = 4,
      error_invalid_mission_parameters = 5,
      error_unit_cannot_receive_order = 6,
      error_invalid_order_conduite = 7,
      error_invalid_order_mission = 8,
      error_invalid_order_initial = 9,
      error_invalid_order_conduite_parameters = 10,
      error_unit_surrendered = 11,
      error_invalid_lima_function = 12
   } ;
} ;

typedef EnumOrderErrorCode::Root ASN1T_EnumOrderErrorCode;

class EXTERN ASN1C_EnumOrderErrorCode : public ASN1CType {
public:
   ASN1T_EnumOrderErrorCode& msgData;
   ASN1C_EnumOrderErrorCode (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumOrderErrorCode& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumOrderErrorCode (ASN1CTXT* ctxt_p, ASN1T_EnumOrderErrorCode value);
EXTERN int asn1PD_EnumOrderErrorCode (ASN1CTXT* ctxt_p, ASN1T_EnumOrderErrorCode* pvalue);

EXTERN void asn1Print_EnumOrderErrorCode (ASN1ConstCharPtr name, ASN1T_EnumOrderErrorCode* pvalue);

/**************************************************************/
/*                                                            */
/*  EnumOrderState                                            */
/*                                                            */
/**************************************************************/

struct EXTERN EnumOrderState {
   enum Root {
      started = 0,
      cancelled = 1,
      stopped = 2
   } ;
} ;

typedef EnumOrderState::Root ASN1T_EnumOrderState;

class EXTERN ASN1C_EnumOrderState : public ASN1CType {
public:
   ASN1T_EnumOrderState& msgData;
   ASN1C_EnumOrderState (
      ASN1MessageBuffer& msgBuf, ASN1T_EnumOrderState& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_EnumOrderState (ASN1CTXT* ctxt_p, ASN1T_EnumOrderState value);
EXTERN int asn1PD_EnumOrderState (ASN1CTXT* ctxt_p, ASN1T_EnumOrderState* pvalue);

EXTERN void asn1Print_EnumOrderState (ASN1ConstCharPtr name, ASN1T_EnumOrderState* pvalue);

/**************************************************************/
/*                                                            */
/*  OrderContext                                              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_OrderContext {
   struct {
      unsigned limite_gauchePresent : 1;
      unsigned limite_droitePresent : 1;
   } m;
   ASN1T_Line  limite_gauche;
   ASN1T_Line  limite_droite;
   ASN1T_LimasOrder  limas;
   ASN1T_Direction  direction_dangereuse;

   ASN1T_OrderContext () {
      m.limite_gauchePresent = 0;
      m.limite_droitePresent = 0;
   }
} ASN1T_OrderContext;

class EXTERN ASN1C_OrderContext : public ASN1CType {
public:
   ASN1T_OrderContext& msgData;
   ASN1C_OrderContext (
      ASN1MessageBuffer& msgBuf, ASN1T_OrderContext& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_OrderContext (ASN1CTXT* ctxt_p, ASN1T_OrderContext* pvalue);
EXTERN int asn1PD_OrderContext (ASN1CTXT* ctxt_p, ASN1T_OrderContext* pvalue);

EXTERN void asn1Print_OrderContext (ASN1ConstCharPtr name, ASN1T_OrderContext* pvalue);

/**************************************************************/
/*                                                            */
/*  MissionParameter_value                                    */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_MissionParameter_value_agent  1
#define T_MissionParameter_value_listAgent 2
#define T_MissionParameter_value_automate 3
#define T_MissionParameter_value_listAutomate 4
#define T_MissionParameter_value_aBool  5
#define T_MissionParameter_value_direction 6
#define T_MissionParameter_value_knowledgeAgent 7
#define T_MissionParameter_value_listKnowledgeAgent 8
#define T_MissionParameter_value_knowledgeObject 9
#define T_MissionParameter_value_listKnowledgeObject 10
#define T_MissionParameter_value_knowledgePopulation 11

typedef struct EXTERN ASN1T_MissionParameter_value {
   int t;
   union {
      /* t = 1 */
      ASN1T_Agent  agent;
      /* t = 2 */
      ASN1T_ListAgent *listAgent;
      /* t = 3 */
      ASN1T_Automate  automate;
      /* t = 4 */
      ASN1T_ListAutomate *listAutomate;
      /* t = 5 */
      ASN1BOOL  aBool;
      /* t = 6 */
      ASN1T_Direction  direction;
      /* t = 7 */
      ASN1T_KnowledgeAgent  knowledgeAgent;
      /* t = 8 */
      ASN1T_ListKnowledgeAgent *listKnowledgeAgent;
      /* t = 9 */
      ASN1T_KnowledgeObject  knowledgeObject;
      /* t = 10 */
      ASN1T_ListKnowledgeObject *listKnowledgeObject;
      /* t = 11 */
      ASN1T_KnowledgePopulation  knowledgePopulation;
   } u;
} ASN1T_MissionParameter_value;

class EXTERN ASN1C_MissionParameter_value : public ASN1CType {
public:
   ASN1T_MissionParameter_value& msgData;
   ASN1C_MissionParameter_value (
      ASN1MessageBuffer& msgBuf, ASN1T_MissionParameter_value& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_MissionParameter_value (ASN1CTXT* ctxt_p, ASN1T_MissionParameter_value* pvalue);
EXTERN int asn1PD_MissionParameter_value (ASN1CTXT* ctxt_p, ASN1T_MissionParameter_value* pvalue);

EXTERN void asn1Print_MissionParameter_value (ASN1ConstCharPtr name, ASN1T_MissionParameter_value* pvalue);

/**************************************************************/
/*                                                            */
/*  MissionParameter                                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_MissionParameter {
   ASN1BOOL  null_value;
   ASN1T_MissionParameter_value  value;

   ASN1T_MissionParameter () {
      null_value = FALSE;
   }
} ASN1T_MissionParameter;

class EXTERN ASN1C_MissionParameter : public ASN1CType {
public:
   ASN1T_MissionParameter& msgData;
   ASN1C_MissionParameter (
      ASN1MessageBuffer& msgBuf, ASN1T_MissionParameter& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_MissionParameter (ASN1CTXT* ctxt_p, ASN1T_MissionParameter* pvalue);
EXTERN int asn1PD_MissionParameter (ASN1CTXT* ctxt_p, ASN1T_MissionParameter* pvalue);

EXTERN void asn1Print_MissionParameter (ASN1ConstCharPtr name, ASN1T_MissionParameter* pvalue);

/**************************************************************/
/*                                                            */
/*  MissionParameters                                         */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ASN1T_MissionParameters {
   ASN1UINT n;
   ASN1T_MissionParameter *elem;
} ASN1T_MissionParameters;

class EXTERN ASN1C_MissionParameters : public ASN1CType {
public:
   ASN1T_MissionParameters& msgData;
   ASN1C_MissionParameters (
      ASN1MessageBuffer& msgBuf, ASN1T_MissionParameters& data);
   int Encode ();
   int Decode ();
   void Print (ASN1ConstCharPtr name);
} ;

EXTERN int asn1PE_MissionParameters (ASN1CTXT* ctxt_p, ASN1T_MissionParameters* pvalue);
EXTERN int asn1PD_MissionParameters (ASN1CTXT* ctxt_p, ASN1T_MissionParameters* pvalue);

EXTERN void asn1Print_MissionParameters (ASN1ConstCharPtr name, ASN1T_MissionParameters* pvalue);

#endif
