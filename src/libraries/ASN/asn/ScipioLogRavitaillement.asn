--
-- file name : ScipioLogRavitaillement.asn
--
-- Messages de gestion de la chaine logistique ravitaillement
--

ScipioLogRavitaillement DEFINITIONS AUTOMATIC TAGS ::= BEGIN

IMPORTS max-uint64, max-uint32, max-uint16, max-uint8, GDH, CoordUTM, Itineraire, ListAgent, OID, EnumHumanRank, EnumHumanCategory FROM ScipioBase;

DemandeDotation ::= SEQUENCE
{
    ressource-id        TypeDotation,
    quantite-demandee   INTEGER(0..max-uint32),
    quantite-accordee   INTEGER(0..max-uint32),
    quantite-en-transit INTEGER(0..max-uint32)
}

MsgLogRavitaillementTraitementCreation ::= SEQUENCE
{
    oid-consigne    OID,
    oid-automate    Automate,  
    dotations       SEQUENCE OF DemandeDotation
}

EnumLogRavitaillementTraitementEtat ::= ENUMERATED
{ 
    convoi-en-attente-camions                   (0),
    convoi-en-attente-chef-convoi               (1),
    convoi-constitution                         (2),
    convoi-deplacement-vers-point-chargement    (3),
    convoi-chargement                           (4),
    convoi-deplacement-vers-point-dechargement  (5),
    convoi-dechargement                         (6),
    convoi-deplacement-retour                   (7),
    termine                                     (8)
}

MsgLogRavitaillementTraitementUpdate ::= SEQUENCE
{
    oid-consigne                                OID,
    oid-automate                                Automate,                                     -- automate demandeur
    oid-automate-log-traitant                   Automate                            OPTIONAL, -- automate LOG gérant le ravitaillement, 0 si aucun automate
    oid-automate-log-fournissant-moyens-convoi  Automate                            OPTIONAL, -- automate LOG fournissant les moyens de constitution des convois
    oid-pion-convoyant                          Agent                               OPTIONAL, -- pion LOG convoyant le rav
    etat                                        EnumLogRavitaillementTraitementEtat OPTIONAL,
    dotations                                   SEQUENCE OF DemandeDotation         OPTIONAL
}

MsgLogRavitaillementTraitementDestruction ::= SEQUENCE
{
    oid-consigne    OID,
    oid-automate    Automate
}

-- Etat des pions logistiques du ravitaillement
RavitaillementDisponibiliteMoyens ::= SEQUENCE
{
    type-equipement  TypeEquipement,
    nbr-total        INTEGER,
    nbr-disponibles  INTEGER,       
    nbr-au-travail   INTEGER,
    nbr-au-repos     INTEGER OPTIONAL -- applicable uniquement à certains moyens
}

DotationStock ::= SEQUENCE 
{
    ressource-id        TypeDotation,
    quantite-disponible INTEGER (0..max-uint32)
}

MsgLogRavitaillementEtat ::= SEQUENCE
{
    oid-pion                             Agent,    
    chaine-activee                       BOOLEAN                                       OPTIONAL,
    stocks                               SEQUENCE OF DotationStock                     OPTIONAL, -- Seules les dotations qui ont changées sont envoyées
    disponibilites-chefs-convois         SEQUENCE OF RavitaillementDisponibiliteMoyens OPTIONAL,
    disponibilites-transporteurs-convois SEQUENCE OF RavitaillementDisponibiliteMoyens OPTIONAL
}


DotationQuota ::= SEQUENCE
{
    ressource-id        TypeDotation,
    quota-disponible    INTEGER (0..max-uint32)
}

MsgLogRavitaillementChangeQuotas ::= SEQUENCE
{
    oid-donneur  Automate,
    oid-receveur Automate,
    quotas       SEQUENCE OF DotationQuota -- Seuls les quotas envoyés sont changés, les valeurs des quotas non surchargés ne bougent pas
}
MsgLogRavitaillementChangeQuotasAck ::= ENUMERATED
{
    no-error              (0),
    error-invalid-donneur (1),
    error-invalid-receveur(2)
}

MsgLogRavitaillementPousserFlux ::= SEQUENCE
{
    oid-donneur  Automate,
    oid-receveur Automate,
    stocks       SEQUENCE OF DotationStock
}
MsgLogRavitaillementPousserFluxAck ::= ENUMERATED
{
    no-error                     (0),
    error-invalid-donneur        (1),
    error-invalid-receveur       (2),
    error_ravitaillement_en_cours(3)
}
   
MsgLogRavitaillementQuotas ::= SEQUENCE
{
    oid-automate  Automate,
    quotas        SEQUENCE OF DotationQuota -- Tous est envoyé
}

END -- ScipioLogRavitaillement
