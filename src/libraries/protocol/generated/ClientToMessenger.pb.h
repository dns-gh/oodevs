// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_ClientToMessenger_2eproto__INCLUDED
#define PROTOBUF_ClientToMessenger_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "Common.pb.h"

namespace MsgsClientToMessenger {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ClientToMessenger_2eproto();
void protobuf_AssignDesc_ClientToMessenger_2eproto();
void protobuf_ShutdownFile_ClientToMessenger_2eproto();

class MsgLimaCreationRequest;
class MsgLimaUpdateRequest;
class MsgLimaDestructionRequest;
class MsgLimitCreationRequest;
class MsgLimitUpdateRequest;
class MsgLimitDestructionRequest;
class MsgIntelligenceCreationRequest;
class MsgIntelligenceUpdateRequest;
class MsgIntelligenceDestructionRequest;
class MsgShapeCreationRequest;
class MsgShapeUpdateRequest;
class MsgShapeDestructionRequest;
class MsgNoteCreationRequest;
class MsgNoteUpdateRequest;
class MsgNoteDestructionRequest;
class MsgClientToMessenger;
class MsgClientToMessenger_Content;

// ===================================================================

class MsgLimaCreationRequest : public ::google::protobuf::Message {
 public:
  MsgLimaCreationRequest();
  virtual ~MsgLimaCreationRequest();
  
  MsgLimaCreationRequest(const MsgLimaCreationRequest& from);
  
  inline MsgLimaCreationRequest& operator=(const MsgLimaCreationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLimaCreationRequest& default_instance();
  void Swap(MsgLimaCreationRequest* other);
  
  // implements Message ----------------------------------------------
  
  MsgLimaCreationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLimaCreationRequest& from);
  void MergeFrom(const MsgLimaCreationRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.MsgTacticalLine tactical_line = 1;
  inline bool has_tactical_line() const;
  inline void clear_tactical_line();
  static const int kTacticalLineFieldNumber = 1;
  inline const ::Common::MsgTacticalLine& tactical_line() const;
  inline ::Common::MsgTacticalLine* mutable_tactical_line();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::MsgTacticalLine* tactical_line_;
  friend void  protobuf_AddDesc_ClientToMessenger_2eproto();
  friend void protobuf_AssignDesc_ClientToMessenger_2eproto();
  friend void protobuf_ShutdownFile_ClientToMessenger_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLimaCreationRequest* default_instance_;
};
// -------------------------------------------------------------------

class MsgLimaUpdateRequest : public ::google::protobuf::Message {
 public:
  MsgLimaUpdateRequest();
  virtual ~MsgLimaUpdateRequest();
  
  MsgLimaUpdateRequest(const MsgLimaUpdateRequest& from);
  
  inline MsgLimaUpdateRequest& operator=(const MsgLimaUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLimaUpdateRequest& default_instance();
  void Swap(MsgLimaUpdateRequest* other);
  
  // implements Message ----------------------------------------------
  
  MsgLimaUpdateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLimaUpdateRequest& from);
  void MergeFrom(const MsgLimaUpdateRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.TacticalLineId id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::Common::TacticalLineId& id() const;
  inline ::Common::TacticalLineId* mutable_id();
  
  // optional .Common.MsgTacticalLine tactical_line = 2;
  inline bool has_tactical_line() const;
  inline void clear_tactical_line();
  static const int kTacticalLineFieldNumber = 2;
  inline const ::Common::MsgTacticalLine& tactical_line() const;
  inline ::Common::MsgTacticalLine* mutable_tactical_line();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::TacticalLineId* id_;
  ::Common::MsgTacticalLine* tactical_line_;
  friend void  protobuf_AddDesc_ClientToMessenger_2eproto();
  friend void protobuf_AssignDesc_ClientToMessenger_2eproto();
  friend void protobuf_ShutdownFile_ClientToMessenger_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLimaUpdateRequest* default_instance_;
};
// -------------------------------------------------------------------

class MsgLimaDestructionRequest : public ::google::protobuf::Message {
 public:
  MsgLimaDestructionRequest();
  virtual ~MsgLimaDestructionRequest();
  
  MsgLimaDestructionRequest(const MsgLimaDestructionRequest& from);
  
  inline MsgLimaDestructionRequest& operator=(const MsgLimaDestructionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLimaDestructionRequest& default_instance();
  void Swap(MsgLimaDestructionRequest* other);
  
  // implements Message ----------------------------------------------
  
  MsgLimaDestructionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLimaDestructionRequest& from);
  void MergeFrom(const MsgLimaDestructionRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.TacticalLineId id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::Common::TacticalLineId& id() const;
  inline ::Common::TacticalLineId* mutable_id();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::TacticalLineId* id_;
  friend void  protobuf_AddDesc_ClientToMessenger_2eproto();
  friend void protobuf_AssignDesc_ClientToMessenger_2eproto();
  friend void protobuf_ShutdownFile_ClientToMessenger_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLimaDestructionRequest* default_instance_;
};
// -------------------------------------------------------------------

class MsgLimitCreationRequest : public ::google::protobuf::Message {
 public:
  MsgLimitCreationRequest();
  virtual ~MsgLimitCreationRequest();
  
  MsgLimitCreationRequest(const MsgLimitCreationRequest& from);
  
  inline MsgLimitCreationRequest& operator=(const MsgLimitCreationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLimitCreationRequest& default_instance();
  void Swap(MsgLimitCreationRequest* other);
  
  // implements Message ----------------------------------------------
  
  MsgLimitCreationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLimitCreationRequest& from);
  void MergeFrom(const MsgLimitCreationRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.MsgTacticalLine tactical_line = 1;
  inline bool has_tactical_line() const;
  inline void clear_tactical_line();
  static const int kTacticalLineFieldNumber = 1;
  inline const ::Common::MsgTacticalLine& tactical_line() const;
  inline ::Common::MsgTacticalLine* mutable_tactical_line();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::MsgTacticalLine* tactical_line_;
  friend void  protobuf_AddDesc_ClientToMessenger_2eproto();
  friend void protobuf_AssignDesc_ClientToMessenger_2eproto();
  friend void protobuf_ShutdownFile_ClientToMessenger_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLimitCreationRequest* default_instance_;
};
// -------------------------------------------------------------------

class MsgLimitUpdateRequest : public ::google::protobuf::Message {
 public:
  MsgLimitUpdateRequest();
  virtual ~MsgLimitUpdateRequest();
  
  MsgLimitUpdateRequest(const MsgLimitUpdateRequest& from);
  
  inline MsgLimitUpdateRequest& operator=(const MsgLimitUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLimitUpdateRequest& default_instance();
  void Swap(MsgLimitUpdateRequest* other);
  
  // implements Message ----------------------------------------------
  
  MsgLimitUpdateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLimitUpdateRequest& from);
  void MergeFrom(const MsgLimitUpdateRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.TacticalLineId id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::Common::TacticalLineId& id() const;
  inline ::Common::TacticalLineId* mutable_id();
  
  // optional .Common.MsgTacticalLine tactical_line = 2;
  inline bool has_tactical_line() const;
  inline void clear_tactical_line();
  static const int kTacticalLineFieldNumber = 2;
  inline const ::Common::MsgTacticalLine& tactical_line() const;
  inline ::Common::MsgTacticalLine* mutable_tactical_line();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::TacticalLineId* id_;
  ::Common::MsgTacticalLine* tactical_line_;
  friend void  protobuf_AddDesc_ClientToMessenger_2eproto();
  friend void protobuf_AssignDesc_ClientToMessenger_2eproto();
  friend void protobuf_ShutdownFile_ClientToMessenger_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLimitUpdateRequest* default_instance_;
};
// -------------------------------------------------------------------

class MsgLimitDestructionRequest : public ::google::protobuf::Message {
 public:
  MsgLimitDestructionRequest();
  virtual ~MsgLimitDestructionRequest();
  
  MsgLimitDestructionRequest(const MsgLimitDestructionRequest& from);
  
  inline MsgLimitDestructionRequest& operator=(const MsgLimitDestructionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLimitDestructionRequest& default_instance();
  void Swap(MsgLimitDestructionRequest* other);
  
  // implements Message ----------------------------------------------
  
  MsgLimitDestructionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLimitDestructionRequest& from);
  void MergeFrom(const MsgLimitDestructionRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.TacticalLineId id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::Common::TacticalLineId& id() const;
  inline ::Common::TacticalLineId* mutable_id();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::TacticalLineId* id_;
  friend void  protobuf_AddDesc_ClientToMessenger_2eproto();
  friend void protobuf_AssignDesc_ClientToMessenger_2eproto();
  friend void protobuf_ShutdownFile_ClientToMessenger_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLimitDestructionRequest* default_instance_;
};
// -------------------------------------------------------------------

class MsgIntelligenceCreationRequest : public ::google::protobuf::Message {
 public:
  MsgIntelligenceCreationRequest();
  virtual ~MsgIntelligenceCreationRequest();
  
  MsgIntelligenceCreationRequest(const MsgIntelligenceCreationRequest& from);
  
  inline MsgIntelligenceCreationRequest& operator=(const MsgIntelligenceCreationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgIntelligenceCreationRequest& default_instance();
  void Swap(MsgIntelligenceCreationRequest* other);
  
  // implements Message ----------------------------------------------
  
  MsgIntelligenceCreationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgIntelligenceCreationRequest& from);
  void MergeFrom(const MsgIntelligenceCreationRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.MsgIntelligence intelligence = 1;
  inline bool has_intelligence() const;
  inline void clear_intelligence();
  static const int kIntelligenceFieldNumber = 1;
  inline const ::Common::MsgIntelligence& intelligence() const;
  inline ::Common::MsgIntelligence* mutable_intelligence();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::MsgIntelligence* intelligence_;
  friend void  protobuf_AddDesc_ClientToMessenger_2eproto();
  friend void protobuf_AssignDesc_ClientToMessenger_2eproto();
  friend void protobuf_ShutdownFile_ClientToMessenger_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgIntelligenceCreationRequest* default_instance_;
};
// -------------------------------------------------------------------

class MsgIntelligenceUpdateRequest : public ::google::protobuf::Message {
 public:
  MsgIntelligenceUpdateRequest();
  virtual ~MsgIntelligenceUpdateRequest();
  
  MsgIntelligenceUpdateRequest(const MsgIntelligenceUpdateRequest& from);
  
  inline MsgIntelligenceUpdateRequest& operator=(const MsgIntelligenceUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgIntelligenceUpdateRequest& default_instance();
  void Swap(MsgIntelligenceUpdateRequest* other);
  
  // implements Message ----------------------------------------------
  
  MsgIntelligenceUpdateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgIntelligenceUpdateRequest& from);
  void MergeFrom(const MsgIntelligenceUpdateRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.IntelligenceId intelligence = 1;
  inline bool has_intelligence() const;
  inline void clear_intelligence();
  static const int kIntelligenceFieldNumber = 1;
  inline const ::Common::IntelligenceId& intelligence() const;
  inline ::Common::IntelligenceId* mutable_intelligence();
  
  // optional .Common.FormationId formation = 2;
  inline bool has_formation() const;
  inline void clear_formation();
  static const int kFormationFieldNumber = 2;
  inline const ::Common::FormationId& formation() const;
  inline ::Common::FormationId* mutable_formation();
  
  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional string nature = 4;
  inline bool has_nature() const;
  inline void clear_nature();
  static const int kNatureFieldNumber = 4;
  inline const ::std::string& nature() const;
  inline void set_nature(const ::std::string& value);
  inline void set_nature(const char* value);
  inline void set_nature(const char* value, size_t size);
  inline ::std::string* mutable_nature();
  
  // optional .Common.EnumNatureLevel level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline Common::EnumNatureLevel level() const;
  inline void set_level(Common::EnumNatureLevel value);
  
  // optional bool embarked = 6;
  inline bool has_embarked() const;
  inline void clear_embarked();
  static const int kEmbarkedFieldNumber = 6;
  inline bool embarked() const;
  inline void set_embarked(bool value);
  
  // optional .Common.MsgCoordLatLong location = 7;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 7;
  inline const ::Common::MsgCoordLatLong& location() const;
  inline ::Common::MsgCoordLatLong* mutable_location();
  
  // optional .Common.EnumDiplomacy diplomacy = 8;
  inline bool has_diplomacy() const;
  inline void clear_diplomacy();
  static const int kDiplomacyFieldNumber = 8;
  inline Common::EnumDiplomacy diplomacy() const;
  inline void set_diplomacy(Common::EnumDiplomacy value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::IntelligenceId* intelligence_;
  ::Common::FormationId* formation_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::std::string* nature_;
  static const ::std::string _default_nature_;
  int level_;
  bool embarked_;
  ::Common::MsgCoordLatLong* location_;
  int diplomacy_;
  friend void  protobuf_AddDesc_ClientToMessenger_2eproto();
  friend void protobuf_AssignDesc_ClientToMessenger_2eproto();
  friend void protobuf_ShutdownFile_ClientToMessenger_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgIntelligenceUpdateRequest* default_instance_;
};
// -------------------------------------------------------------------

class MsgIntelligenceDestructionRequest : public ::google::protobuf::Message {
 public:
  MsgIntelligenceDestructionRequest();
  virtual ~MsgIntelligenceDestructionRequest();
  
  MsgIntelligenceDestructionRequest(const MsgIntelligenceDestructionRequest& from);
  
  inline MsgIntelligenceDestructionRequest& operator=(const MsgIntelligenceDestructionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgIntelligenceDestructionRequest& default_instance();
  void Swap(MsgIntelligenceDestructionRequest* other);
  
  // implements Message ----------------------------------------------
  
  MsgIntelligenceDestructionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgIntelligenceDestructionRequest& from);
  void MergeFrom(const MsgIntelligenceDestructionRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.IntelligenceId id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::Common::IntelligenceId& id() const;
  inline ::Common::IntelligenceId* mutable_id();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::IntelligenceId* id_;
  friend void  protobuf_AddDesc_ClientToMessenger_2eproto();
  friend void protobuf_AssignDesc_ClientToMessenger_2eproto();
  friend void protobuf_ShutdownFile_ClientToMessenger_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgIntelligenceDestructionRequest* default_instance_;
};
// -------------------------------------------------------------------

class MsgShapeCreationRequest : public ::google::protobuf::Message {
 public:
  MsgShapeCreationRequest();
  virtual ~MsgShapeCreationRequest();
  
  MsgShapeCreationRequest(const MsgShapeCreationRequest& from);
  
  inline MsgShapeCreationRequest& operator=(const MsgShapeCreationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgShapeCreationRequest& default_instance();
  void Swap(MsgShapeCreationRequest* other);
  
  // implements Message ----------------------------------------------
  
  MsgShapeCreationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgShapeCreationRequest& from);
  void MergeFrom(const MsgShapeCreationRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.MsgShape shape = 1;
  inline bool has_shape() const;
  inline void clear_shape();
  static const int kShapeFieldNumber = 1;
  inline const ::Common::MsgShape& shape() const;
  inline ::Common::MsgShape* mutable_shape();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::MsgShape* shape_;
  friend void  protobuf_AddDesc_ClientToMessenger_2eproto();
  friend void protobuf_AssignDesc_ClientToMessenger_2eproto();
  friend void protobuf_ShutdownFile_ClientToMessenger_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgShapeCreationRequest* default_instance_;
};
// -------------------------------------------------------------------

class MsgShapeUpdateRequest : public ::google::protobuf::Message {
 public:
  MsgShapeUpdateRequest();
  virtual ~MsgShapeUpdateRequest();
  
  MsgShapeUpdateRequest(const MsgShapeUpdateRequest& from);
  
  inline MsgShapeUpdateRequest& operator=(const MsgShapeUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgShapeUpdateRequest& default_instance();
  void Swap(MsgShapeUpdateRequest* other);
  
  // implements Message ----------------------------------------------
  
  MsgShapeUpdateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgShapeUpdateRequest& from);
  void MergeFrom(const MsgShapeUpdateRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.DrawingId shape = 1;
  inline bool has_shape() const;
  inline void clear_shape();
  static const int kShapeFieldNumber = 1;
  inline const ::Common::DrawingId& shape() const;
  inline ::Common::DrawingId* mutable_shape();
  
  // optional string category = 2;
  inline bool has_category() const;
  inline void clear_category();
  static const int kCategoryFieldNumber = 2;
  inline const ::std::string& category() const;
  inline void set_category(const ::std::string& value);
  inline void set_category(const char* value);
  inline void set_category(const char* value, size_t size);
  inline ::std::string* mutable_category();
  
  // optional string color = 3;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 3;
  inline const ::std::string& color() const;
  inline void set_color(const ::std::string& value);
  inline void set_color(const char* value);
  inline void set_color(const char* value, size_t size);
  inline ::std::string* mutable_color();
  
  // optional string pattern = 4;
  inline bool has_pattern() const;
  inline void clear_pattern();
  static const int kPatternFieldNumber = 4;
  inline const ::std::string& pattern() const;
  inline void set_pattern(const ::std::string& value);
  inline void set_pattern(const char* value);
  inline void set_pattern(const char* value, size_t size);
  inline ::std::string* mutable_pattern();
  
  // optional .Common.MsgCoordLatLongList points = 5;
  inline bool has_points() const;
  inline void clear_points();
  static const int kPointsFieldNumber = 5;
  inline const ::Common::MsgCoordLatLongList& points() const;
  inline ::Common::MsgCoordLatLongList* mutable_points();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::DrawingId* shape_;
  ::std::string* category_;
  static const ::std::string _default_category_;
  ::std::string* color_;
  static const ::std::string _default_color_;
  ::std::string* pattern_;
  static const ::std::string _default_pattern_;
  ::Common::MsgCoordLatLongList* points_;
  friend void  protobuf_AddDesc_ClientToMessenger_2eproto();
  friend void protobuf_AssignDesc_ClientToMessenger_2eproto();
  friend void protobuf_ShutdownFile_ClientToMessenger_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgShapeUpdateRequest* default_instance_;
};
// -------------------------------------------------------------------

class MsgShapeDestructionRequest : public ::google::protobuf::Message {
 public:
  MsgShapeDestructionRequest();
  virtual ~MsgShapeDestructionRequest();
  
  MsgShapeDestructionRequest(const MsgShapeDestructionRequest& from);
  
  inline MsgShapeDestructionRequest& operator=(const MsgShapeDestructionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgShapeDestructionRequest& default_instance();
  void Swap(MsgShapeDestructionRequest* other);
  
  // implements Message ----------------------------------------------
  
  MsgShapeDestructionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgShapeDestructionRequest& from);
  void MergeFrom(const MsgShapeDestructionRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.DrawingId id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::Common::DrawingId& id() const;
  inline ::Common::DrawingId* mutable_id();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::DrawingId* id_;
  friend void  protobuf_AddDesc_ClientToMessenger_2eproto();
  friend void protobuf_AssignDesc_ClientToMessenger_2eproto();
  friend void protobuf_ShutdownFile_ClientToMessenger_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgShapeDestructionRequest* default_instance_;
};
// -------------------------------------------------------------------

class MsgNoteCreationRequest : public ::google::protobuf::Message {
 public:
  MsgNoteCreationRequest();
  virtual ~MsgNoteCreationRequest();
  
  MsgNoteCreationRequest(const MsgNoteCreationRequest& from);
  
  inline MsgNoteCreationRequest& operator=(const MsgNoteCreationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNoteCreationRequest& default_instance();
  void Swap(MsgNoteCreationRequest* other);
  
  // implements Message ----------------------------------------------
  
  MsgNoteCreationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNoteCreationRequest& from);
  void MergeFrom(const MsgNoteCreationRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.MsgNote note = 1;
  inline bool has_note() const;
  inline void clear_note();
  static const int kNoteFieldNumber = 1;
  inline const ::Common::MsgNote& note() const;
  inline ::Common::MsgNote* mutable_note();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::MsgNote* note_;
  friend void  protobuf_AddDesc_ClientToMessenger_2eproto();
  friend void protobuf_AssignDesc_ClientToMessenger_2eproto();
  friend void protobuf_ShutdownFile_ClientToMessenger_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgNoteCreationRequest* default_instance_;
};
// -------------------------------------------------------------------

class MsgNoteUpdateRequest : public ::google::protobuf::Message {
 public:
  MsgNoteUpdateRequest();
  virtual ~MsgNoteUpdateRequest();
  
  MsgNoteUpdateRequest(const MsgNoteUpdateRequest& from);
  
  inline MsgNoteUpdateRequest& operator=(const MsgNoteUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNoteUpdateRequest& default_instance();
  void Swap(MsgNoteUpdateRequest* other);
  
  // implements Message ----------------------------------------------
  
  MsgNoteUpdateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNoteUpdateRequest& from);
  void MergeFrom(const MsgNoteUpdateRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional string number = 3;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 3;
  inline const ::std::string& number() const;
  inline void set_number(const ::std::string& value);
  inline void set_number(const char* value);
  inline void set_number(const char* value, size_t size);
  inline ::std::string* mutable_number();
  
  // optional string description = 4;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 4;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  
  // optional uint32 parent = 5;
  inline bool has_parent() const;
  inline void clear_parent();
  static const int kParentFieldNumber = 5;
  inline ::google::protobuf::uint32 parent() const;
  inline void set_parent(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::std::string* number_;
  static const ::std::string _default_number_;
  ::std::string* description_;
  static const ::std::string _default_description_;
  ::google::protobuf::uint32 parent_;
  friend void  protobuf_AddDesc_ClientToMessenger_2eproto();
  friend void protobuf_AssignDesc_ClientToMessenger_2eproto();
  friend void protobuf_ShutdownFile_ClientToMessenger_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgNoteUpdateRequest* default_instance_;
};
// -------------------------------------------------------------------

class MsgNoteDestructionRequest : public ::google::protobuf::Message {
 public:
  MsgNoteDestructionRequest();
  virtual ~MsgNoteDestructionRequest();
  
  MsgNoteDestructionRequest(const MsgNoteDestructionRequest& from);
  
  inline MsgNoteDestructionRequest& operator=(const MsgNoteDestructionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNoteDestructionRequest& default_instance();
  void Swap(MsgNoteDestructionRequest* other);
  
  // implements Message ----------------------------------------------
  
  MsgNoteDestructionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNoteDestructionRequest& from);
  void MergeFrom(const MsgNoteDestructionRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required bool delete_all = 2;
  inline bool has_delete_all() const;
  inline void clear_delete_all();
  static const int kDeleteAllFieldNumber = 2;
  inline bool delete_all() const;
  inline void set_delete_all(bool value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  bool delete_all_;
  friend void  protobuf_AddDesc_ClientToMessenger_2eproto();
  friend void protobuf_AssignDesc_ClientToMessenger_2eproto();
  friend void protobuf_ShutdownFile_ClientToMessenger_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgNoteDestructionRequest* default_instance_;
};
// -------------------------------------------------------------------

class MsgClientToMessenger_Content : public ::google::protobuf::Message {
 public:
  MsgClientToMessenger_Content();
  virtual ~MsgClientToMessenger_Content();
  
  MsgClientToMessenger_Content(const MsgClientToMessenger_Content& from);
  
  inline MsgClientToMessenger_Content& operator=(const MsgClientToMessenger_Content& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgClientToMessenger_Content& default_instance();
  void Swap(MsgClientToMessenger_Content* other);
  
  // implements Message ----------------------------------------------
  
  MsgClientToMessenger_Content* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgClientToMessenger_Content& from);
  void MergeFrom(const MsgClientToMessenger_Content& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .MsgsClientToMessenger.MsgLimitCreationRequest limit_creation_request = 1;
  inline bool has_limit_creation_request() const;
  inline void clear_limit_creation_request();
  static const int kLimitCreationRequestFieldNumber = 1;
  inline const ::MsgsClientToMessenger::MsgLimitCreationRequest& limit_creation_request() const;
  inline ::MsgsClientToMessenger::MsgLimitCreationRequest* mutable_limit_creation_request();
  
  // optional .MsgsClientToMessenger.MsgLimitDestructionRequest limit_destruction_request = 2;
  inline bool has_limit_destruction_request() const;
  inline void clear_limit_destruction_request();
  static const int kLimitDestructionRequestFieldNumber = 2;
  inline const ::MsgsClientToMessenger::MsgLimitDestructionRequest& limit_destruction_request() const;
  inline ::MsgsClientToMessenger::MsgLimitDestructionRequest* mutable_limit_destruction_request();
  
  // optional .MsgsClientToMessenger.MsgLimitUpdateRequest limit_update_request = 3;
  inline bool has_limit_update_request() const;
  inline void clear_limit_update_request();
  static const int kLimitUpdateRequestFieldNumber = 3;
  inline const ::MsgsClientToMessenger::MsgLimitUpdateRequest& limit_update_request() const;
  inline ::MsgsClientToMessenger::MsgLimitUpdateRequest* mutable_limit_update_request();
  
  // optional .MsgsClientToMessenger.MsgLimaCreationRequest lima_creation_request = 4;
  inline bool has_lima_creation_request() const;
  inline void clear_lima_creation_request();
  static const int kLimaCreationRequestFieldNumber = 4;
  inline const ::MsgsClientToMessenger::MsgLimaCreationRequest& lima_creation_request() const;
  inline ::MsgsClientToMessenger::MsgLimaCreationRequest* mutable_lima_creation_request();
  
  // optional .MsgsClientToMessenger.MsgLimaDestructionRequest lima_destruction_request = 5;
  inline bool has_lima_destruction_request() const;
  inline void clear_lima_destruction_request();
  static const int kLimaDestructionRequestFieldNumber = 5;
  inline const ::MsgsClientToMessenger::MsgLimaDestructionRequest& lima_destruction_request() const;
  inline ::MsgsClientToMessenger::MsgLimaDestructionRequest* mutable_lima_destruction_request();
  
  // optional .MsgsClientToMessenger.MsgLimaUpdateRequest lima_update_request = 6;
  inline bool has_lima_update_request() const;
  inline void clear_lima_update_request();
  static const int kLimaUpdateRequestFieldNumber = 6;
  inline const ::MsgsClientToMessenger::MsgLimaUpdateRequest& lima_update_request() const;
  inline ::MsgsClientToMessenger::MsgLimaUpdateRequest* mutable_lima_update_request();
  
  // optional .MsgsClientToMessenger.MsgIntelligenceCreationRequest intelligence_creation_request = 7;
  inline bool has_intelligence_creation_request() const;
  inline void clear_intelligence_creation_request();
  static const int kIntelligenceCreationRequestFieldNumber = 7;
  inline const ::MsgsClientToMessenger::MsgIntelligenceCreationRequest& intelligence_creation_request() const;
  inline ::MsgsClientToMessenger::MsgIntelligenceCreationRequest* mutable_intelligence_creation_request();
  
  // optional .MsgsClientToMessenger.MsgIntelligenceUpdateRequest intelligence_update_request = 8;
  inline bool has_intelligence_update_request() const;
  inline void clear_intelligence_update_request();
  static const int kIntelligenceUpdateRequestFieldNumber = 8;
  inline const ::MsgsClientToMessenger::MsgIntelligenceUpdateRequest& intelligence_update_request() const;
  inline ::MsgsClientToMessenger::MsgIntelligenceUpdateRequest* mutable_intelligence_update_request();
  
  // optional .MsgsClientToMessenger.MsgIntelligenceDestructionRequest intelligence_destruction_request = 9;
  inline bool has_intelligence_destruction_request() const;
  inline void clear_intelligence_destruction_request();
  static const int kIntelligenceDestructionRequestFieldNumber = 9;
  inline const ::MsgsClientToMessenger::MsgIntelligenceDestructionRequest& intelligence_destruction_request() const;
  inline ::MsgsClientToMessenger::MsgIntelligenceDestructionRequest* mutable_intelligence_destruction_request();
  
  // optional .MsgsClientToMessenger.MsgShapeCreationRequest shape_creation_request = 10;
  inline bool has_shape_creation_request() const;
  inline void clear_shape_creation_request();
  static const int kShapeCreationRequestFieldNumber = 10;
  inline const ::MsgsClientToMessenger::MsgShapeCreationRequest& shape_creation_request() const;
  inline ::MsgsClientToMessenger::MsgShapeCreationRequest* mutable_shape_creation_request();
  
  // optional .MsgsClientToMessenger.MsgShapeDestructionRequest shape_destruction_request = 11;
  inline bool has_shape_destruction_request() const;
  inline void clear_shape_destruction_request();
  static const int kShapeDestructionRequestFieldNumber = 11;
  inline const ::MsgsClientToMessenger::MsgShapeDestructionRequest& shape_destruction_request() const;
  inline ::MsgsClientToMessenger::MsgShapeDestructionRequest* mutable_shape_destruction_request();
  
  // optional .MsgsClientToMessenger.MsgShapeUpdateRequest shape_update_request = 12;
  inline bool has_shape_update_request() const;
  inline void clear_shape_update_request();
  static const int kShapeUpdateRequestFieldNumber = 12;
  inline const ::MsgsClientToMessenger::MsgShapeUpdateRequest& shape_update_request() const;
  inline ::MsgsClientToMessenger::MsgShapeUpdateRequest* mutable_shape_update_request();
  
  // optional .Common.MsgTextMessage text_message = 13;
  inline bool has_text_message() const;
  inline void clear_text_message();
  static const int kTextMessageFieldNumber = 13;
  inline const ::Common::MsgTextMessage& text_message() const;
  inline ::Common::MsgTextMessage* mutable_text_message();
  
  // optional .MsgsClientToMessenger.MsgNoteCreationRequest note_creation_request = 14;
  inline bool has_note_creation_request() const;
  inline void clear_note_creation_request();
  static const int kNoteCreationRequestFieldNumber = 14;
  inline const ::MsgsClientToMessenger::MsgNoteCreationRequest& note_creation_request() const;
  inline ::MsgsClientToMessenger::MsgNoteCreationRequest* mutable_note_creation_request();
  
  // optional .MsgsClientToMessenger.MsgNoteUpdateRequest note_update_request = 15;
  inline bool has_note_update_request() const;
  inline void clear_note_update_request();
  static const int kNoteUpdateRequestFieldNumber = 15;
  inline const ::MsgsClientToMessenger::MsgNoteUpdateRequest& note_update_request() const;
  inline ::MsgsClientToMessenger::MsgNoteUpdateRequest* mutable_note_update_request();
  
  // optional .MsgsClientToMessenger.MsgNoteDestructionRequest note_destruction_request = 16;
  inline bool has_note_destruction_request() const;
  inline void clear_note_destruction_request();
  static const int kNoteDestructionRequestFieldNumber = 16;
  inline const ::MsgsClientToMessenger::MsgNoteDestructionRequest& note_destruction_request() const;
  inline ::MsgsClientToMessenger::MsgNoteDestructionRequest* mutable_note_destruction_request();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::MsgsClientToMessenger::MsgLimitCreationRequest* limit_creation_request_;
  ::MsgsClientToMessenger::MsgLimitDestructionRequest* limit_destruction_request_;
  ::MsgsClientToMessenger::MsgLimitUpdateRequest* limit_update_request_;
  ::MsgsClientToMessenger::MsgLimaCreationRequest* lima_creation_request_;
  ::MsgsClientToMessenger::MsgLimaDestructionRequest* lima_destruction_request_;
  ::MsgsClientToMessenger::MsgLimaUpdateRequest* lima_update_request_;
  ::MsgsClientToMessenger::MsgIntelligenceCreationRequest* intelligence_creation_request_;
  ::MsgsClientToMessenger::MsgIntelligenceUpdateRequest* intelligence_update_request_;
  ::MsgsClientToMessenger::MsgIntelligenceDestructionRequest* intelligence_destruction_request_;
  ::MsgsClientToMessenger::MsgShapeCreationRequest* shape_creation_request_;
  ::MsgsClientToMessenger::MsgShapeDestructionRequest* shape_destruction_request_;
  ::MsgsClientToMessenger::MsgShapeUpdateRequest* shape_update_request_;
  ::Common::MsgTextMessage* text_message_;
  ::MsgsClientToMessenger::MsgNoteCreationRequest* note_creation_request_;
  ::MsgsClientToMessenger::MsgNoteUpdateRequest* note_update_request_;
  ::MsgsClientToMessenger::MsgNoteDestructionRequest* note_destruction_request_;
  friend void  protobuf_AddDesc_ClientToMessenger_2eproto();
  friend void protobuf_AssignDesc_ClientToMessenger_2eproto();
  friend void protobuf_ShutdownFile_ClientToMessenger_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(16 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgClientToMessenger_Content* default_instance_;
};
// -------------------------------------------------------------------

class MsgClientToMessenger : public ::google::protobuf::Message {
 public:
  MsgClientToMessenger();
  virtual ~MsgClientToMessenger();
  
  MsgClientToMessenger(const MsgClientToMessenger& from);
  
  inline MsgClientToMessenger& operator=(const MsgClientToMessenger& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgClientToMessenger& default_instance();
  void Swap(MsgClientToMessenger* other);
  
  // implements Message ----------------------------------------------
  
  MsgClientToMessenger* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgClientToMessenger& from);
  void MergeFrom(const MsgClientToMessenger& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef MsgClientToMessenger_Content Content;
  
  // accessors -------------------------------------------------------
  
  // optional int32 context = 1;
  inline bool has_context() const;
  inline void clear_context();
  static const int kContextFieldNumber = 1;
  inline ::google::protobuf::int32 context() const;
  inline void set_context(::google::protobuf::int32 value);
  
  // required .MsgsClientToMessenger.MsgClientToMessenger.Content message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::MsgsClientToMessenger::MsgClientToMessenger_Content& message() const;
  inline ::MsgsClientToMessenger::MsgClientToMessenger_Content* mutable_message();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 context_;
  ::MsgsClientToMessenger::MsgClientToMessenger_Content* message_;
  friend void  protobuf_AddDesc_ClientToMessenger_2eproto();
  friend void protobuf_AssignDesc_ClientToMessenger_2eproto();
  friend void protobuf_ShutdownFile_ClientToMessenger_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgClientToMessenger* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// MsgLimaCreationRequest

// required .Common.MsgTacticalLine tactical_line = 1;
inline bool MsgLimaCreationRequest::has_tactical_line() const {
  return _has_bit(0);
}
inline void MsgLimaCreationRequest::clear_tactical_line() {
  if (tactical_line_ != NULL) tactical_line_->::Common::MsgTacticalLine::Clear();
  _clear_bit(0);
}
inline const ::Common::MsgTacticalLine& MsgLimaCreationRequest::tactical_line() const {
  return tactical_line_ != NULL ? *tactical_line_ : *default_instance_->tactical_line_;
}
inline ::Common::MsgTacticalLine* MsgLimaCreationRequest::mutable_tactical_line() {
  _set_bit(0);
  if (tactical_line_ == NULL) tactical_line_ = new ::Common::MsgTacticalLine;
  return tactical_line_;
}

// -------------------------------------------------------------------

// MsgLimaUpdateRequest

// required .Common.TacticalLineId id = 1;
inline bool MsgLimaUpdateRequest::has_id() const {
  return _has_bit(0);
}
inline void MsgLimaUpdateRequest::clear_id() {
  if (id_ != NULL) id_->::Common::TacticalLineId::Clear();
  _clear_bit(0);
}
inline const ::Common::TacticalLineId& MsgLimaUpdateRequest::id() const {
  return id_ != NULL ? *id_ : *default_instance_->id_;
}
inline ::Common::TacticalLineId* MsgLimaUpdateRequest::mutable_id() {
  _set_bit(0);
  if (id_ == NULL) id_ = new ::Common::TacticalLineId;
  return id_;
}

// optional .Common.MsgTacticalLine tactical_line = 2;
inline bool MsgLimaUpdateRequest::has_tactical_line() const {
  return _has_bit(1);
}
inline void MsgLimaUpdateRequest::clear_tactical_line() {
  if (tactical_line_ != NULL) tactical_line_->::Common::MsgTacticalLine::Clear();
  _clear_bit(1);
}
inline const ::Common::MsgTacticalLine& MsgLimaUpdateRequest::tactical_line() const {
  return tactical_line_ != NULL ? *tactical_line_ : *default_instance_->tactical_line_;
}
inline ::Common::MsgTacticalLine* MsgLimaUpdateRequest::mutable_tactical_line() {
  _set_bit(1);
  if (tactical_line_ == NULL) tactical_line_ = new ::Common::MsgTacticalLine;
  return tactical_line_;
}

// -------------------------------------------------------------------

// MsgLimaDestructionRequest

// required .Common.TacticalLineId id = 1;
inline bool MsgLimaDestructionRequest::has_id() const {
  return _has_bit(0);
}
inline void MsgLimaDestructionRequest::clear_id() {
  if (id_ != NULL) id_->::Common::TacticalLineId::Clear();
  _clear_bit(0);
}
inline const ::Common::TacticalLineId& MsgLimaDestructionRequest::id() const {
  return id_ != NULL ? *id_ : *default_instance_->id_;
}
inline ::Common::TacticalLineId* MsgLimaDestructionRequest::mutable_id() {
  _set_bit(0);
  if (id_ == NULL) id_ = new ::Common::TacticalLineId;
  return id_;
}

// -------------------------------------------------------------------

// MsgLimitCreationRequest

// required .Common.MsgTacticalLine tactical_line = 1;
inline bool MsgLimitCreationRequest::has_tactical_line() const {
  return _has_bit(0);
}
inline void MsgLimitCreationRequest::clear_tactical_line() {
  if (tactical_line_ != NULL) tactical_line_->::Common::MsgTacticalLine::Clear();
  _clear_bit(0);
}
inline const ::Common::MsgTacticalLine& MsgLimitCreationRequest::tactical_line() const {
  return tactical_line_ != NULL ? *tactical_line_ : *default_instance_->tactical_line_;
}
inline ::Common::MsgTacticalLine* MsgLimitCreationRequest::mutable_tactical_line() {
  _set_bit(0);
  if (tactical_line_ == NULL) tactical_line_ = new ::Common::MsgTacticalLine;
  return tactical_line_;
}

// -------------------------------------------------------------------

// MsgLimitUpdateRequest

// required .Common.TacticalLineId id = 1;
inline bool MsgLimitUpdateRequest::has_id() const {
  return _has_bit(0);
}
inline void MsgLimitUpdateRequest::clear_id() {
  if (id_ != NULL) id_->::Common::TacticalLineId::Clear();
  _clear_bit(0);
}
inline const ::Common::TacticalLineId& MsgLimitUpdateRequest::id() const {
  return id_ != NULL ? *id_ : *default_instance_->id_;
}
inline ::Common::TacticalLineId* MsgLimitUpdateRequest::mutable_id() {
  _set_bit(0);
  if (id_ == NULL) id_ = new ::Common::TacticalLineId;
  return id_;
}

// optional .Common.MsgTacticalLine tactical_line = 2;
inline bool MsgLimitUpdateRequest::has_tactical_line() const {
  return _has_bit(1);
}
inline void MsgLimitUpdateRequest::clear_tactical_line() {
  if (tactical_line_ != NULL) tactical_line_->::Common::MsgTacticalLine::Clear();
  _clear_bit(1);
}
inline const ::Common::MsgTacticalLine& MsgLimitUpdateRequest::tactical_line() const {
  return tactical_line_ != NULL ? *tactical_line_ : *default_instance_->tactical_line_;
}
inline ::Common::MsgTacticalLine* MsgLimitUpdateRequest::mutable_tactical_line() {
  _set_bit(1);
  if (tactical_line_ == NULL) tactical_line_ = new ::Common::MsgTacticalLine;
  return tactical_line_;
}

// -------------------------------------------------------------------

// MsgLimitDestructionRequest

// required .Common.TacticalLineId id = 1;
inline bool MsgLimitDestructionRequest::has_id() const {
  return _has_bit(0);
}
inline void MsgLimitDestructionRequest::clear_id() {
  if (id_ != NULL) id_->::Common::TacticalLineId::Clear();
  _clear_bit(0);
}
inline const ::Common::TacticalLineId& MsgLimitDestructionRequest::id() const {
  return id_ != NULL ? *id_ : *default_instance_->id_;
}
inline ::Common::TacticalLineId* MsgLimitDestructionRequest::mutable_id() {
  _set_bit(0);
  if (id_ == NULL) id_ = new ::Common::TacticalLineId;
  return id_;
}

// -------------------------------------------------------------------

// MsgIntelligenceCreationRequest

// required .Common.MsgIntelligence intelligence = 1;
inline bool MsgIntelligenceCreationRequest::has_intelligence() const {
  return _has_bit(0);
}
inline void MsgIntelligenceCreationRequest::clear_intelligence() {
  if (intelligence_ != NULL) intelligence_->::Common::MsgIntelligence::Clear();
  _clear_bit(0);
}
inline const ::Common::MsgIntelligence& MsgIntelligenceCreationRequest::intelligence() const {
  return intelligence_ != NULL ? *intelligence_ : *default_instance_->intelligence_;
}
inline ::Common::MsgIntelligence* MsgIntelligenceCreationRequest::mutable_intelligence() {
  _set_bit(0);
  if (intelligence_ == NULL) intelligence_ = new ::Common::MsgIntelligence;
  return intelligence_;
}

// -------------------------------------------------------------------

// MsgIntelligenceUpdateRequest

// required .Common.IntelligenceId intelligence = 1;
inline bool MsgIntelligenceUpdateRequest::has_intelligence() const {
  return _has_bit(0);
}
inline void MsgIntelligenceUpdateRequest::clear_intelligence() {
  if (intelligence_ != NULL) intelligence_->::Common::IntelligenceId::Clear();
  _clear_bit(0);
}
inline const ::Common::IntelligenceId& MsgIntelligenceUpdateRequest::intelligence() const {
  return intelligence_ != NULL ? *intelligence_ : *default_instance_->intelligence_;
}
inline ::Common::IntelligenceId* MsgIntelligenceUpdateRequest::mutable_intelligence() {
  _set_bit(0);
  if (intelligence_ == NULL) intelligence_ = new ::Common::IntelligenceId;
  return intelligence_;
}

// optional .Common.FormationId formation = 2;
inline bool MsgIntelligenceUpdateRequest::has_formation() const {
  return _has_bit(1);
}
inline void MsgIntelligenceUpdateRequest::clear_formation() {
  if (formation_ != NULL) formation_->::Common::FormationId::Clear();
  _clear_bit(1);
}
inline const ::Common::FormationId& MsgIntelligenceUpdateRequest::formation() const {
  return formation_ != NULL ? *formation_ : *default_instance_->formation_;
}
inline ::Common::FormationId* MsgIntelligenceUpdateRequest::mutable_formation() {
  _set_bit(1);
  if (formation_ == NULL) formation_ = new ::Common::FormationId;
  return formation_;
}

// optional string name = 3;
inline bool MsgIntelligenceUpdateRequest::has_name() const {
  return _has_bit(2);
}
inline void MsgIntelligenceUpdateRequest::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& MsgIntelligenceUpdateRequest::name() const {
  return *name_;
}
inline void MsgIntelligenceUpdateRequest::set_name(const ::std::string& value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgIntelligenceUpdateRequest::set_name(const char* value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgIntelligenceUpdateRequest::set_name(const char* value, size_t size) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgIntelligenceUpdateRequest::mutable_name() {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional string nature = 4;
inline bool MsgIntelligenceUpdateRequest::has_nature() const {
  return _has_bit(3);
}
inline void MsgIntelligenceUpdateRequest::clear_nature() {
  if (nature_ != &_default_nature_) {
    nature_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& MsgIntelligenceUpdateRequest::nature() const {
  return *nature_;
}
inline void MsgIntelligenceUpdateRequest::set_nature(const ::std::string& value) {
  _set_bit(3);
  if (nature_ == &_default_nature_) {
    nature_ = new ::std::string;
  }
  nature_->assign(value);
}
inline void MsgIntelligenceUpdateRequest::set_nature(const char* value) {
  _set_bit(3);
  if (nature_ == &_default_nature_) {
    nature_ = new ::std::string;
  }
  nature_->assign(value);
}
inline void MsgIntelligenceUpdateRequest::set_nature(const char* value, size_t size) {
  _set_bit(3);
  if (nature_ == &_default_nature_) {
    nature_ = new ::std::string;
  }
  nature_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgIntelligenceUpdateRequest::mutable_nature() {
  _set_bit(3);
  if (nature_ == &_default_nature_) {
    nature_ = new ::std::string;
  }
  return nature_;
}

// optional .Common.EnumNatureLevel level = 5;
inline bool MsgIntelligenceUpdateRequest::has_level() const {
  return _has_bit(4);
}
inline void MsgIntelligenceUpdateRequest::clear_level() {
  level_ = 0;
  _clear_bit(4);
}
inline Common::EnumNatureLevel MsgIntelligenceUpdateRequest::level() const {
  return static_cast< Common::EnumNatureLevel >(level_);
}
inline void MsgIntelligenceUpdateRequest::set_level(Common::EnumNatureLevel value) {
  GOOGLE_DCHECK(Common::EnumNatureLevel_IsValid(value));
  _set_bit(4);
  level_ = value;
}

// optional bool embarked = 6;
inline bool MsgIntelligenceUpdateRequest::has_embarked() const {
  return _has_bit(5);
}
inline void MsgIntelligenceUpdateRequest::clear_embarked() {
  embarked_ = false;
  _clear_bit(5);
}
inline bool MsgIntelligenceUpdateRequest::embarked() const {
  return embarked_;
}
inline void MsgIntelligenceUpdateRequest::set_embarked(bool value) {
  _set_bit(5);
  embarked_ = value;
}

// optional .Common.MsgCoordLatLong location = 7;
inline bool MsgIntelligenceUpdateRequest::has_location() const {
  return _has_bit(6);
}
inline void MsgIntelligenceUpdateRequest::clear_location() {
  if (location_ != NULL) location_->::Common::MsgCoordLatLong::Clear();
  _clear_bit(6);
}
inline const ::Common::MsgCoordLatLong& MsgIntelligenceUpdateRequest::location() const {
  return location_ != NULL ? *location_ : *default_instance_->location_;
}
inline ::Common::MsgCoordLatLong* MsgIntelligenceUpdateRequest::mutable_location() {
  _set_bit(6);
  if (location_ == NULL) location_ = new ::Common::MsgCoordLatLong;
  return location_;
}

// optional .Common.EnumDiplomacy diplomacy = 8;
inline bool MsgIntelligenceUpdateRequest::has_diplomacy() const {
  return _has_bit(7);
}
inline void MsgIntelligenceUpdateRequest::clear_diplomacy() {
  diplomacy_ = 0;
  _clear_bit(7);
}
inline Common::EnumDiplomacy MsgIntelligenceUpdateRequest::diplomacy() const {
  return static_cast< Common::EnumDiplomacy >(diplomacy_);
}
inline void MsgIntelligenceUpdateRequest::set_diplomacy(Common::EnumDiplomacy value) {
  GOOGLE_DCHECK(Common::EnumDiplomacy_IsValid(value));
  _set_bit(7);
  diplomacy_ = value;
}

// -------------------------------------------------------------------

// MsgIntelligenceDestructionRequest

// required .Common.IntelligenceId id = 1;
inline bool MsgIntelligenceDestructionRequest::has_id() const {
  return _has_bit(0);
}
inline void MsgIntelligenceDestructionRequest::clear_id() {
  if (id_ != NULL) id_->::Common::IntelligenceId::Clear();
  _clear_bit(0);
}
inline const ::Common::IntelligenceId& MsgIntelligenceDestructionRequest::id() const {
  return id_ != NULL ? *id_ : *default_instance_->id_;
}
inline ::Common::IntelligenceId* MsgIntelligenceDestructionRequest::mutable_id() {
  _set_bit(0);
  if (id_ == NULL) id_ = new ::Common::IntelligenceId;
  return id_;
}

// -------------------------------------------------------------------

// MsgShapeCreationRequest

// required .Common.MsgShape shape = 1;
inline bool MsgShapeCreationRequest::has_shape() const {
  return _has_bit(0);
}
inline void MsgShapeCreationRequest::clear_shape() {
  if (shape_ != NULL) shape_->::Common::MsgShape::Clear();
  _clear_bit(0);
}
inline const ::Common::MsgShape& MsgShapeCreationRequest::shape() const {
  return shape_ != NULL ? *shape_ : *default_instance_->shape_;
}
inline ::Common::MsgShape* MsgShapeCreationRequest::mutable_shape() {
  _set_bit(0);
  if (shape_ == NULL) shape_ = new ::Common::MsgShape;
  return shape_;
}

// -------------------------------------------------------------------

// MsgShapeUpdateRequest

// required .Common.DrawingId shape = 1;
inline bool MsgShapeUpdateRequest::has_shape() const {
  return _has_bit(0);
}
inline void MsgShapeUpdateRequest::clear_shape() {
  if (shape_ != NULL) shape_->::Common::DrawingId::Clear();
  _clear_bit(0);
}
inline const ::Common::DrawingId& MsgShapeUpdateRequest::shape() const {
  return shape_ != NULL ? *shape_ : *default_instance_->shape_;
}
inline ::Common::DrawingId* MsgShapeUpdateRequest::mutable_shape() {
  _set_bit(0);
  if (shape_ == NULL) shape_ = new ::Common::DrawingId;
  return shape_;
}

// optional string category = 2;
inline bool MsgShapeUpdateRequest::has_category() const {
  return _has_bit(1);
}
inline void MsgShapeUpdateRequest::clear_category() {
  if (category_ != &_default_category_) {
    category_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& MsgShapeUpdateRequest::category() const {
  return *category_;
}
inline void MsgShapeUpdateRequest::set_category(const ::std::string& value) {
  _set_bit(1);
  if (category_ == &_default_category_) {
    category_ = new ::std::string;
  }
  category_->assign(value);
}
inline void MsgShapeUpdateRequest::set_category(const char* value) {
  _set_bit(1);
  if (category_ == &_default_category_) {
    category_ = new ::std::string;
  }
  category_->assign(value);
}
inline void MsgShapeUpdateRequest::set_category(const char* value, size_t size) {
  _set_bit(1);
  if (category_ == &_default_category_) {
    category_ = new ::std::string;
  }
  category_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgShapeUpdateRequest::mutable_category() {
  _set_bit(1);
  if (category_ == &_default_category_) {
    category_ = new ::std::string;
  }
  return category_;
}

// optional string color = 3;
inline bool MsgShapeUpdateRequest::has_color() const {
  return _has_bit(2);
}
inline void MsgShapeUpdateRequest::clear_color() {
  if (color_ != &_default_color_) {
    color_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& MsgShapeUpdateRequest::color() const {
  return *color_;
}
inline void MsgShapeUpdateRequest::set_color(const ::std::string& value) {
  _set_bit(2);
  if (color_ == &_default_color_) {
    color_ = new ::std::string;
  }
  color_->assign(value);
}
inline void MsgShapeUpdateRequest::set_color(const char* value) {
  _set_bit(2);
  if (color_ == &_default_color_) {
    color_ = new ::std::string;
  }
  color_->assign(value);
}
inline void MsgShapeUpdateRequest::set_color(const char* value, size_t size) {
  _set_bit(2);
  if (color_ == &_default_color_) {
    color_ = new ::std::string;
  }
  color_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgShapeUpdateRequest::mutable_color() {
  _set_bit(2);
  if (color_ == &_default_color_) {
    color_ = new ::std::string;
  }
  return color_;
}

// optional string pattern = 4;
inline bool MsgShapeUpdateRequest::has_pattern() const {
  return _has_bit(3);
}
inline void MsgShapeUpdateRequest::clear_pattern() {
  if (pattern_ != &_default_pattern_) {
    pattern_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& MsgShapeUpdateRequest::pattern() const {
  return *pattern_;
}
inline void MsgShapeUpdateRequest::set_pattern(const ::std::string& value) {
  _set_bit(3);
  if (pattern_ == &_default_pattern_) {
    pattern_ = new ::std::string;
  }
  pattern_->assign(value);
}
inline void MsgShapeUpdateRequest::set_pattern(const char* value) {
  _set_bit(3);
  if (pattern_ == &_default_pattern_) {
    pattern_ = new ::std::string;
  }
  pattern_->assign(value);
}
inline void MsgShapeUpdateRequest::set_pattern(const char* value, size_t size) {
  _set_bit(3);
  if (pattern_ == &_default_pattern_) {
    pattern_ = new ::std::string;
  }
  pattern_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgShapeUpdateRequest::mutable_pattern() {
  _set_bit(3);
  if (pattern_ == &_default_pattern_) {
    pattern_ = new ::std::string;
  }
  return pattern_;
}

// optional .Common.MsgCoordLatLongList points = 5;
inline bool MsgShapeUpdateRequest::has_points() const {
  return _has_bit(4);
}
inline void MsgShapeUpdateRequest::clear_points() {
  if (points_ != NULL) points_->::Common::MsgCoordLatLongList::Clear();
  _clear_bit(4);
}
inline const ::Common::MsgCoordLatLongList& MsgShapeUpdateRequest::points() const {
  return points_ != NULL ? *points_ : *default_instance_->points_;
}
inline ::Common::MsgCoordLatLongList* MsgShapeUpdateRequest::mutable_points() {
  _set_bit(4);
  if (points_ == NULL) points_ = new ::Common::MsgCoordLatLongList;
  return points_;
}

// -------------------------------------------------------------------

// MsgShapeDestructionRequest

// required .Common.DrawingId id = 1;
inline bool MsgShapeDestructionRequest::has_id() const {
  return _has_bit(0);
}
inline void MsgShapeDestructionRequest::clear_id() {
  if (id_ != NULL) id_->::Common::DrawingId::Clear();
  _clear_bit(0);
}
inline const ::Common::DrawingId& MsgShapeDestructionRequest::id() const {
  return id_ != NULL ? *id_ : *default_instance_->id_;
}
inline ::Common::DrawingId* MsgShapeDestructionRequest::mutable_id() {
  _set_bit(0);
  if (id_ == NULL) id_ = new ::Common::DrawingId;
  return id_;
}

// -------------------------------------------------------------------

// MsgNoteCreationRequest

// required .Common.MsgNote note = 1;
inline bool MsgNoteCreationRequest::has_note() const {
  return _has_bit(0);
}
inline void MsgNoteCreationRequest::clear_note() {
  if (note_ != NULL) note_->::Common::MsgNote::Clear();
  _clear_bit(0);
}
inline const ::Common::MsgNote& MsgNoteCreationRequest::note() const {
  return note_ != NULL ? *note_ : *default_instance_->note_;
}
inline ::Common::MsgNote* MsgNoteCreationRequest::mutable_note() {
  _set_bit(0);
  if (note_ == NULL) note_ = new ::Common::MsgNote;
  return note_;
}

// -------------------------------------------------------------------

// MsgNoteUpdateRequest

// required uint32 id = 1;
inline bool MsgNoteUpdateRequest::has_id() const {
  return _has_bit(0);
}
inline void MsgNoteUpdateRequest::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgNoteUpdateRequest::id() const {
  return id_;
}
inline void MsgNoteUpdateRequest::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// optional string name = 2;
inline bool MsgNoteUpdateRequest::has_name() const {
  return _has_bit(1);
}
inline void MsgNoteUpdateRequest::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& MsgNoteUpdateRequest::name() const {
  return *name_;
}
inline void MsgNoteUpdateRequest::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgNoteUpdateRequest::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgNoteUpdateRequest::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgNoteUpdateRequest::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional string number = 3;
inline bool MsgNoteUpdateRequest::has_number() const {
  return _has_bit(2);
}
inline void MsgNoteUpdateRequest::clear_number() {
  if (number_ != &_default_number_) {
    number_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& MsgNoteUpdateRequest::number() const {
  return *number_;
}
inline void MsgNoteUpdateRequest::set_number(const ::std::string& value) {
  _set_bit(2);
  if (number_ == &_default_number_) {
    number_ = new ::std::string;
  }
  number_->assign(value);
}
inline void MsgNoteUpdateRequest::set_number(const char* value) {
  _set_bit(2);
  if (number_ == &_default_number_) {
    number_ = new ::std::string;
  }
  number_->assign(value);
}
inline void MsgNoteUpdateRequest::set_number(const char* value, size_t size) {
  _set_bit(2);
  if (number_ == &_default_number_) {
    number_ = new ::std::string;
  }
  number_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgNoteUpdateRequest::mutable_number() {
  _set_bit(2);
  if (number_ == &_default_number_) {
    number_ = new ::std::string;
  }
  return number_;
}

// optional string description = 4;
inline bool MsgNoteUpdateRequest::has_description() const {
  return _has_bit(3);
}
inline void MsgNoteUpdateRequest::clear_description() {
  if (description_ != &_default_description_) {
    description_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& MsgNoteUpdateRequest::description() const {
  return *description_;
}
inline void MsgNoteUpdateRequest::set_description(const ::std::string& value) {
  _set_bit(3);
  if (description_ == &_default_description_) {
    description_ = new ::std::string;
  }
  description_->assign(value);
}
inline void MsgNoteUpdateRequest::set_description(const char* value) {
  _set_bit(3);
  if (description_ == &_default_description_) {
    description_ = new ::std::string;
  }
  description_->assign(value);
}
inline void MsgNoteUpdateRequest::set_description(const char* value, size_t size) {
  _set_bit(3);
  if (description_ == &_default_description_) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgNoteUpdateRequest::mutable_description() {
  _set_bit(3);
  if (description_ == &_default_description_) {
    description_ = new ::std::string;
  }
  return description_;
}

// optional uint32 parent = 5;
inline bool MsgNoteUpdateRequest::has_parent() const {
  return _has_bit(4);
}
inline void MsgNoteUpdateRequest::clear_parent() {
  parent_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 MsgNoteUpdateRequest::parent() const {
  return parent_;
}
inline void MsgNoteUpdateRequest::set_parent(::google::protobuf::uint32 value) {
  _set_bit(4);
  parent_ = value;
}

// -------------------------------------------------------------------

// MsgNoteDestructionRequest

// required uint32 id = 1;
inline bool MsgNoteDestructionRequest::has_id() const {
  return _has_bit(0);
}
inline void MsgNoteDestructionRequest::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgNoteDestructionRequest::id() const {
  return id_;
}
inline void MsgNoteDestructionRequest::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// required bool delete_all = 2;
inline bool MsgNoteDestructionRequest::has_delete_all() const {
  return _has_bit(1);
}
inline void MsgNoteDestructionRequest::clear_delete_all() {
  delete_all_ = false;
  _clear_bit(1);
}
inline bool MsgNoteDestructionRequest::delete_all() const {
  return delete_all_;
}
inline void MsgNoteDestructionRequest::set_delete_all(bool value) {
  _set_bit(1);
  delete_all_ = value;
}

// -------------------------------------------------------------------

// MsgClientToMessenger_Content

// optional .MsgsClientToMessenger.MsgLimitCreationRequest limit_creation_request = 1;
inline bool MsgClientToMessenger_Content::has_limit_creation_request() const {
  return _has_bit(0);
}
inline void MsgClientToMessenger_Content::clear_limit_creation_request() {
  if (limit_creation_request_ != NULL) limit_creation_request_->::MsgsClientToMessenger::MsgLimitCreationRequest::Clear();
  _clear_bit(0);
}
inline const ::MsgsClientToMessenger::MsgLimitCreationRequest& MsgClientToMessenger_Content::limit_creation_request() const {
  return limit_creation_request_ != NULL ? *limit_creation_request_ : *default_instance_->limit_creation_request_;
}
inline ::MsgsClientToMessenger::MsgLimitCreationRequest* MsgClientToMessenger_Content::mutable_limit_creation_request() {
  _set_bit(0);
  if (limit_creation_request_ == NULL) limit_creation_request_ = new ::MsgsClientToMessenger::MsgLimitCreationRequest;
  return limit_creation_request_;
}

// optional .MsgsClientToMessenger.MsgLimitDestructionRequest limit_destruction_request = 2;
inline bool MsgClientToMessenger_Content::has_limit_destruction_request() const {
  return _has_bit(1);
}
inline void MsgClientToMessenger_Content::clear_limit_destruction_request() {
  if (limit_destruction_request_ != NULL) limit_destruction_request_->::MsgsClientToMessenger::MsgLimitDestructionRequest::Clear();
  _clear_bit(1);
}
inline const ::MsgsClientToMessenger::MsgLimitDestructionRequest& MsgClientToMessenger_Content::limit_destruction_request() const {
  return limit_destruction_request_ != NULL ? *limit_destruction_request_ : *default_instance_->limit_destruction_request_;
}
inline ::MsgsClientToMessenger::MsgLimitDestructionRequest* MsgClientToMessenger_Content::mutable_limit_destruction_request() {
  _set_bit(1);
  if (limit_destruction_request_ == NULL) limit_destruction_request_ = new ::MsgsClientToMessenger::MsgLimitDestructionRequest;
  return limit_destruction_request_;
}

// optional .MsgsClientToMessenger.MsgLimitUpdateRequest limit_update_request = 3;
inline bool MsgClientToMessenger_Content::has_limit_update_request() const {
  return _has_bit(2);
}
inline void MsgClientToMessenger_Content::clear_limit_update_request() {
  if (limit_update_request_ != NULL) limit_update_request_->::MsgsClientToMessenger::MsgLimitUpdateRequest::Clear();
  _clear_bit(2);
}
inline const ::MsgsClientToMessenger::MsgLimitUpdateRequest& MsgClientToMessenger_Content::limit_update_request() const {
  return limit_update_request_ != NULL ? *limit_update_request_ : *default_instance_->limit_update_request_;
}
inline ::MsgsClientToMessenger::MsgLimitUpdateRequest* MsgClientToMessenger_Content::mutable_limit_update_request() {
  _set_bit(2);
  if (limit_update_request_ == NULL) limit_update_request_ = new ::MsgsClientToMessenger::MsgLimitUpdateRequest;
  return limit_update_request_;
}

// optional .MsgsClientToMessenger.MsgLimaCreationRequest lima_creation_request = 4;
inline bool MsgClientToMessenger_Content::has_lima_creation_request() const {
  return _has_bit(3);
}
inline void MsgClientToMessenger_Content::clear_lima_creation_request() {
  if (lima_creation_request_ != NULL) lima_creation_request_->::MsgsClientToMessenger::MsgLimaCreationRequest::Clear();
  _clear_bit(3);
}
inline const ::MsgsClientToMessenger::MsgLimaCreationRequest& MsgClientToMessenger_Content::lima_creation_request() const {
  return lima_creation_request_ != NULL ? *lima_creation_request_ : *default_instance_->lima_creation_request_;
}
inline ::MsgsClientToMessenger::MsgLimaCreationRequest* MsgClientToMessenger_Content::mutable_lima_creation_request() {
  _set_bit(3);
  if (lima_creation_request_ == NULL) lima_creation_request_ = new ::MsgsClientToMessenger::MsgLimaCreationRequest;
  return lima_creation_request_;
}

// optional .MsgsClientToMessenger.MsgLimaDestructionRequest lima_destruction_request = 5;
inline bool MsgClientToMessenger_Content::has_lima_destruction_request() const {
  return _has_bit(4);
}
inline void MsgClientToMessenger_Content::clear_lima_destruction_request() {
  if (lima_destruction_request_ != NULL) lima_destruction_request_->::MsgsClientToMessenger::MsgLimaDestructionRequest::Clear();
  _clear_bit(4);
}
inline const ::MsgsClientToMessenger::MsgLimaDestructionRequest& MsgClientToMessenger_Content::lima_destruction_request() const {
  return lima_destruction_request_ != NULL ? *lima_destruction_request_ : *default_instance_->lima_destruction_request_;
}
inline ::MsgsClientToMessenger::MsgLimaDestructionRequest* MsgClientToMessenger_Content::mutable_lima_destruction_request() {
  _set_bit(4);
  if (lima_destruction_request_ == NULL) lima_destruction_request_ = new ::MsgsClientToMessenger::MsgLimaDestructionRequest;
  return lima_destruction_request_;
}

// optional .MsgsClientToMessenger.MsgLimaUpdateRequest lima_update_request = 6;
inline bool MsgClientToMessenger_Content::has_lima_update_request() const {
  return _has_bit(5);
}
inline void MsgClientToMessenger_Content::clear_lima_update_request() {
  if (lima_update_request_ != NULL) lima_update_request_->::MsgsClientToMessenger::MsgLimaUpdateRequest::Clear();
  _clear_bit(5);
}
inline const ::MsgsClientToMessenger::MsgLimaUpdateRequest& MsgClientToMessenger_Content::lima_update_request() const {
  return lima_update_request_ != NULL ? *lima_update_request_ : *default_instance_->lima_update_request_;
}
inline ::MsgsClientToMessenger::MsgLimaUpdateRequest* MsgClientToMessenger_Content::mutable_lima_update_request() {
  _set_bit(5);
  if (lima_update_request_ == NULL) lima_update_request_ = new ::MsgsClientToMessenger::MsgLimaUpdateRequest;
  return lima_update_request_;
}

// optional .MsgsClientToMessenger.MsgIntelligenceCreationRequest intelligence_creation_request = 7;
inline bool MsgClientToMessenger_Content::has_intelligence_creation_request() const {
  return _has_bit(6);
}
inline void MsgClientToMessenger_Content::clear_intelligence_creation_request() {
  if (intelligence_creation_request_ != NULL) intelligence_creation_request_->::MsgsClientToMessenger::MsgIntelligenceCreationRequest::Clear();
  _clear_bit(6);
}
inline const ::MsgsClientToMessenger::MsgIntelligenceCreationRequest& MsgClientToMessenger_Content::intelligence_creation_request() const {
  return intelligence_creation_request_ != NULL ? *intelligence_creation_request_ : *default_instance_->intelligence_creation_request_;
}
inline ::MsgsClientToMessenger::MsgIntelligenceCreationRequest* MsgClientToMessenger_Content::mutable_intelligence_creation_request() {
  _set_bit(6);
  if (intelligence_creation_request_ == NULL) intelligence_creation_request_ = new ::MsgsClientToMessenger::MsgIntelligenceCreationRequest;
  return intelligence_creation_request_;
}

// optional .MsgsClientToMessenger.MsgIntelligenceUpdateRequest intelligence_update_request = 8;
inline bool MsgClientToMessenger_Content::has_intelligence_update_request() const {
  return _has_bit(7);
}
inline void MsgClientToMessenger_Content::clear_intelligence_update_request() {
  if (intelligence_update_request_ != NULL) intelligence_update_request_->::MsgsClientToMessenger::MsgIntelligenceUpdateRequest::Clear();
  _clear_bit(7);
}
inline const ::MsgsClientToMessenger::MsgIntelligenceUpdateRequest& MsgClientToMessenger_Content::intelligence_update_request() const {
  return intelligence_update_request_ != NULL ? *intelligence_update_request_ : *default_instance_->intelligence_update_request_;
}
inline ::MsgsClientToMessenger::MsgIntelligenceUpdateRequest* MsgClientToMessenger_Content::mutable_intelligence_update_request() {
  _set_bit(7);
  if (intelligence_update_request_ == NULL) intelligence_update_request_ = new ::MsgsClientToMessenger::MsgIntelligenceUpdateRequest;
  return intelligence_update_request_;
}

// optional .MsgsClientToMessenger.MsgIntelligenceDestructionRequest intelligence_destruction_request = 9;
inline bool MsgClientToMessenger_Content::has_intelligence_destruction_request() const {
  return _has_bit(8);
}
inline void MsgClientToMessenger_Content::clear_intelligence_destruction_request() {
  if (intelligence_destruction_request_ != NULL) intelligence_destruction_request_->::MsgsClientToMessenger::MsgIntelligenceDestructionRequest::Clear();
  _clear_bit(8);
}
inline const ::MsgsClientToMessenger::MsgIntelligenceDestructionRequest& MsgClientToMessenger_Content::intelligence_destruction_request() const {
  return intelligence_destruction_request_ != NULL ? *intelligence_destruction_request_ : *default_instance_->intelligence_destruction_request_;
}
inline ::MsgsClientToMessenger::MsgIntelligenceDestructionRequest* MsgClientToMessenger_Content::mutable_intelligence_destruction_request() {
  _set_bit(8);
  if (intelligence_destruction_request_ == NULL) intelligence_destruction_request_ = new ::MsgsClientToMessenger::MsgIntelligenceDestructionRequest;
  return intelligence_destruction_request_;
}

// optional .MsgsClientToMessenger.MsgShapeCreationRequest shape_creation_request = 10;
inline bool MsgClientToMessenger_Content::has_shape_creation_request() const {
  return _has_bit(9);
}
inline void MsgClientToMessenger_Content::clear_shape_creation_request() {
  if (shape_creation_request_ != NULL) shape_creation_request_->::MsgsClientToMessenger::MsgShapeCreationRequest::Clear();
  _clear_bit(9);
}
inline const ::MsgsClientToMessenger::MsgShapeCreationRequest& MsgClientToMessenger_Content::shape_creation_request() const {
  return shape_creation_request_ != NULL ? *shape_creation_request_ : *default_instance_->shape_creation_request_;
}
inline ::MsgsClientToMessenger::MsgShapeCreationRequest* MsgClientToMessenger_Content::mutable_shape_creation_request() {
  _set_bit(9);
  if (shape_creation_request_ == NULL) shape_creation_request_ = new ::MsgsClientToMessenger::MsgShapeCreationRequest;
  return shape_creation_request_;
}

// optional .MsgsClientToMessenger.MsgShapeDestructionRequest shape_destruction_request = 11;
inline bool MsgClientToMessenger_Content::has_shape_destruction_request() const {
  return _has_bit(10);
}
inline void MsgClientToMessenger_Content::clear_shape_destruction_request() {
  if (shape_destruction_request_ != NULL) shape_destruction_request_->::MsgsClientToMessenger::MsgShapeDestructionRequest::Clear();
  _clear_bit(10);
}
inline const ::MsgsClientToMessenger::MsgShapeDestructionRequest& MsgClientToMessenger_Content::shape_destruction_request() const {
  return shape_destruction_request_ != NULL ? *shape_destruction_request_ : *default_instance_->shape_destruction_request_;
}
inline ::MsgsClientToMessenger::MsgShapeDestructionRequest* MsgClientToMessenger_Content::mutable_shape_destruction_request() {
  _set_bit(10);
  if (shape_destruction_request_ == NULL) shape_destruction_request_ = new ::MsgsClientToMessenger::MsgShapeDestructionRequest;
  return shape_destruction_request_;
}

// optional .MsgsClientToMessenger.MsgShapeUpdateRequest shape_update_request = 12;
inline bool MsgClientToMessenger_Content::has_shape_update_request() const {
  return _has_bit(11);
}
inline void MsgClientToMessenger_Content::clear_shape_update_request() {
  if (shape_update_request_ != NULL) shape_update_request_->::MsgsClientToMessenger::MsgShapeUpdateRequest::Clear();
  _clear_bit(11);
}
inline const ::MsgsClientToMessenger::MsgShapeUpdateRequest& MsgClientToMessenger_Content::shape_update_request() const {
  return shape_update_request_ != NULL ? *shape_update_request_ : *default_instance_->shape_update_request_;
}
inline ::MsgsClientToMessenger::MsgShapeUpdateRequest* MsgClientToMessenger_Content::mutable_shape_update_request() {
  _set_bit(11);
  if (shape_update_request_ == NULL) shape_update_request_ = new ::MsgsClientToMessenger::MsgShapeUpdateRequest;
  return shape_update_request_;
}

// optional .Common.MsgTextMessage text_message = 13;
inline bool MsgClientToMessenger_Content::has_text_message() const {
  return _has_bit(12);
}
inline void MsgClientToMessenger_Content::clear_text_message() {
  if (text_message_ != NULL) text_message_->::Common::MsgTextMessage::Clear();
  _clear_bit(12);
}
inline const ::Common::MsgTextMessage& MsgClientToMessenger_Content::text_message() const {
  return text_message_ != NULL ? *text_message_ : *default_instance_->text_message_;
}
inline ::Common::MsgTextMessage* MsgClientToMessenger_Content::mutable_text_message() {
  _set_bit(12);
  if (text_message_ == NULL) text_message_ = new ::Common::MsgTextMessage;
  return text_message_;
}

// optional .MsgsClientToMessenger.MsgNoteCreationRequest note_creation_request = 14;
inline bool MsgClientToMessenger_Content::has_note_creation_request() const {
  return _has_bit(13);
}
inline void MsgClientToMessenger_Content::clear_note_creation_request() {
  if (note_creation_request_ != NULL) note_creation_request_->::MsgsClientToMessenger::MsgNoteCreationRequest::Clear();
  _clear_bit(13);
}
inline const ::MsgsClientToMessenger::MsgNoteCreationRequest& MsgClientToMessenger_Content::note_creation_request() const {
  return note_creation_request_ != NULL ? *note_creation_request_ : *default_instance_->note_creation_request_;
}
inline ::MsgsClientToMessenger::MsgNoteCreationRequest* MsgClientToMessenger_Content::mutable_note_creation_request() {
  _set_bit(13);
  if (note_creation_request_ == NULL) note_creation_request_ = new ::MsgsClientToMessenger::MsgNoteCreationRequest;
  return note_creation_request_;
}

// optional .MsgsClientToMessenger.MsgNoteUpdateRequest note_update_request = 15;
inline bool MsgClientToMessenger_Content::has_note_update_request() const {
  return _has_bit(14);
}
inline void MsgClientToMessenger_Content::clear_note_update_request() {
  if (note_update_request_ != NULL) note_update_request_->::MsgsClientToMessenger::MsgNoteUpdateRequest::Clear();
  _clear_bit(14);
}
inline const ::MsgsClientToMessenger::MsgNoteUpdateRequest& MsgClientToMessenger_Content::note_update_request() const {
  return note_update_request_ != NULL ? *note_update_request_ : *default_instance_->note_update_request_;
}
inline ::MsgsClientToMessenger::MsgNoteUpdateRequest* MsgClientToMessenger_Content::mutable_note_update_request() {
  _set_bit(14);
  if (note_update_request_ == NULL) note_update_request_ = new ::MsgsClientToMessenger::MsgNoteUpdateRequest;
  return note_update_request_;
}

// optional .MsgsClientToMessenger.MsgNoteDestructionRequest note_destruction_request = 16;
inline bool MsgClientToMessenger_Content::has_note_destruction_request() const {
  return _has_bit(15);
}
inline void MsgClientToMessenger_Content::clear_note_destruction_request() {
  if (note_destruction_request_ != NULL) note_destruction_request_->::MsgsClientToMessenger::MsgNoteDestructionRequest::Clear();
  _clear_bit(15);
}
inline const ::MsgsClientToMessenger::MsgNoteDestructionRequest& MsgClientToMessenger_Content::note_destruction_request() const {
  return note_destruction_request_ != NULL ? *note_destruction_request_ : *default_instance_->note_destruction_request_;
}
inline ::MsgsClientToMessenger::MsgNoteDestructionRequest* MsgClientToMessenger_Content::mutable_note_destruction_request() {
  _set_bit(15);
  if (note_destruction_request_ == NULL) note_destruction_request_ = new ::MsgsClientToMessenger::MsgNoteDestructionRequest;
  return note_destruction_request_;
}

// -------------------------------------------------------------------

// MsgClientToMessenger

// optional int32 context = 1;
inline bool MsgClientToMessenger::has_context() const {
  return _has_bit(0);
}
inline void MsgClientToMessenger::clear_context() {
  context_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 MsgClientToMessenger::context() const {
  return context_;
}
inline void MsgClientToMessenger::set_context(::google::protobuf::int32 value) {
  _set_bit(0);
  context_ = value;
}

// required .MsgsClientToMessenger.MsgClientToMessenger.Content message = 2;
inline bool MsgClientToMessenger::has_message() const {
  return _has_bit(1);
}
inline void MsgClientToMessenger::clear_message() {
  if (message_ != NULL) message_->::MsgsClientToMessenger::MsgClientToMessenger_Content::Clear();
  _clear_bit(1);
}
inline const ::MsgsClientToMessenger::MsgClientToMessenger_Content& MsgClientToMessenger::message() const {
  return message_ != NULL ? *message_ : *default_instance_->message_;
}
inline ::MsgsClientToMessenger::MsgClientToMessenger_Content* MsgClientToMessenger::mutable_message() {
  _set_bit(1);
  if (message_ == NULL) message_ = new ::MsgsClientToMessenger::MsgClientToMessenger_Content;
  return message_;
}


}  // namespace MsgsClientToMessenger

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

#endif  // PROTOBUF_ClientToMessenger_2eproto__INCLUDED
