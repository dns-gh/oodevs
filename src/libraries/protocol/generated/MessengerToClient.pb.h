// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_MessengerToClient_2eproto__INCLUDED
#define PROTOBUF_MessengerToClient_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "Common.pb.h"

namespace MsgsMessengerToClient {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MessengerToClient_2eproto();
void protobuf_AssignDesc_MessengerToClient_2eproto();
void protobuf_ShutdownFile_MessengerToClient_2eproto();

class TacticalLineAck;
class MsgLimitCreation;
class MsgLimitUpdate;
class MsgLimitDestruction;
class MsgLimitCreationRequestAck;
class MsgLimitUpdateRequestAck;
class MsgLimitDestructionRequestAck;
class MsgLimaCreation;
class MsgLimaDestruction;
class MsgLimaUpdate;
class MsgLimaCreationRequestAck;
class MsgLimaUpdateRequestAck;
class MsgLimaDestructionRequestAck;
class MsgIntelligenceCreation;
class MsgIntelligenceUpdate;
class MsgIntelligenceDestruction;
class IntelligenceRequestAck;
class MsgIntelligenceCreationRequestAck;
class MsgIntelligenceUpdateRequestAck;
class MsgIntelligenceDestructionRequestAck;
class MsgShapeCreation;
class MsgShapeUpdate;
class MsgShapeDestruction;
class ShapeRequestAck;
class MsgShapeCreationRequestAck;
class MsgShapeUpdateRequestAck;
class MsgShapeDestructionRequestAck;
class MsgNoteCreation;
class MsgNoteUpdate;
class MsgNoteDestruction;
class MsgMessengerToClient;
class MsgMessengerToClient_Content;

enum TacticalLineAck_ErrorCode {
  TacticalLineAck_ErrorCode_no_error = 0,
  TacticalLineAck_ErrorCode_error_invalid_id = 1,
  TacticalLineAck_ErrorCode_error_invalid_geometry = 2,
  TacticalLineAck_ErrorCode_error_invalid_lima_function = 3,
  TacticalLineAck_ErrorCode_error_invalid_diffusion = 4
};
bool TacticalLineAck_ErrorCode_IsValid(int value);
const TacticalLineAck_ErrorCode TacticalLineAck_ErrorCode_ErrorCode_MIN = TacticalLineAck_ErrorCode_no_error;
const TacticalLineAck_ErrorCode TacticalLineAck_ErrorCode_ErrorCode_MAX = TacticalLineAck_ErrorCode_error_invalid_diffusion;

const ::google::protobuf::EnumDescriptor* TacticalLineAck_ErrorCode_descriptor();
inline const ::std::string& TacticalLineAck_ErrorCode_Name(TacticalLineAck_ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    TacticalLineAck_ErrorCode_descriptor(), value);
}
inline bool TacticalLineAck_ErrorCode_Parse(
    const ::std::string& name, TacticalLineAck_ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TacticalLineAck_ErrorCode>(
    TacticalLineAck_ErrorCode_descriptor(), name, value);
}
enum IntelligenceRequestAck_ErrorCode {
  IntelligenceRequestAck_ErrorCode_no_error = 0,
  IntelligenceRequestAck_ErrorCode_error_invalid_oid = 1,
  IntelligenceRequestAck_ErrorCode_error_invalid_geometry = 2,
  IntelligenceRequestAck_ErrorCode_error_invalid_formation = 3
};
bool IntelligenceRequestAck_ErrorCode_IsValid(int value);
const IntelligenceRequestAck_ErrorCode IntelligenceRequestAck_ErrorCode_ErrorCode_MIN = IntelligenceRequestAck_ErrorCode_no_error;
const IntelligenceRequestAck_ErrorCode IntelligenceRequestAck_ErrorCode_ErrorCode_MAX = IntelligenceRequestAck_ErrorCode_error_invalid_formation;

const ::google::protobuf::EnumDescriptor* IntelligenceRequestAck_ErrorCode_descriptor();
inline const ::std::string& IntelligenceRequestAck_ErrorCode_Name(IntelligenceRequestAck_ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    IntelligenceRequestAck_ErrorCode_descriptor(), value);
}
inline bool IntelligenceRequestAck_ErrorCode_Parse(
    const ::std::string& name, IntelligenceRequestAck_ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<IntelligenceRequestAck_ErrorCode>(
    IntelligenceRequestAck_ErrorCode_descriptor(), name, value);
}
enum ShapeRequestAck_ErrorCode {
  ShapeRequestAck_ErrorCode_no_error = 0,
  ShapeRequestAck_ErrorCode_error_invalid_oid = 1,
  ShapeRequestAck_ErrorCode_error_invalid_geometry = 2
};
bool ShapeRequestAck_ErrorCode_IsValid(int value);
const ShapeRequestAck_ErrorCode ShapeRequestAck_ErrorCode_ErrorCode_MIN = ShapeRequestAck_ErrorCode_no_error;
const ShapeRequestAck_ErrorCode ShapeRequestAck_ErrorCode_ErrorCode_MAX = ShapeRequestAck_ErrorCode_error_invalid_geometry;

const ::google::protobuf::EnumDescriptor* ShapeRequestAck_ErrorCode_descriptor();
inline const ::std::string& ShapeRequestAck_ErrorCode_Name(ShapeRequestAck_ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ShapeRequestAck_ErrorCode_descriptor(), value);
}
inline bool ShapeRequestAck_ErrorCode_Parse(
    const ::std::string& name, ShapeRequestAck_ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ShapeRequestAck_ErrorCode>(
    ShapeRequestAck_ErrorCode_descriptor(), name, value);
}
// ===================================================================

class TacticalLineAck : public ::google::protobuf::Message {
 public:
  TacticalLineAck();
  virtual ~TacticalLineAck();
  
  TacticalLineAck(const TacticalLineAck& from);
  
  inline TacticalLineAck& operator=(const TacticalLineAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const TacticalLineAck& default_instance();
  void Swap(TacticalLineAck* other);
  
  // implements Message ----------------------------------------------
  
  TacticalLineAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TacticalLineAck& from);
  void MergeFrom(const TacticalLineAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef TacticalLineAck_ErrorCode ErrorCode;
  static const ErrorCode no_error = TacticalLineAck_ErrorCode_no_error;
  static const ErrorCode error_invalid_id = TacticalLineAck_ErrorCode_error_invalid_id;
  static const ErrorCode error_invalid_geometry = TacticalLineAck_ErrorCode_error_invalid_geometry;
  static const ErrorCode error_invalid_lima_function = TacticalLineAck_ErrorCode_error_invalid_lima_function;
  static const ErrorCode error_invalid_diffusion = TacticalLineAck_ErrorCode_error_invalid_diffusion;
  static inline bool ErrorCode_IsValid(int value) {
    return TacticalLineAck_ErrorCode_IsValid(value);
  }
  static const ErrorCode ErrorCode_MIN =
    TacticalLineAck_ErrorCode_ErrorCode_MIN;
  static const ErrorCode ErrorCode_MAX =
    TacticalLineAck_ErrorCode_ErrorCode_MAX;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorCode_descriptor() {
    return TacticalLineAck_ErrorCode_descriptor();
  }
  static inline const ::std::string& ErrorCode_Name(ErrorCode value) {
    return TacticalLineAck_ErrorCode_Name(value);
  }
  static inline bool ErrorCode_Parse(const ::std::string& name,
      ErrorCode* value) {
    return TacticalLineAck_ErrorCode_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static TacticalLineAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgLimitCreation : public ::google::protobuf::Message {
 public:
  MsgLimitCreation();
  virtual ~MsgLimitCreation();
  
  MsgLimitCreation(const MsgLimitCreation& from);
  
  inline MsgLimitCreation& operator=(const MsgLimitCreation& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLimitCreation& default_instance();
  void Swap(MsgLimitCreation* other);
  
  // implements Message ----------------------------------------------
  
  MsgLimitCreation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLimitCreation& from);
  void MergeFrom(const MsgLimitCreation& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 oid = 1;
  inline bool has_oid() const;
  inline void clear_oid();
  static const int kOidFieldNumber = 1;
  inline ::google::protobuf::uint32 oid() const;
  inline void set_oid(::google::protobuf::uint32 value);
  
  // required .Common.MsgTacticalLine tactical_line = 2;
  inline bool has_tactical_line() const;
  inline void clear_tactical_line();
  static const int kTacticalLineFieldNumber = 2;
  inline const ::Common::MsgTacticalLine& tactical_line() const;
  inline ::Common::MsgTacticalLine* mutable_tactical_line();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 oid_;
  ::Common::MsgTacticalLine* tactical_line_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLimitCreation* default_instance_;
};
// -------------------------------------------------------------------

class MsgLimitUpdate : public ::google::protobuf::Message {
 public:
  MsgLimitUpdate();
  virtual ~MsgLimitUpdate();
  
  MsgLimitUpdate(const MsgLimitUpdate& from);
  
  inline MsgLimitUpdate& operator=(const MsgLimitUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLimitUpdate& default_instance();
  void Swap(MsgLimitUpdate* other);
  
  // implements Message ----------------------------------------------
  
  MsgLimitUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLimitUpdate& from);
  void MergeFrom(const MsgLimitUpdate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 oid = 1;
  inline bool has_oid() const;
  inline void clear_oid();
  static const int kOidFieldNumber = 1;
  inline ::google::protobuf::uint32 oid() const;
  inline void set_oid(::google::protobuf::uint32 value);
  
  // required .Common.MsgTacticalLine tactical_line = 2;
  inline bool has_tactical_line() const;
  inline void clear_tactical_line();
  static const int kTacticalLineFieldNumber = 2;
  inline const ::Common::MsgTacticalLine& tactical_line() const;
  inline ::Common::MsgTacticalLine* mutable_tactical_line();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 oid_;
  ::Common::MsgTacticalLine* tactical_line_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLimitUpdate* default_instance_;
};
// -------------------------------------------------------------------

class MsgLimitDestruction : public ::google::protobuf::Message {
 public:
  MsgLimitDestruction();
  virtual ~MsgLimitDestruction();
  
  MsgLimitDestruction(const MsgLimitDestruction& from);
  
  inline MsgLimitDestruction& operator=(const MsgLimitDestruction& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLimitDestruction& default_instance();
  void Swap(MsgLimitDestruction* other);
  
  // implements Message ----------------------------------------------
  
  MsgLimitDestruction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLimitDestruction& from);
  void MergeFrom(const MsgLimitDestruction& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 oid = 1;
  inline bool has_oid() const;
  inline void clear_oid();
  static const int kOidFieldNumber = 1;
  inline ::google::protobuf::uint32 oid() const;
  inline void set_oid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 oid_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLimitDestruction* default_instance_;
};
// -------------------------------------------------------------------

class MsgLimitCreationRequestAck : public ::google::protobuf::Message {
 public:
  MsgLimitCreationRequestAck();
  virtual ~MsgLimitCreationRequestAck();
  
  MsgLimitCreationRequestAck(const MsgLimitCreationRequestAck& from);
  
  inline MsgLimitCreationRequestAck& operator=(const MsgLimitCreationRequestAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLimitCreationRequestAck& default_instance();
  void Swap(MsgLimitCreationRequestAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgLimitCreationRequestAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLimitCreationRequestAck& from);
  void MergeFrom(const MsgLimitCreationRequestAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::MsgsMessengerToClient::TacticalLineAck_ErrorCode error_code() const;
  inline void set_error_code(::MsgsMessengerToClient::TacticalLineAck_ErrorCode value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int error_code_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLimitCreationRequestAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgLimitUpdateRequestAck : public ::google::protobuf::Message {
 public:
  MsgLimitUpdateRequestAck();
  virtual ~MsgLimitUpdateRequestAck();
  
  MsgLimitUpdateRequestAck(const MsgLimitUpdateRequestAck& from);
  
  inline MsgLimitUpdateRequestAck& operator=(const MsgLimitUpdateRequestAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLimitUpdateRequestAck& default_instance();
  void Swap(MsgLimitUpdateRequestAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgLimitUpdateRequestAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLimitUpdateRequestAck& from);
  void MergeFrom(const MsgLimitUpdateRequestAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::MsgsMessengerToClient::TacticalLineAck_ErrorCode error_code() const;
  inline void set_error_code(::MsgsMessengerToClient::TacticalLineAck_ErrorCode value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int error_code_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLimitUpdateRequestAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgLimitDestructionRequestAck : public ::google::protobuf::Message {
 public:
  MsgLimitDestructionRequestAck();
  virtual ~MsgLimitDestructionRequestAck();
  
  MsgLimitDestructionRequestAck(const MsgLimitDestructionRequestAck& from);
  
  inline MsgLimitDestructionRequestAck& operator=(const MsgLimitDestructionRequestAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLimitDestructionRequestAck& default_instance();
  void Swap(MsgLimitDestructionRequestAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgLimitDestructionRequestAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLimitDestructionRequestAck& from);
  void MergeFrom(const MsgLimitDestructionRequestAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::MsgsMessengerToClient::TacticalLineAck_ErrorCode error_code() const;
  inline void set_error_code(::MsgsMessengerToClient::TacticalLineAck_ErrorCode value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int error_code_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLimitDestructionRequestAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgLimaCreation : public ::google::protobuf::Message {
 public:
  MsgLimaCreation();
  virtual ~MsgLimaCreation();
  
  MsgLimaCreation(const MsgLimaCreation& from);
  
  inline MsgLimaCreation& operator=(const MsgLimaCreation& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLimaCreation& default_instance();
  void Swap(MsgLimaCreation* other);
  
  // implements Message ----------------------------------------------
  
  MsgLimaCreation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLimaCreation& from);
  void MergeFrom(const MsgLimaCreation& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 oid = 1;
  inline bool has_oid() const;
  inline void clear_oid();
  static const int kOidFieldNumber = 1;
  inline ::google::protobuf::uint32 oid() const;
  inline void set_oid(::google::protobuf::uint32 value);
  
  // required .Common.MsgTacticalLine tactical_line = 2;
  inline bool has_tactical_line() const;
  inline void clear_tactical_line();
  static const int kTacticalLineFieldNumber = 2;
  inline const ::Common::MsgTacticalLine& tactical_line() const;
  inline ::Common::MsgTacticalLine* mutable_tactical_line();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 oid_;
  ::Common::MsgTacticalLine* tactical_line_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLimaCreation* default_instance_;
};
// -------------------------------------------------------------------

class MsgLimaDestruction : public ::google::protobuf::Message {
 public:
  MsgLimaDestruction();
  virtual ~MsgLimaDestruction();
  
  MsgLimaDestruction(const MsgLimaDestruction& from);
  
  inline MsgLimaDestruction& operator=(const MsgLimaDestruction& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLimaDestruction& default_instance();
  void Swap(MsgLimaDestruction* other);
  
  // implements Message ----------------------------------------------
  
  MsgLimaDestruction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLimaDestruction& from);
  void MergeFrom(const MsgLimaDestruction& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 oid = 1;
  inline bool has_oid() const;
  inline void clear_oid();
  static const int kOidFieldNumber = 1;
  inline ::google::protobuf::uint32 oid() const;
  inline void set_oid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 oid_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLimaDestruction* default_instance_;
};
// -------------------------------------------------------------------

class MsgLimaUpdate : public ::google::protobuf::Message {
 public:
  MsgLimaUpdate();
  virtual ~MsgLimaUpdate();
  
  MsgLimaUpdate(const MsgLimaUpdate& from);
  
  inline MsgLimaUpdate& operator=(const MsgLimaUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLimaUpdate& default_instance();
  void Swap(MsgLimaUpdate* other);
  
  // implements Message ----------------------------------------------
  
  MsgLimaUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLimaUpdate& from);
  void MergeFrom(const MsgLimaUpdate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 oid = 1;
  inline bool has_oid() const;
  inline void clear_oid();
  static const int kOidFieldNumber = 1;
  inline ::google::protobuf::uint32 oid() const;
  inline void set_oid(::google::protobuf::uint32 value);
  
  // required .Common.MsgTacticalLine tactical_line = 2;
  inline bool has_tactical_line() const;
  inline void clear_tactical_line();
  static const int kTacticalLineFieldNumber = 2;
  inline const ::Common::MsgTacticalLine& tactical_line() const;
  inline ::Common::MsgTacticalLine* mutable_tactical_line();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 oid_;
  ::Common::MsgTacticalLine* tactical_line_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLimaUpdate* default_instance_;
};
// -------------------------------------------------------------------

class MsgLimaCreationRequestAck : public ::google::protobuf::Message {
 public:
  MsgLimaCreationRequestAck();
  virtual ~MsgLimaCreationRequestAck();
  
  MsgLimaCreationRequestAck(const MsgLimaCreationRequestAck& from);
  
  inline MsgLimaCreationRequestAck& operator=(const MsgLimaCreationRequestAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLimaCreationRequestAck& default_instance();
  void Swap(MsgLimaCreationRequestAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgLimaCreationRequestAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLimaCreationRequestAck& from);
  void MergeFrom(const MsgLimaCreationRequestAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::MsgsMessengerToClient::TacticalLineAck_ErrorCode error_code() const;
  inline void set_error_code(::MsgsMessengerToClient::TacticalLineAck_ErrorCode value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int error_code_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLimaCreationRequestAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgLimaUpdateRequestAck : public ::google::protobuf::Message {
 public:
  MsgLimaUpdateRequestAck();
  virtual ~MsgLimaUpdateRequestAck();
  
  MsgLimaUpdateRequestAck(const MsgLimaUpdateRequestAck& from);
  
  inline MsgLimaUpdateRequestAck& operator=(const MsgLimaUpdateRequestAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLimaUpdateRequestAck& default_instance();
  void Swap(MsgLimaUpdateRequestAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgLimaUpdateRequestAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLimaUpdateRequestAck& from);
  void MergeFrom(const MsgLimaUpdateRequestAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::MsgsMessengerToClient::TacticalLineAck_ErrorCode error_code() const;
  inline void set_error_code(::MsgsMessengerToClient::TacticalLineAck_ErrorCode value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int error_code_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLimaUpdateRequestAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgLimaDestructionRequestAck : public ::google::protobuf::Message {
 public:
  MsgLimaDestructionRequestAck();
  virtual ~MsgLimaDestructionRequestAck();
  
  MsgLimaDestructionRequestAck(const MsgLimaDestructionRequestAck& from);
  
  inline MsgLimaDestructionRequestAck& operator=(const MsgLimaDestructionRequestAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLimaDestructionRequestAck& default_instance();
  void Swap(MsgLimaDestructionRequestAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgLimaDestructionRequestAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLimaDestructionRequestAck& from);
  void MergeFrom(const MsgLimaDestructionRequestAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::MsgsMessengerToClient::TacticalLineAck_ErrorCode error_code() const;
  inline void set_error_code(::MsgsMessengerToClient::TacticalLineAck_ErrorCode value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int error_code_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLimaDestructionRequestAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgIntelligenceCreation : public ::google::protobuf::Message {
 public:
  MsgIntelligenceCreation();
  virtual ~MsgIntelligenceCreation();
  
  MsgIntelligenceCreation(const MsgIntelligenceCreation& from);
  
  inline MsgIntelligenceCreation& operator=(const MsgIntelligenceCreation& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgIntelligenceCreation& default_instance();
  void Swap(MsgIntelligenceCreation* other);
  
  // implements Message ----------------------------------------------
  
  MsgIntelligenceCreation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgIntelligenceCreation& from);
  void MergeFrom(const MsgIntelligenceCreation& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 oid = 1;
  inline bool has_oid() const;
  inline void clear_oid();
  static const int kOidFieldNumber = 1;
  inline ::google::protobuf::uint32 oid() const;
  inline void set_oid(::google::protobuf::uint32 value);
  
  // required .Common.MsgIntelligence intelligence = 2;
  inline bool has_intelligence() const;
  inline void clear_intelligence();
  static const int kIntelligenceFieldNumber = 2;
  inline const ::Common::MsgIntelligence& intelligence() const;
  inline ::Common::MsgIntelligence* mutable_intelligence();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 oid_;
  ::Common::MsgIntelligence* intelligence_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgIntelligenceCreation* default_instance_;
};
// -------------------------------------------------------------------

class MsgIntelligenceUpdate : public ::google::protobuf::Message {
 public:
  MsgIntelligenceUpdate();
  virtual ~MsgIntelligenceUpdate();
  
  MsgIntelligenceUpdate(const MsgIntelligenceUpdate& from);
  
  inline MsgIntelligenceUpdate& operator=(const MsgIntelligenceUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgIntelligenceUpdate& default_instance();
  void Swap(MsgIntelligenceUpdate* other);
  
  // implements Message ----------------------------------------------
  
  MsgIntelligenceUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgIntelligenceUpdate& from);
  void MergeFrom(const MsgIntelligenceUpdate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 oid = 1;
  inline bool has_oid() const;
  inline void clear_oid();
  static const int kOidFieldNumber = 1;
  inline ::google::protobuf::uint32 oid() const;
  inline void set_oid(::google::protobuf::uint32 value);
  
  // optional uint32 formation = 2;
  inline bool has_formation() const;
  inline void clear_formation();
  static const int kFormationFieldNumber = 2;
  inline ::google::protobuf::uint32 formation() const;
  inline void set_formation(::google::protobuf::uint32 value);
  
  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional string nature = 4;
  inline bool has_nature() const;
  inline void clear_nature();
  static const int kNatureFieldNumber = 4;
  inline const ::std::string& nature() const;
  inline void set_nature(const ::std::string& value);
  inline void set_nature(const char* value);
  inline void set_nature(const char* value, size_t size);
  inline ::std::string* mutable_nature();
  
  // optional .Common.EnumNatureLevel level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline Common::EnumNatureLevel level() const;
  inline void set_level(Common::EnumNatureLevel value);
  
  // optional bool embarked = 6;
  inline bool has_embarked() const;
  inline void clear_embarked();
  static const int kEmbarkedFieldNumber = 6;
  inline bool embarked() const;
  inline void set_embarked(bool value);
  
  // optional .Common.MsgCoordLatLong location = 7;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 7;
  inline const ::Common::MsgCoordLatLong& location() const;
  inline ::Common::MsgCoordLatLong* mutable_location();
  
  // optional .Common.EnumDiplomacy diplomacy = 8;
  inline bool has_diplomacy() const;
  inline void clear_diplomacy();
  static const int kDiplomacyFieldNumber = 8;
  inline Common::EnumDiplomacy diplomacy() const;
  inline void set_diplomacy(Common::EnumDiplomacy value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 oid_;
  ::google::protobuf::uint32 formation_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::std::string* nature_;
  static const ::std::string _default_nature_;
  int level_;
  bool embarked_;
  ::Common::MsgCoordLatLong* location_;
  int diplomacy_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgIntelligenceUpdate* default_instance_;
};
// -------------------------------------------------------------------

class MsgIntelligenceDestruction : public ::google::protobuf::Message {
 public:
  MsgIntelligenceDestruction();
  virtual ~MsgIntelligenceDestruction();
  
  MsgIntelligenceDestruction(const MsgIntelligenceDestruction& from);
  
  inline MsgIntelligenceDestruction& operator=(const MsgIntelligenceDestruction& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgIntelligenceDestruction& default_instance();
  void Swap(MsgIntelligenceDestruction* other);
  
  // implements Message ----------------------------------------------
  
  MsgIntelligenceDestruction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgIntelligenceDestruction& from);
  void MergeFrom(const MsgIntelligenceDestruction& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 oid = 1;
  inline bool has_oid() const;
  inline void clear_oid();
  static const int kOidFieldNumber = 1;
  inline ::google::protobuf::uint32 oid() const;
  inline void set_oid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 oid_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgIntelligenceDestruction* default_instance_;
};
// -------------------------------------------------------------------

class IntelligenceRequestAck : public ::google::protobuf::Message {
 public:
  IntelligenceRequestAck();
  virtual ~IntelligenceRequestAck();
  
  IntelligenceRequestAck(const IntelligenceRequestAck& from);
  
  inline IntelligenceRequestAck& operator=(const IntelligenceRequestAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const IntelligenceRequestAck& default_instance();
  void Swap(IntelligenceRequestAck* other);
  
  // implements Message ----------------------------------------------
  
  IntelligenceRequestAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IntelligenceRequestAck& from);
  void MergeFrom(const IntelligenceRequestAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef IntelligenceRequestAck_ErrorCode ErrorCode;
  static const ErrorCode no_error = IntelligenceRequestAck_ErrorCode_no_error;
  static const ErrorCode error_invalid_oid = IntelligenceRequestAck_ErrorCode_error_invalid_oid;
  static const ErrorCode error_invalid_geometry = IntelligenceRequestAck_ErrorCode_error_invalid_geometry;
  static const ErrorCode error_invalid_formation = IntelligenceRequestAck_ErrorCode_error_invalid_formation;
  static inline bool ErrorCode_IsValid(int value) {
    return IntelligenceRequestAck_ErrorCode_IsValid(value);
  }
  static const ErrorCode ErrorCode_MIN =
    IntelligenceRequestAck_ErrorCode_ErrorCode_MIN;
  static const ErrorCode ErrorCode_MAX =
    IntelligenceRequestAck_ErrorCode_ErrorCode_MAX;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorCode_descriptor() {
    return IntelligenceRequestAck_ErrorCode_descriptor();
  }
  static inline const ::std::string& ErrorCode_Name(ErrorCode value) {
    return IntelligenceRequestAck_ErrorCode_Name(value);
  }
  static inline bool ErrorCode_Parse(const ::std::string& name,
      ErrorCode* value) {
    return IntelligenceRequestAck_ErrorCode_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static IntelligenceRequestAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgIntelligenceCreationRequestAck : public ::google::protobuf::Message {
 public:
  MsgIntelligenceCreationRequestAck();
  virtual ~MsgIntelligenceCreationRequestAck();
  
  MsgIntelligenceCreationRequestAck(const MsgIntelligenceCreationRequestAck& from);
  
  inline MsgIntelligenceCreationRequestAck& operator=(const MsgIntelligenceCreationRequestAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgIntelligenceCreationRequestAck& default_instance();
  void Swap(MsgIntelligenceCreationRequestAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgIntelligenceCreationRequestAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgIntelligenceCreationRequestAck& from);
  void MergeFrom(const MsgIntelligenceCreationRequestAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .MsgsMessengerToClient.IntelligenceRequestAck.ErrorCode error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::MsgsMessengerToClient::IntelligenceRequestAck_ErrorCode error_code() const;
  inline void set_error_code(::MsgsMessengerToClient::IntelligenceRequestAck_ErrorCode value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int error_code_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgIntelligenceCreationRequestAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgIntelligenceUpdateRequestAck : public ::google::protobuf::Message {
 public:
  MsgIntelligenceUpdateRequestAck();
  virtual ~MsgIntelligenceUpdateRequestAck();
  
  MsgIntelligenceUpdateRequestAck(const MsgIntelligenceUpdateRequestAck& from);
  
  inline MsgIntelligenceUpdateRequestAck& operator=(const MsgIntelligenceUpdateRequestAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgIntelligenceUpdateRequestAck& default_instance();
  void Swap(MsgIntelligenceUpdateRequestAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgIntelligenceUpdateRequestAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgIntelligenceUpdateRequestAck& from);
  void MergeFrom(const MsgIntelligenceUpdateRequestAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .MsgsMessengerToClient.IntelligenceRequestAck.ErrorCode error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::MsgsMessengerToClient::IntelligenceRequestAck_ErrorCode error_code() const;
  inline void set_error_code(::MsgsMessengerToClient::IntelligenceRequestAck_ErrorCode value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int error_code_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgIntelligenceUpdateRequestAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgIntelligenceDestructionRequestAck : public ::google::protobuf::Message {
 public:
  MsgIntelligenceDestructionRequestAck();
  virtual ~MsgIntelligenceDestructionRequestAck();
  
  MsgIntelligenceDestructionRequestAck(const MsgIntelligenceDestructionRequestAck& from);
  
  inline MsgIntelligenceDestructionRequestAck& operator=(const MsgIntelligenceDestructionRequestAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgIntelligenceDestructionRequestAck& default_instance();
  void Swap(MsgIntelligenceDestructionRequestAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgIntelligenceDestructionRequestAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgIntelligenceDestructionRequestAck& from);
  void MergeFrom(const MsgIntelligenceDestructionRequestAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .MsgsMessengerToClient.IntelligenceRequestAck.ErrorCode error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::MsgsMessengerToClient::IntelligenceRequestAck_ErrorCode error_code() const;
  inline void set_error_code(::MsgsMessengerToClient::IntelligenceRequestAck_ErrorCode value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int error_code_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgIntelligenceDestructionRequestAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgShapeCreation : public ::google::protobuf::Message {
 public:
  MsgShapeCreation();
  virtual ~MsgShapeCreation();
  
  MsgShapeCreation(const MsgShapeCreation& from);
  
  inline MsgShapeCreation& operator=(const MsgShapeCreation& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgShapeCreation& default_instance();
  void Swap(MsgShapeCreation* other);
  
  // implements Message ----------------------------------------------
  
  MsgShapeCreation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgShapeCreation& from);
  void MergeFrom(const MsgShapeCreation& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 oid = 1;
  inline bool has_oid() const;
  inline void clear_oid();
  static const int kOidFieldNumber = 1;
  inline ::google::protobuf::uint32 oid() const;
  inline void set_oid(::google::protobuf::uint32 value);
  
  // required .Common.MsgShape shape = 2;
  inline bool has_shape() const;
  inline void clear_shape();
  static const int kShapeFieldNumber = 2;
  inline const ::Common::MsgShape& shape() const;
  inline ::Common::MsgShape* mutable_shape();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 oid_;
  ::Common::MsgShape* shape_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgShapeCreation* default_instance_;
};
// -------------------------------------------------------------------

class MsgShapeUpdate : public ::google::protobuf::Message {
 public:
  MsgShapeUpdate();
  virtual ~MsgShapeUpdate();
  
  MsgShapeUpdate(const MsgShapeUpdate& from);
  
  inline MsgShapeUpdate& operator=(const MsgShapeUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgShapeUpdate& default_instance();
  void Swap(MsgShapeUpdate* other);
  
  // implements Message ----------------------------------------------
  
  MsgShapeUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgShapeUpdate& from);
  void MergeFrom(const MsgShapeUpdate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 oid = 1;
  inline bool has_oid() const;
  inline void clear_oid();
  static const int kOidFieldNumber = 1;
  inline ::google::protobuf::uint32 oid() const;
  inline void set_oid(::google::protobuf::uint32 value);
  
  // optional string category = 2;
  inline bool has_category() const;
  inline void clear_category();
  static const int kCategoryFieldNumber = 2;
  inline const ::std::string& category() const;
  inline void set_category(const ::std::string& value);
  inline void set_category(const char* value);
  inline void set_category(const char* value, size_t size);
  inline ::std::string* mutable_category();
  
  // optional string color = 3;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 3;
  inline const ::std::string& color() const;
  inline void set_color(const ::std::string& value);
  inline void set_color(const char* value);
  inline void set_color(const char* value, size_t size);
  inline ::std::string* mutable_color();
  
  // optional string template_ = 4;
  inline bool has_template_() const;
  inline void clear_template_();
  static const int kTemplateFieldNumber = 4;
  inline const ::std::string& template_() const;
  inline void set_template_(const ::std::string& value);
  inline void set_template_(const char* value);
  inline void set_template_(const char* value, size_t size);
  inline ::std::string* mutable_template_();
  
  // optional .Common.MsgCoordLatLongList points = 5;
  inline bool has_points() const;
  inline void clear_points();
  static const int kPointsFieldNumber = 5;
  inline const ::Common::MsgCoordLatLongList& points() const;
  inline ::Common::MsgCoordLatLongList* mutable_points();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 oid_;
  ::std::string* category_;
  static const ::std::string _default_category_;
  ::std::string* color_;
  static const ::std::string _default_color_;
  ::std::string* template__;
  static const ::std::string _default_template__;
  ::Common::MsgCoordLatLongList* points_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgShapeUpdate* default_instance_;
};
// -------------------------------------------------------------------

class MsgShapeDestruction : public ::google::protobuf::Message {
 public:
  MsgShapeDestruction();
  virtual ~MsgShapeDestruction();
  
  MsgShapeDestruction(const MsgShapeDestruction& from);
  
  inline MsgShapeDestruction& operator=(const MsgShapeDestruction& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgShapeDestruction& default_instance();
  void Swap(MsgShapeDestruction* other);
  
  // implements Message ----------------------------------------------
  
  MsgShapeDestruction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgShapeDestruction& from);
  void MergeFrom(const MsgShapeDestruction& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 oid = 1;
  inline bool has_oid() const;
  inline void clear_oid();
  static const int kOidFieldNumber = 1;
  inline ::google::protobuf::uint32 oid() const;
  inline void set_oid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 oid_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgShapeDestruction* default_instance_;
};
// -------------------------------------------------------------------

class ShapeRequestAck : public ::google::protobuf::Message {
 public:
  ShapeRequestAck();
  virtual ~ShapeRequestAck();
  
  ShapeRequestAck(const ShapeRequestAck& from);
  
  inline ShapeRequestAck& operator=(const ShapeRequestAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShapeRequestAck& default_instance();
  void Swap(ShapeRequestAck* other);
  
  // implements Message ----------------------------------------------
  
  ShapeRequestAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShapeRequestAck& from);
  void MergeFrom(const ShapeRequestAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ShapeRequestAck_ErrorCode ErrorCode;
  static const ErrorCode no_error = ShapeRequestAck_ErrorCode_no_error;
  static const ErrorCode error_invalid_oid = ShapeRequestAck_ErrorCode_error_invalid_oid;
  static const ErrorCode error_invalid_geometry = ShapeRequestAck_ErrorCode_error_invalid_geometry;
  static inline bool ErrorCode_IsValid(int value) {
    return ShapeRequestAck_ErrorCode_IsValid(value);
  }
  static const ErrorCode ErrorCode_MIN =
    ShapeRequestAck_ErrorCode_ErrorCode_MIN;
  static const ErrorCode ErrorCode_MAX =
    ShapeRequestAck_ErrorCode_ErrorCode_MAX;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorCode_descriptor() {
    return ShapeRequestAck_ErrorCode_descriptor();
  }
  static inline const ::std::string& ErrorCode_Name(ErrorCode value) {
    return ShapeRequestAck_ErrorCode_Name(value);
  }
  static inline bool ErrorCode_Parse(const ::std::string& name,
      ErrorCode* value) {
    return ShapeRequestAck_ErrorCode_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ShapeRequestAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgShapeCreationRequestAck : public ::google::protobuf::Message {
 public:
  MsgShapeCreationRequestAck();
  virtual ~MsgShapeCreationRequestAck();
  
  MsgShapeCreationRequestAck(const MsgShapeCreationRequestAck& from);
  
  inline MsgShapeCreationRequestAck& operator=(const MsgShapeCreationRequestAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgShapeCreationRequestAck& default_instance();
  void Swap(MsgShapeCreationRequestAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgShapeCreationRequestAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgShapeCreationRequestAck& from);
  void MergeFrom(const MsgShapeCreationRequestAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .MsgsMessengerToClient.ShapeRequestAck.ErrorCode error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::MsgsMessengerToClient::ShapeRequestAck_ErrorCode error_code() const;
  inline void set_error_code(::MsgsMessengerToClient::ShapeRequestAck_ErrorCode value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int error_code_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgShapeCreationRequestAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgShapeUpdateRequestAck : public ::google::protobuf::Message {
 public:
  MsgShapeUpdateRequestAck();
  virtual ~MsgShapeUpdateRequestAck();
  
  MsgShapeUpdateRequestAck(const MsgShapeUpdateRequestAck& from);
  
  inline MsgShapeUpdateRequestAck& operator=(const MsgShapeUpdateRequestAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgShapeUpdateRequestAck& default_instance();
  void Swap(MsgShapeUpdateRequestAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgShapeUpdateRequestAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgShapeUpdateRequestAck& from);
  void MergeFrom(const MsgShapeUpdateRequestAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .MsgsMessengerToClient.ShapeRequestAck.ErrorCode error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::MsgsMessengerToClient::ShapeRequestAck_ErrorCode error_code() const;
  inline void set_error_code(::MsgsMessengerToClient::ShapeRequestAck_ErrorCode value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int error_code_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgShapeUpdateRequestAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgShapeDestructionRequestAck : public ::google::protobuf::Message {
 public:
  MsgShapeDestructionRequestAck();
  virtual ~MsgShapeDestructionRequestAck();
  
  MsgShapeDestructionRequestAck(const MsgShapeDestructionRequestAck& from);
  
  inline MsgShapeDestructionRequestAck& operator=(const MsgShapeDestructionRequestAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgShapeDestructionRequestAck& default_instance();
  void Swap(MsgShapeDestructionRequestAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgShapeDestructionRequestAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgShapeDestructionRequestAck& from);
  void MergeFrom(const MsgShapeDestructionRequestAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .MsgsMessengerToClient.ShapeRequestAck.ErrorCode error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::MsgsMessengerToClient::ShapeRequestAck_ErrorCode error_code() const;
  inline void set_error_code(::MsgsMessengerToClient::ShapeRequestAck_ErrorCode value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int error_code_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgShapeDestructionRequestAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgNoteCreation : public ::google::protobuf::Message {
 public:
  MsgNoteCreation();
  virtual ~MsgNoteCreation();
  
  MsgNoteCreation(const MsgNoteCreation& from);
  
  inline MsgNoteCreation& operator=(const MsgNoteCreation& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNoteCreation& default_instance();
  void Swap(MsgNoteCreation* other);
  
  // implements Message ----------------------------------------------
  
  MsgNoteCreation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNoteCreation& from);
  void MergeFrom(const MsgNoteCreation& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required .Common.MsgNote note = 2;
  inline bool has_note() const;
  inline void clear_note();
  static const int kNoteFieldNumber = 2;
  inline const ::Common::MsgNote& note() const;
  inline ::Common::MsgNote* mutable_note();
  
  // required string date = 3;
  inline bool has_date() const;
  inline void clear_date();
  static const int kDateFieldNumber = 3;
  inline const ::std::string& date() const;
  inline void set_date(const ::std::string& value);
  inline void set_date(const char* value);
  inline void set_date(const char* value, size_t size);
  inline ::std::string* mutable_date();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  ::Common::MsgNote* note_;
  ::std::string* date_;
  static const ::std::string _default_date_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgNoteCreation* default_instance_;
};
// -------------------------------------------------------------------

class MsgNoteUpdate : public ::google::protobuf::Message {
 public:
  MsgNoteUpdate();
  virtual ~MsgNoteUpdate();
  
  MsgNoteUpdate(const MsgNoteUpdate& from);
  
  inline MsgNoteUpdate& operator=(const MsgNoteUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNoteUpdate& default_instance();
  void Swap(MsgNoteUpdate* other);
  
  // implements Message ----------------------------------------------
  
  MsgNoteUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNoteUpdate& from);
  void MergeFrom(const MsgNoteUpdate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required string date = 2;
  inline bool has_date() const;
  inline void clear_date();
  static const int kDateFieldNumber = 2;
  inline const ::std::string& date() const;
  inline void set_date(const ::std::string& value);
  inline void set_date(const char* value);
  inline void set_date(const char* value, size_t size);
  inline ::std::string* mutable_date();
  
  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional string number = 4;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 4;
  inline const ::std::string& number() const;
  inline void set_number(const ::std::string& value);
  inline void set_number(const char* value);
  inline void set_number(const char* value, size_t size);
  inline ::std::string* mutable_number();
  
  // optional string description = 5;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 5;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  
  // optional uint32 parent = 6;
  inline bool has_parent() const;
  inline void clear_parent();
  static const int kParentFieldNumber = 6;
  inline ::google::protobuf::uint32 parent() const;
  inline void set_parent(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  ::std::string* date_;
  static const ::std::string _default_date_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::std::string* number_;
  static const ::std::string _default_number_;
  ::std::string* description_;
  static const ::std::string _default_description_;
  ::google::protobuf::uint32 parent_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgNoteUpdate* default_instance_;
};
// -------------------------------------------------------------------

class MsgNoteDestruction : public ::google::protobuf::Message {
 public:
  MsgNoteDestruction();
  virtual ~MsgNoteDestruction();
  
  MsgNoteDestruction(const MsgNoteDestruction& from);
  
  inline MsgNoteDestruction& operator=(const MsgNoteDestruction& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNoteDestruction& default_instance();
  void Swap(MsgNoteDestruction* other);
  
  // implements Message ----------------------------------------------
  
  MsgNoteDestruction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNoteDestruction& from);
  void MergeFrom(const MsgNoteDestruction& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgNoteDestruction* default_instance_;
};
// -------------------------------------------------------------------

class MsgMessengerToClient_Content : public ::google::protobuf::Message {
 public:
  MsgMessengerToClient_Content();
  virtual ~MsgMessengerToClient_Content();
  
  MsgMessengerToClient_Content(const MsgMessengerToClient_Content& from);
  
  inline MsgMessengerToClient_Content& operator=(const MsgMessengerToClient_Content& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMessengerToClient_Content& default_instance();
  void Swap(MsgMessengerToClient_Content* other);
  
  // implements Message ----------------------------------------------
  
  MsgMessengerToClient_Content* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgMessengerToClient_Content& from);
  void MergeFrom(const MsgMessengerToClient_Content& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .MsgsMessengerToClient.MsgLimitCreation limit_creation = 1;
  inline bool has_limit_creation() const;
  inline void clear_limit_creation();
  static const int kLimitCreationFieldNumber = 1;
  inline const ::MsgsMessengerToClient::MsgLimitCreation& limit_creation() const;
  inline ::MsgsMessengerToClient::MsgLimitCreation* mutable_limit_creation();
  
  // optional .MsgsMessengerToClient.MsgLimitUpdate limit_update = 2;
  inline bool has_limit_update() const;
  inline void clear_limit_update();
  static const int kLimitUpdateFieldNumber = 2;
  inline const ::MsgsMessengerToClient::MsgLimitUpdate& limit_update() const;
  inline ::MsgsMessengerToClient::MsgLimitUpdate* mutable_limit_update();
  
  // optional .MsgsMessengerToClient.MsgLimitDestruction limit_destruction = 3;
  inline bool has_limit_destruction() const;
  inline void clear_limit_destruction();
  static const int kLimitDestructionFieldNumber = 3;
  inline const ::MsgsMessengerToClient::MsgLimitDestruction& limit_destruction() const;
  inline ::MsgsMessengerToClient::MsgLimitDestruction* mutable_limit_destruction();
  
  // optional .MsgsMessengerToClient.MsgLimitCreationRequestAck limit_creation_request_ack = 4;
  inline bool has_limit_creation_request_ack() const;
  inline void clear_limit_creation_request_ack();
  static const int kLimitCreationRequestAckFieldNumber = 4;
  inline const ::MsgsMessengerToClient::MsgLimitCreationRequestAck& limit_creation_request_ack() const;
  inline ::MsgsMessengerToClient::MsgLimitCreationRequestAck* mutable_limit_creation_request_ack();
  
  // optional .MsgsMessengerToClient.MsgLimitDestructionRequestAck limit_destruction_request_ack = 5;
  inline bool has_limit_destruction_request_ack() const;
  inline void clear_limit_destruction_request_ack();
  static const int kLimitDestructionRequestAckFieldNumber = 5;
  inline const ::MsgsMessengerToClient::MsgLimitDestructionRequestAck& limit_destruction_request_ack() const;
  inline ::MsgsMessengerToClient::MsgLimitDestructionRequestAck* mutable_limit_destruction_request_ack();
  
  // optional .MsgsMessengerToClient.MsgLimitUpdateRequestAck limit_update_request_ack = 6;
  inline bool has_limit_update_request_ack() const;
  inline void clear_limit_update_request_ack();
  static const int kLimitUpdateRequestAckFieldNumber = 6;
  inline const ::MsgsMessengerToClient::MsgLimitUpdateRequestAck& limit_update_request_ack() const;
  inline ::MsgsMessengerToClient::MsgLimitUpdateRequestAck* mutable_limit_update_request_ack();
  
  // optional .MsgsMessengerToClient.MsgLimaCreation lima_creation = 7;
  inline bool has_lima_creation() const;
  inline void clear_lima_creation();
  static const int kLimaCreationFieldNumber = 7;
  inline const ::MsgsMessengerToClient::MsgLimaCreation& lima_creation() const;
  inline ::MsgsMessengerToClient::MsgLimaCreation* mutable_lima_creation();
  
  // optional .MsgsMessengerToClient.MsgLimaUpdate lima_update = 8;
  inline bool has_lima_update() const;
  inline void clear_lima_update();
  static const int kLimaUpdateFieldNumber = 8;
  inline const ::MsgsMessengerToClient::MsgLimaUpdate& lima_update() const;
  inline ::MsgsMessengerToClient::MsgLimaUpdate* mutable_lima_update();
  
  // optional .MsgsMessengerToClient.MsgLimaDestruction lima_destruction = 9;
  inline bool has_lima_destruction() const;
  inline void clear_lima_destruction();
  static const int kLimaDestructionFieldNumber = 9;
  inline const ::MsgsMessengerToClient::MsgLimaDestruction& lima_destruction() const;
  inline ::MsgsMessengerToClient::MsgLimaDestruction* mutable_lima_destruction();
  
  // optional .MsgsMessengerToClient.MsgLimaCreationRequestAck lima_creation_request_ack = 10;
  inline bool has_lima_creation_request_ack() const;
  inline void clear_lima_creation_request_ack();
  static const int kLimaCreationRequestAckFieldNumber = 10;
  inline const ::MsgsMessengerToClient::MsgLimaCreationRequestAck& lima_creation_request_ack() const;
  inline ::MsgsMessengerToClient::MsgLimaCreationRequestAck* mutable_lima_creation_request_ack();
  
  // optional .MsgsMessengerToClient.MsgLimaDestructionRequestAck lima_destruction_request_ack = 11;
  inline bool has_lima_destruction_request_ack() const;
  inline void clear_lima_destruction_request_ack();
  static const int kLimaDestructionRequestAckFieldNumber = 11;
  inline const ::MsgsMessengerToClient::MsgLimaDestructionRequestAck& lima_destruction_request_ack() const;
  inline ::MsgsMessengerToClient::MsgLimaDestructionRequestAck* mutable_lima_destruction_request_ack();
  
  // optional .MsgsMessengerToClient.MsgLimaUpdateRequestAck lima_update_request_ack = 12;
  inline bool has_lima_update_request_ack() const;
  inline void clear_lima_update_request_ack();
  static const int kLimaUpdateRequestAckFieldNumber = 12;
  inline const ::MsgsMessengerToClient::MsgLimaUpdateRequestAck& lima_update_request_ack() const;
  inline ::MsgsMessengerToClient::MsgLimaUpdateRequestAck* mutable_lima_update_request_ack();
  
  // optional .MsgsMessengerToClient.MsgIntelligenceCreation intelligence_creation = 13;
  inline bool has_intelligence_creation() const;
  inline void clear_intelligence_creation();
  static const int kIntelligenceCreationFieldNumber = 13;
  inline const ::MsgsMessengerToClient::MsgIntelligenceCreation& intelligence_creation() const;
  inline ::MsgsMessengerToClient::MsgIntelligenceCreation* mutable_intelligence_creation();
  
  // optional .MsgsMessengerToClient.MsgIntelligenceUpdate intelligence_update = 14;
  inline bool has_intelligence_update() const;
  inline void clear_intelligence_update();
  static const int kIntelligenceUpdateFieldNumber = 14;
  inline const ::MsgsMessengerToClient::MsgIntelligenceUpdate& intelligence_update() const;
  inline ::MsgsMessengerToClient::MsgIntelligenceUpdate* mutable_intelligence_update();
  
  // optional .MsgsMessengerToClient.MsgIntelligenceDestruction intelligence_destruction = 15;
  inline bool has_intelligence_destruction() const;
  inline void clear_intelligence_destruction();
  static const int kIntelligenceDestructionFieldNumber = 15;
  inline const ::MsgsMessengerToClient::MsgIntelligenceDestruction& intelligence_destruction() const;
  inline ::MsgsMessengerToClient::MsgIntelligenceDestruction* mutable_intelligence_destruction();
  
  // optional .MsgsMessengerToClient.MsgIntelligenceCreationRequestAck intelligence_creation_request_ack = 16;
  inline bool has_intelligence_creation_request_ack() const;
  inline void clear_intelligence_creation_request_ack();
  static const int kIntelligenceCreationRequestAckFieldNumber = 16;
  inline const ::MsgsMessengerToClient::MsgIntelligenceCreationRequestAck& intelligence_creation_request_ack() const;
  inline ::MsgsMessengerToClient::MsgIntelligenceCreationRequestAck* mutable_intelligence_creation_request_ack();
  
  // optional .MsgsMessengerToClient.MsgIntelligenceUpdateRequestAck intelligence_update_request_ack = 17;
  inline bool has_intelligence_update_request_ack() const;
  inline void clear_intelligence_update_request_ack();
  static const int kIntelligenceUpdateRequestAckFieldNumber = 17;
  inline const ::MsgsMessengerToClient::MsgIntelligenceUpdateRequestAck& intelligence_update_request_ack() const;
  inline ::MsgsMessengerToClient::MsgIntelligenceUpdateRequestAck* mutable_intelligence_update_request_ack();
  
  // optional .MsgsMessengerToClient.MsgIntelligenceDestructionRequestAck intelligence_destruction_request_ack = 18;
  inline bool has_intelligence_destruction_request_ack() const;
  inline void clear_intelligence_destruction_request_ack();
  static const int kIntelligenceDestructionRequestAckFieldNumber = 18;
  inline const ::MsgsMessengerToClient::MsgIntelligenceDestructionRequestAck& intelligence_destruction_request_ack() const;
  inline ::MsgsMessengerToClient::MsgIntelligenceDestructionRequestAck* mutable_intelligence_destruction_request_ack();
  
  // optional .MsgsMessengerToClient.MsgShapeCreation shape_creation = 19;
  inline bool has_shape_creation() const;
  inline void clear_shape_creation();
  static const int kShapeCreationFieldNumber = 19;
  inline const ::MsgsMessengerToClient::MsgShapeCreation& shape_creation() const;
  inline ::MsgsMessengerToClient::MsgShapeCreation* mutable_shape_creation();
  
  // optional .MsgsMessengerToClient.MsgShapeUpdate shape_update = 20;
  inline bool has_shape_update() const;
  inline void clear_shape_update();
  static const int kShapeUpdateFieldNumber = 20;
  inline const ::MsgsMessengerToClient::MsgShapeUpdate& shape_update() const;
  inline ::MsgsMessengerToClient::MsgShapeUpdate* mutable_shape_update();
  
  // optional .MsgsMessengerToClient.MsgShapeDestruction shape_destruction = 21;
  inline bool has_shape_destruction() const;
  inline void clear_shape_destruction();
  static const int kShapeDestructionFieldNumber = 21;
  inline const ::MsgsMessengerToClient::MsgShapeDestruction& shape_destruction() const;
  inline ::MsgsMessengerToClient::MsgShapeDestruction* mutable_shape_destruction();
  
  // optional .MsgsMessengerToClient.MsgShapeCreationRequestAck shape_creation_request_ack = 22;
  inline bool has_shape_creation_request_ack() const;
  inline void clear_shape_creation_request_ack();
  static const int kShapeCreationRequestAckFieldNumber = 22;
  inline const ::MsgsMessengerToClient::MsgShapeCreationRequestAck& shape_creation_request_ack() const;
  inline ::MsgsMessengerToClient::MsgShapeCreationRequestAck* mutable_shape_creation_request_ack();
  
  // optional .MsgsMessengerToClient.MsgShapeDestructionRequestAck shape_destruction_request_ack = 23;
  inline bool has_shape_destruction_request_ack() const;
  inline void clear_shape_destruction_request_ack();
  static const int kShapeDestructionRequestAckFieldNumber = 23;
  inline const ::MsgsMessengerToClient::MsgShapeDestructionRequestAck& shape_destruction_request_ack() const;
  inline ::MsgsMessengerToClient::MsgShapeDestructionRequestAck* mutable_shape_destruction_request_ack();
  
  // optional .MsgsMessengerToClient.MsgShapeUpdateRequestAck shape_update_request_ack = 24;
  inline bool has_shape_update_request_ack() const;
  inline void clear_shape_update_request_ack();
  static const int kShapeUpdateRequestAckFieldNumber = 24;
  inline const ::MsgsMessengerToClient::MsgShapeUpdateRequestAck& shape_update_request_ack() const;
  inline ::MsgsMessengerToClient::MsgShapeUpdateRequestAck* mutable_shape_update_request_ack();
  
  // optional .Common.MsgTextMessage text_message = 25;
  inline bool has_text_message() const;
  inline void clear_text_message();
  static const int kTextMessageFieldNumber = 25;
  inline const ::Common::MsgTextMessage& text_message() const;
  inline ::Common::MsgTextMessage* mutable_text_message();
  
  // optional .MsgsMessengerToClient.MsgNoteCreation note_creation = 26;
  inline bool has_note_creation() const;
  inline void clear_note_creation();
  static const int kNoteCreationFieldNumber = 26;
  inline const ::MsgsMessengerToClient::MsgNoteCreation& note_creation() const;
  inline ::MsgsMessengerToClient::MsgNoteCreation* mutable_note_creation();
  
  // optional .MsgsMessengerToClient.MsgNoteUpdate note_update = 27;
  inline bool has_note_update() const;
  inline void clear_note_update();
  static const int kNoteUpdateFieldNumber = 27;
  inline const ::MsgsMessengerToClient::MsgNoteUpdate& note_update() const;
  inline ::MsgsMessengerToClient::MsgNoteUpdate* mutable_note_update();
  
  // optional .MsgsMessengerToClient.MsgNoteDestruction note_destruction = 28;
  inline bool has_note_destruction() const;
  inline void clear_note_destruction();
  static const int kNoteDestructionFieldNumber = 28;
  inline const ::MsgsMessengerToClient::MsgNoteDestruction& note_destruction() const;
  inline ::MsgsMessengerToClient::MsgNoteDestruction* mutable_note_destruction();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::MsgsMessengerToClient::MsgLimitCreation* limit_creation_;
  ::MsgsMessengerToClient::MsgLimitUpdate* limit_update_;
  ::MsgsMessengerToClient::MsgLimitDestruction* limit_destruction_;
  ::MsgsMessengerToClient::MsgLimitCreationRequestAck* limit_creation_request_ack_;
  ::MsgsMessengerToClient::MsgLimitDestructionRequestAck* limit_destruction_request_ack_;
  ::MsgsMessengerToClient::MsgLimitUpdateRequestAck* limit_update_request_ack_;
  ::MsgsMessengerToClient::MsgLimaCreation* lima_creation_;
  ::MsgsMessengerToClient::MsgLimaUpdate* lima_update_;
  ::MsgsMessengerToClient::MsgLimaDestruction* lima_destruction_;
  ::MsgsMessengerToClient::MsgLimaCreationRequestAck* lima_creation_request_ack_;
  ::MsgsMessengerToClient::MsgLimaDestructionRequestAck* lima_destruction_request_ack_;
  ::MsgsMessengerToClient::MsgLimaUpdateRequestAck* lima_update_request_ack_;
  ::MsgsMessengerToClient::MsgIntelligenceCreation* intelligence_creation_;
  ::MsgsMessengerToClient::MsgIntelligenceUpdate* intelligence_update_;
  ::MsgsMessengerToClient::MsgIntelligenceDestruction* intelligence_destruction_;
  ::MsgsMessengerToClient::MsgIntelligenceCreationRequestAck* intelligence_creation_request_ack_;
  ::MsgsMessengerToClient::MsgIntelligenceUpdateRequestAck* intelligence_update_request_ack_;
  ::MsgsMessengerToClient::MsgIntelligenceDestructionRequestAck* intelligence_destruction_request_ack_;
  ::MsgsMessengerToClient::MsgShapeCreation* shape_creation_;
  ::MsgsMessengerToClient::MsgShapeUpdate* shape_update_;
  ::MsgsMessengerToClient::MsgShapeDestruction* shape_destruction_;
  ::MsgsMessengerToClient::MsgShapeCreationRequestAck* shape_creation_request_ack_;
  ::MsgsMessengerToClient::MsgShapeDestructionRequestAck* shape_destruction_request_ack_;
  ::MsgsMessengerToClient::MsgShapeUpdateRequestAck* shape_update_request_ack_;
  ::Common::MsgTextMessage* text_message_;
  ::MsgsMessengerToClient::MsgNoteCreation* note_creation_;
  ::MsgsMessengerToClient::MsgNoteUpdate* note_update_;
  ::MsgsMessengerToClient::MsgNoteDestruction* note_destruction_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(28 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgMessengerToClient_Content* default_instance_;
};
// -------------------------------------------------------------------

class MsgMessengerToClient : public ::google::protobuf::Message {
 public:
  MsgMessengerToClient();
  virtual ~MsgMessengerToClient();
  
  MsgMessengerToClient(const MsgMessengerToClient& from);
  
  inline MsgMessengerToClient& operator=(const MsgMessengerToClient& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMessengerToClient& default_instance();
  void Swap(MsgMessengerToClient* other);
  
  // implements Message ----------------------------------------------
  
  MsgMessengerToClient* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgMessengerToClient& from);
  void MergeFrom(const MsgMessengerToClient& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef MsgMessengerToClient_Content Content;
  
  // accessors -------------------------------------------------------
  
  // optional int32 context = 1 [default = 0];
  inline bool has_context() const;
  inline void clear_context();
  static const int kContextFieldNumber = 1;
  inline ::google::protobuf::int32 context() const;
  inline void set_context(::google::protobuf::int32 value);
  
  // required .MsgsMessengerToClient.MsgMessengerToClient.Content message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::MsgsMessengerToClient::MsgMessengerToClient_Content& message() const;
  inline ::MsgsMessengerToClient::MsgMessengerToClient_Content* mutable_message();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 context_;
  ::MsgsMessengerToClient::MsgMessengerToClient_Content* message_;
  friend void  protobuf_AddDesc_MessengerToClient_2eproto();
  friend void protobuf_AssignDesc_MessengerToClient_2eproto();
  friend void protobuf_ShutdownFile_MessengerToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgMessengerToClient* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// TacticalLineAck

// -------------------------------------------------------------------

// MsgLimitCreation

// required uint32 oid = 1;
inline bool MsgLimitCreation::has_oid() const {
  return _has_bit(0);
}
inline void MsgLimitCreation::clear_oid() {
  oid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgLimitCreation::oid() const {
  return oid_;
}
inline void MsgLimitCreation::set_oid(::google::protobuf::uint32 value) {
  _set_bit(0);
  oid_ = value;
}

// required .Common.MsgTacticalLine tactical_line = 2;
inline bool MsgLimitCreation::has_tactical_line() const {
  return _has_bit(1);
}
inline void MsgLimitCreation::clear_tactical_line() {
  if (tactical_line_ != NULL) tactical_line_->::Common::MsgTacticalLine::Clear();
  _clear_bit(1);
}
inline const ::Common::MsgTacticalLine& MsgLimitCreation::tactical_line() const {
  return tactical_line_ != NULL ? *tactical_line_ : *default_instance_->tactical_line_;
}
inline ::Common::MsgTacticalLine* MsgLimitCreation::mutable_tactical_line() {
  _set_bit(1);
  if (tactical_line_ == NULL) tactical_line_ = new ::Common::MsgTacticalLine;
  return tactical_line_;
}

// -------------------------------------------------------------------

// MsgLimitUpdate

// required uint32 oid = 1;
inline bool MsgLimitUpdate::has_oid() const {
  return _has_bit(0);
}
inline void MsgLimitUpdate::clear_oid() {
  oid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgLimitUpdate::oid() const {
  return oid_;
}
inline void MsgLimitUpdate::set_oid(::google::protobuf::uint32 value) {
  _set_bit(0);
  oid_ = value;
}

// required .Common.MsgTacticalLine tactical_line = 2;
inline bool MsgLimitUpdate::has_tactical_line() const {
  return _has_bit(1);
}
inline void MsgLimitUpdate::clear_tactical_line() {
  if (tactical_line_ != NULL) tactical_line_->::Common::MsgTacticalLine::Clear();
  _clear_bit(1);
}
inline const ::Common::MsgTacticalLine& MsgLimitUpdate::tactical_line() const {
  return tactical_line_ != NULL ? *tactical_line_ : *default_instance_->tactical_line_;
}
inline ::Common::MsgTacticalLine* MsgLimitUpdate::mutable_tactical_line() {
  _set_bit(1);
  if (tactical_line_ == NULL) tactical_line_ = new ::Common::MsgTacticalLine;
  return tactical_line_;
}

// -------------------------------------------------------------------

// MsgLimitDestruction

// optional uint32 oid = 1;
inline bool MsgLimitDestruction::has_oid() const {
  return _has_bit(0);
}
inline void MsgLimitDestruction::clear_oid() {
  oid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgLimitDestruction::oid() const {
  return oid_;
}
inline void MsgLimitDestruction::set_oid(::google::protobuf::uint32 value) {
  _set_bit(0);
  oid_ = value;
}

// -------------------------------------------------------------------

// MsgLimitCreationRequestAck

// optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
inline bool MsgLimitCreationRequestAck::has_error_code() const {
  return _has_bit(0);
}
inline void MsgLimitCreationRequestAck::clear_error_code() {
  error_code_ = 0;
  _clear_bit(0);
}
inline ::MsgsMessengerToClient::TacticalLineAck_ErrorCode MsgLimitCreationRequestAck::error_code() const {
  return static_cast< ::MsgsMessengerToClient::TacticalLineAck_ErrorCode >(error_code_);
}
inline void MsgLimitCreationRequestAck::set_error_code(::MsgsMessengerToClient::TacticalLineAck_ErrorCode value) {
  GOOGLE_DCHECK(::MsgsMessengerToClient::TacticalLineAck_ErrorCode_IsValid(value));
  _set_bit(0);
  error_code_ = value;
}

// -------------------------------------------------------------------

// MsgLimitUpdateRequestAck

// optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
inline bool MsgLimitUpdateRequestAck::has_error_code() const {
  return _has_bit(0);
}
inline void MsgLimitUpdateRequestAck::clear_error_code() {
  error_code_ = 0;
  _clear_bit(0);
}
inline ::MsgsMessengerToClient::TacticalLineAck_ErrorCode MsgLimitUpdateRequestAck::error_code() const {
  return static_cast< ::MsgsMessengerToClient::TacticalLineAck_ErrorCode >(error_code_);
}
inline void MsgLimitUpdateRequestAck::set_error_code(::MsgsMessengerToClient::TacticalLineAck_ErrorCode value) {
  GOOGLE_DCHECK(::MsgsMessengerToClient::TacticalLineAck_ErrorCode_IsValid(value));
  _set_bit(0);
  error_code_ = value;
}

// -------------------------------------------------------------------

// MsgLimitDestructionRequestAck

// optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
inline bool MsgLimitDestructionRequestAck::has_error_code() const {
  return _has_bit(0);
}
inline void MsgLimitDestructionRequestAck::clear_error_code() {
  error_code_ = 0;
  _clear_bit(0);
}
inline ::MsgsMessengerToClient::TacticalLineAck_ErrorCode MsgLimitDestructionRequestAck::error_code() const {
  return static_cast< ::MsgsMessengerToClient::TacticalLineAck_ErrorCode >(error_code_);
}
inline void MsgLimitDestructionRequestAck::set_error_code(::MsgsMessengerToClient::TacticalLineAck_ErrorCode value) {
  GOOGLE_DCHECK(::MsgsMessengerToClient::TacticalLineAck_ErrorCode_IsValid(value));
  _set_bit(0);
  error_code_ = value;
}

// -------------------------------------------------------------------

// MsgLimaCreation

// required uint32 oid = 1;
inline bool MsgLimaCreation::has_oid() const {
  return _has_bit(0);
}
inline void MsgLimaCreation::clear_oid() {
  oid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgLimaCreation::oid() const {
  return oid_;
}
inline void MsgLimaCreation::set_oid(::google::protobuf::uint32 value) {
  _set_bit(0);
  oid_ = value;
}

// required .Common.MsgTacticalLine tactical_line = 2;
inline bool MsgLimaCreation::has_tactical_line() const {
  return _has_bit(1);
}
inline void MsgLimaCreation::clear_tactical_line() {
  if (tactical_line_ != NULL) tactical_line_->::Common::MsgTacticalLine::Clear();
  _clear_bit(1);
}
inline const ::Common::MsgTacticalLine& MsgLimaCreation::tactical_line() const {
  return tactical_line_ != NULL ? *tactical_line_ : *default_instance_->tactical_line_;
}
inline ::Common::MsgTacticalLine* MsgLimaCreation::mutable_tactical_line() {
  _set_bit(1);
  if (tactical_line_ == NULL) tactical_line_ = new ::Common::MsgTacticalLine;
  return tactical_line_;
}

// -------------------------------------------------------------------

// MsgLimaDestruction

// required uint32 oid = 1;
inline bool MsgLimaDestruction::has_oid() const {
  return _has_bit(0);
}
inline void MsgLimaDestruction::clear_oid() {
  oid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgLimaDestruction::oid() const {
  return oid_;
}
inline void MsgLimaDestruction::set_oid(::google::protobuf::uint32 value) {
  _set_bit(0);
  oid_ = value;
}

// -------------------------------------------------------------------

// MsgLimaUpdate

// required uint32 oid = 1;
inline bool MsgLimaUpdate::has_oid() const {
  return _has_bit(0);
}
inline void MsgLimaUpdate::clear_oid() {
  oid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgLimaUpdate::oid() const {
  return oid_;
}
inline void MsgLimaUpdate::set_oid(::google::protobuf::uint32 value) {
  _set_bit(0);
  oid_ = value;
}

// required .Common.MsgTacticalLine tactical_line = 2;
inline bool MsgLimaUpdate::has_tactical_line() const {
  return _has_bit(1);
}
inline void MsgLimaUpdate::clear_tactical_line() {
  if (tactical_line_ != NULL) tactical_line_->::Common::MsgTacticalLine::Clear();
  _clear_bit(1);
}
inline const ::Common::MsgTacticalLine& MsgLimaUpdate::tactical_line() const {
  return tactical_line_ != NULL ? *tactical_line_ : *default_instance_->tactical_line_;
}
inline ::Common::MsgTacticalLine* MsgLimaUpdate::mutable_tactical_line() {
  _set_bit(1);
  if (tactical_line_ == NULL) tactical_line_ = new ::Common::MsgTacticalLine;
  return tactical_line_;
}

// -------------------------------------------------------------------

// MsgLimaCreationRequestAck

// optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
inline bool MsgLimaCreationRequestAck::has_error_code() const {
  return _has_bit(0);
}
inline void MsgLimaCreationRequestAck::clear_error_code() {
  error_code_ = 0;
  _clear_bit(0);
}
inline ::MsgsMessengerToClient::TacticalLineAck_ErrorCode MsgLimaCreationRequestAck::error_code() const {
  return static_cast< ::MsgsMessengerToClient::TacticalLineAck_ErrorCode >(error_code_);
}
inline void MsgLimaCreationRequestAck::set_error_code(::MsgsMessengerToClient::TacticalLineAck_ErrorCode value) {
  GOOGLE_DCHECK(::MsgsMessengerToClient::TacticalLineAck_ErrorCode_IsValid(value));
  _set_bit(0);
  error_code_ = value;
}

// -------------------------------------------------------------------

// MsgLimaUpdateRequestAck

// optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
inline bool MsgLimaUpdateRequestAck::has_error_code() const {
  return _has_bit(0);
}
inline void MsgLimaUpdateRequestAck::clear_error_code() {
  error_code_ = 0;
  _clear_bit(0);
}
inline ::MsgsMessengerToClient::TacticalLineAck_ErrorCode MsgLimaUpdateRequestAck::error_code() const {
  return static_cast< ::MsgsMessengerToClient::TacticalLineAck_ErrorCode >(error_code_);
}
inline void MsgLimaUpdateRequestAck::set_error_code(::MsgsMessengerToClient::TacticalLineAck_ErrorCode value) {
  GOOGLE_DCHECK(::MsgsMessengerToClient::TacticalLineAck_ErrorCode_IsValid(value));
  _set_bit(0);
  error_code_ = value;
}

// -------------------------------------------------------------------

// MsgLimaDestructionRequestAck

// optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
inline bool MsgLimaDestructionRequestAck::has_error_code() const {
  return _has_bit(0);
}
inline void MsgLimaDestructionRequestAck::clear_error_code() {
  error_code_ = 0;
  _clear_bit(0);
}
inline ::MsgsMessengerToClient::TacticalLineAck_ErrorCode MsgLimaDestructionRequestAck::error_code() const {
  return static_cast< ::MsgsMessengerToClient::TacticalLineAck_ErrorCode >(error_code_);
}
inline void MsgLimaDestructionRequestAck::set_error_code(::MsgsMessengerToClient::TacticalLineAck_ErrorCode value) {
  GOOGLE_DCHECK(::MsgsMessengerToClient::TacticalLineAck_ErrorCode_IsValid(value));
  _set_bit(0);
  error_code_ = value;
}

// -------------------------------------------------------------------

// MsgIntelligenceCreation

// required uint32 oid = 1;
inline bool MsgIntelligenceCreation::has_oid() const {
  return _has_bit(0);
}
inline void MsgIntelligenceCreation::clear_oid() {
  oid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgIntelligenceCreation::oid() const {
  return oid_;
}
inline void MsgIntelligenceCreation::set_oid(::google::protobuf::uint32 value) {
  _set_bit(0);
  oid_ = value;
}

// required .Common.MsgIntelligence intelligence = 2;
inline bool MsgIntelligenceCreation::has_intelligence() const {
  return _has_bit(1);
}
inline void MsgIntelligenceCreation::clear_intelligence() {
  if (intelligence_ != NULL) intelligence_->::Common::MsgIntelligence::Clear();
  _clear_bit(1);
}
inline const ::Common::MsgIntelligence& MsgIntelligenceCreation::intelligence() const {
  return intelligence_ != NULL ? *intelligence_ : *default_instance_->intelligence_;
}
inline ::Common::MsgIntelligence* MsgIntelligenceCreation::mutable_intelligence() {
  _set_bit(1);
  if (intelligence_ == NULL) intelligence_ = new ::Common::MsgIntelligence;
  return intelligence_;
}

// -------------------------------------------------------------------

// MsgIntelligenceUpdate

// required uint32 oid = 1;
inline bool MsgIntelligenceUpdate::has_oid() const {
  return _has_bit(0);
}
inline void MsgIntelligenceUpdate::clear_oid() {
  oid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgIntelligenceUpdate::oid() const {
  return oid_;
}
inline void MsgIntelligenceUpdate::set_oid(::google::protobuf::uint32 value) {
  _set_bit(0);
  oid_ = value;
}

// optional uint32 formation = 2;
inline bool MsgIntelligenceUpdate::has_formation() const {
  return _has_bit(1);
}
inline void MsgIntelligenceUpdate::clear_formation() {
  formation_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MsgIntelligenceUpdate::formation() const {
  return formation_;
}
inline void MsgIntelligenceUpdate::set_formation(::google::protobuf::uint32 value) {
  _set_bit(1);
  formation_ = value;
}

// optional string name = 3;
inline bool MsgIntelligenceUpdate::has_name() const {
  return _has_bit(2);
}
inline void MsgIntelligenceUpdate::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& MsgIntelligenceUpdate::name() const {
  return *name_;
}
inline void MsgIntelligenceUpdate::set_name(const ::std::string& value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgIntelligenceUpdate::set_name(const char* value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgIntelligenceUpdate::set_name(const char* value, size_t size) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgIntelligenceUpdate::mutable_name() {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional string nature = 4;
inline bool MsgIntelligenceUpdate::has_nature() const {
  return _has_bit(3);
}
inline void MsgIntelligenceUpdate::clear_nature() {
  if (nature_ != &_default_nature_) {
    nature_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& MsgIntelligenceUpdate::nature() const {
  return *nature_;
}
inline void MsgIntelligenceUpdate::set_nature(const ::std::string& value) {
  _set_bit(3);
  if (nature_ == &_default_nature_) {
    nature_ = new ::std::string;
  }
  nature_->assign(value);
}
inline void MsgIntelligenceUpdate::set_nature(const char* value) {
  _set_bit(3);
  if (nature_ == &_default_nature_) {
    nature_ = new ::std::string;
  }
  nature_->assign(value);
}
inline void MsgIntelligenceUpdate::set_nature(const char* value, size_t size) {
  _set_bit(3);
  if (nature_ == &_default_nature_) {
    nature_ = new ::std::string;
  }
  nature_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgIntelligenceUpdate::mutable_nature() {
  _set_bit(3);
  if (nature_ == &_default_nature_) {
    nature_ = new ::std::string;
  }
  return nature_;
}

// optional .Common.EnumNatureLevel level = 5;
inline bool MsgIntelligenceUpdate::has_level() const {
  return _has_bit(4);
}
inline void MsgIntelligenceUpdate::clear_level() {
  level_ = 0;
  _clear_bit(4);
}
inline Common::EnumNatureLevel MsgIntelligenceUpdate::level() const {
  return static_cast< Common::EnumNatureLevel >(level_);
}
inline void MsgIntelligenceUpdate::set_level(Common::EnumNatureLevel value) {
  GOOGLE_DCHECK(Common::EnumNatureLevel_IsValid(value));
  _set_bit(4);
  level_ = value;
}

// optional bool embarked = 6;
inline bool MsgIntelligenceUpdate::has_embarked() const {
  return _has_bit(5);
}
inline void MsgIntelligenceUpdate::clear_embarked() {
  embarked_ = false;
  _clear_bit(5);
}
inline bool MsgIntelligenceUpdate::embarked() const {
  return embarked_;
}
inline void MsgIntelligenceUpdate::set_embarked(bool value) {
  _set_bit(5);
  embarked_ = value;
}

// optional .Common.MsgCoordLatLong location = 7;
inline bool MsgIntelligenceUpdate::has_location() const {
  return _has_bit(6);
}
inline void MsgIntelligenceUpdate::clear_location() {
  if (location_ != NULL) location_->::Common::MsgCoordLatLong::Clear();
  _clear_bit(6);
}
inline const ::Common::MsgCoordLatLong& MsgIntelligenceUpdate::location() const {
  return location_ != NULL ? *location_ : *default_instance_->location_;
}
inline ::Common::MsgCoordLatLong* MsgIntelligenceUpdate::mutable_location() {
  _set_bit(6);
  if (location_ == NULL) location_ = new ::Common::MsgCoordLatLong;
  return location_;
}

// optional .Common.EnumDiplomacy diplomacy = 8;
inline bool MsgIntelligenceUpdate::has_diplomacy() const {
  return _has_bit(7);
}
inline void MsgIntelligenceUpdate::clear_diplomacy() {
  diplomacy_ = 0;
  _clear_bit(7);
}
inline Common::EnumDiplomacy MsgIntelligenceUpdate::diplomacy() const {
  return static_cast< Common::EnumDiplomacy >(diplomacy_);
}
inline void MsgIntelligenceUpdate::set_diplomacy(Common::EnumDiplomacy value) {
  GOOGLE_DCHECK(Common::EnumDiplomacy_IsValid(value));
  _set_bit(7);
  diplomacy_ = value;
}

// -------------------------------------------------------------------

// MsgIntelligenceDestruction

// required uint32 oid = 1;
inline bool MsgIntelligenceDestruction::has_oid() const {
  return _has_bit(0);
}
inline void MsgIntelligenceDestruction::clear_oid() {
  oid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgIntelligenceDestruction::oid() const {
  return oid_;
}
inline void MsgIntelligenceDestruction::set_oid(::google::protobuf::uint32 value) {
  _set_bit(0);
  oid_ = value;
}

// -------------------------------------------------------------------

// IntelligenceRequestAck

// -------------------------------------------------------------------

// MsgIntelligenceCreationRequestAck

// optional .MsgsMessengerToClient.IntelligenceRequestAck.ErrorCode error_code = 1;
inline bool MsgIntelligenceCreationRequestAck::has_error_code() const {
  return _has_bit(0);
}
inline void MsgIntelligenceCreationRequestAck::clear_error_code() {
  error_code_ = 0;
  _clear_bit(0);
}
inline ::MsgsMessengerToClient::IntelligenceRequestAck_ErrorCode MsgIntelligenceCreationRequestAck::error_code() const {
  return static_cast< ::MsgsMessengerToClient::IntelligenceRequestAck_ErrorCode >(error_code_);
}
inline void MsgIntelligenceCreationRequestAck::set_error_code(::MsgsMessengerToClient::IntelligenceRequestAck_ErrorCode value) {
  GOOGLE_DCHECK(::MsgsMessengerToClient::IntelligenceRequestAck_ErrorCode_IsValid(value));
  _set_bit(0);
  error_code_ = value;
}

// -------------------------------------------------------------------

// MsgIntelligenceUpdateRequestAck

// optional .MsgsMessengerToClient.IntelligenceRequestAck.ErrorCode error_code = 1;
inline bool MsgIntelligenceUpdateRequestAck::has_error_code() const {
  return _has_bit(0);
}
inline void MsgIntelligenceUpdateRequestAck::clear_error_code() {
  error_code_ = 0;
  _clear_bit(0);
}
inline ::MsgsMessengerToClient::IntelligenceRequestAck_ErrorCode MsgIntelligenceUpdateRequestAck::error_code() const {
  return static_cast< ::MsgsMessengerToClient::IntelligenceRequestAck_ErrorCode >(error_code_);
}
inline void MsgIntelligenceUpdateRequestAck::set_error_code(::MsgsMessengerToClient::IntelligenceRequestAck_ErrorCode value) {
  GOOGLE_DCHECK(::MsgsMessengerToClient::IntelligenceRequestAck_ErrorCode_IsValid(value));
  _set_bit(0);
  error_code_ = value;
}

// -------------------------------------------------------------------

// MsgIntelligenceDestructionRequestAck

// optional .MsgsMessengerToClient.IntelligenceRequestAck.ErrorCode error_code = 1;
inline bool MsgIntelligenceDestructionRequestAck::has_error_code() const {
  return _has_bit(0);
}
inline void MsgIntelligenceDestructionRequestAck::clear_error_code() {
  error_code_ = 0;
  _clear_bit(0);
}
inline ::MsgsMessengerToClient::IntelligenceRequestAck_ErrorCode MsgIntelligenceDestructionRequestAck::error_code() const {
  return static_cast< ::MsgsMessengerToClient::IntelligenceRequestAck_ErrorCode >(error_code_);
}
inline void MsgIntelligenceDestructionRequestAck::set_error_code(::MsgsMessengerToClient::IntelligenceRequestAck_ErrorCode value) {
  GOOGLE_DCHECK(::MsgsMessengerToClient::IntelligenceRequestAck_ErrorCode_IsValid(value));
  _set_bit(0);
  error_code_ = value;
}

// -------------------------------------------------------------------

// MsgShapeCreation

// required uint32 oid = 1;
inline bool MsgShapeCreation::has_oid() const {
  return _has_bit(0);
}
inline void MsgShapeCreation::clear_oid() {
  oid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgShapeCreation::oid() const {
  return oid_;
}
inline void MsgShapeCreation::set_oid(::google::protobuf::uint32 value) {
  _set_bit(0);
  oid_ = value;
}

// required .Common.MsgShape shape = 2;
inline bool MsgShapeCreation::has_shape() const {
  return _has_bit(1);
}
inline void MsgShapeCreation::clear_shape() {
  if (shape_ != NULL) shape_->::Common::MsgShape::Clear();
  _clear_bit(1);
}
inline const ::Common::MsgShape& MsgShapeCreation::shape() const {
  return shape_ != NULL ? *shape_ : *default_instance_->shape_;
}
inline ::Common::MsgShape* MsgShapeCreation::mutable_shape() {
  _set_bit(1);
  if (shape_ == NULL) shape_ = new ::Common::MsgShape;
  return shape_;
}

// -------------------------------------------------------------------

// MsgShapeUpdate

// required uint32 oid = 1;
inline bool MsgShapeUpdate::has_oid() const {
  return _has_bit(0);
}
inline void MsgShapeUpdate::clear_oid() {
  oid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgShapeUpdate::oid() const {
  return oid_;
}
inline void MsgShapeUpdate::set_oid(::google::protobuf::uint32 value) {
  _set_bit(0);
  oid_ = value;
}

// optional string category = 2;
inline bool MsgShapeUpdate::has_category() const {
  return _has_bit(1);
}
inline void MsgShapeUpdate::clear_category() {
  if (category_ != &_default_category_) {
    category_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& MsgShapeUpdate::category() const {
  return *category_;
}
inline void MsgShapeUpdate::set_category(const ::std::string& value) {
  _set_bit(1);
  if (category_ == &_default_category_) {
    category_ = new ::std::string;
  }
  category_->assign(value);
}
inline void MsgShapeUpdate::set_category(const char* value) {
  _set_bit(1);
  if (category_ == &_default_category_) {
    category_ = new ::std::string;
  }
  category_->assign(value);
}
inline void MsgShapeUpdate::set_category(const char* value, size_t size) {
  _set_bit(1);
  if (category_ == &_default_category_) {
    category_ = new ::std::string;
  }
  category_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgShapeUpdate::mutable_category() {
  _set_bit(1);
  if (category_ == &_default_category_) {
    category_ = new ::std::string;
  }
  return category_;
}

// optional string color = 3;
inline bool MsgShapeUpdate::has_color() const {
  return _has_bit(2);
}
inline void MsgShapeUpdate::clear_color() {
  if (color_ != &_default_color_) {
    color_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& MsgShapeUpdate::color() const {
  return *color_;
}
inline void MsgShapeUpdate::set_color(const ::std::string& value) {
  _set_bit(2);
  if (color_ == &_default_color_) {
    color_ = new ::std::string;
  }
  color_->assign(value);
}
inline void MsgShapeUpdate::set_color(const char* value) {
  _set_bit(2);
  if (color_ == &_default_color_) {
    color_ = new ::std::string;
  }
  color_->assign(value);
}
inline void MsgShapeUpdate::set_color(const char* value, size_t size) {
  _set_bit(2);
  if (color_ == &_default_color_) {
    color_ = new ::std::string;
  }
  color_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgShapeUpdate::mutable_color() {
  _set_bit(2);
  if (color_ == &_default_color_) {
    color_ = new ::std::string;
  }
  return color_;
}

// optional string template_ = 4;
inline bool MsgShapeUpdate::has_template_() const {
  return _has_bit(3);
}
inline void MsgShapeUpdate::clear_template_() {
  if (template__ != &_default_template__) {
    template__->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& MsgShapeUpdate::template_() const {
  return *template__;
}
inline void MsgShapeUpdate::set_template_(const ::std::string& value) {
  _set_bit(3);
  if (template__ == &_default_template__) {
    template__ = new ::std::string;
  }
  template__->assign(value);
}
inline void MsgShapeUpdate::set_template_(const char* value) {
  _set_bit(3);
  if (template__ == &_default_template__) {
    template__ = new ::std::string;
  }
  template__->assign(value);
}
inline void MsgShapeUpdate::set_template_(const char* value, size_t size) {
  _set_bit(3);
  if (template__ == &_default_template__) {
    template__ = new ::std::string;
  }
  template__->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgShapeUpdate::mutable_template_() {
  _set_bit(3);
  if (template__ == &_default_template__) {
    template__ = new ::std::string;
  }
  return template__;
}

// optional .Common.MsgCoordLatLongList points = 5;
inline bool MsgShapeUpdate::has_points() const {
  return _has_bit(4);
}
inline void MsgShapeUpdate::clear_points() {
  if (points_ != NULL) points_->::Common::MsgCoordLatLongList::Clear();
  _clear_bit(4);
}
inline const ::Common::MsgCoordLatLongList& MsgShapeUpdate::points() const {
  return points_ != NULL ? *points_ : *default_instance_->points_;
}
inline ::Common::MsgCoordLatLongList* MsgShapeUpdate::mutable_points() {
  _set_bit(4);
  if (points_ == NULL) points_ = new ::Common::MsgCoordLatLongList;
  return points_;
}

// -------------------------------------------------------------------

// MsgShapeDestruction

// required uint32 oid = 1;
inline bool MsgShapeDestruction::has_oid() const {
  return _has_bit(0);
}
inline void MsgShapeDestruction::clear_oid() {
  oid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgShapeDestruction::oid() const {
  return oid_;
}
inline void MsgShapeDestruction::set_oid(::google::protobuf::uint32 value) {
  _set_bit(0);
  oid_ = value;
}

// -------------------------------------------------------------------

// ShapeRequestAck

// -------------------------------------------------------------------

// MsgShapeCreationRequestAck

// required .MsgsMessengerToClient.ShapeRequestAck.ErrorCode error_code = 1;
inline bool MsgShapeCreationRequestAck::has_error_code() const {
  return _has_bit(0);
}
inline void MsgShapeCreationRequestAck::clear_error_code() {
  error_code_ = 0;
  _clear_bit(0);
}
inline ::MsgsMessengerToClient::ShapeRequestAck_ErrorCode MsgShapeCreationRequestAck::error_code() const {
  return static_cast< ::MsgsMessengerToClient::ShapeRequestAck_ErrorCode >(error_code_);
}
inline void MsgShapeCreationRequestAck::set_error_code(::MsgsMessengerToClient::ShapeRequestAck_ErrorCode value) {
  GOOGLE_DCHECK(::MsgsMessengerToClient::ShapeRequestAck_ErrorCode_IsValid(value));
  _set_bit(0);
  error_code_ = value;
}

// -------------------------------------------------------------------

// MsgShapeUpdateRequestAck

// optional .MsgsMessengerToClient.ShapeRequestAck.ErrorCode error_code = 1;
inline bool MsgShapeUpdateRequestAck::has_error_code() const {
  return _has_bit(0);
}
inline void MsgShapeUpdateRequestAck::clear_error_code() {
  error_code_ = 0;
  _clear_bit(0);
}
inline ::MsgsMessengerToClient::ShapeRequestAck_ErrorCode MsgShapeUpdateRequestAck::error_code() const {
  return static_cast< ::MsgsMessengerToClient::ShapeRequestAck_ErrorCode >(error_code_);
}
inline void MsgShapeUpdateRequestAck::set_error_code(::MsgsMessengerToClient::ShapeRequestAck_ErrorCode value) {
  GOOGLE_DCHECK(::MsgsMessengerToClient::ShapeRequestAck_ErrorCode_IsValid(value));
  _set_bit(0);
  error_code_ = value;
}

// -------------------------------------------------------------------

// MsgShapeDestructionRequestAck

// required .MsgsMessengerToClient.ShapeRequestAck.ErrorCode error_code = 1;
inline bool MsgShapeDestructionRequestAck::has_error_code() const {
  return _has_bit(0);
}
inline void MsgShapeDestructionRequestAck::clear_error_code() {
  error_code_ = 0;
  _clear_bit(0);
}
inline ::MsgsMessengerToClient::ShapeRequestAck_ErrorCode MsgShapeDestructionRequestAck::error_code() const {
  return static_cast< ::MsgsMessengerToClient::ShapeRequestAck_ErrorCode >(error_code_);
}
inline void MsgShapeDestructionRequestAck::set_error_code(::MsgsMessengerToClient::ShapeRequestAck_ErrorCode value) {
  GOOGLE_DCHECK(::MsgsMessengerToClient::ShapeRequestAck_ErrorCode_IsValid(value));
  _set_bit(0);
  error_code_ = value;
}

// -------------------------------------------------------------------

// MsgNoteCreation

// required uint32 id = 1;
inline bool MsgNoteCreation::has_id() const {
  return _has_bit(0);
}
inline void MsgNoteCreation::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgNoteCreation::id() const {
  return id_;
}
inline void MsgNoteCreation::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// required .Common.MsgNote note = 2;
inline bool MsgNoteCreation::has_note() const {
  return _has_bit(1);
}
inline void MsgNoteCreation::clear_note() {
  if (note_ != NULL) note_->::Common::MsgNote::Clear();
  _clear_bit(1);
}
inline const ::Common::MsgNote& MsgNoteCreation::note() const {
  return note_ != NULL ? *note_ : *default_instance_->note_;
}
inline ::Common::MsgNote* MsgNoteCreation::mutable_note() {
  _set_bit(1);
  if (note_ == NULL) note_ = new ::Common::MsgNote;
  return note_;
}

// required string date = 3;
inline bool MsgNoteCreation::has_date() const {
  return _has_bit(2);
}
inline void MsgNoteCreation::clear_date() {
  if (date_ != &_default_date_) {
    date_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& MsgNoteCreation::date() const {
  return *date_;
}
inline void MsgNoteCreation::set_date(const ::std::string& value) {
  _set_bit(2);
  if (date_ == &_default_date_) {
    date_ = new ::std::string;
  }
  date_->assign(value);
}
inline void MsgNoteCreation::set_date(const char* value) {
  _set_bit(2);
  if (date_ == &_default_date_) {
    date_ = new ::std::string;
  }
  date_->assign(value);
}
inline void MsgNoteCreation::set_date(const char* value, size_t size) {
  _set_bit(2);
  if (date_ == &_default_date_) {
    date_ = new ::std::string;
  }
  date_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgNoteCreation::mutable_date() {
  _set_bit(2);
  if (date_ == &_default_date_) {
    date_ = new ::std::string;
  }
  return date_;
}

// -------------------------------------------------------------------

// MsgNoteUpdate

// required uint32 id = 1;
inline bool MsgNoteUpdate::has_id() const {
  return _has_bit(0);
}
inline void MsgNoteUpdate::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgNoteUpdate::id() const {
  return id_;
}
inline void MsgNoteUpdate::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// required string date = 2;
inline bool MsgNoteUpdate::has_date() const {
  return _has_bit(1);
}
inline void MsgNoteUpdate::clear_date() {
  if (date_ != &_default_date_) {
    date_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& MsgNoteUpdate::date() const {
  return *date_;
}
inline void MsgNoteUpdate::set_date(const ::std::string& value) {
  _set_bit(1);
  if (date_ == &_default_date_) {
    date_ = new ::std::string;
  }
  date_->assign(value);
}
inline void MsgNoteUpdate::set_date(const char* value) {
  _set_bit(1);
  if (date_ == &_default_date_) {
    date_ = new ::std::string;
  }
  date_->assign(value);
}
inline void MsgNoteUpdate::set_date(const char* value, size_t size) {
  _set_bit(1);
  if (date_ == &_default_date_) {
    date_ = new ::std::string;
  }
  date_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgNoteUpdate::mutable_date() {
  _set_bit(1);
  if (date_ == &_default_date_) {
    date_ = new ::std::string;
  }
  return date_;
}

// optional string name = 3;
inline bool MsgNoteUpdate::has_name() const {
  return _has_bit(2);
}
inline void MsgNoteUpdate::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& MsgNoteUpdate::name() const {
  return *name_;
}
inline void MsgNoteUpdate::set_name(const ::std::string& value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgNoteUpdate::set_name(const char* value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgNoteUpdate::set_name(const char* value, size_t size) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgNoteUpdate::mutable_name() {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional string number = 4;
inline bool MsgNoteUpdate::has_number() const {
  return _has_bit(3);
}
inline void MsgNoteUpdate::clear_number() {
  if (number_ != &_default_number_) {
    number_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& MsgNoteUpdate::number() const {
  return *number_;
}
inline void MsgNoteUpdate::set_number(const ::std::string& value) {
  _set_bit(3);
  if (number_ == &_default_number_) {
    number_ = new ::std::string;
  }
  number_->assign(value);
}
inline void MsgNoteUpdate::set_number(const char* value) {
  _set_bit(3);
  if (number_ == &_default_number_) {
    number_ = new ::std::string;
  }
  number_->assign(value);
}
inline void MsgNoteUpdate::set_number(const char* value, size_t size) {
  _set_bit(3);
  if (number_ == &_default_number_) {
    number_ = new ::std::string;
  }
  number_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgNoteUpdate::mutable_number() {
  _set_bit(3);
  if (number_ == &_default_number_) {
    number_ = new ::std::string;
  }
  return number_;
}

// optional string description = 5;
inline bool MsgNoteUpdate::has_description() const {
  return _has_bit(4);
}
inline void MsgNoteUpdate::clear_description() {
  if (description_ != &_default_description_) {
    description_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& MsgNoteUpdate::description() const {
  return *description_;
}
inline void MsgNoteUpdate::set_description(const ::std::string& value) {
  _set_bit(4);
  if (description_ == &_default_description_) {
    description_ = new ::std::string;
  }
  description_->assign(value);
}
inline void MsgNoteUpdate::set_description(const char* value) {
  _set_bit(4);
  if (description_ == &_default_description_) {
    description_ = new ::std::string;
  }
  description_->assign(value);
}
inline void MsgNoteUpdate::set_description(const char* value, size_t size) {
  _set_bit(4);
  if (description_ == &_default_description_) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgNoteUpdate::mutable_description() {
  _set_bit(4);
  if (description_ == &_default_description_) {
    description_ = new ::std::string;
  }
  return description_;
}

// optional uint32 parent = 6;
inline bool MsgNoteUpdate::has_parent() const {
  return _has_bit(5);
}
inline void MsgNoteUpdate::clear_parent() {
  parent_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 MsgNoteUpdate::parent() const {
  return parent_;
}
inline void MsgNoteUpdate::set_parent(::google::protobuf::uint32 value) {
  _set_bit(5);
  parent_ = value;
}

// -------------------------------------------------------------------

// MsgNoteDestruction

// required uint32 id = 1;
inline bool MsgNoteDestruction::has_id() const {
  return _has_bit(0);
}
inline void MsgNoteDestruction::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgNoteDestruction::id() const {
  return id_;
}
inline void MsgNoteDestruction::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// MsgMessengerToClient_Content

// optional .MsgsMessengerToClient.MsgLimitCreation limit_creation = 1;
inline bool MsgMessengerToClient_Content::has_limit_creation() const {
  return _has_bit(0);
}
inline void MsgMessengerToClient_Content::clear_limit_creation() {
  if (limit_creation_ != NULL) limit_creation_->::MsgsMessengerToClient::MsgLimitCreation::Clear();
  _clear_bit(0);
}
inline const ::MsgsMessengerToClient::MsgLimitCreation& MsgMessengerToClient_Content::limit_creation() const {
  return limit_creation_ != NULL ? *limit_creation_ : *default_instance_->limit_creation_;
}
inline ::MsgsMessengerToClient::MsgLimitCreation* MsgMessengerToClient_Content::mutable_limit_creation() {
  _set_bit(0);
  if (limit_creation_ == NULL) limit_creation_ = new ::MsgsMessengerToClient::MsgLimitCreation;
  return limit_creation_;
}

// optional .MsgsMessengerToClient.MsgLimitUpdate limit_update = 2;
inline bool MsgMessengerToClient_Content::has_limit_update() const {
  return _has_bit(1);
}
inline void MsgMessengerToClient_Content::clear_limit_update() {
  if (limit_update_ != NULL) limit_update_->::MsgsMessengerToClient::MsgLimitUpdate::Clear();
  _clear_bit(1);
}
inline const ::MsgsMessengerToClient::MsgLimitUpdate& MsgMessengerToClient_Content::limit_update() const {
  return limit_update_ != NULL ? *limit_update_ : *default_instance_->limit_update_;
}
inline ::MsgsMessengerToClient::MsgLimitUpdate* MsgMessengerToClient_Content::mutable_limit_update() {
  _set_bit(1);
  if (limit_update_ == NULL) limit_update_ = new ::MsgsMessengerToClient::MsgLimitUpdate;
  return limit_update_;
}

// optional .MsgsMessengerToClient.MsgLimitDestruction limit_destruction = 3;
inline bool MsgMessengerToClient_Content::has_limit_destruction() const {
  return _has_bit(2);
}
inline void MsgMessengerToClient_Content::clear_limit_destruction() {
  if (limit_destruction_ != NULL) limit_destruction_->::MsgsMessengerToClient::MsgLimitDestruction::Clear();
  _clear_bit(2);
}
inline const ::MsgsMessengerToClient::MsgLimitDestruction& MsgMessengerToClient_Content::limit_destruction() const {
  return limit_destruction_ != NULL ? *limit_destruction_ : *default_instance_->limit_destruction_;
}
inline ::MsgsMessengerToClient::MsgLimitDestruction* MsgMessengerToClient_Content::mutable_limit_destruction() {
  _set_bit(2);
  if (limit_destruction_ == NULL) limit_destruction_ = new ::MsgsMessengerToClient::MsgLimitDestruction;
  return limit_destruction_;
}

// optional .MsgsMessengerToClient.MsgLimitCreationRequestAck limit_creation_request_ack = 4;
inline bool MsgMessengerToClient_Content::has_limit_creation_request_ack() const {
  return _has_bit(3);
}
inline void MsgMessengerToClient_Content::clear_limit_creation_request_ack() {
  if (limit_creation_request_ack_ != NULL) limit_creation_request_ack_->::MsgsMessengerToClient::MsgLimitCreationRequestAck::Clear();
  _clear_bit(3);
}
inline const ::MsgsMessengerToClient::MsgLimitCreationRequestAck& MsgMessengerToClient_Content::limit_creation_request_ack() const {
  return limit_creation_request_ack_ != NULL ? *limit_creation_request_ack_ : *default_instance_->limit_creation_request_ack_;
}
inline ::MsgsMessengerToClient::MsgLimitCreationRequestAck* MsgMessengerToClient_Content::mutable_limit_creation_request_ack() {
  _set_bit(3);
  if (limit_creation_request_ack_ == NULL) limit_creation_request_ack_ = new ::MsgsMessengerToClient::MsgLimitCreationRequestAck;
  return limit_creation_request_ack_;
}

// optional .MsgsMessengerToClient.MsgLimitDestructionRequestAck limit_destruction_request_ack = 5;
inline bool MsgMessengerToClient_Content::has_limit_destruction_request_ack() const {
  return _has_bit(4);
}
inline void MsgMessengerToClient_Content::clear_limit_destruction_request_ack() {
  if (limit_destruction_request_ack_ != NULL) limit_destruction_request_ack_->::MsgsMessengerToClient::MsgLimitDestructionRequestAck::Clear();
  _clear_bit(4);
}
inline const ::MsgsMessengerToClient::MsgLimitDestructionRequestAck& MsgMessengerToClient_Content::limit_destruction_request_ack() const {
  return limit_destruction_request_ack_ != NULL ? *limit_destruction_request_ack_ : *default_instance_->limit_destruction_request_ack_;
}
inline ::MsgsMessengerToClient::MsgLimitDestructionRequestAck* MsgMessengerToClient_Content::mutable_limit_destruction_request_ack() {
  _set_bit(4);
  if (limit_destruction_request_ack_ == NULL) limit_destruction_request_ack_ = new ::MsgsMessengerToClient::MsgLimitDestructionRequestAck;
  return limit_destruction_request_ack_;
}

// optional .MsgsMessengerToClient.MsgLimitUpdateRequestAck limit_update_request_ack = 6;
inline bool MsgMessengerToClient_Content::has_limit_update_request_ack() const {
  return _has_bit(5);
}
inline void MsgMessengerToClient_Content::clear_limit_update_request_ack() {
  if (limit_update_request_ack_ != NULL) limit_update_request_ack_->::MsgsMessengerToClient::MsgLimitUpdateRequestAck::Clear();
  _clear_bit(5);
}
inline const ::MsgsMessengerToClient::MsgLimitUpdateRequestAck& MsgMessengerToClient_Content::limit_update_request_ack() const {
  return limit_update_request_ack_ != NULL ? *limit_update_request_ack_ : *default_instance_->limit_update_request_ack_;
}
inline ::MsgsMessengerToClient::MsgLimitUpdateRequestAck* MsgMessengerToClient_Content::mutable_limit_update_request_ack() {
  _set_bit(5);
  if (limit_update_request_ack_ == NULL) limit_update_request_ack_ = new ::MsgsMessengerToClient::MsgLimitUpdateRequestAck;
  return limit_update_request_ack_;
}

// optional .MsgsMessengerToClient.MsgLimaCreation lima_creation = 7;
inline bool MsgMessengerToClient_Content::has_lima_creation() const {
  return _has_bit(6);
}
inline void MsgMessengerToClient_Content::clear_lima_creation() {
  if (lima_creation_ != NULL) lima_creation_->::MsgsMessengerToClient::MsgLimaCreation::Clear();
  _clear_bit(6);
}
inline const ::MsgsMessengerToClient::MsgLimaCreation& MsgMessengerToClient_Content::lima_creation() const {
  return lima_creation_ != NULL ? *lima_creation_ : *default_instance_->lima_creation_;
}
inline ::MsgsMessengerToClient::MsgLimaCreation* MsgMessengerToClient_Content::mutable_lima_creation() {
  _set_bit(6);
  if (lima_creation_ == NULL) lima_creation_ = new ::MsgsMessengerToClient::MsgLimaCreation;
  return lima_creation_;
}

// optional .MsgsMessengerToClient.MsgLimaUpdate lima_update = 8;
inline bool MsgMessengerToClient_Content::has_lima_update() const {
  return _has_bit(7);
}
inline void MsgMessengerToClient_Content::clear_lima_update() {
  if (lima_update_ != NULL) lima_update_->::MsgsMessengerToClient::MsgLimaUpdate::Clear();
  _clear_bit(7);
}
inline const ::MsgsMessengerToClient::MsgLimaUpdate& MsgMessengerToClient_Content::lima_update() const {
  return lima_update_ != NULL ? *lima_update_ : *default_instance_->lima_update_;
}
inline ::MsgsMessengerToClient::MsgLimaUpdate* MsgMessengerToClient_Content::mutable_lima_update() {
  _set_bit(7);
  if (lima_update_ == NULL) lima_update_ = new ::MsgsMessengerToClient::MsgLimaUpdate;
  return lima_update_;
}

// optional .MsgsMessengerToClient.MsgLimaDestruction lima_destruction = 9;
inline bool MsgMessengerToClient_Content::has_lima_destruction() const {
  return _has_bit(8);
}
inline void MsgMessengerToClient_Content::clear_lima_destruction() {
  if (lima_destruction_ != NULL) lima_destruction_->::MsgsMessengerToClient::MsgLimaDestruction::Clear();
  _clear_bit(8);
}
inline const ::MsgsMessengerToClient::MsgLimaDestruction& MsgMessengerToClient_Content::lima_destruction() const {
  return lima_destruction_ != NULL ? *lima_destruction_ : *default_instance_->lima_destruction_;
}
inline ::MsgsMessengerToClient::MsgLimaDestruction* MsgMessengerToClient_Content::mutable_lima_destruction() {
  _set_bit(8);
  if (lima_destruction_ == NULL) lima_destruction_ = new ::MsgsMessengerToClient::MsgLimaDestruction;
  return lima_destruction_;
}

// optional .MsgsMessengerToClient.MsgLimaCreationRequestAck lima_creation_request_ack = 10;
inline bool MsgMessengerToClient_Content::has_lima_creation_request_ack() const {
  return _has_bit(9);
}
inline void MsgMessengerToClient_Content::clear_lima_creation_request_ack() {
  if (lima_creation_request_ack_ != NULL) lima_creation_request_ack_->::MsgsMessengerToClient::MsgLimaCreationRequestAck::Clear();
  _clear_bit(9);
}
inline const ::MsgsMessengerToClient::MsgLimaCreationRequestAck& MsgMessengerToClient_Content::lima_creation_request_ack() const {
  return lima_creation_request_ack_ != NULL ? *lima_creation_request_ack_ : *default_instance_->lima_creation_request_ack_;
}
inline ::MsgsMessengerToClient::MsgLimaCreationRequestAck* MsgMessengerToClient_Content::mutable_lima_creation_request_ack() {
  _set_bit(9);
  if (lima_creation_request_ack_ == NULL) lima_creation_request_ack_ = new ::MsgsMessengerToClient::MsgLimaCreationRequestAck;
  return lima_creation_request_ack_;
}

// optional .MsgsMessengerToClient.MsgLimaDestructionRequestAck lima_destruction_request_ack = 11;
inline bool MsgMessengerToClient_Content::has_lima_destruction_request_ack() const {
  return _has_bit(10);
}
inline void MsgMessengerToClient_Content::clear_lima_destruction_request_ack() {
  if (lima_destruction_request_ack_ != NULL) lima_destruction_request_ack_->::MsgsMessengerToClient::MsgLimaDestructionRequestAck::Clear();
  _clear_bit(10);
}
inline const ::MsgsMessengerToClient::MsgLimaDestructionRequestAck& MsgMessengerToClient_Content::lima_destruction_request_ack() const {
  return lima_destruction_request_ack_ != NULL ? *lima_destruction_request_ack_ : *default_instance_->lima_destruction_request_ack_;
}
inline ::MsgsMessengerToClient::MsgLimaDestructionRequestAck* MsgMessengerToClient_Content::mutable_lima_destruction_request_ack() {
  _set_bit(10);
  if (lima_destruction_request_ack_ == NULL) lima_destruction_request_ack_ = new ::MsgsMessengerToClient::MsgLimaDestructionRequestAck;
  return lima_destruction_request_ack_;
}

// optional .MsgsMessengerToClient.MsgLimaUpdateRequestAck lima_update_request_ack = 12;
inline bool MsgMessengerToClient_Content::has_lima_update_request_ack() const {
  return _has_bit(11);
}
inline void MsgMessengerToClient_Content::clear_lima_update_request_ack() {
  if (lima_update_request_ack_ != NULL) lima_update_request_ack_->::MsgsMessengerToClient::MsgLimaUpdateRequestAck::Clear();
  _clear_bit(11);
}
inline const ::MsgsMessengerToClient::MsgLimaUpdateRequestAck& MsgMessengerToClient_Content::lima_update_request_ack() const {
  return lima_update_request_ack_ != NULL ? *lima_update_request_ack_ : *default_instance_->lima_update_request_ack_;
}
inline ::MsgsMessengerToClient::MsgLimaUpdateRequestAck* MsgMessengerToClient_Content::mutable_lima_update_request_ack() {
  _set_bit(11);
  if (lima_update_request_ack_ == NULL) lima_update_request_ack_ = new ::MsgsMessengerToClient::MsgLimaUpdateRequestAck;
  return lima_update_request_ack_;
}

// optional .MsgsMessengerToClient.MsgIntelligenceCreation intelligence_creation = 13;
inline bool MsgMessengerToClient_Content::has_intelligence_creation() const {
  return _has_bit(12);
}
inline void MsgMessengerToClient_Content::clear_intelligence_creation() {
  if (intelligence_creation_ != NULL) intelligence_creation_->::MsgsMessengerToClient::MsgIntelligenceCreation::Clear();
  _clear_bit(12);
}
inline const ::MsgsMessengerToClient::MsgIntelligenceCreation& MsgMessengerToClient_Content::intelligence_creation() const {
  return intelligence_creation_ != NULL ? *intelligence_creation_ : *default_instance_->intelligence_creation_;
}
inline ::MsgsMessengerToClient::MsgIntelligenceCreation* MsgMessengerToClient_Content::mutable_intelligence_creation() {
  _set_bit(12);
  if (intelligence_creation_ == NULL) intelligence_creation_ = new ::MsgsMessengerToClient::MsgIntelligenceCreation;
  return intelligence_creation_;
}

// optional .MsgsMessengerToClient.MsgIntelligenceUpdate intelligence_update = 14;
inline bool MsgMessengerToClient_Content::has_intelligence_update() const {
  return _has_bit(13);
}
inline void MsgMessengerToClient_Content::clear_intelligence_update() {
  if (intelligence_update_ != NULL) intelligence_update_->::MsgsMessengerToClient::MsgIntelligenceUpdate::Clear();
  _clear_bit(13);
}
inline const ::MsgsMessengerToClient::MsgIntelligenceUpdate& MsgMessengerToClient_Content::intelligence_update() const {
  return intelligence_update_ != NULL ? *intelligence_update_ : *default_instance_->intelligence_update_;
}
inline ::MsgsMessengerToClient::MsgIntelligenceUpdate* MsgMessengerToClient_Content::mutable_intelligence_update() {
  _set_bit(13);
  if (intelligence_update_ == NULL) intelligence_update_ = new ::MsgsMessengerToClient::MsgIntelligenceUpdate;
  return intelligence_update_;
}

// optional .MsgsMessengerToClient.MsgIntelligenceDestruction intelligence_destruction = 15;
inline bool MsgMessengerToClient_Content::has_intelligence_destruction() const {
  return _has_bit(14);
}
inline void MsgMessengerToClient_Content::clear_intelligence_destruction() {
  if (intelligence_destruction_ != NULL) intelligence_destruction_->::MsgsMessengerToClient::MsgIntelligenceDestruction::Clear();
  _clear_bit(14);
}
inline const ::MsgsMessengerToClient::MsgIntelligenceDestruction& MsgMessengerToClient_Content::intelligence_destruction() const {
  return intelligence_destruction_ != NULL ? *intelligence_destruction_ : *default_instance_->intelligence_destruction_;
}
inline ::MsgsMessengerToClient::MsgIntelligenceDestruction* MsgMessengerToClient_Content::mutable_intelligence_destruction() {
  _set_bit(14);
  if (intelligence_destruction_ == NULL) intelligence_destruction_ = new ::MsgsMessengerToClient::MsgIntelligenceDestruction;
  return intelligence_destruction_;
}

// optional .MsgsMessengerToClient.MsgIntelligenceCreationRequestAck intelligence_creation_request_ack = 16;
inline bool MsgMessengerToClient_Content::has_intelligence_creation_request_ack() const {
  return _has_bit(15);
}
inline void MsgMessengerToClient_Content::clear_intelligence_creation_request_ack() {
  if (intelligence_creation_request_ack_ != NULL) intelligence_creation_request_ack_->::MsgsMessengerToClient::MsgIntelligenceCreationRequestAck::Clear();
  _clear_bit(15);
}
inline const ::MsgsMessengerToClient::MsgIntelligenceCreationRequestAck& MsgMessengerToClient_Content::intelligence_creation_request_ack() const {
  return intelligence_creation_request_ack_ != NULL ? *intelligence_creation_request_ack_ : *default_instance_->intelligence_creation_request_ack_;
}
inline ::MsgsMessengerToClient::MsgIntelligenceCreationRequestAck* MsgMessengerToClient_Content::mutable_intelligence_creation_request_ack() {
  _set_bit(15);
  if (intelligence_creation_request_ack_ == NULL) intelligence_creation_request_ack_ = new ::MsgsMessengerToClient::MsgIntelligenceCreationRequestAck;
  return intelligence_creation_request_ack_;
}

// optional .MsgsMessengerToClient.MsgIntelligenceUpdateRequestAck intelligence_update_request_ack = 17;
inline bool MsgMessengerToClient_Content::has_intelligence_update_request_ack() const {
  return _has_bit(16);
}
inline void MsgMessengerToClient_Content::clear_intelligence_update_request_ack() {
  if (intelligence_update_request_ack_ != NULL) intelligence_update_request_ack_->::MsgsMessengerToClient::MsgIntelligenceUpdateRequestAck::Clear();
  _clear_bit(16);
}
inline const ::MsgsMessengerToClient::MsgIntelligenceUpdateRequestAck& MsgMessengerToClient_Content::intelligence_update_request_ack() const {
  return intelligence_update_request_ack_ != NULL ? *intelligence_update_request_ack_ : *default_instance_->intelligence_update_request_ack_;
}
inline ::MsgsMessengerToClient::MsgIntelligenceUpdateRequestAck* MsgMessengerToClient_Content::mutable_intelligence_update_request_ack() {
  _set_bit(16);
  if (intelligence_update_request_ack_ == NULL) intelligence_update_request_ack_ = new ::MsgsMessengerToClient::MsgIntelligenceUpdateRequestAck;
  return intelligence_update_request_ack_;
}

// optional .MsgsMessengerToClient.MsgIntelligenceDestructionRequestAck intelligence_destruction_request_ack = 18;
inline bool MsgMessengerToClient_Content::has_intelligence_destruction_request_ack() const {
  return _has_bit(17);
}
inline void MsgMessengerToClient_Content::clear_intelligence_destruction_request_ack() {
  if (intelligence_destruction_request_ack_ != NULL) intelligence_destruction_request_ack_->::MsgsMessengerToClient::MsgIntelligenceDestructionRequestAck::Clear();
  _clear_bit(17);
}
inline const ::MsgsMessengerToClient::MsgIntelligenceDestructionRequestAck& MsgMessengerToClient_Content::intelligence_destruction_request_ack() const {
  return intelligence_destruction_request_ack_ != NULL ? *intelligence_destruction_request_ack_ : *default_instance_->intelligence_destruction_request_ack_;
}
inline ::MsgsMessengerToClient::MsgIntelligenceDestructionRequestAck* MsgMessengerToClient_Content::mutable_intelligence_destruction_request_ack() {
  _set_bit(17);
  if (intelligence_destruction_request_ack_ == NULL) intelligence_destruction_request_ack_ = new ::MsgsMessengerToClient::MsgIntelligenceDestructionRequestAck;
  return intelligence_destruction_request_ack_;
}

// optional .MsgsMessengerToClient.MsgShapeCreation shape_creation = 19;
inline bool MsgMessengerToClient_Content::has_shape_creation() const {
  return _has_bit(18);
}
inline void MsgMessengerToClient_Content::clear_shape_creation() {
  if (shape_creation_ != NULL) shape_creation_->::MsgsMessengerToClient::MsgShapeCreation::Clear();
  _clear_bit(18);
}
inline const ::MsgsMessengerToClient::MsgShapeCreation& MsgMessengerToClient_Content::shape_creation() const {
  return shape_creation_ != NULL ? *shape_creation_ : *default_instance_->shape_creation_;
}
inline ::MsgsMessengerToClient::MsgShapeCreation* MsgMessengerToClient_Content::mutable_shape_creation() {
  _set_bit(18);
  if (shape_creation_ == NULL) shape_creation_ = new ::MsgsMessengerToClient::MsgShapeCreation;
  return shape_creation_;
}

// optional .MsgsMessengerToClient.MsgShapeUpdate shape_update = 20;
inline bool MsgMessengerToClient_Content::has_shape_update() const {
  return _has_bit(19);
}
inline void MsgMessengerToClient_Content::clear_shape_update() {
  if (shape_update_ != NULL) shape_update_->::MsgsMessengerToClient::MsgShapeUpdate::Clear();
  _clear_bit(19);
}
inline const ::MsgsMessengerToClient::MsgShapeUpdate& MsgMessengerToClient_Content::shape_update() const {
  return shape_update_ != NULL ? *shape_update_ : *default_instance_->shape_update_;
}
inline ::MsgsMessengerToClient::MsgShapeUpdate* MsgMessengerToClient_Content::mutable_shape_update() {
  _set_bit(19);
  if (shape_update_ == NULL) shape_update_ = new ::MsgsMessengerToClient::MsgShapeUpdate;
  return shape_update_;
}

// optional .MsgsMessengerToClient.MsgShapeDestruction shape_destruction = 21;
inline bool MsgMessengerToClient_Content::has_shape_destruction() const {
  return _has_bit(20);
}
inline void MsgMessengerToClient_Content::clear_shape_destruction() {
  if (shape_destruction_ != NULL) shape_destruction_->::MsgsMessengerToClient::MsgShapeDestruction::Clear();
  _clear_bit(20);
}
inline const ::MsgsMessengerToClient::MsgShapeDestruction& MsgMessengerToClient_Content::shape_destruction() const {
  return shape_destruction_ != NULL ? *shape_destruction_ : *default_instance_->shape_destruction_;
}
inline ::MsgsMessengerToClient::MsgShapeDestruction* MsgMessengerToClient_Content::mutable_shape_destruction() {
  _set_bit(20);
  if (shape_destruction_ == NULL) shape_destruction_ = new ::MsgsMessengerToClient::MsgShapeDestruction;
  return shape_destruction_;
}

// optional .MsgsMessengerToClient.MsgShapeCreationRequestAck shape_creation_request_ack = 22;
inline bool MsgMessengerToClient_Content::has_shape_creation_request_ack() const {
  return _has_bit(21);
}
inline void MsgMessengerToClient_Content::clear_shape_creation_request_ack() {
  if (shape_creation_request_ack_ != NULL) shape_creation_request_ack_->::MsgsMessengerToClient::MsgShapeCreationRequestAck::Clear();
  _clear_bit(21);
}
inline const ::MsgsMessengerToClient::MsgShapeCreationRequestAck& MsgMessengerToClient_Content::shape_creation_request_ack() const {
  return shape_creation_request_ack_ != NULL ? *shape_creation_request_ack_ : *default_instance_->shape_creation_request_ack_;
}
inline ::MsgsMessengerToClient::MsgShapeCreationRequestAck* MsgMessengerToClient_Content::mutable_shape_creation_request_ack() {
  _set_bit(21);
  if (shape_creation_request_ack_ == NULL) shape_creation_request_ack_ = new ::MsgsMessengerToClient::MsgShapeCreationRequestAck;
  return shape_creation_request_ack_;
}

// optional .MsgsMessengerToClient.MsgShapeDestructionRequestAck shape_destruction_request_ack = 23;
inline bool MsgMessengerToClient_Content::has_shape_destruction_request_ack() const {
  return _has_bit(22);
}
inline void MsgMessengerToClient_Content::clear_shape_destruction_request_ack() {
  if (shape_destruction_request_ack_ != NULL) shape_destruction_request_ack_->::MsgsMessengerToClient::MsgShapeDestructionRequestAck::Clear();
  _clear_bit(22);
}
inline const ::MsgsMessengerToClient::MsgShapeDestructionRequestAck& MsgMessengerToClient_Content::shape_destruction_request_ack() const {
  return shape_destruction_request_ack_ != NULL ? *shape_destruction_request_ack_ : *default_instance_->shape_destruction_request_ack_;
}
inline ::MsgsMessengerToClient::MsgShapeDestructionRequestAck* MsgMessengerToClient_Content::mutable_shape_destruction_request_ack() {
  _set_bit(22);
  if (shape_destruction_request_ack_ == NULL) shape_destruction_request_ack_ = new ::MsgsMessengerToClient::MsgShapeDestructionRequestAck;
  return shape_destruction_request_ack_;
}

// optional .MsgsMessengerToClient.MsgShapeUpdateRequestAck shape_update_request_ack = 24;
inline bool MsgMessengerToClient_Content::has_shape_update_request_ack() const {
  return _has_bit(23);
}
inline void MsgMessengerToClient_Content::clear_shape_update_request_ack() {
  if (shape_update_request_ack_ != NULL) shape_update_request_ack_->::MsgsMessengerToClient::MsgShapeUpdateRequestAck::Clear();
  _clear_bit(23);
}
inline const ::MsgsMessengerToClient::MsgShapeUpdateRequestAck& MsgMessengerToClient_Content::shape_update_request_ack() const {
  return shape_update_request_ack_ != NULL ? *shape_update_request_ack_ : *default_instance_->shape_update_request_ack_;
}
inline ::MsgsMessengerToClient::MsgShapeUpdateRequestAck* MsgMessengerToClient_Content::mutable_shape_update_request_ack() {
  _set_bit(23);
  if (shape_update_request_ack_ == NULL) shape_update_request_ack_ = new ::MsgsMessengerToClient::MsgShapeUpdateRequestAck;
  return shape_update_request_ack_;
}

// optional .Common.MsgTextMessage text_message = 25;
inline bool MsgMessengerToClient_Content::has_text_message() const {
  return _has_bit(24);
}
inline void MsgMessengerToClient_Content::clear_text_message() {
  if (text_message_ != NULL) text_message_->::Common::MsgTextMessage::Clear();
  _clear_bit(24);
}
inline const ::Common::MsgTextMessage& MsgMessengerToClient_Content::text_message() const {
  return text_message_ != NULL ? *text_message_ : *default_instance_->text_message_;
}
inline ::Common::MsgTextMessage* MsgMessengerToClient_Content::mutable_text_message() {
  _set_bit(24);
  if (text_message_ == NULL) text_message_ = new ::Common::MsgTextMessage;
  return text_message_;
}

// optional .MsgsMessengerToClient.MsgNoteCreation note_creation = 26;
inline bool MsgMessengerToClient_Content::has_note_creation() const {
  return _has_bit(25);
}
inline void MsgMessengerToClient_Content::clear_note_creation() {
  if (note_creation_ != NULL) note_creation_->::MsgsMessengerToClient::MsgNoteCreation::Clear();
  _clear_bit(25);
}
inline const ::MsgsMessengerToClient::MsgNoteCreation& MsgMessengerToClient_Content::note_creation() const {
  return note_creation_ != NULL ? *note_creation_ : *default_instance_->note_creation_;
}
inline ::MsgsMessengerToClient::MsgNoteCreation* MsgMessengerToClient_Content::mutable_note_creation() {
  _set_bit(25);
  if (note_creation_ == NULL) note_creation_ = new ::MsgsMessengerToClient::MsgNoteCreation;
  return note_creation_;
}

// optional .MsgsMessengerToClient.MsgNoteUpdate note_update = 27;
inline bool MsgMessengerToClient_Content::has_note_update() const {
  return _has_bit(26);
}
inline void MsgMessengerToClient_Content::clear_note_update() {
  if (note_update_ != NULL) note_update_->::MsgsMessengerToClient::MsgNoteUpdate::Clear();
  _clear_bit(26);
}
inline const ::MsgsMessengerToClient::MsgNoteUpdate& MsgMessengerToClient_Content::note_update() const {
  return note_update_ != NULL ? *note_update_ : *default_instance_->note_update_;
}
inline ::MsgsMessengerToClient::MsgNoteUpdate* MsgMessengerToClient_Content::mutable_note_update() {
  _set_bit(26);
  if (note_update_ == NULL) note_update_ = new ::MsgsMessengerToClient::MsgNoteUpdate;
  return note_update_;
}

// optional .MsgsMessengerToClient.MsgNoteDestruction note_destruction = 28;
inline bool MsgMessengerToClient_Content::has_note_destruction() const {
  return _has_bit(27);
}
inline void MsgMessengerToClient_Content::clear_note_destruction() {
  if (note_destruction_ != NULL) note_destruction_->::MsgsMessengerToClient::MsgNoteDestruction::Clear();
  _clear_bit(27);
}
inline const ::MsgsMessengerToClient::MsgNoteDestruction& MsgMessengerToClient_Content::note_destruction() const {
  return note_destruction_ != NULL ? *note_destruction_ : *default_instance_->note_destruction_;
}
inline ::MsgsMessengerToClient::MsgNoteDestruction* MsgMessengerToClient_Content::mutable_note_destruction() {
  _set_bit(27);
  if (note_destruction_ == NULL) note_destruction_ = new ::MsgsMessengerToClient::MsgNoteDestruction;
  return note_destruction_;
}

// -------------------------------------------------------------------

// MsgMessengerToClient

// optional int32 context = 1 [default = 0];
inline bool MsgMessengerToClient::has_context() const {
  return _has_bit(0);
}
inline void MsgMessengerToClient::clear_context() {
  context_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 MsgMessengerToClient::context() const {
  return context_;
}
inline void MsgMessengerToClient::set_context(::google::protobuf::int32 value) {
  _set_bit(0);
  context_ = value;
}

// required .MsgsMessengerToClient.MsgMessengerToClient.Content message = 2;
inline bool MsgMessengerToClient::has_message() const {
  return _has_bit(1);
}
inline void MsgMessengerToClient::clear_message() {
  if (message_ != NULL) message_->::MsgsMessengerToClient::MsgMessengerToClient_Content::Clear();
  _clear_bit(1);
}
inline const ::MsgsMessengerToClient::MsgMessengerToClient_Content& MsgMessengerToClient::message() const {
  return message_ != NULL ? *message_ : *default_instance_->message_;
}
inline ::MsgsMessengerToClient::MsgMessengerToClient_Content* MsgMessengerToClient::mutable_message() {
  _set_bit(1);
  if (message_ == NULL) message_ = new ::MsgsMessengerToClient::MsgMessengerToClient_Content;
  return message_;
}


}  // namespace MsgsMessengerToClient

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgsMessengerToClient::TacticalLineAck_ErrorCode>() {
  return ::MsgsMessengerToClient::TacticalLineAck_ErrorCode_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgsMessengerToClient::IntelligenceRequestAck_ErrorCode>() {
  return ::MsgsMessengerToClient::IntelligenceRequestAck_ErrorCode_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgsMessengerToClient::ShapeRequestAck_ErrorCode>() {
  return ::MsgsMessengerToClient::ShapeRequestAck_ErrorCode_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

#endif  // PROTOBUF_MessengerToClient_2eproto__INCLUDED
