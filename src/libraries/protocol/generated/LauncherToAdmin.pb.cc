// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "LauncherToAdmin.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>

namespace MsgsLauncherToAdmin {

namespace {

const ::google::protobuf::Descriptor* MsgConnectionAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgConnectionAck_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgConnectionAck_ErrorCode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgExercicesListResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgExercicesListResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgExercicesListResponse_ErrorCode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgControlStartAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgControlStartAck_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgControlStartAck_ErrorCode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgControlPauseAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgControlPauseAck_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgControlPauseAck_ErrorCode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgControlStopAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgControlStopAck_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgControlStopAck_ErrorCode_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_LauncherToAdmin_2eproto() {
  protobuf_AddDesc_LauncherToAdmin_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "LauncherToAdmin.proto");
  GOOGLE_CHECK(file != NULL);
  MsgConnectionAck_descriptor_ = file->message_type(0);
  static const int MsgConnectionAck_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgConnectionAck, error_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgConnectionAck, context_),
  };
  MsgConnectionAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgConnectionAck_descriptor_,
      MsgConnectionAck::default_instance_,
      MsgConnectionAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgConnectionAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgConnectionAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgConnectionAck));
  MsgConnectionAck_ErrorCode_descriptor_ = MsgConnectionAck_descriptor_->enum_type(0);
  MsgExercicesListResponse_descriptor_ = file->message_type(1);
  static const int MsgExercicesListResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgExercicesListResponse, error_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgExercicesListResponse, exercise_name_),
  };
  MsgExercicesListResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgExercicesListResponse_descriptor_,
      MsgExercicesListResponse::default_instance_,
      MsgExercicesListResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgExercicesListResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgExercicesListResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgExercicesListResponse));
  MsgExercicesListResponse_ErrorCode_descriptor_ = MsgExercicesListResponse_descriptor_->enum_type(0);
  MsgControlStartAck_descriptor_ = file->message_type(2);
  static const int MsgControlStartAck_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlStartAck, error_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlStartAck, exercise_name_),
  };
  MsgControlStartAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgControlStartAck_descriptor_,
      MsgControlStartAck::default_instance_,
      MsgControlStartAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlStartAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlStartAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgControlStartAck));
  MsgControlStartAck_ErrorCode_descriptor_ = MsgControlStartAck_descriptor_->enum_type(0);
  MsgControlPauseAck_descriptor_ = file->message_type(3);
  static const int MsgControlPauseAck_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlPauseAck, error_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlPauseAck, exercise_name_),
  };
  MsgControlPauseAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgControlPauseAck_descriptor_,
      MsgControlPauseAck::default_instance_,
      MsgControlPauseAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlPauseAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlPauseAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgControlPauseAck));
  MsgControlPauseAck_ErrorCode_descriptor_ = MsgControlPauseAck_descriptor_->enum_type(0);
  MsgControlStopAck_descriptor_ = file->message_type(4);
  static const int MsgControlStopAck_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlStopAck, error_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlStopAck, exercise_name_),
  };
  MsgControlStopAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgControlStopAck_descriptor_,
      MsgControlStopAck::default_instance_,
      MsgControlStopAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlStopAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlStopAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgControlStopAck));
  MsgControlStopAck_ErrorCode_descriptor_ = MsgControlStopAck_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_LauncherToAdmin_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgConnectionAck_descriptor_, &MsgConnectionAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgExercicesListResponse_descriptor_, &MsgExercicesListResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgControlStartAck_descriptor_, &MsgControlStartAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgControlPauseAck_descriptor_, &MsgControlPauseAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgControlStopAck_descriptor_, &MsgControlStopAck::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_LauncherToAdmin_2eproto() {
  delete MsgConnectionAck::default_instance_;
  delete MsgConnectionAck_reflection_;
  delete MsgExercicesListResponse::default_instance_;
  delete MsgExercicesListResponse_reflection_;
  delete MsgControlStartAck::default_instance_;
  delete MsgControlStartAck_reflection_;
  delete MsgControlPauseAck::default_instance_;
  delete MsgControlPauseAck_reflection_;
  delete MsgControlStopAck::default_instance_;
  delete MsgControlStopAck_reflection_;
}

void protobuf_AddDesc_LauncherToAdmin_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Common::protobuf_AddDesc_Common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025LauncherToAdmin.proto\022\023MsgsLauncherToA"
    "dmin\032\014Common.proto\"\275\001\n\020MsgConnectionAck\022"
    "C\n\nerror_code\030\001 \002(\0162/.MsgsLauncherToAdmi"
    "n.MsgConnectionAck.ErrorCode\022\017\n\007context\030"
    "\002 \001(\005\"S\n\tErrorCode\022\013\n\007success\020\000\022\026\n\022inval"
    "id_connection\020\001\022!\n\035incompatible_protocol"
    "_version\020\002\"\245\001\n\030MsgExercicesListResponse\022"
    "K\n\nerror_code\030\001 \002(\01627.MsgsLauncherToAdmi"
    "n.MsgExercicesListResponse.ErrorCode\022\025\n\r"
    "exercise_name\030\002 \003(\t\"%\n\tErrorCode\022\013\n\007succ"
    "ess\020\000\022\013\n\007failure\020\001\"\243\001\n\022MsgControlStartAc"
    "k\022E\n\nerror_code\030\001 \002(\01621.MsgsLauncherToAd"
    "min.MsgControlStartAck.ErrorCode\022\025\n\rexer"
    "cise_name\030\002 \002(\t\"/\n\tErrorCode\022\013\n\007success\020"
    "\000\022\025\n\021bad_exercise_name\020\001\"\243\001\n\022MsgControlP"
    "auseAck\022E\n\nerror_code\030\001 \002(\01621.MsgsLaunch"
    "erToAdmin.MsgControlPauseAck.ErrorCode\022\025"
    "\n\rexercise_name\030\002 \002(\t\"/\n\tErrorCode\022\013\n\007su"
    "ccess\020\000\022\025\n\021bad_exercise_name\020\001\"\241\001\n\021MsgCo"
    "ntrolStopAck\022D\n\nerror_code\030\001 \002(\01620.MsgsL"
    "auncherToAdmin.MsgControlStopAck.ErrorCo"
    "de\022\025\n\rexercise_name\030\002 \002(\t\"/\n\tErrorCode\022\013"
    "\n\007success\020\000\022\025\n\021bad_exercise_name\020\001", 914);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "LauncherToAdmin.proto", &protobuf_RegisterTypes);
  MsgConnectionAck::default_instance_ = new MsgConnectionAck();
  MsgExercicesListResponse::default_instance_ = new MsgExercicesListResponse();
  MsgControlStartAck::default_instance_ = new MsgControlStartAck();
  MsgControlPauseAck::default_instance_ = new MsgControlPauseAck();
  MsgControlStopAck::default_instance_ = new MsgControlStopAck();
  MsgConnectionAck::default_instance_->InitAsDefaultInstance();
  MsgExercicesListResponse::default_instance_->InitAsDefaultInstance();
  MsgControlStartAck::default_instance_->InitAsDefaultInstance();
  MsgControlPauseAck::default_instance_->InitAsDefaultInstance();
  MsgControlStopAck::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_LauncherToAdmin_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_LauncherToAdmin_2eproto {
  StaticDescriptorInitializer_LauncherToAdmin_2eproto() {
    protobuf_AddDesc_LauncherToAdmin_2eproto();
  }
} static_descriptor_initializer_LauncherToAdmin_2eproto_;


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgConnectionAck_ErrorCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgConnectionAck_ErrorCode_descriptor_;
}
bool MsgConnectionAck_ErrorCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgConnectionAck_ErrorCode MsgConnectionAck::success;
const MsgConnectionAck_ErrorCode MsgConnectionAck::invalid_connection;
const MsgConnectionAck_ErrorCode MsgConnectionAck::incompatible_protocol_version;
const MsgConnectionAck_ErrorCode MsgConnectionAck::ErrorCode_MIN;
const MsgConnectionAck_ErrorCode MsgConnectionAck::ErrorCode_MAX;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgConnectionAck::kErrorCodeFieldNumber;
const int MsgConnectionAck::kContextFieldNumber;
#endif  // !_MSC_VER

MsgConnectionAck::MsgConnectionAck() {
  SharedCtor();
}

void MsgConnectionAck::InitAsDefaultInstance() {
}

MsgConnectionAck::MsgConnectionAck(const MsgConnectionAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgConnectionAck::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0;
  context_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgConnectionAck::~MsgConnectionAck() {
  SharedDtor();
}

void MsgConnectionAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgConnectionAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgConnectionAck_descriptor_;
}

const MsgConnectionAck& MsgConnectionAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LauncherToAdmin_2eproto();  return *default_instance_;
}

MsgConnectionAck* MsgConnectionAck::default_instance_ = NULL;

MsgConnectionAck* MsgConnectionAck::New() const {
  return new MsgConnectionAck;
}

void MsgConnectionAck::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0;
    context_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgConnectionAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MsgsLauncherToAdmin.MsgConnectionAck.ErrorCode error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsLauncherToAdmin::MsgConnectionAck_ErrorCode_IsValid(value)) {
          set_error_code(static_cast< ::MsgsLauncherToAdmin::MsgConnectionAck_ErrorCode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectTag(16)) goto parse_context;
        break;
      }
      
      // optional int32 context = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_context:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &context_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgConnectionAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgConnectionAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .MsgsLauncherToAdmin.MsgConnectionAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }
  
  // optional int32 context = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->context(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgConnectionAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .MsgsLauncherToAdmin.MsgConnectionAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }
  
  // optional int32 context = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->context(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgConnectionAck::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .MsgsLauncherToAdmin.MsgConnectionAck.ErrorCode error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }
    
    // optional int32 context = 2;
    if (has_context()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->context());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgConnectionAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgConnectionAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgConnectionAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgConnectionAck::MergeFrom(const MsgConnectionAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_error_code(from.error_code());
    }
    if (from._has_bit(1)) {
      set_context(from.context());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgConnectionAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgConnectionAck::CopyFrom(const MsgConnectionAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgConnectionAck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgConnectionAck::Swap(MsgConnectionAck* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(context_, other->context_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgConnectionAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgConnectionAck_descriptor_;
  metadata.reflection = MsgConnectionAck_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgExercicesListResponse_ErrorCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgExercicesListResponse_ErrorCode_descriptor_;
}
bool MsgExercicesListResponse_ErrorCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgExercicesListResponse_ErrorCode MsgExercicesListResponse::success;
const MsgExercicesListResponse_ErrorCode MsgExercicesListResponse::failure;
const MsgExercicesListResponse_ErrorCode MsgExercicesListResponse::ErrorCode_MIN;
const MsgExercicesListResponse_ErrorCode MsgExercicesListResponse::ErrorCode_MAX;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgExercicesListResponse::kErrorCodeFieldNumber;
const int MsgExercicesListResponse::kExerciseNameFieldNumber;
#endif  // !_MSC_VER

MsgExercicesListResponse::MsgExercicesListResponse() {
  SharedCtor();
}

void MsgExercicesListResponse::InitAsDefaultInstance() {
}

MsgExercicesListResponse::MsgExercicesListResponse(const MsgExercicesListResponse& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgExercicesListResponse::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgExercicesListResponse::~MsgExercicesListResponse() {
  SharedDtor();
}

void MsgExercicesListResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgExercicesListResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgExercicesListResponse_descriptor_;
}

const MsgExercicesListResponse& MsgExercicesListResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LauncherToAdmin_2eproto();  return *default_instance_;
}

MsgExercicesListResponse* MsgExercicesListResponse::default_instance_ = NULL;

MsgExercicesListResponse* MsgExercicesListResponse::New() const {
  return new MsgExercicesListResponse;
}

void MsgExercicesListResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0;
  }
  exercise_name_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgExercicesListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MsgsLauncherToAdmin.MsgExercicesListResponse.ErrorCode error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsLauncherToAdmin::MsgExercicesListResponse_ErrorCode_IsValid(value)) {
          set_error_code(static_cast< ::MsgsLauncherToAdmin::MsgExercicesListResponse_ErrorCode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectTag(18)) goto parse_exercise_name;
        break;
      }
      
      // repeated string exercise_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_exercise_name:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->add_exercise_name()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->exercise_name(0).data(), this->exercise_name(0).length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(18)) goto parse_exercise_name;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgExercicesListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgExercicesListResponse::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .MsgsLauncherToAdmin.MsgExercicesListResponse.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }
  
  // repeated string exercise_name = 2;
  for (int i = 0; i < this->exercise_name_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->exercise_name(i).data(), this->exercise_name(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->exercise_name(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgExercicesListResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .MsgsLauncherToAdmin.MsgExercicesListResponse.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }
  
  // repeated string exercise_name = 2;
  for (int i = 0; i < this->exercise_name_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->exercise_name(i).data(), this->exercise_name(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->exercise_name(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgExercicesListResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .MsgsLauncherToAdmin.MsgExercicesListResponse.ErrorCode error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }
    
  }
  // repeated string exercise_name = 2;
  total_size += 1 * this->exercise_name_size();
  for (int i = 0; i < this->exercise_name_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->exercise_name(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgExercicesListResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgExercicesListResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgExercicesListResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgExercicesListResponse::MergeFrom(const MsgExercicesListResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  exercise_name_.MergeFrom(from.exercise_name_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgExercicesListResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgExercicesListResponse::CopyFrom(const MsgExercicesListResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgExercicesListResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgExercicesListResponse::Swap(MsgExercicesListResponse* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    exercise_name_.Swap(&other->exercise_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgExercicesListResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgExercicesListResponse_descriptor_;
  metadata.reflection = MsgExercicesListResponse_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgControlStartAck_ErrorCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlStartAck_ErrorCode_descriptor_;
}
bool MsgControlStartAck_ErrorCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgControlStartAck_ErrorCode MsgControlStartAck::success;
const MsgControlStartAck_ErrorCode MsgControlStartAck::bad_exercise_name;
const MsgControlStartAck_ErrorCode MsgControlStartAck::ErrorCode_MIN;
const MsgControlStartAck_ErrorCode MsgControlStartAck::ErrorCode_MAX;
#endif  // _MSC_VER
const ::std::string MsgControlStartAck::_default_exercise_name_;
#ifndef _MSC_VER
const int MsgControlStartAck::kErrorCodeFieldNumber;
const int MsgControlStartAck::kExerciseNameFieldNumber;
#endif  // !_MSC_VER

MsgControlStartAck::MsgControlStartAck() {
  SharedCtor();
}

void MsgControlStartAck::InitAsDefaultInstance() {
}

MsgControlStartAck::MsgControlStartAck(const MsgControlStartAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgControlStartAck::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0;
  exercise_name_ = const_cast< ::std::string*>(&_default_exercise_name_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgControlStartAck::~MsgControlStartAck() {
  SharedDtor();
}

void MsgControlStartAck::SharedDtor() {
  if (exercise_name_ != &_default_exercise_name_) {
    delete exercise_name_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgControlStartAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlStartAck_descriptor_;
}

const MsgControlStartAck& MsgControlStartAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LauncherToAdmin_2eproto();  return *default_instance_;
}

MsgControlStartAck* MsgControlStartAck::default_instance_ = NULL;

MsgControlStartAck* MsgControlStartAck::New() const {
  return new MsgControlStartAck;
}

void MsgControlStartAck::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0;
    if (_has_bit(1)) {
      if (exercise_name_ != &_default_exercise_name_) {
        exercise_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgControlStartAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MsgsLauncherToAdmin.MsgControlStartAck.ErrorCode error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsLauncherToAdmin::MsgControlStartAck_ErrorCode_IsValid(value)) {
          set_error_code(static_cast< ::MsgsLauncherToAdmin::MsgControlStartAck_ErrorCode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectTag(18)) goto parse_exercise_name;
        break;
      }
      
      // required string exercise_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_exercise_name:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_exercise_name()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->exercise_name().data(), this->exercise_name().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgControlStartAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgControlStartAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .MsgsLauncherToAdmin.MsgControlStartAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }
  
  // required string exercise_name = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->exercise_name().data(), this->exercise_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->exercise_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgControlStartAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .MsgsLauncherToAdmin.MsgControlStartAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }
  
  // required string exercise_name = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->exercise_name().data(), this->exercise_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->exercise_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgControlStartAck::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .MsgsLauncherToAdmin.MsgControlStartAck.ErrorCode error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }
    
    // required string exercise_name = 2;
    if (has_exercise_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->exercise_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgControlStartAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgControlStartAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgControlStartAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgControlStartAck::MergeFrom(const MsgControlStartAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_error_code(from.error_code());
    }
    if (from._has_bit(1)) {
      set_exercise_name(from.exercise_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgControlStartAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgControlStartAck::CopyFrom(const MsgControlStartAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgControlStartAck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void MsgControlStartAck::Swap(MsgControlStartAck* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(exercise_name_, other->exercise_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgControlStartAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgControlStartAck_descriptor_;
  metadata.reflection = MsgControlStartAck_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgControlPauseAck_ErrorCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlPauseAck_ErrorCode_descriptor_;
}
bool MsgControlPauseAck_ErrorCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgControlPauseAck_ErrorCode MsgControlPauseAck::success;
const MsgControlPauseAck_ErrorCode MsgControlPauseAck::bad_exercise_name;
const MsgControlPauseAck_ErrorCode MsgControlPauseAck::ErrorCode_MIN;
const MsgControlPauseAck_ErrorCode MsgControlPauseAck::ErrorCode_MAX;
#endif  // _MSC_VER
const ::std::string MsgControlPauseAck::_default_exercise_name_;
#ifndef _MSC_VER
const int MsgControlPauseAck::kErrorCodeFieldNumber;
const int MsgControlPauseAck::kExerciseNameFieldNumber;
#endif  // !_MSC_VER

MsgControlPauseAck::MsgControlPauseAck() {
  SharedCtor();
}

void MsgControlPauseAck::InitAsDefaultInstance() {
}

MsgControlPauseAck::MsgControlPauseAck(const MsgControlPauseAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgControlPauseAck::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0;
  exercise_name_ = const_cast< ::std::string*>(&_default_exercise_name_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgControlPauseAck::~MsgControlPauseAck() {
  SharedDtor();
}

void MsgControlPauseAck::SharedDtor() {
  if (exercise_name_ != &_default_exercise_name_) {
    delete exercise_name_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgControlPauseAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlPauseAck_descriptor_;
}

const MsgControlPauseAck& MsgControlPauseAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LauncherToAdmin_2eproto();  return *default_instance_;
}

MsgControlPauseAck* MsgControlPauseAck::default_instance_ = NULL;

MsgControlPauseAck* MsgControlPauseAck::New() const {
  return new MsgControlPauseAck;
}

void MsgControlPauseAck::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0;
    if (_has_bit(1)) {
      if (exercise_name_ != &_default_exercise_name_) {
        exercise_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgControlPauseAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MsgsLauncherToAdmin.MsgControlPauseAck.ErrorCode error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsLauncherToAdmin::MsgControlPauseAck_ErrorCode_IsValid(value)) {
          set_error_code(static_cast< ::MsgsLauncherToAdmin::MsgControlPauseAck_ErrorCode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectTag(18)) goto parse_exercise_name;
        break;
      }
      
      // required string exercise_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_exercise_name:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_exercise_name()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->exercise_name().data(), this->exercise_name().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgControlPauseAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgControlPauseAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .MsgsLauncherToAdmin.MsgControlPauseAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }
  
  // required string exercise_name = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->exercise_name().data(), this->exercise_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->exercise_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgControlPauseAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .MsgsLauncherToAdmin.MsgControlPauseAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }
  
  // required string exercise_name = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->exercise_name().data(), this->exercise_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->exercise_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgControlPauseAck::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .MsgsLauncherToAdmin.MsgControlPauseAck.ErrorCode error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }
    
    // required string exercise_name = 2;
    if (has_exercise_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->exercise_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgControlPauseAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgControlPauseAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgControlPauseAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgControlPauseAck::MergeFrom(const MsgControlPauseAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_error_code(from.error_code());
    }
    if (from._has_bit(1)) {
      set_exercise_name(from.exercise_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgControlPauseAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgControlPauseAck::CopyFrom(const MsgControlPauseAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgControlPauseAck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void MsgControlPauseAck::Swap(MsgControlPauseAck* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(exercise_name_, other->exercise_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgControlPauseAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgControlPauseAck_descriptor_;
  metadata.reflection = MsgControlPauseAck_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgControlStopAck_ErrorCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlStopAck_ErrorCode_descriptor_;
}
bool MsgControlStopAck_ErrorCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgControlStopAck_ErrorCode MsgControlStopAck::success;
const MsgControlStopAck_ErrorCode MsgControlStopAck::bad_exercise_name;
const MsgControlStopAck_ErrorCode MsgControlStopAck::ErrorCode_MIN;
const MsgControlStopAck_ErrorCode MsgControlStopAck::ErrorCode_MAX;
#endif  // _MSC_VER
const ::std::string MsgControlStopAck::_default_exercise_name_;
#ifndef _MSC_VER
const int MsgControlStopAck::kErrorCodeFieldNumber;
const int MsgControlStopAck::kExerciseNameFieldNumber;
#endif  // !_MSC_VER

MsgControlStopAck::MsgControlStopAck() {
  SharedCtor();
}

void MsgControlStopAck::InitAsDefaultInstance() {
}

MsgControlStopAck::MsgControlStopAck(const MsgControlStopAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgControlStopAck::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0;
  exercise_name_ = const_cast< ::std::string*>(&_default_exercise_name_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgControlStopAck::~MsgControlStopAck() {
  SharedDtor();
}

void MsgControlStopAck::SharedDtor() {
  if (exercise_name_ != &_default_exercise_name_) {
    delete exercise_name_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgControlStopAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlStopAck_descriptor_;
}

const MsgControlStopAck& MsgControlStopAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LauncherToAdmin_2eproto();  return *default_instance_;
}

MsgControlStopAck* MsgControlStopAck::default_instance_ = NULL;

MsgControlStopAck* MsgControlStopAck::New() const {
  return new MsgControlStopAck;
}

void MsgControlStopAck::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0;
    if (_has_bit(1)) {
      if (exercise_name_ != &_default_exercise_name_) {
        exercise_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgControlStopAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MsgsLauncherToAdmin.MsgControlStopAck.ErrorCode error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsLauncherToAdmin::MsgControlStopAck_ErrorCode_IsValid(value)) {
          set_error_code(static_cast< ::MsgsLauncherToAdmin::MsgControlStopAck_ErrorCode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectTag(18)) goto parse_exercise_name;
        break;
      }
      
      // required string exercise_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_exercise_name:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_exercise_name()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->exercise_name().data(), this->exercise_name().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgControlStopAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgControlStopAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .MsgsLauncherToAdmin.MsgControlStopAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }
  
  // required string exercise_name = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->exercise_name().data(), this->exercise_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->exercise_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgControlStopAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .MsgsLauncherToAdmin.MsgControlStopAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }
  
  // required string exercise_name = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->exercise_name().data(), this->exercise_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->exercise_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgControlStopAck::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .MsgsLauncherToAdmin.MsgControlStopAck.ErrorCode error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }
    
    // required string exercise_name = 2;
    if (has_exercise_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->exercise_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgControlStopAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgControlStopAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgControlStopAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgControlStopAck::MergeFrom(const MsgControlStopAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_error_code(from.error_code());
    }
    if (from._has_bit(1)) {
      set_exercise_name(from.exercise_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgControlStopAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgControlStopAck::CopyFrom(const MsgControlStopAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgControlStopAck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void MsgControlStopAck::Swap(MsgControlStopAck* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(exercise_name_, other->exercise_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgControlStopAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgControlStopAck_descriptor_;
  metadata.reflection = MsgControlStopAck_reflection_;
  return metadata;
}


}  // namespace MsgsLauncherToAdmin
