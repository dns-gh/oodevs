// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_ClientToAar_2eproto__INCLUDED
#define PROTOBUF_ClientToAar_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>

namespace MsgsClientToAar {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ClientToAar_2eproto();
void protobuf_AssignDesc_ClientToAar_2eproto();
void protobuf_ShutdownFile_ClientToAar_2eproto();

class MsgPlotRequest;
class MsgClientToAar;
class MsgClientToAar_Content;

// ===================================================================

class MsgPlotRequest : public ::google::protobuf::Message {
 public:
  MsgPlotRequest();
  virtual ~MsgPlotRequest();
  
  MsgPlotRequest(const MsgPlotRequest& from);
  
  inline MsgPlotRequest& operator=(const MsgPlotRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlotRequest& default_instance();
  void Swap(MsgPlotRequest* other);
  
  // implements Message ----------------------------------------------
  
  MsgPlotRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlotRequest& from);
  void MergeFrom(const MsgPlotRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 identifier = 1;
  inline bool has_identifier() const;
  inline void clear_identifier();
  static const int kIdentifierFieldNumber = 1;
  inline ::google::protobuf::uint32 identifier() const;
  inline void set_identifier(::google::protobuf::uint32 value);
  
  // required string request = 2;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 2;
  inline const ::std::string& request() const;
  inline void set_request(const ::std::string& value);
  inline void set_request(const char* value);
  inline void set_request(const char* value, size_t size);
  inline ::std::string* mutable_request();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 identifier_;
  ::std::string* request_;
  static const ::std::string _default_request_;
  friend void  protobuf_AddDesc_ClientToAar_2eproto();
  friend void protobuf_AssignDesc_ClientToAar_2eproto();
  friend void protobuf_ShutdownFile_ClientToAar_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgPlotRequest* default_instance_;
};
// -------------------------------------------------------------------

class MsgClientToAar_Content : public ::google::protobuf::Message {
 public:
  MsgClientToAar_Content();
  virtual ~MsgClientToAar_Content();
  
  MsgClientToAar_Content(const MsgClientToAar_Content& from);
  
  inline MsgClientToAar_Content& operator=(const MsgClientToAar_Content& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgClientToAar_Content& default_instance();
  void Swap(MsgClientToAar_Content* other);
  
  // implements Message ----------------------------------------------
  
  MsgClientToAar_Content* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgClientToAar_Content& from);
  void MergeFrom(const MsgClientToAar_Content& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .MsgsClientToAar.MsgPlotRequest plot_request = 1;
  inline bool has_plot_request() const;
  inline void clear_plot_request();
  static const int kPlotRequestFieldNumber = 1;
  inline const ::MsgsClientToAar::MsgPlotRequest& plot_request() const;
  inline ::MsgsClientToAar::MsgPlotRequest* mutable_plot_request();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::MsgsClientToAar::MsgPlotRequest* plot_request_;
  friend void  protobuf_AddDesc_ClientToAar_2eproto();
  friend void protobuf_AssignDesc_ClientToAar_2eproto();
  friend void protobuf_ShutdownFile_ClientToAar_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgClientToAar_Content* default_instance_;
};
// -------------------------------------------------------------------

class MsgClientToAar : public ::google::protobuf::Message {
 public:
  MsgClientToAar();
  virtual ~MsgClientToAar();
  
  MsgClientToAar(const MsgClientToAar& from);
  
  inline MsgClientToAar& operator=(const MsgClientToAar& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgClientToAar& default_instance();
  void Swap(MsgClientToAar* other);
  
  // implements Message ----------------------------------------------
  
  MsgClientToAar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgClientToAar& from);
  void MergeFrom(const MsgClientToAar& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef MsgClientToAar_Content Content;
  
  // accessors -------------------------------------------------------
  
  // optional int32 context = 1;
  inline bool has_context() const;
  inline void clear_context();
  static const int kContextFieldNumber = 1;
  inline ::google::protobuf::int32 context() const;
  inline void set_context(::google::protobuf::int32 value);
  
  // required .MsgsClientToAar.MsgClientToAar.Content message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::MsgsClientToAar::MsgClientToAar_Content& message() const;
  inline ::MsgsClientToAar::MsgClientToAar_Content* mutable_message();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 context_;
  ::MsgsClientToAar::MsgClientToAar_Content* message_;
  friend void  protobuf_AddDesc_ClientToAar_2eproto();
  friend void protobuf_AssignDesc_ClientToAar_2eproto();
  friend void protobuf_ShutdownFile_ClientToAar_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgClientToAar* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// MsgPlotRequest

// required uint32 identifier = 1;
inline bool MsgPlotRequest::has_identifier() const {
  return _has_bit(0);
}
inline void MsgPlotRequest::clear_identifier() {
  identifier_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgPlotRequest::identifier() const {
  return identifier_;
}
inline void MsgPlotRequest::set_identifier(::google::protobuf::uint32 value) {
  _set_bit(0);
  identifier_ = value;
}

// required string request = 2;
inline bool MsgPlotRequest::has_request() const {
  return _has_bit(1);
}
inline void MsgPlotRequest::clear_request() {
  if (request_ != &_default_request_) {
    request_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& MsgPlotRequest::request() const {
  return *request_;
}
inline void MsgPlotRequest::set_request(const ::std::string& value) {
  _set_bit(1);
  if (request_ == &_default_request_) {
    request_ = new ::std::string;
  }
  request_->assign(value);
}
inline void MsgPlotRequest::set_request(const char* value) {
  _set_bit(1);
  if (request_ == &_default_request_) {
    request_ = new ::std::string;
  }
  request_->assign(value);
}
inline void MsgPlotRequest::set_request(const char* value, size_t size) {
  _set_bit(1);
  if (request_ == &_default_request_) {
    request_ = new ::std::string;
  }
  request_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgPlotRequest::mutable_request() {
  _set_bit(1);
  if (request_ == &_default_request_) {
    request_ = new ::std::string;
  }
  return request_;
}

// -------------------------------------------------------------------

// MsgClientToAar_Content

// optional .MsgsClientToAar.MsgPlotRequest plot_request = 1;
inline bool MsgClientToAar_Content::has_plot_request() const {
  return _has_bit(0);
}
inline void MsgClientToAar_Content::clear_plot_request() {
  if (plot_request_ != NULL) plot_request_->::MsgsClientToAar::MsgPlotRequest::Clear();
  _clear_bit(0);
}
inline const ::MsgsClientToAar::MsgPlotRequest& MsgClientToAar_Content::plot_request() const {
  return plot_request_ != NULL ? *plot_request_ : *default_instance_->plot_request_;
}
inline ::MsgsClientToAar::MsgPlotRequest* MsgClientToAar_Content::mutable_plot_request() {
  _set_bit(0);
  if (plot_request_ == NULL) plot_request_ = new ::MsgsClientToAar::MsgPlotRequest;
  return plot_request_;
}

// -------------------------------------------------------------------

// MsgClientToAar

// optional int32 context = 1;
inline bool MsgClientToAar::has_context() const {
  return _has_bit(0);
}
inline void MsgClientToAar::clear_context() {
  context_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 MsgClientToAar::context() const {
  return context_;
}
inline void MsgClientToAar::set_context(::google::protobuf::int32 value) {
  _set_bit(0);
  context_ = value;
}

// required .MsgsClientToAar.MsgClientToAar.Content message = 2;
inline bool MsgClientToAar::has_message() const {
  return _has_bit(1);
}
inline void MsgClientToAar::clear_message() {
  if (message_ != NULL) message_->::MsgsClientToAar::MsgClientToAar_Content::Clear();
  _clear_bit(1);
}
inline const ::MsgsClientToAar::MsgClientToAar_Content& MsgClientToAar::message() const {
  return message_ != NULL ? *message_ : *default_instance_->message_;
}
inline ::MsgsClientToAar::MsgClientToAar_Content* MsgClientToAar::mutable_message() {
  _set_bit(1);
  if (message_ == NULL) message_ = new ::MsgsClientToAar::MsgClientToAar_Content;
  return message_;
}


}  // namespace MsgsClientToAar

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

#endif  // PROTOBUF_ClientToAar_2eproto__INCLUDED
