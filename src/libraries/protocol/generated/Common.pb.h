// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_Common_2eproto__INCLUDED
#define PROTOBUF_Common_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>

namespace Common {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Common_2eproto();
void protobuf_AssignDesc_Common_2eproto();
void protobuf_ShutdownFile_Common_2eproto();

class AutomatId;
class AutomatIdList;
class FormationId;
class FormationIdList;
class KnowledgeGroupId;
class ObjectId;
class ObjectKnowledgeId;
class ObjectKnowledgeIdList;
class PartyId;
class PartyIdList;
class CrowdId;
class CrowdIdList;
class CrowdKnowledgeId;
class CrowdConcentrationId;
class CrowdConcentrationKnowledgeId;
class CrowdFlowId;
class CrowdFlowKnowledgeId;
class UnitId;
class UnitIdList;
class UnitKnowledgeId;
class UnitKnowledgeIdList;
class UrbanObjectId;
class UrbanObjectKnowledgeId;
class ClientObjectId;
class Tasker;
class ParentEntity;
class DrawingId;
class IntelligenceId;
class TacticalLineId;
class MarkerId;
class FireId;
class FireEffectId;
class ReportId;
class WeatherId;
class MaintenanceRequestId;
class MedicalRequestId;
class SupplyRequestId;
class AutomatType;
class BreakdownType;
class EquipmentType;
class FragOrderType;
class MissionType;
class NBCAgentType;
class ObjectType;
class CrowdType;
class ReportType;
class ResourceType;
class UnitType;
class ResourceNetworkType;
class MsgHeading;
class MsgDateTime;
class MsgDotationStock;
class SeqOfDotationStock;
class MsgDotationQuota;
class SeqOfDotationQuota;
class MsgAutomatChangeKnowledgeGroup;
class MsgChangeLogisticLinks;
class MsgAutomatChangeSuperior_oid_superior;
class MsgAutomatChangeSuperior;
class MsgUnitChangeSuperior;
class MsgControlStop;
class MsgControlPause;
class MsgControlResume;
class MsgControlChangeTimeFactor;
class MsgExercise;
class MsgNetworkAddress;
class RgbColor;
class RgbaColor;
class MsgCoordLatLong;
class MsgCoordLatLongList;
class MsgLocation;
class MsgLine;
class MsgLocationList;
class MsgPath;
class MsgPathList;
class MsgPoint;
class MsgPointList;
class MsgPolygon;
class MsgPolygonList;
class MsgLogMedicalPriorities;
class ObstacleType;
class MsgPlannedWork;
class MsgPlannedWorkList;
class MsgLogMaintenancePriorities;
class MsgMissionObjective;
class MsgMissionObjectiveList;
class MsgLimaOrder;
class MsgLimasOrder;
class MsgIntelligence;
class MsgIntelligenceList;
class MsgChangeDiplomacy;
class MsgAtlasNature;
class MsgMissionParameter;
class MsgMissionParameter_Value;
class MsgMissionParameters;
class MsgUnitOrder;
class MsgAutomatOrder;
class MsgCrowdOrder;
class ClientObjectProperty;
class ClientObjectProperty_Value;
class MsgTacticalLine;
class MsgTacticalLine_Diffusion;
class MsgShape;
class MsgChatTarget;
class MsgTextMessage;
class ResourceNetwork;
class ResourceNetwork_Link;
class ObjectAttributeResourceNetwork;
class ObjectAttributeConstruction;
class ObjectAttributeMine;
class ObjectAttributeLogistic;
class ObjectAttributeInteractionHeight;
class ObjectAttributeObstacle;
class ObjectAttributeActivityTime;
class ObjectAttributeBypass;
class ObjectAttributeEffectDelay;
class ObjectAttributeNBC;
class StockResource;
class ObjectAttributeStock;
class ObjectAttributeCrossingSite;
class ObjectAttributeSupplyRoute;
class MsgLocatedQuantity;
class MsgLocatedQuantityList;
class ObjectAttributeToxicCloud;
class ObjectAttributeFire;
class ObjectAttributeMedicalTreatmentBedCapacity;
class ObjectAttributeMedicalTreatment;
class ObjectAttributeNBCType;
class ObjectAttributeSealOff;
class ObjectAttributes;
class MsgNote;
class MsgWeatherAttributes;

enum MsgLocation_Geometry {
  MsgLocation_Geometry_circle = 0,
  MsgLocation_Geometry_ellipse = 1,
  MsgLocation_Geometry_line = 2,
  MsgLocation_Geometry_rectangle = 3,
  MsgLocation_Geometry_polygon = 4,
  MsgLocation_Geometry_point = 5,
  MsgLocation_Geometry_sector = 6,
  MsgLocation_Geometry_none = 7
};
bool MsgLocation_Geometry_IsValid(int value);
const MsgLocation_Geometry MsgLocation_Geometry_Geometry_MIN = MsgLocation_Geometry_circle;
const MsgLocation_Geometry MsgLocation_Geometry_Geometry_MAX = MsgLocation_Geometry_none;

const ::google::protobuf::EnumDescriptor* MsgLocation_Geometry_descriptor();
inline const ::std::string& MsgLocation_Geometry_Name(MsgLocation_Geometry value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgLocation_Geometry_descriptor(), value);
}
inline bool MsgLocation_Geometry_Parse(
    const ::std::string& name, MsgLocation_Geometry* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgLocation_Geometry>(
    MsgLocation_Geometry_descriptor(), name, value);
}
enum ObstacleType_DemolitionTargetType {
  ObstacleType_DemolitionTargetType_preliminary = 0,
  ObstacleType_DemolitionTargetType_reserved = 1
};
bool ObstacleType_DemolitionTargetType_IsValid(int value);
const ObstacleType_DemolitionTargetType ObstacleType_DemolitionTargetType_DemolitionTargetType_MIN = ObstacleType_DemolitionTargetType_preliminary;
const ObstacleType_DemolitionTargetType ObstacleType_DemolitionTargetType_DemolitionTargetType_MAX = ObstacleType_DemolitionTargetType_reserved;

const ::google::protobuf::EnumDescriptor* ObstacleType_DemolitionTargetType_descriptor();
inline const ::std::string& ObstacleType_DemolitionTargetType_Name(ObstacleType_DemolitionTargetType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ObstacleType_DemolitionTargetType_descriptor(), value);
}
inline bool ObstacleType_DemolitionTargetType_Parse(
    const ::std::string& name, ObstacleType_DemolitionTargetType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ObstacleType_DemolitionTargetType>(
    ObstacleType_DemolitionTargetType_descriptor(), name, value);
}
enum MsgLimaOrder_Function {
  MsgLimaOrder_Function_ligne_debouche = 0,
  MsgLimaOrder_Function_ligne_changement_attitude = 1,
  MsgLimaOrder_Function_ligne_coordination = 2,
  MsgLimaOrder_Function_ligne_interdire = 3,
  MsgLimaOrder_Function_ligne_objectif = 4,
  MsgLimaOrder_Function_ligne_coup_arret = 5,
  MsgLimaOrder_Function_ligne_recueil = 6,
  MsgLimaOrder_Function_ligne_debut_mission = 7,
  MsgLimaOrder_Function_ligne_fin_mission = 8,
  MsgLimaOrder_Function_ligne_identification_accueil = 9
};
bool MsgLimaOrder_Function_IsValid(int value);
const MsgLimaOrder_Function MsgLimaOrder_Function_Function_MIN = MsgLimaOrder_Function_ligne_debouche;
const MsgLimaOrder_Function MsgLimaOrder_Function_Function_MAX = MsgLimaOrder_Function_ligne_identification_accueil;

const ::google::protobuf::EnumDescriptor* MsgLimaOrder_Function_descriptor();
inline const ::std::string& MsgLimaOrder_Function_Name(MsgLimaOrder_Function value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgLimaOrder_Function_descriptor(), value);
}
inline bool MsgLimaOrder_Function_Parse(
    const ::std::string& name, MsgLimaOrder_Function* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgLimaOrder_Function>(
    MsgLimaOrder_Function_descriptor(), name, value);
}
enum MsgAtlasNature_AtlasNature {
  MsgAtlasNature_AtlasNature_blinde = 1,
  MsgAtlasNature_AtlasNature_ass = 2,
  MsgAtlasNature_AtlasNature_pc = 4,
  MsgAtlasNature_AtlasNature_log = 8,
  MsgAtlasNature_AtlasNature_mortier = 16,
  MsgAtlasNature_AtlasNature_lance_roquette = 32,
  MsgAtlasNature_AtlasNature_vehicule = 64,
  MsgAtlasNature_AtlasNature_personnel_a_pied = 128,
  MsgAtlasNature_AtlasNature_helicoptere = 256,
  MsgAtlasNature_AtlasNature_indefini = 512,
  MsgAtlasNature_AtlasNature_asa = 1024,
  MsgAtlasNature_AtlasNature_none = 2048
};
bool MsgAtlasNature_AtlasNature_IsValid(int value);
const MsgAtlasNature_AtlasNature MsgAtlasNature_AtlasNature_AtlasNature_MIN = MsgAtlasNature_AtlasNature_blinde;
const MsgAtlasNature_AtlasNature MsgAtlasNature_AtlasNature_AtlasNature_MAX = MsgAtlasNature_AtlasNature_none;

const ::google::protobuf::EnumDescriptor* MsgAtlasNature_AtlasNature_descriptor();
inline const ::std::string& MsgAtlasNature_AtlasNature_Name(MsgAtlasNature_AtlasNature value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgAtlasNature_AtlasNature_descriptor(), value);
}
inline bool MsgAtlasNature_AtlasNature_Parse(
    const ::std::string& name, MsgAtlasNature_AtlasNature* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgAtlasNature_AtlasNature>(
    MsgAtlasNature_AtlasNature_descriptor(), name, value);
}
enum ResourceNetwork_Link_TargetKind {
  ResourceNetwork_Link_TargetKind_urban = 1,
  ResourceNetwork_Link_TargetKind_object = 2
};
bool ResourceNetwork_Link_TargetKind_IsValid(int value);
const ResourceNetwork_Link_TargetKind ResourceNetwork_Link_TargetKind_TargetKind_MIN = ResourceNetwork_Link_TargetKind_urban;
const ResourceNetwork_Link_TargetKind ResourceNetwork_Link_TargetKind_TargetKind_MAX = ResourceNetwork_Link_TargetKind_object;

const ::google::protobuf::EnumDescriptor* ResourceNetwork_Link_TargetKind_descriptor();
inline const ::std::string& ResourceNetwork_Link_TargetKind_Name(ResourceNetwork_Link_TargetKind value) {
  return ::google::protobuf::internal::NameOfEnum(
    ResourceNetwork_Link_TargetKind_descriptor(), value);
}
inline bool ResourceNetwork_Link_TargetKind_Parse(
    const ::std::string& name, ResourceNetwork_Link_TargetKind* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResourceNetwork_Link_TargetKind>(
    ResourceNetwork_Link_TargetKind_descriptor(), name, value);
}
enum ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus {
  ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus_normal = 0,
  ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus_on_divert = 1,
  ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus_closed = 2
};
bool ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus_IsValid(int value);
const ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus_EnumMedicalTreatmentStatus_MIN = ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus_normal;
const ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus_EnumMedicalTreatmentStatus_MAX = ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus_closed;

const ::google::protobuf::EnumDescriptor* ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus_descriptor();
inline const ::std::string& ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus_Name(ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus_descriptor(), value);
}
inline bool ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus_Parse(
    const ::std::string& name, ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus>(
    ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus_descriptor(), name, value);
}
enum EnumDotationFamily {
  munition = 0,
  carburant = 1,
  explosif = 2,
  mine = 3,
  barbele = 4,
  piece = 5,
  ration = 6
};
bool EnumDotationFamily_IsValid(int value);
const EnumDotationFamily EnumDotationFamily_MIN = munition;
const EnumDotationFamily EnumDotationFamily_MAX = ration;

const ::google::protobuf::EnumDescriptor* EnumDotationFamily_descriptor();
inline const ::std::string& EnumDotationFamily_Name(EnumDotationFamily value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumDotationFamily_descriptor(), value);
}
inline bool EnumDotationFamily_Parse(
    const ::std::string& name, EnumDotationFamily* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumDotationFamily>(
    EnumDotationFamily_descriptor(), name, value);
}
enum EnumAmmunitionFamily {
  obus = 0,
  missile_sol = 1,
  missile_air = 2,
  mitraille = 3
};
bool EnumAmmunitionFamily_IsValid(int value);
const EnumAmmunitionFamily EnumAmmunitionFamily_MIN = obus;
const EnumAmmunitionFamily EnumAmmunitionFamily_MAX = mitraille;

const ::google::protobuf::EnumDescriptor* EnumAmmunitionFamily_descriptor();
inline const ::std::string& EnumAmmunitionFamily_Name(EnumAmmunitionFamily value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumAmmunitionFamily_descriptor(), value);
}
inline bool EnumAmmunitionFamily_Parse(
    const ::std::string& name, EnumAmmunitionFamily* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumAmmunitionFamily>(
    EnumAmmunitionFamily_descriptor(), name, value);
}
enum EnumPrecipitationType {
  pas_de_precipitation = 0,
  tempete_sable = 1,
  brouillard = 2,
  crachin = 3,
  pluie = 4,
  neige = 5
};
bool EnumPrecipitationType_IsValid(int value);
const EnumPrecipitationType EnumPrecipitationType_MIN = pas_de_precipitation;
const EnumPrecipitationType EnumPrecipitationType_MAX = neige;

const ::google::protobuf::EnumDescriptor* EnumPrecipitationType_descriptor();
inline const ::std::string& EnumPrecipitationType_Name(EnumPrecipitationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumPrecipitationType_descriptor(), value);
}
inline bool EnumPrecipitationType_Parse(
    const ::std::string& name, EnumPrecipitationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumPrecipitationType>(
    EnumPrecipitationType_descriptor(), name, value);
}
enum EnumFireEffectType {
  smoke = 0,
  light = 1
};
bool EnumFireEffectType_IsValid(int value);
const EnumFireEffectType EnumFireEffectType_MIN = smoke;
const EnumFireEffectType EnumFireEffectType_MAX = light;

const ::google::protobuf::EnumDescriptor* EnumFireEffectType_descriptor();
inline const ::std::string& EnumFireEffectType_Name(EnumFireEffectType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumFireEffectType_descriptor(), value);
}
inline bool EnumFireEffectType_Parse(
    const ::std::string& name, EnumFireEffectType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumFireEffectType>(
    EnumFireEffectType_descriptor(), name, value);
}
enum UnitFireType {
  direct = 0,
  indirect = 1
};
bool UnitFireType_IsValid(int value);
const UnitFireType UnitFireType_MIN = direct;
const UnitFireType UnitFireType_MAX = indirect;

const ::google::protobuf::EnumDescriptor* UnitFireType_descriptor();
inline const ::std::string& UnitFireType_Name(UnitFireType value) {
  return ::google::protobuf::internal::NameOfEnum(
    UnitFireType_descriptor(), value);
}
inline bool UnitFireType_Parse(
    const ::std::string& name, UnitFireType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UnitFireType>(
    UnitFireType_descriptor(), name, value);
}
enum EnumLightingType {
  jour_sans_nuage = 0,
  jour_peu_nuageux = 1,
  jour_moyennement_nuageux = 2,
  jour_assez_nuageux = 3,
  jour_tres_nuageux = 4,
  nuit_pleine_lune = 5,
  nuit_trois_quart_de_lune = 6,
  nuit_demi_lune = 7,
  nuit_quart_de_lune = 8,
  nuit_nouvelle_lune = 9,
  eclairant = 10,
  global_weather = 11
};
bool EnumLightingType_IsValid(int value);
const EnumLightingType EnumLightingType_MIN = jour_sans_nuage;
const EnumLightingType EnumLightingType_MAX = global_weather;

const ::google::protobuf::EnumDescriptor* EnumLightingType_descriptor();
inline const ::std::string& EnumLightingType_Name(EnumLightingType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumLightingType_descriptor(), value);
}
inline bool EnumLightingType_Parse(
    const ::std::string& name, EnumLightingType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumLightingType>(
    EnumLightingType_descriptor(), name, value);
}
enum EnumLogMaintenanceHandlingStatus {
  deplacement_vers_chaine = 0,
  attente_disponibilite_remorqueur = 1,
  remorqueur_deplacement_aller = 2,
  remorqueur_chargement = 3,
  remorqueur_deplacement_retour = 4,
  remorqueur_dechargement = 5,
  diagnostique_maintenance = 6,
  attente_prise_en_charge_par_niveau_superieur = 7,
  attente_disponibilite_pieces = 8,
  attente_disponibilite_reparateur = 9,
  reparation = 10,
  retour_pion = 11,
  termine_maintenance = 12
};
bool EnumLogMaintenanceHandlingStatus_IsValid(int value);
const EnumLogMaintenanceHandlingStatus EnumLogMaintenanceHandlingStatus_MIN = deplacement_vers_chaine;
const EnumLogMaintenanceHandlingStatus EnumLogMaintenanceHandlingStatus_MAX = termine_maintenance;

const ::google::protobuf::EnumDescriptor* EnumLogMaintenanceHandlingStatus_descriptor();
inline const ::std::string& EnumLogMaintenanceHandlingStatus_Name(EnumLogMaintenanceHandlingStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumLogMaintenanceHandlingStatus_descriptor(), value);
}
inline bool EnumLogMaintenanceHandlingStatus_Parse(
    const ::std::string& name, EnumLogMaintenanceHandlingStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumLogMaintenanceHandlingStatus>(
    EnumLogMaintenanceHandlingStatus_descriptor(), name, value);
}
enum EnumLogMedicalHandlingStatus {
  attente_disponibilite_ambulance_releve = 0,
  ambulance_releve_deplacement_aller = 1,
  ambulance_releve_chargement = 2,
  attente_chargement_complet_ambulance_releve = 3,
  ambulance_releve_deplacement_retour = 4,
  ambulance_releve_dechargement = 5,
  attente_disponibilite_medecin_pour_diagnostique = 6,
  diagnostique = 7,
  recherche_secteur_tri = 8,
  attente_disponibilite_medecin_pour_tri = 9,
  tri = 10,
  recherche_secteur_soin = 11,
  attente_disponibilite_medecin_pour_soin = 12,
  soin = 13,
  hospitalisation = 14,
  attente_disponibilite_ambulance_ramassage = 15,
  ambulance_ramassage_chargement = 16,
  attente_chargement_complet_ambulance_ramassage = 17,
  ambulance_ramassage_deplacement_aller = 18,
  ambulance_ramassage_dechargement = 19,
  termine = 20
};
bool EnumLogMedicalHandlingStatus_IsValid(int value);
const EnumLogMedicalHandlingStatus EnumLogMedicalHandlingStatus_MIN = attente_disponibilite_ambulance_releve;
const EnumLogMedicalHandlingStatus EnumLogMedicalHandlingStatus_MAX = termine;

const ::google::protobuf::EnumDescriptor* EnumLogMedicalHandlingStatus_descriptor();
inline const ::std::string& EnumLogMedicalHandlingStatus_Name(EnumLogMedicalHandlingStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumLogMedicalHandlingStatus_descriptor(), value);
}
inline bool EnumLogMedicalHandlingStatus_Parse(
    const ::std::string& name, EnumLogMedicalHandlingStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumLogMedicalHandlingStatus>(
    EnumLogMedicalHandlingStatus_descriptor(), name, value);
}
enum EnumUnitVisibility {
  invisible = 0,
  detected = 1,
  recognized = 2,
  identified = 3,
  recorded = 4
};
bool EnumUnitVisibility_IsValid(int value);
const EnumUnitVisibility EnumUnitVisibility_MIN = invisible;
const EnumUnitVisibility EnumUnitVisibility_MAX = recorded;

const ::google::protobuf::EnumDescriptor* EnumUnitVisibility_descriptor();
inline const ::std::string& EnumUnitVisibility_Name(EnumUnitVisibility value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumUnitVisibility_descriptor(), value);
}
inline bool EnumUnitVisibility_Parse(
    const ::std::string& name, EnumUnitVisibility* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumUnitVisibility>(
    EnumUnitVisibility_descriptor(), name, value);
}
enum EnumSimulationState {
  running = 0,
  paused = 1,
  stopped = 2,
  loading = 3
};
bool EnumSimulationState_IsValid(int value);
const EnumSimulationState EnumSimulationState_MIN = running;
const EnumSimulationState EnumSimulationState_MAX = loading;

const ::google::protobuf::EnumDescriptor* EnumSimulationState_descriptor();
inline const ::std::string& EnumSimulationState_Name(EnumSimulationState value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumSimulationState_descriptor(), value);
}
inline bool EnumSimulationState_Parse(
    const ::std::string& name, EnumSimulationState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumSimulationState>(
    EnumSimulationState_descriptor(), name, value);
}
enum EnumDispatcherState {
  available = 0,
  unavailable = 1
};
bool EnumDispatcherState_IsValid(int value);
const EnumDispatcherState EnumDispatcherState_MIN = available;
const EnumDispatcherState EnumDispatcherState_MAX = unavailable;

const ::google::protobuf::EnumDescriptor* EnumDispatcherState_descriptor();
inline const ::std::string& EnumDispatcherState_Name(EnumDispatcherState value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumDispatcherState_descriptor(), value);
}
inline bool EnumDispatcherState_Parse(
    const ::std::string& name, EnumDispatcherState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumDispatcherState>(
    EnumDispatcherState_descriptor(), name, value);
}
enum EnumMeetingEngagementStatus {
  none_meeting = 0,
  etat_esquive = 1,
  etat_fixe = 2,
  etat_poursuite_mission = 3
};
bool EnumMeetingEngagementStatus_IsValid(int value);
const EnumMeetingEngagementStatus EnumMeetingEngagementStatus_MIN = none_meeting;
const EnumMeetingEngagementStatus EnumMeetingEngagementStatus_MAX = etat_poursuite_mission;

const ::google::protobuf::EnumDescriptor* EnumMeetingEngagementStatus_descriptor();
inline const ::std::string& EnumMeetingEngagementStatus_Name(EnumMeetingEngagementStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumMeetingEngagementStatus_descriptor(), value);
}
inline bool EnumMeetingEngagementStatus_Parse(
    const ::std::string& name, EnumMeetingEngagementStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumMeetingEngagementStatus>(
    EnumMeetingEngagementStatus_descriptor(), name, value);
}
enum EnumOperationalStatus {
  detruit_totalement = 0,
  detruit_tactiquement = 1,
  operationnel = 2
};
bool EnumOperationalStatus_IsValid(int value);
const EnumOperationalStatus EnumOperationalStatus_MIN = detruit_totalement;
const EnumOperationalStatus EnumOperationalStatus_MAX = operationnel;

const ::google::protobuf::EnumDescriptor* EnumOperationalStatus_descriptor();
inline const ::std::string& EnumOperationalStatus_Name(EnumOperationalStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumOperationalStatus_descriptor(), value);
}
inline bool EnumOperationalStatus_Parse(
    const ::std::string& name, EnumOperationalStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumOperationalStatus>(
    EnumOperationalStatus_descriptor(), name, value);
}
enum EnumAutomatMode {
  embraye = 0,
  debraye = 1
};
bool EnumAutomatMode_IsValid(int value);
const EnumAutomatMode EnumAutomatMode_MIN = embraye;
const EnumAutomatMode EnumAutomatMode_MAX = debraye;

const ::google::protobuf::EnumDescriptor* EnumAutomatMode_descriptor();
inline const ::std::string& EnumAutomatMode_Name(EnumAutomatMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumAutomatMode_descriptor(), value);
}
inline bool EnumAutomatMode_Parse(
    const ::std::string& name, EnumAutomatMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumAutomatMode>(
    EnumAutomatMode_descriptor(), name, value);
}
enum EnumCrowdAttitude {
  calme = 0,
  agitee = 1,
  excitee = 2,
  agressive = 3
};
bool EnumCrowdAttitude_IsValid(int value);
const EnumCrowdAttitude EnumCrowdAttitude_MIN = calme;
const EnumCrowdAttitude EnumCrowdAttitude_MAX = agressive;

const ::google::protobuf::EnumDescriptor* EnumCrowdAttitude_descriptor();
inline const ::std::string& EnumCrowdAttitude_Name(EnumCrowdAttitude value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumCrowdAttitude_descriptor(), value);
}
inline bool EnumCrowdAttitude_Parse(
    const ::std::string& name, EnumCrowdAttitude* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumCrowdAttitude>(
    EnumCrowdAttitude_descriptor(), name, value);
}
enum EnumUnitTiredness {
  normal = 0,
  fatigue = 1,
  epuise = 2
};
bool EnumUnitTiredness_IsValid(int value);
const EnumUnitTiredness EnumUnitTiredness_MIN = normal;
const EnumUnitTiredness EnumUnitTiredness_MAX = epuise;

const ::google::protobuf::EnumDescriptor* EnumUnitTiredness_descriptor();
inline const ::std::string& EnumUnitTiredness_Name(EnumUnitTiredness value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumUnitTiredness_descriptor(), value);
}
inline bool EnumUnitTiredness_Parse(
    const ::std::string& name, EnumUnitTiredness* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumUnitTiredness>(
    EnumUnitTiredness_descriptor(), name, value);
}
enum EnumUnitMorale {
  fanatique = 0,
  bon = 1,
  moyen = 2,
  mauvais = 3
};
bool EnumUnitMorale_IsValid(int value);
const EnumUnitMorale EnumUnitMorale_MIN = fanatique;
const EnumUnitMorale EnumUnitMorale_MAX = mauvais;

const ::google::protobuf::EnumDescriptor* EnumUnitMorale_descriptor();
inline const ::std::string& EnumUnitMorale_Name(EnumUnitMorale value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumUnitMorale_descriptor(), value);
}
inline bool EnumUnitMorale_Parse(
    const ::std::string& name, EnumUnitMorale* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumUnitMorale>(
    EnumUnitMorale_descriptor(), name, value);
}
enum EnumUnitExperience {
  veteran = 0,
  experimente = 1,
  conscrit = 2
};
bool EnumUnitExperience_IsValid(int value);
const EnumUnitExperience EnumUnitExperience_MIN = veteran;
const EnumUnitExperience EnumUnitExperience_MAX = conscrit;

const ::google::protobuf::EnumDescriptor* EnumUnitExperience_descriptor();
inline const ::std::string& EnumUnitExperience_Name(EnumUnitExperience value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumUnitExperience_descriptor(), value);
}
inline bool EnumUnitExperience_Parse(
    const ::std::string& name, EnumUnitExperience* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumUnitExperience>(
    EnumUnitExperience_descriptor(), name, value);
}
enum EnumHumanRank {
  officier = 0,
  sous_officer = 1,
  mdr = 2
};
bool EnumHumanRank_IsValid(int value);
const EnumHumanRank EnumHumanRank_MIN = officier;
const EnumHumanRank EnumHumanRank_MAX = mdr;

const ::google::protobuf::EnumDescriptor* EnumHumanRank_descriptor();
inline const ::std::string& EnumHumanRank_Name(EnumHumanRank value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumHumanRank_descriptor(), value);
}
inline bool EnumHumanRank_Parse(
    const ::std::string& name, EnumHumanRank* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumHumanRank>(
    EnumHumanRank_descriptor(), name, value);
}
enum EnumDiplomacy {
  unknown_diplo = 0,
  friend_diplo = 1,
  enemy_diplo = 2,
  neutral_diplo = 3
};
bool EnumDiplomacy_IsValid(int value);
const EnumDiplomacy EnumDiplomacy_MIN = unknown_diplo;
const EnumDiplomacy EnumDiplomacy_MAX = neutral_diplo;

const ::google::protobuf::EnumDescriptor* EnumDiplomacy_descriptor();
inline const ::std::string& EnumDiplomacy_Name(EnumDiplomacy value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumDiplomacy_descriptor(), value);
}
inline bool EnumDiplomacy_Parse(
    const ::std::string& name, EnumDiplomacy* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumDiplomacy>(
    EnumDiplomacy_descriptor(), name, value);
}
enum EnumHumanWound {
  non_blesse = 0,
  mort = 1,
  blesse_urgence_1 = 2,
  blesse_urgence_2 = 3,
  blesse_urgence_3 = 4,
  blesse_urgence_extreme = 5
};
bool EnumHumanWound_IsValid(int value);
const EnumHumanWound EnumHumanWound_MIN = non_blesse;
const EnumHumanWound EnumHumanWound_MAX = blesse_urgence_extreme;

const ::google::protobuf::EnumDescriptor* EnumHumanWound_descriptor();
inline const ::std::string& EnumHumanWound_Name(EnumHumanWound value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumHumanWound_descriptor(), value);
}
inline bool EnumHumanWound_Parse(
    const ::std::string& name, EnumHumanWound* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumHumanWound>(
    EnumHumanWound_descriptor(), name, value);
}
enum EnumLogMaintenanceRegimeTravail {
  regime_1 = 0,
  regime_2 = 1,
  regime_3 = 2,
  regime_4 = 3
};
bool EnumLogMaintenanceRegimeTravail_IsValid(int value);
const EnumLogMaintenanceRegimeTravail EnumLogMaintenanceRegimeTravail_MIN = regime_1;
const EnumLogMaintenanceRegimeTravail EnumLogMaintenanceRegimeTravail_MAX = regime_4;

const ::google::protobuf::EnumDescriptor* EnumLogMaintenanceRegimeTravail_descriptor();
inline const ::std::string& EnumLogMaintenanceRegimeTravail_Name(EnumLogMaintenanceRegimeTravail value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumLogMaintenanceRegimeTravail_descriptor(), value);
}
inline bool EnumLogMaintenanceRegimeTravail_Parse(
    const ::std::string& name, EnumLogMaintenanceRegimeTravail* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumLogMaintenanceRegimeTravail>(
    EnumLogMaintenanceRegimeTravail_descriptor(), name, value);
}
enum EnumNatureLevel {
  none_naturelevel = 0,
  o = 1,
  oo = 2,
  ooo = 3,
  i = 4,
  ii = 5,
  iii = 6,
  x = 7,
  xx = 8,
  xxx = 9,
  xxxx = 10,
  xxxxx = 11
};
bool EnumNatureLevel_IsValid(int value);
const EnumNatureLevel EnumNatureLevel_MIN = none_naturelevel;
const EnumNatureLevel EnumNatureLevel_MAX = xxxxx;

const ::google::protobuf::EnumDescriptor* EnumNatureLevel_descriptor();
inline const ::std::string& EnumNatureLevel_Name(EnumNatureLevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumNatureLevel_descriptor(), value);
}
inline bool EnumNatureLevel_Parse(
    const ::std::string& name, EnumNatureLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumNatureLevel>(
    EnumNatureLevel_descriptor(), name, value);
}
enum EnumLogisticLevel {
  none = 0,
  tc2 = 1,
  logistic_base = 2
};
bool EnumLogisticLevel_IsValid(int value);
const EnumLogisticLevel EnumLogisticLevel_MIN = none;
const EnumLogisticLevel EnumLogisticLevel_MAX = logistic_base;

const ::google::protobuf::EnumDescriptor* EnumLogisticLevel_descriptor();
inline const ::std::string& EnumLogisticLevel_Name(EnumLogisticLevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumLogisticLevel_descriptor(), value);
}
inline bool EnumLogisticLevel_Parse(
    const ::std::string& name, EnumLogisticLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumLogisticLevel>(
    EnumLogisticLevel_descriptor(), name, value);
}
// ===================================================================

class AutomatId : public ::google::protobuf::Message {
 public:
  AutomatId();
  virtual ~AutomatId();
  
  AutomatId(const AutomatId& from);
  
  inline AutomatId& operator=(const AutomatId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AutomatId& default_instance();
  void Swap(AutomatId* other);
  
  // implements Message ----------------------------------------------
  
  AutomatId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AutomatId& from);
  void MergeFrom(const AutomatId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static AutomatId* default_instance_;
};
// -------------------------------------------------------------------

class AutomatIdList : public ::google::protobuf::Message {
 public:
  AutomatIdList();
  virtual ~AutomatIdList();
  
  AutomatIdList(const AutomatIdList& from);
  
  inline AutomatIdList& operator=(const AutomatIdList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AutomatIdList& default_instance();
  void Swap(AutomatIdList* other);
  
  // implements Message ----------------------------------------------
  
  AutomatIdList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AutomatIdList& from);
  void MergeFrom(const AutomatIdList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Common.AutomatId elem = 1;
  inline int elem_size() const;
  inline void clear_elem();
  static const int kElemFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::Common::AutomatId >& elem() const;
  inline ::google::protobuf::RepeatedPtrField< ::Common::AutomatId >* mutable_elem();
  inline const ::Common::AutomatId& elem(int index) const;
  inline ::Common::AutomatId* mutable_elem(int index);
  inline ::Common::AutomatId* add_elem();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::Common::AutomatId > elem_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static AutomatIdList* default_instance_;
};
// -------------------------------------------------------------------

class FormationId : public ::google::protobuf::Message {
 public:
  FormationId();
  virtual ~FormationId();
  
  FormationId(const FormationId& from);
  
  inline FormationId& operator=(const FormationId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FormationId& default_instance();
  void Swap(FormationId* other);
  
  // implements Message ----------------------------------------------
  
  FormationId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FormationId& from);
  void MergeFrom(const FormationId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static FormationId* default_instance_;
};
// -------------------------------------------------------------------

class FormationIdList : public ::google::protobuf::Message {
 public:
  FormationIdList();
  virtual ~FormationIdList();
  
  FormationIdList(const FormationIdList& from);
  
  inline FormationIdList& operator=(const FormationIdList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FormationIdList& default_instance();
  void Swap(FormationIdList* other);
  
  // implements Message ----------------------------------------------
  
  FormationIdList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FormationIdList& from);
  void MergeFrom(const FormationIdList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Common.FormationId elem = 1;
  inline int elem_size() const;
  inline void clear_elem();
  static const int kElemFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::Common::FormationId >& elem() const;
  inline ::google::protobuf::RepeatedPtrField< ::Common::FormationId >* mutable_elem();
  inline const ::Common::FormationId& elem(int index) const;
  inline ::Common::FormationId* mutable_elem(int index);
  inline ::Common::FormationId* add_elem();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::Common::FormationId > elem_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static FormationIdList* default_instance_;
};
// -------------------------------------------------------------------

class KnowledgeGroupId : public ::google::protobuf::Message {
 public:
  KnowledgeGroupId();
  virtual ~KnowledgeGroupId();
  
  KnowledgeGroupId(const KnowledgeGroupId& from);
  
  inline KnowledgeGroupId& operator=(const KnowledgeGroupId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const KnowledgeGroupId& default_instance();
  void Swap(KnowledgeGroupId* other);
  
  // implements Message ----------------------------------------------
  
  KnowledgeGroupId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KnowledgeGroupId& from);
  void MergeFrom(const KnowledgeGroupId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static KnowledgeGroupId* default_instance_;
};
// -------------------------------------------------------------------

class ObjectId : public ::google::protobuf::Message {
 public:
  ObjectId();
  virtual ~ObjectId();
  
  ObjectId(const ObjectId& from);
  
  inline ObjectId& operator=(const ObjectId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectId& default_instance();
  void Swap(ObjectId* other);
  
  // implements Message ----------------------------------------------
  
  ObjectId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectId& from);
  void MergeFrom(const ObjectId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ObjectId* default_instance_;
};
// -------------------------------------------------------------------

class ObjectKnowledgeId : public ::google::protobuf::Message {
 public:
  ObjectKnowledgeId();
  virtual ~ObjectKnowledgeId();
  
  ObjectKnowledgeId(const ObjectKnowledgeId& from);
  
  inline ObjectKnowledgeId& operator=(const ObjectKnowledgeId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectKnowledgeId& default_instance();
  void Swap(ObjectKnowledgeId* other);
  
  // implements Message ----------------------------------------------
  
  ObjectKnowledgeId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectKnowledgeId& from);
  void MergeFrom(const ObjectKnowledgeId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ObjectKnowledgeId* default_instance_;
};
// -------------------------------------------------------------------

class ObjectKnowledgeIdList : public ::google::protobuf::Message {
 public:
  ObjectKnowledgeIdList();
  virtual ~ObjectKnowledgeIdList();
  
  ObjectKnowledgeIdList(const ObjectKnowledgeIdList& from);
  
  inline ObjectKnowledgeIdList& operator=(const ObjectKnowledgeIdList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectKnowledgeIdList& default_instance();
  void Swap(ObjectKnowledgeIdList* other);
  
  // implements Message ----------------------------------------------
  
  ObjectKnowledgeIdList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectKnowledgeIdList& from);
  void MergeFrom(const ObjectKnowledgeIdList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Common.ObjectKnowledgeId elem = 1;
  inline int elem_size() const;
  inline void clear_elem();
  static const int kElemFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::Common::ObjectKnowledgeId >& elem() const;
  inline ::google::protobuf::RepeatedPtrField< ::Common::ObjectKnowledgeId >* mutable_elem();
  inline const ::Common::ObjectKnowledgeId& elem(int index) const;
  inline ::Common::ObjectKnowledgeId* mutable_elem(int index);
  inline ::Common::ObjectKnowledgeId* add_elem();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::Common::ObjectKnowledgeId > elem_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ObjectKnowledgeIdList* default_instance_;
};
// -------------------------------------------------------------------

class PartyId : public ::google::protobuf::Message {
 public:
  PartyId();
  virtual ~PartyId();
  
  PartyId(const PartyId& from);
  
  inline PartyId& operator=(const PartyId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PartyId& default_instance();
  void Swap(PartyId* other);
  
  // implements Message ----------------------------------------------
  
  PartyId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PartyId& from);
  void MergeFrom(const PartyId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PartyId* default_instance_;
};
// -------------------------------------------------------------------

class PartyIdList : public ::google::protobuf::Message {
 public:
  PartyIdList();
  virtual ~PartyIdList();
  
  PartyIdList(const PartyIdList& from);
  
  inline PartyIdList& operator=(const PartyIdList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PartyIdList& default_instance();
  void Swap(PartyIdList* other);
  
  // implements Message ----------------------------------------------
  
  PartyIdList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PartyIdList& from);
  void MergeFrom(const PartyIdList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Common.PartyId elem = 1;
  inline int elem_size() const;
  inline void clear_elem();
  static const int kElemFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::Common::PartyId >& elem() const;
  inline ::google::protobuf::RepeatedPtrField< ::Common::PartyId >* mutable_elem();
  inline const ::Common::PartyId& elem(int index) const;
  inline ::Common::PartyId* mutable_elem(int index);
  inline ::Common::PartyId* add_elem();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::Common::PartyId > elem_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PartyIdList* default_instance_;
};
// -------------------------------------------------------------------

class CrowdId : public ::google::protobuf::Message {
 public:
  CrowdId();
  virtual ~CrowdId();
  
  CrowdId(const CrowdId& from);
  
  inline CrowdId& operator=(const CrowdId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CrowdId& default_instance();
  void Swap(CrowdId* other);
  
  // implements Message ----------------------------------------------
  
  CrowdId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CrowdId& from);
  void MergeFrom(const CrowdId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CrowdId* default_instance_;
};
// -------------------------------------------------------------------

class CrowdIdList : public ::google::protobuf::Message {
 public:
  CrowdIdList();
  virtual ~CrowdIdList();
  
  CrowdIdList(const CrowdIdList& from);
  
  inline CrowdIdList& operator=(const CrowdIdList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CrowdIdList& default_instance();
  void Swap(CrowdIdList* other);
  
  // implements Message ----------------------------------------------
  
  CrowdIdList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CrowdIdList& from);
  void MergeFrom(const CrowdIdList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Common.CrowdId elem = 1;
  inline int elem_size() const;
  inline void clear_elem();
  static const int kElemFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::Common::CrowdId >& elem() const;
  inline ::google::protobuf::RepeatedPtrField< ::Common::CrowdId >* mutable_elem();
  inline const ::Common::CrowdId& elem(int index) const;
  inline ::Common::CrowdId* mutable_elem(int index);
  inline ::Common::CrowdId* add_elem();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::Common::CrowdId > elem_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CrowdIdList* default_instance_;
};
// -------------------------------------------------------------------

class CrowdKnowledgeId : public ::google::protobuf::Message {
 public:
  CrowdKnowledgeId();
  virtual ~CrowdKnowledgeId();
  
  CrowdKnowledgeId(const CrowdKnowledgeId& from);
  
  inline CrowdKnowledgeId& operator=(const CrowdKnowledgeId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CrowdKnowledgeId& default_instance();
  void Swap(CrowdKnowledgeId* other);
  
  // implements Message ----------------------------------------------
  
  CrowdKnowledgeId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CrowdKnowledgeId& from);
  void MergeFrom(const CrowdKnowledgeId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CrowdKnowledgeId* default_instance_;
};
// -------------------------------------------------------------------

class CrowdConcentrationId : public ::google::protobuf::Message {
 public:
  CrowdConcentrationId();
  virtual ~CrowdConcentrationId();
  
  CrowdConcentrationId(const CrowdConcentrationId& from);
  
  inline CrowdConcentrationId& operator=(const CrowdConcentrationId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CrowdConcentrationId& default_instance();
  void Swap(CrowdConcentrationId* other);
  
  // implements Message ----------------------------------------------
  
  CrowdConcentrationId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CrowdConcentrationId& from);
  void MergeFrom(const CrowdConcentrationId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CrowdConcentrationId* default_instance_;
};
// -------------------------------------------------------------------

class CrowdConcentrationKnowledgeId : public ::google::protobuf::Message {
 public:
  CrowdConcentrationKnowledgeId();
  virtual ~CrowdConcentrationKnowledgeId();
  
  CrowdConcentrationKnowledgeId(const CrowdConcentrationKnowledgeId& from);
  
  inline CrowdConcentrationKnowledgeId& operator=(const CrowdConcentrationKnowledgeId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CrowdConcentrationKnowledgeId& default_instance();
  void Swap(CrowdConcentrationKnowledgeId* other);
  
  // implements Message ----------------------------------------------
  
  CrowdConcentrationKnowledgeId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CrowdConcentrationKnowledgeId& from);
  void MergeFrom(const CrowdConcentrationKnowledgeId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CrowdConcentrationKnowledgeId* default_instance_;
};
// -------------------------------------------------------------------

class CrowdFlowId : public ::google::protobuf::Message {
 public:
  CrowdFlowId();
  virtual ~CrowdFlowId();
  
  CrowdFlowId(const CrowdFlowId& from);
  
  inline CrowdFlowId& operator=(const CrowdFlowId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CrowdFlowId& default_instance();
  void Swap(CrowdFlowId* other);
  
  // implements Message ----------------------------------------------
  
  CrowdFlowId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CrowdFlowId& from);
  void MergeFrom(const CrowdFlowId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CrowdFlowId* default_instance_;
};
// -------------------------------------------------------------------

class CrowdFlowKnowledgeId : public ::google::protobuf::Message {
 public:
  CrowdFlowKnowledgeId();
  virtual ~CrowdFlowKnowledgeId();
  
  CrowdFlowKnowledgeId(const CrowdFlowKnowledgeId& from);
  
  inline CrowdFlowKnowledgeId& operator=(const CrowdFlowKnowledgeId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CrowdFlowKnowledgeId& default_instance();
  void Swap(CrowdFlowKnowledgeId* other);
  
  // implements Message ----------------------------------------------
  
  CrowdFlowKnowledgeId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CrowdFlowKnowledgeId& from);
  void MergeFrom(const CrowdFlowKnowledgeId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CrowdFlowKnowledgeId* default_instance_;
};
// -------------------------------------------------------------------

class UnitId : public ::google::protobuf::Message {
 public:
  UnitId();
  virtual ~UnitId();
  
  UnitId(const UnitId& from);
  
  inline UnitId& operator=(const UnitId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnitId& default_instance();
  void Swap(UnitId* other);
  
  // implements Message ----------------------------------------------
  
  UnitId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnitId& from);
  void MergeFrom(const UnitId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static UnitId* default_instance_;
};
// -------------------------------------------------------------------

class UnitIdList : public ::google::protobuf::Message {
 public:
  UnitIdList();
  virtual ~UnitIdList();
  
  UnitIdList(const UnitIdList& from);
  
  inline UnitIdList& operator=(const UnitIdList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnitIdList& default_instance();
  void Swap(UnitIdList* other);
  
  // implements Message ----------------------------------------------
  
  UnitIdList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnitIdList& from);
  void MergeFrom(const UnitIdList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Common.UnitId elem = 1;
  inline int elem_size() const;
  inline void clear_elem();
  static const int kElemFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::Common::UnitId >& elem() const;
  inline ::google::protobuf::RepeatedPtrField< ::Common::UnitId >* mutable_elem();
  inline const ::Common::UnitId& elem(int index) const;
  inline ::Common::UnitId* mutable_elem(int index);
  inline ::Common::UnitId* add_elem();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::Common::UnitId > elem_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static UnitIdList* default_instance_;
};
// -------------------------------------------------------------------

class UnitKnowledgeId : public ::google::protobuf::Message {
 public:
  UnitKnowledgeId();
  virtual ~UnitKnowledgeId();
  
  UnitKnowledgeId(const UnitKnowledgeId& from);
  
  inline UnitKnowledgeId& operator=(const UnitKnowledgeId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnitKnowledgeId& default_instance();
  void Swap(UnitKnowledgeId* other);
  
  // implements Message ----------------------------------------------
  
  UnitKnowledgeId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnitKnowledgeId& from);
  void MergeFrom(const UnitKnowledgeId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static UnitKnowledgeId* default_instance_;
};
// -------------------------------------------------------------------

class UnitKnowledgeIdList : public ::google::protobuf::Message {
 public:
  UnitKnowledgeIdList();
  virtual ~UnitKnowledgeIdList();
  
  UnitKnowledgeIdList(const UnitKnowledgeIdList& from);
  
  inline UnitKnowledgeIdList& operator=(const UnitKnowledgeIdList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnitKnowledgeIdList& default_instance();
  void Swap(UnitKnowledgeIdList* other);
  
  // implements Message ----------------------------------------------
  
  UnitKnowledgeIdList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnitKnowledgeIdList& from);
  void MergeFrom(const UnitKnowledgeIdList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Common.UnitKnowledgeId elem = 1;
  inline int elem_size() const;
  inline void clear_elem();
  static const int kElemFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::Common::UnitKnowledgeId >& elem() const;
  inline ::google::protobuf::RepeatedPtrField< ::Common::UnitKnowledgeId >* mutable_elem();
  inline const ::Common::UnitKnowledgeId& elem(int index) const;
  inline ::Common::UnitKnowledgeId* mutable_elem(int index);
  inline ::Common::UnitKnowledgeId* add_elem();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::Common::UnitKnowledgeId > elem_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static UnitKnowledgeIdList* default_instance_;
};
// -------------------------------------------------------------------

class UrbanObjectId : public ::google::protobuf::Message {
 public:
  UrbanObjectId();
  virtual ~UrbanObjectId();
  
  UrbanObjectId(const UrbanObjectId& from);
  
  inline UrbanObjectId& operator=(const UrbanObjectId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UrbanObjectId& default_instance();
  void Swap(UrbanObjectId* other);
  
  // implements Message ----------------------------------------------
  
  UrbanObjectId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UrbanObjectId& from);
  void MergeFrom(const UrbanObjectId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static UrbanObjectId* default_instance_;
};
// -------------------------------------------------------------------

class UrbanObjectKnowledgeId : public ::google::protobuf::Message {
 public:
  UrbanObjectKnowledgeId();
  virtual ~UrbanObjectKnowledgeId();
  
  UrbanObjectKnowledgeId(const UrbanObjectKnowledgeId& from);
  
  inline UrbanObjectKnowledgeId& operator=(const UrbanObjectKnowledgeId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UrbanObjectKnowledgeId& default_instance();
  void Swap(UrbanObjectKnowledgeId* other);
  
  // implements Message ----------------------------------------------
  
  UrbanObjectKnowledgeId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UrbanObjectKnowledgeId& from);
  void MergeFrom(const UrbanObjectKnowledgeId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static UrbanObjectKnowledgeId* default_instance_;
};
// -------------------------------------------------------------------

class ClientObjectId : public ::google::protobuf::Message {
 public:
  ClientObjectId();
  virtual ~ClientObjectId();
  
  ClientObjectId(const ClientObjectId& from);
  
  inline ClientObjectId& operator=(const ClientObjectId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientObjectId& default_instance();
  void Swap(ClientObjectId* other);
  
  // implements Message ----------------------------------------------
  
  ClientObjectId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientObjectId& from);
  void MergeFrom(const ClientObjectId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ClientObjectId* default_instance_;
};
// -------------------------------------------------------------------

class Tasker : public ::google::protobuf::Message {
 public:
  Tasker();
  virtual ~Tasker();
  
  Tasker(const Tasker& from);
  
  inline Tasker& operator=(const Tasker& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Tasker& default_instance();
  void Swap(Tasker* other);
  
  // implements Message ----------------------------------------------
  
  Tasker* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tasker& from);
  void MergeFrom(const Tasker& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .Common.AutomatId automat = 1;
  inline bool has_automat() const;
  inline void clear_automat();
  static const int kAutomatFieldNumber = 1;
  inline const ::Common::AutomatId& automat() const;
  inline ::Common::AutomatId* mutable_automat();
  
  // optional .Common.FormationId formation = 2;
  inline bool has_formation() const;
  inline void clear_formation();
  static const int kFormationFieldNumber = 2;
  inline const ::Common::FormationId& formation() const;
  inline ::Common::FormationId* mutable_formation();
  
  // optional .Common.CrowdId crowd = 3;
  inline bool has_crowd() const;
  inline void clear_crowd();
  static const int kCrowdFieldNumber = 3;
  inline const ::Common::CrowdId& crowd() const;
  inline ::Common::CrowdId* mutable_crowd();
  
  // optional .Common.UnitId unit = 4;
  inline bool has_unit() const;
  inline void clear_unit();
  static const int kUnitFieldNumber = 4;
  inline const ::Common::UnitId& unit() const;
  inline ::Common::UnitId* mutable_unit();
  
  // optional .Common.PartyId party = 5;
  inline bool has_party() const;
  inline void clear_party();
  static const int kPartyFieldNumber = 5;
  inline const ::Common::PartyId& party() const;
  inline ::Common::PartyId* mutable_party();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::AutomatId* automat_;
  ::Common::FormationId* formation_;
  ::Common::CrowdId* crowd_;
  ::Common::UnitId* unit_;
  ::Common::PartyId* party_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Tasker* default_instance_;
};
// -------------------------------------------------------------------

class ParentEntity : public ::google::protobuf::Message {
 public:
  ParentEntity();
  virtual ~ParentEntity();
  
  ParentEntity(const ParentEntity& from);
  
  inline ParentEntity& operator=(const ParentEntity& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParentEntity& default_instance();
  void Swap(ParentEntity* other);
  
  // implements Message ----------------------------------------------
  
  ParentEntity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ParentEntity& from);
  void MergeFrom(const ParentEntity& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .Common.AutomatId automat = 1;
  inline bool has_automat() const;
  inline void clear_automat();
  static const int kAutomatFieldNumber = 1;
  inline const ::Common::AutomatId& automat() const;
  inline ::Common::AutomatId* mutable_automat();
  
  // optional .Common.FormationId formation = 2;
  inline bool has_formation() const;
  inline void clear_formation();
  static const int kFormationFieldNumber = 2;
  inline const ::Common::FormationId& formation() const;
  inline ::Common::FormationId* mutable_formation();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::AutomatId* automat_;
  ::Common::FormationId* formation_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ParentEntity* default_instance_;
};
// -------------------------------------------------------------------

class DrawingId : public ::google::protobuf::Message {
 public:
  DrawingId();
  virtual ~DrawingId();
  
  DrawingId(const DrawingId& from);
  
  inline DrawingId& operator=(const DrawingId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DrawingId& default_instance();
  void Swap(DrawingId* other);
  
  // implements Message ----------------------------------------------
  
  DrawingId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DrawingId& from);
  void MergeFrom(const DrawingId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DrawingId* default_instance_;
};
// -------------------------------------------------------------------

class IntelligenceId : public ::google::protobuf::Message {
 public:
  IntelligenceId();
  virtual ~IntelligenceId();
  
  IntelligenceId(const IntelligenceId& from);
  
  inline IntelligenceId& operator=(const IntelligenceId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const IntelligenceId& default_instance();
  void Swap(IntelligenceId* other);
  
  // implements Message ----------------------------------------------
  
  IntelligenceId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IntelligenceId& from);
  void MergeFrom(const IntelligenceId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static IntelligenceId* default_instance_;
};
// -------------------------------------------------------------------

class TacticalLineId : public ::google::protobuf::Message {
 public:
  TacticalLineId();
  virtual ~TacticalLineId();
  
  TacticalLineId(const TacticalLineId& from);
  
  inline TacticalLineId& operator=(const TacticalLineId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const TacticalLineId& default_instance();
  void Swap(TacticalLineId* other);
  
  // implements Message ----------------------------------------------
  
  TacticalLineId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TacticalLineId& from);
  void MergeFrom(const TacticalLineId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static TacticalLineId* default_instance_;
};
// -------------------------------------------------------------------

class MarkerId : public ::google::protobuf::Message {
 public:
  MarkerId();
  virtual ~MarkerId();
  
  MarkerId(const MarkerId& from);
  
  inline MarkerId& operator=(const MarkerId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MarkerId& default_instance();
  void Swap(MarkerId* other);
  
  // implements Message ----------------------------------------------
  
  MarkerId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarkerId& from);
  void MergeFrom(const MarkerId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MarkerId* default_instance_;
};
// -------------------------------------------------------------------

class FireId : public ::google::protobuf::Message {
 public:
  FireId();
  virtual ~FireId();
  
  FireId(const FireId& from);
  
  inline FireId& operator=(const FireId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FireId& default_instance();
  void Swap(FireId* other);
  
  // implements Message ----------------------------------------------
  
  FireId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FireId& from);
  void MergeFrom(const FireId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static FireId* default_instance_;
};
// -------------------------------------------------------------------

class FireEffectId : public ::google::protobuf::Message {
 public:
  FireEffectId();
  virtual ~FireEffectId();
  
  FireEffectId(const FireEffectId& from);
  
  inline FireEffectId& operator=(const FireEffectId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FireEffectId& default_instance();
  void Swap(FireEffectId* other);
  
  // implements Message ----------------------------------------------
  
  FireEffectId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FireEffectId& from);
  void MergeFrom(const FireEffectId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static FireEffectId* default_instance_;
};
// -------------------------------------------------------------------

class ReportId : public ::google::protobuf::Message {
 public:
  ReportId();
  virtual ~ReportId();
  
  ReportId(const ReportId& from);
  
  inline ReportId& operator=(const ReportId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportId& default_instance();
  void Swap(ReportId* other);
  
  // implements Message ----------------------------------------------
  
  ReportId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReportId& from);
  void MergeFrom(const ReportId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ReportId* default_instance_;
};
// -------------------------------------------------------------------

class WeatherId : public ::google::protobuf::Message {
 public:
  WeatherId();
  virtual ~WeatherId();
  
  WeatherId(const WeatherId& from);
  
  inline WeatherId& operator=(const WeatherId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const WeatherId& default_instance();
  void Swap(WeatherId* other);
  
  // implements Message ----------------------------------------------
  
  WeatherId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WeatherId& from);
  void MergeFrom(const WeatherId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static WeatherId* default_instance_;
};
// -------------------------------------------------------------------

class MaintenanceRequestId : public ::google::protobuf::Message {
 public:
  MaintenanceRequestId();
  virtual ~MaintenanceRequestId();
  
  MaintenanceRequestId(const MaintenanceRequestId& from);
  
  inline MaintenanceRequestId& operator=(const MaintenanceRequestId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MaintenanceRequestId& default_instance();
  void Swap(MaintenanceRequestId* other);
  
  // implements Message ----------------------------------------------
  
  MaintenanceRequestId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MaintenanceRequestId& from);
  void MergeFrom(const MaintenanceRequestId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MaintenanceRequestId* default_instance_;
};
// -------------------------------------------------------------------

class MedicalRequestId : public ::google::protobuf::Message {
 public:
  MedicalRequestId();
  virtual ~MedicalRequestId();
  
  MedicalRequestId(const MedicalRequestId& from);
  
  inline MedicalRequestId& operator=(const MedicalRequestId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MedicalRequestId& default_instance();
  void Swap(MedicalRequestId* other);
  
  // implements Message ----------------------------------------------
  
  MedicalRequestId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MedicalRequestId& from);
  void MergeFrom(const MedicalRequestId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MedicalRequestId* default_instance_;
};
// -------------------------------------------------------------------

class SupplyRequestId : public ::google::protobuf::Message {
 public:
  SupplyRequestId();
  virtual ~SupplyRequestId();
  
  SupplyRequestId(const SupplyRequestId& from);
  
  inline SupplyRequestId& operator=(const SupplyRequestId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SupplyRequestId& default_instance();
  void Swap(SupplyRequestId* other);
  
  // implements Message ----------------------------------------------
  
  SupplyRequestId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SupplyRequestId& from);
  void MergeFrom(const SupplyRequestId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SupplyRequestId* default_instance_;
};
// -------------------------------------------------------------------

class AutomatType : public ::google::protobuf::Message {
 public:
  AutomatType();
  virtual ~AutomatType();
  
  AutomatType(const AutomatType& from);
  
  inline AutomatType& operator=(const AutomatType& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AutomatType& default_instance();
  void Swap(AutomatType* other);
  
  // implements Message ----------------------------------------------
  
  AutomatType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AutomatType& from);
  void MergeFrom(const AutomatType& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static AutomatType* default_instance_;
};
// -------------------------------------------------------------------

class BreakdownType : public ::google::protobuf::Message {
 public:
  BreakdownType();
  virtual ~BreakdownType();
  
  BreakdownType(const BreakdownType& from);
  
  inline BreakdownType& operator=(const BreakdownType& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BreakdownType& default_instance();
  void Swap(BreakdownType* other);
  
  // implements Message ----------------------------------------------
  
  BreakdownType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BreakdownType& from);
  void MergeFrom(const BreakdownType& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static BreakdownType* default_instance_;
};
// -------------------------------------------------------------------

class EquipmentType : public ::google::protobuf::Message {
 public:
  EquipmentType();
  virtual ~EquipmentType();
  
  EquipmentType(const EquipmentType& from);
  
  inline EquipmentType& operator=(const EquipmentType& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipmentType& default_instance();
  void Swap(EquipmentType* other);
  
  // implements Message ----------------------------------------------
  
  EquipmentType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipmentType& from);
  void MergeFrom(const EquipmentType& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static EquipmentType* default_instance_;
};
// -------------------------------------------------------------------

class FragOrderType : public ::google::protobuf::Message {
 public:
  FragOrderType();
  virtual ~FragOrderType();
  
  FragOrderType(const FragOrderType& from);
  
  inline FragOrderType& operator=(const FragOrderType& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FragOrderType& default_instance();
  void Swap(FragOrderType* other);
  
  // implements Message ----------------------------------------------
  
  FragOrderType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FragOrderType& from);
  void MergeFrom(const FragOrderType& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static FragOrderType* default_instance_;
};
// -------------------------------------------------------------------

class MissionType : public ::google::protobuf::Message {
 public:
  MissionType();
  virtual ~MissionType();
  
  MissionType(const MissionType& from);
  
  inline MissionType& operator=(const MissionType& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MissionType& default_instance();
  void Swap(MissionType* other);
  
  // implements Message ----------------------------------------------
  
  MissionType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MissionType& from);
  void MergeFrom(const MissionType& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MissionType* default_instance_;
};
// -------------------------------------------------------------------

class NBCAgentType : public ::google::protobuf::Message {
 public:
  NBCAgentType();
  virtual ~NBCAgentType();
  
  NBCAgentType(const NBCAgentType& from);
  
  inline NBCAgentType& operator=(const NBCAgentType& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const NBCAgentType& default_instance();
  void Swap(NBCAgentType* other);
  
  // implements Message ----------------------------------------------
  
  NBCAgentType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NBCAgentType& from);
  void MergeFrom(const NBCAgentType& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static NBCAgentType* default_instance_;
};
// -------------------------------------------------------------------

class ObjectType : public ::google::protobuf::Message {
 public:
  ObjectType();
  virtual ~ObjectType();
  
  ObjectType(const ObjectType& from);
  
  inline ObjectType& operator=(const ObjectType& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectType& default_instance();
  void Swap(ObjectType* other);
  
  // implements Message ----------------------------------------------
  
  ObjectType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectType& from);
  void MergeFrom(const ObjectType& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* id_;
  static const ::std::string _default_id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ObjectType* default_instance_;
};
// -------------------------------------------------------------------

class CrowdType : public ::google::protobuf::Message {
 public:
  CrowdType();
  virtual ~CrowdType();
  
  CrowdType(const CrowdType& from);
  
  inline CrowdType& operator=(const CrowdType& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CrowdType& default_instance();
  void Swap(CrowdType* other);
  
  // implements Message ----------------------------------------------
  
  CrowdType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CrowdType& from);
  void MergeFrom(const CrowdType& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CrowdType* default_instance_;
};
// -------------------------------------------------------------------

class ReportType : public ::google::protobuf::Message {
 public:
  ReportType();
  virtual ~ReportType();
  
  ReportType(const ReportType& from);
  
  inline ReportType& operator=(const ReportType& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportType& default_instance();
  void Swap(ReportType* other);
  
  // implements Message ----------------------------------------------
  
  ReportType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReportType& from);
  void MergeFrom(const ReportType& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ReportType* default_instance_;
};
// -------------------------------------------------------------------

class ResourceType : public ::google::protobuf::Message {
 public:
  ResourceType();
  virtual ~ResourceType();
  
  ResourceType(const ResourceType& from);
  
  inline ResourceType& operator=(const ResourceType& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceType& default_instance();
  void Swap(ResourceType* other);
  
  // implements Message ----------------------------------------------
  
  ResourceType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResourceType& from);
  void MergeFrom(const ResourceType& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ResourceType* default_instance_;
};
// -------------------------------------------------------------------

class UnitType : public ::google::protobuf::Message {
 public:
  UnitType();
  virtual ~UnitType();
  
  UnitType(const UnitType& from);
  
  inline UnitType& operator=(const UnitType& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnitType& default_instance();
  void Swap(UnitType* other);
  
  // implements Message ----------------------------------------------
  
  UnitType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnitType& from);
  void MergeFrom(const UnitType& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static UnitType* default_instance_;
};
// -------------------------------------------------------------------

class ResourceNetworkType : public ::google::protobuf::Message {
 public:
  ResourceNetworkType();
  virtual ~ResourceNetworkType();
  
  ResourceNetworkType(const ResourceNetworkType& from);
  
  inline ResourceNetworkType& operator=(const ResourceNetworkType& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceNetworkType& default_instance();
  void Swap(ResourceNetworkType* other);
  
  // implements Message ----------------------------------------------
  
  ResourceNetworkType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResourceNetworkType& from);
  void MergeFrom(const ResourceNetworkType& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* name_;
  static const ::std::string _default_name_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ResourceNetworkType* default_instance_;
};
// -------------------------------------------------------------------

class MsgHeading : public ::google::protobuf::Message {
 public:
  MsgHeading();
  virtual ~MsgHeading();
  
  MsgHeading(const MsgHeading& from);
  
  inline MsgHeading& operator=(const MsgHeading& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgHeading& default_instance();
  void Swap(MsgHeading* other);
  
  // implements Message ----------------------------------------------
  
  MsgHeading* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgHeading& from);
  void MergeFrom(const MsgHeading& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 heading = 1;
  inline bool has_heading() const;
  inline void clear_heading();
  static const int kHeadingFieldNumber = 1;
  inline ::google::protobuf::int32 heading() const;
  inline void set_heading(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 heading_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgHeading* default_instance_;
};
// -------------------------------------------------------------------

class MsgDateTime : public ::google::protobuf::Message {
 public:
  MsgDateTime();
  virtual ~MsgDateTime();
  
  MsgDateTime(const MsgDateTime& from);
  
  inline MsgDateTime& operator=(const MsgDateTime& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDateTime& default_instance();
  void Swap(MsgDateTime* other);
  
  // implements Message ----------------------------------------------
  
  MsgDateTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgDateTime& from);
  void MergeFrom(const MsgDateTime& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const char* value, size_t size);
  inline ::std::string* mutable_data();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* data_;
  static const ::std::string _default_data_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgDateTime* default_instance_;
};
// -------------------------------------------------------------------

class MsgDotationStock : public ::google::protobuf::Message {
 public:
  MsgDotationStock();
  virtual ~MsgDotationStock();
  
  MsgDotationStock(const MsgDotationStock& from);
  
  inline MsgDotationStock& operator=(const MsgDotationStock& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDotationStock& default_instance();
  void Swap(MsgDotationStock* other);
  
  // implements Message ----------------------------------------------
  
  MsgDotationStock* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgDotationStock& from);
  void MergeFrom(const MsgDotationStock& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.ResourceType ressource_id = 1;
  inline bool has_ressource_id() const;
  inline void clear_ressource_id();
  static const int kRessourceIdFieldNumber = 1;
  inline const ::Common::ResourceType& ressource_id() const;
  inline ::Common::ResourceType* mutable_ressource_id();
  
  // required int32 quantite_disponible = 2;
  inline bool has_quantite_disponible() const;
  inline void clear_quantite_disponible();
  static const int kQuantiteDisponibleFieldNumber = 2;
  inline ::google::protobuf::int32 quantite_disponible() const;
  inline void set_quantite_disponible(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::ResourceType* ressource_id_;
  ::google::protobuf::int32 quantite_disponible_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgDotationStock* default_instance_;
};
// -------------------------------------------------------------------

class SeqOfDotationStock : public ::google::protobuf::Message {
 public:
  SeqOfDotationStock();
  virtual ~SeqOfDotationStock();
  
  SeqOfDotationStock(const SeqOfDotationStock& from);
  
  inline SeqOfDotationStock& operator=(const SeqOfDotationStock& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SeqOfDotationStock& default_instance();
  void Swap(SeqOfDotationStock* other);
  
  // implements Message ----------------------------------------------
  
  SeqOfDotationStock* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SeqOfDotationStock& from);
  void MergeFrom(const SeqOfDotationStock& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Common.MsgDotationStock elem = 1;
  inline int elem_size() const;
  inline void clear_elem();
  static const int kElemFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgDotationStock >& elem() const;
  inline ::google::protobuf::RepeatedPtrField< ::Common::MsgDotationStock >* mutable_elem();
  inline const ::Common::MsgDotationStock& elem(int index) const;
  inline ::Common::MsgDotationStock* mutable_elem(int index);
  inline ::Common::MsgDotationStock* add_elem();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::Common::MsgDotationStock > elem_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SeqOfDotationStock* default_instance_;
};
// -------------------------------------------------------------------

class MsgDotationQuota : public ::google::protobuf::Message {
 public:
  MsgDotationQuota();
  virtual ~MsgDotationQuota();
  
  MsgDotationQuota(const MsgDotationQuota& from);
  
  inline MsgDotationQuota& operator=(const MsgDotationQuota& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDotationQuota& default_instance();
  void Swap(MsgDotationQuota* other);
  
  // implements Message ----------------------------------------------
  
  MsgDotationQuota* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgDotationQuota& from);
  void MergeFrom(const MsgDotationQuota& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.ResourceType ressource_id = 1;
  inline bool has_ressource_id() const;
  inline void clear_ressource_id();
  static const int kRessourceIdFieldNumber = 1;
  inline const ::Common::ResourceType& ressource_id() const;
  inline ::Common::ResourceType* mutable_ressource_id();
  
  // required int32 quota_disponible = 2;
  inline bool has_quota_disponible() const;
  inline void clear_quota_disponible();
  static const int kQuotaDisponibleFieldNumber = 2;
  inline ::google::protobuf::int32 quota_disponible() const;
  inline void set_quota_disponible(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::ResourceType* ressource_id_;
  ::google::protobuf::int32 quota_disponible_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgDotationQuota* default_instance_;
};
// -------------------------------------------------------------------

class SeqOfDotationQuota : public ::google::protobuf::Message {
 public:
  SeqOfDotationQuota();
  virtual ~SeqOfDotationQuota();
  
  SeqOfDotationQuota(const SeqOfDotationQuota& from);
  
  inline SeqOfDotationQuota& operator=(const SeqOfDotationQuota& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SeqOfDotationQuota& default_instance();
  void Swap(SeqOfDotationQuota* other);
  
  // implements Message ----------------------------------------------
  
  SeqOfDotationQuota* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SeqOfDotationQuota& from);
  void MergeFrom(const SeqOfDotationQuota& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Common.MsgDotationQuota elem = 1;
  inline int elem_size() const;
  inline void clear_elem();
  static const int kElemFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgDotationQuota >& elem() const;
  inline ::google::protobuf::RepeatedPtrField< ::Common::MsgDotationQuota >* mutable_elem();
  inline const ::Common::MsgDotationQuota& elem(int index) const;
  inline ::Common::MsgDotationQuota* mutable_elem(int index);
  inline ::Common::MsgDotationQuota* add_elem();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::Common::MsgDotationQuota > elem_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SeqOfDotationQuota* default_instance_;
};
// -------------------------------------------------------------------

class MsgAutomatChangeKnowledgeGroup : public ::google::protobuf::Message {
 public:
  MsgAutomatChangeKnowledgeGroup();
  virtual ~MsgAutomatChangeKnowledgeGroup();
  
  MsgAutomatChangeKnowledgeGroup(const MsgAutomatChangeKnowledgeGroup& from);
  
  inline MsgAutomatChangeKnowledgeGroup& operator=(const MsgAutomatChangeKnowledgeGroup& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgAutomatChangeKnowledgeGroup& default_instance();
  void Swap(MsgAutomatChangeKnowledgeGroup* other);
  
  // implements Message ----------------------------------------------
  
  MsgAutomatChangeKnowledgeGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgAutomatChangeKnowledgeGroup& from);
  void MergeFrom(const MsgAutomatChangeKnowledgeGroup& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.AutomatId automat = 1;
  inline bool has_automat() const;
  inline void clear_automat();
  static const int kAutomatFieldNumber = 1;
  inline const ::Common::AutomatId& automat() const;
  inline ::Common::AutomatId* mutable_automat();
  
  // required .Common.PartyId party = 2;
  inline bool has_party() const;
  inline void clear_party();
  static const int kPartyFieldNumber = 2;
  inline const ::Common::PartyId& party() const;
  inline ::Common::PartyId* mutable_party();
  
  // required .Common.KnowledgeGroupId knowledge_group = 3;
  inline bool has_knowledge_group() const;
  inline void clear_knowledge_group();
  static const int kKnowledgeGroupFieldNumber = 3;
  inline const ::Common::KnowledgeGroupId& knowledge_group() const;
  inline ::Common::KnowledgeGroupId* mutable_knowledge_group();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::AutomatId* automat_;
  ::Common::PartyId* party_;
  ::Common::KnowledgeGroupId* knowledge_group_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgAutomatChangeKnowledgeGroup* default_instance_;
};
// -------------------------------------------------------------------

class MsgChangeLogisticLinks : public ::google::protobuf::Message {
 public:
  MsgChangeLogisticLinks();
  virtual ~MsgChangeLogisticLinks();
  
  MsgChangeLogisticLinks(const MsgChangeLogisticLinks& from);
  
  inline MsgChangeLogisticLinks& operator=(const MsgChangeLogisticLinks& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgChangeLogisticLinks& default_instance();
  void Swap(MsgChangeLogisticLinks* other);
  
  // implements Message ----------------------------------------------
  
  MsgChangeLogisticLinks* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgChangeLogisticLinks& from);
  void MergeFrom(const MsgChangeLogisticLinks& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.ParentEntity requester = 1;
  inline bool has_requester() const;
  inline void clear_requester();
  static const int kRequesterFieldNumber = 1;
  inline const ::Common::ParentEntity& requester() const;
  inline ::Common::ParentEntity* mutable_requester();
  
  // optional .Common.AutomatId tc2 = 2;
  inline bool has_tc2() const;
  inline void clear_tc2();
  static const int kTc2FieldNumber = 2;
  inline const ::Common::AutomatId& tc2() const;
  inline ::Common::AutomatId* mutable_tc2();
  
  // optional .Common.ParentEntity logistic_base = 3;
  inline bool has_logistic_base() const;
  inline void clear_logistic_base();
  static const int kLogisticBaseFieldNumber = 3;
  inline const ::Common::ParentEntity& logistic_base() const;
  inline ::Common::ParentEntity* mutable_logistic_base();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::ParentEntity* requester_;
  ::Common::AutomatId* tc2_;
  ::Common::ParentEntity* logistic_base_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgChangeLogisticLinks* default_instance_;
};
// -------------------------------------------------------------------

class MsgAutomatChangeSuperior_oid_superior : public ::google::protobuf::Message {
 public:
  MsgAutomatChangeSuperior_oid_superior();
  virtual ~MsgAutomatChangeSuperior_oid_superior();
  
  MsgAutomatChangeSuperior_oid_superior(const MsgAutomatChangeSuperior_oid_superior& from);
  
  inline MsgAutomatChangeSuperior_oid_superior& operator=(const MsgAutomatChangeSuperior_oid_superior& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgAutomatChangeSuperior_oid_superior& default_instance();
  void Swap(MsgAutomatChangeSuperior_oid_superior* other);
  
  // implements Message ----------------------------------------------
  
  MsgAutomatChangeSuperior_oid_superior* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgAutomatChangeSuperior_oid_superior& from);
  void MergeFrom(const MsgAutomatChangeSuperior_oid_superior& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .Common.FormationId formation = 1;
  inline bool has_formation() const;
  inline void clear_formation();
  static const int kFormationFieldNumber = 1;
  inline const ::Common::FormationId& formation() const;
  inline ::Common::FormationId* mutable_formation();
  
  // optional .Common.AutomatId automat = 2;
  inline bool has_automat() const;
  inline void clear_automat();
  static const int kAutomatFieldNumber = 2;
  inline const ::Common::AutomatId& automat() const;
  inline ::Common::AutomatId* mutable_automat();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::FormationId* formation_;
  ::Common::AutomatId* automat_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgAutomatChangeSuperior_oid_superior* default_instance_;
};
// -------------------------------------------------------------------

class MsgAutomatChangeSuperior : public ::google::protobuf::Message {
 public:
  MsgAutomatChangeSuperior();
  virtual ~MsgAutomatChangeSuperior();
  
  MsgAutomatChangeSuperior(const MsgAutomatChangeSuperior& from);
  
  inline MsgAutomatChangeSuperior& operator=(const MsgAutomatChangeSuperior& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgAutomatChangeSuperior& default_instance();
  void Swap(MsgAutomatChangeSuperior* other);
  
  // implements Message ----------------------------------------------
  
  MsgAutomatChangeSuperior* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgAutomatChangeSuperior& from);
  void MergeFrom(const MsgAutomatChangeSuperior& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.AutomatId automat = 1;
  inline bool has_automat() const;
  inline void clear_automat();
  static const int kAutomatFieldNumber = 1;
  inline const ::Common::AutomatId& automat() const;
  inline ::Common::AutomatId* mutable_automat();
  
  // required .Common.MsgAutomatChangeSuperior_oid_superior superior = 2;
  inline bool has_superior() const;
  inline void clear_superior();
  static const int kSuperiorFieldNumber = 2;
  inline const ::Common::MsgAutomatChangeSuperior_oid_superior& superior() const;
  inline ::Common::MsgAutomatChangeSuperior_oid_superior* mutable_superior();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::AutomatId* automat_;
  ::Common::MsgAutomatChangeSuperior_oid_superior* superior_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgAutomatChangeSuperior* default_instance_;
};
// -------------------------------------------------------------------

class MsgUnitChangeSuperior : public ::google::protobuf::Message {
 public:
  MsgUnitChangeSuperior();
  virtual ~MsgUnitChangeSuperior();
  
  MsgUnitChangeSuperior(const MsgUnitChangeSuperior& from);
  
  inline MsgUnitChangeSuperior& operator=(const MsgUnitChangeSuperior& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgUnitChangeSuperior& default_instance();
  void Swap(MsgUnitChangeSuperior* other);
  
  // implements Message ----------------------------------------------
  
  MsgUnitChangeSuperior* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgUnitChangeSuperior& from);
  void MergeFrom(const MsgUnitChangeSuperior& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.UnitId unit = 1;
  inline bool has_unit() const;
  inline void clear_unit();
  static const int kUnitFieldNumber = 1;
  inline const ::Common::UnitId& unit() const;
  inline ::Common::UnitId* mutable_unit();
  
  // required .Common.AutomatId parent = 2;
  inline bool has_parent() const;
  inline void clear_parent();
  static const int kParentFieldNumber = 2;
  inline const ::Common::AutomatId& parent() const;
  inline ::Common::AutomatId* mutable_parent();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::UnitId* unit_;
  ::Common::AutomatId* parent_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgUnitChangeSuperior* default_instance_;
};
// -------------------------------------------------------------------

class MsgControlStop : public ::google::protobuf::Message {
 public:
  MsgControlStop();
  virtual ~MsgControlStop();
  
  MsgControlStop(const MsgControlStop& from);
  
  inline MsgControlStop& operator=(const MsgControlStop& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgControlStop& default_instance();
  void Swap(MsgControlStop* other);
  
  // implements Message ----------------------------------------------
  
  MsgControlStop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgControlStop& from);
  void MergeFrom(const MsgControlStop& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgControlStop* default_instance_;
};
// -------------------------------------------------------------------

class MsgControlPause : public ::google::protobuf::Message {
 public:
  MsgControlPause();
  virtual ~MsgControlPause();
  
  MsgControlPause(const MsgControlPause& from);
  
  inline MsgControlPause& operator=(const MsgControlPause& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgControlPause& default_instance();
  void Swap(MsgControlPause* other);
  
  // implements Message ----------------------------------------------
  
  MsgControlPause* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgControlPause& from);
  void MergeFrom(const MsgControlPause& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgControlPause* default_instance_;
};
// -------------------------------------------------------------------

class MsgControlResume : public ::google::protobuf::Message {
 public:
  MsgControlResume();
  virtual ~MsgControlResume();
  
  MsgControlResume(const MsgControlResume& from);
  
  inline MsgControlResume& operator=(const MsgControlResume& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgControlResume& default_instance();
  void Swap(MsgControlResume* other);
  
  // implements Message ----------------------------------------------
  
  MsgControlResume* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgControlResume& from);
  void MergeFrom(const MsgControlResume& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgControlResume* default_instance_;
};
// -------------------------------------------------------------------

class MsgControlChangeTimeFactor : public ::google::protobuf::Message {
 public:
  MsgControlChangeTimeFactor();
  virtual ~MsgControlChangeTimeFactor();
  
  MsgControlChangeTimeFactor(const MsgControlChangeTimeFactor& from);
  
  inline MsgControlChangeTimeFactor& operator=(const MsgControlChangeTimeFactor& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgControlChangeTimeFactor& default_instance();
  void Swap(MsgControlChangeTimeFactor* other);
  
  // implements Message ----------------------------------------------
  
  MsgControlChangeTimeFactor* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgControlChangeTimeFactor& from);
  void MergeFrom(const MsgControlChangeTimeFactor& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 time_factor = 1;
  inline bool has_time_factor() const;
  inline void clear_time_factor();
  static const int kTimeFactorFieldNumber = 1;
  inline ::google::protobuf::int32 time_factor() const;
  inline void set_time_factor(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 time_factor_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgControlChangeTimeFactor* default_instance_;
};
// -------------------------------------------------------------------

class MsgExercise : public ::google::protobuf::Message {
 public:
  MsgExercise();
  virtual ~MsgExercise();
  
  MsgExercise(const MsgExercise& from);
  
  inline MsgExercise& operator=(const MsgExercise& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgExercise& default_instance();
  void Swap(MsgExercise* other);
  
  // implements Message ----------------------------------------------
  
  MsgExercise* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgExercise& from);
  void MergeFrom(const MsgExercise& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional bool running = 2;
  inline bool has_running() const;
  inline void clear_running();
  static const int kRunningFieldNumber = 2;
  inline bool running() const;
  inline void set_running(bool value);
  
  // optional uint32 port = 3;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 3;
  inline ::google::protobuf::uint32 port() const;
  inline void set_port(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* name_;
  static const ::std::string _default_name_;
  bool running_;
  ::google::protobuf::uint32 port_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgExercise* default_instance_;
};
// -------------------------------------------------------------------

class MsgNetworkAddress : public ::google::protobuf::Message {
 public:
  MsgNetworkAddress();
  virtual ~MsgNetworkAddress();
  
  MsgNetworkAddress(const MsgNetworkAddress& from);
  
  inline MsgNetworkAddress& operator=(const MsgNetworkAddress& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNetworkAddress& default_instance();
  void Swap(MsgNetworkAddress* other);
  
  // implements Message ----------------------------------------------
  
  MsgNetworkAddress* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNetworkAddress& from);
  void MergeFrom(const MsgNetworkAddress& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string ip = 1;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 1;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  
  // required int32 port = 2 [default = 8080];
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 2;
  inline ::google::protobuf::int32 port() const;
  inline void set_port(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* ip_;
  static const ::std::string _default_ip_;
  ::google::protobuf::int32 port_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgNetworkAddress* default_instance_;
};
// -------------------------------------------------------------------

class RgbColor : public ::google::protobuf::Message {
 public:
  RgbColor();
  virtual ~RgbColor();
  
  RgbColor(const RgbColor& from);
  
  inline RgbColor& operator=(const RgbColor& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RgbColor& default_instance();
  void Swap(RgbColor* other);
  
  // implements Message ----------------------------------------------
  
  RgbColor* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RgbColor& from);
  void MergeFrom(const RgbColor& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 red = 1;
  inline bool has_red() const;
  inline void clear_red();
  static const int kRedFieldNumber = 1;
  inline ::google::protobuf::int32 red() const;
  inline void set_red(::google::protobuf::int32 value);
  
  // required int32 green = 2;
  inline bool has_green() const;
  inline void clear_green();
  static const int kGreenFieldNumber = 2;
  inline ::google::protobuf::int32 green() const;
  inline void set_green(::google::protobuf::int32 value);
  
  // required int32 blue = 3;
  inline bool has_blue() const;
  inline void clear_blue();
  static const int kBlueFieldNumber = 3;
  inline ::google::protobuf::int32 blue() const;
  inline void set_blue(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 red_;
  ::google::protobuf::int32 green_;
  ::google::protobuf::int32 blue_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static RgbColor* default_instance_;
};
// -------------------------------------------------------------------

class RgbaColor : public ::google::protobuf::Message {
 public:
  RgbaColor();
  virtual ~RgbaColor();
  
  RgbaColor(const RgbaColor& from);
  
  inline RgbaColor& operator=(const RgbaColor& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RgbaColor& default_instance();
  void Swap(RgbaColor* other);
  
  // implements Message ----------------------------------------------
  
  RgbaColor* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RgbaColor& from);
  void MergeFrom(const RgbaColor& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 red = 1;
  inline bool has_red() const;
  inline void clear_red();
  static const int kRedFieldNumber = 1;
  inline ::google::protobuf::int32 red() const;
  inline void set_red(::google::protobuf::int32 value);
  
  // required int32 green = 2;
  inline bool has_green() const;
  inline void clear_green();
  static const int kGreenFieldNumber = 2;
  inline ::google::protobuf::int32 green() const;
  inline void set_green(::google::protobuf::int32 value);
  
  // required int32 blue = 3;
  inline bool has_blue() const;
  inline void clear_blue();
  static const int kBlueFieldNumber = 3;
  inline ::google::protobuf::int32 blue() const;
  inline void set_blue(::google::protobuf::int32 value);
  
  // required float alpha = 4;
  inline bool has_alpha() const;
  inline void clear_alpha();
  static const int kAlphaFieldNumber = 4;
  inline float alpha() const;
  inline void set_alpha(float value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 red_;
  ::google::protobuf::int32 green_;
  ::google::protobuf::int32 blue_;
  float alpha_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static RgbaColor* default_instance_;
};
// -------------------------------------------------------------------

class MsgCoordLatLong : public ::google::protobuf::Message {
 public:
  MsgCoordLatLong();
  virtual ~MsgCoordLatLong();
  
  MsgCoordLatLong(const MsgCoordLatLong& from);
  
  inline MsgCoordLatLong& operator=(const MsgCoordLatLong& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCoordLatLong& default_instance();
  void Swap(MsgCoordLatLong* other);
  
  // implements Message ----------------------------------------------
  
  MsgCoordLatLong* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCoordLatLong& from);
  void MergeFrom(const MsgCoordLatLong& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required double latitude = 1;
  inline bool has_latitude() const;
  inline void clear_latitude();
  static const int kLatitudeFieldNumber = 1;
  inline double latitude() const;
  inline void set_latitude(double value);
  
  // required double longitude = 2;
  inline bool has_longitude() const;
  inline void clear_longitude();
  static const int kLongitudeFieldNumber = 2;
  inline double longitude() const;
  inline void set_longitude(double value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  double latitude_;
  double longitude_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgCoordLatLong* default_instance_;
};
// -------------------------------------------------------------------

class MsgCoordLatLongList : public ::google::protobuf::Message {
 public:
  MsgCoordLatLongList();
  virtual ~MsgCoordLatLongList();
  
  MsgCoordLatLongList(const MsgCoordLatLongList& from);
  
  inline MsgCoordLatLongList& operator=(const MsgCoordLatLongList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCoordLatLongList& default_instance();
  void Swap(MsgCoordLatLongList* other);
  
  // implements Message ----------------------------------------------
  
  MsgCoordLatLongList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCoordLatLongList& from);
  void MergeFrom(const MsgCoordLatLongList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Common.MsgCoordLatLong elem = 2;
  inline int elem_size() const;
  inline void clear_elem();
  static const int kElemFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgCoordLatLong >& elem() const;
  inline ::google::protobuf::RepeatedPtrField< ::Common::MsgCoordLatLong >* mutable_elem();
  inline const ::Common::MsgCoordLatLong& elem(int index) const;
  inline ::Common::MsgCoordLatLong* mutable_elem(int index);
  inline ::Common::MsgCoordLatLong* add_elem();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::Common::MsgCoordLatLong > elem_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgCoordLatLongList* default_instance_;
};
// -------------------------------------------------------------------

class MsgLocation : public ::google::protobuf::Message {
 public:
  MsgLocation();
  virtual ~MsgLocation();
  
  MsgLocation(const MsgLocation& from);
  
  inline MsgLocation& operator=(const MsgLocation& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLocation& default_instance();
  void Swap(MsgLocation* other);
  
  // implements Message ----------------------------------------------
  
  MsgLocation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLocation& from);
  void MergeFrom(const MsgLocation& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef MsgLocation_Geometry Geometry;
  static const Geometry circle = MsgLocation_Geometry_circle;
  static const Geometry ellipse = MsgLocation_Geometry_ellipse;
  static const Geometry line = MsgLocation_Geometry_line;
  static const Geometry rectangle = MsgLocation_Geometry_rectangle;
  static const Geometry polygon = MsgLocation_Geometry_polygon;
  static const Geometry point = MsgLocation_Geometry_point;
  static const Geometry sector = MsgLocation_Geometry_sector;
  static const Geometry none = MsgLocation_Geometry_none;
  static inline bool Geometry_IsValid(int value) {
    return MsgLocation_Geometry_IsValid(value);
  }
  static const Geometry Geometry_MIN =
    MsgLocation_Geometry_Geometry_MIN;
  static const Geometry Geometry_MAX =
    MsgLocation_Geometry_Geometry_MAX;
  static inline const ::google::protobuf::EnumDescriptor*
  Geometry_descriptor() {
    return MsgLocation_Geometry_descriptor();
  }
  static inline const ::std::string& Geometry_Name(Geometry value) {
    return MsgLocation_Geometry_Name(value);
  }
  static inline bool Geometry_Parse(const ::std::string& name,
      Geometry* value) {
    return MsgLocation_Geometry_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .Common.MsgLocation.Geometry type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Common::MsgLocation_Geometry type() const;
  inline void set_type(::Common::MsgLocation_Geometry value);
  
  // optional .Common.MsgCoordLatLongList coordinates = 2;
  inline bool has_coordinates() const;
  inline void clear_coordinates();
  static const int kCoordinatesFieldNumber = 2;
  inline const ::Common::MsgCoordLatLongList& coordinates() const;
  inline ::Common::MsgCoordLatLongList* mutable_coordinates();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int type_;
  ::Common::MsgCoordLatLongList* coordinates_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLocation* default_instance_;
};
// -------------------------------------------------------------------

class MsgLine : public ::google::protobuf::Message {
 public:
  MsgLine();
  virtual ~MsgLine();
  
  MsgLine(const MsgLine& from);
  
  inline MsgLine& operator=(const MsgLine& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLine& default_instance();
  void Swap(MsgLine* other);
  
  // implements Message ----------------------------------------------
  
  MsgLine* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLine& from);
  void MergeFrom(const MsgLine& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.MsgLocation location = 1;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 1;
  inline const ::Common::MsgLocation& location() const;
  inline ::Common::MsgLocation* mutable_location();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::MsgLocation* location_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLine* default_instance_;
};
// -------------------------------------------------------------------

class MsgLocationList : public ::google::protobuf::Message {
 public:
  MsgLocationList();
  virtual ~MsgLocationList();
  
  MsgLocationList(const MsgLocationList& from);
  
  inline MsgLocationList& operator=(const MsgLocationList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLocationList& default_instance();
  void Swap(MsgLocationList* other);
  
  // implements Message ----------------------------------------------
  
  MsgLocationList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLocationList& from);
  void MergeFrom(const MsgLocationList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Common.MsgLocation elem = 1;
  inline int elem_size() const;
  inline void clear_elem();
  static const int kElemFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgLocation >& elem() const;
  inline ::google::protobuf::RepeatedPtrField< ::Common::MsgLocation >* mutable_elem();
  inline const ::Common::MsgLocation& elem(int index) const;
  inline ::Common::MsgLocation* mutable_elem(int index);
  inline ::Common::MsgLocation* add_elem();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::Common::MsgLocation > elem_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLocationList* default_instance_;
};
// -------------------------------------------------------------------

class MsgPath : public ::google::protobuf::Message {
 public:
  MsgPath();
  virtual ~MsgPath();
  
  MsgPath(const MsgPath& from);
  
  inline MsgPath& operator=(const MsgPath& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPath& default_instance();
  void Swap(MsgPath* other);
  
  // implements Message ----------------------------------------------
  
  MsgPath* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPath& from);
  void MergeFrom(const MsgPath& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.MsgLocation location = 1;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 1;
  inline const ::Common::MsgLocation& location() const;
  inline ::Common::MsgLocation* mutable_location();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::MsgLocation* location_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgPath* default_instance_;
};
// -------------------------------------------------------------------

class MsgPathList : public ::google::protobuf::Message {
 public:
  MsgPathList();
  virtual ~MsgPathList();
  
  MsgPathList(const MsgPathList& from);
  
  inline MsgPathList& operator=(const MsgPathList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPathList& default_instance();
  void Swap(MsgPathList* other);
  
  // implements Message ----------------------------------------------
  
  MsgPathList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPathList& from);
  void MergeFrom(const MsgPathList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Common.MsgPath elem = 1;
  inline int elem_size() const;
  inline void clear_elem();
  static const int kElemFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgPath >& elem() const;
  inline ::google::protobuf::RepeatedPtrField< ::Common::MsgPath >* mutable_elem();
  inline const ::Common::MsgPath& elem(int index) const;
  inline ::Common::MsgPath* mutable_elem(int index);
  inline ::Common::MsgPath* add_elem();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::Common::MsgPath > elem_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgPathList* default_instance_;
};
// -------------------------------------------------------------------

class MsgPoint : public ::google::protobuf::Message {
 public:
  MsgPoint();
  virtual ~MsgPoint();
  
  MsgPoint(const MsgPoint& from);
  
  inline MsgPoint& operator=(const MsgPoint& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPoint& default_instance();
  void Swap(MsgPoint* other);
  
  // implements Message ----------------------------------------------
  
  MsgPoint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPoint& from);
  void MergeFrom(const MsgPoint& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.MsgLocation location = 1;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 1;
  inline const ::Common::MsgLocation& location() const;
  inline ::Common::MsgLocation* mutable_location();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::MsgLocation* location_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgPoint* default_instance_;
};
// -------------------------------------------------------------------

class MsgPointList : public ::google::protobuf::Message {
 public:
  MsgPointList();
  virtual ~MsgPointList();
  
  MsgPointList(const MsgPointList& from);
  
  inline MsgPointList& operator=(const MsgPointList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPointList& default_instance();
  void Swap(MsgPointList* other);
  
  // implements Message ----------------------------------------------
  
  MsgPointList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPointList& from);
  void MergeFrom(const MsgPointList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Common.MsgPoint elem = 1;
  inline int elem_size() const;
  inline void clear_elem();
  static const int kElemFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgPoint >& elem() const;
  inline ::google::protobuf::RepeatedPtrField< ::Common::MsgPoint >* mutable_elem();
  inline const ::Common::MsgPoint& elem(int index) const;
  inline ::Common::MsgPoint* mutable_elem(int index);
  inline ::Common::MsgPoint* add_elem();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::Common::MsgPoint > elem_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgPointList* default_instance_;
};
// -------------------------------------------------------------------

class MsgPolygon : public ::google::protobuf::Message {
 public:
  MsgPolygon();
  virtual ~MsgPolygon();
  
  MsgPolygon(const MsgPolygon& from);
  
  inline MsgPolygon& operator=(const MsgPolygon& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPolygon& default_instance();
  void Swap(MsgPolygon* other);
  
  // implements Message ----------------------------------------------
  
  MsgPolygon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPolygon& from);
  void MergeFrom(const MsgPolygon& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.MsgLocation location = 1;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 1;
  inline const ::Common::MsgLocation& location() const;
  inline ::Common::MsgLocation* mutable_location();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::MsgLocation* location_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgPolygon* default_instance_;
};
// -------------------------------------------------------------------

class MsgPolygonList : public ::google::protobuf::Message {
 public:
  MsgPolygonList();
  virtual ~MsgPolygonList();
  
  MsgPolygonList(const MsgPolygonList& from);
  
  inline MsgPolygonList& operator=(const MsgPolygonList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPolygonList& default_instance();
  void Swap(MsgPolygonList* other);
  
  // implements Message ----------------------------------------------
  
  MsgPolygonList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPolygonList& from);
  void MergeFrom(const MsgPolygonList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Common.MsgPolygon elem = 1;
  inline int elem_size() const;
  inline void clear_elem();
  static const int kElemFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgPolygon >& elem() const;
  inline ::google::protobuf::RepeatedPtrField< ::Common::MsgPolygon >* mutable_elem();
  inline const ::Common::MsgPolygon& elem(int index) const;
  inline ::Common::MsgPolygon* mutable_elem(int index);
  inline ::Common::MsgPolygon* add_elem();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::Common::MsgPolygon > elem_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgPolygonList* default_instance_;
};
// -------------------------------------------------------------------

class MsgLogMedicalPriorities : public ::google::protobuf::Message {
 public:
  MsgLogMedicalPriorities();
  virtual ~MsgLogMedicalPriorities();
  
  MsgLogMedicalPriorities(const MsgLogMedicalPriorities& from);
  
  inline MsgLogMedicalPriorities& operator=(const MsgLogMedicalPriorities& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLogMedicalPriorities& default_instance();
  void Swap(MsgLogMedicalPriorities* other);
  
  // implements Message ----------------------------------------------
  
  MsgLogMedicalPriorities* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLogMedicalPriorities& from);
  void MergeFrom(const MsgLogMedicalPriorities& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Common.EnumHumanWound elem = 1;
  inline int elem_size() const;
  inline void clear_elem();
  static const int kElemFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField<int>& elem() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_elem();
  inline Common::EnumHumanWound elem(int index) const;
  inline void set_elem(int index, Common::EnumHumanWound value);
  inline void add_elem(Common::EnumHumanWound value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField<int> elem_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLogMedicalPriorities* default_instance_;
};
// -------------------------------------------------------------------

class ObstacleType : public ::google::protobuf::Message {
 public:
  ObstacleType();
  virtual ~ObstacleType();
  
  ObstacleType(const ObstacleType& from);
  
  inline ObstacleType& operator=(const ObstacleType& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObstacleType& default_instance();
  void Swap(ObstacleType* other);
  
  // implements Message ----------------------------------------------
  
  ObstacleType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObstacleType& from);
  void MergeFrom(const ObstacleType& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ObstacleType_DemolitionTargetType DemolitionTargetType;
  static const DemolitionTargetType preliminary = ObstacleType_DemolitionTargetType_preliminary;
  static const DemolitionTargetType reserved = ObstacleType_DemolitionTargetType_reserved;
  static inline bool DemolitionTargetType_IsValid(int value) {
    return ObstacleType_DemolitionTargetType_IsValid(value);
  }
  static const DemolitionTargetType DemolitionTargetType_MIN =
    ObstacleType_DemolitionTargetType_DemolitionTargetType_MIN;
  static const DemolitionTargetType DemolitionTargetType_MAX =
    ObstacleType_DemolitionTargetType_DemolitionTargetType_MAX;
  static inline const ::google::protobuf::EnumDescriptor*
  DemolitionTargetType_descriptor() {
    return ObstacleType_DemolitionTargetType_descriptor();
  }
  static inline const ::std::string& DemolitionTargetType_Name(DemolitionTargetType value) {
    return ObstacleType_DemolitionTargetType_Name(value);
  }
  static inline bool DemolitionTargetType_Parse(const ::std::string& name,
      DemolitionTargetType* value) {
    return ObstacleType_DemolitionTargetType_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ObstacleType* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlannedWork : public ::google::protobuf::Message {
 public:
  MsgPlannedWork();
  virtual ~MsgPlannedWork();
  
  MsgPlannedWork(const MsgPlannedWork& from);
  
  inline MsgPlannedWork& operator=(const MsgPlannedWork& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlannedWork& default_instance();
  void Swap(MsgPlannedWork* other);
  
  // implements Message ----------------------------------------------
  
  MsgPlannedWork* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlannedWork& from);
  void MergeFrom(const MsgPlannedWork& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const char* value, size_t size);
  inline ::std::string* mutable_type();
  
  // required .Common.MsgLocation position = 2;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 2;
  inline const ::Common::MsgLocation& position() const;
  inline ::Common::MsgLocation* mutable_position();
  
  // optional .Common.ObstacleType.DemolitionTargetType type_obstacle = 3;
  inline bool has_type_obstacle() const;
  inline void clear_type_obstacle();
  static const int kTypeObstacleFieldNumber = 3;
  inline ::Common::ObstacleType_DemolitionTargetType type_obstacle() const;
  inline void set_type_obstacle(::Common::ObstacleType_DemolitionTargetType value);
  
  // optional float densite = 4;
  inline bool has_densite() const;
  inline void clear_densite();
  static const int kDensiteFieldNumber = 4;
  inline float densite() const;
  inline void set_densite(float value);
  
  // optional .Common.AutomatId tc2 = 5;
  inline bool has_tc2() const;
  inline void clear_tc2();
  static const int kTc2FieldNumber = 5;
  inline const ::Common::AutomatId& tc2() const;
  inline ::Common::AutomatId* mutable_tc2();
  
  // optional int32 activity_time = 6;
  inline bool has_activity_time() const;
  inline void clear_activity_time();
  static const int kActivityTimeFieldNumber = 6;
  inline ::google::protobuf::int32 activity_time() const;
  inline void set_activity_time(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* type_;
  static const ::std::string _default_type_;
  ::Common::MsgLocation* position_;
  int type_obstacle_;
  float densite_;
  ::Common::AutomatId* tc2_;
  ::google::protobuf::int32 activity_time_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgPlannedWork* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlannedWorkList : public ::google::protobuf::Message {
 public:
  MsgPlannedWorkList();
  virtual ~MsgPlannedWorkList();
  
  MsgPlannedWorkList(const MsgPlannedWorkList& from);
  
  inline MsgPlannedWorkList& operator=(const MsgPlannedWorkList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlannedWorkList& default_instance();
  void Swap(MsgPlannedWorkList* other);
  
  // implements Message ----------------------------------------------
  
  MsgPlannedWorkList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlannedWorkList& from);
  void MergeFrom(const MsgPlannedWorkList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Common.MsgPlannedWork elem = 1;
  inline int elem_size() const;
  inline void clear_elem();
  static const int kElemFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgPlannedWork >& elem() const;
  inline ::google::protobuf::RepeatedPtrField< ::Common::MsgPlannedWork >* mutable_elem();
  inline const ::Common::MsgPlannedWork& elem(int index) const;
  inline ::Common::MsgPlannedWork* mutable_elem(int index);
  inline ::Common::MsgPlannedWork* add_elem();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::Common::MsgPlannedWork > elem_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgPlannedWorkList* default_instance_;
};
// -------------------------------------------------------------------

class MsgLogMaintenancePriorities : public ::google::protobuf::Message {
 public:
  MsgLogMaintenancePriorities();
  virtual ~MsgLogMaintenancePriorities();
  
  MsgLogMaintenancePriorities(const MsgLogMaintenancePriorities& from);
  
  inline MsgLogMaintenancePriorities& operator=(const MsgLogMaintenancePriorities& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLogMaintenancePriorities& default_instance();
  void Swap(MsgLogMaintenancePriorities* other);
  
  // implements Message ----------------------------------------------
  
  MsgLogMaintenancePriorities* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLogMaintenancePriorities& from);
  void MergeFrom(const MsgLogMaintenancePriorities& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Common.EquipmentType elem = 1;
  inline int elem_size() const;
  inline void clear_elem();
  static const int kElemFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::Common::EquipmentType >& elem() const;
  inline ::google::protobuf::RepeatedPtrField< ::Common::EquipmentType >* mutable_elem();
  inline const ::Common::EquipmentType& elem(int index) const;
  inline ::Common::EquipmentType* mutable_elem(int index);
  inline ::Common::EquipmentType* add_elem();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::Common::EquipmentType > elem_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLogMaintenancePriorities* default_instance_;
};
// -------------------------------------------------------------------

class MsgMissionObjective : public ::google::protobuf::Message {
 public:
  MsgMissionObjective();
  virtual ~MsgMissionObjective();
  
  MsgMissionObjective(const MsgMissionObjective& from);
  
  inline MsgMissionObjective& operator=(const MsgMissionObjective& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMissionObjective& default_instance();
  void Swap(MsgMissionObjective* other);
  
  // implements Message ----------------------------------------------
  
  MsgMissionObjective* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgMissionObjective& from);
  void MergeFrom(const MsgMissionObjective& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.MsgLocation localisation = 1;
  inline bool has_localisation() const;
  inline void clear_localisation();
  static const int kLocalisationFieldNumber = 1;
  inline const ::Common::MsgLocation& localisation() const;
  inline ::Common::MsgLocation* mutable_localisation();
  
  // required .Common.MsgDateTime horaire = 2;
  inline bool has_horaire() const;
  inline void clear_horaire();
  static const int kHoraireFieldNumber = 2;
  inline const ::Common::MsgDateTime& horaire() const;
  inline ::Common::MsgDateTime* mutable_horaire();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::MsgLocation* localisation_;
  ::Common::MsgDateTime* horaire_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgMissionObjective* default_instance_;
};
// -------------------------------------------------------------------

class MsgMissionObjectiveList : public ::google::protobuf::Message {
 public:
  MsgMissionObjectiveList();
  virtual ~MsgMissionObjectiveList();
  
  MsgMissionObjectiveList(const MsgMissionObjectiveList& from);
  
  inline MsgMissionObjectiveList& operator=(const MsgMissionObjectiveList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMissionObjectiveList& default_instance();
  void Swap(MsgMissionObjectiveList* other);
  
  // implements Message ----------------------------------------------
  
  MsgMissionObjectiveList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgMissionObjectiveList& from);
  void MergeFrom(const MsgMissionObjectiveList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Common.MsgMissionObjective elem = 1;
  inline int elem_size() const;
  inline void clear_elem();
  static const int kElemFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgMissionObjective >& elem() const;
  inline ::google::protobuf::RepeatedPtrField< ::Common::MsgMissionObjective >* mutable_elem();
  inline const ::Common::MsgMissionObjective& elem(int index) const;
  inline ::Common::MsgMissionObjective* mutable_elem(int index);
  inline ::Common::MsgMissionObjective* add_elem();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::Common::MsgMissionObjective > elem_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgMissionObjectiveList* default_instance_;
};
// -------------------------------------------------------------------

class MsgLimaOrder : public ::google::protobuf::Message {
 public:
  MsgLimaOrder();
  virtual ~MsgLimaOrder();
  
  MsgLimaOrder(const MsgLimaOrder& from);
  
  inline MsgLimaOrder& operator=(const MsgLimaOrder& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLimaOrder& default_instance();
  void Swap(MsgLimaOrder* other);
  
  // implements Message ----------------------------------------------
  
  MsgLimaOrder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLimaOrder& from);
  void MergeFrom(const MsgLimaOrder& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef MsgLimaOrder_Function Function;
  static const Function ligne_debouche = MsgLimaOrder_Function_ligne_debouche;
  static const Function ligne_changement_attitude = MsgLimaOrder_Function_ligne_changement_attitude;
  static const Function ligne_coordination = MsgLimaOrder_Function_ligne_coordination;
  static const Function ligne_interdire = MsgLimaOrder_Function_ligne_interdire;
  static const Function ligne_objectif = MsgLimaOrder_Function_ligne_objectif;
  static const Function ligne_coup_arret = MsgLimaOrder_Function_ligne_coup_arret;
  static const Function ligne_recueil = MsgLimaOrder_Function_ligne_recueil;
  static const Function ligne_debut_mission = MsgLimaOrder_Function_ligne_debut_mission;
  static const Function ligne_fin_mission = MsgLimaOrder_Function_ligne_fin_mission;
  static const Function ligne_identification_accueil = MsgLimaOrder_Function_ligne_identification_accueil;
  static inline bool Function_IsValid(int value) {
    return MsgLimaOrder_Function_IsValid(value);
  }
  static const Function Function_MIN =
    MsgLimaOrder_Function_Function_MIN;
  static const Function Function_MAX =
    MsgLimaOrder_Function_Function_MAX;
  static inline const ::google::protobuf::EnumDescriptor*
  Function_descriptor() {
    return MsgLimaOrder_Function_descriptor();
  }
  static inline const ::std::string& Function_Name(Function value) {
    return MsgLimaOrder_Function_Name(value);
  }
  static inline bool Function_Parse(const ::std::string& name,
      Function* value) {
    return MsgLimaOrder_Function_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .Common.MsgLine lima = 1;
  inline bool has_lima() const;
  inline void clear_lima();
  static const int kLimaFieldNumber = 1;
  inline const ::Common::MsgLine& lima() const;
  inline ::Common::MsgLine* mutable_lima();
  
  // required .Common.MsgDateTime horaire = 2;
  inline bool has_horaire() const;
  inline void clear_horaire();
  static const int kHoraireFieldNumber = 2;
  inline const ::Common::MsgDateTime& horaire() const;
  inline ::Common::MsgDateTime* mutable_horaire();
  
  // repeated .Common.MsgLimaOrder.Function fonctions = 3;
  inline int fonctions_size() const;
  inline void clear_fonctions();
  static const int kFonctionsFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField<int>& fonctions() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_fonctions();
  inline ::Common::MsgLimaOrder_Function fonctions(int index) const;
  inline void set_fonctions(int index, ::Common::MsgLimaOrder_Function value);
  inline void add_fonctions(::Common::MsgLimaOrder_Function value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::MsgLine* lima_;
  ::Common::MsgDateTime* horaire_;
  ::google::protobuf::RepeatedField<int> fonctions_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLimaOrder* default_instance_;
};
// -------------------------------------------------------------------

class MsgLimasOrder : public ::google::protobuf::Message {
 public:
  MsgLimasOrder();
  virtual ~MsgLimasOrder();
  
  MsgLimasOrder(const MsgLimasOrder& from);
  
  inline MsgLimasOrder& operator=(const MsgLimasOrder& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLimasOrder& default_instance();
  void Swap(MsgLimasOrder* other);
  
  // implements Message ----------------------------------------------
  
  MsgLimasOrder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLimasOrder& from);
  void MergeFrom(const MsgLimasOrder& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Common.MsgLimaOrder elem = 1;
  inline int elem_size() const;
  inline void clear_elem();
  static const int kElemFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgLimaOrder >& elem() const;
  inline ::google::protobuf::RepeatedPtrField< ::Common::MsgLimaOrder >* mutable_elem();
  inline const ::Common::MsgLimaOrder& elem(int index) const;
  inline ::Common::MsgLimaOrder* mutable_elem(int index);
  inline ::Common::MsgLimaOrder* add_elem();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::Common::MsgLimaOrder > elem_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLimasOrder* default_instance_;
};
// -------------------------------------------------------------------

class MsgIntelligence : public ::google::protobuf::Message {
 public:
  MsgIntelligence();
  virtual ~MsgIntelligence();
  
  MsgIntelligence(const MsgIntelligence& from);
  
  inline MsgIntelligence& operator=(const MsgIntelligence& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgIntelligence& default_instance();
  void Swap(MsgIntelligence* other);
  
  // implements Message ----------------------------------------------
  
  MsgIntelligence* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgIntelligence& from);
  void MergeFrom(const MsgIntelligence& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // required string nature = 2;
  inline bool has_nature() const;
  inline void clear_nature();
  static const int kNatureFieldNumber = 2;
  inline const ::std::string& nature() const;
  inline void set_nature(const ::std::string& value);
  inline void set_nature(const char* value);
  inline void set_nature(const char* value, size_t size);
  inline ::std::string* mutable_nature();
  
  // required .Common.EnumNatureLevel level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline Common::EnumNatureLevel level() const;
  inline void set_level(Common::EnumNatureLevel value);
  
  // required bool embarked = 4;
  inline bool has_embarked() const;
  inline void clear_embarked();
  static const int kEmbarkedFieldNumber = 4;
  inline bool embarked() const;
  inline void set_embarked(bool value);
  
  // required .Common.MsgCoordLatLong location = 5;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 5;
  inline const ::Common::MsgCoordLatLong& location() const;
  inline ::Common::MsgCoordLatLong* mutable_location();
  
  // required .Common.EnumDiplomacy diplomacy = 6;
  inline bool has_diplomacy() const;
  inline void clear_diplomacy();
  static const int kDiplomacyFieldNumber = 6;
  inline Common::EnumDiplomacy diplomacy() const;
  inline void set_diplomacy(Common::EnumDiplomacy value);
  
  // required .Common.FormationId formation = 7;
  inline bool has_formation() const;
  inline void clear_formation();
  static const int kFormationFieldNumber = 7;
  inline const ::Common::FormationId& formation() const;
  inline ::Common::FormationId* mutable_formation();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::std::string* nature_;
  static const ::std::string _default_nature_;
  int level_;
  bool embarked_;
  ::Common::MsgCoordLatLong* location_;
  int diplomacy_;
  ::Common::FormationId* formation_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgIntelligence* default_instance_;
};
// -------------------------------------------------------------------

class MsgIntelligenceList : public ::google::protobuf::Message {
 public:
  MsgIntelligenceList();
  virtual ~MsgIntelligenceList();
  
  MsgIntelligenceList(const MsgIntelligenceList& from);
  
  inline MsgIntelligenceList& operator=(const MsgIntelligenceList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgIntelligenceList& default_instance();
  void Swap(MsgIntelligenceList* other);
  
  // implements Message ----------------------------------------------
  
  MsgIntelligenceList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgIntelligenceList& from);
  void MergeFrom(const MsgIntelligenceList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Common.MsgIntelligence elem = 1;
  inline int elem_size() const;
  inline void clear_elem();
  static const int kElemFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgIntelligence >& elem() const;
  inline ::google::protobuf::RepeatedPtrField< ::Common::MsgIntelligence >* mutable_elem();
  inline const ::Common::MsgIntelligence& elem(int index) const;
  inline ::Common::MsgIntelligence* mutable_elem(int index);
  inline ::Common::MsgIntelligence* add_elem();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::Common::MsgIntelligence > elem_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgIntelligenceList* default_instance_;
};
// -------------------------------------------------------------------

class MsgChangeDiplomacy : public ::google::protobuf::Message {
 public:
  MsgChangeDiplomacy();
  virtual ~MsgChangeDiplomacy();
  
  MsgChangeDiplomacy(const MsgChangeDiplomacy& from);
  
  inline MsgChangeDiplomacy& operator=(const MsgChangeDiplomacy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgChangeDiplomacy& default_instance();
  void Swap(MsgChangeDiplomacy* other);
  
  // implements Message ----------------------------------------------
  
  MsgChangeDiplomacy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgChangeDiplomacy& from);
  void MergeFrom(const MsgChangeDiplomacy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.PartyId party1 = 1;
  inline bool has_party1() const;
  inline void clear_party1();
  static const int kParty1FieldNumber = 1;
  inline const ::Common::PartyId& party1() const;
  inline ::Common::PartyId* mutable_party1();
  
  // required .Common.PartyId party2 = 2;
  inline bool has_party2() const;
  inline void clear_party2();
  static const int kParty2FieldNumber = 2;
  inline const ::Common::PartyId& party2() const;
  inline ::Common::PartyId* mutable_party2();
  
  // required .Common.EnumDiplomacy diplomatie = 3;
  inline bool has_diplomatie() const;
  inline void clear_diplomatie();
  static const int kDiplomatieFieldNumber = 3;
  inline Common::EnumDiplomacy diplomatie() const;
  inline void set_diplomatie(Common::EnumDiplomacy value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::PartyId* party1_;
  ::Common::PartyId* party2_;
  int diplomatie_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgChangeDiplomacy* default_instance_;
};
// -------------------------------------------------------------------

class MsgAtlasNature : public ::google::protobuf::Message {
 public:
  MsgAtlasNature();
  virtual ~MsgAtlasNature();
  
  MsgAtlasNature(const MsgAtlasNature& from);
  
  inline MsgAtlasNature& operator=(const MsgAtlasNature& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgAtlasNature& default_instance();
  void Swap(MsgAtlasNature* other);
  
  // implements Message ----------------------------------------------
  
  MsgAtlasNature* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgAtlasNature& from);
  void MergeFrom(const MsgAtlasNature& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef MsgAtlasNature_AtlasNature AtlasNature;
  static const AtlasNature blinde = MsgAtlasNature_AtlasNature_blinde;
  static const AtlasNature ass = MsgAtlasNature_AtlasNature_ass;
  static const AtlasNature pc = MsgAtlasNature_AtlasNature_pc;
  static const AtlasNature log = MsgAtlasNature_AtlasNature_log;
  static const AtlasNature mortier = MsgAtlasNature_AtlasNature_mortier;
  static const AtlasNature lance_roquette = MsgAtlasNature_AtlasNature_lance_roquette;
  static const AtlasNature vehicule = MsgAtlasNature_AtlasNature_vehicule;
  static const AtlasNature personnel_a_pied = MsgAtlasNature_AtlasNature_personnel_a_pied;
  static const AtlasNature helicoptere = MsgAtlasNature_AtlasNature_helicoptere;
  static const AtlasNature indefini = MsgAtlasNature_AtlasNature_indefini;
  static const AtlasNature asa = MsgAtlasNature_AtlasNature_asa;
  static const AtlasNature none = MsgAtlasNature_AtlasNature_none;
  static inline bool AtlasNature_IsValid(int value) {
    return MsgAtlasNature_AtlasNature_IsValid(value);
  }
  static const AtlasNature AtlasNature_MIN =
    MsgAtlasNature_AtlasNature_AtlasNature_MIN;
  static const AtlasNature AtlasNature_MAX =
    MsgAtlasNature_AtlasNature_AtlasNature_MAX;
  static inline const ::google::protobuf::EnumDescriptor*
  AtlasNature_descriptor() {
    return MsgAtlasNature_AtlasNature_descriptor();
  }
  static inline const ::std::string& AtlasNature_Name(AtlasNature value) {
    return MsgAtlasNature_AtlasNature_Name(value);
  }
  static inline bool AtlasNature_Parse(const ::std::string& name,
      AtlasNature* value) {
    return MsgAtlasNature_AtlasNature_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required int32 nature = 1;
  inline bool has_nature() const;
  inline void clear_nature();
  static const int kNatureFieldNumber = 1;
  inline ::google::protobuf::int32 nature() const;
  inline void set_nature(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 nature_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgAtlasNature* default_instance_;
};
// -------------------------------------------------------------------

class MsgMissionParameter_Value : public ::google::protobuf::Message {
 public:
  MsgMissionParameter_Value();
  virtual ~MsgMissionParameter_Value();
  
  MsgMissionParameter_Value(const MsgMissionParameter_Value& from);
  
  inline MsgMissionParameter_Value& operator=(const MsgMissionParameter_Value& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMissionParameter_Value& default_instance();
  void Swap(MsgMissionParameter_Value* other);
  
  // implements Message ----------------------------------------------
  
  MsgMissionParameter_Value* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgMissionParameter_Value& from);
  void MergeFrom(const MsgMissionParameter_Value& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool aBool = 1;
  inline bool has_abool() const;
  inline void clear_abool();
  static const int kABoolFieldNumber = 1;
  inline bool abool() const;
  inline void set_abool(bool value);
  
  // optional float aReal = 2;
  inline bool has_areal() const;
  inline void clear_areal();
  static const int kARealFieldNumber = 2;
  inline float areal() const;
  inline void set_areal(float value);
  
  // optional int32 enumeration = 3;
  inline bool has_enumeration() const;
  inline void clear_enumeration();
  static const int kEnumerationFieldNumber = 3;
  inline ::google::protobuf::int32 enumeration() const;
  inline void set_enumeration(::google::protobuf::int32 value);
  
  // optional .Common.MsgPath path = 4;
  inline bool has_path() const;
  inline void clear_path();
  static const int kPathFieldNumber = 4;
  inline const ::Common::MsgPath& path() const;
  inline ::Common::MsgPath* mutable_path();
  
  // optional .Common.MsgPathList pathList = 5;
  inline bool has_pathlist() const;
  inline void clear_pathlist();
  static const int kPathListFieldNumber = 5;
  inline const ::Common::MsgPathList& pathlist() const;
  inline ::Common::MsgPathList* mutable_pathlist();
  
  // optional .Common.MsgPoint point = 6;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 6;
  inline const ::Common::MsgPoint& point() const;
  inline ::Common::MsgPoint* mutable_point();
  
  // optional .Common.MsgPointList pointList = 7;
  inline bool has_pointlist() const;
  inline void clear_pointlist();
  static const int kPointListFieldNumber = 7;
  inline const ::Common::MsgPointList& pointlist() const;
  inline ::Common::MsgPointList* mutable_pointlist();
  
  // optional .Common.MsgPolygon polygon = 8;
  inline bool has_polygon() const;
  inline void clear_polygon();
  static const int kPolygonFieldNumber = 8;
  inline const ::Common::MsgPolygon& polygon() const;
  inline ::Common::MsgPolygon* mutable_polygon();
  
  // optional .Common.MsgPolygonList polygonList = 9;
  inline bool has_polygonlist() const;
  inline void clear_polygonlist();
  static const int kPolygonListFieldNumber = 9;
  inline const ::Common::MsgPolygonList& polygonlist() const;
  inline ::Common::MsgPolygonList* mutable_polygonlist();
  
  // optional .Common.MsgLocation location = 10;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 10;
  inline const ::Common::MsgLocation& location() const;
  inline ::Common::MsgLocation* mutable_location();
  
  // optional .Common.MsgLocationList locationList = 11;
  inline bool has_locationlist() const;
  inline void clear_locationlist();
  static const int kLocationListFieldNumber = 11;
  inline const ::Common::MsgLocationList& locationlist() const;
  inline ::Common::MsgLocationList* mutable_locationlist();
  
  // optional .Common.MsgHeading heading = 12;
  inline bool has_heading() const;
  inline void clear_heading();
  static const int kHeadingFieldNumber = 12;
  inline const ::Common::MsgHeading& heading() const;
  inline ::Common::MsgHeading* mutable_heading();
  
  // optional .Common.MsgAtlasNature atlasNature = 13;
  inline bool has_atlasnature() const;
  inline void clear_atlasnature();
  static const int kAtlasNatureFieldNumber = 13;
  inline const ::Common::MsgAtlasNature& atlasnature() const;
  inline ::Common::MsgAtlasNature* mutable_atlasnature();
  
  // optional .Common.UnitId unit = 14;
  inline bool has_unit() const;
  inline void clear_unit();
  static const int kUnitFieldNumber = 14;
  inline const ::Common::UnitId& unit() const;
  inline ::Common::UnitId* mutable_unit();
  
  // optional .Common.UnitIdList unitList = 15;
  inline bool has_unitlist() const;
  inline void clear_unitlist();
  static const int kUnitListFieldNumber = 15;
  inline const ::Common::UnitIdList& unitlist() const;
  inline ::Common::UnitIdList* mutable_unitlist();
  
  // optional .Common.AutomatId automat = 16;
  inline bool has_automat() const;
  inline void clear_automat();
  static const int kAutomatFieldNumber = 16;
  inline const ::Common::AutomatId& automat() const;
  inline ::Common::AutomatId* mutable_automat();
  
  // optional .Common.AutomatIdList automatList = 17;
  inline bool has_automatlist() const;
  inline void clear_automatlist();
  static const int kAutomatListFieldNumber = 17;
  inline const ::Common::AutomatIdList& automatlist() const;
  inline ::Common::AutomatIdList* mutable_automatlist();
  
  // optional .Common.UnitKnowledgeId unitKnowledge = 18;
  inline bool has_unitknowledge() const;
  inline void clear_unitknowledge();
  static const int kUnitKnowledgeFieldNumber = 18;
  inline const ::Common::UnitKnowledgeId& unitknowledge() const;
  inline ::Common::UnitKnowledgeId* mutable_unitknowledge();
  
  // optional .Common.UnitKnowledgeIdList unitKnowledgeList = 19;
  inline bool has_unitknowledgelist() const;
  inline void clear_unitknowledgelist();
  static const int kUnitKnowledgeListFieldNumber = 19;
  inline const ::Common::UnitKnowledgeIdList& unitknowledgelist() const;
  inline ::Common::UnitKnowledgeIdList* mutable_unitknowledgelist();
  
  // optional .Common.ObjectKnowledgeId objectKnowledge = 20;
  inline bool has_objectknowledge() const;
  inline void clear_objectknowledge();
  static const int kObjectKnowledgeFieldNumber = 20;
  inline const ::Common::ObjectKnowledgeId& objectknowledge() const;
  inline ::Common::ObjectKnowledgeId* mutable_objectknowledge();
  
  // optional .Common.ObjectKnowledgeIdList objectKnowledgeList = 21;
  inline bool has_objectknowledgelist() const;
  inline void clear_objectknowledgelist();
  static const int kObjectKnowledgeListFieldNumber = 21;
  inline const ::Common::ObjectKnowledgeIdList& objectknowledgelist() const;
  inline ::Common::ObjectKnowledgeIdList* mutable_objectknowledgelist();
  
  // optional .Common.CrowdKnowledgeId crowdKnowledge = 22;
  inline bool has_crowdknowledge() const;
  inline void clear_crowdknowledge();
  static const int kCrowdKnowledgeFieldNumber = 22;
  inline const ::Common::CrowdKnowledgeId& crowdknowledge() const;
  inline ::Common::CrowdKnowledgeId* mutable_crowdknowledge();
  
  // optional .Common.MsgPlannedWork plannedWork = 23;
  inline bool has_plannedwork() const;
  inline void clear_plannedwork();
  static const int kPlannedWorkFieldNumber = 23;
  inline const ::Common::MsgPlannedWork& plannedwork() const;
  inline ::Common::MsgPlannedWork* mutable_plannedwork();
  
  // optional .Common.MsgPlannedWorkList plannedWorkList = 24;
  inline bool has_plannedworklist() const;
  inline void clear_plannedworklist();
  static const int kPlannedWorkListFieldNumber = 24;
  inline const ::Common::MsgPlannedWorkList& plannedworklist() const;
  inline ::Common::MsgPlannedWorkList* mutable_plannedworklist();
  
  // optional .Common.ResourceType resourceType = 25;
  inline bool has_resourcetype() const;
  inline void clear_resourcetype();
  static const int kResourceTypeFieldNumber = 25;
  inline const ::Common::ResourceType& resourcetype() const;
  inline ::Common::ResourceType* mutable_resourcetype();
  
  // optional .Common.EquipmentType equipmentType = 26;
  inline bool has_equipmenttype() const;
  inline void clear_equipmenttype();
  static const int kEquipmentTypeFieldNumber = 26;
  inline const ::Common::EquipmentType& equipmenttype() const;
  inline ::Common::EquipmentType* mutable_equipmenttype();
  
  // optional .Common.FireId tirIndirect = 27;
  inline bool has_tirindirect() const;
  inline void clear_tirindirect();
  static const int kTirIndirectFieldNumber = 27;
  inline const ::Common::FireId& tirindirect() const;
  inline ::Common::FireId* mutable_tirindirect();
  
  // optional .Common.MsgDateTime dateTime = 28;
  inline bool has_datetime() const;
  inline void clear_datetime();
  static const int kDateTimeFieldNumber = 28;
  inline const ::Common::MsgDateTime& datetime() const;
  inline ::Common::MsgDateTime* mutable_datetime();
  
  // optional .Common.MsgLogMaintenancePriorities logMaintenancePriorities = 29;
  inline bool has_logmaintenancepriorities() const;
  inline void clear_logmaintenancepriorities();
  static const int kLogMaintenancePrioritiesFieldNumber = 29;
  inline const ::Common::MsgLogMaintenancePriorities& logmaintenancepriorities() const;
  inline ::Common::MsgLogMaintenancePriorities* mutable_logmaintenancepriorities();
  
  // optional .Common.MsgLogMedicalPriorities logMedicalPriorities = 30;
  inline bool has_logmedicalpriorities() const;
  inline void clear_logmedicalpriorities();
  static const int kLogMedicalPrioritiesFieldNumber = 30;
  inline const ::Common::MsgLogMedicalPriorities& logmedicalpriorities() const;
  inline ::Common::MsgLogMedicalPriorities* mutable_logmedicalpriorities();
  
  // optional string aCharStr = 31;
  inline bool has_acharstr() const;
  inline void clear_acharstr();
  static const int kACharStrFieldNumber = 31;
  inline const ::std::string& acharstr() const;
  inline void set_acharstr(const ::std::string& value);
  inline void set_acharstr(const char* value);
  inline void set_acharstr(const char* value, size_t size);
  inline ::std::string* mutable_acharstr();
  
  // optional .Common.MsgMissionObjective missionObjective = 32;
  inline bool has_missionobjective() const;
  inline void clear_missionobjective();
  static const int kMissionObjectiveFieldNumber = 32;
  inline const ::Common::MsgMissionObjective& missionobjective() const;
  inline ::Common::MsgMissionObjective* mutable_missionobjective();
  
  // optional .Common.MsgMissionObjectiveList missionObjectiveList = 33;
  inline bool has_missionobjectivelist() const;
  inline void clear_missionobjectivelist();
  static const int kMissionObjectiveListFieldNumber = 33;
  inline const ::Common::MsgMissionObjectiveList& missionobjectivelist() const;
  inline ::Common::MsgMissionObjectiveList* mutable_missionobjectivelist();
  
  // optional .Common.MsgLine line = 34;
  inline bool has_line() const;
  inline void clear_line();
  static const int kLineFieldNumber = 34;
  inline const ::Common::MsgLine& line() const;
  inline ::Common::MsgLine* mutable_line();
  
  // optional .Common.MsgLimasOrder limasOrder = 35;
  inline bool has_limasorder() const;
  inline void clear_limasorder();
  static const int kLimasOrderFieldNumber = 35;
  inline const ::Common::MsgLimasOrder& limasorder() const;
  inline ::Common::MsgLimasOrder* mutable_limasorder();
  
  // optional .Common.MsgIntelligenceList intelligenceList = 36;
  inline bool has_intelligencelist() const;
  inline void clear_intelligencelist();
  static const int kIntelligenceListFieldNumber = 36;
  inline const ::Common::MsgIntelligenceList& intelligencelist() const;
  inline ::Common::MsgIntelligenceList* mutable_intelligencelist();
  
  // optional .Common.UrbanObjectId urbanBlock = 37;
  inline bool has_urbanblock() const;
  inline void clear_urbanblock();
  static const int kUrbanBlockFieldNumber = 37;
  inline const ::Common::UrbanObjectId& urbanblock() const;
  inline ::Common::UrbanObjectId* mutable_urbanblock();
  
  // optional .Common.PartyId party = 38;
  inline bool has_party() const;
  inline void clear_party();
  static const int kPartyFieldNumber = 38;
  inline const ::Common::PartyId& party() const;
  inline ::Common::PartyId* mutable_party();
  
  // optional .Common.FormationId formation = 39;
  inline bool has_formation() const;
  inline void clear_formation();
  static const int kFormationFieldNumber = 39;
  inline const ::Common::FormationId& formation() const;
  inline ::Common::FormationId* mutable_formation();
  
  // optional uint32 identifier = 40;
  inline bool has_identifier() const;
  inline void clear_identifier();
  static const int kIdentifierFieldNumber = 40;
  inline ::google::protobuf::uint32 identifier() const;
  inline void set_identifier(::google::protobuf::uint32 value);
  
  // optional int32 quantity = 41;
  inline bool has_quantity() const;
  inline void clear_quantity();
  static const int kQuantityFieldNumber = 41;
  inline ::google::protobuf::int32 quantity() const;
  inline void set_quantity(::google::protobuf::int32 value);
  
  // optional .Common.KnowledgeGroupId knowledgeGroup = 42;
  inline bool has_knowledgegroup() const;
  inline void clear_knowledgegroup();
  static const int kKnowledgeGroupFieldNumber = 42;
  inline const ::Common::KnowledgeGroupId& knowledgegroup() const;
  inline ::Common::KnowledgeGroupId* mutable_knowledgegroup();
  
  // repeated .Common.MsgMissionParameter.Value list = 43;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 43;
  inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgMissionParameter_Value >& list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Common::MsgMissionParameter_Value >* mutable_list();
  inline const ::Common::MsgMissionParameter_Value& list(int index) const;
  inline ::Common::MsgMissionParameter_Value* mutable_list(int index);
  inline ::Common::MsgMissionParameter_Value* add_list();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool abool_;
  float areal_;
  ::google::protobuf::int32 enumeration_;
  ::Common::MsgPath* path_;
  ::Common::MsgPathList* pathlist_;
  ::Common::MsgPoint* point_;
  ::Common::MsgPointList* pointlist_;
  ::Common::MsgPolygon* polygon_;
  ::Common::MsgPolygonList* polygonlist_;
  ::Common::MsgLocation* location_;
  ::Common::MsgLocationList* locationlist_;
  ::Common::MsgHeading* heading_;
  ::Common::MsgAtlasNature* atlasnature_;
  ::Common::UnitId* unit_;
  ::Common::UnitIdList* unitlist_;
  ::Common::AutomatId* automat_;
  ::Common::AutomatIdList* automatlist_;
  ::Common::UnitKnowledgeId* unitknowledge_;
  ::Common::UnitKnowledgeIdList* unitknowledgelist_;
  ::Common::ObjectKnowledgeId* objectknowledge_;
  ::Common::ObjectKnowledgeIdList* objectknowledgelist_;
  ::Common::CrowdKnowledgeId* crowdknowledge_;
  ::Common::MsgPlannedWork* plannedwork_;
  ::Common::MsgPlannedWorkList* plannedworklist_;
  ::Common::ResourceType* resourcetype_;
  ::Common::EquipmentType* equipmenttype_;
  ::Common::FireId* tirindirect_;
  ::Common::MsgDateTime* datetime_;
  ::Common::MsgLogMaintenancePriorities* logmaintenancepriorities_;
  ::Common::MsgLogMedicalPriorities* logmedicalpriorities_;
  ::std::string* acharstr_;
  static const ::std::string _default_acharstr_;
  ::Common::MsgMissionObjective* missionobjective_;
  ::Common::MsgMissionObjectiveList* missionobjectivelist_;
  ::Common::MsgLine* line_;
  ::Common::MsgLimasOrder* limasorder_;
  ::Common::MsgIntelligenceList* intelligencelist_;
  ::Common::UrbanObjectId* urbanblock_;
  ::Common::PartyId* party_;
  ::Common::FormationId* formation_;
  ::google::protobuf::uint32 identifier_;
  ::google::protobuf::int32 quantity_;
  ::Common::KnowledgeGroupId* knowledgegroup_;
  ::google::protobuf::RepeatedPtrField< ::Common::MsgMissionParameter_Value > list_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(43 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgMissionParameter_Value* default_instance_;
};
// -------------------------------------------------------------------

class MsgMissionParameter : public ::google::protobuf::Message {
 public:
  MsgMissionParameter();
  virtual ~MsgMissionParameter();
  
  MsgMissionParameter(const MsgMissionParameter& from);
  
  inline MsgMissionParameter& operator=(const MsgMissionParameter& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMissionParameter& default_instance();
  void Swap(MsgMissionParameter* other);
  
  // implements Message ----------------------------------------------
  
  MsgMissionParameter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgMissionParameter& from);
  void MergeFrom(const MsgMissionParameter& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef MsgMissionParameter_Value Value;
  
  // accessors -------------------------------------------------------
  
  // optional bool null_value = 1;
  inline bool has_null_value() const;
  inline void clear_null_value();
  static const int kNullValueFieldNumber = 1;
  inline bool null_value() const;
  inline void set_null_value(bool value);
  
  // optional .Common.MsgMissionParameter.Value value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::Common::MsgMissionParameter_Value& value() const;
  inline ::Common::MsgMissionParameter_Value* mutable_value();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool null_value_;
  ::Common::MsgMissionParameter_Value* value_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgMissionParameter* default_instance_;
};
// -------------------------------------------------------------------

class MsgMissionParameters : public ::google::protobuf::Message {
 public:
  MsgMissionParameters();
  virtual ~MsgMissionParameters();
  
  MsgMissionParameters(const MsgMissionParameters& from);
  
  inline MsgMissionParameters& operator=(const MsgMissionParameters& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMissionParameters& default_instance();
  void Swap(MsgMissionParameters* other);
  
  // implements Message ----------------------------------------------
  
  MsgMissionParameters* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgMissionParameters& from);
  void MergeFrom(const MsgMissionParameters& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Common.MsgMissionParameter elem = 1;
  inline int elem_size() const;
  inline void clear_elem();
  static const int kElemFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgMissionParameter >& elem() const;
  inline ::google::protobuf::RepeatedPtrField< ::Common::MsgMissionParameter >* mutable_elem();
  inline const ::Common::MsgMissionParameter& elem(int index) const;
  inline ::Common::MsgMissionParameter* mutable_elem(int index);
  inline ::Common::MsgMissionParameter* add_elem();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::Common::MsgMissionParameter > elem_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgMissionParameters* default_instance_;
};
// -------------------------------------------------------------------

class MsgUnitOrder : public ::google::protobuf::Message {
 public:
  MsgUnitOrder();
  virtual ~MsgUnitOrder();
  
  MsgUnitOrder(const MsgUnitOrder& from);
  
  inline MsgUnitOrder& operator=(const MsgUnitOrder& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgUnitOrder& default_instance();
  void Swap(MsgUnitOrder* other);
  
  // implements Message ----------------------------------------------
  
  MsgUnitOrder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgUnitOrder& from);
  void MergeFrom(const MsgUnitOrder& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.UnitId tasker = 1;
  inline bool has_tasker() const;
  inline void clear_tasker();
  static const int kTaskerFieldNumber = 1;
  inline const ::Common::UnitId& tasker() const;
  inline ::Common::UnitId* mutable_tasker();
  
  // required .Common.MissionType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline const ::Common::MissionType& type() const;
  inline ::Common::MissionType* mutable_type();
  
  // optional .Common.MsgMissionParameters parameters = 3;
  inline bool has_parameters() const;
  inline void clear_parameters();
  static const int kParametersFieldNumber = 3;
  inline const ::Common::MsgMissionParameters& parameters() const;
  inline ::Common::MsgMissionParameters* mutable_parameters();
  
  // optional string label = 4;
  inline bool has_label() const;
  inline void clear_label();
  static const int kLabelFieldNumber = 4;
  inline const ::std::string& label() const;
  inline void set_label(const ::std::string& value);
  inline void set_label(const char* value);
  inline void set_label(const char* value, size_t size);
  inline ::std::string* mutable_label();
  
  // optional .Common.MsgLocation symbolLocation = 5;
  inline bool has_symbollocation() const;
  inline void clear_symbollocation();
  static const int kSymbolLocationFieldNumber = 5;
  inline const ::Common::MsgLocation& symbollocation() const;
  inline ::Common::MsgLocation* mutable_symbollocation();
  
  // optional .Common.MsgDateTime start_time = 6;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 6;
  inline const ::Common::MsgDateTime& start_time() const;
  inline ::Common::MsgDateTime* mutable_start_time();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::UnitId* tasker_;
  ::Common::MissionType* type_;
  ::Common::MsgMissionParameters* parameters_;
  ::std::string* label_;
  static const ::std::string _default_label_;
  ::Common::MsgLocation* symbollocation_;
  ::Common::MsgDateTime* start_time_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgUnitOrder* default_instance_;
};
// -------------------------------------------------------------------

class MsgAutomatOrder : public ::google::protobuf::Message {
 public:
  MsgAutomatOrder();
  virtual ~MsgAutomatOrder();
  
  MsgAutomatOrder(const MsgAutomatOrder& from);
  
  inline MsgAutomatOrder& operator=(const MsgAutomatOrder& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgAutomatOrder& default_instance();
  void Swap(MsgAutomatOrder* other);
  
  // implements Message ----------------------------------------------
  
  MsgAutomatOrder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgAutomatOrder& from);
  void MergeFrom(const MsgAutomatOrder& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.AutomatId tasker = 1;
  inline bool has_tasker() const;
  inline void clear_tasker();
  static const int kTaskerFieldNumber = 1;
  inline const ::Common::AutomatId& tasker() const;
  inline ::Common::AutomatId* mutable_tasker();
  
  // required .Common.MissionType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline const ::Common::MissionType& type() const;
  inline ::Common::MissionType* mutable_type();
  
  // optional .Common.MsgMissionParameters parameters = 3;
  inline bool has_parameters() const;
  inline void clear_parameters();
  static const int kParametersFieldNumber = 3;
  inline const ::Common::MsgMissionParameters& parameters() const;
  inline ::Common::MsgMissionParameters* mutable_parameters();
  
  // optional string label = 4;
  inline bool has_label() const;
  inline void clear_label();
  static const int kLabelFieldNumber = 4;
  inline const ::std::string& label() const;
  inline void set_label(const ::std::string& value);
  inline void set_label(const char* value);
  inline void set_label(const char* value, size_t size);
  inline ::std::string* mutable_label();
  
  // optional .Common.MsgLocation symbolLocation = 5;
  inline bool has_symbollocation() const;
  inline void clear_symbollocation();
  static const int kSymbolLocationFieldNumber = 5;
  inline const ::Common::MsgLocation& symbollocation() const;
  inline ::Common::MsgLocation* mutable_symbollocation();
  
  // optional .Common.MsgDateTime start_time = 6;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 6;
  inline const ::Common::MsgDateTime& start_time() const;
  inline ::Common::MsgDateTime* mutable_start_time();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::AutomatId* tasker_;
  ::Common::MissionType* type_;
  ::Common::MsgMissionParameters* parameters_;
  ::std::string* label_;
  static const ::std::string _default_label_;
  ::Common::MsgLocation* symbollocation_;
  ::Common::MsgDateTime* start_time_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgAutomatOrder* default_instance_;
};
// -------------------------------------------------------------------

class MsgCrowdOrder : public ::google::protobuf::Message {
 public:
  MsgCrowdOrder();
  virtual ~MsgCrowdOrder();
  
  MsgCrowdOrder(const MsgCrowdOrder& from);
  
  inline MsgCrowdOrder& operator=(const MsgCrowdOrder& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCrowdOrder& default_instance();
  void Swap(MsgCrowdOrder* other);
  
  // implements Message ----------------------------------------------
  
  MsgCrowdOrder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCrowdOrder& from);
  void MergeFrom(const MsgCrowdOrder& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.CrowdId tasker = 1;
  inline bool has_tasker() const;
  inline void clear_tasker();
  static const int kTaskerFieldNumber = 1;
  inline const ::Common::CrowdId& tasker() const;
  inline ::Common::CrowdId* mutable_tasker();
  
  // required .Common.MissionType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline const ::Common::MissionType& type() const;
  inline ::Common::MissionType* mutable_type();
  
  // optional .Common.MsgMissionParameters parameters = 3;
  inline bool has_parameters() const;
  inline void clear_parameters();
  static const int kParametersFieldNumber = 3;
  inline const ::Common::MsgMissionParameters& parameters() const;
  inline ::Common::MsgMissionParameters* mutable_parameters();
  
  // optional string label = 4;
  inline bool has_label() const;
  inline void clear_label();
  static const int kLabelFieldNumber = 4;
  inline const ::std::string& label() const;
  inline void set_label(const ::std::string& value);
  inline void set_label(const char* value);
  inline void set_label(const char* value, size_t size);
  inline ::std::string* mutable_label();
  
  // optional .Common.MsgLocation symbolLocation = 5;
  inline bool has_symbollocation() const;
  inline void clear_symbollocation();
  static const int kSymbolLocationFieldNumber = 5;
  inline const ::Common::MsgLocation& symbollocation() const;
  inline ::Common::MsgLocation* mutable_symbollocation();
  
  // optional .Common.MsgDateTime start_time = 6;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 6;
  inline const ::Common::MsgDateTime& start_time() const;
  inline ::Common::MsgDateTime* mutable_start_time();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::CrowdId* tasker_;
  ::Common::MissionType* type_;
  ::Common::MsgMissionParameters* parameters_;
  ::std::string* label_;
  static const ::std::string _default_label_;
  ::Common::MsgLocation* symbollocation_;
  ::Common::MsgDateTime* start_time_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgCrowdOrder* default_instance_;
};
// -------------------------------------------------------------------

class ClientObjectProperty_Value : public ::google::protobuf::Message {
 public:
  ClientObjectProperty_Value();
  virtual ~ClientObjectProperty_Value();
  
  ClientObjectProperty_Value(const ClientObjectProperty_Value& from);
  
  inline ClientObjectProperty_Value& operator=(const ClientObjectProperty_Value& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientObjectProperty_Value& default_instance();
  void Swap(ClientObjectProperty_Value* other);
  
  // implements Message ----------------------------------------------
  
  ClientObjectProperty_Value* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientObjectProperty_Value& from);
  void MergeFrom(const ClientObjectProperty_Value& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string string_value = 1;
  inline bool has_string_value() const;
  inline void clear_string_value();
  static const int kStringValueFieldNumber = 1;
  inline const ::std::string& string_value() const;
  inline void set_string_value(const ::std::string& value);
  inline void set_string_value(const char* value);
  inline void set_string_value(const char* value, size_t size);
  inline ::std::string* mutable_string_value();
  
  // optional int32 integer_value = 2;
  inline bool has_integer_value() const;
  inline void clear_integer_value();
  static const int kIntegerValueFieldNumber = 2;
  inline ::google::protobuf::int32 integer_value() const;
  inline void set_integer_value(::google::protobuf::int32 value);
  
  // optional uint32 unsigned_integer_value = 3;
  inline bool has_unsigned_integer_value() const;
  inline void clear_unsigned_integer_value();
  static const int kUnsignedIntegerValueFieldNumber = 3;
  inline ::google::protobuf::uint32 unsigned_integer_value() const;
  inline void set_unsigned_integer_value(::google::protobuf::uint32 value);
  
  // optional float float_value = 4;
  inline bool has_float_value() const;
  inline void clear_float_value();
  static const int kFloatValueFieldNumber = 4;
  inline float float_value() const;
  inline void set_float_value(float value);
  
  // optional bool bool_value = 5;
  inline bool has_bool_value() const;
  inline void clear_bool_value();
  static const int kBoolValueFieldNumber = 5;
  inline bool bool_value() const;
  inline void set_bool_value(bool value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* string_value_;
  static const ::std::string _default_string_value_;
  ::google::protobuf::int32 integer_value_;
  ::google::protobuf::uint32 unsigned_integer_value_;
  float float_value_;
  bool bool_value_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ClientObjectProperty_Value* default_instance_;
};
// -------------------------------------------------------------------

class ClientObjectProperty : public ::google::protobuf::Message {
 public:
  ClientObjectProperty();
  virtual ~ClientObjectProperty();
  
  ClientObjectProperty(const ClientObjectProperty& from);
  
  inline ClientObjectProperty& operator=(const ClientObjectProperty& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientObjectProperty& default_instance();
  void Swap(ClientObjectProperty* other);
  
  // implements Message ----------------------------------------------
  
  ClientObjectProperty* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientObjectProperty& from);
  void MergeFrom(const ClientObjectProperty& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ClientObjectProperty_Value Value;
  
  // accessors -------------------------------------------------------
  
  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // required .Common.ClientObjectProperty.Value value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::Common::ClientObjectProperty_Value& value() const;
  inline ::Common::ClientObjectProperty_Value* mutable_value();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::Common::ClientObjectProperty_Value* value_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ClientObjectProperty* default_instance_;
};
// -------------------------------------------------------------------

class MsgTacticalLine_Diffusion : public ::google::protobuf::Message {
 public:
  MsgTacticalLine_Diffusion();
  virtual ~MsgTacticalLine_Diffusion();
  
  MsgTacticalLine_Diffusion(const MsgTacticalLine_Diffusion& from);
  
  inline MsgTacticalLine_Diffusion& operator=(const MsgTacticalLine_Diffusion& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTacticalLine_Diffusion& default_instance();
  void Swap(MsgTacticalLine_Diffusion* other);
  
  // implements Message ----------------------------------------------
  
  MsgTacticalLine_Diffusion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgTacticalLine_Diffusion& from);
  void MergeFrom(const MsgTacticalLine_Diffusion& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .Common.AutomatId automat = 1;
  inline bool has_automat() const;
  inline void clear_automat();
  static const int kAutomatFieldNumber = 1;
  inline const ::Common::AutomatId& automat() const;
  inline ::Common::AutomatId* mutable_automat();
  
  // optional .Common.FormationId formation = 2;
  inline bool has_formation() const;
  inline void clear_formation();
  static const int kFormationFieldNumber = 2;
  inline const ::Common::FormationId& formation() const;
  inline ::Common::FormationId* mutable_formation();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::AutomatId* automat_;
  ::Common::FormationId* formation_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgTacticalLine_Diffusion* default_instance_;
};
// -------------------------------------------------------------------

class MsgTacticalLine : public ::google::protobuf::Message {
 public:
  MsgTacticalLine();
  virtual ~MsgTacticalLine();
  
  MsgTacticalLine(const MsgTacticalLine& from);
  
  inline MsgTacticalLine& operator=(const MsgTacticalLine& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTacticalLine& default_instance();
  void Swap(MsgTacticalLine* other);
  
  // implements Message ----------------------------------------------
  
  MsgTacticalLine* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgTacticalLine& from);
  void MergeFrom(const MsgTacticalLine& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef MsgTacticalLine_Diffusion Diffusion;
  
  // accessors -------------------------------------------------------
  
  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // required .Common.MsgLocation geometry = 2;
  inline bool has_geometry() const;
  inline void clear_geometry();
  static const int kGeometryFieldNumber = 2;
  inline const ::Common::MsgLocation& geometry() const;
  inline ::Common::MsgLocation* mutable_geometry();
  
  // required .Common.MsgTacticalLine.Diffusion diffusion = 3;
  inline bool has_diffusion() const;
  inline void clear_diffusion();
  static const int kDiffusionFieldNumber = 3;
  inline const ::Common::MsgTacticalLine_Diffusion& diffusion() const;
  inline ::Common::MsgTacticalLine_Diffusion* mutable_diffusion();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::Common::MsgLocation* geometry_;
  ::Common::MsgTacticalLine_Diffusion* diffusion_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgTacticalLine* default_instance_;
};
// -------------------------------------------------------------------

class MsgShape : public ::google::protobuf::Message {
 public:
  MsgShape();
  virtual ~MsgShape();
  
  MsgShape(const MsgShape& from);
  
  inline MsgShape& operator=(const MsgShape& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgShape& default_instance();
  void Swap(MsgShape* other);
  
  // implements Message ----------------------------------------------
  
  MsgShape* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgShape& from);
  void MergeFrom(const MsgShape& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string category = 1;
  inline bool has_category() const;
  inline void clear_category();
  static const int kCategoryFieldNumber = 1;
  inline const ::std::string& category() const;
  inline void set_category(const ::std::string& value);
  inline void set_category(const char* value);
  inline void set_category(const char* value, size_t size);
  inline ::std::string* mutable_category();
  
  // required string color = 2;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 2;
  inline const ::std::string& color() const;
  inline void set_color(const ::std::string& value);
  inline void set_color(const char* value);
  inline void set_color(const char* value, size_t size);
  inline ::std::string* mutable_color();
  
  // required string pattern = 3;
  inline bool has_pattern() const;
  inline void clear_pattern();
  static const int kPatternFieldNumber = 3;
  inline const ::std::string& pattern() const;
  inline void set_pattern(const ::std::string& value);
  inline void set_pattern(const char* value);
  inline void set_pattern(const char* value, size_t size);
  inline ::std::string* mutable_pattern();
  
  // required .Common.MsgCoordLatLongList points = 4;
  inline bool has_points() const;
  inline void clear_points();
  static const int kPointsFieldNumber = 4;
  inline const ::Common::MsgCoordLatLongList& points() const;
  inline ::Common::MsgCoordLatLongList* mutable_points();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* category_;
  static const ::std::string _default_category_;
  ::std::string* color_;
  static const ::std::string _default_color_;
  ::std::string* pattern_;
  static const ::std::string _default_pattern_;
  ::Common::MsgCoordLatLongList* points_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgShape* default_instance_;
};
// -------------------------------------------------------------------

class MsgChatTarget : public ::google::protobuf::Message {
 public:
  MsgChatTarget();
  virtual ~MsgChatTarget();
  
  MsgChatTarget(const MsgChatTarget& from);
  
  inline MsgChatTarget& operator=(const MsgChatTarget& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgChatTarget& default_instance();
  void Swap(MsgChatTarget* other);
  
  // implements Message ----------------------------------------------
  
  MsgChatTarget* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgChatTarget& from);
  void MergeFrom(const MsgChatTarget& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string profile = 1;
  inline bool has_profile() const;
  inline void clear_profile();
  static const int kProfileFieldNumber = 1;
  inline const ::std::string& profile() const;
  inline void set_profile(const ::std::string& value);
  inline void set_profile(const char* value);
  inline void set_profile(const char* value, size_t size);
  inline ::std::string* mutable_profile();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* profile_;
  static const ::std::string _default_profile_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgChatTarget* default_instance_;
};
// -------------------------------------------------------------------

class MsgTextMessage : public ::google::protobuf::Message {
 public:
  MsgTextMessage();
  virtual ~MsgTextMessage();
  
  MsgTextMessage(const MsgTextMessage& from);
  
  inline MsgTextMessage& operator=(const MsgTextMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTextMessage& default_instance();
  void Swap(MsgTextMessage* other);
  
  // implements Message ----------------------------------------------
  
  MsgTextMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgTextMessage& from);
  void MergeFrom(const MsgTextMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.MsgChatTarget source = 1;
  inline bool has_source() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 1;
  inline const ::Common::MsgChatTarget& source() const;
  inline ::Common::MsgChatTarget* mutable_source();
  
  // required .Common.MsgChatTarget target = 2;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 2;
  inline const ::Common::MsgChatTarget& target() const;
  inline ::Common::MsgChatTarget* mutable_target();
  
  // required string message = 3;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 3;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::MsgChatTarget* source_;
  ::Common::MsgChatTarget* target_;
  ::std::string* message_;
  static const ::std::string _default_message_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgTextMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResourceNetwork_Link : public ::google::protobuf::Message {
 public:
  ResourceNetwork_Link();
  virtual ~ResourceNetwork_Link();
  
  ResourceNetwork_Link(const ResourceNetwork_Link& from);
  
  inline ResourceNetwork_Link& operator=(const ResourceNetwork_Link& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceNetwork_Link& default_instance();
  void Swap(ResourceNetwork_Link* other);
  
  // implements Message ----------------------------------------------
  
  ResourceNetwork_Link* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResourceNetwork_Link& from);
  void MergeFrom(const ResourceNetwork_Link& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ResourceNetwork_Link_TargetKind TargetKind;
  static const TargetKind urban = ResourceNetwork_Link_TargetKind_urban;
  static const TargetKind object = ResourceNetwork_Link_TargetKind_object;
  static inline bool TargetKind_IsValid(int value) {
    return ResourceNetwork_Link_TargetKind_IsValid(value);
  }
  static const TargetKind TargetKind_MIN =
    ResourceNetwork_Link_TargetKind_TargetKind_MIN;
  static const TargetKind TargetKind_MAX =
    ResourceNetwork_Link_TargetKind_TargetKind_MAX;
  static inline const ::google::protobuf::EnumDescriptor*
  TargetKind_descriptor() {
    return ResourceNetwork_Link_TargetKind_descriptor();
  }
  static inline const ::std::string& TargetKind_Name(TargetKind value) {
    return ResourceNetwork_Link_TargetKind_Name(value);
  }
  static inline bool TargetKind_Parse(const ::std::string& name,
      TargetKind* value) {
    return ResourceNetwork_Link_TargetKind_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .Common.ResourceNetwork.Link.TargetKind kind = 1;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 1;
  inline ::Common::ResourceNetwork_Link_TargetKind kind() const;
  inline void set_kind(::Common::ResourceNetwork_Link_TargetKind value);
  
  // required uint32 target_id = 2;
  inline bool has_target_id() const;
  inline void clear_target_id();
  static const int kTargetIdFieldNumber = 2;
  inline ::google::protobuf::uint32 target_id() const;
  inline void set_target_id(::google::protobuf::uint32 value);
  
  // required int32 capacity = 3;
  inline bool has_capacity() const;
  inline void clear_capacity();
  static const int kCapacityFieldNumber = 3;
  inline ::google::protobuf::int32 capacity() const;
  inline void set_capacity(::google::protobuf::int32 value);
  
  // required uint32 flow = 4;
  inline bool has_flow() const;
  inline void clear_flow();
  static const int kFlowFieldNumber = 4;
  inline ::google::protobuf::uint32 flow() const;
  inline void set_flow(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int kind_;
  ::google::protobuf::uint32 target_id_;
  ::google::protobuf::int32 capacity_;
  ::google::protobuf::uint32 flow_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ResourceNetwork_Link* default_instance_;
};
// -------------------------------------------------------------------

class ResourceNetwork : public ::google::protobuf::Message {
 public:
  ResourceNetwork();
  virtual ~ResourceNetwork();
  
  ResourceNetwork(const ResourceNetwork& from);
  
  inline ResourceNetwork& operator=(const ResourceNetwork& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceNetwork& default_instance();
  void Swap(ResourceNetwork* other);
  
  // implements Message ----------------------------------------------
  
  ResourceNetwork* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResourceNetwork& from);
  void MergeFrom(const ResourceNetwork& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ResourceNetwork_Link Link;
  
  // accessors -------------------------------------------------------
  
  // required .Common.ResourceNetworkType resource = 1;
  inline bool has_resource() const;
  inline void clear_resource();
  static const int kResourceFieldNumber = 1;
  inline const ::Common::ResourceNetworkType& resource() const;
  inline ::Common::ResourceNetworkType* mutable_resource();
  
  // repeated .Common.ResourceNetwork.Link link = 2;
  inline int link_size() const;
  inline void clear_link();
  static const int kLinkFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::Common::ResourceNetwork_Link >& link() const;
  inline ::google::protobuf::RepeatedPtrField< ::Common::ResourceNetwork_Link >* mutable_link();
  inline const ::Common::ResourceNetwork_Link& link(int index) const;
  inline ::Common::ResourceNetwork_Link* mutable_link(int index);
  inline ::Common::ResourceNetwork_Link* add_link();
  
  // required bool enabled = 3;
  inline bool has_enabled() const;
  inline void clear_enabled();
  static const int kEnabledFieldNumber = 3;
  inline bool enabled() const;
  inline void set_enabled(bool value);
  
  // optional uint32 max_stock = 4;
  inline bool has_max_stock() const;
  inline void clear_max_stock();
  static const int kMaxStockFieldNumber = 4;
  inline ::google::protobuf::uint32 max_stock() const;
  inline void set_max_stock(::google::protobuf::uint32 value);
  
  // optional uint32 stock = 5;
  inline bool has_stock() const;
  inline void clear_stock();
  static const int kStockFieldNumber = 5;
  inline ::google::protobuf::uint32 stock() const;
  inline void set_stock(::google::protobuf::uint32 value);
  
  // optional uint32 production = 6;
  inline bool has_production() const;
  inline void clear_production();
  static const int kProductionFieldNumber = 6;
  inline ::google::protobuf::uint32 production() const;
  inline void set_production(::google::protobuf::uint32 value);
  
  // optional uint32 consumption = 7;
  inline bool has_consumption() const;
  inline void clear_consumption();
  static const int kConsumptionFieldNumber = 7;
  inline ::google::protobuf::uint32 consumption() const;
  inline void set_consumption(::google::protobuf::uint32 value);
  
  // optional bool critical = 8;
  inline bool has_critical() const;
  inline void clear_critical();
  static const int kCriticalFieldNumber = 8;
  inline bool critical() const;
  inline void set_critical(bool value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::ResourceNetworkType* resource_;
  ::google::protobuf::RepeatedPtrField< ::Common::ResourceNetwork_Link > link_;
  bool enabled_;
  ::google::protobuf::uint32 max_stock_;
  ::google::protobuf::uint32 stock_;
  ::google::protobuf::uint32 production_;
  ::google::protobuf::uint32 consumption_;
  bool critical_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ResourceNetwork* default_instance_;
};
// -------------------------------------------------------------------

class ObjectAttributeResourceNetwork : public ::google::protobuf::Message {
 public:
  ObjectAttributeResourceNetwork();
  virtual ~ObjectAttributeResourceNetwork();
  
  ObjectAttributeResourceNetwork(const ObjectAttributeResourceNetwork& from);
  
  inline ObjectAttributeResourceNetwork& operator=(const ObjectAttributeResourceNetwork& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectAttributeResourceNetwork& default_instance();
  void Swap(ObjectAttributeResourceNetwork* other);
  
  // implements Message ----------------------------------------------
  
  ObjectAttributeResourceNetwork* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectAttributeResourceNetwork& from);
  void MergeFrom(const ObjectAttributeResourceNetwork& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Common.ResourceNetwork network = 1;
  inline int network_size() const;
  inline void clear_network();
  static const int kNetworkFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::Common::ResourceNetwork >& network() const;
  inline ::google::protobuf::RepeatedPtrField< ::Common::ResourceNetwork >* mutable_network();
  inline const ::Common::ResourceNetwork& network(int index) const;
  inline ::Common::ResourceNetwork* mutable_network(int index);
  inline ::Common::ResourceNetwork* add_network();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::Common::ResourceNetwork > network_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ObjectAttributeResourceNetwork* default_instance_;
};
// -------------------------------------------------------------------

class ObjectAttributeConstruction : public ::google::protobuf::Message {
 public:
  ObjectAttributeConstruction();
  virtual ~ObjectAttributeConstruction();
  
  ObjectAttributeConstruction(const ObjectAttributeConstruction& from);
  
  inline ObjectAttributeConstruction& operator=(const ObjectAttributeConstruction& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectAttributeConstruction& default_instance();
  void Swap(ObjectAttributeConstruction* other);
  
  // implements Message ----------------------------------------------
  
  ObjectAttributeConstruction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectAttributeConstruction& from);
  void MergeFrom(const ObjectAttributeConstruction& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .Common.ResourceType resource = 1;
  inline bool has_resource() const;
  inline void clear_resource();
  static const int kResourceFieldNumber = 1;
  inline const ::Common::ResourceType& resource() const;
  inline ::Common::ResourceType* mutable_resource();
  
  // optional int32 dotation_nbr = 2;
  inline bool has_dotation_nbr() const;
  inline void clear_dotation_nbr();
  static const int kDotationNbrFieldNumber = 2;
  inline ::google::protobuf::int32 dotation_nbr() const;
  inline void set_dotation_nbr(::google::protobuf::int32 value);
  
  // optional float density = 3;
  inline bool has_density() const;
  inline void clear_density();
  static const int kDensityFieldNumber = 3;
  inline float density() const;
  inline void set_density(float value);
  
  // optional int32 percentage = 4;
  inline bool has_percentage() const;
  inline void clear_percentage();
  static const int kPercentageFieldNumber = 4;
  inline ::google::protobuf::int32 percentage() const;
  inline void set_percentage(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::ResourceType* resource_;
  ::google::protobuf::int32 dotation_nbr_;
  float density_;
  ::google::protobuf::int32 percentage_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ObjectAttributeConstruction* default_instance_;
};
// -------------------------------------------------------------------

class ObjectAttributeMine : public ::google::protobuf::Message {
 public:
  ObjectAttributeMine();
  virtual ~ObjectAttributeMine();
  
  ObjectAttributeMine(const ObjectAttributeMine& from);
  
  inline ObjectAttributeMine& operator=(const ObjectAttributeMine& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectAttributeMine& default_instance();
  void Swap(ObjectAttributeMine* other);
  
  // implements Message ----------------------------------------------
  
  ObjectAttributeMine* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectAttributeMine& from);
  void MergeFrom(const ObjectAttributeMine& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .Common.ResourceType resource = 1;
  inline bool has_resource() const;
  inline void clear_resource();
  static const int kResourceFieldNumber = 1;
  inline const ::Common::ResourceType& resource() const;
  inline ::Common::ResourceType* mutable_resource();
  
  // optional int32 dotation_nbr = 2;
  inline bool has_dotation_nbr() const;
  inline void clear_dotation_nbr();
  static const int kDotationNbrFieldNumber = 2;
  inline ::google::protobuf::int32 dotation_nbr() const;
  inline void set_dotation_nbr(::google::protobuf::int32 value);
  
  // optional float density = 3;
  inline bool has_density() const;
  inline void clear_density();
  static const int kDensityFieldNumber = 3;
  inline float density() const;
  inline void set_density(float value);
  
  // optional int32 percentage = 4;
  inline bool has_percentage() const;
  inline void clear_percentage();
  static const int kPercentageFieldNumber = 4;
  inline ::google::protobuf::int32 percentage() const;
  inline void set_percentage(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::ResourceType* resource_;
  ::google::protobuf::int32 dotation_nbr_;
  float density_;
  ::google::protobuf::int32 percentage_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ObjectAttributeMine* default_instance_;
};
// -------------------------------------------------------------------

class ObjectAttributeLogistic : public ::google::protobuf::Message {
 public:
  ObjectAttributeLogistic();
  virtual ~ObjectAttributeLogistic();
  
  ObjectAttributeLogistic(const ObjectAttributeLogistic& from);
  
  inline ObjectAttributeLogistic& operator=(const ObjectAttributeLogistic& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectAttributeLogistic& default_instance();
  void Swap(ObjectAttributeLogistic* other);
  
  // implements Message ----------------------------------------------
  
  ObjectAttributeLogistic* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectAttributeLogistic& from);
  void MergeFrom(const ObjectAttributeLogistic& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.AutomatId tc2 = 1;
  inline bool has_tc2() const;
  inline void clear_tc2();
  static const int kTc2FieldNumber = 1;
  inline const ::Common::AutomatId& tc2() const;
  inline ::Common::AutomatId* mutable_tc2();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::AutomatId* tc2_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ObjectAttributeLogistic* default_instance_;
};
// -------------------------------------------------------------------

class ObjectAttributeInteractionHeight : public ::google::protobuf::Message {
 public:
  ObjectAttributeInteractionHeight();
  virtual ~ObjectAttributeInteractionHeight();
  
  ObjectAttributeInteractionHeight(const ObjectAttributeInteractionHeight& from);
  
  inline ObjectAttributeInteractionHeight& operator=(const ObjectAttributeInteractionHeight& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectAttributeInteractionHeight& default_instance();
  void Swap(ObjectAttributeInteractionHeight* other);
  
  // implements Message ----------------------------------------------
  
  ObjectAttributeInteractionHeight* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectAttributeInteractionHeight& from);
  void MergeFrom(const ObjectAttributeInteractionHeight& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required float height = 1;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 1;
  inline float height() const;
  inline void set_height(float value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  float height_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ObjectAttributeInteractionHeight* default_instance_;
};
// -------------------------------------------------------------------

class ObjectAttributeObstacle : public ::google::protobuf::Message {
 public:
  ObjectAttributeObstacle();
  virtual ~ObjectAttributeObstacle();
  
  ObjectAttributeObstacle(const ObjectAttributeObstacle& from);
  
  inline ObjectAttributeObstacle& operator=(const ObjectAttributeObstacle& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectAttributeObstacle& default_instance();
  void Swap(ObjectAttributeObstacle* other);
  
  // implements Message ----------------------------------------------
  
  ObjectAttributeObstacle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectAttributeObstacle& from);
  void MergeFrom(const ObjectAttributeObstacle& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.ObstacleType.DemolitionTargetType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Common::ObstacleType_DemolitionTargetType type() const;
  inline void set_type(::Common::ObstacleType_DemolitionTargetType value);
  
  // optional bool activated = 2;
  inline bool has_activated() const;
  inline void clear_activated();
  static const int kActivatedFieldNumber = 2;
  inline bool activated() const;
  inline void set_activated(bool value);
  
  // optional int32 activation_time = 3;
  inline bool has_activation_time() const;
  inline void clear_activation_time();
  static const int kActivationTimeFieldNumber = 3;
  inline ::google::protobuf::int32 activation_time() const;
  inline void set_activation_time(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int type_;
  bool activated_;
  ::google::protobuf::int32 activation_time_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ObjectAttributeObstacle* default_instance_;
};
// -------------------------------------------------------------------

class ObjectAttributeActivityTime : public ::google::protobuf::Message {
 public:
  ObjectAttributeActivityTime();
  virtual ~ObjectAttributeActivityTime();
  
  ObjectAttributeActivityTime(const ObjectAttributeActivityTime& from);
  
  inline ObjectAttributeActivityTime& operator=(const ObjectAttributeActivityTime& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectAttributeActivityTime& default_instance();
  void Swap(ObjectAttributeActivityTime* other);
  
  // implements Message ----------------------------------------------
  
  ObjectAttributeActivityTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectAttributeActivityTime& from);
  void MergeFrom(const ObjectAttributeActivityTime& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 value = 1;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 value_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ObjectAttributeActivityTime* default_instance_;
};
// -------------------------------------------------------------------

class ObjectAttributeBypass : public ::google::protobuf::Message {
 public:
  ObjectAttributeBypass();
  virtual ~ObjectAttributeBypass();
  
  ObjectAttributeBypass(const ObjectAttributeBypass& from);
  
  inline ObjectAttributeBypass& operator=(const ObjectAttributeBypass& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectAttributeBypass& default_instance();
  void Swap(ObjectAttributeBypass* other);
  
  // implements Message ----------------------------------------------
  
  ObjectAttributeBypass* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectAttributeBypass& from);
  void MergeFrom(const ObjectAttributeBypass& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 percentage = 1;
  inline bool has_percentage() const;
  inline void clear_percentage();
  static const int kPercentageFieldNumber = 1;
  inline ::google::protobuf::int32 percentage() const;
  inline void set_percentage(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 percentage_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ObjectAttributeBypass* default_instance_;
};
// -------------------------------------------------------------------

class ObjectAttributeEffectDelay : public ::google::protobuf::Message {
 public:
  ObjectAttributeEffectDelay();
  virtual ~ObjectAttributeEffectDelay();
  
  ObjectAttributeEffectDelay(const ObjectAttributeEffectDelay& from);
  
  inline ObjectAttributeEffectDelay& operator=(const ObjectAttributeEffectDelay& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectAttributeEffectDelay& default_instance();
  void Swap(ObjectAttributeEffectDelay* other);
  
  // implements Message ----------------------------------------------
  
  ObjectAttributeEffectDelay* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectAttributeEffectDelay& from);
  void MergeFrom(const ObjectAttributeEffectDelay& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 value = 1;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 value_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ObjectAttributeEffectDelay* default_instance_;
};
// -------------------------------------------------------------------

class ObjectAttributeNBC : public ::google::protobuf::Message {
 public:
  ObjectAttributeNBC();
  virtual ~ObjectAttributeNBC();
  
  ObjectAttributeNBC(const ObjectAttributeNBC& from);
  
  inline ObjectAttributeNBC& operator=(const ObjectAttributeNBC& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectAttributeNBC& default_instance();
  void Swap(ObjectAttributeNBC* other);
  
  // implements Message ----------------------------------------------
  
  ObjectAttributeNBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectAttributeNBC& from);
  void MergeFrom(const ObjectAttributeNBC& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 danger_level = 1;
  inline bool has_danger_level() const;
  inline void clear_danger_level();
  static const int kDangerLevelFieldNumber = 1;
  inline ::google::protobuf::int32 danger_level() const;
  inline void set_danger_level(::google::protobuf::int32 value);
  
  // repeated .Common.NBCAgentType nbc_agents = 2;
  inline int nbc_agents_size() const;
  inline void clear_nbc_agents();
  static const int kNbcAgentsFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::Common::NBCAgentType >& nbc_agents() const;
  inline ::google::protobuf::RepeatedPtrField< ::Common::NBCAgentType >* mutable_nbc_agents();
  inline const ::Common::NBCAgentType& nbc_agents(int index) const;
  inline ::Common::NBCAgentType* mutable_nbc_agents(int index);
  inline ::Common::NBCAgentType* add_nbc_agents();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 danger_level_;
  ::google::protobuf::RepeatedPtrField< ::Common::NBCAgentType > nbc_agents_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ObjectAttributeNBC* default_instance_;
};
// -------------------------------------------------------------------

class StockResource : public ::google::protobuf::Message {
 public:
  StockResource();
  virtual ~StockResource();
  
  StockResource(const StockResource& from);
  
  inline StockResource& operator=(const StockResource& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StockResource& default_instance();
  void Swap(StockResource* other);
  
  // implements Message ----------------------------------------------
  
  StockResource* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StockResource& from);
  void MergeFrom(const StockResource& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.ResourceType resource = 1;
  inline bool has_resource() const;
  inline void clear_resource();
  static const int kResourceFieldNumber = 1;
  inline const ::Common::ResourceType& resource() const;
  inline ::Common::ResourceType* mutable_resource();
  
  // required int32 current = 2;
  inline bool has_current() const;
  inline void clear_current();
  static const int kCurrentFieldNumber = 2;
  inline ::google::protobuf::int32 current() const;
  inline void set_current(::google::protobuf::int32 value);
  
  // optional int32 maximum = 3;
  inline bool has_maximum() const;
  inline void clear_maximum();
  static const int kMaximumFieldNumber = 3;
  inline ::google::protobuf::int32 maximum() const;
  inline void set_maximum(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::ResourceType* resource_;
  ::google::protobuf::int32 current_;
  ::google::protobuf::int32 maximum_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static StockResource* default_instance_;
};
// -------------------------------------------------------------------

class ObjectAttributeStock : public ::google::protobuf::Message {
 public:
  ObjectAttributeStock();
  virtual ~ObjectAttributeStock();
  
  ObjectAttributeStock(const ObjectAttributeStock& from);
  
  inline ObjectAttributeStock& operator=(const ObjectAttributeStock& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectAttributeStock& default_instance();
  void Swap(ObjectAttributeStock* other);
  
  // implements Message ----------------------------------------------
  
  ObjectAttributeStock* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectAttributeStock& from);
  void MergeFrom(const ObjectAttributeStock& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Common.StockResource resources = 1;
  inline int resources_size() const;
  inline void clear_resources();
  static const int kResourcesFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::Common::StockResource >& resources() const;
  inline ::google::protobuf::RepeatedPtrField< ::Common::StockResource >* mutable_resources();
  inline const ::Common::StockResource& resources(int index) const;
  inline ::Common::StockResource* mutable_resources(int index);
  inline ::Common::StockResource* add_resources();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::Common::StockResource > resources_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ObjectAttributeStock* default_instance_;
};
// -------------------------------------------------------------------

class ObjectAttributeCrossingSite : public ::google::protobuf::Message {
 public:
  ObjectAttributeCrossingSite();
  virtual ~ObjectAttributeCrossingSite();
  
  ObjectAttributeCrossingSite(const ObjectAttributeCrossingSite& from);
  
  inline ObjectAttributeCrossingSite& operator=(const ObjectAttributeCrossingSite& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectAttributeCrossingSite& default_instance();
  void Swap(ObjectAttributeCrossingSite* other);
  
  // implements Message ----------------------------------------------
  
  ObjectAttributeCrossingSite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectAttributeCrossingSite& from);
  void MergeFrom(const ObjectAttributeCrossingSite& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 width = 1;
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 1;
  inline ::google::protobuf::int32 width() const;
  inline void set_width(::google::protobuf::int32 value);
  
  // required int32 depth = 2;
  inline bool has_depth() const;
  inline void clear_depth();
  static const int kDepthFieldNumber = 2;
  inline ::google::protobuf::int32 depth() const;
  inline void set_depth(::google::protobuf::int32 value);
  
  // required int32 flow_rate = 3;
  inline bool has_flow_rate() const;
  inline void clear_flow_rate();
  static const int kFlowRateFieldNumber = 3;
  inline ::google::protobuf::int32 flow_rate() const;
  inline void set_flow_rate(::google::protobuf::int32 value);
  
  // required bool banks_require_fitting = 4;
  inline bool has_banks_require_fitting() const;
  inline void clear_banks_require_fitting();
  static const int kBanksRequireFittingFieldNumber = 4;
  inline bool banks_require_fitting() const;
  inline void set_banks_require_fitting(bool value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 depth_;
  ::google::protobuf::int32 flow_rate_;
  bool banks_require_fitting_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ObjectAttributeCrossingSite* default_instance_;
};
// -------------------------------------------------------------------

class ObjectAttributeSupplyRoute : public ::google::protobuf::Message {
 public:
  ObjectAttributeSupplyRoute();
  virtual ~ObjectAttributeSupplyRoute();
  
  ObjectAttributeSupplyRoute(const ObjectAttributeSupplyRoute& from);
  
  inline ObjectAttributeSupplyRoute& operator=(const ObjectAttributeSupplyRoute& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectAttributeSupplyRoute& default_instance();
  void Swap(ObjectAttributeSupplyRoute* other);
  
  // implements Message ----------------------------------------------
  
  ObjectAttributeSupplyRoute* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectAttributeSupplyRoute& from);
  void MergeFrom(const ObjectAttributeSupplyRoute& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool equipped = 1;
  inline bool has_equipped() const;
  inline void clear_equipped();
  static const int kEquippedFieldNumber = 1;
  inline bool equipped() const;
  inline void set_equipped(bool value);
  
  // required int32 max_weight = 2;
  inline bool has_max_weight() const;
  inline void clear_max_weight();
  static const int kMaxWeightFieldNumber = 2;
  inline ::google::protobuf::int32 max_weight() const;
  inline void set_max_weight(::google::protobuf::int32 value);
  
  // required int32 width = 3;
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 3;
  inline ::google::protobuf::int32 width() const;
  inline void set_width(::google::protobuf::int32 value);
  
  // required int32 length = 4;
  inline bool has_length() const;
  inline void clear_length();
  static const int kLengthFieldNumber = 4;
  inline ::google::protobuf::int32 length() const;
  inline void set_length(::google::protobuf::int32 value);
  
  // required int32 flow_rate = 5;
  inline bool has_flow_rate() const;
  inline void clear_flow_rate();
  static const int kFlowRateFieldNumber = 5;
  inline ::google::protobuf::int32 flow_rate() const;
  inline void set_flow_rate(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool equipped_;
  ::google::protobuf::int32 max_weight_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 length_;
  ::google::protobuf::int32 flow_rate_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ObjectAttributeSupplyRoute* default_instance_;
};
// -------------------------------------------------------------------

class MsgLocatedQuantity : public ::google::protobuf::Message {
 public:
  MsgLocatedQuantity();
  virtual ~MsgLocatedQuantity();
  
  MsgLocatedQuantity(const MsgLocatedQuantity& from);
  
  inline MsgLocatedQuantity& operator=(const MsgLocatedQuantity& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLocatedQuantity& default_instance();
  void Swap(MsgLocatedQuantity* other);
  
  // implements Message ----------------------------------------------
  
  MsgLocatedQuantity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLocatedQuantity& from);
  void MergeFrom(const MsgLocatedQuantity& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.MsgCoordLatLong coordinate = 1;
  inline bool has_coordinate() const;
  inline void clear_coordinate();
  static const int kCoordinateFieldNumber = 1;
  inline const ::Common::MsgCoordLatLong& coordinate() const;
  inline ::Common::MsgCoordLatLong* mutable_coordinate();
  
  // required float quantity = 2;
  inline bool has_quantity() const;
  inline void clear_quantity();
  static const int kQuantityFieldNumber = 2;
  inline float quantity() const;
  inline void set_quantity(float value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::MsgCoordLatLong* coordinate_;
  float quantity_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLocatedQuantity* default_instance_;
};
// -------------------------------------------------------------------

class MsgLocatedQuantityList : public ::google::protobuf::Message {
 public:
  MsgLocatedQuantityList();
  virtual ~MsgLocatedQuantityList();
  
  MsgLocatedQuantityList(const MsgLocatedQuantityList& from);
  
  inline MsgLocatedQuantityList& operator=(const MsgLocatedQuantityList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLocatedQuantityList& default_instance();
  void Swap(MsgLocatedQuantityList* other);
  
  // implements Message ----------------------------------------------
  
  MsgLocatedQuantityList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLocatedQuantityList& from);
  void MergeFrom(const MsgLocatedQuantityList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Common.MsgLocatedQuantity elem = 1;
  inline int elem_size() const;
  inline void clear_elem();
  static const int kElemFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgLocatedQuantity >& elem() const;
  inline ::google::protobuf::RepeatedPtrField< ::Common::MsgLocatedQuantity >* mutable_elem();
  inline const ::Common::MsgLocatedQuantity& elem(int index) const;
  inline ::Common::MsgLocatedQuantity* mutable_elem(int index);
  inline ::Common::MsgLocatedQuantity* add_elem();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::Common::MsgLocatedQuantity > elem_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLocatedQuantityList* default_instance_;
};
// -------------------------------------------------------------------

class ObjectAttributeToxicCloud : public ::google::protobuf::Message {
 public:
  ObjectAttributeToxicCloud();
  virtual ~ObjectAttributeToxicCloud();
  
  ObjectAttributeToxicCloud(const ObjectAttributeToxicCloud& from);
  
  inline ObjectAttributeToxicCloud& operator=(const ObjectAttributeToxicCloud& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectAttributeToxicCloud& default_instance();
  void Swap(ObjectAttributeToxicCloud* other);
  
  // implements Message ----------------------------------------------
  
  ObjectAttributeToxicCloud* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectAttributeToxicCloud& from);
  void MergeFrom(const ObjectAttributeToxicCloud& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.MsgLocatedQuantityList quantities = 1;
  inline bool has_quantities() const;
  inline void clear_quantities();
  static const int kQuantitiesFieldNumber = 1;
  inline const ::Common::MsgLocatedQuantityList& quantities() const;
  inline ::Common::MsgLocatedQuantityList* mutable_quantities();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::MsgLocatedQuantityList* quantities_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ObjectAttributeToxicCloud* default_instance_;
};
// -------------------------------------------------------------------

class ObjectAttributeFire : public ::google::protobuf::Message {
 public:
  ObjectAttributeFire();
  virtual ~ObjectAttributeFire();
  
  ObjectAttributeFire(const ObjectAttributeFire& from);
  
  inline ObjectAttributeFire& operator=(const ObjectAttributeFire& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectAttributeFire& default_instance();
  void Swap(ObjectAttributeFire* other);
  
  // implements Message ----------------------------------------------
  
  ObjectAttributeFire* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectAttributeFire& from);
  void MergeFrom(const ObjectAttributeFire& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 class_id = 1;
  inline bool has_class_id() const;
  inline void clear_class_id();
  static const int kClassIdFieldNumber = 1;
  inline ::google::protobuf::int32 class_id() const;
  inline void set_class_id(::google::protobuf::int32 value);
  
  // required int32 heat = 2;
  inline bool has_heat() const;
  inline void clear_heat();
  static const int kHeatFieldNumber = 2;
  inline ::google::protobuf::int32 heat() const;
  inline void set_heat(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 class_id_;
  ::google::protobuf::int32 heat_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ObjectAttributeFire* default_instance_;
};
// -------------------------------------------------------------------

class ObjectAttributeMedicalTreatmentBedCapacity : public ::google::protobuf::Message {
 public:
  ObjectAttributeMedicalTreatmentBedCapacity();
  virtual ~ObjectAttributeMedicalTreatmentBedCapacity();
  
  ObjectAttributeMedicalTreatmentBedCapacity(const ObjectAttributeMedicalTreatmentBedCapacity& from);
  
  inline ObjectAttributeMedicalTreatmentBedCapacity& operator=(const ObjectAttributeMedicalTreatmentBedCapacity& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectAttributeMedicalTreatmentBedCapacity& default_instance();
  void Swap(ObjectAttributeMedicalTreatmentBedCapacity* other);
  
  // implements Message ----------------------------------------------
  
  ObjectAttributeMedicalTreatmentBedCapacity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectAttributeMedicalTreatmentBedCapacity& from);
  void MergeFrom(const ObjectAttributeMedicalTreatmentBedCapacity& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 type_id = 1;
  inline bool has_type_id() const;
  inline void clear_type_id();
  static const int kTypeIdFieldNumber = 1;
  inline ::google::protobuf::int32 type_id() const;
  inline void set_type_id(::google::protobuf::int32 value);
  
  // optional uint32 baseline_count = 2;
  inline bool has_baseline_count() const;
  inline void clear_baseline_count();
  static const int kBaselineCountFieldNumber = 2;
  inline ::google::protobuf::uint32 baseline_count() const;
  inline void set_baseline_count(::google::protobuf::uint32 value);
  
  // optional uint32 available_count = 3;
  inline bool has_available_count() const;
  inline void clear_available_count();
  static const int kAvailableCountFieldNumber = 3;
  inline ::google::protobuf::uint32 available_count() const;
  inline void set_available_count(::google::protobuf::uint32 value);
  
  // optional uint32 emergency_count = 4;
  inline bool has_emergency_count() const;
  inline void clear_emergency_count();
  static const int kEmergencyCountFieldNumber = 4;
  inline ::google::protobuf::uint32 emergency_count() const;
  inline void set_emergency_count(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 type_id_;
  ::google::protobuf::uint32 baseline_count_;
  ::google::protobuf::uint32 available_count_;
  ::google::protobuf::uint32 emergency_count_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ObjectAttributeMedicalTreatmentBedCapacity* default_instance_;
};
// -------------------------------------------------------------------

class ObjectAttributeMedicalTreatment : public ::google::protobuf::Message {
 public:
  ObjectAttributeMedicalTreatment();
  virtual ~ObjectAttributeMedicalTreatment();
  
  ObjectAttributeMedicalTreatment(const ObjectAttributeMedicalTreatment& from);
  
  inline ObjectAttributeMedicalTreatment& operator=(const ObjectAttributeMedicalTreatment& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectAttributeMedicalTreatment& default_instance();
  void Swap(ObjectAttributeMedicalTreatment* other);
  
  // implements Message ----------------------------------------------
  
  ObjectAttributeMedicalTreatment* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectAttributeMedicalTreatment& from);
  void MergeFrom(const ObjectAttributeMedicalTreatment& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus EnumMedicalTreatmentStatus;
  static const EnumMedicalTreatmentStatus normal = ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus_normal;
  static const EnumMedicalTreatmentStatus on_divert = ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus_on_divert;
  static const EnumMedicalTreatmentStatus closed = ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus_closed;
  static inline bool EnumMedicalTreatmentStatus_IsValid(int value) {
    return ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus_IsValid(value);
  }
  static const EnumMedicalTreatmentStatus EnumMedicalTreatmentStatus_MIN =
    ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus_EnumMedicalTreatmentStatus_MIN;
  static const EnumMedicalTreatmentStatus EnumMedicalTreatmentStatus_MAX =
    ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus_EnumMedicalTreatmentStatus_MAX;
  static inline const ::google::protobuf::EnumDescriptor*
  EnumMedicalTreatmentStatus_descriptor() {
    return ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus_descriptor();
  }
  static inline const ::std::string& EnumMedicalTreatmentStatus_Name(EnumMedicalTreatmentStatus value) {
    return ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus_Name(value);
  }
  static inline bool EnumMedicalTreatmentStatus_Parse(const ::std::string& name,
      EnumMedicalTreatmentStatus* value) {
    return ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // optional string external_reference_id = 1;
  inline bool has_external_reference_id() const;
  inline void clear_external_reference_id();
  static const int kExternalReferenceIdFieldNumber = 1;
  inline const ::std::string& external_reference_id() const;
  inline void set_external_reference_id(const ::std::string& value);
  inline void set_external_reference_id(const char* value);
  inline void set_external_reference_id(const char* value, size_t size);
  inline ::std::string* mutable_external_reference_id();
  
  // repeated .Common.ObjectAttributeMedicalTreatmentBedCapacity bed_capacities = 2;
  inline int bed_capacities_size() const;
  inline void clear_bed_capacities();
  static const int kBedCapacitiesFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::Common::ObjectAttributeMedicalTreatmentBedCapacity >& bed_capacities() const;
  inline ::google::protobuf::RepeatedPtrField< ::Common::ObjectAttributeMedicalTreatmentBedCapacity >* mutable_bed_capacities();
  inline const ::Common::ObjectAttributeMedicalTreatmentBedCapacity& bed_capacities(int index) const;
  inline ::Common::ObjectAttributeMedicalTreatmentBedCapacity* mutable_bed_capacities(int index);
  inline ::Common::ObjectAttributeMedicalTreatmentBedCapacity* add_bed_capacities();
  
  // optional .Common.ObjectAttributeMedicalTreatment.EnumMedicalTreatmentStatus facility_status = 3;
  inline bool has_facility_status() const;
  inline void clear_facility_status();
  static const int kFacilityStatusFieldNumber = 3;
  inline ::Common::ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus facility_status() const;
  inline void set_facility_status(::Common::ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus value);
  
  // optional uint32 doctors = 4;
  inline bool has_doctors() const;
  inline void clear_doctors();
  static const int kDoctorsFieldNumber = 4;
  inline ::google::protobuf::uint32 doctors() const;
  inline void set_doctors(::google::protobuf::uint32 value);
  
  // optional uint32 available_doctors = 5;
  inline bool has_available_doctors() const;
  inline void clear_available_doctors();
  static const int kAvailableDoctorsFieldNumber = 5;
  inline ::google::protobuf::uint32 available_doctors() const;
  inline void set_available_doctors(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* external_reference_id_;
  static const ::std::string _default_external_reference_id_;
  ::google::protobuf::RepeatedPtrField< ::Common::ObjectAttributeMedicalTreatmentBedCapacity > bed_capacities_;
  int facility_status_;
  ::google::protobuf::uint32 doctors_;
  ::google::protobuf::uint32 available_doctors_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ObjectAttributeMedicalTreatment* default_instance_;
};
// -------------------------------------------------------------------

class ObjectAttributeNBCType : public ::google::protobuf::Message {
 public:
  ObjectAttributeNBCType();
  virtual ~ObjectAttributeNBCType();
  
  ObjectAttributeNBCType(const ObjectAttributeNBCType& from);
  
  inline ObjectAttributeNBCType& operator=(const ObjectAttributeNBCType& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectAttributeNBCType& default_instance();
  void Swap(ObjectAttributeNBCType* other);
  
  // implements Message ----------------------------------------------
  
  ObjectAttributeNBCType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectAttributeNBCType& from);
  void MergeFrom(const ObjectAttributeNBCType& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.NBCAgentType agent = 1;
  inline bool has_agent() const;
  inline void clear_agent();
  static const int kAgentFieldNumber = 1;
  inline const ::Common::NBCAgentType& agent() const;
  inline ::Common::NBCAgentType* mutable_agent();
  
  // required int32 concentration = 2;
  inline bool has_concentration() const;
  inline void clear_concentration();
  static const int kConcentrationFieldNumber = 2;
  inline ::google::protobuf::int32 concentration() const;
  inline void set_concentration(::google::protobuf::int32 value);
  
  // required int32 source_life_duration = 3;
  inline bool has_source_life_duration() const;
  inline void clear_source_life_duration();
  static const int kSourceLifeDurationFieldNumber = 3;
  inline ::google::protobuf::int32 source_life_duration() const;
  inline void set_source_life_duration(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::NBCAgentType* agent_;
  ::google::protobuf::int32 concentration_;
  ::google::protobuf::int32 source_life_duration_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ObjectAttributeNBCType* default_instance_;
};
// -------------------------------------------------------------------

class ObjectAttributeSealOff : public ::google::protobuf::Message {
 public:
  ObjectAttributeSealOff();
  virtual ~ObjectAttributeSealOff();
  
  ObjectAttributeSealOff(const ObjectAttributeSealOff& from);
  
  inline ObjectAttributeSealOff& operator=(const ObjectAttributeSealOff& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectAttributeSealOff& default_instance();
  void Swap(ObjectAttributeSealOff* other);
  
  // implements Message ----------------------------------------------
  
  ObjectAttributeSealOff* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectAttributeSealOff& from);
  void MergeFrom(const ObjectAttributeSealOff& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 level_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ObjectAttributeSealOff* default_instance_;
};
// -------------------------------------------------------------------

class ObjectAttributes : public ::google::protobuf::Message {
 public:
  ObjectAttributes();
  virtual ~ObjectAttributes();
  
  ObjectAttributes(const ObjectAttributes& from);
  
  inline ObjectAttributes& operator=(const ObjectAttributes& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectAttributes& default_instance();
  void Swap(ObjectAttributes* other);
  
  // implements Message ----------------------------------------------
  
  ObjectAttributes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectAttributes& from);
  void MergeFrom(const ObjectAttributes& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .Common.ObjectAttributeConstruction construction = 1;
  inline bool has_construction() const;
  inline void clear_construction();
  static const int kConstructionFieldNumber = 1;
  inline const ::Common::ObjectAttributeConstruction& construction() const;
  inline ::Common::ObjectAttributeConstruction* mutable_construction();
  
  // optional .Common.ObjectAttributeObstacle obstacle = 2;
  inline bool has_obstacle() const;
  inline void clear_obstacle();
  static const int kObstacleFieldNumber = 2;
  inline const ::Common::ObjectAttributeObstacle& obstacle() const;
  inline ::Common::ObjectAttributeObstacle* mutable_obstacle();
  
  // optional .Common.ObjectAttributeMine mine = 3;
  inline bool has_mine() const;
  inline void clear_mine();
  static const int kMineFieldNumber = 3;
  inline const ::Common::ObjectAttributeMine& mine() const;
  inline ::Common::ObjectAttributeMine* mutable_mine();
  
  // optional .Common.ObjectAttributeActivityTime activity_time = 4;
  inline bool has_activity_time() const;
  inline void clear_activity_time();
  static const int kActivityTimeFieldNumber = 4;
  inline const ::Common::ObjectAttributeActivityTime& activity_time() const;
  inline ::Common::ObjectAttributeActivityTime* mutable_activity_time();
  
  // optional .Common.ObjectAttributeBypass bypass = 5;
  inline bool has_bypass() const;
  inline void clear_bypass();
  static const int kBypassFieldNumber = 5;
  inline const ::Common::ObjectAttributeBypass& bypass() const;
  inline ::Common::ObjectAttributeBypass* mutable_bypass();
  
  // optional .Common.ObjectAttributeLogistic logistic = 6;
  inline bool has_logistic() const;
  inline void clear_logistic();
  static const int kLogisticFieldNumber = 6;
  inline const ::Common::ObjectAttributeLogistic& logistic() const;
  inline ::Common::ObjectAttributeLogistic* mutable_logistic();
  
  // optional .Common.ObjectAttributeNBC nbc = 7;
  inline bool has_nbc() const;
  inline void clear_nbc();
  static const int kNbcFieldNumber = 7;
  inline const ::Common::ObjectAttributeNBC& nbc() const;
  inline ::Common::ObjectAttributeNBC* mutable_nbc();
  
  // optional .Common.ObjectAttributeCrossingSite crossing_site = 8;
  inline bool has_crossing_site() const;
  inline void clear_crossing_site();
  static const int kCrossingSiteFieldNumber = 8;
  inline const ::Common::ObjectAttributeCrossingSite& crossing_site() const;
  inline ::Common::ObjectAttributeCrossingSite* mutable_crossing_site();
  
  // optional .Common.ObjectAttributeSupplyRoute supply_route = 9;
  inline bool has_supply_route() const;
  inline void clear_supply_route();
  static const int kSupplyRouteFieldNumber = 9;
  inline const ::Common::ObjectAttributeSupplyRoute& supply_route() const;
  inline ::Common::ObjectAttributeSupplyRoute* mutable_supply_route();
  
  // optional .Common.ObjectAttributeToxicCloud toxic_cloud = 10;
  inline bool has_toxic_cloud() const;
  inline void clear_toxic_cloud();
  static const int kToxicCloudFieldNumber = 10;
  inline const ::Common::ObjectAttributeToxicCloud& toxic_cloud() const;
  inline ::Common::ObjectAttributeToxicCloud* mutable_toxic_cloud();
  
  // optional .Common.ObjectAttributeFire fire = 11;
  inline bool has_fire() const;
  inline void clear_fire();
  static const int kFireFieldNumber = 11;
  inline const ::Common::ObjectAttributeFire& fire() const;
  inline ::Common::ObjectAttributeFire* mutable_fire();
  
  // optional .Common.ObjectAttributeMedicalTreatment medical_treatment = 12;
  inline bool has_medical_treatment() const;
  inline void clear_medical_treatment();
  static const int kMedicalTreatmentFieldNumber = 12;
  inline const ::Common::ObjectAttributeMedicalTreatment& medical_treatment() const;
  inline ::Common::ObjectAttributeMedicalTreatment* mutable_medical_treatment();
  
  // optional .Common.ObjectAttributeInteractionHeight interaction_height = 13;
  inline bool has_interaction_height() const;
  inline void clear_interaction_height();
  static const int kInteractionHeightFieldNumber = 13;
  inline const ::Common::ObjectAttributeInteractionHeight& interaction_height() const;
  inline ::Common::ObjectAttributeInteractionHeight* mutable_interaction_height();
  
  // optional .Common.ObjectAttributeStock stock = 14;
  inline bool has_stock() const;
  inline void clear_stock();
  static const int kStockFieldNumber = 14;
  inline const ::Common::ObjectAttributeStock& stock() const;
  inline ::Common::ObjectAttributeStock* mutable_stock();
  
  // optional .Common.ObjectAttributeNBCType nbc_agent = 15;
  inline bool has_nbc_agent() const;
  inline void clear_nbc_agent();
  static const int kNbcAgentFieldNumber = 15;
  inline const ::Common::ObjectAttributeNBCType& nbc_agent() const;
  inline ::Common::ObjectAttributeNBCType* mutable_nbc_agent();
  
  // optional .Common.ObjectAttributeEffectDelay effect_delay = 16;
  inline bool has_effect_delay() const;
  inline void clear_effect_delay();
  static const int kEffectDelayFieldNumber = 16;
  inline const ::Common::ObjectAttributeEffectDelay& effect_delay() const;
  inline ::Common::ObjectAttributeEffectDelay* mutable_effect_delay();
  
  // optional .Common.ObjectAttributeSealOff seal_off = 17;
  inline bool has_seal_off() const;
  inline void clear_seal_off();
  static const int kSealOffFieldNumber = 17;
  inline const ::Common::ObjectAttributeSealOff& seal_off() const;
  inline ::Common::ObjectAttributeSealOff* mutable_seal_off();
  
  // optional .Common.ObjectAttributeResourceNetwork resource_networks = 18;
  inline bool has_resource_networks() const;
  inline void clear_resource_networks();
  static const int kResourceNetworksFieldNumber = 18;
  inline const ::Common::ObjectAttributeResourceNetwork& resource_networks() const;
  inline ::Common::ObjectAttributeResourceNetwork* mutable_resource_networks();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::ObjectAttributeConstruction* construction_;
  ::Common::ObjectAttributeObstacle* obstacle_;
  ::Common::ObjectAttributeMine* mine_;
  ::Common::ObjectAttributeActivityTime* activity_time_;
  ::Common::ObjectAttributeBypass* bypass_;
  ::Common::ObjectAttributeLogistic* logistic_;
  ::Common::ObjectAttributeNBC* nbc_;
  ::Common::ObjectAttributeCrossingSite* crossing_site_;
  ::Common::ObjectAttributeSupplyRoute* supply_route_;
  ::Common::ObjectAttributeToxicCloud* toxic_cloud_;
  ::Common::ObjectAttributeFire* fire_;
  ::Common::ObjectAttributeMedicalTreatment* medical_treatment_;
  ::Common::ObjectAttributeInteractionHeight* interaction_height_;
  ::Common::ObjectAttributeStock* stock_;
  ::Common::ObjectAttributeNBCType* nbc_agent_;
  ::Common::ObjectAttributeEffectDelay* effect_delay_;
  ::Common::ObjectAttributeSealOff* seal_off_;
  ::Common::ObjectAttributeResourceNetwork* resource_networks_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ObjectAttributes* default_instance_;
};
// -------------------------------------------------------------------

class MsgNote : public ::google::protobuf::Message {
 public:
  MsgNote();
  virtual ~MsgNote();
  
  MsgNote(const MsgNote& from);
  
  inline MsgNote& operator=(const MsgNote& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNote& default_instance();
  void Swap(MsgNote* other);
  
  // implements Message ----------------------------------------------
  
  MsgNote* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNote& from);
  void MergeFrom(const MsgNote& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // required string number = 2;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 2;
  inline const ::std::string& number() const;
  inline void set_number(const ::std::string& value);
  inline void set_number(const char* value);
  inline void set_number(const char* value, size_t size);
  inline ::std::string* mutable_number();
  
  // required string description = 3;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 3;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  
  // required uint32 parent = 4;
  inline bool has_parent() const;
  inline void clear_parent();
  static const int kParentFieldNumber = 4;
  inline ::google::protobuf::uint32 parent() const;
  inline void set_parent(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::std::string* number_;
  static const ::std::string _default_number_;
  ::std::string* description_;
  static const ::std::string _default_description_;
  ::google::protobuf::uint32 parent_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgNote* default_instance_;
};
// -------------------------------------------------------------------

class MsgWeatherAttributes : public ::google::protobuf::Message {
 public:
  MsgWeatherAttributes();
  virtual ~MsgWeatherAttributes();
  
  MsgWeatherAttributes(const MsgWeatherAttributes& from);
  
  inline MsgWeatherAttributes& operator=(const MsgWeatherAttributes& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgWeatherAttributes& default_instance();
  void Swap(MsgWeatherAttributes* other);
  
  // implements Message ----------------------------------------------
  
  MsgWeatherAttributes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgWeatherAttributes& from);
  void MergeFrom(const MsgWeatherAttributes& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 temperature = 1;
  inline bool has_temperature() const;
  inline void clear_temperature();
  static const int kTemperatureFieldNumber = 1;
  inline ::google::protobuf::int32 temperature() const;
  inline void set_temperature(::google::protobuf::int32 value);
  
  // required int32 wind_speed = 2;
  inline bool has_wind_speed() const;
  inline void clear_wind_speed();
  static const int kWindSpeedFieldNumber = 2;
  inline ::google::protobuf::int32 wind_speed() const;
  inline void set_wind_speed(::google::protobuf::int32 value);
  
  // required .Common.MsgHeading wind_direction = 3;
  inline bool has_wind_direction() const;
  inline void clear_wind_direction();
  static const int kWindDirectionFieldNumber = 3;
  inline const ::Common::MsgHeading& wind_direction() const;
  inline ::Common::MsgHeading* mutable_wind_direction();
  
  // required int32 cloud_floor = 4;
  inline bool has_cloud_floor() const;
  inline void clear_cloud_floor();
  static const int kCloudFloorFieldNumber = 4;
  inline ::google::protobuf::int32 cloud_floor() const;
  inline void set_cloud_floor(::google::protobuf::int32 value);
  
  // required int32 cloud_ceiling = 5;
  inline bool has_cloud_ceiling() const;
  inline void clear_cloud_ceiling();
  static const int kCloudCeilingFieldNumber = 5;
  inline ::google::protobuf::int32 cloud_ceiling() const;
  inline void set_cloud_ceiling(::google::protobuf::int32 value);
  
  // required int32 cloud_density = 6;
  inline bool has_cloud_density() const;
  inline void clear_cloud_density();
  static const int kCloudDensityFieldNumber = 6;
  inline ::google::protobuf::int32 cloud_density() const;
  inline void set_cloud_density(::google::protobuf::int32 value);
  
  // required .Common.EnumPrecipitationType precipitation = 7;
  inline bool has_precipitation() const;
  inline void clear_precipitation();
  static const int kPrecipitationFieldNumber = 7;
  inline Common::EnumPrecipitationType precipitation() const;
  inline void set_precipitation(Common::EnumPrecipitationType value);
  
  // required .Common.EnumLightingType lighting = 8;
  inline bool has_lighting() const;
  inline void clear_lighting();
  static const int kLightingFieldNumber = 8;
  inline Common::EnumLightingType lighting() const;
  inline void set_lighting(Common::EnumLightingType value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 temperature_;
  ::google::protobuf::int32 wind_speed_;
  ::Common::MsgHeading* wind_direction_;
  ::google::protobuf::int32 cloud_floor_;
  ::google::protobuf::int32 cloud_ceiling_;
  ::google::protobuf::int32 cloud_density_;
  int precipitation_;
  int lighting_;
  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgWeatherAttributes* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// AutomatId

// required uint32 id = 1;
inline bool AutomatId::has_id() const {
  return _has_bit(0);
}
inline void AutomatId::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 AutomatId::id() const {
  return id_;
}
inline void AutomatId::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// AutomatIdList

// repeated .Common.AutomatId elem = 1;
inline int AutomatIdList::elem_size() const {
  return elem_.size();
}
inline void AutomatIdList::clear_elem() {
  elem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::AutomatId >&
AutomatIdList::elem() const {
  return elem_;
}
inline ::google::protobuf::RepeatedPtrField< ::Common::AutomatId >*
AutomatIdList::mutable_elem() {
  return &elem_;
}
inline const ::Common::AutomatId& AutomatIdList::elem(int index) const {
  return elem_.Get(index);
}
inline ::Common::AutomatId* AutomatIdList::mutable_elem(int index) {
  return elem_.Mutable(index);
}
inline ::Common::AutomatId* AutomatIdList::add_elem() {
  return elem_.Add();
}

// -------------------------------------------------------------------

// FormationId

// required uint32 id = 1;
inline bool FormationId::has_id() const {
  return _has_bit(0);
}
inline void FormationId::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 FormationId::id() const {
  return id_;
}
inline void FormationId::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// FormationIdList

// repeated .Common.FormationId elem = 1;
inline int FormationIdList::elem_size() const {
  return elem_.size();
}
inline void FormationIdList::clear_elem() {
  elem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::FormationId >&
FormationIdList::elem() const {
  return elem_;
}
inline ::google::protobuf::RepeatedPtrField< ::Common::FormationId >*
FormationIdList::mutable_elem() {
  return &elem_;
}
inline const ::Common::FormationId& FormationIdList::elem(int index) const {
  return elem_.Get(index);
}
inline ::Common::FormationId* FormationIdList::mutable_elem(int index) {
  return elem_.Mutable(index);
}
inline ::Common::FormationId* FormationIdList::add_elem() {
  return elem_.Add();
}

// -------------------------------------------------------------------

// KnowledgeGroupId

// required uint32 id = 1;
inline bool KnowledgeGroupId::has_id() const {
  return _has_bit(0);
}
inline void KnowledgeGroupId::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 KnowledgeGroupId::id() const {
  return id_;
}
inline void KnowledgeGroupId::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// ObjectId

// required uint32 id = 1;
inline bool ObjectId::has_id() const {
  return _has_bit(0);
}
inline void ObjectId::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 ObjectId::id() const {
  return id_;
}
inline void ObjectId::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// ObjectKnowledgeId

// required uint32 id = 1;
inline bool ObjectKnowledgeId::has_id() const {
  return _has_bit(0);
}
inline void ObjectKnowledgeId::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 ObjectKnowledgeId::id() const {
  return id_;
}
inline void ObjectKnowledgeId::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// ObjectKnowledgeIdList

// repeated .Common.ObjectKnowledgeId elem = 1;
inline int ObjectKnowledgeIdList::elem_size() const {
  return elem_.size();
}
inline void ObjectKnowledgeIdList::clear_elem() {
  elem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::ObjectKnowledgeId >&
ObjectKnowledgeIdList::elem() const {
  return elem_;
}
inline ::google::protobuf::RepeatedPtrField< ::Common::ObjectKnowledgeId >*
ObjectKnowledgeIdList::mutable_elem() {
  return &elem_;
}
inline const ::Common::ObjectKnowledgeId& ObjectKnowledgeIdList::elem(int index) const {
  return elem_.Get(index);
}
inline ::Common::ObjectKnowledgeId* ObjectKnowledgeIdList::mutable_elem(int index) {
  return elem_.Mutable(index);
}
inline ::Common::ObjectKnowledgeId* ObjectKnowledgeIdList::add_elem() {
  return elem_.Add();
}

// -------------------------------------------------------------------

// PartyId

// required uint32 id = 1;
inline bool PartyId::has_id() const {
  return _has_bit(0);
}
inline void PartyId::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PartyId::id() const {
  return id_;
}
inline void PartyId::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// PartyIdList

// repeated .Common.PartyId elem = 1;
inline int PartyIdList::elem_size() const {
  return elem_.size();
}
inline void PartyIdList::clear_elem() {
  elem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::PartyId >&
PartyIdList::elem() const {
  return elem_;
}
inline ::google::protobuf::RepeatedPtrField< ::Common::PartyId >*
PartyIdList::mutable_elem() {
  return &elem_;
}
inline const ::Common::PartyId& PartyIdList::elem(int index) const {
  return elem_.Get(index);
}
inline ::Common::PartyId* PartyIdList::mutable_elem(int index) {
  return elem_.Mutable(index);
}
inline ::Common::PartyId* PartyIdList::add_elem() {
  return elem_.Add();
}

// -------------------------------------------------------------------

// CrowdId

// required uint32 id = 1;
inline bool CrowdId::has_id() const {
  return _has_bit(0);
}
inline void CrowdId::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CrowdId::id() const {
  return id_;
}
inline void CrowdId::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// CrowdIdList

// repeated .Common.CrowdId elem = 1;
inline int CrowdIdList::elem_size() const {
  return elem_.size();
}
inline void CrowdIdList::clear_elem() {
  elem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::CrowdId >&
CrowdIdList::elem() const {
  return elem_;
}
inline ::google::protobuf::RepeatedPtrField< ::Common::CrowdId >*
CrowdIdList::mutable_elem() {
  return &elem_;
}
inline const ::Common::CrowdId& CrowdIdList::elem(int index) const {
  return elem_.Get(index);
}
inline ::Common::CrowdId* CrowdIdList::mutable_elem(int index) {
  return elem_.Mutable(index);
}
inline ::Common::CrowdId* CrowdIdList::add_elem() {
  return elem_.Add();
}

// -------------------------------------------------------------------

// CrowdKnowledgeId

// required uint32 id = 1;
inline bool CrowdKnowledgeId::has_id() const {
  return _has_bit(0);
}
inline void CrowdKnowledgeId::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CrowdKnowledgeId::id() const {
  return id_;
}
inline void CrowdKnowledgeId::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// CrowdConcentrationId

// required uint32 id = 1;
inline bool CrowdConcentrationId::has_id() const {
  return _has_bit(0);
}
inline void CrowdConcentrationId::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CrowdConcentrationId::id() const {
  return id_;
}
inline void CrowdConcentrationId::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// CrowdConcentrationKnowledgeId

// required uint32 id = 1;
inline bool CrowdConcentrationKnowledgeId::has_id() const {
  return _has_bit(0);
}
inline void CrowdConcentrationKnowledgeId::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CrowdConcentrationKnowledgeId::id() const {
  return id_;
}
inline void CrowdConcentrationKnowledgeId::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// CrowdFlowId

// required uint32 id = 1;
inline bool CrowdFlowId::has_id() const {
  return _has_bit(0);
}
inline void CrowdFlowId::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CrowdFlowId::id() const {
  return id_;
}
inline void CrowdFlowId::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// CrowdFlowKnowledgeId

// required uint32 id = 1;
inline bool CrowdFlowKnowledgeId::has_id() const {
  return _has_bit(0);
}
inline void CrowdFlowKnowledgeId::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CrowdFlowKnowledgeId::id() const {
  return id_;
}
inline void CrowdFlowKnowledgeId::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// UnitId

// required uint32 id = 1;
inline bool UnitId::has_id() const {
  return _has_bit(0);
}
inline void UnitId::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 UnitId::id() const {
  return id_;
}
inline void UnitId::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// UnitIdList

// repeated .Common.UnitId elem = 1;
inline int UnitIdList::elem_size() const {
  return elem_.size();
}
inline void UnitIdList::clear_elem() {
  elem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::UnitId >&
UnitIdList::elem() const {
  return elem_;
}
inline ::google::protobuf::RepeatedPtrField< ::Common::UnitId >*
UnitIdList::mutable_elem() {
  return &elem_;
}
inline const ::Common::UnitId& UnitIdList::elem(int index) const {
  return elem_.Get(index);
}
inline ::Common::UnitId* UnitIdList::mutable_elem(int index) {
  return elem_.Mutable(index);
}
inline ::Common::UnitId* UnitIdList::add_elem() {
  return elem_.Add();
}

// -------------------------------------------------------------------

// UnitKnowledgeId

// required uint32 id = 1;
inline bool UnitKnowledgeId::has_id() const {
  return _has_bit(0);
}
inline void UnitKnowledgeId::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 UnitKnowledgeId::id() const {
  return id_;
}
inline void UnitKnowledgeId::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// UnitKnowledgeIdList

// repeated .Common.UnitKnowledgeId elem = 1;
inline int UnitKnowledgeIdList::elem_size() const {
  return elem_.size();
}
inline void UnitKnowledgeIdList::clear_elem() {
  elem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::UnitKnowledgeId >&
UnitKnowledgeIdList::elem() const {
  return elem_;
}
inline ::google::protobuf::RepeatedPtrField< ::Common::UnitKnowledgeId >*
UnitKnowledgeIdList::mutable_elem() {
  return &elem_;
}
inline const ::Common::UnitKnowledgeId& UnitKnowledgeIdList::elem(int index) const {
  return elem_.Get(index);
}
inline ::Common::UnitKnowledgeId* UnitKnowledgeIdList::mutable_elem(int index) {
  return elem_.Mutable(index);
}
inline ::Common::UnitKnowledgeId* UnitKnowledgeIdList::add_elem() {
  return elem_.Add();
}

// -------------------------------------------------------------------

// UrbanObjectId

// required uint32 id = 1;
inline bool UrbanObjectId::has_id() const {
  return _has_bit(0);
}
inline void UrbanObjectId::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 UrbanObjectId::id() const {
  return id_;
}
inline void UrbanObjectId::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// UrbanObjectKnowledgeId

// required uint32 id = 1;
inline bool UrbanObjectKnowledgeId::has_id() const {
  return _has_bit(0);
}
inline void UrbanObjectKnowledgeId::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 UrbanObjectKnowledgeId::id() const {
  return id_;
}
inline void UrbanObjectKnowledgeId::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// ClientObjectId

// required uint32 id = 1;
inline bool ClientObjectId::has_id() const {
  return _has_bit(0);
}
inline void ClientObjectId::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 ClientObjectId::id() const {
  return id_;
}
inline void ClientObjectId::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// Tasker

// optional .Common.AutomatId automat = 1;
inline bool Tasker::has_automat() const {
  return _has_bit(0);
}
inline void Tasker::clear_automat() {
  if (automat_ != NULL) automat_->::Common::AutomatId::Clear();
  _clear_bit(0);
}
inline const ::Common::AutomatId& Tasker::automat() const {
  return automat_ != NULL ? *automat_ : *default_instance_->automat_;
}
inline ::Common::AutomatId* Tasker::mutable_automat() {
  _set_bit(0);
  if (automat_ == NULL) automat_ = new ::Common::AutomatId;
  return automat_;
}

// optional .Common.FormationId formation = 2;
inline bool Tasker::has_formation() const {
  return _has_bit(1);
}
inline void Tasker::clear_formation() {
  if (formation_ != NULL) formation_->::Common::FormationId::Clear();
  _clear_bit(1);
}
inline const ::Common::FormationId& Tasker::formation() const {
  return formation_ != NULL ? *formation_ : *default_instance_->formation_;
}
inline ::Common::FormationId* Tasker::mutable_formation() {
  _set_bit(1);
  if (formation_ == NULL) formation_ = new ::Common::FormationId;
  return formation_;
}

// optional .Common.CrowdId crowd = 3;
inline bool Tasker::has_crowd() const {
  return _has_bit(2);
}
inline void Tasker::clear_crowd() {
  if (crowd_ != NULL) crowd_->::Common::CrowdId::Clear();
  _clear_bit(2);
}
inline const ::Common::CrowdId& Tasker::crowd() const {
  return crowd_ != NULL ? *crowd_ : *default_instance_->crowd_;
}
inline ::Common::CrowdId* Tasker::mutable_crowd() {
  _set_bit(2);
  if (crowd_ == NULL) crowd_ = new ::Common::CrowdId;
  return crowd_;
}

// optional .Common.UnitId unit = 4;
inline bool Tasker::has_unit() const {
  return _has_bit(3);
}
inline void Tasker::clear_unit() {
  if (unit_ != NULL) unit_->::Common::UnitId::Clear();
  _clear_bit(3);
}
inline const ::Common::UnitId& Tasker::unit() const {
  return unit_ != NULL ? *unit_ : *default_instance_->unit_;
}
inline ::Common::UnitId* Tasker::mutable_unit() {
  _set_bit(3);
  if (unit_ == NULL) unit_ = new ::Common::UnitId;
  return unit_;
}

// optional .Common.PartyId party = 5;
inline bool Tasker::has_party() const {
  return _has_bit(4);
}
inline void Tasker::clear_party() {
  if (party_ != NULL) party_->::Common::PartyId::Clear();
  _clear_bit(4);
}
inline const ::Common::PartyId& Tasker::party() const {
  return party_ != NULL ? *party_ : *default_instance_->party_;
}
inline ::Common::PartyId* Tasker::mutable_party() {
  _set_bit(4);
  if (party_ == NULL) party_ = new ::Common::PartyId;
  return party_;
}

// -------------------------------------------------------------------

// ParentEntity

// optional .Common.AutomatId automat = 1;
inline bool ParentEntity::has_automat() const {
  return _has_bit(0);
}
inline void ParentEntity::clear_automat() {
  if (automat_ != NULL) automat_->::Common::AutomatId::Clear();
  _clear_bit(0);
}
inline const ::Common::AutomatId& ParentEntity::automat() const {
  return automat_ != NULL ? *automat_ : *default_instance_->automat_;
}
inline ::Common::AutomatId* ParentEntity::mutable_automat() {
  _set_bit(0);
  if (automat_ == NULL) automat_ = new ::Common::AutomatId;
  return automat_;
}

// optional .Common.FormationId formation = 2;
inline bool ParentEntity::has_formation() const {
  return _has_bit(1);
}
inline void ParentEntity::clear_formation() {
  if (formation_ != NULL) formation_->::Common::FormationId::Clear();
  _clear_bit(1);
}
inline const ::Common::FormationId& ParentEntity::formation() const {
  return formation_ != NULL ? *formation_ : *default_instance_->formation_;
}
inline ::Common::FormationId* ParentEntity::mutable_formation() {
  _set_bit(1);
  if (formation_ == NULL) formation_ = new ::Common::FormationId;
  return formation_;
}

// -------------------------------------------------------------------

// DrawingId

// required uint32 id = 1;
inline bool DrawingId::has_id() const {
  return _has_bit(0);
}
inline void DrawingId::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 DrawingId::id() const {
  return id_;
}
inline void DrawingId::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// IntelligenceId

// required uint32 id = 1;
inline bool IntelligenceId::has_id() const {
  return _has_bit(0);
}
inline void IntelligenceId::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 IntelligenceId::id() const {
  return id_;
}
inline void IntelligenceId::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// TacticalLineId

// required uint32 id = 1;
inline bool TacticalLineId::has_id() const {
  return _has_bit(0);
}
inline void TacticalLineId::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 TacticalLineId::id() const {
  return id_;
}
inline void TacticalLineId::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// MarkerId

// required uint32 id = 1;
inline bool MarkerId::has_id() const {
  return _has_bit(0);
}
inline void MarkerId::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MarkerId::id() const {
  return id_;
}
inline void MarkerId::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// FireId

// required uint32 id = 1;
inline bool FireId::has_id() const {
  return _has_bit(0);
}
inline void FireId::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 FireId::id() const {
  return id_;
}
inline void FireId::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// FireEffectId

// required uint32 id = 1;
inline bool FireEffectId::has_id() const {
  return _has_bit(0);
}
inline void FireEffectId::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 FireEffectId::id() const {
  return id_;
}
inline void FireEffectId::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// ReportId

// required uint32 id = 1;
inline bool ReportId::has_id() const {
  return _has_bit(0);
}
inline void ReportId::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 ReportId::id() const {
  return id_;
}
inline void ReportId::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// WeatherId

// required uint32 id = 1;
inline bool WeatherId::has_id() const {
  return _has_bit(0);
}
inline void WeatherId::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 WeatherId::id() const {
  return id_;
}
inline void WeatherId::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// MaintenanceRequestId

// required uint32 id = 1;
inline bool MaintenanceRequestId::has_id() const {
  return _has_bit(0);
}
inline void MaintenanceRequestId::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MaintenanceRequestId::id() const {
  return id_;
}
inline void MaintenanceRequestId::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// MedicalRequestId

// required uint32 id = 1;
inline bool MedicalRequestId::has_id() const {
  return _has_bit(0);
}
inline void MedicalRequestId::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MedicalRequestId::id() const {
  return id_;
}
inline void MedicalRequestId::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// SupplyRequestId

// required uint32 id = 1;
inline bool SupplyRequestId::has_id() const {
  return _has_bit(0);
}
inline void SupplyRequestId::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 SupplyRequestId::id() const {
  return id_;
}
inline void SupplyRequestId::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// AutomatType

// required uint32 id = 1;
inline bool AutomatType::has_id() const {
  return _has_bit(0);
}
inline void AutomatType::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 AutomatType::id() const {
  return id_;
}
inline void AutomatType::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// BreakdownType

// required uint32 id = 1;
inline bool BreakdownType::has_id() const {
  return _has_bit(0);
}
inline void BreakdownType::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 BreakdownType::id() const {
  return id_;
}
inline void BreakdownType::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// EquipmentType

// required uint32 id = 1;
inline bool EquipmentType::has_id() const {
  return _has_bit(0);
}
inline void EquipmentType::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 EquipmentType::id() const {
  return id_;
}
inline void EquipmentType::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// FragOrderType

// required uint32 id = 1;
inline bool FragOrderType::has_id() const {
  return _has_bit(0);
}
inline void FragOrderType::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 FragOrderType::id() const {
  return id_;
}
inline void FragOrderType::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// MissionType

// required uint32 id = 1;
inline bool MissionType::has_id() const {
  return _has_bit(0);
}
inline void MissionType::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MissionType::id() const {
  return id_;
}
inline void MissionType::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// NBCAgentType

// required uint32 id = 1;
inline bool NBCAgentType::has_id() const {
  return _has_bit(0);
}
inline void NBCAgentType::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 NBCAgentType::id() const {
  return id_;
}
inline void NBCAgentType::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// ObjectType

// required string id = 1;
inline bool ObjectType::has_id() const {
  return _has_bit(0);
}
inline void ObjectType::clear_id() {
  if (id_ != &_default_id_) {
    id_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& ObjectType::id() const {
  return *id_;
}
inline void ObjectType::set_id(const ::std::string& value) {
  _set_bit(0);
  if (id_ == &_default_id_) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void ObjectType::set_id(const char* value) {
  _set_bit(0);
  if (id_ == &_default_id_) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void ObjectType::set_id(const char* value, size_t size) {
  _set_bit(0);
  if (id_ == &_default_id_) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ObjectType::mutable_id() {
  _set_bit(0);
  if (id_ == &_default_id_) {
    id_ = new ::std::string;
  }
  return id_;
}

// -------------------------------------------------------------------

// CrowdType

// required uint32 id = 1;
inline bool CrowdType::has_id() const {
  return _has_bit(0);
}
inline void CrowdType::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CrowdType::id() const {
  return id_;
}
inline void CrowdType::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// ReportType

// required uint32 id = 1;
inline bool ReportType::has_id() const {
  return _has_bit(0);
}
inline void ReportType::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 ReportType::id() const {
  return id_;
}
inline void ReportType::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// ResourceType

// required uint32 id = 1;
inline bool ResourceType::has_id() const {
  return _has_bit(0);
}
inline void ResourceType::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 ResourceType::id() const {
  return id_;
}
inline void ResourceType::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// UnitType

// required uint32 id = 1;
inline bool UnitType::has_id() const {
  return _has_bit(0);
}
inline void UnitType::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 UnitType::id() const {
  return id_;
}
inline void UnitType::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// ResourceNetworkType

// required string name = 1;
inline bool ResourceNetworkType::has_name() const {
  return _has_bit(0);
}
inline void ResourceNetworkType::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& ResourceNetworkType::name() const {
  return *name_;
}
inline void ResourceNetworkType::set_name(const ::std::string& value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ResourceNetworkType::set_name(const char* value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ResourceNetworkType::set_name(const char* value, size_t size) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResourceNetworkType::mutable_name() {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// -------------------------------------------------------------------

// MsgHeading

// required int32 heading = 1;
inline bool MsgHeading::has_heading() const {
  return _has_bit(0);
}
inline void MsgHeading::clear_heading() {
  heading_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 MsgHeading::heading() const {
  return heading_;
}
inline void MsgHeading::set_heading(::google::protobuf::int32 value) {
  _set_bit(0);
  heading_ = value;
}

// -------------------------------------------------------------------

// MsgDateTime

// required string data = 1;
inline bool MsgDateTime::has_data() const {
  return _has_bit(0);
}
inline void MsgDateTime::clear_data() {
  if (data_ != &_default_data_) {
    data_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgDateTime::data() const {
  return *data_;
}
inline void MsgDateTime::set_data(const ::std::string& value) {
  _set_bit(0);
  if (data_ == &_default_data_) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void MsgDateTime::set_data(const char* value) {
  _set_bit(0);
  if (data_ == &_default_data_) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void MsgDateTime::set_data(const char* value, size_t size) {
  _set_bit(0);
  if (data_ == &_default_data_) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgDateTime::mutable_data() {
  _set_bit(0);
  if (data_ == &_default_data_) {
    data_ = new ::std::string;
  }
  return data_;
}

// -------------------------------------------------------------------

// MsgDotationStock

// required .Common.ResourceType ressource_id = 1;
inline bool MsgDotationStock::has_ressource_id() const {
  return _has_bit(0);
}
inline void MsgDotationStock::clear_ressource_id() {
  if (ressource_id_ != NULL) ressource_id_->::Common::ResourceType::Clear();
  _clear_bit(0);
}
inline const ::Common::ResourceType& MsgDotationStock::ressource_id() const {
  return ressource_id_ != NULL ? *ressource_id_ : *default_instance_->ressource_id_;
}
inline ::Common::ResourceType* MsgDotationStock::mutable_ressource_id() {
  _set_bit(0);
  if (ressource_id_ == NULL) ressource_id_ = new ::Common::ResourceType;
  return ressource_id_;
}

// required int32 quantite_disponible = 2;
inline bool MsgDotationStock::has_quantite_disponible() const {
  return _has_bit(1);
}
inline void MsgDotationStock::clear_quantite_disponible() {
  quantite_disponible_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 MsgDotationStock::quantite_disponible() const {
  return quantite_disponible_;
}
inline void MsgDotationStock::set_quantite_disponible(::google::protobuf::int32 value) {
  _set_bit(1);
  quantite_disponible_ = value;
}

// -------------------------------------------------------------------

// SeqOfDotationStock

// repeated .Common.MsgDotationStock elem = 1;
inline int SeqOfDotationStock::elem_size() const {
  return elem_.size();
}
inline void SeqOfDotationStock::clear_elem() {
  elem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgDotationStock >&
SeqOfDotationStock::elem() const {
  return elem_;
}
inline ::google::protobuf::RepeatedPtrField< ::Common::MsgDotationStock >*
SeqOfDotationStock::mutable_elem() {
  return &elem_;
}
inline const ::Common::MsgDotationStock& SeqOfDotationStock::elem(int index) const {
  return elem_.Get(index);
}
inline ::Common::MsgDotationStock* SeqOfDotationStock::mutable_elem(int index) {
  return elem_.Mutable(index);
}
inline ::Common::MsgDotationStock* SeqOfDotationStock::add_elem() {
  return elem_.Add();
}

// -------------------------------------------------------------------

// MsgDotationQuota

// required .Common.ResourceType ressource_id = 1;
inline bool MsgDotationQuota::has_ressource_id() const {
  return _has_bit(0);
}
inline void MsgDotationQuota::clear_ressource_id() {
  if (ressource_id_ != NULL) ressource_id_->::Common::ResourceType::Clear();
  _clear_bit(0);
}
inline const ::Common::ResourceType& MsgDotationQuota::ressource_id() const {
  return ressource_id_ != NULL ? *ressource_id_ : *default_instance_->ressource_id_;
}
inline ::Common::ResourceType* MsgDotationQuota::mutable_ressource_id() {
  _set_bit(0);
  if (ressource_id_ == NULL) ressource_id_ = new ::Common::ResourceType;
  return ressource_id_;
}

// required int32 quota_disponible = 2;
inline bool MsgDotationQuota::has_quota_disponible() const {
  return _has_bit(1);
}
inline void MsgDotationQuota::clear_quota_disponible() {
  quota_disponible_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 MsgDotationQuota::quota_disponible() const {
  return quota_disponible_;
}
inline void MsgDotationQuota::set_quota_disponible(::google::protobuf::int32 value) {
  _set_bit(1);
  quota_disponible_ = value;
}

// -------------------------------------------------------------------

// SeqOfDotationQuota

// repeated .Common.MsgDotationQuota elem = 1;
inline int SeqOfDotationQuota::elem_size() const {
  return elem_.size();
}
inline void SeqOfDotationQuota::clear_elem() {
  elem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgDotationQuota >&
SeqOfDotationQuota::elem() const {
  return elem_;
}
inline ::google::protobuf::RepeatedPtrField< ::Common::MsgDotationQuota >*
SeqOfDotationQuota::mutable_elem() {
  return &elem_;
}
inline const ::Common::MsgDotationQuota& SeqOfDotationQuota::elem(int index) const {
  return elem_.Get(index);
}
inline ::Common::MsgDotationQuota* SeqOfDotationQuota::mutable_elem(int index) {
  return elem_.Mutable(index);
}
inline ::Common::MsgDotationQuota* SeqOfDotationQuota::add_elem() {
  return elem_.Add();
}

// -------------------------------------------------------------------

// MsgAutomatChangeKnowledgeGroup

// required .Common.AutomatId automat = 1;
inline bool MsgAutomatChangeKnowledgeGroup::has_automat() const {
  return _has_bit(0);
}
inline void MsgAutomatChangeKnowledgeGroup::clear_automat() {
  if (automat_ != NULL) automat_->::Common::AutomatId::Clear();
  _clear_bit(0);
}
inline const ::Common::AutomatId& MsgAutomatChangeKnowledgeGroup::automat() const {
  return automat_ != NULL ? *automat_ : *default_instance_->automat_;
}
inline ::Common::AutomatId* MsgAutomatChangeKnowledgeGroup::mutable_automat() {
  _set_bit(0);
  if (automat_ == NULL) automat_ = new ::Common::AutomatId;
  return automat_;
}

// required .Common.PartyId party = 2;
inline bool MsgAutomatChangeKnowledgeGroup::has_party() const {
  return _has_bit(1);
}
inline void MsgAutomatChangeKnowledgeGroup::clear_party() {
  if (party_ != NULL) party_->::Common::PartyId::Clear();
  _clear_bit(1);
}
inline const ::Common::PartyId& MsgAutomatChangeKnowledgeGroup::party() const {
  return party_ != NULL ? *party_ : *default_instance_->party_;
}
inline ::Common::PartyId* MsgAutomatChangeKnowledgeGroup::mutable_party() {
  _set_bit(1);
  if (party_ == NULL) party_ = new ::Common::PartyId;
  return party_;
}

// required .Common.KnowledgeGroupId knowledge_group = 3;
inline bool MsgAutomatChangeKnowledgeGroup::has_knowledge_group() const {
  return _has_bit(2);
}
inline void MsgAutomatChangeKnowledgeGroup::clear_knowledge_group() {
  if (knowledge_group_ != NULL) knowledge_group_->::Common::KnowledgeGroupId::Clear();
  _clear_bit(2);
}
inline const ::Common::KnowledgeGroupId& MsgAutomatChangeKnowledgeGroup::knowledge_group() const {
  return knowledge_group_ != NULL ? *knowledge_group_ : *default_instance_->knowledge_group_;
}
inline ::Common::KnowledgeGroupId* MsgAutomatChangeKnowledgeGroup::mutable_knowledge_group() {
  _set_bit(2);
  if (knowledge_group_ == NULL) knowledge_group_ = new ::Common::KnowledgeGroupId;
  return knowledge_group_;
}

// -------------------------------------------------------------------

// MsgChangeLogisticLinks

// required .Common.ParentEntity requester = 1;
inline bool MsgChangeLogisticLinks::has_requester() const {
  return _has_bit(0);
}
inline void MsgChangeLogisticLinks::clear_requester() {
  if (requester_ != NULL) requester_->::Common::ParentEntity::Clear();
  _clear_bit(0);
}
inline const ::Common::ParentEntity& MsgChangeLogisticLinks::requester() const {
  return requester_ != NULL ? *requester_ : *default_instance_->requester_;
}
inline ::Common::ParentEntity* MsgChangeLogisticLinks::mutable_requester() {
  _set_bit(0);
  if (requester_ == NULL) requester_ = new ::Common::ParentEntity;
  return requester_;
}

// optional .Common.AutomatId tc2 = 2;
inline bool MsgChangeLogisticLinks::has_tc2() const {
  return _has_bit(1);
}
inline void MsgChangeLogisticLinks::clear_tc2() {
  if (tc2_ != NULL) tc2_->::Common::AutomatId::Clear();
  _clear_bit(1);
}
inline const ::Common::AutomatId& MsgChangeLogisticLinks::tc2() const {
  return tc2_ != NULL ? *tc2_ : *default_instance_->tc2_;
}
inline ::Common::AutomatId* MsgChangeLogisticLinks::mutable_tc2() {
  _set_bit(1);
  if (tc2_ == NULL) tc2_ = new ::Common::AutomatId;
  return tc2_;
}

// optional .Common.ParentEntity logistic_base = 3;
inline bool MsgChangeLogisticLinks::has_logistic_base() const {
  return _has_bit(2);
}
inline void MsgChangeLogisticLinks::clear_logistic_base() {
  if (logistic_base_ != NULL) logistic_base_->::Common::ParentEntity::Clear();
  _clear_bit(2);
}
inline const ::Common::ParentEntity& MsgChangeLogisticLinks::logistic_base() const {
  return logistic_base_ != NULL ? *logistic_base_ : *default_instance_->logistic_base_;
}
inline ::Common::ParentEntity* MsgChangeLogisticLinks::mutable_logistic_base() {
  _set_bit(2);
  if (logistic_base_ == NULL) logistic_base_ = new ::Common::ParentEntity;
  return logistic_base_;
}

// -------------------------------------------------------------------

// MsgAutomatChangeSuperior_oid_superior

// optional .Common.FormationId formation = 1;
inline bool MsgAutomatChangeSuperior_oid_superior::has_formation() const {
  return _has_bit(0);
}
inline void MsgAutomatChangeSuperior_oid_superior::clear_formation() {
  if (formation_ != NULL) formation_->::Common::FormationId::Clear();
  _clear_bit(0);
}
inline const ::Common::FormationId& MsgAutomatChangeSuperior_oid_superior::formation() const {
  return formation_ != NULL ? *formation_ : *default_instance_->formation_;
}
inline ::Common::FormationId* MsgAutomatChangeSuperior_oid_superior::mutable_formation() {
  _set_bit(0);
  if (formation_ == NULL) formation_ = new ::Common::FormationId;
  return formation_;
}

// optional .Common.AutomatId automat = 2;
inline bool MsgAutomatChangeSuperior_oid_superior::has_automat() const {
  return _has_bit(1);
}
inline void MsgAutomatChangeSuperior_oid_superior::clear_automat() {
  if (automat_ != NULL) automat_->::Common::AutomatId::Clear();
  _clear_bit(1);
}
inline const ::Common::AutomatId& MsgAutomatChangeSuperior_oid_superior::automat() const {
  return automat_ != NULL ? *automat_ : *default_instance_->automat_;
}
inline ::Common::AutomatId* MsgAutomatChangeSuperior_oid_superior::mutable_automat() {
  _set_bit(1);
  if (automat_ == NULL) automat_ = new ::Common::AutomatId;
  return automat_;
}

// -------------------------------------------------------------------

// MsgAutomatChangeSuperior

// required .Common.AutomatId automat = 1;
inline bool MsgAutomatChangeSuperior::has_automat() const {
  return _has_bit(0);
}
inline void MsgAutomatChangeSuperior::clear_automat() {
  if (automat_ != NULL) automat_->::Common::AutomatId::Clear();
  _clear_bit(0);
}
inline const ::Common::AutomatId& MsgAutomatChangeSuperior::automat() const {
  return automat_ != NULL ? *automat_ : *default_instance_->automat_;
}
inline ::Common::AutomatId* MsgAutomatChangeSuperior::mutable_automat() {
  _set_bit(0);
  if (automat_ == NULL) automat_ = new ::Common::AutomatId;
  return automat_;
}

// required .Common.MsgAutomatChangeSuperior_oid_superior superior = 2;
inline bool MsgAutomatChangeSuperior::has_superior() const {
  return _has_bit(1);
}
inline void MsgAutomatChangeSuperior::clear_superior() {
  if (superior_ != NULL) superior_->::Common::MsgAutomatChangeSuperior_oid_superior::Clear();
  _clear_bit(1);
}
inline const ::Common::MsgAutomatChangeSuperior_oid_superior& MsgAutomatChangeSuperior::superior() const {
  return superior_ != NULL ? *superior_ : *default_instance_->superior_;
}
inline ::Common::MsgAutomatChangeSuperior_oid_superior* MsgAutomatChangeSuperior::mutable_superior() {
  _set_bit(1);
  if (superior_ == NULL) superior_ = new ::Common::MsgAutomatChangeSuperior_oid_superior;
  return superior_;
}

// -------------------------------------------------------------------

// MsgUnitChangeSuperior

// required .Common.UnitId unit = 1;
inline bool MsgUnitChangeSuperior::has_unit() const {
  return _has_bit(0);
}
inline void MsgUnitChangeSuperior::clear_unit() {
  if (unit_ != NULL) unit_->::Common::UnitId::Clear();
  _clear_bit(0);
}
inline const ::Common::UnitId& MsgUnitChangeSuperior::unit() const {
  return unit_ != NULL ? *unit_ : *default_instance_->unit_;
}
inline ::Common::UnitId* MsgUnitChangeSuperior::mutable_unit() {
  _set_bit(0);
  if (unit_ == NULL) unit_ = new ::Common::UnitId;
  return unit_;
}

// required .Common.AutomatId parent = 2;
inline bool MsgUnitChangeSuperior::has_parent() const {
  return _has_bit(1);
}
inline void MsgUnitChangeSuperior::clear_parent() {
  if (parent_ != NULL) parent_->::Common::AutomatId::Clear();
  _clear_bit(1);
}
inline const ::Common::AutomatId& MsgUnitChangeSuperior::parent() const {
  return parent_ != NULL ? *parent_ : *default_instance_->parent_;
}
inline ::Common::AutomatId* MsgUnitChangeSuperior::mutable_parent() {
  _set_bit(1);
  if (parent_ == NULL) parent_ = new ::Common::AutomatId;
  return parent_;
}

// -------------------------------------------------------------------

// MsgControlStop

// -------------------------------------------------------------------

// MsgControlPause

// -------------------------------------------------------------------

// MsgControlResume

// -------------------------------------------------------------------

// MsgControlChangeTimeFactor

// required int32 time_factor = 1;
inline bool MsgControlChangeTimeFactor::has_time_factor() const {
  return _has_bit(0);
}
inline void MsgControlChangeTimeFactor::clear_time_factor() {
  time_factor_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 MsgControlChangeTimeFactor::time_factor() const {
  return time_factor_;
}
inline void MsgControlChangeTimeFactor::set_time_factor(::google::protobuf::int32 value) {
  _set_bit(0);
  time_factor_ = value;
}

// -------------------------------------------------------------------

// MsgExercise

// required string name = 1;
inline bool MsgExercise::has_name() const {
  return _has_bit(0);
}
inline void MsgExercise::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgExercise::name() const {
  return *name_;
}
inline void MsgExercise::set_name(const ::std::string& value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgExercise::set_name(const char* value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgExercise::set_name(const char* value, size_t size) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgExercise::mutable_name() {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional bool running = 2;
inline bool MsgExercise::has_running() const {
  return _has_bit(1);
}
inline void MsgExercise::clear_running() {
  running_ = false;
  _clear_bit(1);
}
inline bool MsgExercise::running() const {
  return running_;
}
inline void MsgExercise::set_running(bool value) {
  _set_bit(1);
  running_ = value;
}

// optional uint32 port = 3;
inline bool MsgExercise::has_port() const {
  return _has_bit(2);
}
inline void MsgExercise::clear_port() {
  port_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 MsgExercise::port() const {
  return port_;
}
inline void MsgExercise::set_port(::google::protobuf::uint32 value) {
  _set_bit(2);
  port_ = value;
}

// -------------------------------------------------------------------

// MsgNetworkAddress

// required string ip = 1;
inline bool MsgNetworkAddress::has_ip() const {
  return _has_bit(0);
}
inline void MsgNetworkAddress::clear_ip() {
  if (ip_ != &_default_ip_) {
    ip_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgNetworkAddress::ip() const {
  return *ip_;
}
inline void MsgNetworkAddress::set_ip(const ::std::string& value) {
  _set_bit(0);
  if (ip_ == &_default_ip_) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void MsgNetworkAddress::set_ip(const char* value) {
  _set_bit(0);
  if (ip_ == &_default_ip_) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void MsgNetworkAddress::set_ip(const char* value, size_t size) {
  _set_bit(0);
  if (ip_ == &_default_ip_) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgNetworkAddress::mutable_ip() {
  _set_bit(0);
  if (ip_ == &_default_ip_) {
    ip_ = new ::std::string;
  }
  return ip_;
}

// required int32 port = 2 [default = 8080];
inline bool MsgNetworkAddress::has_port() const {
  return _has_bit(1);
}
inline void MsgNetworkAddress::clear_port() {
  port_ = 8080;
  _clear_bit(1);
}
inline ::google::protobuf::int32 MsgNetworkAddress::port() const {
  return port_;
}
inline void MsgNetworkAddress::set_port(::google::protobuf::int32 value) {
  _set_bit(1);
  port_ = value;
}

// -------------------------------------------------------------------

// RgbColor

// required int32 red = 1;
inline bool RgbColor::has_red() const {
  return _has_bit(0);
}
inline void RgbColor::clear_red() {
  red_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 RgbColor::red() const {
  return red_;
}
inline void RgbColor::set_red(::google::protobuf::int32 value) {
  _set_bit(0);
  red_ = value;
}

// required int32 green = 2;
inline bool RgbColor::has_green() const {
  return _has_bit(1);
}
inline void RgbColor::clear_green() {
  green_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 RgbColor::green() const {
  return green_;
}
inline void RgbColor::set_green(::google::protobuf::int32 value) {
  _set_bit(1);
  green_ = value;
}

// required int32 blue = 3;
inline bool RgbColor::has_blue() const {
  return _has_bit(2);
}
inline void RgbColor::clear_blue() {
  blue_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 RgbColor::blue() const {
  return blue_;
}
inline void RgbColor::set_blue(::google::protobuf::int32 value) {
  _set_bit(2);
  blue_ = value;
}

// -------------------------------------------------------------------

// RgbaColor

// required int32 red = 1;
inline bool RgbaColor::has_red() const {
  return _has_bit(0);
}
inline void RgbaColor::clear_red() {
  red_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 RgbaColor::red() const {
  return red_;
}
inline void RgbaColor::set_red(::google::protobuf::int32 value) {
  _set_bit(0);
  red_ = value;
}

// required int32 green = 2;
inline bool RgbaColor::has_green() const {
  return _has_bit(1);
}
inline void RgbaColor::clear_green() {
  green_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 RgbaColor::green() const {
  return green_;
}
inline void RgbaColor::set_green(::google::protobuf::int32 value) {
  _set_bit(1);
  green_ = value;
}

// required int32 blue = 3;
inline bool RgbaColor::has_blue() const {
  return _has_bit(2);
}
inline void RgbaColor::clear_blue() {
  blue_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 RgbaColor::blue() const {
  return blue_;
}
inline void RgbaColor::set_blue(::google::protobuf::int32 value) {
  _set_bit(2);
  blue_ = value;
}

// required float alpha = 4;
inline bool RgbaColor::has_alpha() const {
  return _has_bit(3);
}
inline void RgbaColor::clear_alpha() {
  alpha_ = 0;
  _clear_bit(3);
}
inline float RgbaColor::alpha() const {
  return alpha_;
}
inline void RgbaColor::set_alpha(float value) {
  _set_bit(3);
  alpha_ = value;
}

// -------------------------------------------------------------------

// MsgCoordLatLong

// required double latitude = 1;
inline bool MsgCoordLatLong::has_latitude() const {
  return _has_bit(0);
}
inline void MsgCoordLatLong::clear_latitude() {
  latitude_ = 0;
  _clear_bit(0);
}
inline double MsgCoordLatLong::latitude() const {
  return latitude_;
}
inline void MsgCoordLatLong::set_latitude(double value) {
  _set_bit(0);
  latitude_ = value;
}

// required double longitude = 2;
inline bool MsgCoordLatLong::has_longitude() const {
  return _has_bit(1);
}
inline void MsgCoordLatLong::clear_longitude() {
  longitude_ = 0;
  _clear_bit(1);
}
inline double MsgCoordLatLong::longitude() const {
  return longitude_;
}
inline void MsgCoordLatLong::set_longitude(double value) {
  _set_bit(1);
  longitude_ = value;
}

// -------------------------------------------------------------------

// MsgCoordLatLongList

// repeated .Common.MsgCoordLatLong elem = 2;
inline int MsgCoordLatLongList::elem_size() const {
  return elem_.size();
}
inline void MsgCoordLatLongList::clear_elem() {
  elem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgCoordLatLong >&
MsgCoordLatLongList::elem() const {
  return elem_;
}
inline ::google::protobuf::RepeatedPtrField< ::Common::MsgCoordLatLong >*
MsgCoordLatLongList::mutable_elem() {
  return &elem_;
}
inline const ::Common::MsgCoordLatLong& MsgCoordLatLongList::elem(int index) const {
  return elem_.Get(index);
}
inline ::Common::MsgCoordLatLong* MsgCoordLatLongList::mutable_elem(int index) {
  return elem_.Mutable(index);
}
inline ::Common::MsgCoordLatLong* MsgCoordLatLongList::add_elem() {
  return elem_.Add();
}

// -------------------------------------------------------------------

// MsgLocation

// required .Common.MsgLocation.Geometry type = 1;
inline bool MsgLocation::has_type() const {
  return _has_bit(0);
}
inline void MsgLocation::clear_type() {
  type_ = 0;
  _clear_bit(0);
}
inline ::Common::MsgLocation_Geometry MsgLocation::type() const {
  return static_cast< ::Common::MsgLocation_Geometry >(type_);
}
inline void MsgLocation::set_type(::Common::MsgLocation_Geometry value) {
  GOOGLE_DCHECK(::Common::MsgLocation_Geometry_IsValid(value));
  _set_bit(0);
  type_ = value;
}

// optional .Common.MsgCoordLatLongList coordinates = 2;
inline bool MsgLocation::has_coordinates() const {
  return _has_bit(1);
}
inline void MsgLocation::clear_coordinates() {
  if (coordinates_ != NULL) coordinates_->::Common::MsgCoordLatLongList::Clear();
  _clear_bit(1);
}
inline const ::Common::MsgCoordLatLongList& MsgLocation::coordinates() const {
  return coordinates_ != NULL ? *coordinates_ : *default_instance_->coordinates_;
}
inline ::Common::MsgCoordLatLongList* MsgLocation::mutable_coordinates() {
  _set_bit(1);
  if (coordinates_ == NULL) coordinates_ = new ::Common::MsgCoordLatLongList;
  return coordinates_;
}

// -------------------------------------------------------------------

// MsgLine

// required .Common.MsgLocation location = 1;
inline bool MsgLine::has_location() const {
  return _has_bit(0);
}
inline void MsgLine::clear_location() {
  if (location_ != NULL) location_->::Common::MsgLocation::Clear();
  _clear_bit(0);
}
inline const ::Common::MsgLocation& MsgLine::location() const {
  return location_ != NULL ? *location_ : *default_instance_->location_;
}
inline ::Common::MsgLocation* MsgLine::mutable_location() {
  _set_bit(0);
  if (location_ == NULL) location_ = new ::Common::MsgLocation;
  return location_;
}

// -------------------------------------------------------------------

// MsgLocationList

// repeated .Common.MsgLocation elem = 1;
inline int MsgLocationList::elem_size() const {
  return elem_.size();
}
inline void MsgLocationList::clear_elem() {
  elem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgLocation >&
MsgLocationList::elem() const {
  return elem_;
}
inline ::google::protobuf::RepeatedPtrField< ::Common::MsgLocation >*
MsgLocationList::mutable_elem() {
  return &elem_;
}
inline const ::Common::MsgLocation& MsgLocationList::elem(int index) const {
  return elem_.Get(index);
}
inline ::Common::MsgLocation* MsgLocationList::mutable_elem(int index) {
  return elem_.Mutable(index);
}
inline ::Common::MsgLocation* MsgLocationList::add_elem() {
  return elem_.Add();
}

// -------------------------------------------------------------------

// MsgPath

// required .Common.MsgLocation location = 1;
inline bool MsgPath::has_location() const {
  return _has_bit(0);
}
inline void MsgPath::clear_location() {
  if (location_ != NULL) location_->::Common::MsgLocation::Clear();
  _clear_bit(0);
}
inline const ::Common::MsgLocation& MsgPath::location() const {
  return location_ != NULL ? *location_ : *default_instance_->location_;
}
inline ::Common::MsgLocation* MsgPath::mutable_location() {
  _set_bit(0);
  if (location_ == NULL) location_ = new ::Common::MsgLocation;
  return location_;
}

// -------------------------------------------------------------------

// MsgPathList

// repeated .Common.MsgPath elem = 1;
inline int MsgPathList::elem_size() const {
  return elem_.size();
}
inline void MsgPathList::clear_elem() {
  elem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgPath >&
MsgPathList::elem() const {
  return elem_;
}
inline ::google::protobuf::RepeatedPtrField< ::Common::MsgPath >*
MsgPathList::mutable_elem() {
  return &elem_;
}
inline const ::Common::MsgPath& MsgPathList::elem(int index) const {
  return elem_.Get(index);
}
inline ::Common::MsgPath* MsgPathList::mutable_elem(int index) {
  return elem_.Mutable(index);
}
inline ::Common::MsgPath* MsgPathList::add_elem() {
  return elem_.Add();
}

// -------------------------------------------------------------------

// MsgPoint

// required .Common.MsgLocation location = 1;
inline bool MsgPoint::has_location() const {
  return _has_bit(0);
}
inline void MsgPoint::clear_location() {
  if (location_ != NULL) location_->::Common::MsgLocation::Clear();
  _clear_bit(0);
}
inline const ::Common::MsgLocation& MsgPoint::location() const {
  return location_ != NULL ? *location_ : *default_instance_->location_;
}
inline ::Common::MsgLocation* MsgPoint::mutable_location() {
  _set_bit(0);
  if (location_ == NULL) location_ = new ::Common::MsgLocation;
  return location_;
}

// -------------------------------------------------------------------

// MsgPointList

// repeated .Common.MsgPoint elem = 1;
inline int MsgPointList::elem_size() const {
  return elem_.size();
}
inline void MsgPointList::clear_elem() {
  elem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgPoint >&
MsgPointList::elem() const {
  return elem_;
}
inline ::google::protobuf::RepeatedPtrField< ::Common::MsgPoint >*
MsgPointList::mutable_elem() {
  return &elem_;
}
inline const ::Common::MsgPoint& MsgPointList::elem(int index) const {
  return elem_.Get(index);
}
inline ::Common::MsgPoint* MsgPointList::mutable_elem(int index) {
  return elem_.Mutable(index);
}
inline ::Common::MsgPoint* MsgPointList::add_elem() {
  return elem_.Add();
}

// -------------------------------------------------------------------

// MsgPolygon

// required .Common.MsgLocation location = 1;
inline bool MsgPolygon::has_location() const {
  return _has_bit(0);
}
inline void MsgPolygon::clear_location() {
  if (location_ != NULL) location_->::Common::MsgLocation::Clear();
  _clear_bit(0);
}
inline const ::Common::MsgLocation& MsgPolygon::location() const {
  return location_ != NULL ? *location_ : *default_instance_->location_;
}
inline ::Common::MsgLocation* MsgPolygon::mutable_location() {
  _set_bit(0);
  if (location_ == NULL) location_ = new ::Common::MsgLocation;
  return location_;
}

// -------------------------------------------------------------------

// MsgPolygonList

// repeated .Common.MsgPolygon elem = 1;
inline int MsgPolygonList::elem_size() const {
  return elem_.size();
}
inline void MsgPolygonList::clear_elem() {
  elem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgPolygon >&
MsgPolygonList::elem() const {
  return elem_;
}
inline ::google::protobuf::RepeatedPtrField< ::Common::MsgPolygon >*
MsgPolygonList::mutable_elem() {
  return &elem_;
}
inline const ::Common::MsgPolygon& MsgPolygonList::elem(int index) const {
  return elem_.Get(index);
}
inline ::Common::MsgPolygon* MsgPolygonList::mutable_elem(int index) {
  return elem_.Mutable(index);
}
inline ::Common::MsgPolygon* MsgPolygonList::add_elem() {
  return elem_.Add();
}

// -------------------------------------------------------------------

// MsgLogMedicalPriorities

// repeated .Common.EnumHumanWound elem = 1;
inline int MsgLogMedicalPriorities::elem_size() const {
  return elem_.size();
}
inline void MsgLogMedicalPriorities::clear_elem() {
  elem_.Clear();
}
inline const ::google::protobuf::RepeatedField<int>&
MsgLogMedicalPriorities::elem() const {
  return elem_;
}
inline ::google::protobuf::RepeatedField<int>*
MsgLogMedicalPriorities::mutable_elem() {
  return &elem_;
}
inline Common::EnumHumanWound MsgLogMedicalPriorities::elem(int index) const {
  return static_cast< Common::EnumHumanWound >(elem_.Get(index));
}
inline void MsgLogMedicalPriorities::set_elem(int index, Common::EnumHumanWound value) {
  GOOGLE_DCHECK(Common::EnumHumanWound_IsValid(value));
  elem_.Set(index, value);
}
inline void MsgLogMedicalPriorities::add_elem(Common::EnumHumanWound value) {
  GOOGLE_DCHECK(Common::EnumHumanWound_IsValid(value));
  elem_.Add(value);
}

// -------------------------------------------------------------------

// ObstacleType

// -------------------------------------------------------------------

// MsgPlannedWork

// required string type = 1;
inline bool MsgPlannedWork::has_type() const {
  return _has_bit(0);
}
inline void MsgPlannedWork::clear_type() {
  if (type_ != &_default_type_) {
    type_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgPlannedWork::type() const {
  return *type_;
}
inline void MsgPlannedWork::set_type(const ::std::string& value) {
  _set_bit(0);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void MsgPlannedWork::set_type(const char* value) {
  _set_bit(0);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void MsgPlannedWork::set_type(const char* value, size_t size) {
  _set_bit(0);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgPlannedWork::mutable_type() {
  _set_bit(0);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  return type_;
}

// required .Common.MsgLocation position = 2;
inline bool MsgPlannedWork::has_position() const {
  return _has_bit(1);
}
inline void MsgPlannedWork::clear_position() {
  if (position_ != NULL) position_->::Common::MsgLocation::Clear();
  _clear_bit(1);
}
inline const ::Common::MsgLocation& MsgPlannedWork::position() const {
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
inline ::Common::MsgLocation* MsgPlannedWork::mutable_position() {
  _set_bit(1);
  if (position_ == NULL) position_ = new ::Common::MsgLocation;
  return position_;
}

// optional .Common.ObstacleType.DemolitionTargetType type_obstacle = 3;
inline bool MsgPlannedWork::has_type_obstacle() const {
  return _has_bit(2);
}
inline void MsgPlannedWork::clear_type_obstacle() {
  type_obstacle_ = 0;
  _clear_bit(2);
}
inline ::Common::ObstacleType_DemolitionTargetType MsgPlannedWork::type_obstacle() const {
  return static_cast< ::Common::ObstacleType_DemolitionTargetType >(type_obstacle_);
}
inline void MsgPlannedWork::set_type_obstacle(::Common::ObstacleType_DemolitionTargetType value) {
  GOOGLE_DCHECK(::Common::ObstacleType_DemolitionTargetType_IsValid(value));
  _set_bit(2);
  type_obstacle_ = value;
}

// optional float densite = 4;
inline bool MsgPlannedWork::has_densite() const {
  return _has_bit(3);
}
inline void MsgPlannedWork::clear_densite() {
  densite_ = 0;
  _clear_bit(3);
}
inline float MsgPlannedWork::densite() const {
  return densite_;
}
inline void MsgPlannedWork::set_densite(float value) {
  _set_bit(3);
  densite_ = value;
}

// optional .Common.AutomatId tc2 = 5;
inline bool MsgPlannedWork::has_tc2() const {
  return _has_bit(4);
}
inline void MsgPlannedWork::clear_tc2() {
  if (tc2_ != NULL) tc2_->::Common::AutomatId::Clear();
  _clear_bit(4);
}
inline const ::Common::AutomatId& MsgPlannedWork::tc2() const {
  return tc2_ != NULL ? *tc2_ : *default_instance_->tc2_;
}
inline ::Common::AutomatId* MsgPlannedWork::mutable_tc2() {
  _set_bit(4);
  if (tc2_ == NULL) tc2_ = new ::Common::AutomatId;
  return tc2_;
}

// optional int32 activity_time = 6;
inline bool MsgPlannedWork::has_activity_time() const {
  return _has_bit(5);
}
inline void MsgPlannedWork::clear_activity_time() {
  activity_time_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 MsgPlannedWork::activity_time() const {
  return activity_time_;
}
inline void MsgPlannedWork::set_activity_time(::google::protobuf::int32 value) {
  _set_bit(5);
  activity_time_ = value;
}

// -------------------------------------------------------------------

// MsgPlannedWorkList

// repeated .Common.MsgPlannedWork elem = 1;
inline int MsgPlannedWorkList::elem_size() const {
  return elem_.size();
}
inline void MsgPlannedWorkList::clear_elem() {
  elem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgPlannedWork >&
MsgPlannedWorkList::elem() const {
  return elem_;
}
inline ::google::protobuf::RepeatedPtrField< ::Common::MsgPlannedWork >*
MsgPlannedWorkList::mutable_elem() {
  return &elem_;
}
inline const ::Common::MsgPlannedWork& MsgPlannedWorkList::elem(int index) const {
  return elem_.Get(index);
}
inline ::Common::MsgPlannedWork* MsgPlannedWorkList::mutable_elem(int index) {
  return elem_.Mutable(index);
}
inline ::Common::MsgPlannedWork* MsgPlannedWorkList::add_elem() {
  return elem_.Add();
}

// -------------------------------------------------------------------

// MsgLogMaintenancePriorities

// repeated .Common.EquipmentType elem = 1;
inline int MsgLogMaintenancePriorities::elem_size() const {
  return elem_.size();
}
inline void MsgLogMaintenancePriorities::clear_elem() {
  elem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::EquipmentType >&
MsgLogMaintenancePriorities::elem() const {
  return elem_;
}
inline ::google::protobuf::RepeatedPtrField< ::Common::EquipmentType >*
MsgLogMaintenancePriorities::mutable_elem() {
  return &elem_;
}
inline const ::Common::EquipmentType& MsgLogMaintenancePriorities::elem(int index) const {
  return elem_.Get(index);
}
inline ::Common::EquipmentType* MsgLogMaintenancePriorities::mutable_elem(int index) {
  return elem_.Mutable(index);
}
inline ::Common::EquipmentType* MsgLogMaintenancePriorities::add_elem() {
  return elem_.Add();
}

// -------------------------------------------------------------------

// MsgMissionObjective

// required .Common.MsgLocation localisation = 1;
inline bool MsgMissionObjective::has_localisation() const {
  return _has_bit(0);
}
inline void MsgMissionObjective::clear_localisation() {
  if (localisation_ != NULL) localisation_->::Common::MsgLocation::Clear();
  _clear_bit(0);
}
inline const ::Common::MsgLocation& MsgMissionObjective::localisation() const {
  return localisation_ != NULL ? *localisation_ : *default_instance_->localisation_;
}
inline ::Common::MsgLocation* MsgMissionObjective::mutable_localisation() {
  _set_bit(0);
  if (localisation_ == NULL) localisation_ = new ::Common::MsgLocation;
  return localisation_;
}

// required .Common.MsgDateTime horaire = 2;
inline bool MsgMissionObjective::has_horaire() const {
  return _has_bit(1);
}
inline void MsgMissionObjective::clear_horaire() {
  if (horaire_ != NULL) horaire_->::Common::MsgDateTime::Clear();
  _clear_bit(1);
}
inline const ::Common::MsgDateTime& MsgMissionObjective::horaire() const {
  return horaire_ != NULL ? *horaire_ : *default_instance_->horaire_;
}
inline ::Common::MsgDateTime* MsgMissionObjective::mutable_horaire() {
  _set_bit(1);
  if (horaire_ == NULL) horaire_ = new ::Common::MsgDateTime;
  return horaire_;
}

// -------------------------------------------------------------------

// MsgMissionObjectiveList

// repeated .Common.MsgMissionObjective elem = 1;
inline int MsgMissionObjectiveList::elem_size() const {
  return elem_.size();
}
inline void MsgMissionObjectiveList::clear_elem() {
  elem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgMissionObjective >&
MsgMissionObjectiveList::elem() const {
  return elem_;
}
inline ::google::protobuf::RepeatedPtrField< ::Common::MsgMissionObjective >*
MsgMissionObjectiveList::mutable_elem() {
  return &elem_;
}
inline const ::Common::MsgMissionObjective& MsgMissionObjectiveList::elem(int index) const {
  return elem_.Get(index);
}
inline ::Common::MsgMissionObjective* MsgMissionObjectiveList::mutable_elem(int index) {
  return elem_.Mutable(index);
}
inline ::Common::MsgMissionObjective* MsgMissionObjectiveList::add_elem() {
  return elem_.Add();
}

// -------------------------------------------------------------------

// MsgLimaOrder

// required .Common.MsgLine lima = 1;
inline bool MsgLimaOrder::has_lima() const {
  return _has_bit(0);
}
inline void MsgLimaOrder::clear_lima() {
  if (lima_ != NULL) lima_->::Common::MsgLine::Clear();
  _clear_bit(0);
}
inline const ::Common::MsgLine& MsgLimaOrder::lima() const {
  return lima_ != NULL ? *lima_ : *default_instance_->lima_;
}
inline ::Common::MsgLine* MsgLimaOrder::mutable_lima() {
  _set_bit(0);
  if (lima_ == NULL) lima_ = new ::Common::MsgLine;
  return lima_;
}

// required .Common.MsgDateTime horaire = 2;
inline bool MsgLimaOrder::has_horaire() const {
  return _has_bit(1);
}
inline void MsgLimaOrder::clear_horaire() {
  if (horaire_ != NULL) horaire_->::Common::MsgDateTime::Clear();
  _clear_bit(1);
}
inline const ::Common::MsgDateTime& MsgLimaOrder::horaire() const {
  return horaire_ != NULL ? *horaire_ : *default_instance_->horaire_;
}
inline ::Common::MsgDateTime* MsgLimaOrder::mutable_horaire() {
  _set_bit(1);
  if (horaire_ == NULL) horaire_ = new ::Common::MsgDateTime;
  return horaire_;
}

// repeated .Common.MsgLimaOrder.Function fonctions = 3;
inline int MsgLimaOrder::fonctions_size() const {
  return fonctions_.size();
}
inline void MsgLimaOrder::clear_fonctions() {
  fonctions_.Clear();
}
inline const ::google::protobuf::RepeatedField<int>&
MsgLimaOrder::fonctions() const {
  return fonctions_;
}
inline ::google::protobuf::RepeatedField<int>*
MsgLimaOrder::mutable_fonctions() {
  return &fonctions_;
}
inline ::Common::MsgLimaOrder_Function MsgLimaOrder::fonctions(int index) const {
  return static_cast< ::Common::MsgLimaOrder_Function >(fonctions_.Get(index));
}
inline void MsgLimaOrder::set_fonctions(int index, ::Common::MsgLimaOrder_Function value) {
  GOOGLE_DCHECK(::Common::MsgLimaOrder_Function_IsValid(value));
  fonctions_.Set(index, value);
}
inline void MsgLimaOrder::add_fonctions(::Common::MsgLimaOrder_Function value) {
  GOOGLE_DCHECK(::Common::MsgLimaOrder_Function_IsValid(value));
  fonctions_.Add(value);
}

// -------------------------------------------------------------------

// MsgLimasOrder

// repeated .Common.MsgLimaOrder elem = 1;
inline int MsgLimasOrder::elem_size() const {
  return elem_.size();
}
inline void MsgLimasOrder::clear_elem() {
  elem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgLimaOrder >&
MsgLimasOrder::elem() const {
  return elem_;
}
inline ::google::protobuf::RepeatedPtrField< ::Common::MsgLimaOrder >*
MsgLimasOrder::mutable_elem() {
  return &elem_;
}
inline const ::Common::MsgLimaOrder& MsgLimasOrder::elem(int index) const {
  return elem_.Get(index);
}
inline ::Common::MsgLimaOrder* MsgLimasOrder::mutable_elem(int index) {
  return elem_.Mutable(index);
}
inline ::Common::MsgLimaOrder* MsgLimasOrder::add_elem() {
  return elem_.Add();
}

// -------------------------------------------------------------------

// MsgIntelligence

// required string name = 1;
inline bool MsgIntelligence::has_name() const {
  return _has_bit(0);
}
inline void MsgIntelligence::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgIntelligence::name() const {
  return *name_;
}
inline void MsgIntelligence::set_name(const ::std::string& value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgIntelligence::set_name(const char* value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgIntelligence::set_name(const char* value, size_t size) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgIntelligence::mutable_name() {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// required string nature = 2;
inline bool MsgIntelligence::has_nature() const {
  return _has_bit(1);
}
inline void MsgIntelligence::clear_nature() {
  if (nature_ != &_default_nature_) {
    nature_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& MsgIntelligence::nature() const {
  return *nature_;
}
inline void MsgIntelligence::set_nature(const ::std::string& value) {
  _set_bit(1);
  if (nature_ == &_default_nature_) {
    nature_ = new ::std::string;
  }
  nature_->assign(value);
}
inline void MsgIntelligence::set_nature(const char* value) {
  _set_bit(1);
  if (nature_ == &_default_nature_) {
    nature_ = new ::std::string;
  }
  nature_->assign(value);
}
inline void MsgIntelligence::set_nature(const char* value, size_t size) {
  _set_bit(1);
  if (nature_ == &_default_nature_) {
    nature_ = new ::std::string;
  }
  nature_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgIntelligence::mutable_nature() {
  _set_bit(1);
  if (nature_ == &_default_nature_) {
    nature_ = new ::std::string;
  }
  return nature_;
}

// required .Common.EnumNatureLevel level = 3;
inline bool MsgIntelligence::has_level() const {
  return _has_bit(2);
}
inline void MsgIntelligence::clear_level() {
  level_ = 0;
  _clear_bit(2);
}
inline Common::EnumNatureLevel MsgIntelligence::level() const {
  return static_cast< Common::EnumNatureLevel >(level_);
}
inline void MsgIntelligence::set_level(Common::EnumNatureLevel value) {
  GOOGLE_DCHECK(Common::EnumNatureLevel_IsValid(value));
  _set_bit(2);
  level_ = value;
}

// required bool embarked = 4;
inline bool MsgIntelligence::has_embarked() const {
  return _has_bit(3);
}
inline void MsgIntelligence::clear_embarked() {
  embarked_ = false;
  _clear_bit(3);
}
inline bool MsgIntelligence::embarked() const {
  return embarked_;
}
inline void MsgIntelligence::set_embarked(bool value) {
  _set_bit(3);
  embarked_ = value;
}

// required .Common.MsgCoordLatLong location = 5;
inline bool MsgIntelligence::has_location() const {
  return _has_bit(4);
}
inline void MsgIntelligence::clear_location() {
  if (location_ != NULL) location_->::Common::MsgCoordLatLong::Clear();
  _clear_bit(4);
}
inline const ::Common::MsgCoordLatLong& MsgIntelligence::location() const {
  return location_ != NULL ? *location_ : *default_instance_->location_;
}
inline ::Common::MsgCoordLatLong* MsgIntelligence::mutable_location() {
  _set_bit(4);
  if (location_ == NULL) location_ = new ::Common::MsgCoordLatLong;
  return location_;
}

// required .Common.EnumDiplomacy diplomacy = 6;
inline bool MsgIntelligence::has_diplomacy() const {
  return _has_bit(5);
}
inline void MsgIntelligence::clear_diplomacy() {
  diplomacy_ = 0;
  _clear_bit(5);
}
inline Common::EnumDiplomacy MsgIntelligence::diplomacy() const {
  return static_cast< Common::EnumDiplomacy >(diplomacy_);
}
inline void MsgIntelligence::set_diplomacy(Common::EnumDiplomacy value) {
  GOOGLE_DCHECK(Common::EnumDiplomacy_IsValid(value));
  _set_bit(5);
  diplomacy_ = value;
}

// required .Common.FormationId formation = 7;
inline bool MsgIntelligence::has_formation() const {
  return _has_bit(6);
}
inline void MsgIntelligence::clear_formation() {
  if (formation_ != NULL) formation_->::Common::FormationId::Clear();
  _clear_bit(6);
}
inline const ::Common::FormationId& MsgIntelligence::formation() const {
  return formation_ != NULL ? *formation_ : *default_instance_->formation_;
}
inline ::Common::FormationId* MsgIntelligence::mutable_formation() {
  _set_bit(6);
  if (formation_ == NULL) formation_ = new ::Common::FormationId;
  return formation_;
}

// -------------------------------------------------------------------

// MsgIntelligenceList

// repeated .Common.MsgIntelligence elem = 1;
inline int MsgIntelligenceList::elem_size() const {
  return elem_.size();
}
inline void MsgIntelligenceList::clear_elem() {
  elem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgIntelligence >&
MsgIntelligenceList::elem() const {
  return elem_;
}
inline ::google::protobuf::RepeatedPtrField< ::Common::MsgIntelligence >*
MsgIntelligenceList::mutable_elem() {
  return &elem_;
}
inline const ::Common::MsgIntelligence& MsgIntelligenceList::elem(int index) const {
  return elem_.Get(index);
}
inline ::Common::MsgIntelligence* MsgIntelligenceList::mutable_elem(int index) {
  return elem_.Mutable(index);
}
inline ::Common::MsgIntelligence* MsgIntelligenceList::add_elem() {
  return elem_.Add();
}

// -------------------------------------------------------------------

// MsgChangeDiplomacy

// required .Common.PartyId party1 = 1;
inline bool MsgChangeDiplomacy::has_party1() const {
  return _has_bit(0);
}
inline void MsgChangeDiplomacy::clear_party1() {
  if (party1_ != NULL) party1_->::Common::PartyId::Clear();
  _clear_bit(0);
}
inline const ::Common::PartyId& MsgChangeDiplomacy::party1() const {
  return party1_ != NULL ? *party1_ : *default_instance_->party1_;
}
inline ::Common::PartyId* MsgChangeDiplomacy::mutable_party1() {
  _set_bit(0);
  if (party1_ == NULL) party1_ = new ::Common::PartyId;
  return party1_;
}

// required .Common.PartyId party2 = 2;
inline bool MsgChangeDiplomacy::has_party2() const {
  return _has_bit(1);
}
inline void MsgChangeDiplomacy::clear_party2() {
  if (party2_ != NULL) party2_->::Common::PartyId::Clear();
  _clear_bit(1);
}
inline const ::Common::PartyId& MsgChangeDiplomacy::party2() const {
  return party2_ != NULL ? *party2_ : *default_instance_->party2_;
}
inline ::Common::PartyId* MsgChangeDiplomacy::mutable_party2() {
  _set_bit(1);
  if (party2_ == NULL) party2_ = new ::Common::PartyId;
  return party2_;
}

// required .Common.EnumDiplomacy diplomatie = 3;
inline bool MsgChangeDiplomacy::has_diplomatie() const {
  return _has_bit(2);
}
inline void MsgChangeDiplomacy::clear_diplomatie() {
  diplomatie_ = 0;
  _clear_bit(2);
}
inline Common::EnumDiplomacy MsgChangeDiplomacy::diplomatie() const {
  return static_cast< Common::EnumDiplomacy >(diplomatie_);
}
inline void MsgChangeDiplomacy::set_diplomatie(Common::EnumDiplomacy value) {
  GOOGLE_DCHECK(Common::EnumDiplomacy_IsValid(value));
  _set_bit(2);
  diplomatie_ = value;
}

// -------------------------------------------------------------------

// MsgAtlasNature

// required int32 nature = 1;
inline bool MsgAtlasNature::has_nature() const {
  return _has_bit(0);
}
inline void MsgAtlasNature::clear_nature() {
  nature_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 MsgAtlasNature::nature() const {
  return nature_;
}
inline void MsgAtlasNature::set_nature(::google::protobuf::int32 value) {
  _set_bit(0);
  nature_ = value;
}

// -------------------------------------------------------------------

// MsgMissionParameter_Value

// optional bool aBool = 1;
inline bool MsgMissionParameter_Value::has_abool() const {
  return _has_bit(0);
}
inline void MsgMissionParameter_Value::clear_abool() {
  abool_ = false;
  _clear_bit(0);
}
inline bool MsgMissionParameter_Value::abool() const {
  return abool_;
}
inline void MsgMissionParameter_Value::set_abool(bool value) {
  _set_bit(0);
  abool_ = value;
}

// optional float aReal = 2;
inline bool MsgMissionParameter_Value::has_areal() const {
  return _has_bit(1);
}
inline void MsgMissionParameter_Value::clear_areal() {
  areal_ = 0;
  _clear_bit(1);
}
inline float MsgMissionParameter_Value::areal() const {
  return areal_;
}
inline void MsgMissionParameter_Value::set_areal(float value) {
  _set_bit(1);
  areal_ = value;
}

// optional int32 enumeration = 3;
inline bool MsgMissionParameter_Value::has_enumeration() const {
  return _has_bit(2);
}
inline void MsgMissionParameter_Value::clear_enumeration() {
  enumeration_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 MsgMissionParameter_Value::enumeration() const {
  return enumeration_;
}
inline void MsgMissionParameter_Value::set_enumeration(::google::protobuf::int32 value) {
  _set_bit(2);
  enumeration_ = value;
}

// optional .Common.MsgPath path = 4;
inline bool MsgMissionParameter_Value::has_path() const {
  return _has_bit(3);
}
inline void MsgMissionParameter_Value::clear_path() {
  if (path_ != NULL) path_->::Common::MsgPath::Clear();
  _clear_bit(3);
}
inline const ::Common::MsgPath& MsgMissionParameter_Value::path() const {
  return path_ != NULL ? *path_ : *default_instance_->path_;
}
inline ::Common::MsgPath* MsgMissionParameter_Value::mutable_path() {
  _set_bit(3);
  if (path_ == NULL) path_ = new ::Common::MsgPath;
  return path_;
}

// optional .Common.MsgPathList pathList = 5;
inline bool MsgMissionParameter_Value::has_pathlist() const {
  return _has_bit(4);
}
inline void MsgMissionParameter_Value::clear_pathlist() {
  if (pathlist_ != NULL) pathlist_->::Common::MsgPathList::Clear();
  _clear_bit(4);
}
inline const ::Common::MsgPathList& MsgMissionParameter_Value::pathlist() const {
  return pathlist_ != NULL ? *pathlist_ : *default_instance_->pathlist_;
}
inline ::Common::MsgPathList* MsgMissionParameter_Value::mutable_pathlist() {
  _set_bit(4);
  if (pathlist_ == NULL) pathlist_ = new ::Common::MsgPathList;
  return pathlist_;
}

// optional .Common.MsgPoint point = 6;
inline bool MsgMissionParameter_Value::has_point() const {
  return _has_bit(5);
}
inline void MsgMissionParameter_Value::clear_point() {
  if (point_ != NULL) point_->::Common::MsgPoint::Clear();
  _clear_bit(5);
}
inline const ::Common::MsgPoint& MsgMissionParameter_Value::point() const {
  return point_ != NULL ? *point_ : *default_instance_->point_;
}
inline ::Common::MsgPoint* MsgMissionParameter_Value::mutable_point() {
  _set_bit(5);
  if (point_ == NULL) point_ = new ::Common::MsgPoint;
  return point_;
}

// optional .Common.MsgPointList pointList = 7;
inline bool MsgMissionParameter_Value::has_pointlist() const {
  return _has_bit(6);
}
inline void MsgMissionParameter_Value::clear_pointlist() {
  if (pointlist_ != NULL) pointlist_->::Common::MsgPointList::Clear();
  _clear_bit(6);
}
inline const ::Common::MsgPointList& MsgMissionParameter_Value::pointlist() const {
  return pointlist_ != NULL ? *pointlist_ : *default_instance_->pointlist_;
}
inline ::Common::MsgPointList* MsgMissionParameter_Value::mutable_pointlist() {
  _set_bit(6);
  if (pointlist_ == NULL) pointlist_ = new ::Common::MsgPointList;
  return pointlist_;
}

// optional .Common.MsgPolygon polygon = 8;
inline bool MsgMissionParameter_Value::has_polygon() const {
  return _has_bit(7);
}
inline void MsgMissionParameter_Value::clear_polygon() {
  if (polygon_ != NULL) polygon_->::Common::MsgPolygon::Clear();
  _clear_bit(7);
}
inline const ::Common::MsgPolygon& MsgMissionParameter_Value::polygon() const {
  return polygon_ != NULL ? *polygon_ : *default_instance_->polygon_;
}
inline ::Common::MsgPolygon* MsgMissionParameter_Value::mutable_polygon() {
  _set_bit(7);
  if (polygon_ == NULL) polygon_ = new ::Common::MsgPolygon;
  return polygon_;
}

// optional .Common.MsgPolygonList polygonList = 9;
inline bool MsgMissionParameter_Value::has_polygonlist() const {
  return _has_bit(8);
}
inline void MsgMissionParameter_Value::clear_polygonlist() {
  if (polygonlist_ != NULL) polygonlist_->::Common::MsgPolygonList::Clear();
  _clear_bit(8);
}
inline const ::Common::MsgPolygonList& MsgMissionParameter_Value::polygonlist() const {
  return polygonlist_ != NULL ? *polygonlist_ : *default_instance_->polygonlist_;
}
inline ::Common::MsgPolygonList* MsgMissionParameter_Value::mutable_polygonlist() {
  _set_bit(8);
  if (polygonlist_ == NULL) polygonlist_ = new ::Common::MsgPolygonList;
  return polygonlist_;
}

// optional .Common.MsgLocation location = 10;
inline bool MsgMissionParameter_Value::has_location() const {
  return _has_bit(9);
}
inline void MsgMissionParameter_Value::clear_location() {
  if (location_ != NULL) location_->::Common::MsgLocation::Clear();
  _clear_bit(9);
}
inline const ::Common::MsgLocation& MsgMissionParameter_Value::location() const {
  return location_ != NULL ? *location_ : *default_instance_->location_;
}
inline ::Common::MsgLocation* MsgMissionParameter_Value::mutable_location() {
  _set_bit(9);
  if (location_ == NULL) location_ = new ::Common::MsgLocation;
  return location_;
}

// optional .Common.MsgLocationList locationList = 11;
inline bool MsgMissionParameter_Value::has_locationlist() const {
  return _has_bit(10);
}
inline void MsgMissionParameter_Value::clear_locationlist() {
  if (locationlist_ != NULL) locationlist_->::Common::MsgLocationList::Clear();
  _clear_bit(10);
}
inline const ::Common::MsgLocationList& MsgMissionParameter_Value::locationlist() const {
  return locationlist_ != NULL ? *locationlist_ : *default_instance_->locationlist_;
}
inline ::Common::MsgLocationList* MsgMissionParameter_Value::mutable_locationlist() {
  _set_bit(10);
  if (locationlist_ == NULL) locationlist_ = new ::Common::MsgLocationList;
  return locationlist_;
}

// optional .Common.MsgHeading heading = 12;
inline bool MsgMissionParameter_Value::has_heading() const {
  return _has_bit(11);
}
inline void MsgMissionParameter_Value::clear_heading() {
  if (heading_ != NULL) heading_->::Common::MsgHeading::Clear();
  _clear_bit(11);
}
inline const ::Common::MsgHeading& MsgMissionParameter_Value::heading() const {
  return heading_ != NULL ? *heading_ : *default_instance_->heading_;
}
inline ::Common::MsgHeading* MsgMissionParameter_Value::mutable_heading() {
  _set_bit(11);
  if (heading_ == NULL) heading_ = new ::Common::MsgHeading;
  return heading_;
}

// optional .Common.MsgAtlasNature atlasNature = 13;
inline bool MsgMissionParameter_Value::has_atlasnature() const {
  return _has_bit(12);
}
inline void MsgMissionParameter_Value::clear_atlasnature() {
  if (atlasnature_ != NULL) atlasnature_->::Common::MsgAtlasNature::Clear();
  _clear_bit(12);
}
inline const ::Common::MsgAtlasNature& MsgMissionParameter_Value::atlasnature() const {
  return atlasnature_ != NULL ? *atlasnature_ : *default_instance_->atlasnature_;
}
inline ::Common::MsgAtlasNature* MsgMissionParameter_Value::mutable_atlasnature() {
  _set_bit(12);
  if (atlasnature_ == NULL) atlasnature_ = new ::Common::MsgAtlasNature;
  return atlasnature_;
}

// optional .Common.UnitId unit = 14;
inline bool MsgMissionParameter_Value::has_unit() const {
  return _has_bit(13);
}
inline void MsgMissionParameter_Value::clear_unit() {
  if (unit_ != NULL) unit_->::Common::UnitId::Clear();
  _clear_bit(13);
}
inline const ::Common::UnitId& MsgMissionParameter_Value::unit() const {
  return unit_ != NULL ? *unit_ : *default_instance_->unit_;
}
inline ::Common::UnitId* MsgMissionParameter_Value::mutable_unit() {
  _set_bit(13);
  if (unit_ == NULL) unit_ = new ::Common::UnitId;
  return unit_;
}

// optional .Common.UnitIdList unitList = 15;
inline bool MsgMissionParameter_Value::has_unitlist() const {
  return _has_bit(14);
}
inline void MsgMissionParameter_Value::clear_unitlist() {
  if (unitlist_ != NULL) unitlist_->::Common::UnitIdList::Clear();
  _clear_bit(14);
}
inline const ::Common::UnitIdList& MsgMissionParameter_Value::unitlist() const {
  return unitlist_ != NULL ? *unitlist_ : *default_instance_->unitlist_;
}
inline ::Common::UnitIdList* MsgMissionParameter_Value::mutable_unitlist() {
  _set_bit(14);
  if (unitlist_ == NULL) unitlist_ = new ::Common::UnitIdList;
  return unitlist_;
}

// optional .Common.AutomatId automat = 16;
inline bool MsgMissionParameter_Value::has_automat() const {
  return _has_bit(15);
}
inline void MsgMissionParameter_Value::clear_automat() {
  if (automat_ != NULL) automat_->::Common::AutomatId::Clear();
  _clear_bit(15);
}
inline const ::Common::AutomatId& MsgMissionParameter_Value::automat() const {
  return automat_ != NULL ? *automat_ : *default_instance_->automat_;
}
inline ::Common::AutomatId* MsgMissionParameter_Value::mutable_automat() {
  _set_bit(15);
  if (automat_ == NULL) automat_ = new ::Common::AutomatId;
  return automat_;
}

// optional .Common.AutomatIdList automatList = 17;
inline bool MsgMissionParameter_Value::has_automatlist() const {
  return _has_bit(16);
}
inline void MsgMissionParameter_Value::clear_automatlist() {
  if (automatlist_ != NULL) automatlist_->::Common::AutomatIdList::Clear();
  _clear_bit(16);
}
inline const ::Common::AutomatIdList& MsgMissionParameter_Value::automatlist() const {
  return automatlist_ != NULL ? *automatlist_ : *default_instance_->automatlist_;
}
inline ::Common::AutomatIdList* MsgMissionParameter_Value::mutable_automatlist() {
  _set_bit(16);
  if (automatlist_ == NULL) automatlist_ = new ::Common::AutomatIdList;
  return automatlist_;
}

// optional .Common.UnitKnowledgeId unitKnowledge = 18;
inline bool MsgMissionParameter_Value::has_unitknowledge() const {
  return _has_bit(17);
}
inline void MsgMissionParameter_Value::clear_unitknowledge() {
  if (unitknowledge_ != NULL) unitknowledge_->::Common::UnitKnowledgeId::Clear();
  _clear_bit(17);
}
inline const ::Common::UnitKnowledgeId& MsgMissionParameter_Value::unitknowledge() const {
  return unitknowledge_ != NULL ? *unitknowledge_ : *default_instance_->unitknowledge_;
}
inline ::Common::UnitKnowledgeId* MsgMissionParameter_Value::mutable_unitknowledge() {
  _set_bit(17);
  if (unitknowledge_ == NULL) unitknowledge_ = new ::Common::UnitKnowledgeId;
  return unitknowledge_;
}

// optional .Common.UnitKnowledgeIdList unitKnowledgeList = 19;
inline bool MsgMissionParameter_Value::has_unitknowledgelist() const {
  return _has_bit(18);
}
inline void MsgMissionParameter_Value::clear_unitknowledgelist() {
  if (unitknowledgelist_ != NULL) unitknowledgelist_->::Common::UnitKnowledgeIdList::Clear();
  _clear_bit(18);
}
inline const ::Common::UnitKnowledgeIdList& MsgMissionParameter_Value::unitknowledgelist() const {
  return unitknowledgelist_ != NULL ? *unitknowledgelist_ : *default_instance_->unitknowledgelist_;
}
inline ::Common::UnitKnowledgeIdList* MsgMissionParameter_Value::mutable_unitknowledgelist() {
  _set_bit(18);
  if (unitknowledgelist_ == NULL) unitknowledgelist_ = new ::Common::UnitKnowledgeIdList;
  return unitknowledgelist_;
}

// optional .Common.ObjectKnowledgeId objectKnowledge = 20;
inline bool MsgMissionParameter_Value::has_objectknowledge() const {
  return _has_bit(19);
}
inline void MsgMissionParameter_Value::clear_objectknowledge() {
  if (objectknowledge_ != NULL) objectknowledge_->::Common::ObjectKnowledgeId::Clear();
  _clear_bit(19);
}
inline const ::Common::ObjectKnowledgeId& MsgMissionParameter_Value::objectknowledge() const {
  return objectknowledge_ != NULL ? *objectknowledge_ : *default_instance_->objectknowledge_;
}
inline ::Common::ObjectKnowledgeId* MsgMissionParameter_Value::mutable_objectknowledge() {
  _set_bit(19);
  if (objectknowledge_ == NULL) objectknowledge_ = new ::Common::ObjectKnowledgeId;
  return objectknowledge_;
}

// optional .Common.ObjectKnowledgeIdList objectKnowledgeList = 21;
inline bool MsgMissionParameter_Value::has_objectknowledgelist() const {
  return _has_bit(20);
}
inline void MsgMissionParameter_Value::clear_objectknowledgelist() {
  if (objectknowledgelist_ != NULL) objectknowledgelist_->::Common::ObjectKnowledgeIdList::Clear();
  _clear_bit(20);
}
inline const ::Common::ObjectKnowledgeIdList& MsgMissionParameter_Value::objectknowledgelist() const {
  return objectknowledgelist_ != NULL ? *objectknowledgelist_ : *default_instance_->objectknowledgelist_;
}
inline ::Common::ObjectKnowledgeIdList* MsgMissionParameter_Value::mutable_objectknowledgelist() {
  _set_bit(20);
  if (objectknowledgelist_ == NULL) objectknowledgelist_ = new ::Common::ObjectKnowledgeIdList;
  return objectknowledgelist_;
}

// optional .Common.CrowdKnowledgeId crowdKnowledge = 22;
inline bool MsgMissionParameter_Value::has_crowdknowledge() const {
  return _has_bit(21);
}
inline void MsgMissionParameter_Value::clear_crowdknowledge() {
  if (crowdknowledge_ != NULL) crowdknowledge_->::Common::CrowdKnowledgeId::Clear();
  _clear_bit(21);
}
inline const ::Common::CrowdKnowledgeId& MsgMissionParameter_Value::crowdknowledge() const {
  return crowdknowledge_ != NULL ? *crowdknowledge_ : *default_instance_->crowdknowledge_;
}
inline ::Common::CrowdKnowledgeId* MsgMissionParameter_Value::mutable_crowdknowledge() {
  _set_bit(21);
  if (crowdknowledge_ == NULL) crowdknowledge_ = new ::Common::CrowdKnowledgeId;
  return crowdknowledge_;
}

// optional .Common.MsgPlannedWork plannedWork = 23;
inline bool MsgMissionParameter_Value::has_plannedwork() const {
  return _has_bit(22);
}
inline void MsgMissionParameter_Value::clear_plannedwork() {
  if (plannedwork_ != NULL) plannedwork_->::Common::MsgPlannedWork::Clear();
  _clear_bit(22);
}
inline const ::Common::MsgPlannedWork& MsgMissionParameter_Value::plannedwork() const {
  return plannedwork_ != NULL ? *plannedwork_ : *default_instance_->plannedwork_;
}
inline ::Common::MsgPlannedWork* MsgMissionParameter_Value::mutable_plannedwork() {
  _set_bit(22);
  if (plannedwork_ == NULL) plannedwork_ = new ::Common::MsgPlannedWork;
  return plannedwork_;
}

// optional .Common.MsgPlannedWorkList plannedWorkList = 24;
inline bool MsgMissionParameter_Value::has_plannedworklist() const {
  return _has_bit(23);
}
inline void MsgMissionParameter_Value::clear_plannedworklist() {
  if (plannedworklist_ != NULL) plannedworklist_->::Common::MsgPlannedWorkList::Clear();
  _clear_bit(23);
}
inline const ::Common::MsgPlannedWorkList& MsgMissionParameter_Value::plannedworklist() const {
  return plannedworklist_ != NULL ? *plannedworklist_ : *default_instance_->plannedworklist_;
}
inline ::Common::MsgPlannedWorkList* MsgMissionParameter_Value::mutable_plannedworklist() {
  _set_bit(23);
  if (plannedworklist_ == NULL) plannedworklist_ = new ::Common::MsgPlannedWorkList;
  return plannedworklist_;
}

// optional .Common.ResourceType resourceType = 25;
inline bool MsgMissionParameter_Value::has_resourcetype() const {
  return _has_bit(24);
}
inline void MsgMissionParameter_Value::clear_resourcetype() {
  if (resourcetype_ != NULL) resourcetype_->::Common::ResourceType::Clear();
  _clear_bit(24);
}
inline const ::Common::ResourceType& MsgMissionParameter_Value::resourcetype() const {
  return resourcetype_ != NULL ? *resourcetype_ : *default_instance_->resourcetype_;
}
inline ::Common::ResourceType* MsgMissionParameter_Value::mutable_resourcetype() {
  _set_bit(24);
  if (resourcetype_ == NULL) resourcetype_ = new ::Common::ResourceType;
  return resourcetype_;
}

// optional .Common.EquipmentType equipmentType = 26;
inline bool MsgMissionParameter_Value::has_equipmenttype() const {
  return _has_bit(25);
}
inline void MsgMissionParameter_Value::clear_equipmenttype() {
  if (equipmenttype_ != NULL) equipmenttype_->::Common::EquipmentType::Clear();
  _clear_bit(25);
}
inline const ::Common::EquipmentType& MsgMissionParameter_Value::equipmenttype() const {
  return equipmenttype_ != NULL ? *equipmenttype_ : *default_instance_->equipmenttype_;
}
inline ::Common::EquipmentType* MsgMissionParameter_Value::mutable_equipmenttype() {
  _set_bit(25);
  if (equipmenttype_ == NULL) equipmenttype_ = new ::Common::EquipmentType;
  return equipmenttype_;
}

// optional .Common.FireId tirIndirect = 27;
inline bool MsgMissionParameter_Value::has_tirindirect() const {
  return _has_bit(26);
}
inline void MsgMissionParameter_Value::clear_tirindirect() {
  if (tirindirect_ != NULL) tirindirect_->::Common::FireId::Clear();
  _clear_bit(26);
}
inline const ::Common::FireId& MsgMissionParameter_Value::tirindirect() const {
  return tirindirect_ != NULL ? *tirindirect_ : *default_instance_->tirindirect_;
}
inline ::Common::FireId* MsgMissionParameter_Value::mutable_tirindirect() {
  _set_bit(26);
  if (tirindirect_ == NULL) tirindirect_ = new ::Common::FireId;
  return tirindirect_;
}

// optional .Common.MsgDateTime dateTime = 28;
inline bool MsgMissionParameter_Value::has_datetime() const {
  return _has_bit(27);
}
inline void MsgMissionParameter_Value::clear_datetime() {
  if (datetime_ != NULL) datetime_->::Common::MsgDateTime::Clear();
  _clear_bit(27);
}
inline const ::Common::MsgDateTime& MsgMissionParameter_Value::datetime() const {
  return datetime_ != NULL ? *datetime_ : *default_instance_->datetime_;
}
inline ::Common::MsgDateTime* MsgMissionParameter_Value::mutable_datetime() {
  _set_bit(27);
  if (datetime_ == NULL) datetime_ = new ::Common::MsgDateTime;
  return datetime_;
}

// optional .Common.MsgLogMaintenancePriorities logMaintenancePriorities = 29;
inline bool MsgMissionParameter_Value::has_logmaintenancepriorities() const {
  return _has_bit(28);
}
inline void MsgMissionParameter_Value::clear_logmaintenancepriorities() {
  if (logmaintenancepriorities_ != NULL) logmaintenancepriorities_->::Common::MsgLogMaintenancePriorities::Clear();
  _clear_bit(28);
}
inline const ::Common::MsgLogMaintenancePriorities& MsgMissionParameter_Value::logmaintenancepriorities() const {
  return logmaintenancepriorities_ != NULL ? *logmaintenancepriorities_ : *default_instance_->logmaintenancepriorities_;
}
inline ::Common::MsgLogMaintenancePriorities* MsgMissionParameter_Value::mutable_logmaintenancepriorities() {
  _set_bit(28);
  if (logmaintenancepriorities_ == NULL) logmaintenancepriorities_ = new ::Common::MsgLogMaintenancePriorities;
  return logmaintenancepriorities_;
}

// optional .Common.MsgLogMedicalPriorities logMedicalPriorities = 30;
inline bool MsgMissionParameter_Value::has_logmedicalpriorities() const {
  return _has_bit(29);
}
inline void MsgMissionParameter_Value::clear_logmedicalpriorities() {
  if (logmedicalpriorities_ != NULL) logmedicalpriorities_->::Common::MsgLogMedicalPriorities::Clear();
  _clear_bit(29);
}
inline const ::Common::MsgLogMedicalPriorities& MsgMissionParameter_Value::logmedicalpriorities() const {
  return logmedicalpriorities_ != NULL ? *logmedicalpriorities_ : *default_instance_->logmedicalpriorities_;
}
inline ::Common::MsgLogMedicalPriorities* MsgMissionParameter_Value::mutable_logmedicalpriorities() {
  _set_bit(29);
  if (logmedicalpriorities_ == NULL) logmedicalpriorities_ = new ::Common::MsgLogMedicalPriorities;
  return logmedicalpriorities_;
}

// optional string aCharStr = 31;
inline bool MsgMissionParameter_Value::has_acharstr() const {
  return _has_bit(30);
}
inline void MsgMissionParameter_Value::clear_acharstr() {
  if (acharstr_ != &_default_acharstr_) {
    acharstr_->clear();
  }
  _clear_bit(30);
}
inline const ::std::string& MsgMissionParameter_Value::acharstr() const {
  return *acharstr_;
}
inline void MsgMissionParameter_Value::set_acharstr(const ::std::string& value) {
  _set_bit(30);
  if (acharstr_ == &_default_acharstr_) {
    acharstr_ = new ::std::string;
  }
  acharstr_->assign(value);
}
inline void MsgMissionParameter_Value::set_acharstr(const char* value) {
  _set_bit(30);
  if (acharstr_ == &_default_acharstr_) {
    acharstr_ = new ::std::string;
  }
  acharstr_->assign(value);
}
inline void MsgMissionParameter_Value::set_acharstr(const char* value, size_t size) {
  _set_bit(30);
  if (acharstr_ == &_default_acharstr_) {
    acharstr_ = new ::std::string;
  }
  acharstr_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgMissionParameter_Value::mutable_acharstr() {
  _set_bit(30);
  if (acharstr_ == &_default_acharstr_) {
    acharstr_ = new ::std::string;
  }
  return acharstr_;
}

// optional .Common.MsgMissionObjective missionObjective = 32;
inline bool MsgMissionParameter_Value::has_missionobjective() const {
  return _has_bit(31);
}
inline void MsgMissionParameter_Value::clear_missionobjective() {
  if (missionobjective_ != NULL) missionobjective_->::Common::MsgMissionObjective::Clear();
  _clear_bit(31);
}
inline const ::Common::MsgMissionObjective& MsgMissionParameter_Value::missionobjective() const {
  return missionobjective_ != NULL ? *missionobjective_ : *default_instance_->missionobjective_;
}
inline ::Common::MsgMissionObjective* MsgMissionParameter_Value::mutable_missionobjective() {
  _set_bit(31);
  if (missionobjective_ == NULL) missionobjective_ = new ::Common::MsgMissionObjective;
  return missionobjective_;
}

// optional .Common.MsgMissionObjectiveList missionObjectiveList = 33;
inline bool MsgMissionParameter_Value::has_missionobjectivelist() const {
  return _has_bit(32);
}
inline void MsgMissionParameter_Value::clear_missionobjectivelist() {
  if (missionobjectivelist_ != NULL) missionobjectivelist_->::Common::MsgMissionObjectiveList::Clear();
  _clear_bit(32);
}
inline const ::Common::MsgMissionObjectiveList& MsgMissionParameter_Value::missionobjectivelist() const {
  return missionobjectivelist_ != NULL ? *missionobjectivelist_ : *default_instance_->missionobjectivelist_;
}
inline ::Common::MsgMissionObjectiveList* MsgMissionParameter_Value::mutable_missionobjectivelist() {
  _set_bit(32);
  if (missionobjectivelist_ == NULL) missionobjectivelist_ = new ::Common::MsgMissionObjectiveList;
  return missionobjectivelist_;
}

// optional .Common.MsgLine line = 34;
inline bool MsgMissionParameter_Value::has_line() const {
  return _has_bit(33);
}
inline void MsgMissionParameter_Value::clear_line() {
  if (line_ != NULL) line_->::Common::MsgLine::Clear();
  _clear_bit(33);
}
inline const ::Common::MsgLine& MsgMissionParameter_Value::line() const {
  return line_ != NULL ? *line_ : *default_instance_->line_;
}
inline ::Common::MsgLine* MsgMissionParameter_Value::mutable_line() {
  _set_bit(33);
  if (line_ == NULL) line_ = new ::Common::MsgLine;
  return line_;
}

// optional .Common.MsgLimasOrder limasOrder = 35;
inline bool MsgMissionParameter_Value::has_limasorder() const {
  return _has_bit(34);
}
inline void MsgMissionParameter_Value::clear_limasorder() {
  if (limasorder_ != NULL) limasorder_->::Common::MsgLimasOrder::Clear();
  _clear_bit(34);
}
inline const ::Common::MsgLimasOrder& MsgMissionParameter_Value::limasorder() const {
  return limasorder_ != NULL ? *limasorder_ : *default_instance_->limasorder_;
}
inline ::Common::MsgLimasOrder* MsgMissionParameter_Value::mutable_limasorder() {
  _set_bit(34);
  if (limasorder_ == NULL) limasorder_ = new ::Common::MsgLimasOrder;
  return limasorder_;
}

// optional .Common.MsgIntelligenceList intelligenceList = 36;
inline bool MsgMissionParameter_Value::has_intelligencelist() const {
  return _has_bit(35);
}
inline void MsgMissionParameter_Value::clear_intelligencelist() {
  if (intelligencelist_ != NULL) intelligencelist_->::Common::MsgIntelligenceList::Clear();
  _clear_bit(35);
}
inline const ::Common::MsgIntelligenceList& MsgMissionParameter_Value::intelligencelist() const {
  return intelligencelist_ != NULL ? *intelligencelist_ : *default_instance_->intelligencelist_;
}
inline ::Common::MsgIntelligenceList* MsgMissionParameter_Value::mutable_intelligencelist() {
  _set_bit(35);
  if (intelligencelist_ == NULL) intelligencelist_ = new ::Common::MsgIntelligenceList;
  return intelligencelist_;
}

// optional .Common.UrbanObjectId urbanBlock = 37;
inline bool MsgMissionParameter_Value::has_urbanblock() const {
  return _has_bit(36);
}
inline void MsgMissionParameter_Value::clear_urbanblock() {
  if (urbanblock_ != NULL) urbanblock_->::Common::UrbanObjectId::Clear();
  _clear_bit(36);
}
inline const ::Common::UrbanObjectId& MsgMissionParameter_Value::urbanblock() const {
  return urbanblock_ != NULL ? *urbanblock_ : *default_instance_->urbanblock_;
}
inline ::Common::UrbanObjectId* MsgMissionParameter_Value::mutable_urbanblock() {
  _set_bit(36);
  if (urbanblock_ == NULL) urbanblock_ = new ::Common::UrbanObjectId;
  return urbanblock_;
}

// optional .Common.PartyId party = 38;
inline bool MsgMissionParameter_Value::has_party() const {
  return _has_bit(37);
}
inline void MsgMissionParameter_Value::clear_party() {
  if (party_ != NULL) party_->::Common::PartyId::Clear();
  _clear_bit(37);
}
inline const ::Common::PartyId& MsgMissionParameter_Value::party() const {
  return party_ != NULL ? *party_ : *default_instance_->party_;
}
inline ::Common::PartyId* MsgMissionParameter_Value::mutable_party() {
  _set_bit(37);
  if (party_ == NULL) party_ = new ::Common::PartyId;
  return party_;
}

// optional .Common.FormationId formation = 39;
inline bool MsgMissionParameter_Value::has_formation() const {
  return _has_bit(38);
}
inline void MsgMissionParameter_Value::clear_formation() {
  if (formation_ != NULL) formation_->::Common::FormationId::Clear();
  _clear_bit(38);
}
inline const ::Common::FormationId& MsgMissionParameter_Value::formation() const {
  return formation_ != NULL ? *formation_ : *default_instance_->formation_;
}
inline ::Common::FormationId* MsgMissionParameter_Value::mutable_formation() {
  _set_bit(38);
  if (formation_ == NULL) formation_ = new ::Common::FormationId;
  return formation_;
}

// optional uint32 identifier = 40;
inline bool MsgMissionParameter_Value::has_identifier() const {
  return _has_bit(39);
}
inline void MsgMissionParameter_Value::clear_identifier() {
  identifier_ = 0u;
  _clear_bit(39);
}
inline ::google::protobuf::uint32 MsgMissionParameter_Value::identifier() const {
  return identifier_;
}
inline void MsgMissionParameter_Value::set_identifier(::google::protobuf::uint32 value) {
  _set_bit(39);
  identifier_ = value;
}

// optional int32 quantity = 41;
inline bool MsgMissionParameter_Value::has_quantity() const {
  return _has_bit(40);
}
inline void MsgMissionParameter_Value::clear_quantity() {
  quantity_ = 0;
  _clear_bit(40);
}
inline ::google::protobuf::int32 MsgMissionParameter_Value::quantity() const {
  return quantity_;
}
inline void MsgMissionParameter_Value::set_quantity(::google::protobuf::int32 value) {
  _set_bit(40);
  quantity_ = value;
}

// optional .Common.KnowledgeGroupId knowledgeGroup = 42;
inline bool MsgMissionParameter_Value::has_knowledgegroup() const {
  return _has_bit(41);
}
inline void MsgMissionParameter_Value::clear_knowledgegroup() {
  if (knowledgegroup_ != NULL) knowledgegroup_->::Common::KnowledgeGroupId::Clear();
  _clear_bit(41);
}
inline const ::Common::KnowledgeGroupId& MsgMissionParameter_Value::knowledgegroup() const {
  return knowledgegroup_ != NULL ? *knowledgegroup_ : *default_instance_->knowledgegroup_;
}
inline ::Common::KnowledgeGroupId* MsgMissionParameter_Value::mutable_knowledgegroup() {
  _set_bit(41);
  if (knowledgegroup_ == NULL) knowledgegroup_ = new ::Common::KnowledgeGroupId;
  return knowledgegroup_;
}

// repeated .Common.MsgMissionParameter.Value list = 43;
inline int MsgMissionParameter_Value::list_size() const {
  return list_.size();
}
inline void MsgMissionParameter_Value::clear_list() {
  list_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgMissionParameter_Value >&
MsgMissionParameter_Value::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Common::MsgMissionParameter_Value >*
MsgMissionParameter_Value::mutable_list() {
  return &list_;
}
inline const ::Common::MsgMissionParameter_Value& MsgMissionParameter_Value::list(int index) const {
  return list_.Get(index);
}
inline ::Common::MsgMissionParameter_Value* MsgMissionParameter_Value::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::Common::MsgMissionParameter_Value* MsgMissionParameter_Value::add_list() {
  return list_.Add();
}

// -------------------------------------------------------------------

// MsgMissionParameter

// optional bool null_value = 1;
inline bool MsgMissionParameter::has_null_value() const {
  return _has_bit(0);
}
inline void MsgMissionParameter::clear_null_value() {
  null_value_ = false;
  _clear_bit(0);
}
inline bool MsgMissionParameter::null_value() const {
  return null_value_;
}
inline void MsgMissionParameter::set_null_value(bool value) {
  _set_bit(0);
  null_value_ = value;
}

// optional .Common.MsgMissionParameter.Value value = 2;
inline bool MsgMissionParameter::has_value() const {
  return _has_bit(1);
}
inline void MsgMissionParameter::clear_value() {
  if (value_ != NULL) value_->::Common::MsgMissionParameter_Value::Clear();
  _clear_bit(1);
}
inline const ::Common::MsgMissionParameter_Value& MsgMissionParameter::value() const {
  return value_ != NULL ? *value_ : *default_instance_->value_;
}
inline ::Common::MsgMissionParameter_Value* MsgMissionParameter::mutable_value() {
  _set_bit(1);
  if (value_ == NULL) value_ = new ::Common::MsgMissionParameter_Value;
  return value_;
}

// -------------------------------------------------------------------

// MsgMissionParameters

// repeated .Common.MsgMissionParameter elem = 1;
inline int MsgMissionParameters::elem_size() const {
  return elem_.size();
}
inline void MsgMissionParameters::clear_elem() {
  elem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgMissionParameter >&
MsgMissionParameters::elem() const {
  return elem_;
}
inline ::google::protobuf::RepeatedPtrField< ::Common::MsgMissionParameter >*
MsgMissionParameters::mutable_elem() {
  return &elem_;
}
inline const ::Common::MsgMissionParameter& MsgMissionParameters::elem(int index) const {
  return elem_.Get(index);
}
inline ::Common::MsgMissionParameter* MsgMissionParameters::mutable_elem(int index) {
  return elem_.Mutable(index);
}
inline ::Common::MsgMissionParameter* MsgMissionParameters::add_elem() {
  return elem_.Add();
}

// -------------------------------------------------------------------

// MsgUnitOrder

// required .Common.UnitId tasker = 1;
inline bool MsgUnitOrder::has_tasker() const {
  return _has_bit(0);
}
inline void MsgUnitOrder::clear_tasker() {
  if (tasker_ != NULL) tasker_->::Common::UnitId::Clear();
  _clear_bit(0);
}
inline const ::Common::UnitId& MsgUnitOrder::tasker() const {
  return tasker_ != NULL ? *tasker_ : *default_instance_->tasker_;
}
inline ::Common::UnitId* MsgUnitOrder::mutable_tasker() {
  _set_bit(0);
  if (tasker_ == NULL) tasker_ = new ::Common::UnitId;
  return tasker_;
}

// required .Common.MissionType type = 2;
inline bool MsgUnitOrder::has_type() const {
  return _has_bit(1);
}
inline void MsgUnitOrder::clear_type() {
  if (type_ != NULL) type_->::Common::MissionType::Clear();
  _clear_bit(1);
}
inline const ::Common::MissionType& MsgUnitOrder::type() const {
  return type_ != NULL ? *type_ : *default_instance_->type_;
}
inline ::Common::MissionType* MsgUnitOrder::mutable_type() {
  _set_bit(1);
  if (type_ == NULL) type_ = new ::Common::MissionType;
  return type_;
}

// optional .Common.MsgMissionParameters parameters = 3;
inline bool MsgUnitOrder::has_parameters() const {
  return _has_bit(2);
}
inline void MsgUnitOrder::clear_parameters() {
  if (parameters_ != NULL) parameters_->::Common::MsgMissionParameters::Clear();
  _clear_bit(2);
}
inline const ::Common::MsgMissionParameters& MsgUnitOrder::parameters() const {
  return parameters_ != NULL ? *parameters_ : *default_instance_->parameters_;
}
inline ::Common::MsgMissionParameters* MsgUnitOrder::mutable_parameters() {
  _set_bit(2);
  if (parameters_ == NULL) parameters_ = new ::Common::MsgMissionParameters;
  return parameters_;
}

// optional string label = 4;
inline bool MsgUnitOrder::has_label() const {
  return _has_bit(3);
}
inline void MsgUnitOrder::clear_label() {
  if (label_ != &_default_label_) {
    label_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& MsgUnitOrder::label() const {
  return *label_;
}
inline void MsgUnitOrder::set_label(const ::std::string& value) {
  _set_bit(3);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  label_->assign(value);
}
inline void MsgUnitOrder::set_label(const char* value) {
  _set_bit(3);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  label_->assign(value);
}
inline void MsgUnitOrder::set_label(const char* value, size_t size) {
  _set_bit(3);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  label_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgUnitOrder::mutable_label() {
  _set_bit(3);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  return label_;
}

// optional .Common.MsgLocation symbolLocation = 5;
inline bool MsgUnitOrder::has_symbollocation() const {
  return _has_bit(4);
}
inline void MsgUnitOrder::clear_symbollocation() {
  if (symbollocation_ != NULL) symbollocation_->::Common::MsgLocation::Clear();
  _clear_bit(4);
}
inline const ::Common::MsgLocation& MsgUnitOrder::symbollocation() const {
  return symbollocation_ != NULL ? *symbollocation_ : *default_instance_->symbollocation_;
}
inline ::Common::MsgLocation* MsgUnitOrder::mutable_symbollocation() {
  _set_bit(4);
  if (symbollocation_ == NULL) symbollocation_ = new ::Common::MsgLocation;
  return symbollocation_;
}

// optional .Common.MsgDateTime start_time = 6;
inline bool MsgUnitOrder::has_start_time() const {
  return _has_bit(5);
}
inline void MsgUnitOrder::clear_start_time() {
  if (start_time_ != NULL) start_time_->::Common::MsgDateTime::Clear();
  _clear_bit(5);
}
inline const ::Common::MsgDateTime& MsgUnitOrder::start_time() const {
  return start_time_ != NULL ? *start_time_ : *default_instance_->start_time_;
}
inline ::Common::MsgDateTime* MsgUnitOrder::mutable_start_time() {
  _set_bit(5);
  if (start_time_ == NULL) start_time_ = new ::Common::MsgDateTime;
  return start_time_;
}

// -------------------------------------------------------------------

// MsgAutomatOrder

// required .Common.AutomatId tasker = 1;
inline bool MsgAutomatOrder::has_tasker() const {
  return _has_bit(0);
}
inline void MsgAutomatOrder::clear_tasker() {
  if (tasker_ != NULL) tasker_->::Common::AutomatId::Clear();
  _clear_bit(0);
}
inline const ::Common::AutomatId& MsgAutomatOrder::tasker() const {
  return tasker_ != NULL ? *tasker_ : *default_instance_->tasker_;
}
inline ::Common::AutomatId* MsgAutomatOrder::mutable_tasker() {
  _set_bit(0);
  if (tasker_ == NULL) tasker_ = new ::Common::AutomatId;
  return tasker_;
}

// required .Common.MissionType type = 2;
inline bool MsgAutomatOrder::has_type() const {
  return _has_bit(1);
}
inline void MsgAutomatOrder::clear_type() {
  if (type_ != NULL) type_->::Common::MissionType::Clear();
  _clear_bit(1);
}
inline const ::Common::MissionType& MsgAutomatOrder::type() const {
  return type_ != NULL ? *type_ : *default_instance_->type_;
}
inline ::Common::MissionType* MsgAutomatOrder::mutable_type() {
  _set_bit(1);
  if (type_ == NULL) type_ = new ::Common::MissionType;
  return type_;
}

// optional .Common.MsgMissionParameters parameters = 3;
inline bool MsgAutomatOrder::has_parameters() const {
  return _has_bit(2);
}
inline void MsgAutomatOrder::clear_parameters() {
  if (parameters_ != NULL) parameters_->::Common::MsgMissionParameters::Clear();
  _clear_bit(2);
}
inline const ::Common::MsgMissionParameters& MsgAutomatOrder::parameters() const {
  return parameters_ != NULL ? *parameters_ : *default_instance_->parameters_;
}
inline ::Common::MsgMissionParameters* MsgAutomatOrder::mutable_parameters() {
  _set_bit(2);
  if (parameters_ == NULL) parameters_ = new ::Common::MsgMissionParameters;
  return parameters_;
}

// optional string label = 4;
inline bool MsgAutomatOrder::has_label() const {
  return _has_bit(3);
}
inline void MsgAutomatOrder::clear_label() {
  if (label_ != &_default_label_) {
    label_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& MsgAutomatOrder::label() const {
  return *label_;
}
inline void MsgAutomatOrder::set_label(const ::std::string& value) {
  _set_bit(3);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  label_->assign(value);
}
inline void MsgAutomatOrder::set_label(const char* value) {
  _set_bit(3);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  label_->assign(value);
}
inline void MsgAutomatOrder::set_label(const char* value, size_t size) {
  _set_bit(3);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  label_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgAutomatOrder::mutable_label() {
  _set_bit(3);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  return label_;
}

// optional .Common.MsgLocation symbolLocation = 5;
inline bool MsgAutomatOrder::has_symbollocation() const {
  return _has_bit(4);
}
inline void MsgAutomatOrder::clear_symbollocation() {
  if (symbollocation_ != NULL) symbollocation_->::Common::MsgLocation::Clear();
  _clear_bit(4);
}
inline const ::Common::MsgLocation& MsgAutomatOrder::symbollocation() const {
  return symbollocation_ != NULL ? *symbollocation_ : *default_instance_->symbollocation_;
}
inline ::Common::MsgLocation* MsgAutomatOrder::mutable_symbollocation() {
  _set_bit(4);
  if (symbollocation_ == NULL) symbollocation_ = new ::Common::MsgLocation;
  return symbollocation_;
}

// optional .Common.MsgDateTime start_time = 6;
inline bool MsgAutomatOrder::has_start_time() const {
  return _has_bit(5);
}
inline void MsgAutomatOrder::clear_start_time() {
  if (start_time_ != NULL) start_time_->::Common::MsgDateTime::Clear();
  _clear_bit(5);
}
inline const ::Common::MsgDateTime& MsgAutomatOrder::start_time() const {
  return start_time_ != NULL ? *start_time_ : *default_instance_->start_time_;
}
inline ::Common::MsgDateTime* MsgAutomatOrder::mutable_start_time() {
  _set_bit(5);
  if (start_time_ == NULL) start_time_ = new ::Common::MsgDateTime;
  return start_time_;
}

// -------------------------------------------------------------------

// MsgCrowdOrder

// required .Common.CrowdId tasker = 1;
inline bool MsgCrowdOrder::has_tasker() const {
  return _has_bit(0);
}
inline void MsgCrowdOrder::clear_tasker() {
  if (tasker_ != NULL) tasker_->::Common::CrowdId::Clear();
  _clear_bit(0);
}
inline const ::Common::CrowdId& MsgCrowdOrder::tasker() const {
  return tasker_ != NULL ? *tasker_ : *default_instance_->tasker_;
}
inline ::Common::CrowdId* MsgCrowdOrder::mutable_tasker() {
  _set_bit(0);
  if (tasker_ == NULL) tasker_ = new ::Common::CrowdId;
  return tasker_;
}

// required .Common.MissionType type = 2;
inline bool MsgCrowdOrder::has_type() const {
  return _has_bit(1);
}
inline void MsgCrowdOrder::clear_type() {
  if (type_ != NULL) type_->::Common::MissionType::Clear();
  _clear_bit(1);
}
inline const ::Common::MissionType& MsgCrowdOrder::type() const {
  return type_ != NULL ? *type_ : *default_instance_->type_;
}
inline ::Common::MissionType* MsgCrowdOrder::mutable_type() {
  _set_bit(1);
  if (type_ == NULL) type_ = new ::Common::MissionType;
  return type_;
}

// optional .Common.MsgMissionParameters parameters = 3;
inline bool MsgCrowdOrder::has_parameters() const {
  return _has_bit(2);
}
inline void MsgCrowdOrder::clear_parameters() {
  if (parameters_ != NULL) parameters_->::Common::MsgMissionParameters::Clear();
  _clear_bit(2);
}
inline const ::Common::MsgMissionParameters& MsgCrowdOrder::parameters() const {
  return parameters_ != NULL ? *parameters_ : *default_instance_->parameters_;
}
inline ::Common::MsgMissionParameters* MsgCrowdOrder::mutable_parameters() {
  _set_bit(2);
  if (parameters_ == NULL) parameters_ = new ::Common::MsgMissionParameters;
  return parameters_;
}

// optional string label = 4;
inline bool MsgCrowdOrder::has_label() const {
  return _has_bit(3);
}
inline void MsgCrowdOrder::clear_label() {
  if (label_ != &_default_label_) {
    label_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& MsgCrowdOrder::label() const {
  return *label_;
}
inline void MsgCrowdOrder::set_label(const ::std::string& value) {
  _set_bit(3);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  label_->assign(value);
}
inline void MsgCrowdOrder::set_label(const char* value) {
  _set_bit(3);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  label_->assign(value);
}
inline void MsgCrowdOrder::set_label(const char* value, size_t size) {
  _set_bit(3);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  label_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgCrowdOrder::mutable_label() {
  _set_bit(3);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  return label_;
}

// optional .Common.MsgLocation symbolLocation = 5;
inline bool MsgCrowdOrder::has_symbollocation() const {
  return _has_bit(4);
}
inline void MsgCrowdOrder::clear_symbollocation() {
  if (symbollocation_ != NULL) symbollocation_->::Common::MsgLocation::Clear();
  _clear_bit(4);
}
inline const ::Common::MsgLocation& MsgCrowdOrder::symbollocation() const {
  return symbollocation_ != NULL ? *symbollocation_ : *default_instance_->symbollocation_;
}
inline ::Common::MsgLocation* MsgCrowdOrder::mutable_symbollocation() {
  _set_bit(4);
  if (symbollocation_ == NULL) symbollocation_ = new ::Common::MsgLocation;
  return symbollocation_;
}

// optional .Common.MsgDateTime start_time = 6;
inline bool MsgCrowdOrder::has_start_time() const {
  return _has_bit(5);
}
inline void MsgCrowdOrder::clear_start_time() {
  if (start_time_ != NULL) start_time_->::Common::MsgDateTime::Clear();
  _clear_bit(5);
}
inline const ::Common::MsgDateTime& MsgCrowdOrder::start_time() const {
  return start_time_ != NULL ? *start_time_ : *default_instance_->start_time_;
}
inline ::Common::MsgDateTime* MsgCrowdOrder::mutable_start_time() {
  _set_bit(5);
  if (start_time_ == NULL) start_time_ = new ::Common::MsgDateTime;
  return start_time_;
}

// -------------------------------------------------------------------

// ClientObjectProperty_Value

// optional string string_value = 1;
inline bool ClientObjectProperty_Value::has_string_value() const {
  return _has_bit(0);
}
inline void ClientObjectProperty_Value::clear_string_value() {
  if (string_value_ != &_default_string_value_) {
    string_value_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& ClientObjectProperty_Value::string_value() const {
  return *string_value_;
}
inline void ClientObjectProperty_Value::set_string_value(const ::std::string& value) {
  _set_bit(0);
  if (string_value_ == &_default_string_value_) {
    string_value_ = new ::std::string;
  }
  string_value_->assign(value);
}
inline void ClientObjectProperty_Value::set_string_value(const char* value) {
  _set_bit(0);
  if (string_value_ == &_default_string_value_) {
    string_value_ = new ::std::string;
  }
  string_value_->assign(value);
}
inline void ClientObjectProperty_Value::set_string_value(const char* value, size_t size) {
  _set_bit(0);
  if (string_value_ == &_default_string_value_) {
    string_value_ = new ::std::string;
  }
  string_value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ClientObjectProperty_Value::mutable_string_value() {
  _set_bit(0);
  if (string_value_ == &_default_string_value_) {
    string_value_ = new ::std::string;
  }
  return string_value_;
}

// optional int32 integer_value = 2;
inline bool ClientObjectProperty_Value::has_integer_value() const {
  return _has_bit(1);
}
inline void ClientObjectProperty_Value::clear_integer_value() {
  integer_value_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 ClientObjectProperty_Value::integer_value() const {
  return integer_value_;
}
inline void ClientObjectProperty_Value::set_integer_value(::google::protobuf::int32 value) {
  _set_bit(1);
  integer_value_ = value;
}

// optional uint32 unsigned_integer_value = 3;
inline bool ClientObjectProperty_Value::has_unsigned_integer_value() const {
  return _has_bit(2);
}
inline void ClientObjectProperty_Value::clear_unsigned_integer_value() {
  unsigned_integer_value_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 ClientObjectProperty_Value::unsigned_integer_value() const {
  return unsigned_integer_value_;
}
inline void ClientObjectProperty_Value::set_unsigned_integer_value(::google::protobuf::uint32 value) {
  _set_bit(2);
  unsigned_integer_value_ = value;
}

// optional float float_value = 4;
inline bool ClientObjectProperty_Value::has_float_value() const {
  return _has_bit(3);
}
inline void ClientObjectProperty_Value::clear_float_value() {
  float_value_ = 0;
  _clear_bit(3);
}
inline float ClientObjectProperty_Value::float_value() const {
  return float_value_;
}
inline void ClientObjectProperty_Value::set_float_value(float value) {
  _set_bit(3);
  float_value_ = value;
}

// optional bool bool_value = 5;
inline bool ClientObjectProperty_Value::has_bool_value() const {
  return _has_bit(4);
}
inline void ClientObjectProperty_Value::clear_bool_value() {
  bool_value_ = false;
  _clear_bit(4);
}
inline bool ClientObjectProperty_Value::bool_value() const {
  return bool_value_;
}
inline void ClientObjectProperty_Value::set_bool_value(bool value) {
  _set_bit(4);
  bool_value_ = value;
}

// -------------------------------------------------------------------

// ClientObjectProperty

// required string name = 1;
inline bool ClientObjectProperty::has_name() const {
  return _has_bit(0);
}
inline void ClientObjectProperty::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& ClientObjectProperty::name() const {
  return *name_;
}
inline void ClientObjectProperty::set_name(const ::std::string& value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ClientObjectProperty::set_name(const char* value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ClientObjectProperty::set_name(const char* value, size_t size) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ClientObjectProperty::mutable_name() {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// required .Common.ClientObjectProperty.Value value = 2;
inline bool ClientObjectProperty::has_value() const {
  return _has_bit(1);
}
inline void ClientObjectProperty::clear_value() {
  if (value_ != NULL) value_->::Common::ClientObjectProperty_Value::Clear();
  _clear_bit(1);
}
inline const ::Common::ClientObjectProperty_Value& ClientObjectProperty::value() const {
  return value_ != NULL ? *value_ : *default_instance_->value_;
}
inline ::Common::ClientObjectProperty_Value* ClientObjectProperty::mutable_value() {
  _set_bit(1);
  if (value_ == NULL) value_ = new ::Common::ClientObjectProperty_Value;
  return value_;
}

// -------------------------------------------------------------------

// MsgTacticalLine_Diffusion

// optional .Common.AutomatId automat = 1;
inline bool MsgTacticalLine_Diffusion::has_automat() const {
  return _has_bit(0);
}
inline void MsgTacticalLine_Diffusion::clear_automat() {
  if (automat_ != NULL) automat_->::Common::AutomatId::Clear();
  _clear_bit(0);
}
inline const ::Common::AutomatId& MsgTacticalLine_Diffusion::automat() const {
  return automat_ != NULL ? *automat_ : *default_instance_->automat_;
}
inline ::Common::AutomatId* MsgTacticalLine_Diffusion::mutable_automat() {
  _set_bit(0);
  if (automat_ == NULL) automat_ = new ::Common::AutomatId;
  return automat_;
}

// optional .Common.FormationId formation = 2;
inline bool MsgTacticalLine_Diffusion::has_formation() const {
  return _has_bit(1);
}
inline void MsgTacticalLine_Diffusion::clear_formation() {
  if (formation_ != NULL) formation_->::Common::FormationId::Clear();
  _clear_bit(1);
}
inline const ::Common::FormationId& MsgTacticalLine_Diffusion::formation() const {
  return formation_ != NULL ? *formation_ : *default_instance_->formation_;
}
inline ::Common::FormationId* MsgTacticalLine_Diffusion::mutable_formation() {
  _set_bit(1);
  if (formation_ == NULL) formation_ = new ::Common::FormationId;
  return formation_;
}

// -------------------------------------------------------------------

// MsgTacticalLine

// required string name = 1;
inline bool MsgTacticalLine::has_name() const {
  return _has_bit(0);
}
inline void MsgTacticalLine::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgTacticalLine::name() const {
  return *name_;
}
inline void MsgTacticalLine::set_name(const ::std::string& value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgTacticalLine::set_name(const char* value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgTacticalLine::set_name(const char* value, size_t size) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgTacticalLine::mutable_name() {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// required .Common.MsgLocation geometry = 2;
inline bool MsgTacticalLine::has_geometry() const {
  return _has_bit(1);
}
inline void MsgTacticalLine::clear_geometry() {
  if (geometry_ != NULL) geometry_->::Common::MsgLocation::Clear();
  _clear_bit(1);
}
inline const ::Common::MsgLocation& MsgTacticalLine::geometry() const {
  return geometry_ != NULL ? *geometry_ : *default_instance_->geometry_;
}
inline ::Common::MsgLocation* MsgTacticalLine::mutable_geometry() {
  _set_bit(1);
  if (geometry_ == NULL) geometry_ = new ::Common::MsgLocation;
  return geometry_;
}

// required .Common.MsgTacticalLine.Diffusion diffusion = 3;
inline bool MsgTacticalLine::has_diffusion() const {
  return _has_bit(2);
}
inline void MsgTacticalLine::clear_diffusion() {
  if (diffusion_ != NULL) diffusion_->::Common::MsgTacticalLine_Diffusion::Clear();
  _clear_bit(2);
}
inline const ::Common::MsgTacticalLine_Diffusion& MsgTacticalLine::diffusion() const {
  return diffusion_ != NULL ? *diffusion_ : *default_instance_->diffusion_;
}
inline ::Common::MsgTacticalLine_Diffusion* MsgTacticalLine::mutable_diffusion() {
  _set_bit(2);
  if (diffusion_ == NULL) diffusion_ = new ::Common::MsgTacticalLine_Diffusion;
  return diffusion_;
}

// -------------------------------------------------------------------

// MsgShape

// required string category = 1;
inline bool MsgShape::has_category() const {
  return _has_bit(0);
}
inline void MsgShape::clear_category() {
  if (category_ != &_default_category_) {
    category_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgShape::category() const {
  return *category_;
}
inline void MsgShape::set_category(const ::std::string& value) {
  _set_bit(0);
  if (category_ == &_default_category_) {
    category_ = new ::std::string;
  }
  category_->assign(value);
}
inline void MsgShape::set_category(const char* value) {
  _set_bit(0);
  if (category_ == &_default_category_) {
    category_ = new ::std::string;
  }
  category_->assign(value);
}
inline void MsgShape::set_category(const char* value, size_t size) {
  _set_bit(0);
  if (category_ == &_default_category_) {
    category_ = new ::std::string;
  }
  category_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgShape::mutable_category() {
  _set_bit(0);
  if (category_ == &_default_category_) {
    category_ = new ::std::string;
  }
  return category_;
}

// required string color = 2;
inline bool MsgShape::has_color() const {
  return _has_bit(1);
}
inline void MsgShape::clear_color() {
  if (color_ != &_default_color_) {
    color_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& MsgShape::color() const {
  return *color_;
}
inline void MsgShape::set_color(const ::std::string& value) {
  _set_bit(1);
  if (color_ == &_default_color_) {
    color_ = new ::std::string;
  }
  color_->assign(value);
}
inline void MsgShape::set_color(const char* value) {
  _set_bit(1);
  if (color_ == &_default_color_) {
    color_ = new ::std::string;
  }
  color_->assign(value);
}
inline void MsgShape::set_color(const char* value, size_t size) {
  _set_bit(1);
  if (color_ == &_default_color_) {
    color_ = new ::std::string;
  }
  color_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgShape::mutable_color() {
  _set_bit(1);
  if (color_ == &_default_color_) {
    color_ = new ::std::string;
  }
  return color_;
}

// required string pattern = 3;
inline bool MsgShape::has_pattern() const {
  return _has_bit(2);
}
inline void MsgShape::clear_pattern() {
  if (pattern_ != &_default_pattern_) {
    pattern_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& MsgShape::pattern() const {
  return *pattern_;
}
inline void MsgShape::set_pattern(const ::std::string& value) {
  _set_bit(2);
  if (pattern_ == &_default_pattern_) {
    pattern_ = new ::std::string;
  }
  pattern_->assign(value);
}
inline void MsgShape::set_pattern(const char* value) {
  _set_bit(2);
  if (pattern_ == &_default_pattern_) {
    pattern_ = new ::std::string;
  }
  pattern_->assign(value);
}
inline void MsgShape::set_pattern(const char* value, size_t size) {
  _set_bit(2);
  if (pattern_ == &_default_pattern_) {
    pattern_ = new ::std::string;
  }
  pattern_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgShape::mutable_pattern() {
  _set_bit(2);
  if (pattern_ == &_default_pattern_) {
    pattern_ = new ::std::string;
  }
  return pattern_;
}

// required .Common.MsgCoordLatLongList points = 4;
inline bool MsgShape::has_points() const {
  return _has_bit(3);
}
inline void MsgShape::clear_points() {
  if (points_ != NULL) points_->::Common::MsgCoordLatLongList::Clear();
  _clear_bit(3);
}
inline const ::Common::MsgCoordLatLongList& MsgShape::points() const {
  return points_ != NULL ? *points_ : *default_instance_->points_;
}
inline ::Common::MsgCoordLatLongList* MsgShape::mutable_points() {
  _set_bit(3);
  if (points_ == NULL) points_ = new ::Common::MsgCoordLatLongList;
  return points_;
}

// -------------------------------------------------------------------

// MsgChatTarget

// required string profile = 1;
inline bool MsgChatTarget::has_profile() const {
  return _has_bit(0);
}
inline void MsgChatTarget::clear_profile() {
  if (profile_ != &_default_profile_) {
    profile_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgChatTarget::profile() const {
  return *profile_;
}
inline void MsgChatTarget::set_profile(const ::std::string& value) {
  _set_bit(0);
  if (profile_ == &_default_profile_) {
    profile_ = new ::std::string;
  }
  profile_->assign(value);
}
inline void MsgChatTarget::set_profile(const char* value) {
  _set_bit(0);
  if (profile_ == &_default_profile_) {
    profile_ = new ::std::string;
  }
  profile_->assign(value);
}
inline void MsgChatTarget::set_profile(const char* value, size_t size) {
  _set_bit(0);
  if (profile_ == &_default_profile_) {
    profile_ = new ::std::string;
  }
  profile_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgChatTarget::mutable_profile() {
  _set_bit(0);
  if (profile_ == &_default_profile_) {
    profile_ = new ::std::string;
  }
  return profile_;
}

// -------------------------------------------------------------------

// MsgTextMessage

// required .Common.MsgChatTarget source = 1;
inline bool MsgTextMessage::has_source() const {
  return _has_bit(0);
}
inline void MsgTextMessage::clear_source() {
  if (source_ != NULL) source_->::Common::MsgChatTarget::Clear();
  _clear_bit(0);
}
inline const ::Common::MsgChatTarget& MsgTextMessage::source() const {
  return source_ != NULL ? *source_ : *default_instance_->source_;
}
inline ::Common::MsgChatTarget* MsgTextMessage::mutable_source() {
  _set_bit(0);
  if (source_ == NULL) source_ = new ::Common::MsgChatTarget;
  return source_;
}

// required .Common.MsgChatTarget target = 2;
inline bool MsgTextMessage::has_target() const {
  return _has_bit(1);
}
inline void MsgTextMessage::clear_target() {
  if (target_ != NULL) target_->::Common::MsgChatTarget::Clear();
  _clear_bit(1);
}
inline const ::Common::MsgChatTarget& MsgTextMessage::target() const {
  return target_ != NULL ? *target_ : *default_instance_->target_;
}
inline ::Common::MsgChatTarget* MsgTextMessage::mutable_target() {
  _set_bit(1);
  if (target_ == NULL) target_ = new ::Common::MsgChatTarget;
  return target_;
}

// required string message = 3;
inline bool MsgTextMessage::has_message() const {
  return _has_bit(2);
}
inline void MsgTextMessage::clear_message() {
  if (message_ != &_default_message_) {
    message_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& MsgTextMessage::message() const {
  return *message_;
}
inline void MsgTextMessage::set_message(const ::std::string& value) {
  _set_bit(2);
  if (message_ == &_default_message_) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void MsgTextMessage::set_message(const char* value) {
  _set_bit(2);
  if (message_ == &_default_message_) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void MsgTextMessage::set_message(const char* value, size_t size) {
  _set_bit(2);
  if (message_ == &_default_message_) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgTextMessage::mutable_message() {
  _set_bit(2);
  if (message_ == &_default_message_) {
    message_ = new ::std::string;
  }
  return message_;
}

// -------------------------------------------------------------------

// ResourceNetwork_Link

// required .Common.ResourceNetwork.Link.TargetKind kind = 1;
inline bool ResourceNetwork_Link::has_kind() const {
  return _has_bit(0);
}
inline void ResourceNetwork_Link::clear_kind() {
  kind_ = 1;
  _clear_bit(0);
}
inline ::Common::ResourceNetwork_Link_TargetKind ResourceNetwork_Link::kind() const {
  return static_cast< ::Common::ResourceNetwork_Link_TargetKind >(kind_);
}
inline void ResourceNetwork_Link::set_kind(::Common::ResourceNetwork_Link_TargetKind value) {
  GOOGLE_DCHECK(::Common::ResourceNetwork_Link_TargetKind_IsValid(value));
  _set_bit(0);
  kind_ = value;
}

// required uint32 target_id = 2;
inline bool ResourceNetwork_Link::has_target_id() const {
  return _has_bit(1);
}
inline void ResourceNetwork_Link::clear_target_id() {
  target_id_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 ResourceNetwork_Link::target_id() const {
  return target_id_;
}
inline void ResourceNetwork_Link::set_target_id(::google::protobuf::uint32 value) {
  _set_bit(1);
  target_id_ = value;
}

// required int32 capacity = 3;
inline bool ResourceNetwork_Link::has_capacity() const {
  return _has_bit(2);
}
inline void ResourceNetwork_Link::clear_capacity() {
  capacity_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 ResourceNetwork_Link::capacity() const {
  return capacity_;
}
inline void ResourceNetwork_Link::set_capacity(::google::protobuf::int32 value) {
  _set_bit(2);
  capacity_ = value;
}

// required uint32 flow = 4;
inline bool ResourceNetwork_Link::has_flow() const {
  return _has_bit(3);
}
inline void ResourceNetwork_Link::clear_flow() {
  flow_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 ResourceNetwork_Link::flow() const {
  return flow_;
}
inline void ResourceNetwork_Link::set_flow(::google::protobuf::uint32 value) {
  _set_bit(3);
  flow_ = value;
}

// -------------------------------------------------------------------

// ResourceNetwork

// required .Common.ResourceNetworkType resource = 1;
inline bool ResourceNetwork::has_resource() const {
  return _has_bit(0);
}
inline void ResourceNetwork::clear_resource() {
  if (resource_ != NULL) resource_->::Common::ResourceNetworkType::Clear();
  _clear_bit(0);
}
inline const ::Common::ResourceNetworkType& ResourceNetwork::resource() const {
  return resource_ != NULL ? *resource_ : *default_instance_->resource_;
}
inline ::Common::ResourceNetworkType* ResourceNetwork::mutable_resource() {
  _set_bit(0);
  if (resource_ == NULL) resource_ = new ::Common::ResourceNetworkType;
  return resource_;
}

// repeated .Common.ResourceNetwork.Link link = 2;
inline int ResourceNetwork::link_size() const {
  return link_.size();
}
inline void ResourceNetwork::clear_link() {
  link_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::ResourceNetwork_Link >&
ResourceNetwork::link() const {
  return link_;
}
inline ::google::protobuf::RepeatedPtrField< ::Common::ResourceNetwork_Link >*
ResourceNetwork::mutable_link() {
  return &link_;
}
inline const ::Common::ResourceNetwork_Link& ResourceNetwork::link(int index) const {
  return link_.Get(index);
}
inline ::Common::ResourceNetwork_Link* ResourceNetwork::mutable_link(int index) {
  return link_.Mutable(index);
}
inline ::Common::ResourceNetwork_Link* ResourceNetwork::add_link() {
  return link_.Add();
}

// required bool enabled = 3;
inline bool ResourceNetwork::has_enabled() const {
  return _has_bit(2);
}
inline void ResourceNetwork::clear_enabled() {
  enabled_ = false;
  _clear_bit(2);
}
inline bool ResourceNetwork::enabled() const {
  return enabled_;
}
inline void ResourceNetwork::set_enabled(bool value) {
  _set_bit(2);
  enabled_ = value;
}

// optional uint32 max_stock = 4;
inline bool ResourceNetwork::has_max_stock() const {
  return _has_bit(3);
}
inline void ResourceNetwork::clear_max_stock() {
  max_stock_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 ResourceNetwork::max_stock() const {
  return max_stock_;
}
inline void ResourceNetwork::set_max_stock(::google::protobuf::uint32 value) {
  _set_bit(3);
  max_stock_ = value;
}

// optional uint32 stock = 5;
inline bool ResourceNetwork::has_stock() const {
  return _has_bit(4);
}
inline void ResourceNetwork::clear_stock() {
  stock_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 ResourceNetwork::stock() const {
  return stock_;
}
inline void ResourceNetwork::set_stock(::google::protobuf::uint32 value) {
  _set_bit(4);
  stock_ = value;
}

// optional uint32 production = 6;
inline bool ResourceNetwork::has_production() const {
  return _has_bit(5);
}
inline void ResourceNetwork::clear_production() {
  production_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 ResourceNetwork::production() const {
  return production_;
}
inline void ResourceNetwork::set_production(::google::protobuf::uint32 value) {
  _set_bit(5);
  production_ = value;
}

// optional uint32 consumption = 7;
inline bool ResourceNetwork::has_consumption() const {
  return _has_bit(6);
}
inline void ResourceNetwork::clear_consumption() {
  consumption_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 ResourceNetwork::consumption() const {
  return consumption_;
}
inline void ResourceNetwork::set_consumption(::google::protobuf::uint32 value) {
  _set_bit(6);
  consumption_ = value;
}

// optional bool critical = 8;
inline bool ResourceNetwork::has_critical() const {
  return _has_bit(7);
}
inline void ResourceNetwork::clear_critical() {
  critical_ = false;
  _clear_bit(7);
}
inline bool ResourceNetwork::critical() const {
  return critical_;
}
inline void ResourceNetwork::set_critical(bool value) {
  _set_bit(7);
  critical_ = value;
}

// -------------------------------------------------------------------

// ObjectAttributeResourceNetwork

// repeated .Common.ResourceNetwork network = 1;
inline int ObjectAttributeResourceNetwork::network_size() const {
  return network_.size();
}
inline void ObjectAttributeResourceNetwork::clear_network() {
  network_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::ResourceNetwork >&
ObjectAttributeResourceNetwork::network() const {
  return network_;
}
inline ::google::protobuf::RepeatedPtrField< ::Common::ResourceNetwork >*
ObjectAttributeResourceNetwork::mutable_network() {
  return &network_;
}
inline const ::Common::ResourceNetwork& ObjectAttributeResourceNetwork::network(int index) const {
  return network_.Get(index);
}
inline ::Common::ResourceNetwork* ObjectAttributeResourceNetwork::mutable_network(int index) {
  return network_.Mutable(index);
}
inline ::Common::ResourceNetwork* ObjectAttributeResourceNetwork::add_network() {
  return network_.Add();
}

// -------------------------------------------------------------------

// ObjectAttributeConstruction

// optional .Common.ResourceType resource = 1;
inline bool ObjectAttributeConstruction::has_resource() const {
  return _has_bit(0);
}
inline void ObjectAttributeConstruction::clear_resource() {
  if (resource_ != NULL) resource_->::Common::ResourceType::Clear();
  _clear_bit(0);
}
inline const ::Common::ResourceType& ObjectAttributeConstruction::resource() const {
  return resource_ != NULL ? *resource_ : *default_instance_->resource_;
}
inline ::Common::ResourceType* ObjectAttributeConstruction::mutable_resource() {
  _set_bit(0);
  if (resource_ == NULL) resource_ = new ::Common::ResourceType;
  return resource_;
}

// optional int32 dotation_nbr = 2;
inline bool ObjectAttributeConstruction::has_dotation_nbr() const {
  return _has_bit(1);
}
inline void ObjectAttributeConstruction::clear_dotation_nbr() {
  dotation_nbr_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 ObjectAttributeConstruction::dotation_nbr() const {
  return dotation_nbr_;
}
inline void ObjectAttributeConstruction::set_dotation_nbr(::google::protobuf::int32 value) {
  _set_bit(1);
  dotation_nbr_ = value;
}

// optional float density = 3;
inline bool ObjectAttributeConstruction::has_density() const {
  return _has_bit(2);
}
inline void ObjectAttributeConstruction::clear_density() {
  density_ = 0;
  _clear_bit(2);
}
inline float ObjectAttributeConstruction::density() const {
  return density_;
}
inline void ObjectAttributeConstruction::set_density(float value) {
  _set_bit(2);
  density_ = value;
}

// optional int32 percentage = 4;
inline bool ObjectAttributeConstruction::has_percentage() const {
  return _has_bit(3);
}
inline void ObjectAttributeConstruction::clear_percentage() {
  percentage_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 ObjectAttributeConstruction::percentage() const {
  return percentage_;
}
inline void ObjectAttributeConstruction::set_percentage(::google::protobuf::int32 value) {
  _set_bit(3);
  percentage_ = value;
}

// -------------------------------------------------------------------

// ObjectAttributeMine

// optional .Common.ResourceType resource = 1;
inline bool ObjectAttributeMine::has_resource() const {
  return _has_bit(0);
}
inline void ObjectAttributeMine::clear_resource() {
  if (resource_ != NULL) resource_->::Common::ResourceType::Clear();
  _clear_bit(0);
}
inline const ::Common::ResourceType& ObjectAttributeMine::resource() const {
  return resource_ != NULL ? *resource_ : *default_instance_->resource_;
}
inline ::Common::ResourceType* ObjectAttributeMine::mutable_resource() {
  _set_bit(0);
  if (resource_ == NULL) resource_ = new ::Common::ResourceType;
  return resource_;
}

// optional int32 dotation_nbr = 2;
inline bool ObjectAttributeMine::has_dotation_nbr() const {
  return _has_bit(1);
}
inline void ObjectAttributeMine::clear_dotation_nbr() {
  dotation_nbr_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 ObjectAttributeMine::dotation_nbr() const {
  return dotation_nbr_;
}
inline void ObjectAttributeMine::set_dotation_nbr(::google::protobuf::int32 value) {
  _set_bit(1);
  dotation_nbr_ = value;
}

// optional float density = 3;
inline bool ObjectAttributeMine::has_density() const {
  return _has_bit(2);
}
inline void ObjectAttributeMine::clear_density() {
  density_ = 0;
  _clear_bit(2);
}
inline float ObjectAttributeMine::density() const {
  return density_;
}
inline void ObjectAttributeMine::set_density(float value) {
  _set_bit(2);
  density_ = value;
}

// optional int32 percentage = 4;
inline bool ObjectAttributeMine::has_percentage() const {
  return _has_bit(3);
}
inline void ObjectAttributeMine::clear_percentage() {
  percentage_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 ObjectAttributeMine::percentage() const {
  return percentage_;
}
inline void ObjectAttributeMine::set_percentage(::google::protobuf::int32 value) {
  _set_bit(3);
  percentage_ = value;
}

// -------------------------------------------------------------------

// ObjectAttributeLogistic

// required .Common.AutomatId tc2 = 1;
inline bool ObjectAttributeLogistic::has_tc2() const {
  return _has_bit(0);
}
inline void ObjectAttributeLogistic::clear_tc2() {
  if (tc2_ != NULL) tc2_->::Common::AutomatId::Clear();
  _clear_bit(0);
}
inline const ::Common::AutomatId& ObjectAttributeLogistic::tc2() const {
  return tc2_ != NULL ? *tc2_ : *default_instance_->tc2_;
}
inline ::Common::AutomatId* ObjectAttributeLogistic::mutable_tc2() {
  _set_bit(0);
  if (tc2_ == NULL) tc2_ = new ::Common::AutomatId;
  return tc2_;
}

// -------------------------------------------------------------------

// ObjectAttributeInteractionHeight

// required float height = 1;
inline bool ObjectAttributeInteractionHeight::has_height() const {
  return _has_bit(0);
}
inline void ObjectAttributeInteractionHeight::clear_height() {
  height_ = 0;
  _clear_bit(0);
}
inline float ObjectAttributeInteractionHeight::height() const {
  return height_;
}
inline void ObjectAttributeInteractionHeight::set_height(float value) {
  _set_bit(0);
  height_ = value;
}

// -------------------------------------------------------------------

// ObjectAttributeObstacle

// required .Common.ObstacleType.DemolitionTargetType type = 1;
inline bool ObjectAttributeObstacle::has_type() const {
  return _has_bit(0);
}
inline void ObjectAttributeObstacle::clear_type() {
  type_ = 0;
  _clear_bit(0);
}
inline ::Common::ObstacleType_DemolitionTargetType ObjectAttributeObstacle::type() const {
  return static_cast< ::Common::ObstacleType_DemolitionTargetType >(type_);
}
inline void ObjectAttributeObstacle::set_type(::Common::ObstacleType_DemolitionTargetType value) {
  GOOGLE_DCHECK(::Common::ObstacleType_DemolitionTargetType_IsValid(value));
  _set_bit(0);
  type_ = value;
}

// optional bool activated = 2;
inline bool ObjectAttributeObstacle::has_activated() const {
  return _has_bit(1);
}
inline void ObjectAttributeObstacle::clear_activated() {
  activated_ = false;
  _clear_bit(1);
}
inline bool ObjectAttributeObstacle::activated() const {
  return activated_;
}
inline void ObjectAttributeObstacle::set_activated(bool value) {
  _set_bit(1);
  activated_ = value;
}

// optional int32 activation_time = 3;
inline bool ObjectAttributeObstacle::has_activation_time() const {
  return _has_bit(2);
}
inline void ObjectAttributeObstacle::clear_activation_time() {
  activation_time_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 ObjectAttributeObstacle::activation_time() const {
  return activation_time_;
}
inline void ObjectAttributeObstacle::set_activation_time(::google::protobuf::int32 value) {
  _set_bit(2);
  activation_time_ = value;
}

// -------------------------------------------------------------------

// ObjectAttributeActivityTime

// required int32 value = 1;
inline bool ObjectAttributeActivityTime::has_value() const {
  return _has_bit(0);
}
inline void ObjectAttributeActivityTime::clear_value() {
  value_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 ObjectAttributeActivityTime::value() const {
  return value_;
}
inline void ObjectAttributeActivityTime::set_value(::google::protobuf::int32 value) {
  _set_bit(0);
  value_ = value;
}

// -------------------------------------------------------------------

// ObjectAttributeBypass

// required int32 percentage = 1;
inline bool ObjectAttributeBypass::has_percentage() const {
  return _has_bit(0);
}
inline void ObjectAttributeBypass::clear_percentage() {
  percentage_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 ObjectAttributeBypass::percentage() const {
  return percentage_;
}
inline void ObjectAttributeBypass::set_percentage(::google::protobuf::int32 value) {
  _set_bit(0);
  percentage_ = value;
}

// -------------------------------------------------------------------

// ObjectAttributeEffectDelay

// required int32 value = 1;
inline bool ObjectAttributeEffectDelay::has_value() const {
  return _has_bit(0);
}
inline void ObjectAttributeEffectDelay::clear_value() {
  value_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 ObjectAttributeEffectDelay::value() const {
  return value_;
}
inline void ObjectAttributeEffectDelay::set_value(::google::protobuf::int32 value) {
  _set_bit(0);
  value_ = value;
}

// -------------------------------------------------------------------

// ObjectAttributeNBC

// required int32 danger_level = 1;
inline bool ObjectAttributeNBC::has_danger_level() const {
  return _has_bit(0);
}
inline void ObjectAttributeNBC::clear_danger_level() {
  danger_level_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 ObjectAttributeNBC::danger_level() const {
  return danger_level_;
}
inline void ObjectAttributeNBC::set_danger_level(::google::protobuf::int32 value) {
  _set_bit(0);
  danger_level_ = value;
}

// repeated .Common.NBCAgentType nbc_agents = 2;
inline int ObjectAttributeNBC::nbc_agents_size() const {
  return nbc_agents_.size();
}
inline void ObjectAttributeNBC::clear_nbc_agents() {
  nbc_agents_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::NBCAgentType >&
ObjectAttributeNBC::nbc_agents() const {
  return nbc_agents_;
}
inline ::google::protobuf::RepeatedPtrField< ::Common::NBCAgentType >*
ObjectAttributeNBC::mutable_nbc_agents() {
  return &nbc_agents_;
}
inline const ::Common::NBCAgentType& ObjectAttributeNBC::nbc_agents(int index) const {
  return nbc_agents_.Get(index);
}
inline ::Common::NBCAgentType* ObjectAttributeNBC::mutable_nbc_agents(int index) {
  return nbc_agents_.Mutable(index);
}
inline ::Common::NBCAgentType* ObjectAttributeNBC::add_nbc_agents() {
  return nbc_agents_.Add();
}

// -------------------------------------------------------------------

// StockResource

// required .Common.ResourceType resource = 1;
inline bool StockResource::has_resource() const {
  return _has_bit(0);
}
inline void StockResource::clear_resource() {
  if (resource_ != NULL) resource_->::Common::ResourceType::Clear();
  _clear_bit(0);
}
inline const ::Common::ResourceType& StockResource::resource() const {
  return resource_ != NULL ? *resource_ : *default_instance_->resource_;
}
inline ::Common::ResourceType* StockResource::mutable_resource() {
  _set_bit(0);
  if (resource_ == NULL) resource_ = new ::Common::ResourceType;
  return resource_;
}

// required int32 current = 2;
inline bool StockResource::has_current() const {
  return _has_bit(1);
}
inline void StockResource::clear_current() {
  current_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 StockResource::current() const {
  return current_;
}
inline void StockResource::set_current(::google::protobuf::int32 value) {
  _set_bit(1);
  current_ = value;
}

// optional int32 maximum = 3;
inline bool StockResource::has_maximum() const {
  return _has_bit(2);
}
inline void StockResource::clear_maximum() {
  maximum_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 StockResource::maximum() const {
  return maximum_;
}
inline void StockResource::set_maximum(::google::protobuf::int32 value) {
  _set_bit(2);
  maximum_ = value;
}

// -------------------------------------------------------------------

// ObjectAttributeStock

// repeated .Common.StockResource resources = 1;
inline int ObjectAttributeStock::resources_size() const {
  return resources_.size();
}
inline void ObjectAttributeStock::clear_resources() {
  resources_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::StockResource >&
ObjectAttributeStock::resources() const {
  return resources_;
}
inline ::google::protobuf::RepeatedPtrField< ::Common::StockResource >*
ObjectAttributeStock::mutable_resources() {
  return &resources_;
}
inline const ::Common::StockResource& ObjectAttributeStock::resources(int index) const {
  return resources_.Get(index);
}
inline ::Common::StockResource* ObjectAttributeStock::mutable_resources(int index) {
  return resources_.Mutable(index);
}
inline ::Common::StockResource* ObjectAttributeStock::add_resources() {
  return resources_.Add();
}

// -------------------------------------------------------------------

// ObjectAttributeCrossingSite

// required int32 width = 1;
inline bool ObjectAttributeCrossingSite::has_width() const {
  return _has_bit(0);
}
inline void ObjectAttributeCrossingSite::clear_width() {
  width_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 ObjectAttributeCrossingSite::width() const {
  return width_;
}
inline void ObjectAttributeCrossingSite::set_width(::google::protobuf::int32 value) {
  _set_bit(0);
  width_ = value;
}

// required int32 depth = 2;
inline bool ObjectAttributeCrossingSite::has_depth() const {
  return _has_bit(1);
}
inline void ObjectAttributeCrossingSite::clear_depth() {
  depth_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 ObjectAttributeCrossingSite::depth() const {
  return depth_;
}
inline void ObjectAttributeCrossingSite::set_depth(::google::protobuf::int32 value) {
  _set_bit(1);
  depth_ = value;
}

// required int32 flow_rate = 3;
inline bool ObjectAttributeCrossingSite::has_flow_rate() const {
  return _has_bit(2);
}
inline void ObjectAttributeCrossingSite::clear_flow_rate() {
  flow_rate_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 ObjectAttributeCrossingSite::flow_rate() const {
  return flow_rate_;
}
inline void ObjectAttributeCrossingSite::set_flow_rate(::google::protobuf::int32 value) {
  _set_bit(2);
  flow_rate_ = value;
}

// required bool banks_require_fitting = 4;
inline bool ObjectAttributeCrossingSite::has_banks_require_fitting() const {
  return _has_bit(3);
}
inline void ObjectAttributeCrossingSite::clear_banks_require_fitting() {
  banks_require_fitting_ = false;
  _clear_bit(3);
}
inline bool ObjectAttributeCrossingSite::banks_require_fitting() const {
  return banks_require_fitting_;
}
inline void ObjectAttributeCrossingSite::set_banks_require_fitting(bool value) {
  _set_bit(3);
  banks_require_fitting_ = value;
}

// -------------------------------------------------------------------

// ObjectAttributeSupplyRoute

// required bool equipped = 1;
inline bool ObjectAttributeSupplyRoute::has_equipped() const {
  return _has_bit(0);
}
inline void ObjectAttributeSupplyRoute::clear_equipped() {
  equipped_ = false;
  _clear_bit(0);
}
inline bool ObjectAttributeSupplyRoute::equipped() const {
  return equipped_;
}
inline void ObjectAttributeSupplyRoute::set_equipped(bool value) {
  _set_bit(0);
  equipped_ = value;
}

// required int32 max_weight = 2;
inline bool ObjectAttributeSupplyRoute::has_max_weight() const {
  return _has_bit(1);
}
inline void ObjectAttributeSupplyRoute::clear_max_weight() {
  max_weight_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 ObjectAttributeSupplyRoute::max_weight() const {
  return max_weight_;
}
inline void ObjectAttributeSupplyRoute::set_max_weight(::google::protobuf::int32 value) {
  _set_bit(1);
  max_weight_ = value;
}

// required int32 width = 3;
inline bool ObjectAttributeSupplyRoute::has_width() const {
  return _has_bit(2);
}
inline void ObjectAttributeSupplyRoute::clear_width() {
  width_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 ObjectAttributeSupplyRoute::width() const {
  return width_;
}
inline void ObjectAttributeSupplyRoute::set_width(::google::protobuf::int32 value) {
  _set_bit(2);
  width_ = value;
}

// required int32 length = 4;
inline bool ObjectAttributeSupplyRoute::has_length() const {
  return _has_bit(3);
}
inline void ObjectAttributeSupplyRoute::clear_length() {
  length_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 ObjectAttributeSupplyRoute::length() const {
  return length_;
}
inline void ObjectAttributeSupplyRoute::set_length(::google::protobuf::int32 value) {
  _set_bit(3);
  length_ = value;
}

// required int32 flow_rate = 5;
inline bool ObjectAttributeSupplyRoute::has_flow_rate() const {
  return _has_bit(4);
}
inline void ObjectAttributeSupplyRoute::clear_flow_rate() {
  flow_rate_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 ObjectAttributeSupplyRoute::flow_rate() const {
  return flow_rate_;
}
inline void ObjectAttributeSupplyRoute::set_flow_rate(::google::protobuf::int32 value) {
  _set_bit(4);
  flow_rate_ = value;
}

// -------------------------------------------------------------------

// MsgLocatedQuantity

// required .Common.MsgCoordLatLong coordinate = 1;
inline bool MsgLocatedQuantity::has_coordinate() const {
  return _has_bit(0);
}
inline void MsgLocatedQuantity::clear_coordinate() {
  if (coordinate_ != NULL) coordinate_->::Common::MsgCoordLatLong::Clear();
  _clear_bit(0);
}
inline const ::Common::MsgCoordLatLong& MsgLocatedQuantity::coordinate() const {
  return coordinate_ != NULL ? *coordinate_ : *default_instance_->coordinate_;
}
inline ::Common::MsgCoordLatLong* MsgLocatedQuantity::mutable_coordinate() {
  _set_bit(0);
  if (coordinate_ == NULL) coordinate_ = new ::Common::MsgCoordLatLong;
  return coordinate_;
}

// required float quantity = 2;
inline bool MsgLocatedQuantity::has_quantity() const {
  return _has_bit(1);
}
inline void MsgLocatedQuantity::clear_quantity() {
  quantity_ = 0;
  _clear_bit(1);
}
inline float MsgLocatedQuantity::quantity() const {
  return quantity_;
}
inline void MsgLocatedQuantity::set_quantity(float value) {
  _set_bit(1);
  quantity_ = value;
}

// -------------------------------------------------------------------

// MsgLocatedQuantityList

// repeated .Common.MsgLocatedQuantity elem = 1;
inline int MsgLocatedQuantityList::elem_size() const {
  return elem_.size();
}
inline void MsgLocatedQuantityList::clear_elem() {
  elem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgLocatedQuantity >&
MsgLocatedQuantityList::elem() const {
  return elem_;
}
inline ::google::protobuf::RepeatedPtrField< ::Common::MsgLocatedQuantity >*
MsgLocatedQuantityList::mutable_elem() {
  return &elem_;
}
inline const ::Common::MsgLocatedQuantity& MsgLocatedQuantityList::elem(int index) const {
  return elem_.Get(index);
}
inline ::Common::MsgLocatedQuantity* MsgLocatedQuantityList::mutable_elem(int index) {
  return elem_.Mutable(index);
}
inline ::Common::MsgLocatedQuantity* MsgLocatedQuantityList::add_elem() {
  return elem_.Add();
}

// -------------------------------------------------------------------

// ObjectAttributeToxicCloud

// required .Common.MsgLocatedQuantityList quantities = 1;
inline bool ObjectAttributeToxicCloud::has_quantities() const {
  return _has_bit(0);
}
inline void ObjectAttributeToxicCloud::clear_quantities() {
  if (quantities_ != NULL) quantities_->::Common::MsgLocatedQuantityList::Clear();
  _clear_bit(0);
}
inline const ::Common::MsgLocatedQuantityList& ObjectAttributeToxicCloud::quantities() const {
  return quantities_ != NULL ? *quantities_ : *default_instance_->quantities_;
}
inline ::Common::MsgLocatedQuantityList* ObjectAttributeToxicCloud::mutable_quantities() {
  _set_bit(0);
  if (quantities_ == NULL) quantities_ = new ::Common::MsgLocatedQuantityList;
  return quantities_;
}

// -------------------------------------------------------------------

// ObjectAttributeFire

// required int32 class_id = 1;
inline bool ObjectAttributeFire::has_class_id() const {
  return _has_bit(0);
}
inline void ObjectAttributeFire::clear_class_id() {
  class_id_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 ObjectAttributeFire::class_id() const {
  return class_id_;
}
inline void ObjectAttributeFire::set_class_id(::google::protobuf::int32 value) {
  _set_bit(0);
  class_id_ = value;
}

// required int32 heat = 2;
inline bool ObjectAttributeFire::has_heat() const {
  return _has_bit(1);
}
inline void ObjectAttributeFire::clear_heat() {
  heat_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 ObjectAttributeFire::heat() const {
  return heat_;
}
inline void ObjectAttributeFire::set_heat(::google::protobuf::int32 value) {
  _set_bit(1);
  heat_ = value;
}

// -------------------------------------------------------------------

// ObjectAttributeMedicalTreatmentBedCapacity

// required int32 type_id = 1;
inline bool ObjectAttributeMedicalTreatmentBedCapacity::has_type_id() const {
  return _has_bit(0);
}
inline void ObjectAttributeMedicalTreatmentBedCapacity::clear_type_id() {
  type_id_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 ObjectAttributeMedicalTreatmentBedCapacity::type_id() const {
  return type_id_;
}
inline void ObjectAttributeMedicalTreatmentBedCapacity::set_type_id(::google::protobuf::int32 value) {
  _set_bit(0);
  type_id_ = value;
}

// optional uint32 baseline_count = 2;
inline bool ObjectAttributeMedicalTreatmentBedCapacity::has_baseline_count() const {
  return _has_bit(1);
}
inline void ObjectAttributeMedicalTreatmentBedCapacity::clear_baseline_count() {
  baseline_count_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 ObjectAttributeMedicalTreatmentBedCapacity::baseline_count() const {
  return baseline_count_;
}
inline void ObjectAttributeMedicalTreatmentBedCapacity::set_baseline_count(::google::protobuf::uint32 value) {
  _set_bit(1);
  baseline_count_ = value;
}

// optional uint32 available_count = 3;
inline bool ObjectAttributeMedicalTreatmentBedCapacity::has_available_count() const {
  return _has_bit(2);
}
inline void ObjectAttributeMedicalTreatmentBedCapacity::clear_available_count() {
  available_count_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 ObjectAttributeMedicalTreatmentBedCapacity::available_count() const {
  return available_count_;
}
inline void ObjectAttributeMedicalTreatmentBedCapacity::set_available_count(::google::protobuf::uint32 value) {
  _set_bit(2);
  available_count_ = value;
}

// optional uint32 emergency_count = 4;
inline bool ObjectAttributeMedicalTreatmentBedCapacity::has_emergency_count() const {
  return _has_bit(3);
}
inline void ObjectAttributeMedicalTreatmentBedCapacity::clear_emergency_count() {
  emergency_count_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 ObjectAttributeMedicalTreatmentBedCapacity::emergency_count() const {
  return emergency_count_;
}
inline void ObjectAttributeMedicalTreatmentBedCapacity::set_emergency_count(::google::protobuf::uint32 value) {
  _set_bit(3);
  emergency_count_ = value;
}

// -------------------------------------------------------------------

// ObjectAttributeMedicalTreatment

// optional string external_reference_id = 1;
inline bool ObjectAttributeMedicalTreatment::has_external_reference_id() const {
  return _has_bit(0);
}
inline void ObjectAttributeMedicalTreatment::clear_external_reference_id() {
  if (external_reference_id_ != &_default_external_reference_id_) {
    external_reference_id_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& ObjectAttributeMedicalTreatment::external_reference_id() const {
  return *external_reference_id_;
}
inline void ObjectAttributeMedicalTreatment::set_external_reference_id(const ::std::string& value) {
  _set_bit(0);
  if (external_reference_id_ == &_default_external_reference_id_) {
    external_reference_id_ = new ::std::string;
  }
  external_reference_id_->assign(value);
}
inline void ObjectAttributeMedicalTreatment::set_external_reference_id(const char* value) {
  _set_bit(0);
  if (external_reference_id_ == &_default_external_reference_id_) {
    external_reference_id_ = new ::std::string;
  }
  external_reference_id_->assign(value);
}
inline void ObjectAttributeMedicalTreatment::set_external_reference_id(const char* value, size_t size) {
  _set_bit(0);
  if (external_reference_id_ == &_default_external_reference_id_) {
    external_reference_id_ = new ::std::string;
  }
  external_reference_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ObjectAttributeMedicalTreatment::mutable_external_reference_id() {
  _set_bit(0);
  if (external_reference_id_ == &_default_external_reference_id_) {
    external_reference_id_ = new ::std::string;
  }
  return external_reference_id_;
}

// repeated .Common.ObjectAttributeMedicalTreatmentBedCapacity bed_capacities = 2;
inline int ObjectAttributeMedicalTreatment::bed_capacities_size() const {
  return bed_capacities_.size();
}
inline void ObjectAttributeMedicalTreatment::clear_bed_capacities() {
  bed_capacities_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::ObjectAttributeMedicalTreatmentBedCapacity >&
ObjectAttributeMedicalTreatment::bed_capacities() const {
  return bed_capacities_;
}
inline ::google::protobuf::RepeatedPtrField< ::Common::ObjectAttributeMedicalTreatmentBedCapacity >*
ObjectAttributeMedicalTreatment::mutable_bed_capacities() {
  return &bed_capacities_;
}
inline const ::Common::ObjectAttributeMedicalTreatmentBedCapacity& ObjectAttributeMedicalTreatment::bed_capacities(int index) const {
  return bed_capacities_.Get(index);
}
inline ::Common::ObjectAttributeMedicalTreatmentBedCapacity* ObjectAttributeMedicalTreatment::mutable_bed_capacities(int index) {
  return bed_capacities_.Mutable(index);
}
inline ::Common::ObjectAttributeMedicalTreatmentBedCapacity* ObjectAttributeMedicalTreatment::add_bed_capacities() {
  return bed_capacities_.Add();
}

// optional .Common.ObjectAttributeMedicalTreatment.EnumMedicalTreatmentStatus facility_status = 3;
inline bool ObjectAttributeMedicalTreatment::has_facility_status() const {
  return _has_bit(2);
}
inline void ObjectAttributeMedicalTreatment::clear_facility_status() {
  facility_status_ = 0;
  _clear_bit(2);
}
inline ::Common::ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus ObjectAttributeMedicalTreatment::facility_status() const {
  return static_cast< ::Common::ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus >(facility_status_);
}
inline void ObjectAttributeMedicalTreatment::set_facility_status(::Common::ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus value) {
  GOOGLE_DCHECK(::Common::ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus_IsValid(value));
  _set_bit(2);
  facility_status_ = value;
}

// optional uint32 doctors = 4;
inline bool ObjectAttributeMedicalTreatment::has_doctors() const {
  return _has_bit(3);
}
inline void ObjectAttributeMedicalTreatment::clear_doctors() {
  doctors_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 ObjectAttributeMedicalTreatment::doctors() const {
  return doctors_;
}
inline void ObjectAttributeMedicalTreatment::set_doctors(::google::protobuf::uint32 value) {
  _set_bit(3);
  doctors_ = value;
}

// optional uint32 available_doctors = 5;
inline bool ObjectAttributeMedicalTreatment::has_available_doctors() const {
  return _has_bit(4);
}
inline void ObjectAttributeMedicalTreatment::clear_available_doctors() {
  available_doctors_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 ObjectAttributeMedicalTreatment::available_doctors() const {
  return available_doctors_;
}
inline void ObjectAttributeMedicalTreatment::set_available_doctors(::google::protobuf::uint32 value) {
  _set_bit(4);
  available_doctors_ = value;
}

// -------------------------------------------------------------------

// ObjectAttributeNBCType

// required .Common.NBCAgentType agent = 1;
inline bool ObjectAttributeNBCType::has_agent() const {
  return _has_bit(0);
}
inline void ObjectAttributeNBCType::clear_agent() {
  if (agent_ != NULL) agent_->::Common::NBCAgentType::Clear();
  _clear_bit(0);
}
inline const ::Common::NBCAgentType& ObjectAttributeNBCType::agent() const {
  return agent_ != NULL ? *agent_ : *default_instance_->agent_;
}
inline ::Common::NBCAgentType* ObjectAttributeNBCType::mutable_agent() {
  _set_bit(0);
  if (agent_ == NULL) agent_ = new ::Common::NBCAgentType;
  return agent_;
}

// required int32 concentration = 2;
inline bool ObjectAttributeNBCType::has_concentration() const {
  return _has_bit(1);
}
inline void ObjectAttributeNBCType::clear_concentration() {
  concentration_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 ObjectAttributeNBCType::concentration() const {
  return concentration_;
}
inline void ObjectAttributeNBCType::set_concentration(::google::protobuf::int32 value) {
  _set_bit(1);
  concentration_ = value;
}

// required int32 source_life_duration = 3;
inline bool ObjectAttributeNBCType::has_source_life_duration() const {
  return _has_bit(2);
}
inline void ObjectAttributeNBCType::clear_source_life_duration() {
  source_life_duration_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 ObjectAttributeNBCType::source_life_duration() const {
  return source_life_duration_;
}
inline void ObjectAttributeNBCType::set_source_life_duration(::google::protobuf::int32 value) {
  _set_bit(2);
  source_life_duration_ = value;
}

// -------------------------------------------------------------------

// ObjectAttributeSealOff

// required int32 level = 1;
inline bool ObjectAttributeSealOff::has_level() const {
  return _has_bit(0);
}
inline void ObjectAttributeSealOff::clear_level() {
  level_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 ObjectAttributeSealOff::level() const {
  return level_;
}
inline void ObjectAttributeSealOff::set_level(::google::protobuf::int32 value) {
  _set_bit(0);
  level_ = value;
}

// -------------------------------------------------------------------

// ObjectAttributes

// optional .Common.ObjectAttributeConstruction construction = 1;
inline bool ObjectAttributes::has_construction() const {
  return _has_bit(0);
}
inline void ObjectAttributes::clear_construction() {
  if (construction_ != NULL) construction_->::Common::ObjectAttributeConstruction::Clear();
  _clear_bit(0);
}
inline const ::Common::ObjectAttributeConstruction& ObjectAttributes::construction() const {
  return construction_ != NULL ? *construction_ : *default_instance_->construction_;
}
inline ::Common::ObjectAttributeConstruction* ObjectAttributes::mutable_construction() {
  _set_bit(0);
  if (construction_ == NULL) construction_ = new ::Common::ObjectAttributeConstruction;
  return construction_;
}

// optional .Common.ObjectAttributeObstacle obstacle = 2;
inline bool ObjectAttributes::has_obstacle() const {
  return _has_bit(1);
}
inline void ObjectAttributes::clear_obstacle() {
  if (obstacle_ != NULL) obstacle_->::Common::ObjectAttributeObstacle::Clear();
  _clear_bit(1);
}
inline const ::Common::ObjectAttributeObstacle& ObjectAttributes::obstacle() const {
  return obstacle_ != NULL ? *obstacle_ : *default_instance_->obstacle_;
}
inline ::Common::ObjectAttributeObstacle* ObjectAttributes::mutable_obstacle() {
  _set_bit(1);
  if (obstacle_ == NULL) obstacle_ = new ::Common::ObjectAttributeObstacle;
  return obstacle_;
}

// optional .Common.ObjectAttributeMine mine = 3;
inline bool ObjectAttributes::has_mine() const {
  return _has_bit(2);
}
inline void ObjectAttributes::clear_mine() {
  if (mine_ != NULL) mine_->::Common::ObjectAttributeMine::Clear();
  _clear_bit(2);
}
inline const ::Common::ObjectAttributeMine& ObjectAttributes::mine() const {
  return mine_ != NULL ? *mine_ : *default_instance_->mine_;
}
inline ::Common::ObjectAttributeMine* ObjectAttributes::mutable_mine() {
  _set_bit(2);
  if (mine_ == NULL) mine_ = new ::Common::ObjectAttributeMine;
  return mine_;
}

// optional .Common.ObjectAttributeActivityTime activity_time = 4;
inline bool ObjectAttributes::has_activity_time() const {
  return _has_bit(3);
}
inline void ObjectAttributes::clear_activity_time() {
  if (activity_time_ != NULL) activity_time_->::Common::ObjectAttributeActivityTime::Clear();
  _clear_bit(3);
}
inline const ::Common::ObjectAttributeActivityTime& ObjectAttributes::activity_time() const {
  return activity_time_ != NULL ? *activity_time_ : *default_instance_->activity_time_;
}
inline ::Common::ObjectAttributeActivityTime* ObjectAttributes::mutable_activity_time() {
  _set_bit(3);
  if (activity_time_ == NULL) activity_time_ = new ::Common::ObjectAttributeActivityTime;
  return activity_time_;
}

// optional .Common.ObjectAttributeBypass bypass = 5;
inline bool ObjectAttributes::has_bypass() const {
  return _has_bit(4);
}
inline void ObjectAttributes::clear_bypass() {
  if (bypass_ != NULL) bypass_->::Common::ObjectAttributeBypass::Clear();
  _clear_bit(4);
}
inline const ::Common::ObjectAttributeBypass& ObjectAttributes::bypass() const {
  return bypass_ != NULL ? *bypass_ : *default_instance_->bypass_;
}
inline ::Common::ObjectAttributeBypass* ObjectAttributes::mutable_bypass() {
  _set_bit(4);
  if (bypass_ == NULL) bypass_ = new ::Common::ObjectAttributeBypass;
  return bypass_;
}

// optional .Common.ObjectAttributeLogistic logistic = 6;
inline bool ObjectAttributes::has_logistic() const {
  return _has_bit(5);
}
inline void ObjectAttributes::clear_logistic() {
  if (logistic_ != NULL) logistic_->::Common::ObjectAttributeLogistic::Clear();
  _clear_bit(5);
}
inline const ::Common::ObjectAttributeLogistic& ObjectAttributes::logistic() const {
  return logistic_ != NULL ? *logistic_ : *default_instance_->logistic_;
}
inline ::Common::ObjectAttributeLogistic* ObjectAttributes::mutable_logistic() {
  _set_bit(5);
  if (logistic_ == NULL) logistic_ = new ::Common::ObjectAttributeLogistic;
  return logistic_;
}

// optional .Common.ObjectAttributeNBC nbc = 7;
inline bool ObjectAttributes::has_nbc() const {
  return _has_bit(6);
}
inline void ObjectAttributes::clear_nbc() {
  if (nbc_ != NULL) nbc_->::Common::ObjectAttributeNBC::Clear();
  _clear_bit(6);
}
inline const ::Common::ObjectAttributeNBC& ObjectAttributes::nbc() const {
  return nbc_ != NULL ? *nbc_ : *default_instance_->nbc_;
}
inline ::Common::ObjectAttributeNBC* ObjectAttributes::mutable_nbc() {
  _set_bit(6);
  if (nbc_ == NULL) nbc_ = new ::Common::ObjectAttributeNBC;
  return nbc_;
}

// optional .Common.ObjectAttributeCrossingSite crossing_site = 8;
inline bool ObjectAttributes::has_crossing_site() const {
  return _has_bit(7);
}
inline void ObjectAttributes::clear_crossing_site() {
  if (crossing_site_ != NULL) crossing_site_->::Common::ObjectAttributeCrossingSite::Clear();
  _clear_bit(7);
}
inline const ::Common::ObjectAttributeCrossingSite& ObjectAttributes::crossing_site() const {
  return crossing_site_ != NULL ? *crossing_site_ : *default_instance_->crossing_site_;
}
inline ::Common::ObjectAttributeCrossingSite* ObjectAttributes::mutable_crossing_site() {
  _set_bit(7);
  if (crossing_site_ == NULL) crossing_site_ = new ::Common::ObjectAttributeCrossingSite;
  return crossing_site_;
}

// optional .Common.ObjectAttributeSupplyRoute supply_route = 9;
inline bool ObjectAttributes::has_supply_route() const {
  return _has_bit(8);
}
inline void ObjectAttributes::clear_supply_route() {
  if (supply_route_ != NULL) supply_route_->::Common::ObjectAttributeSupplyRoute::Clear();
  _clear_bit(8);
}
inline const ::Common::ObjectAttributeSupplyRoute& ObjectAttributes::supply_route() const {
  return supply_route_ != NULL ? *supply_route_ : *default_instance_->supply_route_;
}
inline ::Common::ObjectAttributeSupplyRoute* ObjectAttributes::mutable_supply_route() {
  _set_bit(8);
  if (supply_route_ == NULL) supply_route_ = new ::Common::ObjectAttributeSupplyRoute;
  return supply_route_;
}

// optional .Common.ObjectAttributeToxicCloud toxic_cloud = 10;
inline bool ObjectAttributes::has_toxic_cloud() const {
  return _has_bit(9);
}
inline void ObjectAttributes::clear_toxic_cloud() {
  if (toxic_cloud_ != NULL) toxic_cloud_->::Common::ObjectAttributeToxicCloud::Clear();
  _clear_bit(9);
}
inline const ::Common::ObjectAttributeToxicCloud& ObjectAttributes::toxic_cloud() const {
  return toxic_cloud_ != NULL ? *toxic_cloud_ : *default_instance_->toxic_cloud_;
}
inline ::Common::ObjectAttributeToxicCloud* ObjectAttributes::mutable_toxic_cloud() {
  _set_bit(9);
  if (toxic_cloud_ == NULL) toxic_cloud_ = new ::Common::ObjectAttributeToxicCloud;
  return toxic_cloud_;
}

// optional .Common.ObjectAttributeFire fire = 11;
inline bool ObjectAttributes::has_fire() const {
  return _has_bit(10);
}
inline void ObjectAttributes::clear_fire() {
  if (fire_ != NULL) fire_->::Common::ObjectAttributeFire::Clear();
  _clear_bit(10);
}
inline const ::Common::ObjectAttributeFire& ObjectAttributes::fire() const {
  return fire_ != NULL ? *fire_ : *default_instance_->fire_;
}
inline ::Common::ObjectAttributeFire* ObjectAttributes::mutable_fire() {
  _set_bit(10);
  if (fire_ == NULL) fire_ = new ::Common::ObjectAttributeFire;
  return fire_;
}

// optional .Common.ObjectAttributeMedicalTreatment medical_treatment = 12;
inline bool ObjectAttributes::has_medical_treatment() const {
  return _has_bit(11);
}
inline void ObjectAttributes::clear_medical_treatment() {
  if (medical_treatment_ != NULL) medical_treatment_->::Common::ObjectAttributeMedicalTreatment::Clear();
  _clear_bit(11);
}
inline const ::Common::ObjectAttributeMedicalTreatment& ObjectAttributes::medical_treatment() const {
  return medical_treatment_ != NULL ? *medical_treatment_ : *default_instance_->medical_treatment_;
}
inline ::Common::ObjectAttributeMedicalTreatment* ObjectAttributes::mutable_medical_treatment() {
  _set_bit(11);
  if (medical_treatment_ == NULL) medical_treatment_ = new ::Common::ObjectAttributeMedicalTreatment;
  return medical_treatment_;
}

// optional .Common.ObjectAttributeInteractionHeight interaction_height = 13;
inline bool ObjectAttributes::has_interaction_height() const {
  return _has_bit(12);
}
inline void ObjectAttributes::clear_interaction_height() {
  if (interaction_height_ != NULL) interaction_height_->::Common::ObjectAttributeInteractionHeight::Clear();
  _clear_bit(12);
}
inline const ::Common::ObjectAttributeInteractionHeight& ObjectAttributes::interaction_height() const {
  return interaction_height_ != NULL ? *interaction_height_ : *default_instance_->interaction_height_;
}
inline ::Common::ObjectAttributeInteractionHeight* ObjectAttributes::mutable_interaction_height() {
  _set_bit(12);
  if (interaction_height_ == NULL) interaction_height_ = new ::Common::ObjectAttributeInteractionHeight;
  return interaction_height_;
}

// optional .Common.ObjectAttributeStock stock = 14;
inline bool ObjectAttributes::has_stock() const {
  return _has_bit(13);
}
inline void ObjectAttributes::clear_stock() {
  if (stock_ != NULL) stock_->::Common::ObjectAttributeStock::Clear();
  _clear_bit(13);
}
inline const ::Common::ObjectAttributeStock& ObjectAttributes::stock() const {
  return stock_ != NULL ? *stock_ : *default_instance_->stock_;
}
inline ::Common::ObjectAttributeStock* ObjectAttributes::mutable_stock() {
  _set_bit(13);
  if (stock_ == NULL) stock_ = new ::Common::ObjectAttributeStock;
  return stock_;
}

// optional .Common.ObjectAttributeNBCType nbc_agent = 15;
inline bool ObjectAttributes::has_nbc_agent() const {
  return _has_bit(14);
}
inline void ObjectAttributes::clear_nbc_agent() {
  if (nbc_agent_ != NULL) nbc_agent_->::Common::ObjectAttributeNBCType::Clear();
  _clear_bit(14);
}
inline const ::Common::ObjectAttributeNBCType& ObjectAttributes::nbc_agent() const {
  return nbc_agent_ != NULL ? *nbc_agent_ : *default_instance_->nbc_agent_;
}
inline ::Common::ObjectAttributeNBCType* ObjectAttributes::mutable_nbc_agent() {
  _set_bit(14);
  if (nbc_agent_ == NULL) nbc_agent_ = new ::Common::ObjectAttributeNBCType;
  return nbc_agent_;
}

// optional .Common.ObjectAttributeEffectDelay effect_delay = 16;
inline bool ObjectAttributes::has_effect_delay() const {
  return _has_bit(15);
}
inline void ObjectAttributes::clear_effect_delay() {
  if (effect_delay_ != NULL) effect_delay_->::Common::ObjectAttributeEffectDelay::Clear();
  _clear_bit(15);
}
inline const ::Common::ObjectAttributeEffectDelay& ObjectAttributes::effect_delay() const {
  return effect_delay_ != NULL ? *effect_delay_ : *default_instance_->effect_delay_;
}
inline ::Common::ObjectAttributeEffectDelay* ObjectAttributes::mutable_effect_delay() {
  _set_bit(15);
  if (effect_delay_ == NULL) effect_delay_ = new ::Common::ObjectAttributeEffectDelay;
  return effect_delay_;
}

// optional .Common.ObjectAttributeSealOff seal_off = 17;
inline bool ObjectAttributes::has_seal_off() const {
  return _has_bit(16);
}
inline void ObjectAttributes::clear_seal_off() {
  if (seal_off_ != NULL) seal_off_->::Common::ObjectAttributeSealOff::Clear();
  _clear_bit(16);
}
inline const ::Common::ObjectAttributeSealOff& ObjectAttributes::seal_off() const {
  return seal_off_ != NULL ? *seal_off_ : *default_instance_->seal_off_;
}
inline ::Common::ObjectAttributeSealOff* ObjectAttributes::mutable_seal_off() {
  _set_bit(16);
  if (seal_off_ == NULL) seal_off_ = new ::Common::ObjectAttributeSealOff;
  return seal_off_;
}

// optional .Common.ObjectAttributeResourceNetwork resource_networks = 18;
inline bool ObjectAttributes::has_resource_networks() const {
  return _has_bit(17);
}
inline void ObjectAttributes::clear_resource_networks() {
  if (resource_networks_ != NULL) resource_networks_->::Common::ObjectAttributeResourceNetwork::Clear();
  _clear_bit(17);
}
inline const ::Common::ObjectAttributeResourceNetwork& ObjectAttributes::resource_networks() const {
  return resource_networks_ != NULL ? *resource_networks_ : *default_instance_->resource_networks_;
}
inline ::Common::ObjectAttributeResourceNetwork* ObjectAttributes::mutable_resource_networks() {
  _set_bit(17);
  if (resource_networks_ == NULL) resource_networks_ = new ::Common::ObjectAttributeResourceNetwork;
  return resource_networks_;
}

// -------------------------------------------------------------------

// MsgNote

// required string name = 1;
inline bool MsgNote::has_name() const {
  return _has_bit(0);
}
inline void MsgNote::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgNote::name() const {
  return *name_;
}
inline void MsgNote::set_name(const ::std::string& value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgNote::set_name(const char* value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgNote::set_name(const char* value, size_t size) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgNote::mutable_name() {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// required string number = 2;
inline bool MsgNote::has_number() const {
  return _has_bit(1);
}
inline void MsgNote::clear_number() {
  if (number_ != &_default_number_) {
    number_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& MsgNote::number() const {
  return *number_;
}
inline void MsgNote::set_number(const ::std::string& value) {
  _set_bit(1);
  if (number_ == &_default_number_) {
    number_ = new ::std::string;
  }
  number_->assign(value);
}
inline void MsgNote::set_number(const char* value) {
  _set_bit(1);
  if (number_ == &_default_number_) {
    number_ = new ::std::string;
  }
  number_->assign(value);
}
inline void MsgNote::set_number(const char* value, size_t size) {
  _set_bit(1);
  if (number_ == &_default_number_) {
    number_ = new ::std::string;
  }
  number_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgNote::mutable_number() {
  _set_bit(1);
  if (number_ == &_default_number_) {
    number_ = new ::std::string;
  }
  return number_;
}

// required string description = 3;
inline bool MsgNote::has_description() const {
  return _has_bit(2);
}
inline void MsgNote::clear_description() {
  if (description_ != &_default_description_) {
    description_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& MsgNote::description() const {
  return *description_;
}
inline void MsgNote::set_description(const ::std::string& value) {
  _set_bit(2);
  if (description_ == &_default_description_) {
    description_ = new ::std::string;
  }
  description_->assign(value);
}
inline void MsgNote::set_description(const char* value) {
  _set_bit(2);
  if (description_ == &_default_description_) {
    description_ = new ::std::string;
  }
  description_->assign(value);
}
inline void MsgNote::set_description(const char* value, size_t size) {
  _set_bit(2);
  if (description_ == &_default_description_) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgNote::mutable_description() {
  _set_bit(2);
  if (description_ == &_default_description_) {
    description_ = new ::std::string;
  }
  return description_;
}

// required uint32 parent = 4;
inline bool MsgNote::has_parent() const {
  return _has_bit(3);
}
inline void MsgNote::clear_parent() {
  parent_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 MsgNote::parent() const {
  return parent_;
}
inline void MsgNote::set_parent(::google::protobuf::uint32 value) {
  _set_bit(3);
  parent_ = value;
}

// -------------------------------------------------------------------

// MsgWeatherAttributes

// required int32 temperature = 1;
inline bool MsgWeatherAttributes::has_temperature() const {
  return _has_bit(0);
}
inline void MsgWeatherAttributes::clear_temperature() {
  temperature_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 MsgWeatherAttributes::temperature() const {
  return temperature_;
}
inline void MsgWeatherAttributes::set_temperature(::google::protobuf::int32 value) {
  _set_bit(0);
  temperature_ = value;
}

// required int32 wind_speed = 2;
inline bool MsgWeatherAttributes::has_wind_speed() const {
  return _has_bit(1);
}
inline void MsgWeatherAttributes::clear_wind_speed() {
  wind_speed_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 MsgWeatherAttributes::wind_speed() const {
  return wind_speed_;
}
inline void MsgWeatherAttributes::set_wind_speed(::google::protobuf::int32 value) {
  _set_bit(1);
  wind_speed_ = value;
}

// required .Common.MsgHeading wind_direction = 3;
inline bool MsgWeatherAttributes::has_wind_direction() const {
  return _has_bit(2);
}
inline void MsgWeatherAttributes::clear_wind_direction() {
  if (wind_direction_ != NULL) wind_direction_->::Common::MsgHeading::Clear();
  _clear_bit(2);
}
inline const ::Common::MsgHeading& MsgWeatherAttributes::wind_direction() const {
  return wind_direction_ != NULL ? *wind_direction_ : *default_instance_->wind_direction_;
}
inline ::Common::MsgHeading* MsgWeatherAttributes::mutable_wind_direction() {
  _set_bit(2);
  if (wind_direction_ == NULL) wind_direction_ = new ::Common::MsgHeading;
  return wind_direction_;
}

// required int32 cloud_floor = 4;
inline bool MsgWeatherAttributes::has_cloud_floor() const {
  return _has_bit(3);
}
inline void MsgWeatherAttributes::clear_cloud_floor() {
  cloud_floor_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 MsgWeatherAttributes::cloud_floor() const {
  return cloud_floor_;
}
inline void MsgWeatherAttributes::set_cloud_floor(::google::protobuf::int32 value) {
  _set_bit(3);
  cloud_floor_ = value;
}

// required int32 cloud_ceiling = 5;
inline bool MsgWeatherAttributes::has_cloud_ceiling() const {
  return _has_bit(4);
}
inline void MsgWeatherAttributes::clear_cloud_ceiling() {
  cloud_ceiling_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 MsgWeatherAttributes::cloud_ceiling() const {
  return cloud_ceiling_;
}
inline void MsgWeatherAttributes::set_cloud_ceiling(::google::protobuf::int32 value) {
  _set_bit(4);
  cloud_ceiling_ = value;
}

// required int32 cloud_density = 6;
inline bool MsgWeatherAttributes::has_cloud_density() const {
  return _has_bit(5);
}
inline void MsgWeatherAttributes::clear_cloud_density() {
  cloud_density_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 MsgWeatherAttributes::cloud_density() const {
  return cloud_density_;
}
inline void MsgWeatherAttributes::set_cloud_density(::google::protobuf::int32 value) {
  _set_bit(5);
  cloud_density_ = value;
}

// required .Common.EnumPrecipitationType precipitation = 7;
inline bool MsgWeatherAttributes::has_precipitation() const {
  return _has_bit(6);
}
inline void MsgWeatherAttributes::clear_precipitation() {
  precipitation_ = 0;
  _clear_bit(6);
}
inline Common::EnumPrecipitationType MsgWeatherAttributes::precipitation() const {
  return static_cast< Common::EnumPrecipitationType >(precipitation_);
}
inline void MsgWeatherAttributes::set_precipitation(Common::EnumPrecipitationType value) {
  GOOGLE_DCHECK(Common::EnumPrecipitationType_IsValid(value));
  _set_bit(6);
  precipitation_ = value;
}

// required .Common.EnumLightingType lighting = 8;
inline bool MsgWeatherAttributes::has_lighting() const {
  return _has_bit(7);
}
inline void MsgWeatherAttributes::clear_lighting() {
  lighting_ = 0;
  _clear_bit(7);
}
inline Common::EnumLightingType MsgWeatherAttributes::lighting() const {
  return static_cast< Common::EnumLightingType >(lighting_);
}
inline void MsgWeatherAttributes::set_lighting(Common::EnumLightingType value) {
  GOOGLE_DCHECK(Common::EnumLightingType_IsValid(value));
  _set_bit(7);
  lighting_ = value;
}


}  // namespace Common

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Common::MsgLocation_Geometry>() {
  return ::Common::MsgLocation_Geometry_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Common::ObstacleType_DemolitionTargetType>() {
  return ::Common::ObstacleType_DemolitionTargetType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Common::MsgLimaOrder_Function>() {
  return ::Common::MsgLimaOrder_Function_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Common::MsgAtlasNature_AtlasNature>() {
  return ::Common::MsgAtlasNature_AtlasNature_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Common::ResourceNetwork_Link_TargetKind>() {
  return ::Common::ResourceNetwork_Link_TargetKind_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Common::ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus>() {
  return ::Common::ObjectAttributeMedicalTreatment_EnumMedicalTreatmentStatus_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< Common::EnumDotationFamily>() {
  return Common::EnumDotationFamily_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< Common::EnumAmmunitionFamily>() {
  return Common::EnumAmmunitionFamily_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< Common::EnumPrecipitationType>() {
  return Common::EnumPrecipitationType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< Common::EnumFireEffectType>() {
  return Common::EnumFireEffectType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< Common::UnitFireType>() {
  return Common::UnitFireType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< Common::EnumLightingType>() {
  return Common::EnumLightingType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< Common::EnumLogMaintenanceHandlingStatus>() {
  return Common::EnumLogMaintenanceHandlingStatus_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< Common::EnumLogMedicalHandlingStatus>() {
  return Common::EnumLogMedicalHandlingStatus_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< Common::EnumUnitVisibility>() {
  return Common::EnumUnitVisibility_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< Common::EnumSimulationState>() {
  return Common::EnumSimulationState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< Common::EnumDispatcherState>() {
  return Common::EnumDispatcherState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< Common::EnumMeetingEngagementStatus>() {
  return Common::EnumMeetingEngagementStatus_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< Common::EnumOperationalStatus>() {
  return Common::EnumOperationalStatus_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< Common::EnumAutomatMode>() {
  return Common::EnumAutomatMode_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< Common::EnumCrowdAttitude>() {
  return Common::EnumCrowdAttitude_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< Common::EnumUnitTiredness>() {
  return Common::EnumUnitTiredness_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< Common::EnumUnitMorale>() {
  return Common::EnumUnitMorale_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< Common::EnumUnitExperience>() {
  return Common::EnumUnitExperience_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< Common::EnumHumanRank>() {
  return Common::EnumHumanRank_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< Common::EnumDiplomacy>() {
  return Common::EnumDiplomacy_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< Common::EnumHumanWound>() {
  return Common::EnumHumanWound_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< Common::EnumLogMaintenanceRegimeTravail>() {
  return Common::EnumLogMaintenanceRegimeTravail_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< Common::EnumNatureLevel>() {
  return Common::EnumNatureLevel_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< Common::EnumLogisticLevel>() {
  return Common::EnumLogisticLevel_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

#endif  // PROTOBUF_Common_2eproto__INCLUDED
