// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_DispatcherToSim_2eproto__INCLUDED
#define PROTOBUF_DispatcherToSim_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>

namespace MsgsDispatcherToSim {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_DispatcherToSim_2eproto();
void protobuf_AssignDesc_DispatcherToSim_2eproto();
void protobuf_ShutdownFile_DispatcherToSim_2eproto();

class MsgCtrlClientAnnouncement;
class MsgDispatcherToSim;
class MsgDispatcherToSim_Content;

// ===================================================================

class MsgCtrlClientAnnouncement : public ::google::protobuf::Message {
 public:
  MsgCtrlClientAnnouncement();
  virtual ~MsgCtrlClientAnnouncement();
  
  MsgCtrlClientAnnouncement(const MsgCtrlClientAnnouncement& from);
  
  inline MsgCtrlClientAnnouncement& operator=(const MsgCtrlClientAnnouncement& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCtrlClientAnnouncement& default_instance();
  void Swap(MsgCtrlClientAnnouncement* other);
  
  // implements Message ----------------------------------------------
  
  MsgCtrlClientAnnouncement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCtrlClientAnnouncement& from);
  void MergeFrom(const MsgCtrlClientAnnouncement& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool announce = 1;
  inline bool has_announce() const;
  inline void clear_announce();
  static const int kAnnounceFieldNumber = 1;
  inline bool announce() const;
  inline void set_announce(bool value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool announce_;
  friend void  protobuf_AddDesc_DispatcherToSim_2eproto();
  friend void protobuf_AssignDesc_DispatcherToSim_2eproto();
  friend void protobuf_ShutdownFile_DispatcherToSim_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgCtrlClientAnnouncement* default_instance_;
};
// -------------------------------------------------------------------

class MsgDispatcherToSim_Content : public ::google::protobuf::Message {
 public:
  MsgDispatcherToSim_Content();
  virtual ~MsgDispatcherToSim_Content();
  
  MsgDispatcherToSim_Content(const MsgDispatcherToSim_Content& from);
  
  inline MsgDispatcherToSim_Content& operator=(const MsgDispatcherToSim_Content& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDispatcherToSim_Content& default_instance();
  void Swap(MsgDispatcherToSim_Content* other);
  
  // implements Message ----------------------------------------------
  
  MsgDispatcherToSim_Content* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgDispatcherToSim_Content& from);
  void MergeFrom(const MsgDispatcherToSim_Content& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .MsgsDispatcherToSim.MsgCtrlClientAnnouncement control_client_announcement = 1;
  inline bool has_control_client_announcement() const;
  inline void clear_control_client_announcement();
  static const int kControlClientAnnouncementFieldNumber = 1;
  inline const ::MsgsDispatcherToSim::MsgCtrlClientAnnouncement& control_client_announcement() const;
  inline ::MsgsDispatcherToSim::MsgCtrlClientAnnouncement* mutable_control_client_announcement();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::MsgsDispatcherToSim::MsgCtrlClientAnnouncement* control_client_announcement_;
  friend void  protobuf_AddDesc_DispatcherToSim_2eproto();
  friend void protobuf_AssignDesc_DispatcherToSim_2eproto();
  friend void protobuf_ShutdownFile_DispatcherToSim_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgDispatcherToSim_Content* default_instance_;
};
// -------------------------------------------------------------------

class MsgDispatcherToSim : public ::google::protobuf::Message {
 public:
  MsgDispatcherToSim();
  virtual ~MsgDispatcherToSim();
  
  MsgDispatcherToSim(const MsgDispatcherToSim& from);
  
  inline MsgDispatcherToSim& operator=(const MsgDispatcherToSim& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDispatcherToSim& default_instance();
  void Swap(MsgDispatcherToSim* other);
  
  // implements Message ----------------------------------------------
  
  MsgDispatcherToSim* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgDispatcherToSim& from);
  void MergeFrom(const MsgDispatcherToSim& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef MsgDispatcherToSim_Content Content;
  
  // accessors -------------------------------------------------------
  
  // optional int32 context = 1 [default = 0];
  inline bool has_context() const;
  inline void clear_context();
  static const int kContextFieldNumber = 1;
  inline ::google::protobuf::int32 context() const;
  inline void set_context(::google::protobuf::int32 value);
  
  // required .MsgsDispatcherToSim.MsgDispatcherToSim.Content message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::MsgsDispatcherToSim::MsgDispatcherToSim_Content& message() const;
  inline ::MsgsDispatcherToSim::MsgDispatcherToSim_Content* mutable_message();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 context_;
  ::MsgsDispatcherToSim::MsgDispatcherToSim_Content* message_;
  friend void  protobuf_AddDesc_DispatcherToSim_2eproto();
  friend void protobuf_AssignDesc_DispatcherToSim_2eproto();
  friend void protobuf_ShutdownFile_DispatcherToSim_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgDispatcherToSim* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// MsgCtrlClientAnnouncement

// optional bool announce = 1;
inline bool MsgCtrlClientAnnouncement::has_announce() const {
  return _has_bit(0);
}
inline void MsgCtrlClientAnnouncement::clear_announce() {
  announce_ = false;
  _clear_bit(0);
}
inline bool MsgCtrlClientAnnouncement::announce() const {
  return announce_;
}
inline void MsgCtrlClientAnnouncement::set_announce(bool value) {
  _set_bit(0);
  announce_ = value;
}

// -------------------------------------------------------------------

// MsgDispatcherToSim_Content

// optional .MsgsDispatcherToSim.MsgCtrlClientAnnouncement control_client_announcement = 1;
inline bool MsgDispatcherToSim_Content::has_control_client_announcement() const {
  return _has_bit(0);
}
inline void MsgDispatcherToSim_Content::clear_control_client_announcement() {
  if (control_client_announcement_ != NULL) control_client_announcement_->::MsgsDispatcherToSim::MsgCtrlClientAnnouncement::Clear();
  _clear_bit(0);
}
inline const ::MsgsDispatcherToSim::MsgCtrlClientAnnouncement& MsgDispatcherToSim_Content::control_client_announcement() const {
  return control_client_announcement_ != NULL ? *control_client_announcement_ : *default_instance_->control_client_announcement_;
}
inline ::MsgsDispatcherToSim::MsgCtrlClientAnnouncement* MsgDispatcherToSim_Content::mutable_control_client_announcement() {
  _set_bit(0);
  if (control_client_announcement_ == NULL) control_client_announcement_ = new ::MsgsDispatcherToSim::MsgCtrlClientAnnouncement;
  return control_client_announcement_;
}

// -------------------------------------------------------------------

// MsgDispatcherToSim

// optional int32 context = 1 [default = 0];
inline bool MsgDispatcherToSim::has_context() const {
  return _has_bit(0);
}
inline void MsgDispatcherToSim::clear_context() {
  context_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 MsgDispatcherToSim::context() const {
  return context_;
}
inline void MsgDispatcherToSim::set_context(::google::protobuf::int32 value) {
  _set_bit(0);
  context_ = value;
}

// required .MsgsDispatcherToSim.MsgDispatcherToSim.Content message = 2;
inline bool MsgDispatcherToSim::has_message() const {
  return _has_bit(1);
}
inline void MsgDispatcherToSim::clear_message() {
  if (message_ != NULL) message_->::MsgsDispatcherToSim::MsgDispatcherToSim_Content::Clear();
  _clear_bit(1);
}
inline const ::MsgsDispatcherToSim::MsgDispatcherToSim_Content& MsgDispatcherToSim::message() const {
  return message_ != NULL ? *message_ : *default_instance_->message_;
}
inline ::MsgsDispatcherToSim::MsgDispatcherToSim_Content* MsgDispatcherToSim::mutable_message() {
  _set_bit(1);
  if (message_ == NULL) message_ = new ::MsgsDispatcherToSim::MsgDispatcherToSim_Content;
  return message_;
}


}  // namespace MsgsDispatcherToSim

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

#endif  // PROTOBUF_DispatcherToSim_2eproto__INCLUDED
