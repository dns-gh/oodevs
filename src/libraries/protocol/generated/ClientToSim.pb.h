// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_ClientToSim_2eproto__INCLUDED
#define PROTOBUF_ClientToSim_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "Common.pb.h"

namespace MsgsClientToSim {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ClientToSim_2eproto();
void protobuf_AssignDesc_ClientToSim_2eproto();
void protobuf_ShutdownFile_ClientToSim_2eproto();

class MsgControlDatetimeChange;
class MsgControlMeteo;
class MsgControlCheckPointSaveNow;
class MsgFragOrder;
class MsgSetAutomatMode;
class MsgUnitCreationRequest;
class MsgUnitMagicAction;
class MsgMagicActionCreateObject;
class MsgMagicActionUpdateObject;
class MsgObjectMagicAction_action;
class MsgObjectMagicAction;
class MsgMagicActionCreateFireOrder;
class MsgPopulationMagicAction_action;
class MsgPopulationMagicAction;
class MsgLogSupplyPushFlow;
class MsgLogSupplyChangeQuotas;
class MsgControlCheckPointSetFrequency;
class MsgControlToggleVisionCones;
class MsgKnowledgeGroupCreationRequest;
class MsgKnowledgeGroupUpdateRequest;
class MsgClientToSim;
class MsgClientToSim_Content;

enum MsgUnitMagicAction_Type {
  MsgUnitMagicAction_Type_move_to = 0,
  MsgUnitMagicAction_Type_surrender_to = 1,
  MsgUnitMagicAction_Type_cancel_surrender = 2,
  MsgUnitMagicAction_Type_recover_transporters = 3,
  MsgUnitMagicAction_Type_destroy_component = 4,
  MsgUnitMagicAction_Type_recover_all = 5,
  MsgUnitMagicAction_Type_recover_troops = 6,
  MsgUnitMagicAction_Type_recover_equipments = 7,
  MsgUnitMagicAction_Type_recover_resources = 8,
  MsgUnitMagicAction_Type_destroy_all = 9,
  MsgUnitMagicAction_Type_change_human_factors = 10,
  MsgUnitMagicAction_Type_partial_recovery = 11
};
bool MsgUnitMagicAction_Type_IsValid(int value);
const MsgUnitMagicAction_Type MsgUnitMagicAction_Type_Type_MIN = MsgUnitMagicAction_Type_move_to;
const MsgUnitMagicAction_Type MsgUnitMagicAction_Type_Type_MAX = MsgUnitMagicAction_Type_partial_recovery;

const ::google::protobuf::EnumDescriptor* MsgUnitMagicAction_Type_descriptor();
inline const ::std::string& MsgUnitMagicAction_Type_Name(MsgUnitMagicAction_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgUnitMagicAction_Type_descriptor(), value);
}
inline bool MsgUnitMagicAction_Type_Parse(
    const ::std::string& name, MsgUnitMagicAction_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgUnitMagicAction_Type>(
    MsgUnitMagicAction_Type_descriptor(), name, value);
}
// ===================================================================

class MsgControlDatetimeChange : public ::google::protobuf::Message {
 public:
  MsgControlDatetimeChange();
  virtual ~MsgControlDatetimeChange();
  
  MsgControlDatetimeChange(const MsgControlDatetimeChange& from);
  
  inline MsgControlDatetimeChange& operator=(const MsgControlDatetimeChange& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgControlDatetimeChange& default_instance();
  void Swap(MsgControlDatetimeChange* other);
  
  // implements Message ----------------------------------------------
  
  MsgControlDatetimeChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgControlDatetimeChange& from);
  void MergeFrom(const MsgControlDatetimeChange& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.MsgDateTime date_time = 1;
  inline bool has_date_time() const;
  inline void clear_date_time();
  static const int kDateTimeFieldNumber = 1;
  inline const ::Common::MsgDateTime& date_time() const;
  inline ::Common::MsgDateTime* mutable_date_time();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::MsgDateTime* date_time_;
  friend void  protobuf_AddDesc_ClientToSim_2eproto();
  friend void protobuf_AssignDesc_ClientToSim_2eproto();
  friend void protobuf_ShutdownFile_ClientToSim_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgControlDatetimeChange* default_instance_;
};
// -------------------------------------------------------------------

class MsgControlMeteo : public ::google::protobuf::Message {
 public:
  MsgControlMeteo();
  virtual ~MsgControlMeteo();
  
  MsgControlMeteo(const MsgControlMeteo& from);
  
  inline MsgControlMeteo& operator=(const MsgControlMeteo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgControlMeteo& default_instance();
  void Swap(MsgControlMeteo* other);
  
  // implements Message ----------------------------------------------
  
  MsgControlMeteo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgControlMeteo& from);
  void MergeFrom(const MsgControlMeteo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Common.MsgMissionParameters parametres = 1;
  inline bool has_parametres() const;
  inline void clear_parametres();
  static const int kParametresFieldNumber = 1;
  inline const ::Common::MsgMissionParameters& parametres() const;
  inline ::Common::MsgMissionParameters* mutable_parametres();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::MsgMissionParameters* parametres_;
  friend void  protobuf_AddDesc_ClientToSim_2eproto();
  friend void protobuf_AssignDesc_ClientToSim_2eproto();
  friend void protobuf_ShutdownFile_ClientToSim_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgControlMeteo* default_instance_;
};
// -------------------------------------------------------------------

class MsgControlCheckPointSaveNow : public ::google::protobuf::Message {
 public:
  MsgControlCheckPointSaveNow();
  virtual ~MsgControlCheckPointSaveNow();
  
  MsgControlCheckPointSaveNow(const MsgControlCheckPointSaveNow& from);
  
  inline MsgControlCheckPointSaveNow& operator=(const MsgControlCheckPointSaveNow& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgControlCheckPointSaveNow& default_instance();
  void Swap(MsgControlCheckPointSaveNow* other);
  
  // implements Message ----------------------------------------------
  
  MsgControlCheckPointSaveNow* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgControlCheckPointSaveNow& from);
  void MergeFrom(const MsgControlCheckPointSaveNow& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* name_;
  static const ::std::string _default_name_;
  friend void  protobuf_AddDesc_ClientToSim_2eproto();
  friend void protobuf_AssignDesc_ClientToSim_2eproto();
  friend void protobuf_ShutdownFile_ClientToSim_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgControlCheckPointSaveNow* default_instance_;
};
// -------------------------------------------------------------------

class MsgFragOrder : public ::google::protobuf::Message {
 public:
  MsgFragOrder();
  virtual ~MsgFragOrder();
  
  MsgFragOrder(const MsgFragOrder& from);
  
  inline MsgFragOrder& operator=(const MsgFragOrder& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgFragOrder& default_instance();
  void Swap(MsgFragOrder* other);
  
  // implements Message ----------------------------------------------
  
  MsgFragOrder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgFragOrder& from);
  void MergeFrom(const MsgFragOrder& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 oid = 1;
  inline bool has_oid() const;
  inline void clear_oid();
  static const int kOidFieldNumber = 1;
  inline ::google::protobuf::uint32 oid() const;
  inline void set_oid(::google::protobuf::uint32 value);
  
  // required uint32 frag_order = 2;
  inline bool has_frag_order() const;
  inline void clear_frag_order();
  static const int kFragOrderFieldNumber = 2;
  inline ::google::protobuf::uint32 frag_order() const;
  inline void set_frag_order(::google::protobuf::uint32 value);
  
  // optional .Common.MsgMissionParameters parametres = 3;
  inline bool has_parametres() const;
  inline void clear_parametres();
  static const int kParametresFieldNumber = 3;
  inline const ::Common::MsgMissionParameters& parametres() const;
  inline ::Common::MsgMissionParameters* mutable_parametres();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 oid_;
  ::google::protobuf::uint32 frag_order_;
  ::Common::MsgMissionParameters* parametres_;
  friend void  protobuf_AddDesc_ClientToSim_2eproto();
  friend void protobuf_AssignDesc_ClientToSim_2eproto();
  friend void protobuf_ShutdownFile_ClientToSim_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgFragOrder* default_instance_;
};
// -------------------------------------------------------------------

class MsgSetAutomatMode : public ::google::protobuf::Message {
 public:
  MsgSetAutomatMode();
  virtual ~MsgSetAutomatMode();
  
  MsgSetAutomatMode(const MsgSetAutomatMode& from);
  
  inline MsgSetAutomatMode& operator=(const MsgSetAutomatMode& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSetAutomatMode& default_instance();
  void Swap(MsgSetAutomatMode* other);
  
  // implements Message ----------------------------------------------
  
  MsgSetAutomatMode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSetAutomatMode& from);
  void MergeFrom(const MsgSetAutomatMode& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 oid = 1;
  inline bool has_oid() const;
  inline void clear_oid();
  static const int kOidFieldNumber = 1;
  inline ::google::protobuf::int32 oid() const;
  inline void set_oid(::google::protobuf::int32 value);
  
  // required .Common.EnumAutomatMode mode = 2;
  inline bool has_mode() const;
  inline void clear_mode();
  static const int kModeFieldNumber = 2;
  inline Common::EnumAutomatMode mode() const;
  inline void set_mode(Common::EnumAutomatMode value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 oid_;
  int mode_;
  friend void  protobuf_AddDesc_ClientToSim_2eproto();
  friend void protobuf_AssignDesc_ClientToSim_2eproto();
  friend void protobuf_ShutdownFile_ClientToSim_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgSetAutomatMode* default_instance_;
};
// -------------------------------------------------------------------

class MsgUnitCreationRequest : public ::google::protobuf::Message {
 public:
  MsgUnitCreationRequest();
  virtual ~MsgUnitCreationRequest();
  
  MsgUnitCreationRequest(const MsgUnitCreationRequest& from);
  
  inline MsgUnitCreationRequest& operator=(const MsgUnitCreationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgUnitCreationRequest& default_instance();
  void Swap(MsgUnitCreationRequest* other);
  
  // implements Message ----------------------------------------------
  
  MsgUnitCreationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgUnitCreationRequest& from);
  void MergeFrom(const MsgUnitCreationRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 type_pion = 1;
  inline bool has_type_pion() const;
  inline void clear_type_pion();
  static const int kTypePionFieldNumber = 1;
  inline ::google::protobuf::uint32 type_pion() const;
  inline void set_type_pion(::google::protobuf::uint32 value);
  
  // required uint32 oid_automate = 2;
  inline bool has_oid_automate() const;
  inline void clear_oid_automate();
  static const int kOidAutomateFieldNumber = 2;
  inline ::google::protobuf::uint32 oid_automate() const;
  inline void set_oid_automate(::google::protobuf::uint32 value);
  
  // required .Common.MsgCoordLatLong position = 3;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 3;
  inline const ::Common::MsgCoordLatLong& position() const;
  inline ::Common::MsgCoordLatLong* mutable_position();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 type_pion_;
  ::google::protobuf::uint32 oid_automate_;
  ::Common::MsgCoordLatLong* position_;
  friend void  protobuf_AddDesc_ClientToSim_2eproto();
  friend void protobuf_AssignDesc_ClientToSim_2eproto();
  friend void protobuf_ShutdownFile_ClientToSim_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgUnitCreationRequest* default_instance_;
};
// -------------------------------------------------------------------

class MsgUnitMagicAction : public ::google::protobuf::Message {
 public:
  MsgUnitMagicAction();
  virtual ~MsgUnitMagicAction();
  
  MsgUnitMagicAction(const MsgUnitMagicAction& from);
  
  inline MsgUnitMagicAction& operator=(const MsgUnitMagicAction& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgUnitMagicAction& default_instance();
  void Swap(MsgUnitMagicAction* other);
  
  // implements Message ----------------------------------------------
  
  MsgUnitMagicAction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgUnitMagicAction& from);
  void MergeFrom(const MsgUnitMagicAction& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef MsgUnitMagicAction_Type Type;
  static const Type move_to = MsgUnitMagicAction_Type_move_to;
  static const Type surrender_to = MsgUnitMagicAction_Type_surrender_to;
  static const Type cancel_surrender = MsgUnitMagicAction_Type_cancel_surrender;
  static const Type recover_transporters = MsgUnitMagicAction_Type_recover_transporters;
  static const Type destroy_component = MsgUnitMagicAction_Type_destroy_component;
  static const Type recover_all = MsgUnitMagicAction_Type_recover_all;
  static const Type recover_troops = MsgUnitMagicAction_Type_recover_troops;
  static const Type recover_equipments = MsgUnitMagicAction_Type_recover_equipments;
  static const Type recover_resources = MsgUnitMagicAction_Type_recover_resources;
  static const Type destroy_all = MsgUnitMagicAction_Type_destroy_all;
  static const Type change_human_factors = MsgUnitMagicAction_Type_change_human_factors;
  static const Type partial_recovery = MsgUnitMagicAction_Type_partial_recovery;
  static inline bool Type_IsValid(int value) {
    return MsgUnitMagicAction_Type_IsValid(value);
  }
  static const Type Type_MIN =
    MsgUnitMagicAction_Type_Type_MIN;
  static const Type Type_MAX =
    MsgUnitMagicAction_Type_Type_MAX;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return MsgUnitMagicAction_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return MsgUnitMagicAction_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return MsgUnitMagicAction_Type_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required uint32 oid = 1;
  inline bool has_oid() const;
  inline void clear_oid();
  static const int kOidFieldNumber = 1;
  inline ::google::protobuf::uint32 oid() const;
  inline void set_oid(::google::protobuf::uint32 value);
  
  // required .MsgsClientToSim.MsgUnitMagicAction.Type type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::MsgsClientToSim::MsgUnitMagicAction_Type type() const;
  inline void set_type(::MsgsClientToSim::MsgUnitMagicAction_Type value);
  
  // required .Common.MsgMissionParameters parametres = 3;
  inline bool has_parametres() const;
  inline void clear_parametres();
  static const int kParametresFieldNumber = 3;
  inline const ::Common::MsgMissionParameters& parametres() const;
  inline ::Common::MsgMissionParameters* mutable_parametres();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 oid_;
  int type_;
  ::Common::MsgMissionParameters* parametres_;
  friend void  protobuf_AddDesc_ClientToSim_2eproto();
  friend void protobuf_AssignDesc_ClientToSim_2eproto();
  friend void protobuf_ShutdownFile_ClientToSim_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgUnitMagicAction* default_instance_;
};
// -------------------------------------------------------------------

class MsgMagicActionCreateObject : public ::google::protobuf::Message {
 public:
  MsgMagicActionCreateObject();
  virtual ~MsgMagicActionCreateObject();
  
  MsgMagicActionCreateObject(const MsgMagicActionCreateObject& from);
  
  inline MsgMagicActionCreateObject& operator=(const MsgMagicActionCreateObject& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMagicActionCreateObject& default_instance();
  void Swap(MsgMagicActionCreateObject* other);
  
  // implements Message ----------------------------------------------
  
  MsgMagicActionCreateObject* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgMagicActionCreateObject& from);
  void MergeFrom(const MsgMagicActionCreateObject& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const char* value, size_t size);
  inline ::std::string* mutable_type();
  
  // required .Common.MsgLocation location = 2;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 2;
  inline const ::Common::MsgLocation& location() const;
  inline ::Common::MsgLocation* mutable_location();
  
  // required string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // required int32 team = 4;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 4;
  inline ::google::protobuf::int32 team() const;
  inline void set_team(::google::protobuf::int32 value);
  
  // required .Common.MsgObjectAttributes attributes = 5;
  inline bool has_attributes() const;
  inline void clear_attributes();
  static const int kAttributesFieldNumber = 5;
  inline const ::Common::MsgObjectAttributes& attributes() const;
  inline ::Common::MsgObjectAttributes* mutable_attributes();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* type_;
  static const ::std::string _default_type_;
  ::Common::MsgLocation* location_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::int32 team_;
  ::Common::MsgObjectAttributes* attributes_;
  friend void  protobuf_AddDesc_ClientToSim_2eproto();
  friend void protobuf_AssignDesc_ClientToSim_2eproto();
  friend void protobuf_ShutdownFile_ClientToSim_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgMagicActionCreateObject* default_instance_;
};
// -------------------------------------------------------------------

class MsgMagicActionUpdateObject : public ::google::protobuf::Message {
 public:
  MsgMagicActionUpdateObject();
  virtual ~MsgMagicActionUpdateObject();
  
  MsgMagicActionUpdateObject(const MsgMagicActionUpdateObject& from);
  
  inline MsgMagicActionUpdateObject& operator=(const MsgMagicActionUpdateObject& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMagicActionUpdateObject& default_instance();
  void Swap(MsgMagicActionUpdateObject* other);
  
  // implements Message ----------------------------------------------
  
  MsgMagicActionUpdateObject* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgMagicActionUpdateObject& from);
  void MergeFrom(const MsgMagicActionUpdateObject& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 oid = 1;
  inline bool has_oid() const;
  inline void clear_oid();
  static const int kOidFieldNumber = 1;
  inline ::google::protobuf::int32 oid() const;
  inline void set_oid(::google::protobuf::int32 value);
  
  // required .Common.MsgObjectAttributes attributes = 2;
  inline bool has_attributes() const;
  inline void clear_attributes();
  static const int kAttributesFieldNumber = 2;
  inline const ::Common::MsgObjectAttributes& attributes() const;
  inline ::Common::MsgObjectAttributes* mutable_attributes();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 oid_;
  ::Common::MsgObjectAttributes* attributes_;
  friend void  protobuf_AddDesc_ClientToSim_2eproto();
  friend void protobuf_AssignDesc_ClientToSim_2eproto();
  friend void protobuf_ShutdownFile_ClientToSim_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgMagicActionUpdateObject* default_instance_;
};
// -------------------------------------------------------------------

class MsgObjectMagicAction_action : public ::google::protobuf::Message {
 public:
  MsgObjectMagicAction_action();
  virtual ~MsgObjectMagicAction_action();
  
  MsgObjectMagicAction_action(const MsgObjectMagicAction_action& from);
  
  inline MsgObjectMagicAction_action& operator=(const MsgObjectMagicAction_action& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgObjectMagicAction_action& default_instance();
  void Swap(MsgObjectMagicAction_action* other);
  
  // implements Message ----------------------------------------------
  
  MsgObjectMagicAction_action* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgObjectMagicAction_action& from);
  void MergeFrom(const MsgObjectMagicAction_action& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .MsgsClientToSim.MsgMagicActionCreateObject create_object = 1;
  inline bool has_create_object() const;
  inline void clear_create_object();
  static const int kCreateObjectFieldNumber = 1;
  inline const ::MsgsClientToSim::MsgMagicActionCreateObject& create_object() const;
  inline ::MsgsClientToSim::MsgMagicActionCreateObject* mutable_create_object();
  
  // optional .MsgsClientToSim.MsgMagicActionUpdateObject update_object = 2;
  inline bool has_update_object() const;
  inline void clear_update_object();
  static const int kUpdateObjectFieldNumber = 2;
  inline const ::MsgsClientToSim::MsgMagicActionUpdateObject& update_object() const;
  inline ::MsgsClientToSim::MsgMagicActionUpdateObject* mutable_update_object();
  
  // optional int32 destroy_object = 3;
  inline bool has_destroy_object() const;
  inline void clear_destroy_object();
  static const int kDestroyObjectFieldNumber = 3;
  inline ::google::protobuf::int32 destroy_object() const;
  inline void set_destroy_object(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::MsgsClientToSim::MsgMagicActionCreateObject* create_object_;
  ::MsgsClientToSim::MsgMagicActionUpdateObject* update_object_;
  ::google::protobuf::int32 destroy_object_;
  friend void  protobuf_AddDesc_ClientToSim_2eproto();
  friend void protobuf_AssignDesc_ClientToSim_2eproto();
  friend void protobuf_ShutdownFile_ClientToSim_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgObjectMagicAction_action* default_instance_;
};
// -------------------------------------------------------------------

class MsgObjectMagicAction : public ::google::protobuf::Message {
 public:
  MsgObjectMagicAction();
  virtual ~MsgObjectMagicAction();
  
  MsgObjectMagicAction(const MsgObjectMagicAction& from);
  
  inline MsgObjectMagicAction& operator=(const MsgObjectMagicAction& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgObjectMagicAction& default_instance();
  void Swap(MsgObjectMagicAction* other);
  
  // implements Message ----------------------------------------------
  
  MsgObjectMagicAction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgObjectMagicAction& from);
  void MergeFrom(const MsgObjectMagicAction& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .MsgsClientToSim.MsgObjectMagicAction_action action = 1;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 1;
  inline const ::MsgsClientToSim::MsgObjectMagicAction_action& action() const;
  inline ::MsgsClientToSim::MsgObjectMagicAction_action* mutable_action();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::MsgsClientToSim::MsgObjectMagicAction_action* action_;
  friend void  protobuf_AddDesc_ClientToSim_2eproto();
  friend void protobuf_AssignDesc_ClientToSim_2eproto();
  friend void protobuf_ShutdownFile_ClientToSim_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgObjectMagicAction* default_instance_;
};
// -------------------------------------------------------------------

class MsgMagicActionCreateFireOrder : public ::google::protobuf::Message {
 public:
  MsgMagicActionCreateFireOrder();
  virtual ~MsgMagicActionCreateFireOrder();
  
  MsgMagicActionCreateFireOrder(const MsgMagicActionCreateFireOrder& from);
  
  inline MsgMagicActionCreateFireOrder& operator=(const MsgMagicActionCreateFireOrder& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMagicActionCreateFireOrder& default_instance();
  void Swap(MsgMagicActionCreateFireOrder* other);
  
  // implements Message ----------------------------------------------
  
  MsgMagicActionCreateFireOrder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgMagicActionCreateFireOrder& from);
  void MergeFrom(const MsgMagicActionCreateFireOrder& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 oid_targetKnowledge = 1;
  inline bool has_oid_targetknowledge() const;
  inline void clear_oid_targetknowledge();
  static const int kOidTargetKnowledgeFieldNumber = 1;
  inline ::google::protobuf::int32 oid_targetknowledge() const;
  inline void set_oid_targetknowledge(::google::protobuf::int32 value);
  
  // required int32 oid_agentForCr = 2;
  inline bool has_oid_agentforcr() const;
  inline void clear_oid_agentforcr();
  static const int kOidAgentForCrFieldNumber = 2;
  inline ::google::protobuf::int32 oid_agentforcr() const;
  inline void set_oid_agentforcr(::google::protobuf::int32 value);
  
  // required int32 munition = 3;
  inline bool has_munition() const;
  inline void clear_munition();
  static const int kMunitionFieldNumber = 3;
  inline ::google::protobuf::int32 munition() const;
  inline void set_munition(::google::protobuf::int32 value);
  
  // required int32 it = 4;
  inline bool has_it() const;
  inline void clear_it();
  static const int kItFieldNumber = 4;
  inline ::google::protobuf::int32 it() const;
  inline void set_it(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 oid_targetknowledge_;
  ::google::protobuf::int32 oid_agentforcr_;
  ::google::protobuf::int32 munition_;
  ::google::protobuf::int32 it_;
  friend void  protobuf_AddDesc_ClientToSim_2eproto();
  friend void protobuf_AssignDesc_ClientToSim_2eproto();
  friend void protobuf_ShutdownFile_ClientToSim_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgMagicActionCreateFireOrder* default_instance_;
};
// -------------------------------------------------------------------

class MsgPopulationMagicAction_action : public ::google::protobuf::Message {
 public:
  MsgPopulationMagicAction_action();
  virtual ~MsgPopulationMagicAction_action();
  
  MsgPopulationMagicAction_action(const MsgPopulationMagicAction_action& from);
  
  inline MsgPopulationMagicAction_action& operator=(const MsgPopulationMagicAction_action& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPopulationMagicAction_action& default_instance();
  void Swap(MsgPopulationMagicAction_action* other);
  
  // implements Message ----------------------------------------------
  
  MsgPopulationMagicAction_action* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPopulationMagicAction_action& from);
  void MergeFrom(const MsgPopulationMagicAction_action& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .Common.MsgMagicActionPopulationChangeAttitude change_attitude = 1;
  inline bool has_change_attitude() const;
  inline void clear_change_attitude();
  static const int kChangeAttitudeFieldNumber = 1;
  inline const ::Common::MsgMagicActionPopulationChangeAttitude& change_attitude() const;
  inline ::Common::MsgMagicActionPopulationChangeAttitude* mutable_change_attitude();
  
  // optional bool destruction_totale = 2;
  inline bool has_destruction_totale() const;
  inline void clear_destruction_totale();
  static const int kDestructionTotaleFieldNumber = 2;
  inline bool destruction_totale() const;
  inline void set_destruction_totale(bool value);
  
  // optional .Common.MsgMagicActionPopulationKill tuer = 3;
  inline bool has_tuer() const;
  inline void clear_tuer();
  static const int kTuerFieldNumber = 3;
  inline const ::Common::MsgMagicActionPopulationKill& tuer() const;
  inline ::Common::MsgMagicActionPopulationKill* mutable_tuer();
  
  // optional .Common.MsgMagicActionPopulationResurrect ressusciter = 4;
  inline bool has_ressusciter() const;
  inline void clear_ressusciter();
  static const int kRessusciterFieldNumber = 4;
  inline const ::Common::MsgMagicActionPopulationResurrect& ressusciter() const;
  inline ::Common::MsgMagicActionPopulationResurrect* mutable_ressusciter();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::MsgMagicActionPopulationChangeAttitude* change_attitude_;
  bool destruction_totale_;
  ::Common::MsgMagicActionPopulationKill* tuer_;
  ::Common::MsgMagicActionPopulationResurrect* ressusciter_;
  friend void  protobuf_AddDesc_ClientToSim_2eproto();
  friend void protobuf_AssignDesc_ClientToSim_2eproto();
  friend void protobuf_ShutdownFile_ClientToSim_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgPopulationMagicAction_action* default_instance_;
};
// -------------------------------------------------------------------

class MsgPopulationMagicAction : public ::google::protobuf::Message {
 public:
  MsgPopulationMagicAction();
  virtual ~MsgPopulationMagicAction();
  
  MsgPopulationMagicAction(const MsgPopulationMagicAction& from);
  
  inline MsgPopulationMagicAction& operator=(const MsgPopulationMagicAction& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPopulationMagicAction& default_instance();
  void Swap(MsgPopulationMagicAction* other);
  
  // implements Message ----------------------------------------------
  
  MsgPopulationMagicAction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPopulationMagicAction& from);
  void MergeFrom(const MsgPopulationMagicAction& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 oid = 1;
  inline bool has_oid() const;
  inline void clear_oid();
  static const int kOidFieldNumber = 1;
  inline ::google::protobuf::uint32 oid() const;
  inline void set_oid(::google::protobuf::uint32 value);
  
  // required .MsgsClientToSim.MsgPopulationMagicAction_action action = 2;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 2;
  inline const ::MsgsClientToSim::MsgPopulationMagicAction_action& action() const;
  inline ::MsgsClientToSim::MsgPopulationMagicAction_action* mutable_action();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 oid_;
  ::MsgsClientToSim::MsgPopulationMagicAction_action* action_;
  friend void  protobuf_AddDesc_ClientToSim_2eproto();
  friend void protobuf_AssignDesc_ClientToSim_2eproto();
  friend void protobuf_ShutdownFile_ClientToSim_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgPopulationMagicAction* default_instance_;
};
// -------------------------------------------------------------------

class MsgLogSupplyPushFlow : public ::google::protobuf::Message {
 public:
  MsgLogSupplyPushFlow();
  virtual ~MsgLogSupplyPushFlow();
  
  MsgLogSupplyPushFlow(const MsgLogSupplyPushFlow& from);
  
  inline MsgLogSupplyPushFlow& operator=(const MsgLogSupplyPushFlow& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLogSupplyPushFlow& default_instance();
  void Swap(MsgLogSupplyPushFlow* other);
  
  // implements Message ----------------------------------------------
  
  MsgLogSupplyPushFlow* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLogSupplyPushFlow& from);
  void MergeFrom(const MsgLogSupplyPushFlow& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 oid_donneur = 1;
  inline bool has_oid_donneur() const;
  inline void clear_oid_donneur();
  static const int kOidDonneurFieldNumber = 1;
  inline ::google::protobuf::uint32 oid_donneur() const;
  inline void set_oid_donneur(::google::protobuf::uint32 value);
  
  // required uint32 oid_receveur = 2;
  inline bool has_oid_receveur() const;
  inline void clear_oid_receveur();
  static const int kOidReceveurFieldNumber = 2;
  inline ::google::protobuf::uint32 oid_receveur() const;
  inline void set_oid_receveur(::google::protobuf::uint32 value);
  
  // required .Common.SeqOfDotationStock stocks = 3;
  inline bool has_stocks() const;
  inline void clear_stocks();
  static const int kStocksFieldNumber = 3;
  inline const ::Common::SeqOfDotationStock& stocks() const;
  inline ::Common::SeqOfDotationStock* mutable_stocks();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 oid_donneur_;
  ::google::protobuf::uint32 oid_receveur_;
  ::Common::SeqOfDotationStock* stocks_;
  friend void  protobuf_AddDesc_ClientToSim_2eproto();
  friend void protobuf_AssignDesc_ClientToSim_2eproto();
  friend void protobuf_ShutdownFile_ClientToSim_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLogSupplyPushFlow* default_instance_;
};
// -------------------------------------------------------------------

class MsgLogSupplyChangeQuotas : public ::google::protobuf::Message {
 public:
  MsgLogSupplyChangeQuotas();
  virtual ~MsgLogSupplyChangeQuotas();
  
  MsgLogSupplyChangeQuotas(const MsgLogSupplyChangeQuotas& from);
  
  inline MsgLogSupplyChangeQuotas& operator=(const MsgLogSupplyChangeQuotas& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLogSupplyChangeQuotas& default_instance();
  void Swap(MsgLogSupplyChangeQuotas* other);
  
  // implements Message ----------------------------------------------
  
  MsgLogSupplyChangeQuotas* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLogSupplyChangeQuotas& from);
  void MergeFrom(const MsgLogSupplyChangeQuotas& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 oid_donneur = 1;
  inline bool has_oid_donneur() const;
  inline void clear_oid_donneur();
  static const int kOidDonneurFieldNumber = 1;
  inline ::google::protobuf::uint32 oid_donneur() const;
  inline void set_oid_donneur(::google::protobuf::uint32 value);
  
  // required uint32 oid_receveur = 2;
  inline bool has_oid_receveur() const;
  inline void clear_oid_receveur();
  static const int kOidReceveurFieldNumber = 2;
  inline ::google::protobuf::uint32 oid_receveur() const;
  inline void set_oid_receveur(::google::protobuf::uint32 value);
  
  // required .Common.SeqOfDotationQuota quotas = 3;
  inline bool has_quotas() const;
  inline void clear_quotas();
  static const int kQuotasFieldNumber = 3;
  inline const ::Common::SeqOfDotationQuota& quotas() const;
  inline ::Common::SeqOfDotationQuota* mutable_quotas();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 oid_donneur_;
  ::google::protobuf::uint32 oid_receveur_;
  ::Common::SeqOfDotationQuota* quotas_;
  friend void  protobuf_AddDesc_ClientToSim_2eproto();
  friend void protobuf_AssignDesc_ClientToSim_2eproto();
  friend void protobuf_ShutdownFile_ClientToSim_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLogSupplyChangeQuotas* default_instance_;
};
// -------------------------------------------------------------------

class MsgControlCheckPointSetFrequency : public ::google::protobuf::Message {
 public:
  MsgControlCheckPointSetFrequency();
  virtual ~MsgControlCheckPointSetFrequency();
  
  MsgControlCheckPointSetFrequency(const MsgControlCheckPointSetFrequency& from);
  
  inline MsgControlCheckPointSetFrequency& operator=(const MsgControlCheckPointSetFrequency& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgControlCheckPointSetFrequency& default_instance();
  void Swap(MsgControlCheckPointSetFrequency* other);
  
  // implements Message ----------------------------------------------
  
  MsgControlCheckPointSetFrequency* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgControlCheckPointSetFrequency& from);
  void MergeFrom(const MsgControlCheckPointSetFrequency& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 frequency = 1;
  inline bool has_frequency() const;
  inline void clear_frequency();
  static const int kFrequencyFieldNumber = 1;
  inline ::google::protobuf::int32 frequency() const;
  inline void set_frequency(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 frequency_;
  friend void  protobuf_AddDesc_ClientToSim_2eproto();
  friend void protobuf_AssignDesc_ClientToSim_2eproto();
  friend void protobuf_ShutdownFile_ClientToSim_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgControlCheckPointSetFrequency* default_instance_;
};
// -------------------------------------------------------------------

class MsgControlToggleVisionCones : public ::google::protobuf::Message {
 public:
  MsgControlToggleVisionCones();
  virtual ~MsgControlToggleVisionCones();
  
  MsgControlToggleVisionCones(const MsgControlToggleVisionCones& from);
  
  inline MsgControlToggleVisionCones& operator=(const MsgControlToggleVisionCones& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgControlToggleVisionCones& default_instance();
  void Swap(MsgControlToggleVisionCones* other);
  
  // implements Message ----------------------------------------------
  
  MsgControlToggleVisionCones* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgControlToggleVisionCones& from);
  void MergeFrom(const MsgControlToggleVisionCones& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool vision_cones = 1;
  inline bool has_vision_cones() const;
  inline void clear_vision_cones();
  static const int kVisionConesFieldNumber = 1;
  inline bool vision_cones() const;
  inline void set_vision_cones(bool value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool vision_cones_;
  friend void  protobuf_AddDesc_ClientToSim_2eproto();
  friend void protobuf_AssignDesc_ClientToSim_2eproto();
  friend void protobuf_ShutdownFile_ClientToSim_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgControlToggleVisionCones* default_instance_;
};
// -------------------------------------------------------------------

class MsgKnowledgeGroupCreationRequest : public ::google::protobuf::Message {
 public:
  MsgKnowledgeGroupCreationRequest();
  virtual ~MsgKnowledgeGroupCreationRequest();
  
  MsgKnowledgeGroupCreationRequest(const MsgKnowledgeGroupCreationRequest& from);
  
  inline MsgKnowledgeGroupCreationRequest& operator=(const MsgKnowledgeGroupCreationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgKnowledgeGroupCreationRequest& default_instance();
  void Swap(MsgKnowledgeGroupCreationRequest* other);
  
  // implements Message ----------------------------------------------
  
  MsgKnowledgeGroupCreationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgKnowledgeGroupCreationRequest& from);
  void MergeFrom(const MsgKnowledgeGroupCreationRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 oid_camp = 1;
  inline bool has_oid_camp() const;
  inline void clear_oid_camp();
  static const int kOidCampFieldNumber = 1;
  inline ::google::protobuf::uint32 oid_camp() const;
  inline void set_oid_camp(::google::protobuf::uint32 value);
  
  // optional uint32 oid_parent = 2;
  inline bool has_oid_parent() const;
  inline void clear_oid_parent();
  static const int kOidParentFieldNumber = 2;
  inline ::google::protobuf::uint32 oid_parent() const;
  inline void set_oid_parent(::google::protobuf::uint32 value);
  
  // required string type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const char* value, size_t size);
  inline ::std::string* mutable_type();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 oid_camp_;
  ::google::protobuf::uint32 oid_parent_;
  ::std::string* type_;
  static const ::std::string _default_type_;
  friend void  protobuf_AddDesc_ClientToSim_2eproto();
  friend void protobuf_AssignDesc_ClientToSim_2eproto();
  friend void protobuf_ShutdownFile_ClientToSim_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgKnowledgeGroupCreationRequest* default_instance_;
};
// -------------------------------------------------------------------

class MsgKnowledgeGroupUpdateRequest : public ::google::protobuf::Message {
 public:
  MsgKnowledgeGroupUpdateRequest();
  virtual ~MsgKnowledgeGroupUpdateRequest();
  
  MsgKnowledgeGroupUpdateRequest(const MsgKnowledgeGroupUpdateRequest& from);
  
  inline MsgKnowledgeGroupUpdateRequest& operator=(const MsgKnowledgeGroupUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgKnowledgeGroupUpdateRequest& default_instance();
  void Swap(MsgKnowledgeGroupUpdateRequest* other);
  
  // implements Message ----------------------------------------------
  
  MsgKnowledgeGroupUpdateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgKnowledgeGroupUpdateRequest& from);
  void MergeFrom(const MsgKnowledgeGroupUpdateRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 oid = 1;
  inline bool has_oid() const;
  inline void clear_oid();
  static const int kOidFieldNumber = 1;
  inline ::google::protobuf::uint32 oid() const;
  inline void set_oid(::google::protobuf::uint32 value);
  
  // optional uint32 oid_camp = 2;
  inline bool has_oid_camp() const;
  inline void clear_oid_camp();
  static const int kOidCampFieldNumber = 2;
  inline ::google::protobuf::uint32 oid_camp() const;
  inline void set_oid_camp(::google::protobuf::uint32 value);
  
  // optional uint32 oid_parent = 3;
  inline bool has_oid_parent() const;
  inline void clear_oid_parent();
  static const int kOidParentFieldNumber = 3;
  inline ::google::protobuf::uint32 oid_parent() const;
  inline void set_oid_parent(::google::protobuf::uint32 value);
  
  // optional bool enabled = 4;
  inline bool has_enabled() const;
  inline void clear_enabled();
  static const int kEnabledFieldNumber = 4;
  inline bool enabled() const;
  inline void set_enabled(bool value);
  
  // optional string type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const char* value, size_t size);
  inline ::std::string* mutable_type();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 oid_;
  ::google::protobuf::uint32 oid_camp_;
  ::google::protobuf::uint32 oid_parent_;
  bool enabled_;
  ::std::string* type_;
  static const ::std::string _default_type_;
  friend void  protobuf_AddDesc_ClientToSim_2eproto();
  friend void protobuf_AssignDesc_ClientToSim_2eproto();
  friend void protobuf_ShutdownFile_ClientToSim_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgKnowledgeGroupUpdateRequest* default_instance_;
};
// -------------------------------------------------------------------

class MsgClientToSim_Content : public ::google::protobuf::Message {
 public:
  MsgClientToSim_Content();
  virtual ~MsgClientToSim_Content();
  
  MsgClientToSim_Content(const MsgClientToSim_Content& from);
  
  inline MsgClientToSim_Content& operator=(const MsgClientToSim_Content& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgClientToSim_Content& default_instance();
  void Swap(MsgClientToSim_Content* other);
  
  // implements Message ----------------------------------------------
  
  MsgClientToSim_Content* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgClientToSim_Content& from);
  void MergeFrom(const MsgClientToSim_Content& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .Common.MsgControlStop control_stop = 1;
  inline bool has_control_stop() const;
  inline void clear_control_stop();
  static const int kControlStopFieldNumber = 1;
  inline const ::Common::MsgControlStop& control_stop() const;
  inline ::Common::MsgControlStop* mutable_control_stop();
  
  // optional .Common.MsgControlPause control_pause = 2;
  inline bool has_control_pause() const;
  inline void clear_control_pause();
  static const int kControlPauseFieldNumber = 2;
  inline const ::Common::MsgControlPause& control_pause() const;
  inline ::Common::MsgControlPause* mutable_control_pause();
  
  // optional .Common.MsgControlResume control_resume = 3;
  inline bool has_control_resume() const;
  inline void clear_control_resume();
  static const int kControlResumeFieldNumber = 3;
  inline const ::Common::MsgControlResume& control_resume() const;
  inline ::Common::MsgControlResume* mutable_control_resume();
  
  // optional .Common.MsgControlChangeTimeFactor control_change_time_factor = 4;
  inline bool has_control_change_time_factor() const;
  inline void clear_control_change_time_factor();
  static const int kControlChangeTimeFactorFieldNumber = 4;
  inline const ::Common::MsgControlChangeTimeFactor& control_change_time_factor() const;
  inline ::Common::MsgControlChangeTimeFactor* mutable_control_change_time_factor();
  
  // optional .MsgsClientToSim.MsgControlDatetimeChange control_date_time_change = 5;
  inline bool has_control_date_time_change() const;
  inline void clear_control_date_time_change();
  static const int kControlDateTimeChangeFieldNumber = 5;
  inline const ::MsgsClientToSim::MsgControlDatetimeChange& control_date_time_change() const;
  inline ::MsgsClientToSim::MsgControlDatetimeChange* mutable_control_date_time_change();
  
  // optional .MsgsClientToSim.MsgControlMeteo control_meteo = 6;
  inline bool has_control_meteo() const;
  inline void clear_control_meteo();
  static const int kControlMeteoFieldNumber = 6;
  inline const ::MsgsClientToSim::MsgControlMeteo& control_meteo() const;
  inline ::MsgsClientToSim::MsgControlMeteo* mutable_control_meteo();
  
  // optional .MsgsClientToSim.MsgControlCheckPointSaveNow control_checkpoint_save_now = 7;
  inline bool has_control_checkpoint_save_now() const;
  inline void clear_control_checkpoint_save_now();
  static const int kControlCheckpointSaveNowFieldNumber = 7;
  inline const ::MsgsClientToSim::MsgControlCheckPointSaveNow& control_checkpoint_save_now() const;
  inline ::MsgsClientToSim::MsgControlCheckPointSaveNow* mutable_control_checkpoint_save_now();
  
  // optional .MsgsClientToSim.MsgControlCheckPointSetFrequency control_checkpoint_set_frequency = 8;
  inline bool has_control_checkpoint_set_frequency() const;
  inline void clear_control_checkpoint_set_frequency();
  static const int kControlCheckpointSetFrequencyFieldNumber = 8;
  inline const ::MsgsClientToSim::MsgControlCheckPointSetFrequency& control_checkpoint_set_frequency() const;
  inline ::MsgsClientToSim::MsgControlCheckPointSetFrequency* mutable_control_checkpoint_set_frequency();
  
  // optional .MsgsClientToSim.MsgControlToggleVisionCones control_toggle_vision_cones = 9;
  inline bool has_control_toggle_vision_cones() const;
  inline void clear_control_toggle_vision_cones();
  static const int kControlToggleVisionConesFieldNumber = 9;
  inline const ::MsgsClientToSim::MsgControlToggleVisionCones& control_toggle_vision_cones() const;
  inline ::MsgsClientToSim::MsgControlToggleVisionCones* mutable_control_toggle_vision_cones();
  
  // optional .Common.MsgUnitOrder unit_order = 10;
  inline bool has_unit_order() const;
  inline void clear_unit_order();
  static const int kUnitOrderFieldNumber = 10;
  inline const ::Common::MsgUnitOrder& unit_order() const;
  inline ::Common::MsgUnitOrder* mutable_unit_order();
  
  // optional .Common.MsgAutomatOrder automat_order = 11;
  inline bool has_automat_order() const;
  inline void clear_automat_order();
  static const int kAutomatOrderFieldNumber = 11;
  inline const ::Common::MsgAutomatOrder& automat_order() const;
  inline ::Common::MsgAutomatOrder* mutable_automat_order();
  
  // optional .Common.MsgPopulationOrder population_order = 12;
  inline bool has_population_order() const;
  inline void clear_population_order();
  static const int kPopulationOrderFieldNumber = 12;
  inline const ::Common::MsgPopulationOrder& population_order() const;
  inline ::Common::MsgPopulationOrder* mutable_population_order();
  
  // optional .MsgsClientToSim.MsgFragOrder frag_order = 13;
  inline bool has_frag_order() const;
  inline void clear_frag_order();
  static const int kFragOrderFieldNumber = 13;
  inline const ::MsgsClientToSim::MsgFragOrder& frag_order() const;
  inline ::MsgsClientToSim::MsgFragOrder* mutable_frag_order();
  
  // optional .MsgsClientToSim.MsgSetAutomatMode set_automat_mode = 14;
  inline bool has_set_automat_mode() const;
  inline void clear_set_automat_mode();
  static const int kSetAutomatModeFieldNumber = 14;
  inline const ::MsgsClientToSim::MsgSetAutomatMode& set_automat_mode() const;
  inline ::MsgsClientToSim::MsgSetAutomatMode* mutable_set_automat_mode();
  
  // optional .MsgsClientToSim.MsgUnitCreationRequest unit_creation_request = 15;
  inline bool has_unit_creation_request() const;
  inline void clear_unit_creation_request();
  static const int kUnitCreationRequestFieldNumber = 15;
  inline const ::MsgsClientToSim::MsgUnitCreationRequest& unit_creation_request() const;
  inline ::MsgsClientToSim::MsgUnitCreationRequest* mutable_unit_creation_request();
  
  // optional .MsgsClientToSim.MsgUnitMagicAction unit_magic_action = 17;
  inline bool has_unit_magic_action() const;
  inline void clear_unit_magic_action();
  static const int kUnitMagicActionFieldNumber = 17;
  inline const ::MsgsClientToSim::MsgUnitMagicAction& unit_magic_action() const;
  inline ::MsgsClientToSim::MsgUnitMagicAction* mutable_unit_magic_action();
  
  // optional .MsgsClientToSim.MsgObjectMagicAction object_magic_action = 18;
  inline bool has_object_magic_action() const;
  inline void clear_object_magic_action();
  static const int kObjectMagicActionFieldNumber = 18;
  inline const ::MsgsClientToSim::MsgObjectMagicAction& object_magic_action() const;
  inline ::MsgsClientToSim::MsgObjectMagicAction* mutable_object_magic_action();
  
  // optional .MsgsClientToSim.MsgPopulationMagicAction population_magic_action = 19;
  inline bool has_population_magic_action() const;
  inline void clear_population_magic_action();
  static const int kPopulationMagicActionFieldNumber = 19;
  inline const ::MsgsClientToSim::MsgPopulationMagicAction& population_magic_action() const;
  inline ::MsgsClientToSim::MsgPopulationMagicAction* mutable_population_magic_action();
  
  // optional .Common.MsgChangeDiplomacy change_diplomacy = 20;
  inline bool has_change_diplomacy() const;
  inline void clear_change_diplomacy();
  static const int kChangeDiplomacyFieldNumber = 20;
  inline const ::Common::MsgChangeDiplomacy& change_diplomacy() const;
  inline ::Common::MsgChangeDiplomacy* mutable_change_diplomacy();
  
  // optional .Common.MsgAutomatChangeKnowledgeGroup automat_change_knowledge_group = 21;
  inline bool has_automat_change_knowledge_group() const;
  inline void clear_automat_change_knowledge_group();
  static const int kAutomatChangeKnowledgeGroupFieldNumber = 21;
  inline const ::Common::MsgAutomatChangeKnowledgeGroup& automat_change_knowledge_group() const;
  inline ::Common::MsgAutomatChangeKnowledgeGroup* mutable_automat_change_knowledge_group();
  
  // optional .Common.MsgAutomatChangeLogisticLinks automat_change_logistic_links = 22;
  inline bool has_automat_change_logistic_links() const;
  inline void clear_automat_change_logistic_links();
  static const int kAutomatChangeLogisticLinksFieldNumber = 22;
  inline const ::Common::MsgAutomatChangeLogisticLinks& automat_change_logistic_links() const;
  inline ::Common::MsgAutomatChangeLogisticLinks* mutable_automat_change_logistic_links();
  
  // optional .Common.MsgAutomatChangeSuperior automat_change_superior = 23;
  inline bool has_automat_change_superior() const;
  inline void clear_automat_change_superior();
  static const int kAutomatChangeSuperiorFieldNumber = 23;
  inline const ::Common::MsgAutomatChangeSuperior& automat_change_superior() const;
  inline ::Common::MsgAutomatChangeSuperior* mutable_automat_change_superior();
  
  // optional .Common.MsgUnitChangeSuperior unit_change_superior = 24;
  inline bool has_unit_change_superior() const;
  inline void clear_unit_change_superior();
  static const int kUnitChangeSuperiorFieldNumber = 24;
  inline const ::Common::MsgUnitChangeSuperior& unit_change_superior() const;
  inline ::Common::MsgUnitChangeSuperior* mutable_unit_change_superior();
  
  // optional .MsgsClientToSim.MsgLogSupplyPushFlow log_supply_push_flow = 25;
  inline bool has_log_supply_push_flow() const;
  inline void clear_log_supply_push_flow();
  static const int kLogSupplyPushFlowFieldNumber = 25;
  inline const ::MsgsClientToSim::MsgLogSupplyPushFlow& log_supply_push_flow() const;
  inline ::MsgsClientToSim::MsgLogSupplyPushFlow* mutable_log_supply_push_flow();
  
  // optional .MsgsClientToSim.MsgLogSupplyChangeQuotas log_supply_change_quotas = 26;
  inline bool has_log_supply_change_quotas() const;
  inline void clear_log_supply_change_quotas();
  static const int kLogSupplyChangeQuotasFieldNumber = 26;
  inline const ::MsgsClientToSim::MsgLogSupplyChangeQuotas& log_supply_change_quotas() const;
  inline ::MsgsClientToSim::MsgLogSupplyChangeQuotas* mutable_log_supply_change_quotas();
  
  // optional .MsgsClientToSim.MsgKnowledgeGroupCreationRequest knowledge_group_creation_request = 27;
  inline bool has_knowledge_group_creation_request() const;
  inline void clear_knowledge_group_creation_request();
  static const int kKnowledgeGroupCreationRequestFieldNumber = 27;
  inline const ::MsgsClientToSim::MsgKnowledgeGroupCreationRequest& knowledge_group_creation_request() const;
  inline ::MsgsClientToSim::MsgKnowledgeGroupCreationRequest* mutable_knowledge_group_creation_request();
  
  // optional .MsgsClientToSim.MsgKnowledgeGroupUpdateRequest knowledge_group_update_request = 28;
  inline bool has_knowledge_group_update_request() const;
  inline void clear_knowledge_group_update_request();
  static const int kKnowledgeGroupUpdateRequestFieldNumber = 28;
  inline const ::MsgsClientToSim::MsgKnowledgeGroupUpdateRequest& knowledge_group_update_request() const;
  inline ::MsgsClientToSim::MsgKnowledgeGroupUpdateRequest* mutable_knowledge_group_update_request();
  
  // optional .MsgsClientToSim.MsgMagicActionCreateFireOrder create_fire_order = 29;
  inline bool has_create_fire_order() const;
  inline void clear_create_fire_order();
  static const int kCreateFireOrderFieldNumber = 29;
  inline const ::MsgsClientToSim::MsgMagicActionCreateFireOrder& create_fire_order() const;
  inline ::MsgsClientToSim::MsgMagicActionCreateFireOrder* mutable_create_fire_order();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Common::MsgControlStop* control_stop_;
  ::Common::MsgControlPause* control_pause_;
  ::Common::MsgControlResume* control_resume_;
  ::Common::MsgControlChangeTimeFactor* control_change_time_factor_;
  ::MsgsClientToSim::MsgControlDatetimeChange* control_date_time_change_;
  ::MsgsClientToSim::MsgControlMeteo* control_meteo_;
  ::MsgsClientToSim::MsgControlCheckPointSaveNow* control_checkpoint_save_now_;
  ::MsgsClientToSim::MsgControlCheckPointSetFrequency* control_checkpoint_set_frequency_;
  ::MsgsClientToSim::MsgControlToggleVisionCones* control_toggle_vision_cones_;
  ::Common::MsgUnitOrder* unit_order_;
  ::Common::MsgAutomatOrder* automat_order_;
  ::Common::MsgPopulationOrder* population_order_;
  ::MsgsClientToSim::MsgFragOrder* frag_order_;
  ::MsgsClientToSim::MsgSetAutomatMode* set_automat_mode_;
  ::MsgsClientToSim::MsgUnitCreationRequest* unit_creation_request_;
  ::MsgsClientToSim::MsgUnitMagicAction* unit_magic_action_;
  ::MsgsClientToSim::MsgObjectMagicAction* object_magic_action_;
  ::MsgsClientToSim::MsgPopulationMagicAction* population_magic_action_;
  ::Common::MsgChangeDiplomacy* change_diplomacy_;
  ::Common::MsgAutomatChangeKnowledgeGroup* automat_change_knowledge_group_;
  ::Common::MsgAutomatChangeLogisticLinks* automat_change_logistic_links_;
  ::Common::MsgAutomatChangeSuperior* automat_change_superior_;
  ::Common::MsgUnitChangeSuperior* unit_change_superior_;
  ::MsgsClientToSim::MsgLogSupplyPushFlow* log_supply_push_flow_;
  ::MsgsClientToSim::MsgLogSupplyChangeQuotas* log_supply_change_quotas_;
  ::MsgsClientToSim::MsgKnowledgeGroupCreationRequest* knowledge_group_creation_request_;
  ::MsgsClientToSim::MsgKnowledgeGroupUpdateRequest* knowledge_group_update_request_;
  ::MsgsClientToSim::MsgMagicActionCreateFireOrder* create_fire_order_;
  friend void  protobuf_AddDesc_ClientToSim_2eproto();
  friend void protobuf_AssignDesc_ClientToSim_2eproto();
  friend void protobuf_ShutdownFile_ClientToSim_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(28 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgClientToSim_Content* default_instance_;
};
// -------------------------------------------------------------------

class MsgClientToSim : public ::google::protobuf::Message {
 public:
  MsgClientToSim();
  virtual ~MsgClientToSim();
  
  MsgClientToSim(const MsgClientToSim& from);
  
  inline MsgClientToSim& operator=(const MsgClientToSim& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgClientToSim& default_instance();
  void Swap(MsgClientToSim* other);
  
  // implements Message ----------------------------------------------
  
  MsgClientToSim* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgClientToSim& from);
  void MergeFrom(const MsgClientToSim& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef MsgClientToSim_Content Content;
  
  // accessors -------------------------------------------------------
  
  // optional int32 context = 1 [default = 0];
  inline bool has_context() const;
  inline void clear_context();
  static const int kContextFieldNumber = 1;
  inline ::google::protobuf::int32 context() const;
  inline void set_context(::google::protobuf::int32 value);
  
  // required .MsgsClientToSim.MsgClientToSim.Content message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::MsgsClientToSim::MsgClientToSim_Content& message() const;
  inline ::MsgsClientToSim::MsgClientToSim_Content* mutable_message();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 context_;
  ::MsgsClientToSim::MsgClientToSim_Content* message_;
  friend void  protobuf_AddDesc_ClientToSim_2eproto();
  friend void protobuf_AssignDesc_ClientToSim_2eproto();
  friend void protobuf_ShutdownFile_ClientToSim_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgClientToSim* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// MsgControlDatetimeChange

// required .Common.MsgDateTime date_time = 1;
inline bool MsgControlDatetimeChange::has_date_time() const {
  return _has_bit(0);
}
inline void MsgControlDatetimeChange::clear_date_time() {
  if (date_time_ != NULL) date_time_->::Common::MsgDateTime::Clear();
  _clear_bit(0);
}
inline const ::Common::MsgDateTime& MsgControlDatetimeChange::date_time() const {
  return date_time_ != NULL ? *date_time_ : *default_instance_->date_time_;
}
inline ::Common::MsgDateTime* MsgControlDatetimeChange::mutable_date_time() {
  _set_bit(0);
  if (date_time_ == NULL) date_time_ = new ::Common::MsgDateTime;
  return date_time_;
}

// -------------------------------------------------------------------

// MsgControlMeteo

// required .Common.MsgMissionParameters parametres = 1;
inline bool MsgControlMeteo::has_parametres() const {
  return _has_bit(0);
}
inline void MsgControlMeteo::clear_parametres() {
  if (parametres_ != NULL) parametres_->::Common::MsgMissionParameters::Clear();
  _clear_bit(0);
}
inline const ::Common::MsgMissionParameters& MsgControlMeteo::parametres() const {
  return parametres_ != NULL ? *parametres_ : *default_instance_->parametres_;
}
inline ::Common::MsgMissionParameters* MsgControlMeteo::mutable_parametres() {
  _set_bit(0);
  if (parametres_ == NULL) parametres_ = new ::Common::MsgMissionParameters;
  return parametres_;
}

// -------------------------------------------------------------------

// MsgControlCheckPointSaveNow

// optional string name = 1;
inline bool MsgControlCheckPointSaveNow::has_name() const {
  return _has_bit(0);
}
inline void MsgControlCheckPointSaveNow::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgControlCheckPointSaveNow::name() const {
  return *name_;
}
inline void MsgControlCheckPointSaveNow::set_name(const ::std::string& value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgControlCheckPointSaveNow::set_name(const char* value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgControlCheckPointSaveNow::set_name(const char* value, size_t size) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgControlCheckPointSaveNow::mutable_name() {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// -------------------------------------------------------------------

// MsgFragOrder

// required uint32 oid = 1;
inline bool MsgFragOrder::has_oid() const {
  return _has_bit(0);
}
inline void MsgFragOrder::clear_oid() {
  oid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgFragOrder::oid() const {
  return oid_;
}
inline void MsgFragOrder::set_oid(::google::protobuf::uint32 value) {
  _set_bit(0);
  oid_ = value;
}

// required uint32 frag_order = 2;
inline bool MsgFragOrder::has_frag_order() const {
  return _has_bit(1);
}
inline void MsgFragOrder::clear_frag_order() {
  frag_order_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MsgFragOrder::frag_order() const {
  return frag_order_;
}
inline void MsgFragOrder::set_frag_order(::google::protobuf::uint32 value) {
  _set_bit(1);
  frag_order_ = value;
}

// optional .Common.MsgMissionParameters parametres = 3;
inline bool MsgFragOrder::has_parametres() const {
  return _has_bit(2);
}
inline void MsgFragOrder::clear_parametres() {
  if (parametres_ != NULL) parametres_->::Common::MsgMissionParameters::Clear();
  _clear_bit(2);
}
inline const ::Common::MsgMissionParameters& MsgFragOrder::parametres() const {
  return parametres_ != NULL ? *parametres_ : *default_instance_->parametres_;
}
inline ::Common::MsgMissionParameters* MsgFragOrder::mutable_parametres() {
  _set_bit(2);
  if (parametres_ == NULL) parametres_ = new ::Common::MsgMissionParameters;
  return parametres_;
}

// -------------------------------------------------------------------

// MsgSetAutomatMode

// required int32 oid = 1;
inline bool MsgSetAutomatMode::has_oid() const {
  return _has_bit(0);
}
inline void MsgSetAutomatMode::clear_oid() {
  oid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 MsgSetAutomatMode::oid() const {
  return oid_;
}
inline void MsgSetAutomatMode::set_oid(::google::protobuf::int32 value) {
  _set_bit(0);
  oid_ = value;
}

// required .Common.EnumAutomatMode mode = 2;
inline bool MsgSetAutomatMode::has_mode() const {
  return _has_bit(1);
}
inline void MsgSetAutomatMode::clear_mode() {
  mode_ = 0;
  _clear_bit(1);
}
inline Common::EnumAutomatMode MsgSetAutomatMode::mode() const {
  return static_cast< Common::EnumAutomatMode >(mode_);
}
inline void MsgSetAutomatMode::set_mode(Common::EnumAutomatMode value) {
  GOOGLE_DCHECK(Common::EnumAutomatMode_IsValid(value));
  _set_bit(1);
  mode_ = value;
}

// -------------------------------------------------------------------

// MsgUnitCreationRequest

// required uint32 type_pion = 1;
inline bool MsgUnitCreationRequest::has_type_pion() const {
  return _has_bit(0);
}
inline void MsgUnitCreationRequest::clear_type_pion() {
  type_pion_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgUnitCreationRequest::type_pion() const {
  return type_pion_;
}
inline void MsgUnitCreationRequest::set_type_pion(::google::protobuf::uint32 value) {
  _set_bit(0);
  type_pion_ = value;
}

// required uint32 oid_automate = 2;
inline bool MsgUnitCreationRequest::has_oid_automate() const {
  return _has_bit(1);
}
inline void MsgUnitCreationRequest::clear_oid_automate() {
  oid_automate_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MsgUnitCreationRequest::oid_automate() const {
  return oid_automate_;
}
inline void MsgUnitCreationRequest::set_oid_automate(::google::protobuf::uint32 value) {
  _set_bit(1);
  oid_automate_ = value;
}

// required .Common.MsgCoordLatLong position = 3;
inline bool MsgUnitCreationRequest::has_position() const {
  return _has_bit(2);
}
inline void MsgUnitCreationRequest::clear_position() {
  if (position_ != NULL) position_->::Common::MsgCoordLatLong::Clear();
  _clear_bit(2);
}
inline const ::Common::MsgCoordLatLong& MsgUnitCreationRequest::position() const {
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
inline ::Common::MsgCoordLatLong* MsgUnitCreationRequest::mutable_position() {
  _set_bit(2);
  if (position_ == NULL) position_ = new ::Common::MsgCoordLatLong;
  return position_;
}

// -------------------------------------------------------------------

// MsgUnitMagicAction

// required uint32 oid = 1;
inline bool MsgUnitMagicAction::has_oid() const {
  return _has_bit(0);
}
inline void MsgUnitMagicAction::clear_oid() {
  oid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgUnitMagicAction::oid() const {
  return oid_;
}
inline void MsgUnitMagicAction::set_oid(::google::protobuf::uint32 value) {
  _set_bit(0);
  oid_ = value;
}

// required .MsgsClientToSim.MsgUnitMagicAction.Type type = 2;
inline bool MsgUnitMagicAction::has_type() const {
  return _has_bit(1);
}
inline void MsgUnitMagicAction::clear_type() {
  type_ = 0;
  _clear_bit(1);
}
inline ::MsgsClientToSim::MsgUnitMagicAction_Type MsgUnitMagicAction::type() const {
  return static_cast< ::MsgsClientToSim::MsgUnitMagicAction_Type >(type_);
}
inline void MsgUnitMagicAction::set_type(::MsgsClientToSim::MsgUnitMagicAction_Type value) {
  GOOGLE_DCHECK(::MsgsClientToSim::MsgUnitMagicAction_Type_IsValid(value));
  _set_bit(1);
  type_ = value;
}

// required .Common.MsgMissionParameters parametres = 3;
inline bool MsgUnitMagicAction::has_parametres() const {
  return _has_bit(2);
}
inline void MsgUnitMagicAction::clear_parametres() {
  if (parametres_ != NULL) parametres_->::Common::MsgMissionParameters::Clear();
  _clear_bit(2);
}
inline const ::Common::MsgMissionParameters& MsgUnitMagicAction::parametres() const {
  return parametres_ != NULL ? *parametres_ : *default_instance_->parametres_;
}
inline ::Common::MsgMissionParameters* MsgUnitMagicAction::mutable_parametres() {
  _set_bit(2);
  if (parametres_ == NULL) parametres_ = new ::Common::MsgMissionParameters;
  return parametres_;
}

// -------------------------------------------------------------------

// MsgMagicActionCreateObject

// required string type = 1;
inline bool MsgMagicActionCreateObject::has_type() const {
  return _has_bit(0);
}
inline void MsgMagicActionCreateObject::clear_type() {
  if (type_ != &_default_type_) {
    type_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgMagicActionCreateObject::type() const {
  return *type_;
}
inline void MsgMagicActionCreateObject::set_type(const ::std::string& value) {
  _set_bit(0);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void MsgMagicActionCreateObject::set_type(const char* value) {
  _set_bit(0);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void MsgMagicActionCreateObject::set_type(const char* value, size_t size) {
  _set_bit(0);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgMagicActionCreateObject::mutable_type() {
  _set_bit(0);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  return type_;
}

// required .Common.MsgLocation location = 2;
inline bool MsgMagicActionCreateObject::has_location() const {
  return _has_bit(1);
}
inline void MsgMagicActionCreateObject::clear_location() {
  if (location_ != NULL) location_->::Common::MsgLocation::Clear();
  _clear_bit(1);
}
inline const ::Common::MsgLocation& MsgMagicActionCreateObject::location() const {
  return location_ != NULL ? *location_ : *default_instance_->location_;
}
inline ::Common::MsgLocation* MsgMagicActionCreateObject::mutable_location() {
  _set_bit(1);
  if (location_ == NULL) location_ = new ::Common::MsgLocation;
  return location_;
}

// required string name = 3;
inline bool MsgMagicActionCreateObject::has_name() const {
  return _has_bit(2);
}
inline void MsgMagicActionCreateObject::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& MsgMagicActionCreateObject::name() const {
  return *name_;
}
inline void MsgMagicActionCreateObject::set_name(const ::std::string& value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgMagicActionCreateObject::set_name(const char* value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgMagicActionCreateObject::set_name(const char* value, size_t size) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgMagicActionCreateObject::mutable_name() {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// required int32 team = 4;
inline bool MsgMagicActionCreateObject::has_team() const {
  return _has_bit(3);
}
inline void MsgMagicActionCreateObject::clear_team() {
  team_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 MsgMagicActionCreateObject::team() const {
  return team_;
}
inline void MsgMagicActionCreateObject::set_team(::google::protobuf::int32 value) {
  _set_bit(3);
  team_ = value;
}

// required .Common.MsgObjectAttributes attributes = 5;
inline bool MsgMagicActionCreateObject::has_attributes() const {
  return _has_bit(4);
}
inline void MsgMagicActionCreateObject::clear_attributes() {
  if (attributes_ != NULL) attributes_->::Common::MsgObjectAttributes::Clear();
  _clear_bit(4);
}
inline const ::Common::MsgObjectAttributes& MsgMagicActionCreateObject::attributes() const {
  return attributes_ != NULL ? *attributes_ : *default_instance_->attributes_;
}
inline ::Common::MsgObjectAttributes* MsgMagicActionCreateObject::mutable_attributes() {
  _set_bit(4);
  if (attributes_ == NULL) attributes_ = new ::Common::MsgObjectAttributes;
  return attributes_;
}

// -------------------------------------------------------------------

// MsgMagicActionUpdateObject

// required int32 oid = 1;
inline bool MsgMagicActionUpdateObject::has_oid() const {
  return _has_bit(0);
}
inline void MsgMagicActionUpdateObject::clear_oid() {
  oid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 MsgMagicActionUpdateObject::oid() const {
  return oid_;
}
inline void MsgMagicActionUpdateObject::set_oid(::google::protobuf::int32 value) {
  _set_bit(0);
  oid_ = value;
}

// required .Common.MsgObjectAttributes attributes = 2;
inline bool MsgMagicActionUpdateObject::has_attributes() const {
  return _has_bit(1);
}
inline void MsgMagicActionUpdateObject::clear_attributes() {
  if (attributes_ != NULL) attributes_->::Common::MsgObjectAttributes::Clear();
  _clear_bit(1);
}
inline const ::Common::MsgObjectAttributes& MsgMagicActionUpdateObject::attributes() const {
  return attributes_ != NULL ? *attributes_ : *default_instance_->attributes_;
}
inline ::Common::MsgObjectAttributes* MsgMagicActionUpdateObject::mutable_attributes() {
  _set_bit(1);
  if (attributes_ == NULL) attributes_ = new ::Common::MsgObjectAttributes;
  return attributes_;
}

// -------------------------------------------------------------------

// MsgObjectMagicAction_action

// optional .MsgsClientToSim.MsgMagicActionCreateObject create_object = 1;
inline bool MsgObjectMagicAction_action::has_create_object() const {
  return _has_bit(0);
}
inline void MsgObjectMagicAction_action::clear_create_object() {
  if (create_object_ != NULL) create_object_->::MsgsClientToSim::MsgMagicActionCreateObject::Clear();
  _clear_bit(0);
}
inline const ::MsgsClientToSim::MsgMagicActionCreateObject& MsgObjectMagicAction_action::create_object() const {
  return create_object_ != NULL ? *create_object_ : *default_instance_->create_object_;
}
inline ::MsgsClientToSim::MsgMagicActionCreateObject* MsgObjectMagicAction_action::mutable_create_object() {
  _set_bit(0);
  if (create_object_ == NULL) create_object_ = new ::MsgsClientToSim::MsgMagicActionCreateObject;
  return create_object_;
}

// optional .MsgsClientToSim.MsgMagicActionUpdateObject update_object = 2;
inline bool MsgObjectMagicAction_action::has_update_object() const {
  return _has_bit(1);
}
inline void MsgObjectMagicAction_action::clear_update_object() {
  if (update_object_ != NULL) update_object_->::MsgsClientToSim::MsgMagicActionUpdateObject::Clear();
  _clear_bit(1);
}
inline const ::MsgsClientToSim::MsgMagicActionUpdateObject& MsgObjectMagicAction_action::update_object() const {
  return update_object_ != NULL ? *update_object_ : *default_instance_->update_object_;
}
inline ::MsgsClientToSim::MsgMagicActionUpdateObject* MsgObjectMagicAction_action::mutable_update_object() {
  _set_bit(1);
  if (update_object_ == NULL) update_object_ = new ::MsgsClientToSim::MsgMagicActionUpdateObject;
  return update_object_;
}

// optional int32 destroy_object = 3;
inline bool MsgObjectMagicAction_action::has_destroy_object() const {
  return _has_bit(2);
}
inline void MsgObjectMagicAction_action::clear_destroy_object() {
  destroy_object_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 MsgObjectMagicAction_action::destroy_object() const {
  return destroy_object_;
}
inline void MsgObjectMagicAction_action::set_destroy_object(::google::protobuf::int32 value) {
  _set_bit(2);
  destroy_object_ = value;
}

// -------------------------------------------------------------------

// MsgObjectMagicAction

// required .MsgsClientToSim.MsgObjectMagicAction_action action = 1;
inline bool MsgObjectMagicAction::has_action() const {
  return _has_bit(0);
}
inline void MsgObjectMagicAction::clear_action() {
  if (action_ != NULL) action_->::MsgsClientToSim::MsgObjectMagicAction_action::Clear();
  _clear_bit(0);
}
inline const ::MsgsClientToSim::MsgObjectMagicAction_action& MsgObjectMagicAction::action() const {
  return action_ != NULL ? *action_ : *default_instance_->action_;
}
inline ::MsgsClientToSim::MsgObjectMagicAction_action* MsgObjectMagicAction::mutable_action() {
  _set_bit(0);
  if (action_ == NULL) action_ = new ::MsgsClientToSim::MsgObjectMagicAction_action;
  return action_;
}

// -------------------------------------------------------------------

// MsgMagicActionCreateFireOrder

// required int32 oid_targetKnowledge = 1;
inline bool MsgMagicActionCreateFireOrder::has_oid_targetknowledge() const {
  return _has_bit(0);
}
inline void MsgMagicActionCreateFireOrder::clear_oid_targetknowledge() {
  oid_targetknowledge_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 MsgMagicActionCreateFireOrder::oid_targetknowledge() const {
  return oid_targetknowledge_;
}
inline void MsgMagicActionCreateFireOrder::set_oid_targetknowledge(::google::protobuf::int32 value) {
  _set_bit(0);
  oid_targetknowledge_ = value;
}

// required int32 oid_agentForCr = 2;
inline bool MsgMagicActionCreateFireOrder::has_oid_agentforcr() const {
  return _has_bit(1);
}
inline void MsgMagicActionCreateFireOrder::clear_oid_agentforcr() {
  oid_agentforcr_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 MsgMagicActionCreateFireOrder::oid_agentforcr() const {
  return oid_agentforcr_;
}
inline void MsgMagicActionCreateFireOrder::set_oid_agentforcr(::google::protobuf::int32 value) {
  _set_bit(1);
  oid_agentforcr_ = value;
}

// required int32 munition = 3;
inline bool MsgMagicActionCreateFireOrder::has_munition() const {
  return _has_bit(2);
}
inline void MsgMagicActionCreateFireOrder::clear_munition() {
  munition_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 MsgMagicActionCreateFireOrder::munition() const {
  return munition_;
}
inline void MsgMagicActionCreateFireOrder::set_munition(::google::protobuf::int32 value) {
  _set_bit(2);
  munition_ = value;
}

// required int32 it = 4;
inline bool MsgMagicActionCreateFireOrder::has_it() const {
  return _has_bit(3);
}
inline void MsgMagicActionCreateFireOrder::clear_it() {
  it_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 MsgMagicActionCreateFireOrder::it() const {
  return it_;
}
inline void MsgMagicActionCreateFireOrder::set_it(::google::protobuf::int32 value) {
  _set_bit(3);
  it_ = value;
}

// -------------------------------------------------------------------

// MsgPopulationMagicAction_action

// optional .Common.MsgMagicActionPopulationChangeAttitude change_attitude = 1;
inline bool MsgPopulationMagicAction_action::has_change_attitude() const {
  return _has_bit(0);
}
inline void MsgPopulationMagicAction_action::clear_change_attitude() {
  if (change_attitude_ != NULL) change_attitude_->::Common::MsgMagicActionPopulationChangeAttitude::Clear();
  _clear_bit(0);
}
inline const ::Common::MsgMagicActionPopulationChangeAttitude& MsgPopulationMagicAction_action::change_attitude() const {
  return change_attitude_ != NULL ? *change_attitude_ : *default_instance_->change_attitude_;
}
inline ::Common::MsgMagicActionPopulationChangeAttitude* MsgPopulationMagicAction_action::mutable_change_attitude() {
  _set_bit(0);
  if (change_attitude_ == NULL) change_attitude_ = new ::Common::MsgMagicActionPopulationChangeAttitude;
  return change_attitude_;
}

// optional bool destruction_totale = 2;
inline bool MsgPopulationMagicAction_action::has_destruction_totale() const {
  return _has_bit(1);
}
inline void MsgPopulationMagicAction_action::clear_destruction_totale() {
  destruction_totale_ = false;
  _clear_bit(1);
}
inline bool MsgPopulationMagicAction_action::destruction_totale() const {
  return destruction_totale_;
}
inline void MsgPopulationMagicAction_action::set_destruction_totale(bool value) {
  _set_bit(1);
  destruction_totale_ = value;
}

// optional .Common.MsgMagicActionPopulationKill tuer = 3;
inline bool MsgPopulationMagicAction_action::has_tuer() const {
  return _has_bit(2);
}
inline void MsgPopulationMagicAction_action::clear_tuer() {
  if (tuer_ != NULL) tuer_->::Common::MsgMagicActionPopulationKill::Clear();
  _clear_bit(2);
}
inline const ::Common::MsgMagicActionPopulationKill& MsgPopulationMagicAction_action::tuer() const {
  return tuer_ != NULL ? *tuer_ : *default_instance_->tuer_;
}
inline ::Common::MsgMagicActionPopulationKill* MsgPopulationMagicAction_action::mutable_tuer() {
  _set_bit(2);
  if (tuer_ == NULL) tuer_ = new ::Common::MsgMagicActionPopulationKill;
  return tuer_;
}

// optional .Common.MsgMagicActionPopulationResurrect ressusciter = 4;
inline bool MsgPopulationMagicAction_action::has_ressusciter() const {
  return _has_bit(3);
}
inline void MsgPopulationMagicAction_action::clear_ressusciter() {
  if (ressusciter_ != NULL) ressusciter_->::Common::MsgMagicActionPopulationResurrect::Clear();
  _clear_bit(3);
}
inline const ::Common::MsgMagicActionPopulationResurrect& MsgPopulationMagicAction_action::ressusciter() const {
  return ressusciter_ != NULL ? *ressusciter_ : *default_instance_->ressusciter_;
}
inline ::Common::MsgMagicActionPopulationResurrect* MsgPopulationMagicAction_action::mutable_ressusciter() {
  _set_bit(3);
  if (ressusciter_ == NULL) ressusciter_ = new ::Common::MsgMagicActionPopulationResurrect;
  return ressusciter_;
}

// -------------------------------------------------------------------

// MsgPopulationMagicAction

// required uint32 oid = 1;
inline bool MsgPopulationMagicAction::has_oid() const {
  return _has_bit(0);
}
inline void MsgPopulationMagicAction::clear_oid() {
  oid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgPopulationMagicAction::oid() const {
  return oid_;
}
inline void MsgPopulationMagicAction::set_oid(::google::protobuf::uint32 value) {
  _set_bit(0);
  oid_ = value;
}

// required .MsgsClientToSim.MsgPopulationMagicAction_action action = 2;
inline bool MsgPopulationMagicAction::has_action() const {
  return _has_bit(1);
}
inline void MsgPopulationMagicAction::clear_action() {
  if (action_ != NULL) action_->::MsgsClientToSim::MsgPopulationMagicAction_action::Clear();
  _clear_bit(1);
}
inline const ::MsgsClientToSim::MsgPopulationMagicAction_action& MsgPopulationMagicAction::action() const {
  return action_ != NULL ? *action_ : *default_instance_->action_;
}
inline ::MsgsClientToSim::MsgPopulationMagicAction_action* MsgPopulationMagicAction::mutable_action() {
  _set_bit(1);
  if (action_ == NULL) action_ = new ::MsgsClientToSim::MsgPopulationMagicAction_action;
  return action_;
}

// -------------------------------------------------------------------

// MsgLogSupplyPushFlow

// required uint32 oid_donneur = 1;
inline bool MsgLogSupplyPushFlow::has_oid_donneur() const {
  return _has_bit(0);
}
inline void MsgLogSupplyPushFlow::clear_oid_donneur() {
  oid_donneur_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgLogSupplyPushFlow::oid_donneur() const {
  return oid_donneur_;
}
inline void MsgLogSupplyPushFlow::set_oid_donneur(::google::protobuf::uint32 value) {
  _set_bit(0);
  oid_donneur_ = value;
}

// required uint32 oid_receveur = 2;
inline bool MsgLogSupplyPushFlow::has_oid_receveur() const {
  return _has_bit(1);
}
inline void MsgLogSupplyPushFlow::clear_oid_receveur() {
  oid_receveur_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MsgLogSupplyPushFlow::oid_receveur() const {
  return oid_receveur_;
}
inline void MsgLogSupplyPushFlow::set_oid_receveur(::google::protobuf::uint32 value) {
  _set_bit(1);
  oid_receveur_ = value;
}

// required .Common.SeqOfDotationStock stocks = 3;
inline bool MsgLogSupplyPushFlow::has_stocks() const {
  return _has_bit(2);
}
inline void MsgLogSupplyPushFlow::clear_stocks() {
  if (stocks_ != NULL) stocks_->::Common::SeqOfDotationStock::Clear();
  _clear_bit(2);
}
inline const ::Common::SeqOfDotationStock& MsgLogSupplyPushFlow::stocks() const {
  return stocks_ != NULL ? *stocks_ : *default_instance_->stocks_;
}
inline ::Common::SeqOfDotationStock* MsgLogSupplyPushFlow::mutable_stocks() {
  _set_bit(2);
  if (stocks_ == NULL) stocks_ = new ::Common::SeqOfDotationStock;
  return stocks_;
}

// -------------------------------------------------------------------

// MsgLogSupplyChangeQuotas

// required uint32 oid_donneur = 1;
inline bool MsgLogSupplyChangeQuotas::has_oid_donneur() const {
  return _has_bit(0);
}
inline void MsgLogSupplyChangeQuotas::clear_oid_donneur() {
  oid_donneur_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgLogSupplyChangeQuotas::oid_donneur() const {
  return oid_donneur_;
}
inline void MsgLogSupplyChangeQuotas::set_oid_donneur(::google::protobuf::uint32 value) {
  _set_bit(0);
  oid_donneur_ = value;
}

// required uint32 oid_receveur = 2;
inline bool MsgLogSupplyChangeQuotas::has_oid_receveur() const {
  return _has_bit(1);
}
inline void MsgLogSupplyChangeQuotas::clear_oid_receveur() {
  oid_receveur_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MsgLogSupplyChangeQuotas::oid_receveur() const {
  return oid_receveur_;
}
inline void MsgLogSupplyChangeQuotas::set_oid_receveur(::google::protobuf::uint32 value) {
  _set_bit(1);
  oid_receveur_ = value;
}

// required .Common.SeqOfDotationQuota quotas = 3;
inline bool MsgLogSupplyChangeQuotas::has_quotas() const {
  return _has_bit(2);
}
inline void MsgLogSupplyChangeQuotas::clear_quotas() {
  if (quotas_ != NULL) quotas_->::Common::SeqOfDotationQuota::Clear();
  _clear_bit(2);
}
inline const ::Common::SeqOfDotationQuota& MsgLogSupplyChangeQuotas::quotas() const {
  return quotas_ != NULL ? *quotas_ : *default_instance_->quotas_;
}
inline ::Common::SeqOfDotationQuota* MsgLogSupplyChangeQuotas::mutable_quotas() {
  _set_bit(2);
  if (quotas_ == NULL) quotas_ = new ::Common::SeqOfDotationQuota;
  return quotas_;
}

// -------------------------------------------------------------------

// MsgControlCheckPointSetFrequency

// required int32 frequency = 1;
inline bool MsgControlCheckPointSetFrequency::has_frequency() const {
  return _has_bit(0);
}
inline void MsgControlCheckPointSetFrequency::clear_frequency() {
  frequency_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 MsgControlCheckPointSetFrequency::frequency() const {
  return frequency_;
}
inline void MsgControlCheckPointSetFrequency::set_frequency(::google::protobuf::int32 value) {
  _set_bit(0);
  frequency_ = value;
}

// -------------------------------------------------------------------

// MsgControlToggleVisionCones

// required bool vision_cones = 1;
inline bool MsgControlToggleVisionCones::has_vision_cones() const {
  return _has_bit(0);
}
inline void MsgControlToggleVisionCones::clear_vision_cones() {
  vision_cones_ = false;
  _clear_bit(0);
}
inline bool MsgControlToggleVisionCones::vision_cones() const {
  return vision_cones_;
}
inline void MsgControlToggleVisionCones::set_vision_cones(bool value) {
  _set_bit(0);
  vision_cones_ = value;
}

// -------------------------------------------------------------------

// MsgKnowledgeGroupCreationRequest

// required uint32 oid_camp = 1;
inline bool MsgKnowledgeGroupCreationRequest::has_oid_camp() const {
  return _has_bit(0);
}
inline void MsgKnowledgeGroupCreationRequest::clear_oid_camp() {
  oid_camp_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgKnowledgeGroupCreationRequest::oid_camp() const {
  return oid_camp_;
}
inline void MsgKnowledgeGroupCreationRequest::set_oid_camp(::google::protobuf::uint32 value) {
  _set_bit(0);
  oid_camp_ = value;
}

// optional uint32 oid_parent = 2;
inline bool MsgKnowledgeGroupCreationRequest::has_oid_parent() const {
  return _has_bit(1);
}
inline void MsgKnowledgeGroupCreationRequest::clear_oid_parent() {
  oid_parent_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MsgKnowledgeGroupCreationRequest::oid_parent() const {
  return oid_parent_;
}
inline void MsgKnowledgeGroupCreationRequest::set_oid_parent(::google::protobuf::uint32 value) {
  _set_bit(1);
  oid_parent_ = value;
}

// required string type = 3;
inline bool MsgKnowledgeGroupCreationRequest::has_type() const {
  return _has_bit(2);
}
inline void MsgKnowledgeGroupCreationRequest::clear_type() {
  if (type_ != &_default_type_) {
    type_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& MsgKnowledgeGroupCreationRequest::type() const {
  return *type_;
}
inline void MsgKnowledgeGroupCreationRequest::set_type(const ::std::string& value) {
  _set_bit(2);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void MsgKnowledgeGroupCreationRequest::set_type(const char* value) {
  _set_bit(2);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void MsgKnowledgeGroupCreationRequest::set_type(const char* value, size_t size) {
  _set_bit(2);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgKnowledgeGroupCreationRequest::mutable_type() {
  _set_bit(2);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  return type_;
}

// -------------------------------------------------------------------

// MsgKnowledgeGroupUpdateRequest

// required uint32 oid = 1;
inline bool MsgKnowledgeGroupUpdateRequest::has_oid() const {
  return _has_bit(0);
}
inline void MsgKnowledgeGroupUpdateRequest::clear_oid() {
  oid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgKnowledgeGroupUpdateRequest::oid() const {
  return oid_;
}
inline void MsgKnowledgeGroupUpdateRequest::set_oid(::google::protobuf::uint32 value) {
  _set_bit(0);
  oid_ = value;
}

// optional uint32 oid_camp = 2;
inline bool MsgKnowledgeGroupUpdateRequest::has_oid_camp() const {
  return _has_bit(1);
}
inline void MsgKnowledgeGroupUpdateRequest::clear_oid_camp() {
  oid_camp_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MsgKnowledgeGroupUpdateRequest::oid_camp() const {
  return oid_camp_;
}
inline void MsgKnowledgeGroupUpdateRequest::set_oid_camp(::google::protobuf::uint32 value) {
  _set_bit(1);
  oid_camp_ = value;
}

// optional uint32 oid_parent = 3;
inline bool MsgKnowledgeGroupUpdateRequest::has_oid_parent() const {
  return _has_bit(2);
}
inline void MsgKnowledgeGroupUpdateRequest::clear_oid_parent() {
  oid_parent_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 MsgKnowledgeGroupUpdateRequest::oid_parent() const {
  return oid_parent_;
}
inline void MsgKnowledgeGroupUpdateRequest::set_oid_parent(::google::protobuf::uint32 value) {
  _set_bit(2);
  oid_parent_ = value;
}

// optional bool enabled = 4;
inline bool MsgKnowledgeGroupUpdateRequest::has_enabled() const {
  return _has_bit(3);
}
inline void MsgKnowledgeGroupUpdateRequest::clear_enabled() {
  enabled_ = false;
  _clear_bit(3);
}
inline bool MsgKnowledgeGroupUpdateRequest::enabled() const {
  return enabled_;
}
inline void MsgKnowledgeGroupUpdateRequest::set_enabled(bool value) {
  _set_bit(3);
  enabled_ = value;
}

// optional string type = 5;
inline bool MsgKnowledgeGroupUpdateRequest::has_type() const {
  return _has_bit(4);
}
inline void MsgKnowledgeGroupUpdateRequest::clear_type() {
  if (type_ != &_default_type_) {
    type_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& MsgKnowledgeGroupUpdateRequest::type() const {
  return *type_;
}
inline void MsgKnowledgeGroupUpdateRequest::set_type(const ::std::string& value) {
  _set_bit(4);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void MsgKnowledgeGroupUpdateRequest::set_type(const char* value) {
  _set_bit(4);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void MsgKnowledgeGroupUpdateRequest::set_type(const char* value, size_t size) {
  _set_bit(4);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgKnowledgeGroupUpdateRequest::mutable_type() {
  _set_bit(4);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  return type_;
}

// -------------------------------------------------------------------

// MsgClientToSim_Content

// optional .Common.MsgControlStop control_stop = 1;
inline bool MsgClientToSim_Content::has_control_stop() const {
  return _has_bit(0);
}
inline void MsgClientToSim_Content::clear_control_stop() {
  if (control_stop_ != NULL) control_stop_->::Common::MsgControlStop::Clear();
  _clear_bit(0);
}
inline const ::Common::MsgControlStop& MsgClientToSim_Content::control_stop() const {
  return control_stop_ != NULL ? *control_stop_ : *default_instance_->control_stop_;
}
inline ::Common::MsgControlStop* MsgClientToSim_Content::mutable_control_stop() {
  _set_bit(0);
  if (control_stop_ == NULL) control_stop_ = new ::Common::MsgControlStop;
  return control_stop_;
}

// optional .Common.MsgControlPause control_pause = 2;
inline bool MsgClientToSim_Content::has_control_pause() const {
  return _has_bit(1);
}
inline void MsgClientToSim_Content::clear_control_pause() {
  if (control_pause_ != NULL) control_pause_->::Common::MsgControlPause::Clear();
  _clear_bit(1);
}
inline const ::Common::MsgControlPause& MsgClientToSim_Content::control_pause() const {
  return control_pause_ != NULL ? *control_pause_ : *default_instance_->control_pause_;
}
inline ::Common::MsgControlPause* MsgClientToSim_Content::mutable_control_pause() {
  _set_bit(1);
  if (control_pause_ == NULL) control_pause_ = new ::Common::MsgControlPause;
  return control_pause_;
}

// optional .Common.MsgControlResume control_resume = 3;
inline bool MsgClientToSim_Content::has_control_resume() const {
  return _has_bit(2);
}
inline void MsgClientToSim_Content::clear_control_resume() {
  if (control_resume_ != NULL) control_resume_->::Common::MsgControlResume::Clear();
  _clear_bit(2);
}
inline const ::Common::MsgControlResume& MsgClientToSim_Content::control_resume() const {
  return control_resume_ != NULL ? *control_resume_ : *default_instance_->control_resume_;
}
inline ::Common::MsgControlResume* MsgClientToSim_Content::mutable_control_resume() {
  _set_bit(2);
  if (control_resume_ == NULL) control_resume_ = new ::Common::MsgControlResume;
  return control_resume_;
}

// optional .Common.MsgControlChangeTimeFactor control_change_time_factor = 4;
inline bool MsgClientToSim_Content::has_control_change_time_factor() const {
  return _has_bit(3);
}
inline void MsgClientToSim_Content::clear_control_change_time_factor() {
  if (control_change_time_factor_ != NULL) control_change_time_factor_->::Common::MsgControlChangeTimeFactor::Clear();
  _clear_bit(3);
}
inline const ::Common::MsgControlChangeTimeFactor& MsgClientToSim_Content::control_change_time_factor() const {
  return control_change_time_factor_ != NULL ? *control_change_time_factor_ : *default_instance_->control_change_time_factor_;
}
inline ::Common::MsgControlChangeTimeFactor* MsgClientToSim_Content::mutable_control_change_time_factor() {
  _set_bit(3);
  if (control_change_time_factor_ == NULL) control_change_time_factor_ = new ::Common::MsgControlChangeTimeFactor;
  return control_change_time_factor_;
}

// optional .MsgsClientToSim.MsgControlDatetimeChange control_date_time_change = 5;
inline bool MsgClientToSim_Content::has_control_date_time_change() const {
  return _has_bit(4);
}
inline void MsgClientToSim_Content::clear_control_date_time_change() {
  if (control_date_time_change_ != NULL) control_date_time_change_->::MsgsClientToSim::MsgControlDatetimeChange::Clear();
  _clear_bit(4);
}
inline const ::MsgsClientToSim::MsgControlDatetimeChange& MsgClientToSim_Content::control_date_time_change() const {
  return control_date_time_change_ != NULL ? *control_date_time_change_ : *default_instance_->control_date_time_change_;
}
inline ::MsgsClientToSim::MsgControlDatetimeChange* MsgClientToSim_Content::mutable_control_date_time_change() {
  _set_bit(4);
  if (control_date_time_change_ == NULL) control_date_time_change_ = new ::MsgsClientToSim::MsgControlDatetimeChange;
  return control_date_time_change_;
}

// optional .MsgsClientToSim.MsgControlMeteo control_meteo = 6;
inline bool MsgClientToSim_Content::has_control_meteo() const {
  return _has_bit(5);
}
inline void MsgClientToSim_Content::clear_control_meteo() {
  if (control_meteo_ != NULL) control_meteo_->::MsgsClientToSim::MsgControlMeteo::Clear();
  _clear_bit(5);
}
inline const ::MsgsClientToSim::MsgControlMeteo& MsgClientToSim_Content::control_meteo() const {
  return control_meteo_ != NULL ? *control_meteo_ : *default_instance_->control_meteo_;
}
inline ::MsgsClientToSim::MsgControlMeteo* MsgClientToSim_Content::mutable_control_meteo() {
  _set_bit(5);
  if (control_meteo_ == NULL) control_meteo_ = new ::MsgsClientToSim::MsgControlMeteo;
  return control_meteo_;
}

// optional .MsgsClientToSim.MsgControlCheckPointSaveNow control_checkpoint_save_now = 7;
inline bool MsgClientToSim_Content::has_control_checkpoint_save_now() const {
  return _has_bit(6);
}
inline void MsgClientToSim_Content::clear_control_checkpoint_save_now() {
  if (control_checkpoint_save_now_ != NULL) control_checkpoint_save_now_->::MsgsClientToSim::MsgControlCheckPointSaveNow::Clear();
  _clear_bit(6);
}
inline const ::MsgsClientToSim::MsgControlCheckPointSaveNow& MsgClientToSim_Content::control_checkpoint_save_now() const {
  return control_checkpoint_save_now_ != NULL ? *control_checkpoint_save_now_ : *default_instance_->control_checkpoint_save_now_;
}
inline ::MsgsClientToSim::MsgControlCheckPointSaveNow* MsgClientToSim_Content::mutable_control_checkpoint_save_now() {
  _set_bit(6);
  if (control_checkpoint_save_now_ == NULL) control_checkpoint_save_now_ = new ::MsgsClientToSim::MsgControlCheckPointSaveNow;
  return control_checkpoint_save_now_;
}

// optional .MsgsClientToSim.MsgControlCheckPointSetFrequency control_checkpoint_set_frequency = 8;
inline bool MsgClientToSim_Content::has_control_checkpoint_set_frequency() const {
  return _has_bit(7);
}
inline void MsgClientToSim_Content::clear_control_checkpoint_set_frequency() {
  if (control_checkpoint_set_frequency_ != NULL) control_checkpoint_set_frequency_->::MsgsClientToSim::MsgControlCheckPointSetFrequency::Clear();
  _clear_bit(7);
}
inline const ::MsgsClientToSim::MsgControlCheckPointSetFrequency& MsgClientToSim_Content::control_checkpoint_set_frequency() const {
  return control_checkpoint_set_frequency_ != NULL ? *control_checkpoint_set_frequency_ : *default_instance_->control_checkpoint_set_frequency_;
}
inline ::MsgsClientToSim::MsgControlCheckPointSetFrequency* MsgClientToSim_Content::mutable_control_checkpoint_set_frequency() {
  _set_bit(7);
  if (control_checkpoint_set_frequency_ == NULL) control_checkpoint_set_frequency_ = new ::MsgsClientToSim::MsgControlCheckPointSetFrequency;
  return control_checkpoint_set_frequency_;
}

// optional .MsgsClientToSim.MsgControlToggleVisionCones control_toggle_vision_cones = 9;
inline bool MsgClientToSim_Content::has_control_toggle_vision_cones() const {
  return _has_bit(8);
}
inline void MsgClientToSim_Content::clear_control_toggle_vision_cones() {
  if (control_toggle_vision_cones_ != NULL) control_toggle_vision_cones_->::MsgsClientToSim::MsgControlToggleVisionCones::Clear();
  _clear_bit(8);
}
inline const ::MsgsClientToSim::MsgControlToggleVisionCones& MsgClientToSim_Content::control_toggle_vision_cones() const {
  return control_toggle_vision_cones_ != NULL ? *control_toggle_vision_cones_ : *default_instance_->control_toggle_vision_cones_;
}
inline ::MsgsClientToSim::MsgControlToggleVisionCones* MsgClientToSim_Content::mutable_control_toggle_vision_cones() {
  _set_bit(8);
  if (control_toggle_vision_cones_ == NULL) control_toggle_vision_cones_ = new ::MsgsClientToSim::MsgControlToggleVisionCones;
  return control_toggle_vision_cones_;
}

// optional .Common.MsgUnitOrder unit_order = 10;
inline bool MsgClientToSim_Content::has_unit_order() const {
  return _has_bit(9);
}
inline void MsgClientToSim_Content::clear_unit_order() {
  if (unit_order_ != NULL) unit_order_->::Common::MsgUnitOrder::Clear();
  _clear_bit(9);
}
inline const ::Common::MsgUnitOrder& MsgClientToSim_Content::unit_order() const {
  return unit_order_ != NULL ? *unit_order_ : *default_instance_->unit_order_;
}
inline ::Common::MsgUnitOrder* MsgClientToSim_Content::mutable_unit_order() {
  _set_bit(9);
  if (unit_order_ == NULL) unit_order_ = new ::Common::MsgUnitOrder;
  return unit_order_;
}

// optional .Common.MsgAutomatOrder automat_order = 11;
inline bool MsgClientToSim_Content::has_automat_order() const {
  return _has_bit(10);
}
inline void MsgClientToSim_Content::clear_automat_order() {
  if (automat_order_ != NULL) automat_order_->::Common::MsgAutomatOrder::Clear();
  _clear_bit(10);
}
inline const ::Common::MsgAutomatOrder& MsgClientToSim_Content::automat_order() const {
  return automat_order_ != NULL ? *automat_order_ : *default_instance_->automat_order_;
}
inline ::Common::MsgAutomatOrder* MsgClientToSim_Content::mutable_automat_order() {
  _set_bit(10);
  if (automat_order_ == NULL) automat_order_ = new ::Common::MsgAutomatOrder;
  return automat_order_;
}

// optional .Common.MsgPopulationOrder population_order = 12;
inline bool MsgClientToSim_Content::has_population_order() const {
  return _has_bit(11);
}
inline void MsgClientToSim_Content::clear_population_order() {
  if (population_order_ != NULL) population_order_->::Common::MsgPopulationOrder::Clear();
  _clear_bit(11);
}
inline const ::Common::MsgPopulationOrder& MsgClientToSim_Content::population_order() const {
  return population_order_ != NULL ? *population_order_ : *default_instance_->population_order_;
}
inline ::Common::MsgPopulationOrder* MsgClientToSim_Content::mutable_population_order() {
  _set_bit(11);
  if (population_order_ == NULL) population_order_ = new ::Common::MsgPopulationOrder;
  return population_order_;
}

// optional .MsgsClientToSim.MsgFragOrder frag_order = 13;
inline bool MsgClientToSim_Content::has_frag_order() const {
  return _has_bit(12);
}
inline void MsgClientToSim_Content::clear_frag_order() {
  if (frag_order_ != NULL) frag_order_->::MsgsClientToSim::MsgFragOrder::Clear();
  _clear_bit(12);
}
inline const ::MsgsClientToSim::MsgFragOrder& MsgClientToSim_Content::frag_order() const {
  return frag_order_ != NULL ? *frag_order_ : *default_instance_->frag_order_;
}
inline ::MsgsClientToSim::MsgFragOrder* MsgClientToSim_Content::mutable_frag_order() {
  _set_bit(12);
  if (frag_order_ == NULL) frag_order_ = new ::MsgsClientToSim::MsgFragOrder;
  return frag_order_;
}

// optional .MsgsClientToSim.MsgSetAutomatMode set_automat_mode = 14;
inline bool MsgClientToSim_Content::has_set_automat_mode() const {
  return _has_bit(13);
}
inline void MsgClientToSim_Content::clear_set_automat_mode() {
  if (set_automat_mode_ != NULL) set_automat_mode_->::MsgsClientToSim::MsgSetAutomatMode::Clear();
  _clear_bit(13);
}
inline const ::MsgsClientToSim::MsgSetAutomatMode& MsgClientToSim_Content::set_automat_mode() const {
  return set_automat_mode_ != NULL ? *set_automat_mode_ : *default_instance_->set_automat_mode_;
}
inline ::MsgsClientToSim::MsgSetAutomatMode* MsgClientToSim_Content::mutable_set_automat_mode() {
  _set_bit(13);
  if (set_automat_mode_ == NULL) set_automat_mode_ = new ::MsgsClientToSim::MsgSetAutomatMode;
  return set_automat_mode_;
}

// optional .MsgsClientToSim.MsgUnitCreationRequest unit_creation_request = 15;
inline bool MsgClientToSim_Content::has_unit_creation_request() const {
  return _has_bit(14);
}
inline void MsgClientToSim_Content::clear_unit_creation_request() {
  if (unit_creation_request_ != NULL) unit_creation_request_->::MsgsClientToSim::MsgUnitCreationRequest::Clear();
  _clear_bit(14);
}
inline const ::MsgsClientToSim::MsgUnitCreationRequest& MsgClientToSim_Content::unit_creation_request() const {
  return unit_creation_request_ != NULL ? *unit_creation_request_ : *default_instance_->unit_creation_request_;
}
inline ::MsgsClientToSim::MsgUnitCreationRequest* MsgClientToSim_Content::mutable_unit_creation_request() {
  _set_bit(14);
  if (unit_creation_request_ == NULL) unit_creation_request_ = new ::MsgsClientToSim::MsgUnitCreationRequest;
  return unit_creation_request_;
}

// optional .MsgsClientToSim.MsgUnitMagicAction unit_magic_action = 17;
inline bool MsgClientToSim_Content::has_unit_magic_action() const {
  return _has_bit(15);
}
inline void MsgClientToSim_Content::clear_unit_magic_action() {
  if (unit_magic_action_ != NULL) unit_magic_action_->::MsgsClientToSim::MsgUnitMagicAction::Clear();
  _clear_bit(15);
}
inline const ::MsgsClientToSim::MsgUnitMagicAction& MsgClientToSim_Content::unit_magic_action() const {
  return unit_magic_action_ != NULL ? *unit_magic_action_ : *default_instance_->unit_magic_action_;
}
inline ::MsgsClientToSim::MsgUnitMagicAction* MsgClientToSim_Content::mutable_unit_magic_action() {
  _set_bit(15);
  if (unit_magic_action_ == NULL) unit_magic_action_ = new ::MsgsClientToSim::MsgUnitMagicAction;
  return unit_magic_action_;
}

// optional .MsgsClientToSim.MsgObjectMagicAction object_magic_action = 18;
inline bool MsgClientToSim_Content::has_object_magic_action() const {
  return _has_bit(16);
}
inline void MsgClientToSim_Content::clear_object_magic_action() {
  if (object_magic_action_ != NULL) object_magic_action_->::MsgsClientToSim::MsgObjectMagicAction::Clear();
  _clear_bit(16);
}
inline const ::MsgsClientToSim::MsgObjectMagicAction& MsgClientToSim_Content::object_magic_action() const {
  return object_magic_action_ != NULL ? *object_magic_action_ : *default_instance_->object_magic_action_;
}
inline ::MsgsClientToSim::MsgObjectMagicAction* MsgClientToSim_Content::mutable_object_magic_action() {
  _set_bit(16);
  if (object_magic_action_ == NULL) object_magic_action_ = new ::MsgsClientToSim::MsgObjectMagicAction;
  return object_magic_action_;
}

// optional .MsgsClientToSim.MsgPopulationMagicAction population_magic_action = 19;
inline bool MsgClientToSim_Content::has_population_magic_action() const {
  return _has_bit(17);
}
inline void MsgClientToSim_Content::clear_population_magic_action() {
  if (population_magic_action_ != NULL) population_magic_action_->::MsgsClientToSim::MsgPopulationMagicAction::Clear();
  _clear_bit(17);
}
inline const ::MsgsClientToSim::MsgPopulationMagicAction& MsgClientToSim_Content::population_magic_action() const {
  return population_magic_action_ != NULL ? *population_magic_action_ : *default_instance_->population_magic_action_;
}
inline ::MsgsClientToSim::MsgPopulationMagicAction* MsgClientToSim_Content::mutable_population_magic_action() {
  _set_bit(17);
  if (population_magic_action_ == NULL) population_magic_action_ = new ::MsgsClientToSim::MsgPopulationMagicAction;
  return population_magic_action_;
}

// optional .Common.MsgChangeDiplomacy change_diplomacy = 20;
inline bool MsgClientToSim_Content::has_change_diplomacy() const {
  return _has_bit(18);
}
inline void MsgClientToSim_Content::clear_change_diplomacy() {
  if (change_diplomacy_ != NULL) change_diplomacy_->::Common::MsgChangeDiplomacy::Clear();
  _clear_bit(18);
}
inline const ::Common::MsgChangeDiplomacy& MsgClientToSim_Content::change_diplomacy() const {
  return change_diplomacy_ != NULL ? *change_diplomacy_ : *default_instance_->change_diplomacy_;
}
inline ::Common::MsgChangeDiplomacy* MsgClientToSim_Content::mutable_change_diplomacy() {
  _set_bit(18);
  if (change_diplomacy_ == NULL) change_diplomacy_ = new ::Common::MsgChangeDiplomacy;
  return change_diplomacy_;
}

// optional .Common.MsgAutomatChangeKnowledgeGroup automat_change_knowledge_group = 21;
inline bool MsgClientToSim_Content::has_automat_change_knowledge_group() const {
  return _has_bit(19);
}
inline void MsgClientToSim_Content::clear_automat_change_knowledge_group() {
  if (automat_change_knowledge_group_ != NULL) automat_change_knowledge_group_->::Common::MsgAutomatChangeKnowledgeGroup::Clear();
  _clear_bit(19);
}
inline const ::Common::MsgAutomatChangeKnowledgeGroup& MsgClientToSim_Content::automat_change_knowledge_group() const {
  return automat_change_knowledge_group_ != NULL ? *automat_change_knowledge_group_ : *default_instance_->automat_change_knowledge_group_;
}
inline ::Common::MsgAutomatChangeKnowledgeGroup* MsgClientToSim_Content::mutable_automat_change_knowledge_group() {
  _set_bit(19);
  if (automat_change_knowledge_group_ == NULL) automat_change_knowledge_group_ = new ::Common::MsgAutomatChangeKnowledgeGroup;
  return automat_change_knowledge_group_;
}

// optional .Common.MsgAutomatChangeLogisticLinks automat_change_logistic_links = 22;
inline bool MsgClientToSim_Content::has_automat_change_logistic_links() const {
  return _has_bit(20);
}
inline void MsgClientToSim_Content::clear_automat_change_logistic_links() {
  if (automat_change_logistic_links_ != NULL) automat_change_logistic_links_->::Common::MsgAutomatChangeLogisticLinks::Clear();
  _clear_bit(20);
}
inline const ::Common::MsgAutomatChangeLogisticLinks& MsgClientToSim_Content::automat_change_logistic_links() const {
  return automat_change_logistic_links_ != NULL ? *automat_change_logistic_links_ : *default_instance_->automat_change_logistic_links_;
}
inline ::Common::MsgAutomatChangeLogisticLinks* MsgClientToSim_Content::mutable_automat_change_logistic_links() {
  _set_bit(20);
  if (automat_change_logistic_links_ == NULL) automat_change_logistic_links_ = new ::Common::MsgAutomatChangeLogisticLinks;
  return automat_change_logistic_links_;
}

// optional .Common.MsgAutomatChangeSuperior automat_change_superior = 23;
inline bool MsgClientToSim_Content::has_automat_change_superior() const {
  return _has_bit(21);
}
inline void MsgClientToSim_Content::clear_automat_change_superior() {
  if (automat_change_superior_ != NULL) automat_change_superior_->::Common::MsgAutomatChangeSuperior::Clear();
  _clear_bit(21);
}
inline const ::Common::MsgAutomatChangeSuperior& MsgClientToSim_Content::automat_change_superior() const {
  return automat_change_superior_ != NULL ? *automat_change_superior_ : *default_instance_->automat_change_superior_;
}
inline ::Common::MsgAutomatChangeSuperior* MsgClientToSim_Content::mutable_automat_change_superior() {
  _set_bit(21);
  if (automat_change_superior_ == NULL) automat_change_superior_ = new ::Common::MsgAutomatChangeSuperior;
  return automat_change_superior_;
}

// optional .Common.MsgUnitChangeSuperior unit_change_superior = 24;
inline bool MsgClientToSim_Content::has_unit_change_superior() const {
  return _has_bit(22);
}
inline void MsgClientToSim_Content::clear_unit_change_superior() {
  if (unit_change_superior_ != NULL) unit_change_superior_->::Common::MsgUnitChangeSuperior::Clear();
  _clear_bit(22);
}
inline const ::Common::MsgUnitChangeSuperior& MsgClientToSim_Content::unit_change_superior() const {
  return unit_change_superior_ != NULL ? *unit_change_superior_ : *default_instance_->unit_change_superior_;
}
inline ::Common::MsgUnitChangeSuperior* MsgClientToSim_Content::mutable_unit_change_superior() {
  _set_bit(22);
  if (unit_change_superior_ == NULL) unit_change_superior_ = new ::Common::MsgUnitChangeSuperior;
  return unit_change_superior_;
}

// optional .MsgsClientToSim.MsgLogSupplyPushFlow log_supply_push_flow = 25;
inline bool MsgClientToSim_Content::has_log_supply_push_flow() const {
  return _has_bit(23);
}
inline void MsgClientToSim_Content::clear_log_supply_push_flow() {
  if (log_supply_push_flow_ != NULL) log_supply_push_flow_->::MsgsClientToSim::MsgLogSupplyPushFlow::Clear();
  _clear_bit(23);
}
inline const ::MsgsClientToSim::MsgLogSupplyPushFlow& MsgClientToSim_Content::log_supply_push_flow() const {
  return log_supply_push_flow_ != NULL ? *log_supply_push_flow_ : *default_instance_->log_supply_push_flow_;
}
inline ::MsgsClientToSim::MsgLogSupplyPushFlow* MsgClientToSim_Content::mutable_log_supply_push_flow() {
  _set_bit(23);
  if (log_supply_push_flow_ == NULL) log_supply_push_flow_ = new ::MsgsClientToSim::MsgLogSupplyPushFlow;
  return log_supply_push_flow_;
}

// optional .MsgsClientToSim.MsgLogSupplyChangeQuotas log_supply_change_quotas = 26;
inline bool MsgClientToSim_Content::has_log_supply_change_quotas() const {
  return _has_bit(24);
}
inline void MsgClientToSim_Content::clear_log_supply_change_quotas() {
  if (log_supply_change_quotas_ != NULL) log_supply_change_quotas_->::MsgsClientToSim::MsgLogSupplyChangeQuotas::Clear();
  _clear_bit(24);
}
inline const ::MsgsClientToSim::MsgLogSupplyChangeQuotas& MsgClientToSim_Content::log_supply_change_quotas() const {
  return log_supply_change_quotas_ != NULL ? *log_supply_change_quotas_ : *default_instance_->log_supply_change_quotas_;
}
inline ::MsgsClientToSim::MsgLogSupplyChangeQuotas* MsgClientToSim_Content::mutable_log_supply_change_quotas() {
  _set_bit(24);
  if (log_supply_change_quotas_ == NULL) log_supply_change_quotas_ = new ::MsgsClientToSim::MsgLogSupplyChangeQuotas;
  return log_supply_change_quotas_;
}

// optional .MsgsClientToSim.MsgKnowledgeGroupCreationRequest knowledge_group_creation_request = 27;
inline bool MsgClientToSim_Content::has_knowledge_group_creation_request() const {
  return _has_bit(25);
}
inline void MsgClientToSim_Content::clear_knowledge_group_creation_request() {
  if (knowledge_group_creation_request_ != NULL) knowledge_group_creation_request_->::MsgsClientToSim::MsgKnowledgeGroupCreationRequest::Clear();
  _clear_bit(25);
}
inline const ::MsgsClientToSim::MsgKnowledgeGroupCreationRequest& MsgClientToSim_Content::knowledge_group_creation_request() const {
  return knowledge_group_creation_request_ != NULL ? *knowledge_group_creation_request_ : *default_instance_->knowledge_group_creation_request_;
}
inline ::MsgsClientToSim::MsgKnowledgeGroupCreationRequest* MsgClientToSim_Content::mutable_knowledge_group_creation_request() {
  _set_bit(25);
  if (knowledge_group_creation_request_ == NULL) knowledge_group_creation_request_ = new ::MsgsClientToSim::MsgKnowledgeGroupCreationRequest;
  return knowledge_group_creation_request_;
}

// optional .MsgsClientToSim.MsgKnowledgeGroupUpdateRequest knowledge_group_update_request = 28;
inline bool MsgClientToSim_Content::has_knowledge_group_update_request() const {
  return _has_bit(26);
}
inline void MsgClientToSim_Content::clear_knowledge_group_update_request() {
  if (knowledge_group_update_request_ != NULL) knowledge_group_update_request_->::MsgsClientToSim::MsgKnowledgeGroupUpdateRequest::Clear();
  _clear_bit(26);
}
inline const ::MsgsClientToSim::MsgKnowledgeGroupUpdateRequest& MsgClientToSim_Content::knowledge_group_update_request() const {
  return knowledge_group_update_request_ != NULL ? *knowledge_group_update_request_ : *default_instance_->knowledge_group_update_request_;
}
inline ::MsgsClientToSim::MsgKnowledgeGroupUpdateRequest* MsgClientToSim_Content::mutable_knowledge_group_update_request() {
  _set_bit(26);
  if (knowledge_group_update_request_ == NULL) knowledge_group_update_request_ = new ::MsgsClientToSim::MsgKnowledgeGroupUpdateRequest;
  return knowledge_group_update_request_;
}

// optional .MsgsClientToSim.MsgMagicActionCreateFireOrder create_fire_order = 29;
inline bool MsgClientToSim_Content::has_create_fire_order() const {
  return _has_bit(27);
}
inline void MsgClientToSim_Content::clear_create_fire_order() {
  if (create_fire_order_ != NULL) create_fire_order_->::MsgsClientToSim::MsgMagicActionCreateFireOrder::Clear();
  _clear_bit(27);
}
inline const ::MsgsClientToSim::MsgMagicActionCreateFireOrder& MsgClientToSim_Content::create_fire_order() const {
  return create_fire_order_ != NULL ? *create_fire_order_ : *default_instance_->create_fire_order_;
}
inline ::MsgsClientToSim::MsgMagicActionCreateFireOrder* MsgClientToSim_Content::mutable_create_fire_order() {
  _set_bit(27);
  if (create_fire_order_ == NULL) create_fire_order_ = new ::MsgsClientToSim::MsgMagicActionCreateFireOrder;
  return create_fire_order_;
}

// -------------------------------------------------------------------

// MsgClientToSim

// optional int32 context = 1 [default = 0];
inline bool MsgClientToSim::has_context() const {
  return _has_bit(0);
}
inline void MsgClientToSim::clear_context() {
  context_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 MsgClientToSim::context() const {
  return context_;
}
inline void MsgClientToSim::set_context(::google::protobuf::int32 value) {
  _set_bit(0);
  context_ = value;
}

// required .MsgsClientToSim.MsgClientToSim.Content message = 2;
inline bool MsgClientToSim::has_message() const {
  return _has_bit(1);
}
inline void MsgClientToSim::clear_message() {
  if (message_ != NULL) message_->::MsgsClientToSim::MsgClientToSim_Content::Clear();
  _clear_bit(1);
}
inline const ::MsgsClientToSim::MsgClientToSim_Content& MsgClientToSim::message() const {
  return message_ != NULL ? *message_ : *default_instance_->message_;
}
inline ::MsgsClientToSim::MsgClientToSim_Content* MsgClientToSim::mutable_message() {
  _set_bit(1);
  if (message_ == NULL) message_ = new ::MsgsClientToSim::MsgClientToSim_Content;
  return message_;
}


}  // namespace MsgsClientToSim

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgsClientToSim::MsgUnitMagicAction_Type>() {
  return ::MsgsClientToSim::MsgUnitMagicAction_Type_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

#endif  // PROTOBUF_ClientToSim_2eproto__INCLUDED
