// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MessengerToClient.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>

namespace MsgsMessengerToClient {

namespace {

const ::google::protobuf::Descriptor* TacticalLineAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TacticalLineAck_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TacticalLineAck_ErrorCode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgLimitCreation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLimitCreation_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLimitUpdate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLimitUpdate_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLimitDestruction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLimitDestruction_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLimitCreationRequestAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLimitCreationRequestAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLimitUpdateRequestAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLimitUpdateRequestAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLimitDestructionRequestAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLimitDestructionRequestAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLimaCreation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLimaCreation_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLimaDestruction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLimaDestruction_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLimaUpdate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLimaUpdate_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLimaCreationRequestAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLimaCreationRequestAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLimaUpdateRequestAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLimaUpdateRequestAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLimaDestructionRequestAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLimaDestructionRequestAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgIntelligenceCreation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgIntelligenceCreation_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgIntelligenceUpdate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgIntelligenceUpdate_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgIntelligenceDestruction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgIntelligenceDestruction_reflection_ = NULL;
const ::google::protobuf::Descriptor* IntelligenceRequestAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IntelligenceRequestAck_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* IntelligenceRequestAck_ErrorCode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgIntelligenceCreationRequestAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgIntelligenceCreationRequestAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgIntelligenceUpdateRequestAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgIntelligenceUpdateRequestAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgIntelligenceDestructionRequestAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgIntelligenceDestructionRequestAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgShapeCreation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgShapeCreation_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgShapeUpdate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgShapeUpdate_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgShapeDestruction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgShapeDestruction_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShapeRequestAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShapeRequestAck_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ShapeRequestAck_ErrorCode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgShapeCreationRequestAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgShapeCreationRequestAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgShapeUpdateRequestAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgShapeUpdateRequestAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgShapeDestructionRequestAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgShapeDestructionRequestAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMarkerCreation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMarkerCreation_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMarkerUpdate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMarkerUpdate_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMarkerDestruction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMarkerDestruction_reflection_ = NULL;
const ::google::protobuf::Descriptor* MarkerRequestAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MarkerRequestAck_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MarkerRequestAck_ErrorCode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgMarkerCreationRequestAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMarkerCreationRequestAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMarkerUpdateRequestAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMarkerUpdateRequestAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMarkerDestructionRequestAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMarkerDestructionRequestAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientObjectAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientObjectAck_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ClientObjectAck_ErrorCode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgClientObjectCreation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgClientObjectCreation_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgClientObjectUpdate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgClientObjectUpdate_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgClientObjectDestruction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgClientObjectDestruction_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgClientObjectCreationRequestAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgClientObjectCreationRequestAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgClientObjectUpdateRequestAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgClientObjectUpdateRequestAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgClientObjectDestructionRequestAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgClientObjectDestructionRequestAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMessengerToClient_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMessengerToClient_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMessengerToClient_Content_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMessengerToClient_Content_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MessengerToClient_2eproto() {
  protobuf_AddDesc_MessengerToClient_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MessengerToClient.proto");
  GOOGLE_CHECK(file != NULL);
  TacticalLineAck_descriptor_ = file->message_type(0);
  static const int TacticalLineAck_offsets_[1] = {
  };
  TacticalLineAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TacticalLineAck_descriptor_,
      TacticalLineAck::default_instance_,
      TacticalLineAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TacticalLineAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TacticalLineAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TacticalLineAck));
  TacticalLineAck_ErrorCode_descriptor_ = TacticalLineAck_descriptor_->enum_type(0);
  MsgLimitCreation_descriptor_ = file->message_type(1);
  static const int MsgLimitCreation_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitCreation, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitCreation, tactical_line_),
  };
  MsgLimitCreation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLimitCreation_descriptor_,
      MsgLimitCreation::default_instance_,
      MsgLimitCreation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitCreation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitCreation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLimitCreation));
  MsgLimitUpdate_descriptor_ = file->message_type(2);
  static const int MsgLimitUpdate_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitUpdate, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitUpdate, tactical_line_),
  };
  MsgLimitUpdate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLimitUpdate_descriptor_,
      MsgLimitUpdate::default_instance_,
      MsgLimitUpdate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitUpdate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitUpdate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLimitUpdate));
  MsgLimitDestruction_descriptor_ = file->message_type(3);
  static const int MsgLimitDestruction_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitDestruction, id_),
  };
  MsgLimitDestruction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLimitDestruction_descriptor_,
      MsgLimitDestruction::default_instance_,
      MsgLimitDestruction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitDestruction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitDestruction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLimitDestruction));
  MsgLimitCreationRequestAck_descriptor_ = file->message_type(4);
  static const int MsgLimitCreationRequestAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitCreationRequestAck, error_code_),
  };
  MsgLimitCreationRequestAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLimitCreationRequestAck_descriptor_,
      MsgLimitCreationRequestAck::default_instance_,
      MsgLimitCreationRequestAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitCreationRequestAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitCreationRequestAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLimitCreationRequestAck));
  MsgLimitUpdateRequestAck_descriptor_ = file->message_type(5);
  static const int MsgLimitUpdateRequestAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitUpdateRequestAck, error_code_),
  };
  MsgLimitUpdateRequestAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLimitUpdateRequestAck_descriptor_,
      MsgLimitUpdateRequestAck::default_instance_,
      MsgLimitUpdateRequestAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitUpdateRequestAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitUpdateRequestAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLimitUpdateRequestAck));
  MsgLimitDestructionRequestAck_descriptor_ = file->message_type(6);
  static const int MsgLimitDestructionRequestAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitDestructionRequestAck, error_code_),
  };
  MsgLimitDestructionRequestAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLimitDestructionRequestAck_descriptor_,
      MsgLimitDestructionRequestAck::default_instance_,
      MsgLimitDestructionRequestAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitDestructionRequestAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitDestructionRequestAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLimitDestructionRequestAck));
  MsgLimaCreation_descriptor_ = file->message_type(7);
  static const int MsgLimaCreation_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaCreation, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaCreation, tactical_line_),
  };
  MsgLimaCreation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLimaCreation_descriptor_,
      MsgLimaCreation::default_instance_,
      MsgLimaCreation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaCreation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaCreation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLimaCreation));
  MsgLimaDestruction_descriptor_ = file->message_type(8);
  static const int MsgLimaDestruction_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaDestruction, id_),
  };
  MsgLimaDestruction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLimaDestruction_descriptor_,
      MsgLimaDestruction::default_instance_,
      MsgLimaDestruction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaDestruction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaDestruction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLimaDestruction));
  MsgLimaUpdate_descriptor_ = file->message_type(9);
  static const int MsgLimaUpdate_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaUpdate, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaUpdate, tactical_line_),
  };
  MsgLimaUpdate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLimaUpdate_descriptor_,
      MsgLimaUpdate::default_instance_,
      MsgLimaUpdate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaUpdate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaUpdate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLimaUpdate));
  MsgLimaCreationRequestAck_descriptor_ = file->message_type(10);
  static const int MsgLimaCreationRequestAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaCreationRequestAck, error_code_),
  };
  MsgLimaCreationRequestAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLimaCreationRequestAck_descriptor_,
      MsgLimaCreationRequestAck::default_instance_,
      MsgLimaCreationRequestAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaCreationRequestAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaCreationRequestAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLimaCreationRequestAck));
  MsgLimaUpdateRequestAck_descriptor_ = file->message_type(11);
  static const int MsgLimaUpdateRequestAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaUpdateRequestAck, error_code_),
  };
  MsgLimaUpdateRequestAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLimaUpdateRequestAck_descriptor_,
      MsgLimaUpdateRequestAck::default_instance_,
      MsgLimaUpdateRequestAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaUpdateRequestAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaUpdateRequestAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLimaUpdateRequestAck));
  MsgLimaDestructionRequestAck_descriptor_ = file->message_type(12);
  static const int MsgLimaDestructionRequestAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaDestructionRequestAck, error_code_),
  };
  MsgLimaDestructionRequestAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLimaDestructionRequestAck_descriptor_,
      MsgLimaDestructionRequestAck::default_instance_,
      MsgLimaDestructionRequestAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaDestructionRequestAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaDestructionRequestAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLimaDestructionRequestAck));
  MsgIntelligenceCreation_descriptor_ = file->message_type(13);
  static const int MsgIntelligenceCreation_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceCreation, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceCreation, intelligence_),
  };
  MsgIntelligenceCreation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgIntelligenceCreation_descriptor_,
      MsgIntelligenceCreation::default_instance_,
      MsgIntelligenceCreation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceCreation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceCreation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgIntelligenceCreation));
  MsgIntelligenceUpdate_descriptor_ = file->message_type(14);
  static const int MsgIntelligenceUpdate_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceUpdate, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceUpdate, formation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceUpdate, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceUpdate, nature_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceUpdate, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceUpdate, embarked_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceUpdate, location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceUpdate, diplomacy_),
  };
  MsgIntelligenceUpdate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgIntelligenceUpdate_descriptor_,
      MsgIntelligenceUpdate::default_instance_,
      MsgIntelligenceUpdate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceUpdate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceUpdate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgIntelligenceUpdate));
  MsgIntelligenceDestruction_descriptor_ = file->message_type(15);
  static const int MsgIntelligenceDestruction_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceDestruction, id_),
  };
  MsgIntelligenceDestruction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgIntelligenceDestruction_descriptor_,
      MsgIntelligenceDestruction::default_instance_,
      MsgIntelligenceDestruction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceDestruction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceDestruction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgIntelligenceDestruction));
  IntelligenceRequestAck_descriptor_ = file->message_type(16);
  static const int IntelligenceRequestAck_offsets_[1] = {
  };
  IntelligenceRequestAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      IntelligenceRequestAck_descriptor_,
      IntelligenceRequestAck::default_instance_,
      IntelligenceRequestAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IntelligenceRequestAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IntelligenceRequestAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(IntelligenceRequestAck));
  IntelligenceRequestAck_ErrorCode_descriptor_ = IntelligenceRequestAck_descriptor_->enum_type(0);
  MsgIntelligenceCreationRequestAck_descriptor_ = file->message_type(17);
  static const int MsgIntelligenceCreationRequestAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceCreationRequestAck, error_code_),
  };
  MsgIntelligenceCreationRequestAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgIntelligenceCreationRequestAck_descriptor_,
      MsgIntelligenceCreationRequestAck::default_instance_,
      MsgIntelligenceCreationRequestAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceCreationRequestAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceCreationRequestAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgIntelligenceCreationRequestAck));
  MsgIntelligenceUpdateRequestAck_descriptor_ = file->message_type(18);
  static const int MsgIntelligenceUpdateRequestAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceUpdateRequestAck, error_code_),
  };
  MsgIntelligenceUpdateRequestAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgIntelligenceUpdateRequestAck_descriptor_,
      MsgIntelligenceUpdateRequestAck::default_instance_,
      MsgIntelligenceUpdateRequestAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceUpdateRequestAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceUpdateRequestAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgIntelligenceUpdateRequestAck));
  MsgIntelligenceDestructionRequestAck_descriptor_ = file->message_type(19);
  static const int MsgIntelligenceDestructionRequestAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceDestructionRequestAck, error_code_),
  };
  MsgIntelligenceDestructionRequestAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgIntelligenceDestructionRequestAck_descriptor_,
      MsgIntelligenceDestructionRequestAck::default_instance_,
      MsgIntelligenceDestructionRequestAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceDestructionRequestAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceDestructionRequestAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgIntelligenceDestructionRequestAck));
  MsgShapeCreation_descriptor_ = file->message_type(20);
  static const int MsgShapeCreation_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeCreation, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeCreation, shape_),
  };
  MsgShapeCreation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgShapeCreation_descriptor_,
      MsgShapeCreation::default_instance_,
      MsgShapeCreation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeCreation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeCreation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgShapeCreation));
  MsgShapeUpdate_descriptor_ = file->message_type(21);
  static const int MsgShapeUpdate_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeUpdate, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeUpdate, category_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeUpdate, color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeUpdate, template__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeUpdate, points_),
  };
  MsgShapeUpdate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgShapeUpdate_descriptor_,
      MsgShapeUpdate::default_instance_,
      MsgShapeUpdate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeUpdate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeUpdate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgShapeUpdate));
  MsgShapeDestruction_descriptor_ = file->message_type(22);
  static const int MsgShapeDestruction_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeDestruction, id_),
  };
  MsgShapeDestruction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgShapeDestruction_descriptor_,
      MsgShapeDestruction::default_instance_,
      MsgShapeDestruction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeDestruction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeDestruction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgShapeDestruction));
  ShapeRequestAck_descriptor_ = file->message_type(23);
  static const int ShapeRequestAck_offsets_[1] = {
  };
  ShapeRequestAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ShapeRequestAck_descriptor_,
      ShapeRequestAck::default_instance_,
      ShapeRequestAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShapeRequestAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShapeRequestAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ShapeRequestAck));
  ShapeRequestAck_ErrorCode_descriptor_ = ShapeRequestAck_descriptor_->enum_type(0);
  MsgShapeCreationRequestAck_descriptor_ = file->message_type(24);
  static const int MsgShapeCreationRequestAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeCreationRequestAck, error_code_),
  };
  MsgShapeCreationRequestAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgShapeCreationRequestAck_descriptor_,
      MsgShapeCreationRequestAck::default_instance_,
      MsgShapeCreationRequestAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeCreationRequestAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeCreationRequestAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgShapeCreationRequestAck));
  MsgShapeUpdateRequestAck_descriptor_ = file->message_type(25);
  static const int MsgShapeUpdateRequestAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeUpdateRequestAck, error_code_),
  };
  MsgShapeUpdateRequestAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgShapeUpdateRequestAck_descriptor_,
      MsgShapeUpdateRequestAck::default_instance_,
      MsgShapeUpdateRequestAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeUpdateRequestAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeUpdateRequestAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgShapeUpdateRequestAck));
  MsgShapeDestructionRequestAck_descriptor_ = file->message_type(26);
  static const int MsgShapeDestructionRequestAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeDestructionRequestAck, error_code_),
  };
  MsgShapeDestructionRequestAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgShapeDestructionRequestAck_descriptor_,
      MsgShapeDestructionRequestAck::default_instance_,
      MsgShapeDestructionRequestAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeDestructionRequestAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeDestructionRequestAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgShapeDestructionRequestAck));
  MsgMarkerCreation_descriptor_ = file->message_type(27);
  static const int MsgMarkerCreation_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerCreation, marker_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerCreation, definition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerCreation, date_),
  };
  MsgMarkerCreation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMarkerCreation_descriptor_,
      MsgMarkerCreation::default_instance_,
      MsgMarkerCreation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerCreation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerCreation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMarkerCreation));
  MsgMarkerUpdate_descriptor_ = file->message_type(28);
  static const int MsgMarkerUpdate_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerUpdate, marker_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerUpdate, date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerUpdate, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerUpdate, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerUpdate, parent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerUpdate, number_),
  };
  MsgMarkerUpdate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMarkerUpdate_descriptor_,
      MsgMarkerUpdate::default_instance_,
      MsgMarkerUpdate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerUpdate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerUpdate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMarkerUpdate));
  MsgMarkerDestruction_descriptor_ = file->message_type(29);
  static const int MsgMarkerDestruction_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerDestruction, marker_),
  };
  MsgMarkerDestruction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMarkerDestruction_descriptor_,
      MsgMarkerDestruction::default_instance_,
      MsgMarkerDestruction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerDestruction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerDestruction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMarkerDestruction));
  MarkerRequestAck_descriptor_ = file->message_type(30);
  static const int MarkerRequestAck_offsets_[1] = {
  };
  MarkerRequestAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MarkerRequestAck_descriptor_,
      MarkerRequestAck::default_instance_,
      MarkerRequestAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarkerRequestAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarkerRequestAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MarkerRequestAck));
  MarkerRequestAck_ErrorCode_descriptor_ = MarkerRequestAck_descriptor_->enum_type(0);
  MsgMarkerCreationRequestAck_descriptor_ = file->message_type(31);
  static const int MsgMarkerCreationRequestAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerCreationRequestAck, error_code_),
  };
  MsgMarkerCreationRequestAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMarkerCreationRequestAck_descriptor_,
      MsgMarkerCreationRequestAck::default_instance_,
      MsgMarkerCreationRequestAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerCreationRequestAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerCreationRequestAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMarkerCreationRequestAck));
  MsgMarkerUpdateRequestAck_descriptor_ = file->message_type(32);
  static const int MsgMarkerUpdateRequestAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerUpdateRequestAck, error_code_),
  };
  MsgMarkerUpdateRequestAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMarkerUpdateRequestAck_descriptor_,
      MsgMarkerUpdateRequestAck::default_instance_,
      MsgMarkerUpdateRequestAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerUpdateRequestAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerUpdateRequestAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMarkerUpdateRequestAck));
  MsgMarkerDestructionRequestAck_descriptor_ = file->message_type(33);
  static const int MsgMarkerDestructionRequestAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerDestructionRequestAck, error_code_),
  };
  MsgMarkerDestructionRequestAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMarkerDestructionRequestAck_descriptor_,
      MsgMarkerDestructionRequestAck::default_instance_,
      MsgMarkerDestructionRequestAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerDestructionRequestAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerDestructionRequestAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMarkerDestructionRequestAck));
  ClientObjectAck_descriptor_ = file->message_type(34);
  static const int ClientObjectAck_offsets_[1] = {
  };
  ClientObjectAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClientObjectAck_descriptor_,
      ClientObjectAck::default_instance_,
      ClientObjectAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientObjectAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientObjectAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClientObjectAck));
  ClientObjectAck_ErrorCode_descriptor_ = ClientObjectAck_descriptor_->enum_type(0);
  MsgClientObjectCreation_descriptor_ = file->message_type(35);
  static const int MsgClientObjectCreation_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectCreation, object_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectCreation, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectCreation, properties_),
  };
  MsgClientObjectCreation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgClientObjectCreation_descriptor_,
      MsgClientObjectCreation::default_instance_,
      MsgClientObjectCreation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectCreation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectCreation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgClientObjectCreation));
  MsgClientObjectUpdate_descriptor_ = file->message_type(36);
  static const int MsgClientObjectUpdate_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectUpdate, object_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectUpdate, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectUpdate, properties_),
  };
  MsgClientObjectUpdate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgClientObjectUpdate_descriptor_,
      MsgClientObjectUpdate::default_instance_,
      MsgClientObjectUpdate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectUpdate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectUpdate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgClientObjectUpdate));
  MsgClientObjectDestruction_descriptor_ = file->message_type(37);
  static const int MsgClientObjectDestruction_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectDestruction, object_),
  };
  MsgClientObjectDestruction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgClientObjectDestruction_descriptor_,
      MsgClientObjectDestruction::default_instance_,
      MsgClientObjectDestruction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectDestruction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectDestruction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgClientObjectDestruction));
  MsgClientObjectCreationRequestAck_descriptor_ = file->message_type(38);
  static const int MsgClientObjectCreationRequestAck_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectCreationRequestAck, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectCreationRequestAck, error_code_),
  };
  MsgClientObjectCreationRequestAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgClientObjectCreationRequestAck_descriptor_,
      MsgClientObjectCreationRequestAck::default_instance_,
      MsgClientObjectCreationRequestAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectCreationRequestAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectCreationRequestAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgClientObjectCreationRequestAck));
  MsgClientObjectUpdateRequestAck_descriptor_ = file->message_type(39);
  static const int MsgClientObjectUpdateRequestAck_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectUpdateRequestAck, object_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectUpdateRequestAck, error_code_),
  };
  MsgClientObjectUpdateRequestAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgClientObjectUpdateRequestAck_descriptor_,
      MsgClientObjectUpdateRequestAck::default_instance_,
      MsgClientObjectUpdateRequestAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectUpdateRequestAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectUpdateRequestAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgClientObjectUpdateRequestAck));
  MsgClientObjectDestructionRequestAck_descriptor_ = file->message_type(40);
  static const int MsgClientObjectDestructionRequestAck_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectDestructionRequestAck, object_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectDestructionRequestAck, error_code_),
  };
  MsgClientObjectDestructionRequestAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgClientObjectDestructionRequestAck_descriptor_,
      MsgClientObjectDestructionRequestAck::default_instance_,
      MsgClientObjectDestructionRequestAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectDestructionRequestAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectDestructionRequestAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgClientObjectDestructionRequestAck));
  MsgMessengerToClient_descriptor_ = file->message_type(41);
  static const int MsgMessengerToClient_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient, context_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient, message_),
  };
  MsgMessengerToClient_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMessengerToClient_descriptor_,
      MsgMessengerToClient::default_instance_,
      MsgMessengerToClient_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMessengerToClient));
  MsgMessengerToClient_Content_descriptor_ = MsgMessengerToClient_descriptor_->nested_type(0);
  static const int MsgMessengerToClient_Content_offsets_[34] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, limit_creation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, limit_update_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, limit_destruction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, limit_creation_request_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, limit_destruction_request_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, limit_update_request_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, lima_creation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, lima_update_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, lima_destruction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, lima_creation_request_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, lima_destruction_request_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, lima_update_request_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, intelligence_creation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, intelligence_update_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, intelligence_destruction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, intelligence_creation_request_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, intelligence_update_request_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, intelligence_destruction_request_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, shape_creation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, shape_update_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, shape_destruction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, shape_creation_request_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, shape_destruction_request_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, shape_update_request_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, text_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, marker_creation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, marker_update_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, marker_destruction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, client_object_creation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, client_object_update_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, client_object_destruction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, client_object_creation_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, client_object_update_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, client_object_destruction_ack_),
  };
  MsgMessengerToClient_Content_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMessengerToClient_Content_descriptor_,
      MsgMessengerToClient_Content::default_instance_,
      MsgMessengerToClient_Content_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessengerToClient_Content, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMessengerToClient_Content));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MessengerToClient_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TacticalLineAck_descriptor_, &TacticalLineAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLimitCreation_descriptor_, &MsgLimitCreation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLimitUpdate_descriptor_, &MsgLimitUpdate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLimitDestruction_descriptor_, &MsgLimitDestruction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLimitCreationRequestAck_descriptor_, &MsgLimitCreationRequestAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLimitUpdateRequestAck_descriptor_, &MsgLimitUpdateRequestAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLimitDestructionRequestAck_descriptor_, &MsgLimitDestructionRequestAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLimaCreation_descriptor_, &MsgLimaCreation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLimaDestruction_descriptor_, &MsgLimaDestruction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLimaUpdate_descriptor_, &MsgLimaUpdate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLimaCreationRequestAck_descriptor_, &MsgLimaCreationRequestAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLimaUpdateRequestAck_descriptor_, &MsgLimaUpdateRequestAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLimaDestructionRequestAck_descriptor_, &MsgLimaDestructionRequestAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgIntelligenceCreation_descriptor_, &MsgIntelligenceCreation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgIntelligenceUpdate_descriptor_, &MsgIntelligenceUpdate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgIntelligenceDestruction_descriptor_, &MsgIntelligenceDestruction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    IntelligenceRequestAck_descriptor_, &IntelligenceRequestAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgIntelligenceCreationRequestAck_descriptor_, &MsgIntelligenceCreationRequestAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgIntelligenceUpdateRequestAck_descriptor_, &MsgIntelligenceUpdateRequestAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgIntelligenceDestructionRequestAck_descriptor_, &MsgIntelligenceDestructionRequestAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgShapeCreation_descriptor_, &MsgShapeCreation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgShapeUpdate_descriptor_, &MsgShapeUpdate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgShapeDestruction_descriptor_, &MsgShapeDestruction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ShapeRequestAck_descriptor_, &ShapeRequestAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgShapeCreationRequestAck_descriptor_, &MsgShapeCreationRequestAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgShapeUpdateRequestAck_descriptor_, &MsgShapeUpdateRequestAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgShapeDestructionRequestAck_descriptor_, &MsgShapeDestructionRequestAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMarkerCreation_descriptor_, &MsgMarkerCreation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMarkerUpdate_descriptor_, &MsgMarkerUpdate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMarkerDestruction_descriptor_, &MsgMarkerDestruction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MarkerRequestAck_descriptor_, &MarkerRequestAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMarkerCreationRequestAck_descriptor_, &MsgMarkerCreationRequestAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMarkerUpdateRequestAck_descriptor_, &MsgMarkerUpdateRequestAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMarkerDestructionRequestAck_descriptor_, &MsgMarkerDestructionRequestAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClientObjectAck_descriptor_, &ClientObjectAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgClientObjectCreation_descriptor_, &MsgClientObjectCreation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgClientObjectUpdate_descriptor_, &MsgClientObjectUpdate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgClientObjectDestruction_descriptor_, &MsgClientObjectDestruction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgClientObjectCreationRequestAck_descriptor_, &MsgClientObjectCreationRequestAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgClientObjectUpdateRequestAck_descriptor_, &MsgClientObjectUpdateRequestAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgClientObjectDestructionRequestAck_descriptor_, &MsgClientObjectDestructionRequestAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMessengerToClient_descriptor_, &MsgMessengerToClient::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMessengerToClient_Content_descriptor_, &MsgMessengerToClient_Content::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MessengerToClient_2eproto() {
  delete TacticalLineAck::default_instance_;
  delete TacticalLineAck_reflection_;
  delete MsgLimitCreation::default_instance_;
  delete MsgLimitCreation_reflection_;
  delete MsgLimitUpdate::default_instance_;
  delete MsgLimitUpdate_reflection_;
  delete MsgLimitDestruction::default_instance_;
  delete MsgLimitDestruction_reflection_;
  delete MsgLimitCreationRequestAck::default_instance_;
  delete MsgLimitCreationRequestAck_reflection_;
  delete MsgLimitUpdateRequestAck::default_instance_;
  delete MsgLimitUpdateRequestAck_reflection_;
  delete MsgLimitDestructionRequestAck::default_instance_;
  delete MsgLimitDestructionRequestAck_reflection_;
  delete MsgLimaCreation::default_instance_;
  delete MsgLimaCreation_reflection_;
  delete MsgLimaDestruction::default_instance_;
  delete MsgLimaDestruction_reflection_;
  delete MsgLimaUpdate::default_instance_;
  delete MsgLimaUpdate_reflection_;
  delete MsgLimaCreationRequestAck::default_instance_;
  delete MsgLimaCreationRequestAck_reflection_;
  delete MsgLimaUpdateRequestAck::default_instance_;
  delete MsgLimaUpdateRequestAck_reflection_;
  delete MsgLimaDestructionRequestAck::default_instance_;
  delete MsgLimaDestructionRequestAck_reflection_;
  delete MsgIntelligenceCreation::default_instance_;
  delete MsgIntelligenceCreation_reflection_;
  delete MsgIntelligenceUpdate::default_instance_;
  delete MsgIntelligenceUpdate_reflection_;
  delete MsgIntelligenceDestruction::default_instance_;
  delete MsgIntelligenceDestruction_reflection_;
  delete IntelligenceRequestAck::default_instance_;
  delete IntelligenceRequestAck_reflection_;
  delete MsgIntelligenceCreationRequestAck::default_instance_;
  delete MsgIntelligenceCreationRequestAck_reflection_;
  delete MsgIntelligenceUpdateRequestAck::default_instance_;
  delete MsgIntelligenceUpdateRequestAck_reflection_;
  delete MsgIntelligenceDestructionRequestAck::default_instance_;
  delete MsgIntelligenceDestructionRequestAck_reflection_;
  delete MsgShapeCreation::default_instance_;
  delete MsgShapeCreation_reflection_;
  delete MsgShapeUpdate::default_instance_;
  delete MsgShapeUpdate_reflection_;
  delete MsgShapeDestruction::default_instance_;
  delete MsgShapeDestruction_reflection_;
  delete ShapeRequestAck::default_instance_;
  delete ShapeRequestAck_reflection_;
  delete MsgShapeCreationRequestAck::default_instance_;
  delete MsgShapeCreationRequestAck_reflection_;
  delete MsgShapeUpdateRequestAck::default_instance_;
  delete MsgShapeUpdateRequestAck_reflection_;
  delete MsgShapeDestructionRequestAck::default_instance_;
  delete MsgShapeDestructionRequestAck_reflection_;
  delete MsgMarkerCreation::default_instance_;
  delete MsgMarkerCreation_reflection_;
  delete MsgMarkerUpdate::default_instance_;
  delete MsgMarkerUpdate_reflection_;
  delete MsgMarkerDestruction::default_instance_;
  delete MsgMarkerDestruction_reflection_;
  delete MarkerRequestAck::default_instance_;
  delete MarkerRequestAck_reflection_;
  delete MsgMarkerCreationRequestAck::default_instance_;
  delete MsgMarkerCreationRequestAck_reflection_;
  delete MsgMarkerUpdateRequestAck::default_instance_;
  delete MsgMarkerUpdateRequestAck_reflection_;
  delete MsgMarkerDestructionRequestAck::default_instance_;
  delete MsgMarkerDestructionRequestAck_reflection_;
  delete ClientObjectAck::default_instance_;
  delete ClientObjectAck_reflection_;
  delete MsgClientObjectCreation::default_instance_;
  delete MsgClientObjectCreation_reflection_;
  delete MsgClientObjectUpdate::default_instance_;
  delete MsgClientObjectUpdate_reflection_;
  delete MsgClientObjectDestruction::default_instance_;
  delete MsgClientObjectDestruction_reflection_;
  delete MsgClientObjectCreationRequestAck::default_instance_;
  delete MsgClientObjectCreationRequestAck_reflection_;
  delete MsgClientObjectUpdateRequestAck::default_instance_;
  delete MsgClientObjectUpdateRequestAck_reflection_;
  delete MsgClientObjectDestructionRequestAck::default_instance_;
  delete MsgClientObjectDestructionRequestAck_reflection_;
  delete MsgMessengerToClient::default_instance_;
  delete MsgMessengerToClient_reflection_;
  delete MsgMessengerToClient_Content::default_instance_;
  delete MsgMessengerToClient_Content_reflection_;
}

void protobuf_AddDesc_MessengerToClient_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Common::protobuf_AddDesc_Common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027MessengerToClient.proto\022\025MsgsMessenger"
    "ToClient\032\014Common.proto\"\235\001\n\017TacticalLineA"
    "ck\"\211\001\n\tErrorCode\022\014\n\010no_error\020\000\022\024\n\020error_"
    "invalid_id\020\001\022\032\n\026error_invalid_geometry\020\002"
    "\022\037\n\033error_invalid_lima_function\020\003\022\033\n\027err"
    "or_invalid_diffusion\020\004\"f\n\020MsgLimitCreati"
    "on\022\"\n\002id\030\001 \002(\0132\026.Common.TacticalLineId\022."
    "\n\rtactical_line\030\002 \002(\0132\027.Common.MsgTactic"
    "alLine\"d\n\016MsgLimitUpdate\022\"\n\002id\030\001 \002(\0132\026.C"
    "ommon.TacticalLineId\022.\n\rtactical_line\030\002 "
    "\002(\0132\027.Common.MsgTacticalLine\"9\n\023MsgLimit"
    "Destruction\022\"\n\002id\030\001 \002(\0132\026.Common.Tactica"
    "lLineId\"b\n\032MsgLimitCreationRequestAck\022D\n"
    "\nerror_code\030\001 \001(\01620.MsgsMessengerToClien"
    "t.TacticalLineAck.ErrorCode\"`\n\030MsgLimitU"
    "pdateRequestAck\022D\n\nerror_code\030\001 \001(\01620.Ms"
    "gsMessengerToClient.TacticalLineAck.Erro"
    "rCode\"e\n\035MsgLimitDestructionRequestAck\022D"
    "\n\nerror_code\030\001 \001(\01620.MsgsMessengerToClie"
    "nt.TacticalLineAck.ErrorCode\"e\n\017MsgLimaC"
    "reation\022\"\n\002id\030\001 \002(\0132\026.Common.TacticalLin"
    "eId\022.\n\rtactical_line\030\002 \002(\0132\027.Common.MsgT"
    "acticalLine\"8\n\022MsgLimaDestruction\022\"\n\002id\030"
    "\001 \002(\0132\026.Common.TacticalLineId\"c\n\rMsgLima"
    "Update\022\"\n\002id\030\001 \002(\0132\026.Common.TacticalLine"
    "Id\022.\n\rtactical_line\030\002 \002(\0132\027.Common.MsgTa"
    "cticalLine\"a\n\031MsgLimaCreationRequestAck\022"
    "D\n\nerror_code\030\001 \001(\01620.MsgsMessengerToCli"
    "ent.TacticalLineAck.ErrorCode\"_\n\027MsgLima"
    "UpdateRequestAck\022D\n\nerror_code\030\001 \001(\01620.M"
    "sgsMessengerToClient.TacticalLineAck.Err"
    "orCode\"d\n\034MsgLimaDestructionRequestAck\022D"
    "\n\nerror_code\030\001 \001(\01620.MsgsMessengerToClie"
    "nt.TacticalLineAck.ErrorCode\"l\n\027MsgIntel"
    "ligenceCreation\022\"\n\002id\030\001 \002(\0132\026.Common.Int"
    "elligenceId\022-\n\014intelligence\030\002 \002(\0132\027.Comm"
    "on.MsgIntelligence\"\220\002\n\025MsgIntelligenceUp"
    "date\022\"\n\002id\030\001 \002(\0132\026.Common.IntelligenceId"
    "\022&\n\tformation\030\002 \001(\0132\023.Common.FormationId"
    "\022\014\n\004name\030\003 \001(\t\022\016\n\006nature\030\004 \001(\t\022&\n\005level\030"
    "\005 \001(\0162\027.Common.EnumNatureLevel\022\020\n\010embark"
    "ed\030\006 \001(\010\022)\n\010location\030\007 \001(\0132\027.Common.MsgC"
    "oordLatLong\022(\n\tdiplomacy\030\010 \001(\0162\025.Common."
    "EnumDiplomacy\"@\n\032MsgIntelligenceDestruct"
    "ion\022\"\n\002id\030\001 \002(\0132\026.Common.IntelligenceId\""
    "\203\001\n\026IntelligenceRequestAck\"i\n\tErrorCode\022"
    "\014\n\010no_error\020\000\022\025\n\021error_invalid_oid\020\001\022\032\n\026"
    "error_invalid_geometry\020\002\022\033\n\027error_invali"
    "d_formation\020\003\"p\n!MsgIntelligenceCreation"
    "RequestAck\022K\n\nerror_code\030\001 \001(\01627.MsgsMes"
    "sengerToClient.IntelligenceRequestAck.Er"
    "rorCode\"n\n\037MsgIntelligenceUpdateRequestA"
    "ck\022K\n\nerror_code\030\001 \001(\01627.MsgsMessengerTo"
    "Client.IntelligenceRequestAck.ErrorCode\""
    "s\n$MsgIntelligenceDestructionRequestAck\022"
    "K\n\nerror_code\030\001 \001(\01627.MsgsMessengerToCli"
    "ent.IntelligenceRequestAck.ErrorCode\"R\n\020"
    "MsgShapeCreation\022\035\n\002id\030\001 \002(\0132\021.Common.Dr"
    "awingId\022\037\n\005shape\030\002 \002(\0132\020.Common.MsgShape"
    "\"\217\001\n\016MsgShapeUpdate\022\035\n\002id\030\001 \002(\0132\021.Common"
    ".DrawingId\022\020\n\010category\030\002 \001(\t\022\r\n\005color\030\003 "
    "\001(\t\022\020\n\010template\030\004 \001(\t\022+\n\006points\030\005 \001(\0132\033."
    "Common.MsgCoordLatLongList\"4\n\023MsgShapeDe"
    "struction\022\035\n\002id\030\001 \002(\0132\021.Common.DrawingId"
    "\"_\n\017ShapeRequestAck\"L\n\tErrorCode\022\014\n\010no_e"
    "rror\020\000\022\025\n\021error_invalid_oid\020\001\022\032\n\026error_i"
    "nvalid_geometry\020\002\"b\n\032MsgShapeCreationReq"
    "uestAck\022D\n\nerror_code\030\001 \002(\01620.MsgsMessen"
    "gerToClient.ShapeRequestAck.ErrorCode\"`\n"
    "\030MsgShapeUpdateRequestAck\022D\n\nerror_code\030"
    "\001 \001(\01620.MsgsMessengerToClient.ShapeReque"
    "stAck.ErrorCode\"e\n\035MsgShapeDestructionRe"
    "questAck\022D\n\nerror_code\030\001 \002(\01620.MsgsMesse"
    "ngerToClient.ShapeRequestAck.ErrorCode\"\177"
    "\n\021MsgMarkerCreation\022 \n\006marker\030\001 \002(\0132\020.Co"
    "mmon.MarkerId\022%\n\ndefinition\030\002 \002(\0132\021.Comm"
    "on.MsgMarker\022!\n\004date\030\003 \002(\0132\023.Common.MsgD"
    "ateTime\"\253\001\n\017MsgMarkerUpdate\022 \n\006marker\030\001 "
    "\002(\0132\020.Common.MarkerId\022!\n\004date\030\002 \002(\0132\023.Co"
    "mmon.MsgDateTime\022\014\n\004name\030\003 \001(\t\022\023\n\013descri"
    "ption\030\004 \001(\t\022 \n\006parent\030\005 \001(\0132\020.Common.Mar"
    "kerId\022\016\n\006number\030\006 \001(\t\"8\n\024MsgMarkerDestru"
    "ction\022 \n\006marker\030\001 \002(\0132\020.Common.MarkerId\""
    "]\n\020MarkerRequestAck\"I\n\tErrorCode\022\014\n\010no_e"
    "rror\020\000\022\024\n\020error_invalid_id\020\001\022\030\n\024error_in"
    "valid_parent\020\002\"d\n\033MsgMarkerCreationReque"
    "stAck\022E\n\nerror_code\030\001 \002(\01621.MsgsMessenge"
    "rToClient.MarkerRequestAck.ErrorCode\"b\n\031"
    "MsgMarkerUpdateRequestAck\022E\n\nerror_code\030"
    "\001 \001(\01621.MsgsMessengerToClient.MarkerRequ"
    "estAck.ErrorCode\"g\n\036MsgMarkerDestruction"
    "RequestAck\022E\n\nerror_code\030\001 \002(\01621.MsgsMes"
    "sengerToClient.MarkerRequestAck.ErrorCod"
    "e\"|\n\017ClientObjectAck\"i\n\tErrorCode\022\013\n\007suc"
    "cess\020\000\022\034\n\030duplicate_attribute_name\020\001\022\032\n\026"
    "invalid_attribute_name\020\002\022\025\n\021invalid_obje"
    "ct_id\020\003\"\201\001\n\027MsgClientObjectCreation\022&\n\006o"
    "bject\030\001 \002(\0132\026.Common.ClientObjectId\022\014\n\004n"
    "ame\030\002 \002(\t\0220\n\nproperties\030\003 \003(\0132\034.Common.C"
    "lientObjectProperty\"\177\n\025MsgClientObjectUp"
    "date\022&\n\006object\030\001 \002(\0132\026.Common.ClientObje"
    "ctId\022\014\n\004name\030\002 \001(\t\0220\n\nproperties\030\003 \003(\0132\034"
    ".Common.ClientObjectProperty\"D\n\032MsgClien"
    "tObjectDestruction\022&\n\006object\030\001 \002(\0132\026.Com"
    "mon.ClientObjectId\"w\n!MsgClientObjectCre"
    "ationRequestAck\022\014\n\004name\030\001 \002(\t\022D\n\nerror_c"
    "ode\030\002 \002(\01620.MsgsMessengerToClient.Client"
    "ObjectAck.ErrorCode\"\217\001\n\037MsgClientObjectU"
    "pdateRequestAck\022&\n\006object\030\001 \002(\0132\026.Common"
    ".ClientObjectId\022D\n\nerror_code\030\002 \002(\01620.Ms"
    "gsMessengerToClient.ClientObjectAck.Erro"
    "rCode\"\224\001\n$MsgClientObjectDestructionRequ"
    "estAck\022&\n\006object\030\001 \002(\0132\026.Common.ClientOb"
    "jectId\022D\n\nerror_code\030\002 \002(\01620.MsgsMesseng"
    "erToClient.ClientObjectAck.ErrorCode\"\370\025\n"
    "\024MsgMessengerToClient\022\017\n\007context\030\001 \001(\005\022D"
    "\n\007message\030\002 \002(\01323.MsgsMessengerToClient."
    "MsgMessengerToClient.Content\032\210\025\n\007Content"
    "\022?\n\016limit_creation\030\001 \001(\0132\'.MsgsMessenger"
    "ToClient.MsgLimitCreation\022;\n\014limit_updat"
    "e\030\002 \001(\0132%.MsgsMessengerToClient.MsgLimit"
    "Update\022E\n\021limit_destruction\030\003 \001(\0132*.Msgs"
    "MessengerToClient.MsgLimitDestruction\022U\n"
    "\032limit_creation_request_ack\030\004 \001(\01321.Msgs"
    "MessengerToClient.MsgLimitCreationReques"
    "tAck\022[\n\035limit_destruction_request_ack\030\005 "
    "\001(\01324.MsgsMessengerToClient.MsgLimitDest"
    "ructionRequestAck\022Q\n\030limit_update_reques"
    "t_ack\030\006 \001(\0132/.MsgsMessengerToClient.MsgL"
    "imitUpdateRequestAck\022=\n\rlima_creation\030\007 "
    "\001(\0132&.MsgsMessengerToClient.MsgLimaCreat"
    "ion\0229\n\013lima_update\030\010 \001(\0132$.MsgsMessenger"
    "ToClient.MsgLimaUpdate\022C\n\020lima_destructi"
    "on\030\t \001(\0132).MsgsMessengerToClient.MsgLima"
    "Destruction\022S\n\031lima_creation_request_ack"
    "\030\n \001(\01320.MsgsMessengerToClient.MsgLimaCr"
    "eationRequestAck\022Y\n\034lima_destruction_req"
    "uest_ack\030\013 \001(\01323.MsgsMessengerToClient.M"
    "sgLimaDestructionRequestAck\022O\n\027lima_upda"
    "te_request_ack\030\014 \001(\0132..MsgsMessengerToCl"
    "ient.MsgLimaUpdateRequestAck\022M\n\025intellig"
    "ence_creation\030\r \001(\0132..MsgsMessengerToCli"
    "ent.MsgIntelligenceCreation\022I\n\023intellige"
    "nce_update\030\016 \001(\0132,.MsgsMessengerToClient"
    ".MsgIntelligenceUpdate\022S\n\030intelligence_d"
    "estruction\030\017 \001(\01321.MsgsMessengerToClient"
    ".MsgIntelligenceDestruction\022c\n!intellige"
    "nce_creation_request_ack\030\020 \001(\01328.MsgsMes"
    "sengerToClient.MsgIntelligenceCreationRe"
    "questAck\022_\n\037intelligence_update_request_"
    "ack\030\021 \001(\01326.MsgsMessengerToClient.MsgInt"
    "elligenceUpdateRequestAck\022i\n$intelligenc"
    "e_destruction_request_ack\030\022 \001(\0132;.MsgsMe"
    "ssengerToClient.MsgIntelligenceDestructi"
    "onRequestAck\022?\n\016shape_creation\030\023 \001(\0132\'.M"
    "sgsMessengerToClient.MsgShapeCreation\022;\n"
    "\014shape_update\030\024 \001(\0132%.MsgsMessengerToCli"
    "ent.MsgShapeUpdate\022E\n\021shape_destruction\030"
    "\025 \001(\0132*.MsgsMessengerToClient.MsgShapeDe"
    "struction\022U\n\032shape_creation_request_ack\030"
    "\026 \001(\01321.MsgsMessengerToClient.MsgShapeCr"
    "eationRequestAck\022[\n\035shape_destruction_re"
    "quest_ack\030\027 \001(\01324.MsgsMessengerToClient."
    "MsgShapeDestructionRequestAck\022Q\n\030shape_u"
    "pdate_request_ack\030\030 \001(\0132/.MsgsMessengerT"
    "oClient.MsgShapeUpdateRequestAck\022,\n\014text"
    "_message\030\031 \001(\0132\026.Common.MsgTextMessage\022A"
    "\n\017marker_creation\030\032 \001(\0132(.MsgsMessengerT"
    "oClient.MsgMarkerCreation\022=\n\rmarker_upda"
    "te\030\033 \001(\0132&.MsgsMessengerToClient.MsgMark"
    "erUpdate\022G\n\022marker_destruction\030\034 \001(\0132+.M"
    "sgsMessengerToClient.MsgMarkerDestructio"
    "n\022N\n\026client_object_creation\030\035 \001(\0132..Msgs"
    "MessengerToClient.MsgClientObjectCreatio"
    "n\022J\n\024client_object_update\030\036 \001(\0132,.MsgsMe"
    "ssengerToClient.MsgClientObjectUpdate\022T\n"
    "\031client_object_destruction\030\037 \001(\01321.MsgsM"
    "essengerToClient.MsgClientObjectDestruct"
    "ion\022\\\n\032client_object_creation_ack\030  \001(\0132"
    "8.MsgsMessengerToClient.MsgClientObjectC"
    "reationRequestAck\022X\n\030client_object_updat"
    "e_ack\030! \001(\01326.MsgsMessengerToClient.MsgC"
    "lientObjectUpdateRequestAck\022b\n\035client_ob"
    "ject_destruction_ack\030\" \001(\0132;.MsgsMesseng"
    "erToClient.MsgClientObjectDestructionReq"
    "uestAck", 7407);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MessengerToClient.proto", &protobuf_RegisterTypes);
  TacticalLineAck::default_instance_ = new TacticalLineAck();
  MsgLimitCreation::default_instance_ = new MsgLimitCreation();
  MsgLimitUpdate::default_instance_ = new MsgLimitUpdate();
  MsgLimitDestruction::default_instance_ = new MsgLimitDestruction();
  MsgLimitCreationRequestAck::default_instance_ = new MsgLimitCreationRequestAck();
  MsgLimitUpdateRequestAck::default_instance_ = new MsgLimitUpdateRequestAck();
  MsgLimitDestructionRequestAck::default_instance_ = new MsgLimitDestructionRequestAck();
  MsgLimaCreation::default_instance_ = new MsgLimaCreation();
  MsgLimaDestruction::default_instance_ = new MsgLimaDestruction();
  MsgLimaUpdate::default_instance_ = new MsgLimaUpdate();
  MsgLimaCreationRequestAck::default_instance_ = new MsgLimaCreationRequestAck();
  MsgLimaUpdateRequestAck::default_instance_ = new MsgLimaUpdateRequestAck();
  MsgLimaDestructionRequestAck::default_instance_ = new MsgLimaDestructionRequestAck();
  MsgIntelligenceCreation::default_instance_ = new MsgIntelligenceCreation();
  MsgIntelligenceUpdate::default_instance_ = new MsgIntelligenceUpdate();
  MsgIntelligenceDestruction::default_instance_ = new MsgIntelligenceDestruction();
  IntelligenceRequestAck::default_instance_ = new IntelligenceRequestAck();
  MsgIntelligenceCreationRequestAck::default_instance_ = new MsgIntelligenceCreationRequestAck();
  MsgIntelligenceUpdateRequestAck::default_instance_ = new MsgIntelligenceUpdateRequestAck();
  MsgIntelligenceDestructionRequestAck::default_instance_ = new MsgIntelligenceDestructionRequestAck();
  MsgShapeCreation::default_instance_ = new MsgShapeCreation();
  MsgShapeUpdate::default_instance_ = new MsgShapeUpdate();
  MsgShapeDestruction::default_instance_ = new MsgShapeDestruction();
  ShapeRequestAck::default_instance_ = new ShapeRequestAck();
  MsgShapeCreationRequestAck::default_instance_ = new MsgShapeCreationRequestAck();
  MsgShapeUpdateRequestAck::default_instance_ = new MsgShapeUpdateRequestAck();
  MsgShapeDestructionRequestAck::default_instance_ = new MsgShapeDestructionRequestAck();
  MsgMarkerCreation::default_instance_ = new MsgMarkerCreation();
  MsgMarkerUpdate::default_instance_ = new MsgMarkerUpdate();
  MsgMarkerDestruction::default_instance_ = new MsgMarkerDestruction();
  MarkerRequestAck::default_instance_ = new MarkerRequestAck();
  MsgMarkerCreationRequestAck::default_instance_ = new MsgMarkerCreationRequestAck();
  MsgMarkerUpdateRequestAck::default_instance_ = new MsgMarkerUpdateRequestAck();
  MsgMarkerDestructionRequestAck::default_instance_ = new MsgMarkerDestructionRequestAck();
  ClientObjectAck::default_instance_ = new ClientObjectAck();
  MsgClientObjectCreation::default_instance_ = new MsgClientObjectCreation();
  MsgClientObjectUpdate::default_instance_ = new MsgClientObjectUpdate();
  MsgClientObjectDestruction::default_instance_ = new MsgClientObjectDestruction();
  MsgClientObjectCreationRequestAck::default_instance_ = new MsgClientObjectCreationRequestAck();
  MsgClientObjectUpdateRequestAck::default_instance_ = new MsgClientObjectUpdateRequestAck();
  MsgClientObjectDestructionRequestAck::default_instance_ = new MsgClientObjectDestructionRequestAck();
  MsgMessengerToClient::default_instance_ = new MsgMessengerToClient();
  MsgMessengerToClient_Content::default_instance_ = new MsgMessengerToClient_Content();
  TacticalLineAck::default_instance_->InitAsDefaultInstance();
  MsgLimitCreation::default_instance_->InitAsDefaultInstance();
  MsgLimitUpdate::default_instance_->InitAsDefaultInstance();
  MsgLimitDestruction::default_instance_->InitAsDefaultInstance();
  MsgLimitCreationRequestAck::default_instance_->InitAsDefaultInstance();
  MsgLimitUpdateRequestAck::default_instance_->InitAsDefaultInstance();
  MsgLimitDestructionRequestAck::default_instance_->InitAsDefaultInstance();
  MsgLimaCreation::default_instance_->InitAsDefaultInstance();
  MsgLimaDestruction::default_instance_->InitAsDefaultInstance();
  MsgLimaUpdate::default_instance_->InitAsDefaultInstance();
  MsgLimaCreationRequestAck::default_instance_->InitAsDefaultInstance();
  MsgLimaUpdateRequestAck::default_instance_->InitAsDefaultInstance();
  MsgLimaDestructionRequestAck::default_instance_->InitAsDefaultInstance();
  MsgIntelligenceCreation::default_instance_->InitAsDefaultInstance();
  MsgIntelligenceUpdate::default_instance_->InitAsDefaultInstance();
  MsgIntelligenceDestruction::default_instance_->InitAsDefaultInstance();
  IntelligenceRequestAck::default_instance_->InitAsDefaultInstance();
  MsgIntelligenceCreationRequestAck::default_instance_->InitAsDefaultInstance();
  MsgIntelligenceUpdateRequestAck::default_instance_->InitAsDefaultInstance();
  MsgIntelligenceDestructionRequestAck::default_instance_->InitAsDefaultInstance();
  MsgShapeCreation::default_instance_->InitAsDefaultInstance();
  MsgShapeUpdate::default_instance_->InitAsDefaultInstance();
  MsgShapeDestruction::default_instance_->InitAsDefaultInstance();
  ShapeRequestAck::default_instance_->InitAsDefaultInstance();
  MsgShapeCreationRequestAck::default_instance_->InitAsDefaultInstance();
  MsgShapeUpdateRequestAck::default_instance_->InitAsDefaultInstance();
  MsgShapeDestructionRequestAck::default_instance_->InitAsDefaultInstance();
  MsgMarkerCreation::default_instance_->InitAsDefaultInstance();
  MsgMarkerUpdate::default_instance_->InitAsDefaultInstance();
  MsgMarkerDestruction::default_instance_->InitAsDefaultInstance();
  MarkerRequestAck::default_instance_->InitAsDefaultInstance();
  MsgMarkerCreationRequestAck::default_instance_->InitAsDefaultInstance();
  MsgMarkerUpdateRequestAck::default_instance_->InitAsDefaultInstance();
  MsgMarkerDestructionRequestAck::default_instance_->InitAsDefaultInstance();
  ClientObjectAck::default_instance_->InitAsDefaultInstance();
  MsgClientObjectCreation::default_instance_->InitAsDefaultInstance();
  MsgClientObjectUpdate::default_instance_->InitAsDefaultInstance();
  MsgClientObjectDestruction::default_instance_->InitAsDefaultInstance();
  MsgClientObjectCreationRequestAck::default_instance_->InitAsDefaultInstance();
  MsgClientObjectUpdateRequestAck::default_instance_->InitAsDefaultInstance();
  MsgClientObjectDestructionRequestAck::default_instance_->InitAsDefaultInstance();
  MsgMessengerToClient::default_instance_->InitAsDefaultInstance();
  MsgMessengerToClient_Content::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MessengerToClient_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MessengerToClient_2eproto {
  StaticDescriptorInitializer_MessengerToClient_2eproto() {
    protobuf_AddDesc_MessengerToClient_2eproto();
  }
} static_descriptor_initializer_MessengerToClient_2eproto_;


// ===================================================================

const ::google::protobuf::EnumDescriptor* TacticalLineAck_ErrorCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TacticalLineAck_ErrorCode_descriptor_;
}
bool TacticalLineAck_ErrorCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const TacticalLineAck_ErrorCode TacticalLineAck::no_error;
const TacticalLineAck_ErrorCode TacticalLineAck::error_invalid_id;
const TacticalLineAck_ErrorCode TacticalLineAck::error_invalid_geometry;
const TacticalLineAck_ErrorCode TacticalLineAck::error_invalid_lima_function;
const TacticalLineAck_ErrorCode TacticalLineAck::error_invalid_diffusion;
const TacticalLineAck_ErrorCode TacticalLineAck::ErrorCode_MIN;
const TacticalLineAck_ErrorCode TacticalLineAck::ErrorCode_MAX;
#endif  // _MSC_VER
#ifndef _MSC_VER
#endif  // !_MSC_VER

TacticalLineAck::TacticalLineAck() {
  SharedCtor();
}

void TacticalLineAck::InitAsDefaultInstance() {
}

TacticalLineAck::TacticalLineAck(const TacticalLineAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void TacticalLineAck::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TacticalLineAck::~TacticalLineAck() {
  SharedDtor();
}

void TacticalLineAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* TacticalLineAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TacticalLineAck_descriptor_;
}

const TacticalLineAck& TacticalLineAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

TacticalLineAck* TacticalLineAck::default_instance_ = NULL;

TacticalLineAck* TacticalLineAck::New() const {
  return new TacticalLineAck;
}

void TacticalLineAck::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TacticalLineAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void TacticalLineAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    TacticalLineAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TacticalLineAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TacticalLineAck::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void TacticalLineAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TacticalLineAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TacticalLineAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TacticalLineAck::MergeFrom(const TacticalLineAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TacticalLineAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TacticalLineAck::CopyFrom(const TacticalLineAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TacticalLineAck::IsInitialized() const {
  
  return true;
}

void TacticalLineAck::Swap(TacticalLineAck* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TacticalLineAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TacticalLineAck_descriptor_;
  metadata.reflection = TacticalLineAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLimitCreation::kIdFieldNumber;
const int MsgLimitCreation::kTacticalLineFieldNumber;
#endif  // !_MSC_VER

MsgLimitCreation::MsgLimitCreation() {
  SharedCtor();
}

void MsgLimitCreation::InitAsDefaultInstance() {
  id_ = const_cast< ::Common::TacticalLineId*>(&::Common::TacticalLineId::default_instance());
  tactical_line_ = const_cast< ::Common::MsgTacticalLine*>(&::Common::MsgTacticalLine::default_instance());
}

MsgLimitCreation::MsgLimitCreation(const MsgLimitCreation& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLimitCreation::SharedCtor() {
  _cached_size_ = 0;
  id_ = NULL;
  tactical_line_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLimitCreation::~MsgLimitCreation() {
  SharedDtor();
}

void MsgLimitCreation::SharedDtor() {
  if (this != default_instance_) {
    delete id_;
    delete tactical_line_;
  }
}

const ::google::protobuf::Descriptor* MsgLimitCreation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLimitCreation_descriptor_;
}

const MsgLimitCreation& MsgLimitCreation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgLimitCreation* MsgLimitCreation::default_instance_ = NULL;

MsgLimitCreation* MsgLimitCreation::New() const {
  return new MsgLimitCreation;
}

void MsgLimitCreation::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (id_ != NULL) id_->::Common::TacticalLineId::Clear();
    }
    if (_has_bit(1)) {
      if (tactical_line_ != NULL) tactical_line_->::Common::MsgTacticalLine::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLimitCreation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.TacticalLineId id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_id()));
        if (input->ExpectTag(18)) goto parse_tactical_line;
        break;
      }
      
      // required .Common.MsgTacticalLine tactical_line = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_tactical_line:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_tactical_line()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLimitCreation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLimitCreation::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.TacticalLineId id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->id(), output);
  }
  
  // required .Common.MsgTacticalLine tactical_line = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->tactical_line(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLimitCreation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.TacticalLineId id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->id(), target);
  }
  
  // required .Common.MsgTacticalLine tactical_line = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->tactical_line(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLimitCreation::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.TacticalLineId id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->id());
    }
    
    // required .Common.MsgTacticalLine tactical_line = 2;
    if (has_tactical_line()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tactical_line());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLimitCreation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLimitCreation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLimitCreation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLimitCreation::MergeFrom(const MsgLimitCreation& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_id()->::Common::TacticalLineId::MergeFrom(from.id());
    }
    if (from._has_bit(1)) {
      mutable_tactical_line()->::Common::MsgTacticalLine::MergeFrom(from.tactical_line());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLimitCreation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLimitCreation::CopyFrom(const MsgLimitCreation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLimitCreation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_id()) {
    if (!this->id().IsInitialized()) return false;
  }
  if (has_tactical_line()) {
    if (!this->tactical_line().IsInitialized()) return false;
  }
  return true;
}

void MsgLimitCreation::Swap(MsgLimitCreation* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(tactical_line_, other->tactical_line_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLimitCreation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLimitCreation_descriptor_;
  metadata.reflection = MsgLimitCreation_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLimitUpdate::kIdFieldNumber;
const int MsgLimitUpdate::kTacticalLineFieldNumber;
#endif  // !_MSC_VER

MsgLimitUpdate::MsgLimitUpdate() {
  SharedCtor();
}

void MsgLimitUpdate::InitAsDefaultInstance() {
  id_ = const_cast< ::Common::TacticalLineId*>(&::Common::TacticalLineId::default_instance());
  tactical_line_ = const_cast< ::Common::MsgTacticalLine*>(&::Common::MsgTacticalLine::default_instance());
}

MsgLimitUpdate::MsgLimitUpdate(const MsgLimitUpdate& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLimitUpdate::SharedCtor() {
  _cached_size_ = 0;
  id_ = NULL;
  tactical_line_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLimitUpdate::~MsgLimitUpdate() {
  SharedDtor();
}

void MsgLimitUpdate::SharedDtor() {
  if (this != default_instance_) {
    delete id_;
    delete tactical_line_;
  }
}

const ::google::protobuf::Descriptor* MsgLimitUpdate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLimitUpdate_descriptor_;
}

const MsgLimitUpdate& MsgLimitUpdate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgLimitUpdate* MsgLimitUpdate::default_instance_ = NULL;

MsgLimitUpdate* MsgLimitUpdate::New() const {
  return new MsgLimitUpdate;
}

void MsgLimitUpdate::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (id_ != NULL) id_->::Common::TacticalLineId::Clear();
    }
    if (_has_bit(1)) {
      if (tactical_line_ != NULL) tactical_line_->::Common::MsgTacticalLine::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLimitUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.TacticalLineId id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_id()));
        if (input->ExpectTag(18)) goto parse_tactical_line;
        break;
      }
      
      // required .Common.MsgTacticalLine tactical_line = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_tactical_line:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_tactical_line()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLimitUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLimitUpdate::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.TacticalLineId id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->id(), output);
  }
  
  // required .Common.MsgTacticalLine tactical_line = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->tactical_line(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLimitUpdate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.TacticalLineId id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->id(), target);
  }
  
  // required .Common.MsgTacticalLine tactical_line = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->tactical_line(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLimitUpdate::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.TacticalLineId id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->id());
    }
    
    // required .Common.MsgTacticalLine tactical_line = 2;
    if (has_tactical_line()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tactical_line());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLimitUpdate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLimitUpdate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLimitUpdate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLimitUpdate::MergeFrom(const MsgLimitUpdate& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_id()->::Common::TacticalLineId::MergeFrom(from.id());
    }
    if (from._has_bit(1)) {
      mutable_tactical_line()->::Common::MsgTacticalLine::MergeFrom(from.tactical_line());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLimitUpdate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLimitUpdate::CopyFrom(const MsgLimitUpdate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLimitUpdate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_id()) {
    if (!this->id().IsInitialized()) return false;
  }
  if (has_tactical_line()) {
    if (!this->tactical_line().IsInitialized()) return false;
  }
  return true;
}

void MsgLimitUpdate::Swap(MsgLimitUpdate* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(tactical_line_, other->tactical_line_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLimitUpdate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLimitUpdate_descriptor_;
  metadata.reflection = MsgLimitUpdate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLimitDestruction::kIdFieldNumber;
#endif  // !_MSC_VER

MsgLimitDestruction::MsgLimitDestruction() {
  SharedCtor();
}

void MsgLimitDestruction::InitAsDefaultInstance() {
  id_ = const_cast< ::Common::TacticalLineId*>(&::Common::TacticalLineId::default_instance());
}

MsgLimitDestruction::MsgLimitDestruction(const MsgLimitDestruction& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLimitDestruction::SharedCtor() {
  _cached_size_ = 0;
  id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLimitDestruction::~MsgLimitDestruction() {
  SharedDtor();
}

void MsgLimitDestruction::SharedDtor() {
  if (this != default_instance_) {
    delete id_;
  }
}

const ::google::protobuf::Descriptor* MsgLimitDestruction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLimitDestruction_descriptor_;
}

const MsgLimitDestruction& MsgLimitDestruction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgLimitDestruction* MsgLimitDestruction::default_instance_ = NULL;

MsgLimitDestruction* MsgLimitDestruction::New() const {
  return new MsgLimitDestruction;
}

void MsgLimitDestruction::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (id_ != NULL) id_->::Common::TacticalLineId::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLimitDestruction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.TacticalLineId id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_id()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLimitDestruction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLimitDestruction::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.TacticalLineId id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLimitDestruction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.TacticalLineId id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLimitDestruction::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.TacticalLineId id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLimitDestruction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLimitDestruction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLimitDestruction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLimitDestruction::MergeFrom(const MsgLimitDestruction& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_id()->::Common::TacticalLineId::MergeFrom(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLimitDestruction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLimitDestruction::CopyFrom(const MsgLimitDestruction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLimitDestruction::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_id()) {
    if (!this->id().IsInitialized()) return false;
  }
  return true;
}

void MsgLimitDestruction::Swap(MsgLimitDestruction* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLimitDestruction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLimitDestruction_descriptor_;
  metadata.reflection = MsgLimitDestruction_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLimitCreationRequestAck::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

MsgLimitCreationRequestAck::MsgLimitCreationRequestAck() {
  SharedCtor();
}

void MsgLimitCreationRequestAck::InitAsDefaultInstance() {
}

MsgLimitCreationRequestAck::MsgLimitCreationRequestAck(const MsgLimitCreationRequestAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLimitCreationRequestAck::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLimitCreationRequestAck::~MsgLimitCreationRequestAck() {
  SharedDtor();
}

void MsgLimitCreationRequestAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgLimitCreationRequestAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLimitCreationRequestAck_descriptor_;
}

const MsgLimitCreationRequestAck& MsgLimitCreationRequestAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgLimitCreationRequestAck* MsgLimitCreationRequestAck::default_instance_ = NULL;

MsgLimitCreationRequestAck* MsgLimitCreationRequestAck::New() const {
  return new MsgLimitCreationRequestAck;
}

void MsgLimitCreationRequestAck::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLimitCreationRequestAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsMessengerToClient::TacticalLineAck_ErrorCode_IsValid(value)) {
          set_error_code(static_cast< ::MsgsMessengerToClient::TacticalLineAck_ErrorCode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLimitCreationRequestAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLimitCreationRequestAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLimitCreationRequestAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLimitCreationRequestAck::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLimitCreationRequestAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLimitCreationRequestAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLimitCreationRequestAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLimitCreationRequestAck::MergeFrom(const MsgLimitCreationRequestAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLimitCreationRequestAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLimitCreationRequestAck::CopyFrom(const MsgLimitCreationRequestAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLimitCreationRequestAck::IsInitialized() const {
  
  return true;
}

void MsgLimitCreationRequestAck::Swap(MsgLimitCreationRequestAck* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLimitCreationRequestAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLimitCreationRequestAck_descriptor_;
  metadata.reflection = MsgLimitCreationRequestAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLimitUpdateRequestAck::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

MsgLimitUpdateRequestAck::MsgLimitUpdateRequestAck() {
  SharedCtor();
}

void MsgLimitUpdateRequestAck::InitAsDefaultInstance() {
}

MsgLimitUpdateRequestAck::MsgLimitUpdateRequestAck(const MsgLimitUpdateRequestAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLimitUpdateRequestAck::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLimitUpdateRequestAck::~MsgLimitUpdateRequestAck() {
  SharedDtor();
}

void MsgLimitUpdateRequestAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgLimitUpdateRequestAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLimitUpdateRequestAck_descriptor_;
}

const MsgLimitUpdateRequestAck& MsgLimitUpdateRequestAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgLimitUpdateRequestAck* MsgLimitUpdateRequestAck::default_instance_ = NULL;

MsgLimitUpdateRequestAck* MsgLimitUpdateRequestAck::New() const {
  return new MsgLimitUpdateRequestAck;
}

void MsgLimitUpdateRequestAck::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLimitUpdateRequestAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsMessengerToClient::TacticalLineAck_ErrorCode_IsValid(value)) {
          set_error_code(static_cast< ::MsgsMessengerToClient::TacticalLineAck_ErrorCode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLimitUpdateRequestAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLimitUpdateRequestAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLimitUpdateRequestAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLimitUpdateRequestAck::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLimitUpdateRequestAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLimitUpdateRequestAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLimitUpdateRequestAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLimitUpdateRequestAck::MergeFrom(const MsgLimitUpdateRequestAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLimitUpdateRequestAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLimitUpdateRequestAck::CopyFrom(const MsgLimitUpdateRequestAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLimitUpdateRequestAck::IsInitialized() const {
  
  return true;
}

void MsgLimitUpdateRequestAck::Swap(MsgLimitUpdateRequestAck* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLimitUpdateRequestAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLimitUpdateRequestAck_descriptor_;
  metadata.reflection = MsgLimitUpdateRequestAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLimitDestructionRequestAck::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

MsgLimitDestructionRequestAck::MsgLimitDestructionRequestAck() {
  SharedCtor();
}

void MsgLimitDestructionRequestAck::InitAsDefaultInstance() {
}

MsgLimitDestructionRequestAck::MsgLimitDestructionRequestAck(const MsgLimitDestructionRequestAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLimitDestructionRequestAck::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLimitDestructionRequestAck::~MsgLimitDestructionRequestAck() {
  SharedDtor();
}

void MsgLimitDestructionRequestAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgLimitDestructionRequestAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLimitDestructionRequestAck_descriptor_;
}

const MsgLimitDestructionRequestAck& MsgLimitDestructionRequestAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgLimitDestructionRequestAck* MsgLimitDestructionRequestAck::default_instance_ = NULL;

MsgLimitDestructionRequestAck* MsgLimitDestructionRequestAck::New() const {
  return new MsgLimitDestructionRequestAck;
}

void MsgLimitDestructionRequestAck::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLimitDestructionRequestAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsMessengerToClient::TacticalLineAck_ErrorCode_IsValid(value)) {
          set_error_code(static_cast< ::MsgsMessengerToClient::TacticalLineAck_ErrorCode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLimitDestructionRequestAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLimitDestructionRequestAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLimitDestructionRequestAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLimitDestructionRequestAck::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLimitDestructionRequestAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLimitDestructionRequestAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLimitDestructionRequestAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLimitDestructionRequestAck::MergeFrom(const MsgLimitDestructionRequestAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLimitDestructionRequestAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLimitDestructionRequestAck::CopyFrom(const MsgLimitDestructionRequestAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLimitDestructionRequestAck::IsInitialized() const {
  
  return true;
}

void MsgLimitDestructionRequestAck::Swap(MsgLimitDestructionRequestAck* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLimitDestructionRequestAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLimitDestructionRequestAck_descriptor_;
  metadata.reflection = MsgLimitDestructionRequestAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLimaCreation::kIdFieldNumber;
const int MsgLimaCreation::kTacticalLineFieldNumber;
#endif  // !_MSC_VER

MsgLimaCreation::MsgLimaCreation() {
  SharedCtor();
}

void MsgLimaCreation::InitAsDefaultInstance() {
  id_ = const_cast< ::Common::TacticalLineId*>(&::Common::TacticalLineId::default_instance());
  tactical_line_ = const_cast< ::Common::MsgTacticalLine*>(&::Common::MsgTacticalLine::default_instance());
}

MsgLimaCreation::MsgLimaCreation(const MsgLimaCreation& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLimaCreation::SharedCtor() {
  _cached_size_ = 0;
  id_ = NULL;
  tactical_line_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLimaCreation::~MsgLimaCreation() {
  SharedDtor();
}

void MsgLimaCreation::SharedDtor() {
  if (this != default_instance_) {
    delete id_;
    delete tactical_line_;
  }
}

const ::google::protobuf::Descriptor* MsgLimaCreation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLimaCreation_descriptor_;
}

const MsgLimaCreation& MsgLimaCreation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgLimaCreation* MsgLimaCreation::default_instance_ = NULL;

MsgLimaCreation* MsgLimaCreation::New() const {
  return new MsgLimaCreation;
}

void MsgLimaCreation::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (id_ != NULL) id_->::Common::TacticalLineId::Clear();
    }
    if (_has_bit(1)) {
      if (tactical_line_ != NULL) tactical_line_->::Common::MsgTacticalLine::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLimaCreation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.TacticalLineId id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_id()));
        if (input->ExpectTag(18)) goto parse_tactical_line;
        break;
      }
      
      // required .Common.MsgTacticalLine tactical_line = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_tactical_line:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_tactical_line()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLimaCreation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLimaCreation::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.TacticalLineId id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->id(), output);
  }
  
  // required .Common.MsgTacticalLine tactical_line = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->tactical_line(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLimaCreation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.TacticalLineId id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->id(), target);
  }
  
  // required .Common.MsgTacticalLine tactical_line = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->tactical_line(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLimaCreation::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.TacticalLineId id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->id());
    }
    
    // required .Common.MsgTacticalLine tactical_line = 2;
    if (has_tactical_line()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tactical_line());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLimaCreation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLimaCreation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLimaCreation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLimaCreation::MergeFrom(const MsgLimaCreation& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_id()->::Common::TacticalLineId::MergeFrom(from.id());
    }
    if (from._has_bit(1)) {
      mutable_tactical_line()->::Common::MsgTacticalLine::MergeFrom(from.tactical_line());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLimaCreation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLimaCreation::CopyFrom(const MsgLimaCreation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLimaCreation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_id()) {
    if (!this->id().IsInitialized()) return false;
  }
  if (has_tactical_line()) {
    if (!this->tactical_line().IsInitialized()) return false;
  }
  return true;
}

void MsgLimaCreation::Swap(MsgLimaCreation* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(tactical_line_, other->tactical_line_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLimaCreation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLimaCreation_descriptor_;
  metadata.reflection = MsgLimaCreation_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLimaDestruction::kIdFieldNumber;
#endif  // !_MSC_VER

MsgLimaDestruction::MsgLimaDestruction() {
  SharedCtor();
}

void MsgLimaDestruction::InitAsDefaultInstance() {
  id_ = const_cast< ::Common::TacticalLineId*>(&::Common::TacticalLineId::default_instance());
}

MsgLimaDestruction::MsgLimaDestruction(const MsgLimaDestruction& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLimaDestruction::SharedCtor() {
  _cached_size_ = 0;
  id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLimaDestruction::~MsgLimaDestruction() {
  SharedDtor();
}

void MsgLimaDestruction::SharedDtor() {
  if (this != default_instance_) {
    delete id_;
  }
}

const ::google::protobuf::Descriptor* MsgLimaDestruction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLimaDestruction_descriptor_;
}

const MsgLimaDestruction& MsgLimaDestruction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgLimaDestruction* MsgLimaDestruction::default_instance_ = NULL;

MsgLimaDestruction* MsgLimaDestruction::New() const {
  return new MsgLimaDestruction;
}

void MsgLimaDestruction::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (id_ != NULL) id_->::Common::TacticalLineId::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLimaDestruction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.TacticalLineId id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_id()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLimaDestruction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLimaDestruction::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.TacticalLineId id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLimaDestruction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.TacticalLineId id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLimaDestruction::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.TacticalLineId id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLimaDestruction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLimaDestruction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLimaDestruction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLimaDestruction::MergeFrom(const MsgLimaDestruction& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_id()->::Common::TacticalLineId::MergeFrom(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLimaDestruction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLimaDestruction::CopyFrom(const MsgLimaDestruction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLimaDestruction::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_id()) {
    if (!this->id().IsInitialized()) return false;
  }
  return true;
}

void MsgLimaDestruction::Swap(MsgLimaDestruction* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLimaDestruction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLimaDestruction_descriptor_;
  metadata.reflection = MsgLimaDestruction_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLimaUpdate::kIdFieldNumber;
const int MsgLimaUpdate::kTacticalLineFieldNumber;
#endif  // !_MSC_VER

MsgLimaUpdate::MsgLimaUpdate() {
  SharedCtor();
}

void MsgLimaUpdate::InitAsDefaultInstance() {
  id_ = const_cast< ::Common::TacticalLineId*>(&::Common::TacticalLineId::default_instance());
  tactical_line_ = const_cast< ::Common::MsgTacticalLine*>(&::Common::MsgTacticalLine::default_instance());
}

MsgLimaUpdate::MsgLimaUpdate(const MsgLimaUpdate& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLimaUpdate::SharedCtor() {
  _cached_size_ = 0;
  id_ = NULL;
  tactical_line_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLimaUpdate::~MsgLimaUpdate() {
  SharedDtor();
}

void MsgLimaUpdate::SharedDtor() {
  if (this != default_instance_) {
    delete id_;
    delete tactical_line_;
  }
}

const ::google::protobuf::Descriptor* MsgLimaUpdate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLimaUpdate_descriptor_;
}

const MsgLimaUpdate& MsgLimaUpdate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgLimaUpdate* MsgLimaUpdate::default_instance_ = NULL;

MsgLimaUpdate* MsgLimaUpdate::New() const {
  return new MsgLimaUpdate;
}

void MsgLimaUpdate::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (id_ != NULL) id_->::Common::TacticalLineId::Clear();
    }
    if (_has_bit(1)) {
      if (tactical_line_ != NULL) tactical_line_->::Common::MsgTacticalLine::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLimaUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.TacticalLineId id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_id()));
        if (input->ExpectTag(18)) goto parse_tactical_line;
        break;
      }
      
      // required .Common.MsgTacticalLine tactical_line = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_tactical_line:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_tactical_line()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLimaUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLimaUpdate::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.TacticalLineId id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->id(), output);
  }
  
  // required .Common.MsgTacticalLine tactical_line = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->tactical_line(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLimaUpdate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.TacticalLineId id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->id(), target);
  }
  
  // required .Common.MsgTacticalLine tactical_line = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->tactical_line(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLimaUpdate::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.TacticalLineId id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->id());
    }
    
    // required .Common.MsgTacticalLine tactical_line = 2;
    if (has_tactical_line()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tactical_line());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLimaUpdate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLimaUpdate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLimaUpdate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLimaUpdate::MergeFrom(const MsgLimaUpdate& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_id()->::Common::TacticalLineId::MergeFrom(from.id());
    }
    if (from._has_bit(1)) {
      mutable_tactical_line()->::Common::MsgTacticalLine::MergeFrom(from.tactical_line());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLimaUpdate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLimaUpdate::CopyFrom(const MsgLimaUpdate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLimaUpdate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_id()) {
    if (!this->id().IsInitialized()) return false;
  }
  if (has_tactical_line()) {
    if (!this->tactical_line().IsInitialized()) return false;
  }
  return true;
}

void MsgLimaUpdate::Swap(MsgLimaUpdate* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(tactical_line_, other->tactical_line_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLimaUpdate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLimaUpdate_descriptor_;
  metadata.reflection = MsgLimaUpdate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLimaCreationRequestAck::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

MsgLimaCreationRequestAck::MsgLimaCreationRequestAck() {
  SharedCtor();
}

void MsgLimaCreationRequestAck::InitAsDefaultInstance() {
}

MsgLimaCreationRequestAck::MsgLimaCreationRequestAck(const MsgLimaCreationRequestAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLimaCreationRequestAck::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLimaCreationRequestAck::~MsgLimaCreationRequestAck() {
  SharedDtor();
}

void MsgLimaCreationRequestAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgLimaCreationRequestAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLimaCreationRequestAck_descriptor_;
}

const MsgLimaCreationRequestAck& MsgLimaCreationRequestAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgLimaCreationRequestAck* MsgLimaCreationRequestAck::default_instance_ = NULL;

MsgLimaCreationRequestAck* MsgLimaCreationRequestAck::New() const {
  return new MsgLimaCreationRequestAck;
}

void MsgLimaCreationRequestAck::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLimaCreationRequestAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsMessengerToClient::TacticalLineAck_ErrorCode_IsValid(value)) {
          set_error_code(static_cast< ::MsgsMessengerToClient::TacticalLineAck_ErrorCode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLimaCreationRequestAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLimaCreationRequestAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLimaCreationRequestAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLimaCreationRequestAck::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLimaCreationRequestAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLimaCreationRequestAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLimaCreationRequestAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLimaCreationRequestAck::MergeFrom(const MsgLimaCreationRequestAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLimaCreationRequestAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLimaCreationRequestAck::CopyFrom(const MsgLimaCreationRequestAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLimaCreationRequestAck::IsInitialized() const {
  
  return true;
}

void MsgLimaCreationRequestAck::Swap(MsgLimaCreationRequestAck* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLimaCreationRequestAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLimaCreationRequestAck_descriptor_;
  metadata.reflection = MsgLimaCreationRequestAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLimaUpdateRequestAck::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

MsgLimaUpdateRequestAck::MsgLimaUpdateRequestAck() {
  SharedCtor();
}

void MsgLimaUpdateRequestAck::InitAsDefaultInstance() {
}

MsgLimaUpdateRequestAck::MsgLimaUpdateRequestAck(const MsgLimaUpdateRequestAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLimaUpdateRequestAck::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLimaUpdateRequestAck::~MsgLimaUpdateRequestAck() {
  SharedDtor();
}

void MsgLimaUpdateRequestAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgLimaUpdateRequestAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLimaUpdateRequestAck_descriptor_;
}

const MsgLimaUpdateRequestAck& MsgLimaUpdateRequestAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgLimaUpdateRequestAck* MsgLimaUpdateRequestAck::default_instance_ = NULL;

MsgLimaUpdateRequestAck* MsgLimaUpdateRequestAck::New() const {
  return new MsgLimaUpdateRequestAck;
}

void MsgLimaUpdateRequestAck::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLimaUpdateRequestAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsMessengerToClient::TacticalLineAck_ErrorCode_IsValid(value)) {
          set_error_code(static_cast< ::MsgsMessengerToClient::TacticalLineAck_ErrorCode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLimaUpdateRequestAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLimaUpdateRequestAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLimaUpdateRequestAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLimaUpdateRequestAck::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLimaUpdateRequestAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLimaUpdateRequestAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLimaUpdateRequestAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLimaUpdateRequestAck::MergeFrom(const MsgLimaUpdateRequestAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLimaUpdateRequestAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLimaUpdateRequestAck::CopyFrom(const MsgLimaUpdateRequestAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLimaUpdateRequestAck::IsInitialized() const {
  
  return true;
}

void MsgLimaUpdateRequestAck::Swap(MsgLimaUpdateRequestAck* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLimaUpdateRequestAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLimaUpdateRequestAck_descriptor_;
  metadata.reflection = MsgLimaUpdateRequestAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLimaDestructionRequestAck::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

MsgLimaDestructionRequestAck::MsgLimaDestructionRequestAck() {
  SharedCtor();
}

void MsgLimaDestructionRequestAck::InitAsDefaultInstance() {
}

MsgLimaDestructionRequestAck::MsgLimaDestructionRequestAck(const MsgLimaDestructionRequestAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLimaDestructionRequestAck::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLimaDestructionRequestAck::~MsgLimaDestructionRequestAck() {
  SharedDtor();
}

void MsgLimaDestructionRequestAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgLimaDestructionRequestAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLimaDestructionRequestAck_descriptor_;
}

const MsgLimaDestructionRequestAck& MsgLimaDestructionRequestAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgLimaDestructionRequestAck* MsgLimaDestructionRequestAck::default_instance_ = NULL;

MsgLimaDestructionRequestAck* MsgLimaDestructionRequestAck::New() const {
  return new MsgLimaDestructionRequestAck;
}

void MsgLimaDestructionRequestAck::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLimaDestructionRequestAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsMessengerToClient::TacticalLineAck_ErrorCode_IsValid(value)) {
          set_error_code(static_cast< ::MsgsMessengerToClient::TacticalLineAck_ErrorCode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLimaDestructionRequestAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLimaDestructionRequestAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLimaDestructionRequestAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLimaDestructionRequestAck::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgsMessengerToClient.TacticalLineAck.ErrorCode error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLimaDestructionRequestAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLimaDestructionRequestAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLimaDestructionRequestAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLimaDestructionRequestAck::MergeFrom(const MsgLimaDestructionRequestAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLimaDestructionRequestAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLimaDestructionRequestAck::CopyFrom(const MsgLimaDestructionRequestAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLimaDestructionRequestAck::IsInitialized() const {
  
  return true;
}

void MsgLimaDestructionRequestAck::Swap(MsgLimaDestructionRequestAck* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLimaDestructionRequestAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLimaDestructionRequestAck_descriptor_;
  metadata.reflection = MsgLimaDestructionRequestAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgIntelligenceCreation::kIdFieldNumber;
const int MsgIntelligenceCreation::kIntelligenceFieldNumber;
#endif  // !_MSC_VER

MsgIntelligenceCreation::MsgIntelligenceCreation() {
  SharedCtor();
}

void MsgIntelligenceCreation::InitAsDefaultInstance() {
  id_ = const_cast< ::Common::IntelligenceId*>(&::Common::IntelligenceId::default_instance());
  intelligence_ = const_cast< ::Common::MsgIntelligence*>(&::Common::MsgIntelligence::default_instance());
}

MsgIntelligenceCreation::MsgIntelligenceCreation(const MsgIntelligenceCreation& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgIntelligenceCreation::SharedCtor() {
  _cached_size_ = 0;
  id_ = NULL;
  intelligence_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgIntelligenceCreation::~MsgIntelligenceCreation() {
  SharedDtor();
}

void MsgIntelligenceCreation::SharedDtor() {
  if (this != default_instance_) {
    delete id_;
    delete intelligence_;
  }
}

const ::google::protobuf::Descriptor* MsgIntelligenceCreation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgIntelligenceCreation_descriptor_;
}

const MsgIntelligenceCreation& MsgIntelligenceCreation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgIntelligenceCreation* MsgIntelligenceCreation::default_instance_ = NULL;

MsgIntelligenceCreation* MsgIntelligenceCreation::New() const {
  return new MsgIntelligenceCreation;
}

void MsgIntelligenceCreation::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (id_ != NULL) id_->::Common::IntelligenceId::Clear();
    }
    if (_has_bit(1)) {
      if (intelligence_ != NULL) intelligence_->::Common::MsgIntelligence::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgIntelligenceCreation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.IntelligenceId id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_id()));
        if (input->ExpectTag(18)) goto parse_intelligence;
        break;
      }
      
      // required .Common.MsgIntelligence intelligence = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_intelligence:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_intelligence()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgIntelligenceCreation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgIntelligenceCreation::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.IntelligenceId id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->id(), output);
  }
  
  // required .Common.MsgIntelligence intelligence = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->intelligence(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgIntelligenceCreation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.IntelligenceId id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->id(), target);
  }
  
  // required .Common.MsgIntelligence intelligence = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->intelligence(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgIntelligenceCreation::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.IntelligenceId id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->id());
    }
    
    // required .Common.MsgIntelligence intelligence = 2;
    if (has_intelligence()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intelligence());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgIntelligenceCreation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgIntelligenceCreation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgIntelligenceCreation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgIntelligenceCreation::MergeFrom(const MsgIntelligenceCreation& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_id()->::Common::IntelligenceId::MergeFrom(from.id());
    }
    if (from._has_bit(1)) {
      mutable_intelligence()->::Common::MsgIntelligence::MergeFrom(from.intelligence());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgIntelligenceCreation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgIntelligenceCreation::CopyFrom(const MsgIntelligenceCreation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgIntelligenceCreation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_id()) {
    if (!this->id().IsInitialized()) return false;
  }
  if (has_intelligence()) {
    if (!this->intelligence().IsInitialized()) return false;
  }
  return true;
}

void MsgIntelligenceCreation::Swap(MsgIntelligenceCreation* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(intelligence_, other->intelligence_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgIntelligenceCreation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgIntelligenceCreation_descriptor_;
  metadata.reflection = MsgIntelligenceCreation_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgIntelligenceUpdate::_default_name_;
const ::std::string MsgIntelligenceUpdate::_default_nature_;
#ifndef _MSC_VER
const int MsgIntelligenceUpdate::kIdFieldNumber;
const int MsgIntelligenceUpdate::kFormationFieldNumber;
const int MsgIntelligenceUpdate::kNameFieldNumber;
const int MsgIntelligenceUpdate::kNatureFieldNumber;
const int MsgIntelligenceUpdate::kLevelFieldNumber;
const int MsgIntelligenceUpdate::kEmbarkedFieldNumber;
const int MsgIntelligenceUpdate::kLocationFieldNumber;
const int MsgIntelligenceUpdate::kDiplomacyFieldNumber;
#endif  // !_MSC_VER

MsgIntelligenceUpdate::MsgIntelligenceUpdate() {
  SharedCtor();
}

void MsgIntelligenceUpdate::InitAsDefaultInstance() {
  id_ = const_cast< ::Common::IntelligenceId*>(&::Common::IntelligenceId::default_instance());
  formation_ = const_cast< ::Common::FormationId*>(&::Common::FormationId::default_instance());
  location_ = const_cast< ::Common::MsgCoordLatLong*>(&::Common::MsgCoordLatLong::default_instance());
}

MsgIntelligenceUpdate::MsgIntelligenceUpdate(const MsgIntelligenceUpdate& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgIntelligenceUpdate::SharedCtor() {
  _cached_size_ = 0;
  id_ = NULL;
  formation_ = NULL;
  name_ = const_cast< ::std::string*>(&_default_name_);
  nature_ = const_cast< ::std::string*>(&_default_nature_);
  level_ = 0;
  embarked_ = false;
  location_ = NULL;
  diplomacy_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgIntelligenceUpdate::~MsgIntelligenceUpdate() {
  SharedDtor();
}

void MsgIntelligenceUpdate::SharedDtor() {
  if (name_ != &_default_name_) {
    delete name_;
  }
  if (nature_ != &_default_nature_) {
    delete nature_;
  }
  if (this != default_instance_) {
    delete id_;
    delete formation_;
    delete location_;
  }
}

const ::google::protobuf::Descriptor* MsgIntelligenceUpdate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgIntelligenceUpdate_descriptor_;
}

const MsgIntelligenceUpdate& MsgIntelligenceUpdate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgIntelligenceUpdate* MsgIntelligenceUpdate::default_instance_ = NULL;

MsgIntelligenceUpdate* MsgIntelligenceUpdate::New() const {
  return new MsgIntelligenceUpdate;
}

void MsgIntelligenceUpdate::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (id_ != NULL) id_->::Common::IntelligenceId::Clear();
    }
    if (_has_bit(1)) {
      if (formation_ != NULL) formation_->::Common::FormationId::Clear();
    }
    if (_has_bit(2)) {
      if (name_ != &_default_name_) {
        name_->clear();
      }
    }
    if (_has_bit(3)) {
      if (nature_ != &_default_nature_) {
        nature_->clear();
      }
    }
    level_ = 0;
    embarked_ = false;
    if (_has_bit(6)) {
      if (location_ != NULL) location_->::Common::MsgCoordLatLong::Clear();
    }
    diplomacy_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgIntelligenceUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.IntelligenceId id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_id()));
        if (input->ExpectTag(18)) goto parse_formation;
        break;
      }
      
      // optional .Common.FormationId formation = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_formation:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_formation()));
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }
      
      // optional string name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_name:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_name()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->name().data(), this->name().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(34)) goto parse_nature;
        break;
      }
      
      // optional string nature = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_nature:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_nature()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->nature().data(), this->nature().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(40)) goto parse_level;
        break;
      }
      
      // optional .Common.EnumNatureLevel level = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_level:
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (Common::EnumNatureLevel_IsValid(value)) {
          set_level(static_cast< Common::EnumNatureLevel >(value));
        } else {
          mutable_unknown_fields()->AddVarint(5, value);
        }
        if (input->ExpectTag(48)) goto parse_embarked;
        break;
      }
      
      // optional bool embarked = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_embarked:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &embarked_));
        _set_bit(5);
        if (input->ExpectTag(58)) goto parse_location;
        break;
      }
      
      // optional .Common.MsgCoordLatLong location = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_location:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_location()));
        if (input->ExpectTag(64)) goto parse_diplomacy;
        break;
      }
      
      // optional .Common.EnumDiplomacy diplomacy = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_diplomacy:
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (Common::EnumDiplomacy_IsValid(value)) {
          set_diplomacy(static_cast< Common::EnumDiplomacy >(value));
        } else {
          mutable_unknown_fields()->AddVarint(8, value);
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgIntelligenceUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgIntelligenceUpdate::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.IntelligenceId id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->id(), output);
  }
  
  // optional .Common.FormationId formation = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->formation(), output);
  }
  
  // optional string name = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->name(), output);
  }
  
  // optional string nature = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nature().data(), this->nature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->nature(), output);
  }
  
  // optional .Common.EnumNatureLevel level = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->level(), output);
  }
  
  // optional bool embarked = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->embarked(), output);
  }
  
  // optional .Common.MsgCoordLatLong location = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      7, this->location(), output);
  }
  
  // optional .Common.EnumDiplomacy diplomacy = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->diplomacy(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgIntelligenceUpdate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.IntelligenceId id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->id(), target);
  }
  
  // optional .Common.FormationId formation = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->formation(), target);
  }
  
  // optional string name = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }
  
  // optional string nature = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nature().data(), this->nature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->nature(), target);
  }
  
  // optional .Common.EnumNatureLevel level = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->level(), target);
  }
  
  // optional bool embarked = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->embarked(), target);
  }
  
  // optional .Common.MsgCoordLatLong location = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->location(), target);
  }
  
  // optional .Common.EnumDiplomacy diplomacy = 8;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->diplomacy(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgIntelligenceUpdate::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.IntelligenceId id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->id());
    }
    
    // optional .Common.FormationId formation = 2;
    if (has_formation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->formation());
    }
    
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // optional string nature = 4;
    if (has_nature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nature());
    }
    
    // optional .Common.EnumNatureLevel level = 5;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->level());
    }
    
    // optional bool embarked = 6;
    if (has_embarked()) {
      total_size += 1 + 1;
    }
    
    // optional .Common.MsgCoordLatLong location = 7;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->location());
    }
    
    // optional .Common.EnumDiplomacy diplomacy = 8;
    if (has_diplomacy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->diplomacy());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgIntelligenceUpdate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgIntelligenceUpdate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgIntelligenceUpdate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgIntelligenceUpdate::MergeFrom(const MsgIntelligenceUpdate& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_id()->::Common::IntelligenceId::MergeFrom(from.id());
    }
    if (from._has_bit(1)) {
      mutable_formation()->::Common::FormationId::MergeFrom(from.formation());
    }
    if (from._has_bit(2)) {
      set_name(from.name());
    }
    if (from._has_bit(3)) {
      set_nature(from.nature());
    }
    if (from._has_bit(4)) {
      set_level(from.level());
    }
    if (from._has_bit(5)) {
      set_embarked(from.embarked());
    }
    if (from._has_bit(6)) {
      mutable_location()->::Common::MsgCoordLatLong::MergeFrom(from.location());
    }
    if (from._has_bit(7)) {
      set_diplomacy(from.diplomacy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgIntelligenceUpdate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgIntelligenceUpdate::CopyFrom(const MsgIntelligenceUpdate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgIntelligenceUpdate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_id()) {
    if (!this->id().IsInitialized()) return false;
  }
  if (has_formation()) {
    if (!this->formation().IsInitialized()) return false;
  }
  if (has_location()) {
    if (!this->location().IsInitialized()) return false;
  }
  return true;
}

void MsgIntelligenceUpdate::Swap(MsgIntelligenceUpdate* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(formation_, other->formation_);
    std::swap(name_, other->name_);
    std::swap(nature_, other->nature_);
    std::swap(level_, other->level_);
    std::swap(embarked_, other->embarked_);
    std::swap(location_, other->location_);
    std::swap(diplomacy_, other->diplomacy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgIntelligenceUpdate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgIntelligenceUpdate_descriptor_;
  metadata.reflection = MsgIntelligenceUpdate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgIntelligenceDestruction::kIdFieldNumber;
#endif  // !_MSC_VER

MsgIntelligenceDestruction::MsgIntelligenceDestruction() {
  SharedCtor();
}

void MsgIntelligenceDestruction::InitAsDefaultInstance() {
  id_ = const_cast< ::Common::IntelligenceId*>(&::Common::IntelligenceId::default_instance());
}

MsgIntelligenceDestruction::MsgIntelligenceDestruction(const MsgIntelligenceDestruction& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgIntelligenceDestruction::SharedCtor() {
  _cached_size_ = 0;
  id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgIntelligenceDestruction::~MsgIntelligenceDestruction() {
  SharedDtor();
}

void MsgIntelligenceDestruction::SharedDtor() {
  if (this != default_instance_) {
    delete id_;
  }
}

const ::google::protobuf::Descriptor* MsgIntelligenceDestruction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgIntelligenceDestruction_descriptor_;
}

const MsgIntelligenceDestruction& MsgIntelligenceDestruction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgIntelligenceDestruction* MsgIntelligenceDestruction::default_instance_ = NULL;

MsgIntelligenceDestruction* MsgIntelligenceDestruction::New() const {
  return new MsgIntelligenceDestruction;
}

void MsgIntelligenceDestruction::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (id_ != NULL) id_->::Common::IntelligenceId::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgIntelligenceDestruction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.IntelligenceId id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_id()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgIntelligenceDestruction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgIntelligenceDestruction::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.IntelligenceId id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgIntelligenceDestruction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.IntelligenceId id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgIntelligenceDestruction::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.IntelligenceId id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgIntelligenceDestruction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgIntelligenceDestruction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgIntelligenceDestruction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgIntelligenceDestruction::MergeFrom(const MsgIntelligenceDestruction& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_id()->::Common::IntelligenceId::MergeFrom(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgIntelligenceDestruction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgIntelligenceDestruction::CopyFrom(const MsgIntelligenceDestruction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgIntelligenceDestruction::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_id()) {
    if (!this->id().IsInitialized()) return false;
  }
  return true;
}

void MsgIntelligenceDestruction::Swap(MsgIntelligenceDestruction* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgIntelligenceDestruction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgIntelligenceDestruction_descriptor_;
  metadata.reflection = MsgIntelligenceDestruction_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* IntelligenceRequestAck_ErrorCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IntelligenceRequestAck_ErrorCode_descriptor_;
}
bool IntelligenceRequestAck_ErrorCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const IntelligenceRequestAck_ErrorCode IntelligenceRequestAck::no_error;
const IntelligenceRequestAck_ErrorCode IntelligenceRequestAck::error_invalid_oid;
const IntelligenceRequestAck_ErrorCode IntelligenceRequestAck::error_invalid_geometry;
const IntelligenceRequestAck_ErrorCode IntelligenceRequestAck::error_invalid_formation;
const IntelligenceRequestAck_ErrorCode IntelligenceRequestAck::ErrorCode_MIN;
const IntelligenceRequestAck_ErrorCode IntelligenceRequestAck::ErrorCode_MAX;
#endif  // _MSC_VER
#ifndef _MSC_VER
#endif  // !_MSC_VER

IntelligenceRequestAck::IntelligenceRequestAck() {
  SharedCtor();
}

void IntelligenceRequestAck::InitAsDefaultInstance() {
}

IntelligenceRequestAck::IntelligenceRequestAck(const IntelligenceRequestAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void IntelligenceRequestAck::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

IntelligenceRequestAck::~IntelligenceRequestAck() {
  SharedDtor();
}

void IntelligenceRequestAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* IntelligenceRequestAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IntelligenceRequestAck_descriptor_;
}

const IntelligenceRequestAck& IntelligenceRequestAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

IntelligenceRequestAck* IntelligenceRequestAck::default_instance_ = NULL;

IntelligenceRequestAck* IntelligenceRequestAck::New() const {
  return new IntelligenceRequestAck;
}

void IntelligenceRequestAck::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool IntelligenceRequestAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void IntelligenceRequestAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    IntelligenceRequestAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* IntelligenceRequestAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int IntelligenceRequestAck::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void IntelligenceRequestAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const IntelligenceRequestAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const IntelligenceRequestAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void IntelligenceRequestAck::MergeFrom(const IntelligenceRequestAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void IntelligenceRequestAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntelligenceRequestAck::CopyFrom(const IntelligenceRequestAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntelligenceRequestAck::IsInitialized() const {
  
  return true;
}

void IntelligenceRequestAck::Swap(IntelligenceRequestAck* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata IntelligenceRequestAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IntelligenceRequestAck_descriptor_;
  metadata.reflection = IntelligenceRequestAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgIntelligenceCreationRequestAck::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

MsgIntelligenceCreationRequestAck::MsgIntelligenceCreationRequestAck() {
  SharedCtor();
}

void MsgIntelligenceCreationRequestAck::InitAsDefaultInstance() {
}

MsgIntelligenceCreationRequestAck::MsgIntelligenceCreationRequestAck(const MsgIntelligenceCreationRequestAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgIntelligenceCreationRequestAck::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgIntelligenceCreationRequestAck::~MsgIntelligenceCreationRequestAck() {
  SharedDtor();
}

void MsgIntelligenceCreationRequestAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgIntelligenceCreationRequestAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgIntelligenceCreationRequestAck_descriptor_;
}

const MsgIntelligenceCreationRequestAck& MsgIntelligenceCreationRequestAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgIntelligenceCreationRequestAck* MsgIntelligenceCreationRequestAck::default_instance_ = NULL;

MsgIntelligenceCreationRequestAck* MsgIntelligenceCreationRequestAck::New() const {
  return new MsgIntelligenceCreationRequestAck;
}

void MsgIntelligenceCreationRequestAck::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgIntelligenceCreationRequestAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgsMessengerToClient.IntelligenceRequestAck.ErrorCode error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsMessengerToClient::IntelligenceRequestAck_ErrorCode_IsValid(value)) {
          set_error_code(static_cast< ::MsgsMessengerToClient::IntelligenceRequestAck_ErrorCode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgIntelligenceCreationRequestAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgIntelligenceCreationRequestAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .MsgsMessengerToClient.IntelligenceRequestAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgIntelligenceCreationRequestAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .MsgsMessengerToClient.IntelligenceRequestAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgIntelligenceCreationRequestAck::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgsMessengerToClient.IntelligenceRequestAck.ErrorCode error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgIntelligenceCreationRequestAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgIntelligenceCreationRequestAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgIntelligenceCreationRequestAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgIntelligenceCreationRequestAck::MergeFrom(const MsgIntelligenceCreationRequestAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgIntelligenceCreationRequestAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgIntelligenceCreationRequestAck::CopyFrom(const MsgIntelligenceCreationRequestAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgIntelligenceCreationRequestAck::IsInitialized() const {
  
  return true;
}

void MsgIntelligenceCreationRequestAck::Swap(MsgIntelligenceCreationRequestAck* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgIntelligenceCreationRequestAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgIntelligenceCreationRequestAck_descriptor_;
  metadata.reflection = MsgIntelligenceCreationRequestAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgIntelligenceUpdateRequestAck::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

MsgIntelligenceUpdateRequestAck::MsgIntelligenceUpdateRequestAck() {
  SharedCtor();
}

void MsgIntelligenceUpdateRequestAck::InitAsDefaultInstance() {
}

MsgIntelligenceUpdateRequestAck::MsgIntelligenceUpdateRequestAck(const MsgIntelligenceUpdateRequestAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgIntelligenceUpdateRequestAck::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgIntelligenceUpdateRequestAck::~MsgIntelligenceUpdateRequestAck() {
  SharedDtor();
}

void MsgIntelligenceUpdateRequestAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgIntelligenceUpdateRequestAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgIntelligenceUpdateRequestAck_descriptor_;
}

const MsgIntelligenceUpdateRequestAck& MsgIntelligenceUpdateRequestAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgIntelligenceUpdateRequestAck* MsgIntelligenceUpdateRequestAck::default_instance_ = NULL;

MsgIntelligenceUpdateRequestAck* MsgIntelligenceUpdateRequestAck::New() const {
  return new MsgIntelligenceUpdateRequestAck;
}

void MsgIntelligenceUpdateRequestAck::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgIntelligenceUpdateRequestAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgsMessengerToClient.IntelligenceRequestAck.ErrorCode error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsMessengerToClient::IntelligenceRequestAck_ErrorCode_IsValid(value)) {
          set_error_code(static_cast< ::MsgsMessengerToClient::IntelligenceRequestAck_ErrorCode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgIntelligenceUpdateRequestAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgIntelligenceUpdateRequestAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .MsgsMessengerToClient.IntelligenceRequestAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgIntelligenceUpdateRequestAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .MsgsMessengerToClient.IntelligenceRequestAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgIntelligenceUpdateRequestAck::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgsMessengerToClient.IntelligenceRequestAck.ErrorCode error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgIntelligenceUpdateRequestAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgIntelligenceUpdateRequestAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgIntelligenceUpdateRequestAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgIntelligenceUpdateRequestAck::MergeFrom(const MsgIntelligenceUpdateRequestAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgIntelligenceUpdateRequestAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgIntelligenceUpdateRequestAck::CopyFrom(const MsgIntelligenceUpdateRequestAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgIntelligenceUpdateRequestAck::IsInitialized() const {
  
  return true;
}

void MsgIntelligenceUpdateRequestAck::Swap(MsgIntelligenceUpdateRequestAck* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgIntelligenceUpdateRequestAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgIntelligenceUpdateRequestAck_descriptor_;
  metadata.reflection = MsgIntelligenceUpdateRequestAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgIntelligenceDestructionRequestAck::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

MsgIntelligenceDestructionRequestAck::MsgIntelligenceDestructionRequestAck() {
  SharedCtor();
}

void MsgIntelligenceDestructionRequestAck::InitAsDefaultInstance() {
}

MsgIntelligenceDestructionRequestAck::MsgIntelligenceDestructionRequestAck(const MsgIntelligenceDestructionRequestAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgIntelligenceDestructionRequestAck::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgIntelligenceDestructionRequestAck::~MsgIntelligenceDestructionRequestAck() {
  SharedDtor();
}

void MsgIntelligenceDestructionRequestAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgIntelligenceDestructionRequestAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgIntelligenceDestructionRequestAck_descriptor_;
}

const MsgIntelligenceDestructionRequestAck& MsgIntelligenceDestructionRequestAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgIntelligenceDestructionRequestAck* MsgIntelligenceDestructionRequestAck::default_instance_ = NULL;

MsgIntelligenceDestructionRequestAck* MsgIntelligenceDestructionRequestAck::New() const {
  return new MsgIntelligenceDestructionRequestAck;
}

void MsgIntelligenceDestructionRequestAck::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgIntelligenceDestructionRequestAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgsMessengerToClient.IntelligenceRequestAck.ErrorCode error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsMessengerToClient::IntelligenceRequestAck_ErrorCode_IsValid(value)) {
          set_error_code(static_cast< ::MsgsMessengerToClient::IntelligenceRequestAck_ErrorCode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgIntelligenceDestructionRequestAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgIntelligenceDestructionRequestAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .MsgsMessengerToClient.IntelligenceRequestAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgIntelligenceDestructionRequestAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .MsgsMessengerToClient.IntelligenceRequestAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgIntelligenceDestructionRequestAck::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgsMessengerToClient.IntelligenceRequestAck.ErrorCode error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgIntelligenceDestructionRequestAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgIntelligenceDestructionRequestAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgIntelligenceDestructionRequestAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgIntelligenceDestructionRequestAck::MergeFrom(const MsgIntelligenceDestructionRequestAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgIntelligenceDestructionRequestAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgIntelligenceDestructionRequestAck::CopyFrom(const MsgIntelligenceDestructionRequestAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgIntelligenceDestructionRequestAck::IsInitialized() const {
  
  return true;
}

void MsgIntelligenceDestructionRequestAck::Swap(MsgIntelligenceDestructionRequestAck* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgIntelligenceDestructionRequestAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgIntelligenceDestructionRequestAck_descriptor_;
  metadata.reflection = MsgIntelligenceDestructionRequestAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgShapeCreation::kIdFieldNumber;
const int MsgShapeCreation::kShapeFieldNumber;
#endif  // !_MSC_VER

MsgShapeCreation::MsgShapeCreation() {
  SharedCtor();
}

void MsgShapeCreation::InitAsDefaultInstance() {
  id_ = const_cast< ::Common::DrawingId*>(&::Common::DrawingId::default_instance());
  shape_ = const_cast< ::Common::MsgShape*>(&::Common::MsgShape::default_instance());
}

MsgShapeCreation::MsgShapeCreation(const MsgShapeCreation& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgShapeCreation::SharedCtor() {
  _cached_size_ = 0;
  id_ = NULL;
  shape_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgShapeCreation::~MsgShapeCreation() {
  SharedDtor();
}

void MsgShapeCreation::SharedDtor() {
  if (this != default_instance_) {
    delete id_;
    delete shape_;
  }
}

const ::google::protobuf::Descriptor* MsgShapeCreation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgShapeCreation_descriptor_;
}

const MsgShapeCreation& MsgShapeCreation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgShapeCreation* MsgShapeCreation::default_instance_ = NULL;

MsgShapeCreation* MsgShapeCreation::New() const {
  return new MsgShapeCreation;
}

void MsgShapeCreation::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (id_ != NULL) id_->::Common::DrawingId::Clear();
    }
    if (_has_bit(1)) {
      if (shape_ != NULL) shape_->::Common::MsgShape::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgShapeCreation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.DrawingId id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_id()));
        if (input->ExpectTag(18)) goto parse_shape;
        break;
      }
      
      // required .Common.MsgShape shape = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_shape:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_shape()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgShapeCreation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgShapeCreation::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.DrawingId id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->id(), output);
  }
  
  // required .Common.MsgShape shape = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->shape(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgShapeCreation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.DrawingId id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->id(), target);
  }
  
  // required .Common.MsgShape shape = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->shape(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgShapeCreation::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.DrawingId id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->id());
    }
    
    // required .Common.MsgShape shape = 2;
    if (has_shape()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shape());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgShapeCreation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgShapeCreation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgShapeCreation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgShapeCreation::MergeFrom(const MsgShapeCreation& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_id()->::Common::DrawingId::MergeFrom(from.id());
    }
    if (from._has_bit(1)) {
      mutable_shape()->::Common::MsgShape::MergeFrom(from.shape());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgShapeCreation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgShapeCreation::CopyFrom(const MsgShapeCreation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgShapeCreation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_id()) {
    if (!this->id().IsInitialized()) return false;
  }
  if (has_shape()) {
    if (!this->shape().IsInitialized()) return false;
  }
  return true;
}

void MsgShapeCreation::Swap(MsgShapeCreation* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(shape_, other->shape_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgShapeCreation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgShapeCreation_descriptor_;
  metadata.reflection = MsgShapeCreation_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgShapeUpdate::_default_category_;
const ::std::string MsgShapeUpdate::_default_color_;
const ::std::string MsgShapeUpdate::_default_template__;
#ifndef _MSC_VER
const int MsgShapeUpdate::kIdFieldNumber;
const int MsgShapeUpdate::kCategoryFieldNumber;
const int MsgShapeUpdate::kColorFieldNumber;
const int MsgShapeUpdate::kTemplateFieldNumber;
const int MsgShapeUpdate::kPointsFieldNumber;
#endif  // !_MSC_VER

MsgShapeUpdate::MsgShapeUpdate() {
  SharedCtor();
}

void MsgShapeUpdate::InitAsDefaultInstance() {
  id_ = const_cast< ::Common::DrawingId*>(&::Common::DrawingId::default_instance());
  points_ = const_cast< ::Common::MsgCoordLatLongList*>(&::Common::MsgCoordLatLongList::default_instance());
}

MsgShapeUpdate::MsgShapeUpdate(const MsgShapeUpdate& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgShapeUpdate::SharedCtor() {
  _cached_size_ = 0;
  id_ = NULL;
  category_ = const_cast< ::std::string*>(&_default_category_);
  color_ = const_cast< ::std::string*>(&_default_color_);
  template__ = const_cast< ::std::string*>(&_default_template__);
  points_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgShapeUpdate::~MsgShapeUpdate() {
  SharedDtor();
}

void MsgShapeUpdate::SharedDtor() {
  if (category_ != &_default_category_) {
    delete category_;
  }
  if (color_ != &_default_color_) {
    delete color_;
  }
  if (template__ != &_default_template__) {
    delete template__;
  }
  if (this != default_instance_) {
    delete id_;
    delete points_;
  }
}

const ::google::protobuf::Descriptor* MsgShapeUpdate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgShapeUpdate_descriptor_;
}

const MsgShapeUpdate& MsgShapeUpdate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgShapeUpdate* MsgShapeUpdate::default_instance_ = NULL;

MsgShapeUpdate* MsgShapeUpdate::New() const {
  return new MsgShapeUpdate;
}

void MsgShapeUpdate::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (id_ != NULL) id_->::Common::DrawingId::Clear();
    }
    if (_has_bit(1)) {
      if (category_ != &_default_category_) {
        category_->clear();
      }
    }
    if (_has_bit(2)) {
      if (color_ != &_default_color_) {
        color_->clear();
      }
    }
    if (_has_bit(3)) {
      if (template__ != &_default_template__) {
        template__->clear();
      }
    }
    if (_has_bit(4)) {
      if (points_ != NULL) points_->::Common::MsgCoordLatLongList::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgShapeUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.DrawingId id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_id()));
        if (input->ExpectTag(18)) goto parse_category;
        break;
      }
      
      // optional string category = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_category:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_category()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->category().data(), this->category().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(26)) goto parse_color;
        break;
      }
      
      // optional string color = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_color:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_color()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->color().data(), this->color().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(34)) goto parse_template;
        break;
      }
      
      // optional string template = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_template:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_template_()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->template_().data(), this->template_().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(42)) goto parse_points;
        break;
      }
      
      // optional .Common.MsgCoordLatLongList points = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_points:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_points()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgShapeUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgShapeUpdate::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.DrawingId id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->id(), output);
  }
  
  // optional string category = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->category().data(), this->category().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->category(), output);
  }
  
  // optional string color = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->color().data(), this->color().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->color(), output);
  }
  
  // optional string template = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->template_().data(), this->template_().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->template_(), output);
  }
  
  // optional .Common.MsgCoordLatLongList points = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      5, this->points(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgShapeUpdate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.DrawingId id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->id(), target);
  }
  
  // optional string category = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->category().data(), this->category().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->category(), target);
  }
  
  // optional string color = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->color().data(), this->color().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->color(), target);
  }
  
  // optional string template = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->template_().data(), this->template_().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->template_(), target);
  }
  
  // optional .Common.MsgCoordLatLongList points = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->points(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgShapeUpdate::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.DrawingId id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->id());
    }
    
    // optional string category = 2;
    if (has_category()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->category());
    }
    
    // optional string color = 3;
    if (has_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->color());
    }
    
    // optional string template = 4;
    if (has_template_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->template_());
    }
    
    // optional .Common.MsgCoordLatLongList points = 5;
    if (has_points()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->points());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgShapeUpdate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgShapeUpdate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgShapeUpdate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgShapeUpdate::MergeFrom(const MsgShapeUpdate& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_id()->::Common::DrawingId::MergeFrom(from.id());
    }
    if (from._has_bit(1)) {
      set_category(from.category());
    }
    if (from._has_bit(2)) {
      set_color(from.color());
    }
    if (from._has_bit(3)) {
      set_template_(from.template_());
    }
    if (from._has_bit(4)) {
      mutable_points()->::Common::MsgCoordLatLongList::MergeFrom(from.points());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgShapeUpdate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgShapeUpdate::CopyFrom(const MsgShapeUpdate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgShapeUpdate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_id()) {
    if (!this->id().IsInitialized()) return false;
  }
  if (has_points()) {
    if (!this->points().IsInitialized()) return false;
  }
  return true;
}

void MsgShapeUpdate::Swap(MsgShapeUpdate* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(category_, other->category_);
    std::swap(color_, other->color_);
    std::swap(template__, other->template__);
    std::swap(points_, other->points_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgShapeUpdate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgShapeUpdate_descriptor_;
  metadata.reflection = MsgShapeUpdate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgShapeDestruction::kIdFieldNumber;
#endif  // !_MSC_VER

MsgShapeDestruction::MsgShapeDestruction() {
  SharedCtor();
}

void MsgShapeDestruction::InitAsDefaultInstance() {
  id_ = const_cast< ::Common::DrawingId*>(&::Common::DrawingId::default_instance());
}

MsgShapeDestruction::MsgShapeDestruction(const MsgShapeDestruction& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgShapeDestruction::SharedCtor() {
  _cached_size_ = 0;
  id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgShapeDestruction::~MsgShapeDestruction() {
  SharedDtor();
}

void MsgShapeDestruction::SharedDtor() {
  if (this != default_instance_) {
    delete id_;
  }
}

const ::google::protobuf::Descriptor* MsgShapeDestruction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgShapeDestruction_descriptor_;
}

const MsgShapeDestruction& MsgShapeDestruction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgShapeDestruction* MsgShapeDestruction::default_instance_ = NULL;

MsgShapeDestruction* MsgShapeDestruction::New() const {
  return new MsgShapeDestruction;
}

void MsgShapeDestruction::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (id_ != NULL) id_->::Common::DrawingId::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgShapeDestruction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.DrawingId id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_id()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgShapeDestruction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgShapeDestruction::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.DrawingId id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgShapeDestruction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.DrawingId id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgShapeDestruction::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.DrawingId id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgShapeDestruction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgShapeDestruction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgShapeDestruction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgShapeDestruction::MergeFrom(const MsgShapeDestruction& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_id()->::Common::DrawingId::MergeFrom(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgShapeDestruction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgShapeDestruction::CopyFrom(const MsgShapeDestruction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgShapeDestruction::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_id()) {
    if (!this->id().IsInitialized()) return false;
  }
  return true;
}

void MsgShapeDestruction::Swap(MsgShapeDestruction* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgShapeDestruction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgShapeDestruction_descriptor_;
  metadata.reflection = MsgShapeDestruction_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* ShapeRequestAck_ErrorCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShapeRequestAck_ErrorCode_descriptor_;
}
bool ShapeRequestAck_ErrorCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const ShapeRequestAck_ErrorCode ShapeRequestAck::no_error;
const ShapeRequestAck_ErrorCode ShapeRequestAck::error_invalid_oid;
const ShapeRequestAck_ErrorCode ShapeRequestAck::error_invalid_geometry;
const ShapeRequestAck_ErrorCode ShapeRequestAck::ErrorCode_MIN;
const ShapeRequestAck_ErrorCode ShapeRequestAck::ErrorCode_MAX;
#endif  // _MSC_VER
#ifndef _MSC_VER
#endif  // !_MSC_VER

ShapeRequestAck::ShapeRequestAck() {
  SharedCtor();
}

void ShapeRequestAck::InitAsDefaultInstance() {
}

ShapeRequestAck::ShapeRequestAck(const ShapeRequestAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void ShapeRequestAck::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ShapeRequestAck::~ShapeRequestAck() {
  SharedDtor();
}

void ShapeRequestAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* ShapeRequestAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShapeRequestAck_descriptor_;
}

const ShapeRequestAck& ShapeRequestAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

ShapeRequestAck* ShapeRequestAck::default_instance_ = NULL;

ShapeRequestAck* ShapeRequestAck::New() const {
  return new ShapeRequestAck;
}

void ShapeRequestAck::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ShapeRequestAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ShapeRequestAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    ShapeRequestAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ShapeRequestAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ShapeRequestAck::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void ShapeRequestAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ShapeRequestAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ShapeRequestAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ShapeRequestAck::MergeFrom(const ShapeRequestAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ShapeRequestAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShapeRequestAck::CopyFrom(const ShapeRequestAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShapeRequestAck::IsInitialized() const {
  
  return true;
}

void ShapeRequestAck::Swap(ShapeRequestAck* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ShapeRequestAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShapeRequestAck_descriptor_;
  metadata.reflection = ShapeRequestAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgShapeCreationRequestAck::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

MsgShapeCreationRequestAck::MsgShapeCreationRequestAck() {
  SharedCtor();
}

void MsgShapeCreationRequestAck::InitAsDefaultInstance() {
}

MsgShapeCreationRequestAck::MsgShapeCreationRequestAck(const MsgShapeCreationRequestAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgShapeCreationRequestAck::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgShapeCreationRequestAck::~MsgShapeCreationRequestAck() {
  SharedDtor();
}

void MsgShapeCreationRequestAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgShapeCreationRequestAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgShapeCreationRequestAck_descriptor_;
}

const MsgShapeCreationRequestAck& MsgShapeCreationRequestAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgShapeCreationRequestAck* MsgShapeCreationRequestAck::default_instance_ = NULL;

MsgShapeCreationRequestAck* MsgShapeCreationRequestAck::New() const {
  return new MsgShapeCreationRequestAck;
}

void MsgShapeCreationRequestAck::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgShapeCreationRequestAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MsgsMessengerToClient.ShapeRequestAck.ErrorCode error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsMessengerToClient::ShapeRequestAck_ErrorCode_IsValid(value)) {
          set_error_code(static_cast< ::MsgsMessengerToClient::ShapeRequestAck_ErrorCode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgShapeCreationRequestAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgShapeCreationRequestAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .MsgsMessengerToClient.ShapeRequestAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgShapeCreationRequestAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .MsgsMessengerToClient.ShapeRequestAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgShapeCreationRequestAck::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .MsgsMessengerToClient.ShapeRequestAck.ErrorCode error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgShapeCreationRequestAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgShapeCreationRequestAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgShapeCreationRequestAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgShapeCreationRequestAck::MergeFrom(const MsgShapeCreationRequestAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgShapeCreationRequestAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgShapeCreationRequestAck::CopyFrom(const MsgShapeCreationRequestAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgShapeCreationRequestAck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgShapeCreationRequestAck::Swap(MsgShapeCreationRequestAck* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgShapeCreationRequestAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgShapeCreationRequestAck_descriptor_;
  metadata.reflection = MsgShapeCreationRequestAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgShapeUpdateRequestAck::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

MsgShapeUpdateRequestAck::MsgShapeUpdateRequestAck() {
  SharedCtor();
}

void MsgShapeUpdateRequestAck::InitAsDefaultInstance() {
}

MsgShapeUpdateRequestAck::MsgShapeUpdateRequestAck(const MsgShapeUpdateRequestAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgShapeUpdateRequestAck::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgShapeUpdateRequestAck::~MsgShapeUpdateRequestAck() {
  SharedDtor();
}

void MsgShapeUpdateRequestAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgShapeUpdateRequestAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgShapeUpdateRequestAck_descriptor_;
}

const MsgShapeUpdateRequestAck& MsgShapeUpdateRequestAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgShapeUpdateRequestAck* MsgShapeUpdateRequestAck::default_instance_ = NULL;

MsgShapeUpdateRequestAck* MsgShapeUpdateRequestAck::New() const {
  return new MsgShapeUpdateRequestAck;
}

void MsgShapeUpdateRequestAck::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgShapeUpdateRequestAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgsMessengerToClient.ShapeRequestAck.ErrorCode error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsMessengerToClient::ShapeRequestAck_ErrorCode_IsValid(value)) {
          set_error_code(static_cast< ::MsgsMessengerToClient::ShapeRequestAck_ErrorCode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgShapeUpdateRequestAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgShapeUpdateRequestAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .MsgsMessengerToClient.ShapeRequestAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgShapeUpdateRequestAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .MsgsMessengerToClient.ShapeRequestAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgShapeUpdateRequestAck::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgsMessengerToClient.ShapeRequestAck.ErrorCode error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgShapeUpdateRequestAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgShapeUpdateRequestAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgShapeUpdateRequestAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgShapeUpdateRequestAck::MergeFrom(const MsgShapeUpdateRequestAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgShapeUpdateRequestAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgShapeUpdateRequestAck::CopyFrom(const MsgShapeUpdateRequestAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgShapeUpdateRequestAck::IsInitialized() const {
  
  return true;
}

void MsgShapeUpdateRequestAck::Swap(MsgShapeUpdateRequestAck* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgShapeUpdateRequestAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgShapeUpdateRequestAck_descriptor_;
  metadata.reflection = MsgShapeUpdateRequestAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgShapeDestructionRequestAck::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

MsgShapeDestructionRequestAck::MsgShapeDestructionRequestAck() {
  SharedCtor();
}

void MsgShapeDestructionRequestAck::InitAsDefaultInstance() {
}

MsgShapeDestructionRequestAck::MsgShapeDestructionRequestAck(const MsgShapeDestructionRequestAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgShapeDestructionRequestAck::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgShapeDestructionRequestAck::~MsgShapeDestructionRequestAck() {
  SharedDtor();
}

void MsgShapeDestructionRequestAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgShapeDestructionRequestAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgShapeDestructionRequestAck_descriptor_;
}

const MsgShapeDestructionRequestAck& MsgShapeDestructionRequestAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgShapeDestructionRequestAck* MsgShapeDestructionRequestAck::default_instance_ = NULL;

MsgShapeDestructionRequestAck* MsgShapeDestructionRequestAck::New() const {
  return new MsgShapeDestructionRequestAck;
}

void MsgShapeDestructionRequestAck::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgShapeDestructionRequestAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MsgsMessengerToClient.ShapeRequestAck.ErrorCode error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsMessengerToClient::ShapeRequestAck_ErrorCode_IsValid(value)) {
          set_error_code(static_cast< ::MsgsMessengerToClient::ShapeRequestAck_ErrorCode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgShapeDestructionRequestAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgShapeDestructionRequestAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .MsgsMessengerToClient.ShapeRequestAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgShapeDestructionRequestAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .MsgsMessengerToClient.ShapeRequestAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgShapeDestructionRequestAck::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .MsgsMessengerToClient.ShapeRequestAck.ErrorCode error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgShapeDestructionRequestAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgShapeDestructionRequestAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgShapeDestructionRequestAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgShapeDestructionRequestAck::MergeFrom(const MsgShapeDestructionRequestAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgShapeDestructionRequestAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgShapeDestructionRequestAck::CopyFrom(const MsgShapeDestructionRequestAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgShapeDestructionRequestAck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgShapeDestructionRequestAck::Swap(MsgShapeDestructionRequestAck* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgShapeDestructionRequestAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgShapeDestructionRequestAck_descriptor_;
  metadata.reflection = MsgShapeDestructionRequestAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMarkerCreation::kMarkerFieldNumber;
const int MsgMarkerCreation::kDefinitionFieldNumber;
const int MsgMarkerCreation::kDateFieldNumber;
#endif  // !_MSC_VER

MsgMarkerCreation::MsgMarkerCreation() {
  SharedCtor();
}

void MsgMarkerCreation::InitAsDefaultInstance() {
  marker_ = const_cast< ::Common::MarkerId*>(&::Common::MarkerId::default_instance());
  definition_ = const_cast< ::Common::MsgMarker*>(&::Common::MsgMarker::default_instance());
  date_ = const_cast< ::Common::MsgDateTime*>(&::Common::MsgDateTime::default_instance());
}

MsgMarkerCreation::MsgMarkerCreation(const MsgMarkerCreation& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMarkerCreation::SharedCtor() {
  _cached_size_ = 0;
  marker_ = NULL;
  definition_ = NULL;
  date_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMarkerCreation::~MsgMarkerCreation() {
  SharedDtor();
}

void MsgMarkerCreation::SharedDtor() {
  if (this != default_instance_) {
    delete marker_;
    delete definition_;
    delete date_;
  }
}

const ::google::protobuf::Descriptor* MsgMarkerCreation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMarkerCreation_descriptor_;
}

const MsgMarkerCreation& MsgMarkerCreation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgMarkerCreation* MsgMarkerCreation::default_instance_ = NULL;

MsgMarkerCreation* MsgMarkerCreation::New() const {
  return new MsgMarkerCreation;
}

void MsgMarkerCreation::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (marker_ != NULL) marker_->::Common::MarkerId::Clear();
    }
    if (_has_bit(1)) {
      if (definition_ != NULL) definition_->::Common::MsgMarker::Clear();
    }
    if (_has_bit(2)) {
      if (date_ != NULL) date_->::Common::MsgDateTime::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMarkerCreation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MarkerId marker = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_marker()));
        if (input->ExpectTag(18)) goto parse_definition;
        break;
      }
      
      // required .Common.MsgMarker definition = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_definition:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_definition()));
        if (input->ExpectTag(26)) goto parse_date;
        break;
      }
      
      // required .Common.MsgDateTime date = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_date:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_date()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMarkerCreation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMarkerCreation::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MarkerId marker = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->marker(), output);
  }
  
  // required .Common.MsgMarker definition = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->definition(), output);
  }
  
  // required .Common.MsgDateTime date = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->date(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMarkerCreation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MarkerId marker = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->marker(), target);
  }
  
  // required .Common.MsgMarker definition = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->definition(), target);
  }
  
  // required .Common.MsgDateTime date = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->date(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMarkerCreation::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MarkerId marker = 1;
    if (has_marker()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->marker());
    }
    
    // required .Common.MsgMarker definition = 2;
    if (has_definition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->definition());
    }
    
    // required .Common.MsgDateTime date = 3;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->date());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMarkerCreation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMarkerCreation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMarkerCreation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMarkerCreation::MergeFrom(const MsgMarkerCreation& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_marker()->::Common::MarkerId::MergeFrom(from.marker());
    }
    if (from._has_bit(1)) {
      mutable_definition()->::Common::MsgMarker::MergeFrom(from.definition());
    }
    if (from._has_bit(2)) {
      mutable_date()->::Common::MsgDateTime::MergeFrom(from.date());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMarkerCreation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMarkerCreation::CopyFrom(const MsgMarkerCreation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMarkerCreation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  if (has_marker()) {
    if (!this->marker().IsInitialized()) return false;
  }
  if (has_definition()) {
    if (!this->definition().IsInitialized()) return false;
  }
  if (has_date()) {
    if (!this->date().IsInitialized()) return false;
  }
  return true;
}

void MsgMarkerCreation::Swap(MsgMarkerCreation* other) {
  if (other != this) {
    std::swap(marker_, other->marker_);
    std::swap(definition_, other->definition_);
    std::swap(date_, other->date_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMarkerCreation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMarkerCreation_descriptor_;
  metadata.reflection = MsgMarkerCreation_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgMarkerUpdate::_default_name_;
const ::std::string MsgMarkerUpdate::_default_description_;
const ::std::string MsgMarkerUpdate::_default_number_;
#ifndef _MSC_VER
const int MsgMarkerUpdate::kMarkerFieldNumber;
const int MsgMarkerUpdate::kDateFieldNumber;
const int MsgMarkerUpdate::kNameFieldNumber;
const int MsgMarkerUpdate::kDescriptionFieldNumber;
const int MsgMarkerUpdate::kParentFieldNumber;
const int MsgMarkerUpdate::kNumberFieldNumber;
#endif  // !_MSC_VER

MsgMarkerUpdate::MsgMarkerUpdate() {
  SharedCtor();
}

void MsgMarkerUpdate::InitAsDefaultInstance() {
  marker_ = const_cast< ::Common::MarkerId*>(&::Common::MarkerId::default_instance());
  date_ = const_cast< ::Common::MsgDateTime*>(&::Common::MsgDateTime::default_instance());
  parent_ = const_cast< ::Common::MarkerId*>(&::Common::MarkerId::default_instance());
}

MsgMarkerUpdate::MsgMarkerUpdate(const MsgMarkerUpdate& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMarkerUpdate::SharedCtor() {
  _cached_size_ = 0;
  marker_ = NULL;
  date_ = NULL;
  name_ = const_cast< ::std::string*>(&_default_name_);
  description_ = const_cast< ::std::string*>(&_default_description_);
  parent_ = NULL;
  number_ = const_cast< ::std::string*>(&_default_number_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMarkerUpdate::~MsgMarkerUpdate() {
  SharedDtor();
}

void MsgMarkerUpdate::SharedDtor() {
  if (name_ != &_default_name_) {
    delete name_;
  }
  if (description_ != &_default_description_) {
    delete description_;
  }
  if (number_ != &_default_number_) {
    delete number_;
  }
  if (this != default_instance_) {
    delete marker_;
    delete date_;
    delete parent_;
  }
}

const ::google::protobuf::Descriptor* MsgMarkerUpdate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMarkerUpdate_descriptor_;
}

const MsgMarkerUpdate& MsgMarkerUpdate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgMarkerUpdate* MsgMarkerUpdate::default_instance_ = NULL;

MsgMarkerUpdate* MsgMarkerUpdate::New() const {
  return new MsgMarkerUpdate;
}

void MsgMarkerUpdate::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (marker_ != NULL) marker_->::Common::MarkerId::Clear();
    }
    if (_has_bit(1)) {
      if (date_ != NULL) date_->::Common::MsgDateTime::Clear();
    }
    if (_has_bit(2)) {
      if (name_ != &_default_name_) {
        name_->clear();
      }
    }
    if (_has_bit(3)) {
      if (description_ != &_default_description_) {
        description_->clear();
      }
    }
    if (_has_bit(4)) {
      if (parent_ != NULL) parent_->::Common::MarkerId::Clear();
    }
    if (_has_bit(5)) {
      if (number_ != &_default_number_) {
        number_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMarkerUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MarkerId marker = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_marker()));
        if (input->ExpectTag(18)) goto parse_date;
        break;
      }
      
      // required .Common.MsgDateTime date = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_date:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_date()));
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }
      
      // optional string name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_name:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_name()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->name().data(), this->name().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(34)) goto parse_description;
        break;
      }
      
      // optional string description = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_description:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_description()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->description().data(), this->description().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(42)) goto parse_parent;
        break;
      }
      
      // optional .Common.MarkerId parent = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_parent:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_parent()));
        if (input->ExpectTag(50)) goto parse_number;
        break;
      }
      
      // optional string number = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_number:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_number()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->number().data(), this->number().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMarkerUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMarkerUpdate::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MarkerId marker = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->marker(), output);
  }
  
  // required .Common.MsgDateTime date = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->date(), output);
  }
  
  // optional string name = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->name(), output);
  }
  
  // optional string description = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->description(), output);
  }
  
  // optional .Common.MarkerId parent = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      5, this->parent(), output);
  }
  
  // optional string number = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->number().data(), this->number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->number(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMarkerUpdate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MarkerId marker = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->marker(), target);
  }
  
  // required .Common.MsgDateTime date = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->date(), target);
  }
  
  // optional string name = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }
  
  // optional string description = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->description(), target);
  }
  
  // optional .Common.MarkerId parent = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->parent(), target);
  }
  
  // optional string number = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->number().data(), this->number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->number(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMarkerUpdate::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MarkerId marker = 1;
    if (has_marker()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->marker());
    }
    
    // required .Common.MsgDateTime date = 2;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->date());
    }
    
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // optional string description = 4;
    if (has_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }
    
    // optional .Common.MarkerId parent = 5;
    if (has_parent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parent());
    }
    
    // optional string number = 6;
    if (has_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->number());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMarkerUpdate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMarkerUpdate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMarkerUpdate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMarkerUpdate::MergeFrom(const MsgMarkerUpdate& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_marker()->::Common::MarkerId::MergeFrom(from.marker());
    }
    if (from._has_bit(1)) {
      mutable_date()->::Common::MsgDateTime::MergeFrom(from.date());
    }
    if (from._has_bit(2)) {
      set_name(from.name());
    }
    if (from._has_bit(3)) {
      set_description(from.description());
    }
    if (from._has_bit(4)) {
      mutable_parent()->::Common::MarkerId::MergeFrom(from.parent());
    }
    if (from._has_bit(5)) {
      set_number(from.number());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMarkerUpdate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMarkerUpdate::CopyFrom(const MsgMarkerUpdate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMarkerUpdate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_marker()) {
    if (!this->marker().IsInitialized()) return false;
  }
  if (has_date()) {
    if (!this->date().IsInitialized()) return false;
  }
  if (has_parent()) {
    if (!this->parent().IsInitialized()) return false;
  }
  return true;
}

void MsgMarkerUpdate::Swap(MsgMarkerUpdate* other) {
  if (other != this) {
    std::swap(marker_, other->marker_);
    std::swap(date_, other->date_);
    std::swap(name_, other->name_);
    std::swap(description_, other->description_);
    std::swap(parent_, other->parent_);
    std::swap(number_, other->number_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMarkerUpdate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMarkerUpdate_descriptor_;
  metadata.reflection = MsgMarkerUpdate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMarkerDestruction::kMarkerFieldNumber;
#endif  // !_MSC_VER

MsgMarkerDestruction::MsgMarkerDestruction() {
  SharedCtor();
}

void MsgMarkerDestruction::InitAsDefaultInstance() {
  marker_ = const_cast< ::Common::MarkerId*>(&::Common::MarkerId::default_instance());
}

MsgMarkerDestruction::MsgMarkerDestruction(const MsgMarkerDestruction& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMarkerDestruction::SharedCtor() {
  _cached_size_ = 0;
  marker_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMarkerDestruction::~MsgMarkerDestruction() {
  SharedDtor();
}

void MsgMarkerDestruction::SharedDtor() {
  if (this != default_instance_) {
    delete marker_;
  }
}

const ::google::protobuf::Descriptor* MsgMarkerDestruction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMarkerDestruction_descriptor_;
}

const MsgMarkerDestruction& MsgMarkerDestruction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgMarkerDestruction* MsgMarkerDestruction::default_instance_ = NULL;

MsgMarkerDestruction* MsgMarkerDestruction::New() const {
  return new MsgMarkerDestruction;
}

void MsgMarkerDestruction::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (marker_ != NULL) marker_->::Common::MarkerId::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMarkerDestruction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MarkerId marker = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_marker()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMarkerDestruction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMarkerDestruction::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MarkerId marker = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->marker(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMarkerDestruction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MarkerId marker = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->marker(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMarkerDestruction::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MarkerId marker = 1;
    if (has_marker()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->marker());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMarkerDestruction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMarkerDestruction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMarkerDestruction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMarkerDestruction::MergeFrom(const MsgMarkerDestruction& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_marker()->::Common::MarkerId::MergeFrom(from.marker());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMarkerDestruction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMarkerDestruction::CopyFrom(const MsgMarkerDestruction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMarkerDestruction::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_marker()) {
    if (!this->marker().IsInitialized()) return false;
  }
  return true;
}

void MsgMarkerDestruction::Swap(MsgMarkerDestruction* other) {
  if (other != this) {
    std::swap(marker_, other->marker_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMarkerDestruction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMarkerDestruction_descriptor_;
  metadata.reflection = MsgMarkerDestruction_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MarkerRequestAck_ErrorCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MarkerRequestAck_ErrorCode_descriptor_;
}
bool MarkerRequestAck_ErrorCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MarkerRequestAck_ErrorCode MarkerRequestAck::no_error;
const MarkerRequestAck_ErrorCode MarkerRequestAck::error_invalid_id;
const MarkerRequestAck_ErrorCode MarkerRequestAck::error_invalid_parent;
const MarkerRequestAck_ErrorCode MarkerRequestAck::ErrorCode_MIN;
const MarkerRequestAck_ErrorCode MarkerRequestAck::ErrorCode_MAX;
#endif  // _MSC_VER
#ifndef _MSC_VER
#endif  // !_MSC_VER

MarkerRequestAck::MarkerRequestAck() {
  SharedCtor();
}

void MarkerRequestAck::InitAsDefaultInstance() {
}

MarkerRequestAck::MarkerRequestAck(const MarkerRequestAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void MarkerRequestAck::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MarkerRequestAck::~MarkerRequestAck() {
  SharedDtor();
}

void MarkerRequestAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MarkerRequestAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MarkerRequestAck_descriptor_;
}

const MarkerRequestAck& MarkerRequestAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MarkerRequestAck* MarkerRequestAck::default_instance_ = NULL;

MarkerRequestAck* MarkerRequestAck::New() const {
  return new MarkerRequestAck;
}

void MarkerRequestAck::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MarkerRequestAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void MarkerRequestAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MarkerRequestAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MarkerRequestAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MarkerRequestAck::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MarkerRequestAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MarkerRequestAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MarkerRequestAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MarkerRequestAck::MergeFrom(const MarkerRequestAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MarkerRequestAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MarkerRequestAck::CopyFrom(const MarkerRequestAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarkerRequestAck::IsInitialized() const {
  
  return true;
}

void MarkerRequestAck::Swap(MarkerRequestAck* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MarkerRequestAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MarkerRequestAck_descriptor_;
  metadata.reflection = MarkerRequestAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMarkerCreationRequestAck::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

MsgMarkerCreationRequestAck::MsgMarkerCreationRequestAck() {
  SharedCtor();
}

void MsgMarkerCreationRequestAck::InitAsDefaultInstance() {
}

MsgMarkerCreationRequestAck::MsgMarkerCreationRequestAck(const MsgMarkerCreationRequestAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMarkerCreationRequestAck::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMarkerCreationRequestAck::~MsgMarkerCreationRequestAck() {
  SharedDtor();
}

void MsgMarkerCreationRequestAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgMarkerCreationRequestAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMarkerCreationRequestAck_descriptor_;
}

const MsgMarkerCreationRequestAck& MsgMarkerCreationRequestAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgMarkerCreationRequestAck* MsgMarkerCreationRequestAck::default_instance_ = NULL;

MsgMarkerCreationRequestAck* MsgMarkerCreationRequestAck::New() const {
  return new MsgMarkerCreationRequestAck;
}

void MsgMarkerCreationRequestAck::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMarkerCreationRequestAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MsgsMessengerToClient.MarkerRequestAck.ErrorCode error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsMessengerToClient::MarkerRequestAck_ErrorCode_IsValid(value)) {
          set_error_code(static_cast< ::MsgsMessengerToClient::MarkerRequestAck_ErrorCode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMarkerCreationRequestAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMarkerCreationRequestAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .MsgsMessengerToClient.MarkerRequestAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMarkerCreationRequestAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .MsgsMessengerToClient.MarkerRequestAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMarkerCreationRequestAck::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .MsgsMessengerToClient.MarkerRequestAck.ErrorCode error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMarkerCreationRequestAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMarkerCreationRequestAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMarkerCreationRequestAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMarkerCreationRequestAck::MergeFrom(const MsgMarkerCreationRequestAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMarkerCreationRequestAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMarkerCreationRequestAck::CopyFrom(const MsgMarkerCreationRequestAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMarkerCreationRequestAck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgMarkerCreationRequestAck::Swap(MsgMarkerCreationRequestAck* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMarkerCreationRequestAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMarkerCreationRequestAck_descriptor_;
  metadata.reflection = MsgMarkerCreationRequestAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMarkerUpdateRequestAck::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

MsgMarkerUpdateRequestAck::MsgMarkerUpdateRequestAck() {
  SharedCtor();
}

void MsgMarkerUpdateRequestAck::InitAsDefaultInstance() {
}

MsgMarkerUpdateRequestAck::MsgMarkerUpdateRequestAck(const MsgMarkerUpdateRequestAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMarkerUpdateRequestAck::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMarkerUpdateRequestAck::~MsgMarkerUpdateRequestAck() {
  SharedDtor();
}

void MsgMarkerUpdateRequestAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgMarkerUpdateRequestAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMarkerUpdateRequestAck_descriptor_;
}

const MsgMarkerUpdateRequestAck& MsgMarkerUpdateRequestAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgMarkerUpdateRequestAck* MsgMarkerUpdateRequestAck::default_instance_ = NULL;

MsgMarkerUpdateRequestAck* MsgMarkerUpdateRequestAck::New() const {
  return new MsgMarkerUpdateRequestAck;
}

void MsgMarkerUpdateRequestAck::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMarkerUpdateRequestAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgsMessengerToClient.MarkerRequestAck.ErrorCode error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsMessengerToClient::MarkerRequestAck_ErrorCode_IsValid(value)) {
          set_error_code(static_cast< ::MsgsMessengerToClient::MarkerRequestAck_ErrorCode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMarkerUpdateRequestAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMarkerUpdateRequestAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .MsgsMessengerToClient.MarkerRequestAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMarkerUpdateRequestAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .MsgsMessengerToClient.MarkerRequestAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMarkerUpdateRequestAck::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgsMessengerToClient.MarkerRequestAck.ErrorCode error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMarkerUpdateRequestAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMarkerUpdateRequestAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMarkerUpdateRequestAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMarkerUpdateRequestAck::MergeFrom(const MsgMarkerUpdateRequestAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMarkerUpdateRequestAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMarkerUpdateRequestAck::CopyFrom(const MsgMarkerUpdateRequestAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMarkerUpdateRequestAck::IsInitialized() const {
  
  return true;
}

void MsgMarkerUpdateRequestAck::Swap(MsgMarkerUpdateRequestAck* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMarkerUpdateRequestAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMarkerUpdateRequestAck_descriptor_;
  metadata.reflection = MsgMarkerUpdateRequestAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMarkerDestructionRequestAck::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

MsgMarkerDestructionRequestAck::MsgMarkerDestructionRequestAck() {
  SharedCtor();
}

void MsgMarkerDestructionRequestAck::InitAsDefaultInstance() {
}

MsgMarkerDestructionRequestAck::MsgMarkerDestructionRequestAck(const MsgMarkerDestructionRequestAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMarkerDestructionRequestAck::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMarkerDestructionRequestAck::~MsgMarkerDestructionRequestAck() {
  SharedDtor();
}

void MsgMarkerDestructionRequestAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgMarkerDestructionRequestAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMarkerDestructionRequestAck_descriptor_;
}

const MsgMarkerDestructionRequestAck& MsgMarkerDestructionRequestAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgMarkerDestructionRequestAck* MsgMarkerDestructionRequestAck::default_instance_ = NULL;

MsgMarkerDestructionRequestAck* MsgMarkerDestructionRequestAck::New() const {
  return new MsgMarkerDestructionRequestAck;
}

void MsgMarkerDestructionRequestAck::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMarkerDestructionRequestAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MsgsMessengerToClient.MarkerRequestAck.ErrorCode error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsMessengerToClient::MarkerRequestAck_ErrorCode_IsValid(value)) {
          set_error_code(static_cast< ::MsgsMessengerToClient::MarkerRequestAck_ErrorCode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMarkerDestructionRequestAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMarkerDestructionRequestAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .MsgsMessengerToClient.MarkerRequestAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMarkerDestructionRequestAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .MsgsMessengerToClient.MarkerRequestAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMarkerDestructionRequestAck::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .MsgsMessengerToClient.MarkerRequestAck.ErrorCode error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMarkerDestructionRequestAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMarkerDestructionRequestAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMarkerDestructionRequestAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMarkerDestructionRequestAck::MergeFrom(const MsgMarkerDestructionRequestAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMarkerDestructionRequestAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMarkerDestructionRequestAck::CopyFrom(const MsgMarkerDestructionRequestAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMarkerDestructionRequestAck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgMarkerDestructionRequestAck::Swap(MsgMarkerDestructionRequestAck* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMarkerDestructionRequestAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMarkerDestructionRequestAck_descriptor_;
  metadata.reflection = MsgMarkerDestructionRequestAck_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* ClientObjectAck_ErrorCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientObjectAck_ErrorCode_descriptor_;
}
bool ClientObjectAck_ErrorCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const ClientObjectAck_ErrorCode ClientObjectAck::success;
const ClientObjectAck_ErrorCode ClientObjectAck::duplicate_attribute_name;
const ClientObjectAck_ErrorCode ClientObjectAck::invalid_attribute_name;
const ClientObjectAck_ErrorCode ClientObjectAck::invalid_object_id;
const ClientObjectAck_ErrorCode ClientObjectAck::ErrorCode_MIN;
const ClientObjectAck_ErrorCode ClientObjectAck::ErrorCode_MAX;
#endif  // _MSC_VER
#ifndef _MSC_VER
#endif  // !_MSC_VER

ClientObjectAck::ClientObjectAck() {
  SharedCtor();
}

void ClientObjectAck::InitAsDefaultInstance() {
}

ClientObjectAck::ClientObjectAck(const ClientObjectAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void ClientObjectAck::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClientObjectAck::~ClientObjectAck() {
  SharedDtor();
}

void ClientObjectAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* ClientObjectAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientObjectAck_descriptor_;
}

const ClientObjectAck& ClientObjectAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

ClientObjectAck* ClientObjectAck::default_instance_ = NULL;

ClientObjectAck* ClientObjectAck::New() const {
  return new ClientObjectAck;
}

void ClientObjectAck::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ClientObjectAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ClientObjectAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    ClientObjectAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ClientObjectAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ClientObjectAck::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void ClientObjectAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ClientObjectAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ClientObjectAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ClientObjectAck::MergeFrom(const ClientObjectAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ClientObjectAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientObjectAck::CopyFrom(const ClientObjectAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientObjectAck::IsInitialized() const {
  
  return true;
}

void ClientObjectAck::Swap(ClientObjectAck* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ClientObjectAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientObjectAck_descriptor_;
  metadata.reflection = ClientObjectAck_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgClientObjectCreation::_default_name_;
#ifndef _MSC_VER
const int MsgClientObjectCreation::kObjectFieldNumber;
const int MsgClientObjectCreation::kNameFieldNumber;
const int MsgClientObjectCreation::kPropertiesFieldNumber;
#endif  // !_MSC_VER

MsgClientObjectCreation::MsgClientObjectCreation() {
  SharedCtor();
}

void MsgClientObjectCreation::InitAsDefaultInstance() {
  object_ = const_cast< ::Common::ClientObjectId*>(&::Common::ClientObjectId::default_instance());
}

MsgClientObjectCreation::MsgClientObjectCreation(const MsgClientObjectCreation& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgClientObjectCreation::SharedCtor() {
  _cached_size_ = 0;
  object_ = NULL;
  name_ = const_cast< ::std::string*>(&_default_name_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgClientObjectCreation::~MsgClientObjectCreation() {
  SharedDtor();
}

void MsgClientObjectCreation::SharedDtor() {
  if (name_ != &_default_name_) {
    delete name_;
  }
  if (this != default_instance_) {
    delete object_;
  }
}

const ::google::protobuf::Descriptor* MsgClientObjectCreation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgClientObjectCreation_descriptor_;
}

const MsgClientObjectCreation& MsgClientObjectCreation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgClientObjectCreation* MsgClientObjectCreation::default_instance_ = NULL;

MsgClientObjectCreation* MsgClientObjectCreation::New() const {
  return new MsgClientObjectCreation;
}

void MsgClientObjectCreation::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (object_ != NULL) object_->::Common::ClientObjectId::Clear();
    }
    if (_has_bit(1)) {
      if (name_ != &_default_name_) {
        name_->clear();
      }
    }
  }
  properties_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgClientObjectCreation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.ClientObjectId object = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_object()));
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }
      
      // required string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_name:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_name()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->name().data(), this->name().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(26)) goto parse_properties;
        break;
      }
      
      // repeated .Common.ClientObjectProperty properties = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_properties:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_properties()));
        if (input->ExpectTag(26)) goto parse_properties;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgClientObjectCreation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgClientObjectCreation::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.ClientObjectId object = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->object(), output);
  }
  
  // required string name = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }
  
  // repeated .Common.ClientObjectProperty properties = 3;
  for (int i = 0; i < this->properties_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->properties(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgClientObjectCreation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.ClientObjectId object = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->object(), target);
  }
  
  // required string name = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }
  
  // repeated .Common.ClientObjectProperty properties = 3;
  for (int i = 0; i < this->properties_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->properties(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgClientObjectCreation::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.ClientObjectId object = 1;
    if (has_object()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->object());
    }
    
    // required string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
  }
  // repeated .Common.ClientObjectProperty properties = 3;
  total_size += 1 * this->properties_size();
  for (int i = 0; i < this->properties_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->properties(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgClientObjectCreation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgClientObjectCreation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgClientObjectCreation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgClientObjectCreation::MergeFrom(const MsgClientObjectCreation& from) {
  GOOGLE_CHECK_NE(&from, this);
  properties_.MergeFrom(from.properties_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_object()->::Common::ClientObjectId::MergeFrom(from.object());
    }
    if (from._has_bit(1)) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgClientObjectCreation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgClientObjectCreation::CopyFrom(const MsgClientObjectCreation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgClientObjectCreation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_object()) {
    if (!this->object().IsInitialized()) return false;
  }
  for (int i = 0; i < properties_size(); i++) {
    if (!this->properties(i).IsInitialized()) return false;
  }
  return true;
}

void MsgClientObjectCreation::Swap(MsgClientObjectCreation* other) {
  if (other != this) {
    std::swap(object_, other->object_);
    std::swap(name_, other->name_);
    properties_.Swap(&other->properties_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgClientObjectCreation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgClientObjectCreation_descriptor_;
  metadata.reflection = MsgClientObjectCreation_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgClientObjectUpdate::_default_name_;
#ifndef _MSC_VER
const int MsgClientObjectUpdate::kObjectFieldNumber;
const int MsgClientObjectUpdate::kNameFieldNumber;
const int MsgClientObjectUpdate::kPropertiesFieldNumber;
#endif  // !_MSC_VER

MsgClientObjectUpdate::MsgClientObjectUpdate() {
  SharedCtor();
}

void MsgClientObjectUpdate::InitAsDefaultInstance() {
  object_ = const_cast< ::Common::ClientObjectId*>(&::Common::ClientObjectId::default_instance());
}

MsgClientObjectUpdate::MsgClientObjectUpdate(const MsgClientObjectUpdate& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgClientObjectUpdate::SharedCtor() {
  _cached_size_ = 0;
  object_ = NULL;
  name_ = const_cast< ::std::string*>(&_default_name_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgClientObjectUpdate::~MsgClientObjectUpdate() {
  SharedDtor();
}

void MsgClientObjectUpdate::SharedDtor() {
  if (name_ != &_default_name_) {
    delete name_;
  }
  if (this != default_instance_) {
    delete object_;
  }
}

const ::google::protobuf::Descriptor* MsgClientObjectUpdate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgClientObjectUpdate_descriptor_;
}

const MsgClientObjectUpdate& MsgClientObjectUpdate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgClientObjectUpdate* MsgClientObjectUpdate::default_instance_ = NULL;

MsgClientObjectUpdate* MsgClientObjectUpdate::New() const {
  return new MsgClientObjectUpdate;
}

void MsgClientObjectUpdate::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (object_ != NULL) object_->::Common::ClientObjectId::Clear();
    }
    if (_has_bit(1)) {
      if (name_ != &_default_name_) {
        name_->clear();
      }
    }
  }
  properties_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgClientObjectUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.ClientObjectId object = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_object()));
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }
      
      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_name:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_name()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->name().data(), this->name().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(26)) goto parse_properties;
        break;
      }
      
      // repeated .Common.ClientObjectProperty properties = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_properties:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_properties()));
        if (input->ExpectTag(26)) goto parse_properties;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgClientObjectUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgClientObjectUpdate::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.ClientObjectId object = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->object(), output);
  }
  
  // optional string name = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }
  
  // repeated .Common.ClientObjectProperty properties = 3;
  for (int i = 0; i < this->properties_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->properties(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgClientObjectUpdate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.ClientObjectId object = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->object(), target);
  }
  
  // optional string name = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }
  
  // repeated .Common.ClientObjectProperty properties = 3;
  for (int i = 0; i < this->properties_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->properties(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgClientObjectUpdate::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.ClientObjectId object = 1;
    if (has_object()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->object());
    }
    
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
  }
  // repeated .Common.ClientObjectProperty properties = 3;
  total_size += 1 * this->properties_size();
  for (int i = 0; i < this->properties_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->properties(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgClientObjectUpdate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgClientObjectUpdate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgClientObjectUpdate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgClientObjectUpdate::MergeFrom(const MsgClientObjectUpdate& from) {
  GOOGLE_CHECK_NE(&from, this);
  properties_.MergeFrom(from.properties_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_object()->::Common::ClientObjectId::MergeFrom(from.object());
    }
    if (from._has_bit(1)) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgClientObjectUpdate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgClientObjectUpdate::CopyFrom(const MsgClientObjectUpdate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgClientObjectUpdate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_object()) {
    if (!this->object().IsInitialized()) return false;
  }
  for (int i = 0; i < properties_size(); i++) {
    if (!this->properties(i).IsInitialized()) return false;
  }
  return true;
}

void MsgClientObjectUpdate::Swap(MsgClientObjectUpdate* other) {
  if (other != this) {
    std::swap(object_, other->object_);
    std::swap(name_, other->name_);
    properties_.Swap(&other->properties_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgClientObjectUpdate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgClientObjectUpdate_descriptor_;
  metadata.reflection = MsgClientObjectUpdate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgClientObjectDestruction::kObjectFieldNumber;
#endif  // !_MSC_VER

MsgClientObjectDestruction::MsgClientObjectDestruction() {
  SharedCtor();
}

void MsgClientObjectDestruction::InitAsDefaultInstance() {
  object_ = const_cast< ::Common::ClientObjectId*>(&::Common::ClientObjectId::default_instance());
}

MsgClientObjectDestruction::MsgClientObjectDestruction(const MsgClientObjectDestruction& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgClientObjectDestruction::SharedCtor() {
  _cached_size_ = 0;
  object_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgClientObjectDestruction::~MsgClientObjectDestruction() {
  SharedDtor();
}

void MsgClientObjectDestruction::SharedDtor() {
  if (this != default_instance_) {
    delete object_;
  }
}

const ::google::protobuf::Descriptor* MsgClientObjectDestruction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgClientObjectDestruction_descriptor_;
}

const MsgClientObjectDestruction& MsgClientObjectDestruction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgClientObjectDestruction* MsgClientObjectDestruction::default_instance_ = NULL;

MsgClientObjectDestruction* MsgClientObjectDestruction::New() const {
  return new MsgClientObjectDestruction;
}

void MsgClientObjectDestruction::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (object_ != NULL) object_->::Common::ClientObjectId::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgClientObjectDestruction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.ClientObjectId object = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_object()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgClientObjectDestruction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgClientObjectDestruction::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.ClientObjectId object = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->object(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgClientObjectDestruction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.ClientObjectId object = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->object(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgClientObjectDestruction::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.ClientObjectId object = 1;
    if (has_object()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->object());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgClientObjectDestruction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgClientObjectDestruction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgClientObjectDestruction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgClientObjectDestruction::MergeFrom(const MsgClientObjectDestruction& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_object()->::Common::ClientObjectId::MergeFrom(from.object());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgClientObjectDestruction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgClientObjectDestruction::CopyFrom(const MsgClientObjectDestruction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgClientObjectDestruction::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_object()) {
    if (!this->object().IsInitialized()) return false;
  }
  return true;
}

void MsgClientObjectDestruction::Swap(MsgClientObjectDestruction* other) {
  if (other != this) {
    std::swap(object_, other->object_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgClientObjectDestruction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgClientObjectDestruction_descriptor_;
  metadata.reflection = MsgClientObjectDestruction_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgClientObjectCreationRequestAck::_default_name_;
#ifndef _MSC_VER
const int MsgClientObjectCreationRequestAck::kNameFieldNumber;
const int MsgClientObjectCreationRequestAck::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

MsgClientObjectCreationRequestAck::MsgClientObjectCreationRequestAck() {
  SharedCtor();
}

void MsgClientObjectCreationRequestAck::InitAsDefaultInstance() {
}

MsgClientObjectCreationRequestAck::MsgClientObjectCreationRequestAck(const MsgClientObjectCreationRequestAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgClientObjectCreationRequestAck::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&_default_name_);
  error_code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgClientObjectCreationRequestAck::~MsgClientObjectCreationRequestAck() {
  SharedDtor();
}

void MsgClientObjectCreationRequestAck::SharedDtor() {
  if (name_ != &_default_name_) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgClientObjectCreationRequestAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgClientObjectCreationRequestAck_descriptor_;
}

const MsgClientObjectCreationRequestAck& MsgClientObjectCreationRequestAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgClientObjectCreationRequestAck* MsgClientObjectCreationRequestAck::default_instance_ = NULL;

MsgClientObjectCreationRequestAck* MsgClientObjectCreationRequestAck::New() const {
  return new MsgClientObjectCreationRequestAck;
}

void MsgClientObjectCreationRequestAck::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (name_ != &_default_name_) {
        name_->clear();
      }
    }
    error_code_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgClientObjectCreationRequestAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_name()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->name().data(), this->name().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(16)) goto parse_error_code;
        break;
      }
      
      // required .MsgsMessengerToClient.ClientObjectAck.ErrorCode error_code = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_error_code:
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsMessengerToClient::ClientObjectAck_ErrorCode_IsValid(value)) {
          set_error_code(static_cast< ::MsgsMessengerToClient::ClientObjectAck_ErrorCode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(2, value);
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgClientObjectCreationRequestAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgClientObjectCreationRequestAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required string name = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }
  
  // required .MsgsMessengerToClient.ClientObjectAck.ErrorCode error_code = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->error_code(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgClientObjectCreationRequestAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }
  
  // required .MsgsMessengerToClient.ClientObjectAck.ErrorCode error_code = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->error_code(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgClientObjectCreationRequestAck::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // required .MsgsMessengerToClient.ClientObjectAck.ErrorCode error_code = 2;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgClientObjectCreationRequestAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgClientObjectCreationRequestAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgClientObjectCreationRequestAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgClientObjectCreationRequestAck::MergeFrom(const MsgClientObjectCreationRequestAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_name(from.name());
    }
    if (from._has_bit(1)) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgClientObjectCreationRequestAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgClientObjectCreationRequestAck::CopyFrom(const MsgClientObjectCreationRequestAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgClientObjectCreationRequestAck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void MsgClientObjectCreationRequestAck::Swap(MsgClientObjectCreationRequestAck* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgClientObjectCreationRequestAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgClientObjectCreationRequestAck_descriptor_;
  metadata.reflection = MsgClientObjectCreationRequestAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgClientObjectUpdateRequestAck::kObjectFieldNumber;
const int MsgClientObjectUpdateRequestAck::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

MsgClientObjectUpdateRequestAck::MsgClientObjectUpdateRequestAck() {
  SharedCtor();
}

void MsgClientObjectUpdateRequestAck::InitAsDefaultInstance() {
  object_ = const_cast< ::Common::ClientObjectId*>(&::Common::ClientObjectId::default_instance());
}

MsgClientObjectUpdateRequestAck::MsgClientObjectUpdateRequestAck(const MsgClientObjectUpdateRequestAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgClientObjectUpdateRequestAck::SharedCtor() {
  _cached_size_ = 0;
  object_ = NULL;
  error_code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgClientObjectUpdateRequestAck::~MsgClientObjectUpdateRequestAck() {
  SharedDtor();
}

void MsgClientObjectUpdateRequestAck::SharedDtor() {
  if (this != default_instance_) {
    delete object_;
  }
}

const ::google::protobuf::Descriptor* MsgClientObjectUpdateRequestAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgClientObjectUpdateRequestAck_descriptor_;
}

const MsgClientObjectUpdateRequestAck& MsgClientObjectUpdateRequestAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgClientObjectUpdateRequestAck* MsgClientObjectUpdateRequestAck::default_instance_ = NULL;

MsgClientObjectUpdateRequestAck* MsgClientObjectUpdateRequestAck::New() const {
  return new MsgClientObjectUpdateRequestAck;
}

void MsgClientObjectUpdateRequestAck::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (object_ != NULL) object_->::Common::ClientObjectId::Clear();
    }
    error_code_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgClientObjectUpdateRequestAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.ClientObjectId object = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_object()));
        if (input->ExpectTag(16)) goto parse_error_code;
        break;
      }
      
      // required .MsgsMessengerToClient.ClientObjectAck.ErrorCode error_code = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_error_code:
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsMessengerToClient::ClientObjectAck_ErrorCode_IsValid(value)) {
          set_error_code(static_cast< ::MsgsMessengerToClient::ClientObjectAck_ErrorCode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(2, value);
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgClientObjectUpdateRequestAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgClientObjectUpdateRequestAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.ClientObjectId object = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->object(), output);
  }
  
  // required .MsgsMessengerToClient.ClientObjectAck.ErrorCode error_code = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->error_code(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgClientObjectUpdateRequestAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.ClientObjectId object = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->object(), target);
  }
  
  // required .MsgsMessengerToClient.ClientObjectAck.ErrorCode error_code = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->error_code(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgClientObjectUpdateRequestAck::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.ClientObjectId object = 1;
    if (has_object()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->object());
    }
    
    // required .MsgsMessengerToClient.ClientObjectAck.ErrorCode error_code = 2;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgClientObjectUpdateRequestAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgClientObjectUpdateRequestAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgClientObjectUpdateRequestAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgClientObjectUpdateRequestAck::MergeFrom(const MsgClientObjectUpdateRequestAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_object()->::Common::ClientObjectId::MergeFrom(from.object());
    }
    if (from._has_bit(1)) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgClientObjectUpdateRequestAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgClientObjectUpdateRequestAck::CopyFrom(const MsgClientObjectUpdateRequestAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgClientObjectUpdateRequestAck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_object()) {
    if (!this->object().IsInitialized()) return false;
  }
  return true;
}

void MsgClientObjectUpdateRequestAck::Swap(MsgClientObjectUpdateRequestAck* other) {
  if (other != this) {
    std::swap(object_, other->object_);
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgClientObjectUpdateRequestAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgClientObjectUpdateRequestAck_descriptor_;
  metadata.reflection = MsgClientObjectUpdateRequestAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgClientObjectDestructionRequestAck::kObjectFieldNumber;
const int MsgClientObjectDestructionRequestAck::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

MsgClientObjectDestructionRequestAck::MsgClientObjectDestructionRequestAck() {
  SharedCtor();
}

void MsgClientObjectDestructionRequestAck::InitAsDefaultInstance() {
  object_ = const_cast< ::Common::ClientObjectId*>(&::Common::ClientObjectId::default_instance());
}

MsgClientObjectDestructionRequestAck::MsgClientObjectDestructionRequestAck(const MsgClientObjectDestructionRequestAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgClientObjectDestructionRequestAck::SharedCtor() {
  _cached_size_ = 0;
  object_ = NULL;
  error_code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgClientObjectDestructionRequestAck::~MsgClientObjectDestructionRequestAck() {
  SharedDtor();
}

void MsgClientObjectDestructionRequestAck::SharedDtor() {
  if (this != default_instance_) {
    delete object_;
  }
}

const ::google::protobuf::Descriptor* MsgClientObjectDestructionRequestAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgClientObjectDestructionRequestAck_descriptor_;
}

const MsgClientObjectDestructionRequestAck& MsgClientObjectDestructionRequestAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgClientObjectDestructionRequestAck* MsgClientObjectDestructionRequestAck::default_instance_ = NULL;

MsgClientObjectDestructionRequestAck* MsgClientObjectDestructionRequestAck::New() const {
  return new MsgClientObjectDestructionRequestAck;
}

void MsgClientObjectDestructionRequestAck::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (object_ != NULL) object_->::Common::ClientObjectId::Clear();
    }
    error_code_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgClientObjectDestructionRequestAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.ClientObjectId object = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_object()));
        if (input->ExpectTag(16)) goto parse_error_code;
        break;
      }
      
      // required .MsgsMessengerToClient.ClientObjectAck.ErrorCode error_code = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_error_code:
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsMessengerToClient::ClientObjectAck_ErrorCode_IsValid(value)) {
          set_error_code(static_cast< ::MsgsMessengerToClient::ClientObjectAck_ErrorCode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(2, value);
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgClientObjectDestructionRequestAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgClientObjectDestructionRequestAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.ClientObjectId object = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->object(), output);
  }
  
  // required .MsgsMessengerToClient.ClientObjectAck.ErrorCode error_code = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->error_code(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgClientObjectDestructionRequestAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.ClientObjectId object = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->object(), target);
  }
  
  // required .MsgsMessengerToClient.ClientObjectAck.ErrorCode error_code = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->error_code(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgClientObjectDestructionRequestAck::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.ClientObjectId object = 1;
    if (has_object()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->object());
    }
    
    // required .MsgsMessengerToClient.ClientObjectAck.ErrorCode error_code = 2;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgClientObjectDestructionRequestAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgClientObjectDestructionRequestAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgClientObjectDestructionRequestAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgClientObjectDestructionRequestAck::MergeFrom(const MsgClientObjectDestructionRequestAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_object()->::Common::ClientObjectId::MergeFrom(from.object());
    }
    if (from._has_bit(1)) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgClientObjectDestructionRequestAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgClientObjectDestructionRequestAck::CopyFrom(const MsgClientObjectDestructionRequestAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgClientObjectDestructionRequestAck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_object()) {
    if (!this->object().IsInitialized()) return false;
  }
  return true;
}

void MsgClientObjectDestructionRequestAck::Swap(MsgClientObjectDestructionRequestAck* other) {
  if (other != this) {
    std::swap(object_, other->object_);
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgClientObjectDestructionRequestAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgClientObjectDestructionRequestAck_descriptor_;
  metadata.reflection = MsgClientObjectDestructionRequestAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMessengerToClient_Content::kLimitCreationFieldNumber;
const int MsgMessengerToClient_Content::kLimitUpdateFieldNumber;
const int MsgMessengerToClient_Content::kLimitDestructionFieldNumber;
const int MsgMessengerToClient_Content::kLimitCreationRequestAckFieldNumber;
const int MsgMessengerToClient_Content::kLimitDestructionRequestAckFieldNumber;
const int MsgMessengerToClient_Content::kLimitUpdateRequestAckFieldNumber;
const int MsgMessengerToClient_Content::kLimaCreationFieldNumber;
const int MsgMessengerToClient_Content::kLimaUpdateFieldNumber;
const int MsgMessengerToClient_Content::kLimaDestructionFieldNumber;
const int MsgMessengerToClient_Content::kLimaCreationRequestAckFieldNumber;
const int MsgMessengerToClient_Content::kLimaDestructionRequestAckFieldNumber;
const int MsgMessengerToClient_Content::kLimaUpdateRequestAckFieldNumber;
const int MsgMessengerToClient_Content::kIntelligenceCreationFieldNumber;
const int MsgMessengerToClient_Content::kIntelligenceUpdateFieldNumber;
const int MsgMessengerToClient_Content::kIntelligenceDestructionFieldNumber;
const int MsgMessengerToClient_Content::kIntelligenceCreationRequestAckFieldNumber;
const int MsgMessengerToClient_Content::kIntelligenceUpdateRequestAckFieldNumber;
const int MsgMessengerToClient_Content::kIntelligenceDestructionRequestAckFieldNumber;
const int MsgMessengerToClient_Content::kShapeCreationFieldNumber;
const int MsgMessengerToClient_Content::kShapeUpdateFieldNumber;
const int MsgMessengerToClient_Content::kShapeDestructionFieldNumber;
const int MsgMessengerToClient_Content::kShapeCreationRequestAckFieldNumber;
const int MsgMessengerToClient_Content::kShapeDestructionRequestAckFieldNumber;
const int MsgMessengerToClient_Content::kShapeUpdateRequestAckFieldNumber;
const int MsgMessengerToClient_Content::kTextMessageFieldNumber;
const int MsgMessengerToClient_Content::kMarkerCreationFieldNumber;
const int MsgMessengerToClient_Content::kMarkerUpdateFieldNumber;
const int MsgMessengerToClient_Content::kMarkerDestructionFieldNumber;
const int MsgMessengerToClient_Content::kClientObjectCreationFieldNumber;
const int MsgMessengerToClient_Content::kClientObjectUpdateFieldNumber;
const int MsgMessengerToClient_Content::kClientObjectDestructionFieldNumber;
const int MsgMessengerToClient_Content::kClientObjectCreationAckFieldNumber;
const int MsgMessengerToClient_Content::kClientObjectUpdateAckFieldNumber;
const int MsgMessengerToClient_Content::kClientObjectDestructionAckFieldNumber;
#endif  // !_MSC_VER

MsgMessengerToClient_Content::MsgMessengerToClient_Content() {
  SharedCtor();
}

void MsgMessengerToClient_Content::InitAsDefaultInstance() {
  limit_creation_ = const_cast< ::MsgsMessengerToClient::MsgLimitCreation*>(&::MsgsMessengerToClient::MsgLimitCreation::default_instance());
  limit_update_ = const_cast< ::MsgsMessengerToClient::MsgLimitUpdate*>(&::MsgsMessengerToClient::MsgLimitUpdate::default_instance());
  limit_destruction_ = const_cast< ::MsgsMessengerToClient::MsgLimitDestruction*>(&::MsgsMessengerToClient::MsgLimitDestruction::default_instance());
  limit_creation_request_ack_ = const_cast< ::MsgsMessengerToClient::MsgLimitCreationRequestAck*>(&::MsgsMessengerToClient::MsgLimitCreationRequestAck::default_instance());
  limit_destruction_request_ack_ = const_cast< ::MsgsMessengerToClient::MsgLimitDestructionRequestAck*>(&::MsgsMessengerToClient::MsgLimitDestructionRequestAck::default_instance());
  limit_update_request_ack_ = const_cast< ::MsgsMessengerToClient::MsgLimitUpdateRequestAck*>(&::MsgsMessengerToClient::MsgLimitUpdateRequestAck::default_instance());
  lima_creation_ = const_cast< ::MsgsMessengerToClient::MsgLimaCreation*>(&::MsgsMessengerToClient::MsgLimaCreation::default_instance());
  lima_update_ = const_cast< ::MsgsMessengerToClient::MsgLimaUpdate*>(&::MsgsMessengerToClient::MsgLimaUpdate::default_instance());
  lima_destruction_ = const_cast< ::MsgsMessengerToClient::MsgLimaDestruction*>(&::MsgsMessengerToClient::MsgLimaDestruction::default_instance());
  lima_creation_request_ack_ = const_cast< ::MsgsMessengerToClient::MsgLimaCreationRequestAck*>(&::MsgsMessengerToClient::MsgLimaCreationRequestAck::default_instance());
  lima_destruction_request_ack_ = const_cast< ::MsgsMessengerToClient::MsgLimaDestructionRequestAck*>(&::MsgsMessengerToClient::MsgLimaDestructionRequestAck::default_instance());
  lima_update_request_ack_ = const_cast< ::MsgsMessengerToClient::MsgLimaUpdateRequestAck*>(&::MsgsMessengerToClient::MsgLimaUpdateRequestAck::default_instance());
  intelligence_creation_ = const_cast< ::MsgsMessengerToClient::MsgIntelligenceCreation*>(&::MsgsMessengerToClient::MsgIntelligenceCreation::default_instance());
  intelligence_update_ = const_cast< ::MsgsMessengerToClient::MsgIntelligenceUpdate*>(&::MsgsMessengerToClient::MsgIntelligenceUpdate::default_instance());
  intelligence_destruction_ = const_cast< ::MsgsMessengerToClient::MsgIntelligenceDestruction*>(&::MsgsMessengerToClient::MsgIntelligenceDestruction::default_instance());
  intelligence_creation_request_ack_ = const_cast< ::MsgsMessengerToClient::MsgIntelligenceCreationRequestAck*>(&::MsgsMessengerToClient::MsgIntelligenceCreationRequestAck::default_instance());
  intelligence_update_request_ack_ = const_cast< ::MsgsMessengerToClient::MsgIntelligenceUpdateRequestAck*>(&::MsgsMessengerToClient::MsgIntelligenceUpdateRequestAck::default_instance());
  intelligence_destruction_request_ack_ = const_cast< ::MsgsMessengerToClient::MsgIntelligenceDestructionRequestAck*>(&::MsgsMessengerToClient::MsgIntelligenceDestructionRequestAck::default_instance());
  shape_creation_ = const_cast< ::MsgsMessengerToClient::MsgShapeCreation*>(&::MsgsMessengerToClient::MsgShapeCreation::default_instance());
  shape_update_ = const_cast< ::MsgsMessengerToClient::MsgShapeUpdate*>(&::MsgsMessengerToClient::MsgShapeUpdate::default_instance());
  shape_destruction_ = const_cast< ::MsgsMessengerToClient::MsgShapeDestruction*>(&::MsgsMessengerToClient::MsgShapeDestruction::default_instance());
  shape_creation_request_ack_ = const_cast< ::MsgsMessengerToClient::MsgShapeCreationRequestAck*>(&::MsgsMessengerToClient::MsgShapeCreationRequestAck::default_instance());
  shape_destruction_request_ack_ = const_cast< ::MsgsMessengerToClient::MsgShapeDestructionRequestAck*>(&::MsgsMessengerToClient::MsgShapeDestructionRequestAck::default_instance());
  shape_update_request_ack_ = const_cast< ::MsgsMessengerToClient::MsgShapeUpdateRequestAck*>(&::MsgsMessengerToClient::MsgShapeUpdateRequestAck::default_instance());
  text_message_ = const_cast< ::Common::MsgTextMessage*>(&::Common::MsgTextMessage::default_instance());
  marker_creation_ = const_cast< ::MsgsMessengerToClient::MsgMarkerCreation*>(&::MsgsMessengerToClient::MsgMarkerCreation::default_instance());
  marker_update_ = const_cast< ::MsgsMessengerToClient::MsgMarkerUpdate*>(&::MsgsMessengerToClient::MsgMarkerUpdate::default_instance());
  marker_destruction_ = const_cast< ::MsgsMessengerToClient::MsgMarkerDestruction*>(&::MsgsMessengerToClient::MsgMarkerDestruction::default_instance());
  client_object_creation_ = const_cast< ::MsgsMessengerToClient::MsgClientObjectCreation*>(&::MsgsMessengerToClient::MsgClientObjectCreation::default_instance());
  client_object_update_ = const_cast< ::MsgsMessengerToClient::MsgClientObjectUpdate*>(&::MsgsMessengerToClient::MsgClientObjectUpdate::default_instance());
  client_object_destruction_ = const_cast< ::MsgsMessengerToClient::MsgClientObjectDestruction*>(&::MsgsMessengerToClient::MsgClientObjectDestruction::default_instance());
  client_object_creation_ack_ = const_cast< ::MsgsMessengerToClient::MsgClientObjectCreationRequestAck*>(&::MsgsMessengerToClient::MsgClientObjectCreationRequestAck::default_instance());
  client_object_update_ack_ = const_cast< ::MsgsMessengerToClient::MsgClientObjectUpdateRequestAck*>(&::MsgsMessengerToClient::MsgClientObjectUpdateRequestAck::default_instance());
  client_object_destruction_ack_ = const_cast< ::MsgsMessengerToClient::MsgClientObjectDestructionRequestAck*>(&::MsgsMessengerToClient::MsgClientObjectDestructionRequestAck::default_instance());
}

MsgMessengerToClient_Content::MsgMessengerToClient_Content(const MsgMessengerToClient_Content& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMessengerToClient_Content::SharedCtor() {
  _cached_size_ = 0;
  limit_creation_ = NULL;
  limit_update_ = NULL;
  limit_destruction_ = NULL;
  limit_creation_request_ack_ = NULL;
  limit_destruction_request_ack_ = NULL;
  limit_update_request_ack_ = NULL;
  lima_creation_ = NULL;
  lima_update_ = NULL;
  lima_destruction_ = NULL;
  lima_creation_request_ack_ = NULL;
  lima_destruction_request_ack_ = NULL;
  lima_update_request_ack_ = NULL;
  intelligence_creation_ = NULL;
  intelligence_update_ = NULL;
  intelligence_destruction_ = NULL;
  intelligence_creation_request_ack_ = NULL;
  intelligence_update_request_ack_ = NULL;
  intelligence_destruction_request_ack_ = NULL;
  shape_creation_ = NULL;
  shape_update_ = NULL;
  shape_destruction_ = NULL;
  shape_creation_request_ack_ = NULL;
  shape_destruction_request_ack_ = NULL;
  shape_update_request_ack_ = NULL;
  text_message_ = NULL;
  marker_creation_ = NULL;
  marker_update_ = NULL;
  marker_destruction_ = NULL;
  client_object_creation_ = NULL;
  client_object_update_ = NULL;
  client_object_destruction_ = NULL;
  client_object_creation_ack_ = NULL;
  client_object_update_ack_ = NULL;
  client_object_destruction_ack_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMessengerToClient_Content::~MsgMessengerToClient_Content() {
  SharedDtor();
}

void MsgMessengerToClient_Content::SharedDtor() {
  if (this != default_instance_) {
    delete limit_creation_;
    delete limit_update_;
    delete limit_destruction_;
    delete limit_creation_request_ack_;
    delete limit_destruction_request_ack_;
    delete limit_update_request_ack_;
    delete lima_creation_;
    delete lima_update_;
    delete lima_destruction_;
    delete lima_creation_request_ack_;
    delete lima_destruction_request_ack_;
    delete lima_update_request_ack_;
    delete intelligence_creation_;
    delete intelligence_update_;
    delete intelligence_destruction_;
    delete intelligence_creation_request_ack_;
    delete intelligence_update_request_ack_;
    delete intelligence_destruction_request_ack_;
    delete shape_creation_;
    delete shape_update_;
    delete shape_destruction_;
    delete shape_creation_request_ack_;
    delete shape_destruction_request_ack_;
    delete shape_update_request_ack_;
    delete text_message_;
    delete marker_creation_;
    delete marker_update_;
    delete marker_destruction_;
    delete client_object_creation_;
    delete client_object_update_;
    delete client_object_destruction_;
    delete client_object_creation_ack_;
    delete client_object_update_ack_;
    delete client_object_destruction_ack_;
  }
}

const ::google::protobuf::Descriptor* MsgMessengerToClient_Content::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMessengerToClient_Content_descriptor_;
}

const MsgMessengerToClient_Content& MsgMessengerToClient_Content::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgMessengerToClient_Content* MsgMessengerToClient_Content::default_instance_ = NULL;

MsgMessengerToClient_Content* MsgMessengerToClient_Content::New() const {
  return new MsgMessengerToClient_Content;
}

void MsgMessengerToClient_Content::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (limit_creation_ != NULL) limit_creation_->::MsgsMessengerToClient::MsgLimitCreation::Clear();
    }
    if (_has_bit(1)) {
      if (limit_update_ != NULL) limit_update_->::MsgsMessengerToClient::MsgLimitUpdate::Clear();
    }
    if (_has_bit(2)) {
      if (limit_destruction_ != NULL) limit_destruction_->::MsgsMessengerToClient::MsgLimitDestruction::Clear();
    }
    if (_has_bit(3)) {
      if (limit_creation_request_ack_ != NULL) limit_creation_request_ack_->::MsgsMessengerToClient::MsgLimitCreationRequestAck::Clear();
    }
    if (_has_bit(4)) {
      if (limit_destruction_request_ack_ != NULL) limit_destruction_request_ack_->::MsgsMessengerToClient::MsgLimitDestructionRequestAck::Clear();
    }
    if (_has_bit(5)) {
      if (limit_update_request_ack_ != NULL) limit_update_request_ack_->::MsgsMessengerToClient::MsgLimitUpdateRequestAck::Clear();
    }
    if (_has_bit(6)) {
      if (lima_creation_ != NULL) lima_creation_->::MsgsMessengerToClient::MsgLimaCreation::Clear();
    }
    if (_has_bit(7)) {
      if (lima_update_ != NULL) lima_update_->::MsgsMessengerToClient::MsgLimaUpdate::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (_has_bit(8)) {
      if (lima_destruction_ != NULL) lima_destruction_->::MsgsMessengerToClient::MsgLimaDestruction::Clear();
    }
    if (_has_bit(9)) {
      if (lima_creation_request_ack_ != NULL) lima_creation_request_ack_->::MsgsMessengerToClient::MsgLimaCreationRequestAck::Clear();
    }
    if (_has_bit(10)) {
      if (lima_destruction_request_ack_ != NULL) lima_destruction_request_ack_->::MsgsMessengerToClient::MsgLimaDestructionRequestAck::Clear();
    }
    if (_has_bit(11)) {
      if (lima_update_request_ack_ != NULL) lima_update_request_ack_->::MsgsMessengerToClient::MsgLimaUpdateRequestAck::Clear();
    }
    if (_has_bit(12)) {
      if (intelligence_creation_ != NULL) intelligence_creation_->::MsgsMessengerToClient::MsgIntelligenceCreation::Clear();
    }
    if (_has_bit(13)) {
      if (intelligence_update_ != NULL) intelligence_update_->::MsgsMessengerToClient::MsgIntelligenceUpdate::Clear();
    }
    if (_has_bit(14)) {
      if (intelligence_destruction_ != NULL) intelligence_destruction_->::MsgsMessengerToClient::MsgIntelligenceDestruction::Clear();
    }
    if (_has_bit(15)) {
      if (intelligence_creation_request_ack_ != NULL) intelligence_creation_request_ack_->::MsgsMessengerToClient::MsgIntelligenceCreationRequestAck::Clear();
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (_has_bit(16)) {
      if (intelligence_update_request_ack_ != NULL) intelligence_update_request_ack_->::MsgsMessengerToClient::MsgIntelligenceUpdateRequestAck::Clear();
    }
    if (_has_bit(17)) {
      if (intelligence_destruction_request_ack_ != NULL) intelligence_destruction_request_ack_->::MsgsMessengerToClient::MsgIntelligenceDestructionRequestAck::Clear();
    }
    if (_has_bit(18)) {
      if (shape_creation_ != NULL) shape_creation_->::MsgsMessengerToClient::MsgShapeCreation::Clear();
    }
    if (_has_bit(19)) {
      if (shape_update_ != NULL) shape_update_->::MsgsMessengerToClient::MsgShapeUpdate::Clear();
    }
    if (_has_bit(20)) {
      if (shape_destruction_ != NULL) shape_destruction_->::MsgsMessengerToClient::MsgShapeDestruction::Clear();
    }
    if (_has_bit(21)) {
      if (shape_creation_request_ack_ != NULL) shape_creation_request_ack_->::MsgsMessengerToClient::MsgShapeCreationRequestAck::Clear();
    }
    if (_has_bit(22)) {
      if (shape_destruction_request_ack_ != NULL) shape_destruction_request_ack_->::MsgsMessengerToClient::MsgShapeDestructionRequestAck::Clear();
    }
    if (_has_bit(23)) {
      if (shape_update_request_ack_ != NULL) shape_update_request_ack_->::MsgsMessengerToClient::MsgShapeUpdateRequestAck::Clear();
    }
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (_has_bit(24)) {
      if (text_message_ != NULL) text_message_->::Common::MsgTextMessage::Clear();
    }
    if (_has_bit(25)) {
      if (marker_creation_ != NULL) marker_creation_->::MsgsMessengerToClient::MsgMarkerCreation::Clear();
    }
    if (_has_bit(26)) {
      if (marker_update_ != NULL) marker_update_->::MsgsMessengerToClient::MsgMarkerUpdate::Clear();
    }
    if (_has_bit(27)) {
      if (marker_destruction_ != NULL) marker_destruction_->::MsgsMessengerToClient::MsgMarkerDestruction::Clear();
    }
    if (_has_bit(28)) {
      if (client_object_creation_ != NULL) client_object_creation_->::MsgsMessengerToClient::MsgClientObjectCreation::Clear();
    }
    if (_has_bit(29)) {
      if (client_object_update_ != NULL) client_object_update_->::MsgsMessengerToClient::MsgClientObjectUpdate::Clear();
    }
    if (_has_bit(30)) {
      if (client_object_destruction_ != NULL) client_object_destruction_->::MsgsMessengerToClient::MsgClientObjectDestruction::Clear();
    }
    if (_has_bit(31)) {
      if (client_object_creation_ack_ != NULL) client_object_creation_ack_->::MsgsMessengerToClient::MsgClientObjectCreationRequestAck::Clear();
    }
  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (_has_bit(32)) {
      if (client_object_update_ack_ != NULL) client_object_update_ack_->::MsgsMessengerToClient::MsgClientObjectUpdateRequestAck::Clear();
    }
    if (_has_bit(33)) {
      if (client_object_destruction_ack_ != NULL) client_object_destruction_ack_->::MsgsMessengerToClient::MsgClientObjectDestructionRequestAck::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMessengerToClient_Content::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgsMessengerToClient.MsgLimitCreation limit_creation = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_limit_creation()));
        if (input->ExpectTag(18)) goto parse_limit_update;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgLimitUpdate limit_update = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_limit_update:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_limit_update()));
        if (input->ExpectTag(26)) goto parse_limit_destruction;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgLimitDestruction limit_destruction = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_limit_destruction:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_limit_destruction()));
        if (input->ExpectTag(34)) goto parse_limit_creation_request_ack;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgLimitCreationRequestAck limit_creation_request_ack = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_limit_creation_request_ack:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_limit_creation_request_ack()));
        if (input->ExpectTag(42)) goto parse_limit_destruction_request_ack;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgLimitDestructionRequestAck limit_destruction_request_ack = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_limit_destruction_request_ack:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_limit_destruction_request_ack()));
        if (input->ExpectTag(50)) goto parse_limit_update_request_ack;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgLimitUpdateRequestAck limit_update_request_ack = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_limit_update_request_ack:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_limit_update_request_ack()));
        if (input->ExpectTag(58)) goto parse_lima_creation;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgLimaCreation lima_creation = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_lima_creation:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_lima_creation()));
        if (input->ExpectTag(66)) goto parse_lima_update;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgLimaUpdate lima_update = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_lima_update:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_lima_update()));
        if (input->ExpectTag(74)) goto parse_lima_destruction;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgLimaDestruction lima_destruction = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_lima_destruction:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_lima_destruction()));
        if (input->ExpectTag(82)) goto parse_lima_creation_request_ack;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgLimaCreationRequestAck lima_creation_request_ack = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_lima_creation_request_ack:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_lima_creation_request_ack()));
        if (input->ExpectTag(90)) goto parse_lima_destruction_request_ack;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgLimaDestructionRequestAck lima_destruction_request_ack = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_lima_destruction_request_ack:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_lima_destruction_request_ack()));
        if (input->ExpectTag(98)) goto parse_lima_update_request_ack;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgLimaUpdateRequestAck lima_update_request_ack = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_lima_update_request_ack:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_lima_update_request_ack()));
        if (input->ExpectTag(106)) goto parse_intelligence_creation;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgIntelligenceCreation intelligence_creation = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_intelligence_creation:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_intelligence_creation()));
        if (input->ExpectTag(114)) goto parse_intelligence_update;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgIntelligenceUpdate intelligence_update = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_intelligence_update:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_intelligence_update()));
        if (input->ExpectTag(122)) goto parse_intelligence_destruction;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgIntelligenceDestruction intelligence_destruction = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_intelligence_destruction:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_intelligence_destruction()));
        if (input->ExpectTag(130)) goto parse_intelligence_creation_request_ack;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgIntelligenceCreationRequestAck intelligence_creation_request_ack = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_intelligence_creation_request_ack:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_intelligence_creation_request_ack()));
        if (input->ExpectTag(138)) goto parse_intelligence_update_request_ack;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgIntelligenceUpdateRequestAck intelligence_update_request_ack = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_intelligence_update_request_ack:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_intelligence_update_request_ack()));
        if (input->ExpectTag(146)) goto parse_intelligence_destruction_request_ack;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgIntelligenceDestructionRequestAck intelligence_destruction_request_ack = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_intelligence_destruction_request_ack:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_intelligence_destruction_request_ack()));
        if (input->ExpectTag(154)) goto parse_shape_creation;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgShapeCreation shape_creation = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_shape_creation:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_shape_creation()));
        if (input->ExpectTag(162)) goto parse_shape_update;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgShapeUpdate shape_update = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_shape_update:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_shape_update()));
        if (input->ExpectTag(170)) goto parse_shape_destruction;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgShapeDestruction shape_destruction = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_shape_destruction:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_shape_destruction()));
        if (input->ExpectTag(178)) goto parse_shape_creation_request_ack;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgShapeCreationRequestAck shape_creation_request_ack = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_shape_creation_request_ack:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_shape_creation_request_ack()));
        if (input->ExpectTag(186)) goto parse_shape_destruction_request_ack;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgShapeDestructionRequestAck shape_destruction_request_ack = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_shape_destruction_request_ack:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_shape_destruction_request_ack()));
        if (input->ExpectTag(194)) goto parse_shape_update_request_ack;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgShapeUpdateRequestAck shape_update_request_ack = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_shape_update_request_ack:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_shape_update_request_ack()));
        if (input->ExpectTag(202)) goto parse_text_message;
        break;
      }
      
      // optional .Common.MsgTextMessage text_message = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_text_message:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_text_message()));
        if (input->ExpectTag(210)) goto parse_marker_creation;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgMarkerCreation marker_creation = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_marker_creation:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_marker_creation()));
        if (input->ExpectTag(218)) goto parse_marker_update;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgMarkerUpdate marker_update = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_marker_update:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_marker_update()));
        if (input->ExpectTag(226)) goto parse_marker_destruction;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgMarkerDestruction marker_destruction = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_marker_destruction:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_marker_destruction()));
        if (input->ExpectTag(234)) goto parse_client_object_creation;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgClientObjectCreation client_object_creation = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_client_object_creation:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_client_object_creation()));
        if (input->ExpectTag(242)) goto parse_client_object_update;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgClientObjectUpdate client_object_update = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_client_object_update:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_client_object_update()));
        if (input->ExpectTag(250)) goto parse_client_object_destruction;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgClientObjectDestruction client_object_destruction = 31;
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_client_object_destruction:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_client_object_destruction()));
        if (input->ExpectTag(258)) goto parse_client_object_creation_ack;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgClientObjectCreationRequestAck client_object_creation_ack = 32;
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_client_object_creation_ack:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_client_object_creation_ack()));
        if (input->ExpectTag(266)) goto parse_client_object_update_ack;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgClientObjectUpdateRequestAck client_object_update_ack = 33;
      case 33: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_client_object_update_ack:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_client_object_update_ack()));
        if (input->ExpectTag(274)) goto parse_client_object_destruction_ack;
        break;
      }
      
      // optional .MsgsMessengerToClient.MsgClientObjectDestructionRequestAck client_object_destruction_ack = 34;
      case 34: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_client_object_destruction_ack:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_client_object_destruction_ack()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMessengerToClient_Content::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMessengerToClient_Content::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .MsgsMessengerToClient.MsgLimitCreation limit_creation = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->limit_creation(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgLimitUpdate limit_update = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->limit_update(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgLimitDestruction limit_destruction = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->limit_destruction(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgLimitCreationRequestAck limit_creation_request_ack = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      4, this->limit_creation_request_ack(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgLimitDestructionRequestAck limit_destruction_request_ack = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      5, this->limit_destruction_request_ack(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgLimitUpdateRequestAck limit_update_request_ack = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      6, this->limit_update_request_ack(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgLimaCreation lima_creation = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      7, this->lima_creation(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgLimaUpdate lima_update = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      8, this->lima_update(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgLimaDestruction lima_destruction = 9;
  if (_has_bit(8)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      9, this->lima_destruction(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgLimaCreationRequestAck lima_creation_request_ack = 10;
  if (_has_bit(9)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      10, this->lima_creation_request_ack(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgLimaDestructionRequestAck lima_destruction_request_ack = 11;
  if (_has_bit(10)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      11, this->lima_destruction_request_ack(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgLimaUpdateRequestAck lima_update_request_ack = 12;
  if (_has_bit(11)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      12, this->lima_update_request_ack(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgIntelligenceCreation intelligence_creation = 13;
  if (_has_bit(12)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      13, this->intelligence_creation(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgIntelligenceUpdate intelligence_update = 14;
  if (_has_bit(13)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      14, this->intelligence_update(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgIntelligenceDestruction intelligence_destruction = 15;
  if (_has_bit(14)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      15, this->intelligence_destruction(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgIntelligenceCreationRequestAck intelligence_creation_request_ack = 16;
  if (_has_bit(15)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      16, this->intelligence_creation_request_ack(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgIntelligenceUpdateRequestAck intelligence_update_request_ack = 17;
  if (_has_bit(16)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      17, this->intelligence_update_request_ack(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgIntelligenceDestructionRequestAck intelligence_destruction_request_ack = 18;
  if (_has_bit(17)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      18, this->intelligence_destruction_request_ack(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgShapeCreation shape_creation = 19;
  if (_has_bit(18)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      19, this->shape_creation(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgShapeUpdate shape_update = 20;
  if (_has_bit(19)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      20, this->shape_update(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgShapeDestruction shape_destruction = 21;
  if (_has_bit(20)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      21, this->shape_destruction(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgShapeCreationRequestAck shape_creation_request_ack = 22;
  if (_has_bit(21)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      22, this->shape_creation_request_ack(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgShapeDestructionRequestAck shape_destruction_request_ack = 23;
  if (_has_bit(22)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      23, this->shape_destruction_request_ack(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgShapeUpdateRequestAck shape_update_request_ack = 24;
  if (_has_bit(23)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      24, this->shape_update_request_ack(), output);
  }
  
  // optional .Common.MsgTextMessage text_message = 25;
  if (_has_bit(24)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      25, this->text_message(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgMarkerCreation marker_creation = 26;
  if (_has_bit(25)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      26, this->marker_creation(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgMarkerUpdate marker_update = 27;
  if (_has_bit(26)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      27, this->marker_update(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgMarkerDestruction marker_destruction = 28;
  if (_has_bit(27)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      28, this->marker_destruction(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgClientObjectCreation client_object_creation = 29;
  if (_has_bit(28)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      29, this->client_object_creation(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgClientObjectUpdate client_object_update = 30;
  if (_has_bit(29)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      30, this->client_object_update(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgClientObjectDestruction client_object_destruction = 31;
  if (_has_bit(30)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      31, this->client_object_destruction(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgClientObjectCreationRequestAck client_object_creation_ack = 32;
  if (_has_bit(31)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      32, this->client_object_creation_ack(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgClientObjectUpdateRequestAck client_object_update_ack = 33;
  if (_has_bit(32)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      33, this->client_object_update_ack(), output);
  }
  
  // optional .MsgsMessengerToClient.MsgClientObjectDestructionRequestAck client_object_destruction_ack = 34;
  if (_has_bit(33)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      34, this->client_object_destruction_ack(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMessengerToClient_Content::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .MsgsMessengerToClient.MsgLimitCreation limit_creation = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->limit_creation(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgLimitUpdate limit_update = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->limit_update(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgLimitDestruction limit_destruction = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->limit_destruction(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgLimitCreationRequestAck limit_creation_request_ack = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->limit_creation_request_ack(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgLimitDestructionRequestAck limit_destruction_request_ack = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->limit_destruction_request_ack(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgLimitUpdateRequestAck limit_update_request_ack = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->limit_update_request_ack(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgLimaCreation lima_creation = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->lima_creation(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgLimaUpdate lima_update = 8;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->lima_update(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgLimaDestruction lima_destruction = 9;
  if (_has_bit(8)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->lima_destruction(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgLimaCreationRequestAck lima_creation_request_ack = 10;
  if (_has_bit(9)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->lima_creation_request_ack(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgLimaDestructionRequestAck lima_destruction_request_ack = 11;
  if (_has_bit(10)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->lima_destruction_request_ack(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgLimaUpdateRequestAck lima_update_request_ack = 12;
  if (_has_bit(11)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->lima_update_request_ack(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgIntelligenceCreation intelligence_creation = 13;
  if (_has_bit(12)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->intelligence_creation(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgIntelligenceUpdate intelligence_update = 14;
  if (_has_bit(13)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->intelligence_update(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgIntelligenceDestruction intelligence_destruction = 15;
  if (_has_bit(14)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->intelligence_destruction(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgIntelligenceCreationRequestAck intelligence_creation_request_ack = 16;
  if (_has_bit(15)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->intelligence_creation_request_ack(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgIntelligenceUpdateRequestAck intelligence_update_request_ack = 17;
  if (_has_bit(16)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->intelligence_update_request_ack(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgIntelligenceDestructionRequestAck intelligence_destruction_request_ack = 18;
  if (_has_bit(17)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->intelligence_destruction_request_ack(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgShapeCreation shape_creation = 19;
  if (_has_bit(18)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->shape_creation(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgShapeUpdate shape_update = 20;
  if (_has_bit(19)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->shape_update(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgShapeDestruction shape_destruction = 21;
  if (_has_bit(20)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->shape_destruction(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgShapeCreationRequestAck shape_creation_request_ack = 22;
  if (_has_bit(21)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        22, this->shape_creation_request_ack(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgShapeDestructionRequestAck shape_destruction_request_ack = 23;
  if (_has_bit(22)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        23, this->shape_destruction_request_ack(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgShapeUpdateRequestAck shape_update_request_ack = 24;
  if (_has_bit(23)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        24, this->shape_update_request_ack(), target);
  }
  
  // optional .Common.MsgTextMessage text_message = 25;
  if (_has_bit(24)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        25, this->text_message(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgMarkerCreation marker_creation = 26;
  if (_has_bit(25)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        26, this->marker_creation(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgMarkerUpdate marker_update = 27;
  if (_has_bit(26)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        27, this->marker_update(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgMarkerDestruction marker_destruction = 28;
  if (_has_bit(27)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        28, this->marker_destruction(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgClientObjectCreation client_object_creation = 29;
  if (_has_bit(28)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        29, this->client_object_creation(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgClientObjectUpdate client_object_update = 30;
  if (_has_bit(29)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        30, this->client_object_update(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgClientObjectDestruction client_object_destruction = 31;
  if (_has_bit(30)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        31, this->client_object_destruction(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgClientObjectCreationRequestAck client_object_creation_ack = 32;
  if (_has_bit(31)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        32, this->client_object_creation_ack(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgClientObjectUpdateRequestAck client_object_update_ack = 33;
  if (_has_bit(32)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        33, this->client_object_update_ack(), target);
  }
  
  // optional .MsgsMessengerToClient.MsgClientObjectDestructionRequestAck client_object_destruction_ack = 34;
  if (_has_bit(33)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        34, this->client_object_destruction_ack(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMessengerToClient_Content::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgsMessengerToClient.MsgLimitCreation limit_creation = 1;
    if (has_limit_creation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->limit_creation());
    }
    
    // optional .MsgsMessengerToClient.MsgLimitUpdate limit_update = 2;
    if (has_limit_update()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->limit_update());
    }
    
    // optional .MsgsMessengerToClient.MsgLimitDestruction limit_destruction = 3;
    if (has_limit_destruction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->limit_destruction());
    }
    
    // optional .MsgsMessengerToClient.MsgLimitCreationRequestAck limit_creation_request_ack = 4;
    if (has_limit_creation_request_ack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->limit_creation_request_ack());
    }
    
    // optional .MsgsMessengerToClient.MsgLimitDestructionRequestAck limit_destruction_request_ack = 5;
    if (has_limit_destruction_request_ack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->limit_destruction_request_ack());
    }
    
    // optional .MsgsMessengerToClient.MsgLimitUpdateRequestAck limit_update_request_ack = 6;
    if (has_limit_update_request_ack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->limit_update_request_ack());
    }
    
    // optional .MsgsMessengerToClient.MsgLimaCreation lima_creation = 7;
    if (has_lima_creation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->lima_creation());
    }
    
    // optional .MsgsMessengerToClient.MsgLimaUpdate lima_update = 8;
    if (has_lima_update()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->lima_update());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .MsgsMessengerToClient.MsgLimaDestruction lima_destruction = 9;
    if (has_lima_destruction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->lima_destruction());
    }
    
    // optional .MsgsMessengerToClient.MsgLimaCreationRequestAck lima_creation_request_ack = 10;
    if (has_lima_creation_request_ack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->lima_creation_request_ack());
    }
    
    // optional .MsgsMessengerToClient.MsgLimaDestructionRequestAck lima_destruction_request_ack = 11;
    if (has_lima_destruction_request_ack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->lima_destruction_request_ack());
    }
    
    // optional .MsgsMessengerToClient.MsgLimaUpdateRequestAck lima_update_request_ack = 12;
    if (has_lima_update_request_ack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->lima_update_request_ack());
    }
    
    // optional .MsgsMessengerToClient.MsgIntelligenceCreation intelligence_creation = 13;
    if (has_intelligence_creation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intelligence_creation());
    }
    
    // optional .MsgsMessengerToClient.MsgIntelligenceUpdate intelligence_update = 14;
    if (has_intelligence_update()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intelligence_update());
    }
    
    // optional .MsgsMessengerToClient.MsgIntelligenceDestruction intelligence_destruction = 15;
    if (has_intelligence_destruction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intelligence_destruction());
    }
    
    // optional .MsgsMessengerToClient.MsgIntelligenceCreationRequestAck intelligence_creation_request_ack = 16;
    if (has_intelligence_creation_request_ack()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intelligence_creation_request_ack());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional .MsgsMessengerToClient.MsgIntelligenceUpdateRequestAck intelligence_update_request_ack = 17;
    if (has_intelligence_update_request_ack()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intelligence_update_request_ack());
    }
    
    // optional .MsgsMessengerToClient.MsgIntelligenceDestructionRequestAck intelligence_destruction_request_ack = 18;
    if (has_intelligence_destruction_request_ack()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intelligence_destruction_request_ack());
    }
    
    // optional .MsgsMessengerToClient.MsgShapeCreation shape_creation = 19;
    if (has_shape_creation()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shape_creation());
    }
    
    // optional .MsgsMessengerToClient.MsgShapeUpdate shape_update = 20;
    if (has_shape_update()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shape_update());
    }
    
    // optional .MsgsMessengerToClient.MsgShapeDestruction shape_destruction = 21;
    if (has_shape_destruction()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shape_destruction());
    }
    
    // optional .MsgsMessengerToClient.MsgShapeCreationRequestAck shape_creation_request_ack = 22;
    if (has_shape_creation_request_ack()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shape_creation_request_ack());
    }
    
    // optional .MsgsMessengerToClient.MsgShapeDestructionRequestAck shape_destruction_request_ack = 23;
    if (has_shape_destruction_request_ack()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shape_destruction_request_ack());
    }
    
    // optional .MsgsMessengerToClient.MsgShapeUpdateRequestAck shape_update_request_ack = 24;
    if (has_shape_update_request_ack()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shape_update_request_ack());
    }
    
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional .Common.MsgTextMessage text_message = 25;
    if (has_text_message()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->text_message());
    }
    
    // optional .MsgsMessengerToClient.MsgMarkerCreation marker_creation = 26;
    if (has_marker_creation()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->marker_creation());
    }
    
    // optional .MsgsMessengerToClient.MsgMarkerUpdate marker_update = 27;
    if (has_marker_update()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->marker_update());
    }
    
    // optional .MsgsMessengerToClient.MsgMarkerDestruction marker_destruction = 28;
    if (has_marker_destruction()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->marker_destruction());
    }
    
    // optional .MsgsMessengerToClient.MsgClientObjectCreation client_object_creation = 29;
    if (has_client_object_creation()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->client_object_creation());
    }
    
    // optional .MsgsMessengerToClient.MsgClientObjectUpdate client_object_update = 30;
    if (has_client_object_update()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->client_object_update());
    }
    
    // optional .MsgsMessengerToClient.MsgClientObjectDestruction client_object_destruction = 31;
    if (has_client_object_destruction()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->client_object_destruction());
    }
    
    // optional .MsgsMessengerToClient.MsgClientObjectCreationRequestAck client_object_creation_ack = 32;
    if (has_client_object_creation_ack()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->client_object_creation_ack());
    }
    
  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    // optional .MsgsMessengerToClient.MsgClientObjectUpdateRequestAck client_object_update_ack = 33;
    if (has_client_object_update_ack()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->client_object_update_ack());
    }
    
    // optional .MsgsMessengerToClient.MsgClientObjectDestructionRequestAck client_object_destruction_ack = 34;
    if (has_client_object_destruction_ack()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->client_object_destruction_ack());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMessengerToClient_Content::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMessengerToClient_Content* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMessengerToClient_Content*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMessengerToClient_Content::MergeFrom(const MsgMessengerToClient_Content& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_limit_creation()->::MsgsMessengerToClient::MsgLimitCreation::MergeFrom(from.limit_creation());
    }
    if (from._has_bit(1)) {
      mutable_limit_update()->::MsgsMessengerToClient::MsgLimitUpdate::MergeFrom(from.limit_update());
    }
    if (from._has_bit(2)) {
      mutable_limit_destruction()->::MsgsMessengerToClient::MsgLimitDestruction::MergeFrom(from.limit_destruction());
    }
    if (from._has_bit(3)) {
      mutable_limit_creation_request_ack()->::MsgsMessengerToClient::MsgLimitCreationRequestAck::MergeFrom(from.limit_creation_request_ack());
    }
    if (from._has_bit(4)) {
      mutable_limit_destruction_request_ack()->::MsgsMessengerToClient::MsgLimitDestructionRequestAck::MergeFrom(from.limit_destruction_request_ack());
    }
    if (from._has_bit(5)) {
      mutable_limit_update_request_ack()->::MsgsMessengerToClient::MsgLimitUpdateRequestAck::MergeFrom(from.limit_update_request_ack());
    }
    if (from._has_bit(6)) {
      mutable_lima_creation()->::MsgsMessengerToClient::MsgLimaCreation::MergeFrom(from.lima_creation());
    }
    if (from._has_bit(7)) {
      mutable_lima_update()->::MsgsMessengerToClient::MsgLimaUpdate::MergeFrom(from.lima_update());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from._has_bit(8)) {
      mutable_lima_destruction()->::MsgsMessengerToClient::MsgLimaDestruction::MergeFrom(from.lima_destruction());
    }
    if (from._has_bit(9)) {
      mutable_lima_creation_request_ack()->::MsgsMessengerToClient::MsgLimaCreationRequestAck::MergeFrom(from.lima_creation_request_ack());
    }
    if (from._has_bit(10)) {
      mutable_lima_destruction_request_ack()->::MsgsMessengerToClient::MsgLimaDestructionRequestAck::MergeFrom(from.lima_destruction_request_ack());
    }
    if (from._has_bit(11)) {
      mutable_lima_update_request_ack()->::MsgsMessengerToClient::MsgLimaUpdateRequestAck::MergeFrom(from.lima_update_request_ack());
    }
    if (from._has_bit(12)) {
      mutable_intelligence_creation()->::MsgsMessengerToClient::MsgIntelligenceCreation::MergeFrom(from.intelligence_creation());
    }
    if (from._has_bit(13)) {
      mutable_intelligence_update()->::MsgsMessengerToClient::MsgIntelligenceUpdate::MergeFrom(from.intelligence_update());
    }
    if (from._has_bit(14)) {
      mutable_intelligence_destruction()->::MsgsMessengerToClient::MsgIntelligenceDestruction::MergeFrom(from.intelligence_destruction());
    }
    if (from._has_bit(15)) {
      mutable_intelligence_creation_request_ack()->::MsgsMessengerToClient::MsgIntelligenceCreationRequestAck::MergeFrom(from.intelligence_creation_request_ack());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from._has_bit(16)) {
      mutable_intelligence_update_request_ack()->::MsgsMessengerToClient::MsgIntelligenceUpdateRequestAck::MergeFrom(from.intelligence_update_request_ack());
    }
    if (from._has_bit(17)) {
      mutable_intelligence_destruction_request_ack()->::MsgsMessengerToClient::MsgIntelligenceDestructionRequestAck::MergeFrom(from.intelligence_destruction_request_ack());
    }
    if (from._has_bit(18)) {
      mutable_shape_creation()->::MsgsMessengerToClient::MsgShapeCreation::MergeFrom(from.shape_creation());
    }
    if (from._has_bit(19)) {
      mutable_shape_update()->::MsgsMessengerToClient::MsgShapeUpdate::MergeFrom(from.shape_update());
    }
    if (from._has_bit(20)) {
      mutable_shape_destruction()->::MsgsMessengerToClient::MsgShapeDestruction::MergeFrom(from.shape_destruction());
    }
    if (from._has_bit(21)) {
      mutable_shape_creation_request_ack()->::MsgsMessengerToClient::MsgShapeCreationRequestAck::MergeFrom(from.shape_creation_request_ack());
    }
    if (from._has_bit(22)) {
      mutable_shape_destruction_request_ack()->::MsgsMessengerToClient::MsgShapeDestructionRequestAck::MergeFrom(from.shape_destruction_request_ack());
    }
    if (from._has_bit(23)) {
      mutable_shape_update_request_ack()->::MsgsMessengerToClient::MsgShapeUpdateRequestAck::MergeFrom(from.shape_update_request_ack());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from._has_bit(24)) {
      mutable_text_message()->::Common::MsgTextMessage::MergeFrom(from.text_message());
    }
    if (from._has_bit(25)) {
      mutable_marker_creation()->::MsgsMessengerToClient::MsgMarkerCreation::MergeFrom(from.marker_creation());
    }
    if (from._has_bit(26)) {
      mutable_marker_update()->::MsgsMessengerToClient::MsgMarkerUpdate::MergeFrom(from.marker_update());
    }
    if (from._has_bit(27)) {
      mutable_marker_destruction()->::MsgsMessengerToClient::MsgMarkerDestruction::MergeFrom(from.marker_destruction());
    }
    if (from._has_bit(28)) {
      mutable_client_object_creation()->::MsgsMessengerToClient::MsgClientObjectCreation::MergeFrom(from.client_object_creation());
    }
    if (from._has_bit(29)) {
      mutable_client_object_update()->::MsgsMessengerToClient::MsgClientObjectUpdate::MergeFrom(from.client_object_update());
    }
    if (from._has_bit(30)) {
      mutable_client_object_destruction()->::MsgsMessengerToClient::MsgClientObjectDestruction::MergeFrom(from.client_object_destruction());
    }
    if (from._has_bit(31)) {
      mutable_client_object_creation_ack()->::MsgsMessengerToClient::MsgClientObjectCreationRequestAck::MergeFrom(from.client_object_creation_ack());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from._has_bit(32)) {
      mutable_client_object_update_ack()->::MsgsMessengerToClient::MsgClientObjectUpdateRequestAck::MergeFrom(from.client_object_update_ack());
    }
    if (from._has_bit(33)) {
      mutable_client_object_destruction_ack()->::MsgsMessengerToClient::MsgClientObjectDestructionRequestAck::MergeFrom(from.client_object_destruction_ack());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMessengerToClient_Content::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMessengerToClient_Content::CopyFrom(const MsgMessengerToClient_Content& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMessengerToClient_Content::IsInitialized() const {
  
  if (has_limit_creation()) {
    if (!this->limit_creation().IsInitialized()) return false;
  }
  if (has_limit_update()) {
    if (!this->limit_update().IsInitialized()) return false;
  }
  if (has_limit_destruction()) {
    if (!this->limit_destruction().IsInitialized()) return false;
  }
  if (has_lima_creation()) {
    if (!this->lima_creation().IsInitialized()) return false;
  }
  if (has_lima_update()) {
    if (!this->lima_update().IsInitialized()) return false;
  }
  if (has_lima_destruction()) {
    if (!this->lima_destruction().IsInitialized()) return false;
  }
  if (has_intelligence_creation()) {
    if (!this->intelligence_creation().IsInitialized()) return false;
  }
  if (has_intelligence_update()) {
    if (!this->intelligence_update().IsInitialized()) return false;
  }
  if (has_intelligence_destruction()) {
    if (!this->intelligence_destruction().IsInitialized()) return false;
  }
  if (has_shape_creation()) {
    if (!this->shape_creation().IsInitialized()) return false;
  }
  if (has_shape_update()) {
    if (!this->shape_update().IsInitialized()) return false;
  }
  if (has_shape_destruction()) {
    if (!this->shape_destruction().IsInitialized()) return false;
  }
  if (has_shape_creation_request_ack()) {
    if (!this->shape_creation_request_ack().IsInitialized()) return false;
  }
  if (has_shape_destruction_request_ack()) {
    if (!this->shape_destruction_request_ack().IsInitialized()) return false;
  }
  if (has_text_message()) {
    if (!this->text_message().IsInitialized()) return false;
  }
  if (has_marker_creation()) {
    if (!this->marker_creation().IsInitialized()) return false;
  }
  if (has_marker_update()) {
    if (!this->marker_update().IsInitialized()) return false;
  }
  if (has_marker_destruction()) {
    if (!this->marker_destruction().IsInitialized()) return false;
  }
  if (has_client_object_creation()) {
    if (!this->client_object_creation().IsInitialized()) return false;
  }
  if (has_client_object_update()) {
    if (!this->client_object_update().IsInitialized()) return false;
  }
  if (has_client_object_destruction()) {
    if (!this->client_object_destruction().IsInitialized()) return false;
  }
  if (has_client_object_creation_ack()) {
    if (!this->client_object_creation_ack().IsInitialized()) return false;
  }
  if (has_client_object_update_ack()) {
    if (!this->client_object_update_ack().IsInitialized()) return false;
  }
  if (has_client_object_destruction_ack()) {
    if (!this->client_object_destruction_ack().IsInitialized()) return false;
  }
  return true;
}

void MsgMessengerToClient_Content::Swap(MsgMessengerToClient_Content* other) {
  if (other != this) {
    std::swap(limit_creation_, other->limit_creation_);
    std::swap(limit_update_, other->limit_update_);
    std::swap(limit_destruction_, other->limit_destruction_);
    std::swap(limit_creation_request_ack_, other->limit_creation_request_ack_);
    std::swap(limit_destruction_request_ack_, other->limit_destruction_request_ack_);
    std::swap(limit_update_request_ack_, other->limit_update_request_ack_);
    std::swap(lima_creation_, other->lima_creation_);
    std::swap(lima_update_, other->lima_update_);
    std::swap(lima_destruction_, other->lima_destruction_);
    std::swap(lima_creation_request_ack_, other->lima_creation_request_ack_);
    std::swap(lima_destruction_request_ack_, other->lima_destruction_request_ack_);
    std::swap(lima_update_request_ack_, other->lima_update_request_ack_);
    std::swap(intelligence_creation_, other->intelligence_creation_);
    std::swap(intelligence_update_, other->intelligence_update_);
    std::swap(intelligence_destruction_, other->intelligence_destruction_);
    std::swap(intelligence_creation_request_ack_, other->intelligence_creation_request_ack_);
    std::swap(intelligence_update_request_ack_, other->intelligence_update_request_ack_);
    std::swap(intelligence_destruction_request_ack_, other->intelligence_destruction_request_ack_);
    std::swap(shape_creation_, other->shape_creation_);
    std::swap(shape_update_, other->shape_update_);
    std::swap(shape_destruction_, other->shape_destruction_);
    std::swap(shape_creation_request_ack_, other->shape_creation_request_ack_);
    std::swap(shape_destruction_request_ack_, other->shape_destruction_request_ack_);
    std::swap(shape_update_request_ack_, other->shape_update_request_ack_);
    std::swap(text_message_, other->text_message_);
    std::swap(marker_creation_, other->marker_creation_);
    std::swap(marker_update_, other->marker_update_);
    std::swap(marker_destruction_, other->marker_destruction_);
    std::swap(client_object_creation_, other->client_object_creation_);
    std::swap(client_object_update_, other->client_object_update_);
    std::swap(client_object_destruction_, other->client_object_destruction_);
    std::swap(client_object_creation_ack_, other->client_object_creation_ack_);
    std::swap(client_object_update_ack_, other->client_object_update_ack_);
    std::swap(client_object_destruction_ack_, other->client_object_destruction_ack_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMessengerToClient_Content::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMessengerToClient_Content_descriptor_;
  metadata.reflection = MsgMessengerToClient_Content_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MsgMessengerToClient::kContextFieldNumber;
const int MsgMessengerToClient::kMessageFieldNumber;
#endif  // !_MSC_VER

MsgMessengerToClient::MsgMessengerToClient() {
  SharedCtor();
}

void MsgMessengerToClient::InitAsDefaultInstance() {
  message_ = const_cast< ::MsgsMessengerToClient::MsgMessengerToClient_Content*>(&::MsgsMessengerToClient::MsgMessengerToClient_Content::default_instance());
}

MsgMessengerToClient::MsgMessengerToClient(const MsgMessengerToClient& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMessengerToClient::SharedCtor() {
  _cached_size_ = 0;
  context_ = 0;
  message_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMessengerToClient::~MsgMessengerToClient() {
  SharedDtor();
}

void MsgMessengerToClient::SharedDtor() {
  if (this != default_instance_) {
    delete message_;
  }
}

const ::google::protobuf::Descriptor* MsgMessengerToClient::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMessengerToClient_descriptor_;
}

const MsgMessengerToClient& MsgMessengerToClient::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessengerToClient_2eproto();  return *default_instance_;
}

MsgMessengerToClient* MsgMessengerToClient::default_instance_ = NULL;

MsgMessengerToClient* MsgMessengerToClient::New() const {
  return new MsgMessengerToClient;
}

void MsgMessengerToClient::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    context_ = 0;
    if (_has_bit(1)) {
      if (message_ != NULL) message_->::MsgsMessengerToClient::MsgMessengerToClient_Content::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMessengerToClient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 context = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &context_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }
      
      // required .MsgsMessengerToClient.MsgMessengerToClient.Content message = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_message:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_message()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMessengerToClient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMessengerToClient::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 context = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->context(), output);
  }
  
  // required .MsgsMessengerToClient.MsgMessengerToClient.Content message = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->message(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMessengerToClient::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 context = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->context(), target);
  }
  
  // required .MsgsMessengerToClient.MsgMessengerToClient.Content message = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->message(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMessengerToClient::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 context = 1;
    if (has_context()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->context());
    }
    
    // required .MsgsMessengerToClient.MsgMessengerToClient.Content message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->message());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMessengerToClient::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMessengerToClient* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMessengerToClient*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMessengerToClient::MergeFrom(const MsgMessengerToClient& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_context(from.context());
    }
    if (from._has_bit(1)) {
      mutable_message()->::MsgsMessengerToClient::MsgMessengerToClient_Content::MergeFrom(from.message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMessengerToClient::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMessengerToClient::CopyFrom(const MsgMessengerToClient& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMessengerToClient::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  
  if (has_message()) {
    if (!this->message().IsInitialized()) return false;
  }
  return true;
}

void MsgMessengerToClient::Swap(MsgMessengerToClient* other) {
  if (other != this) {
    std::swap(context_, other->context_);
    std::swap(message_, other->message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMessengerToClient::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMessengerToClient_descriptor_;
  metadata.reflection = MsgMessengerToClient_reflection_;
  return metadata;
}


}  // namespace MsgsMessengerToClient
