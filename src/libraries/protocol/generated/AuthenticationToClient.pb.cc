// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "AuthenticationToClient.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>

namespace MsgsAuthenticationToClient {

namespace {

const ::google::protobuf::Descriptor* MsgAuthenticationResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgAuthenticationResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgAuthenticationResponse_ErrorCode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgProfileCreation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProfileCreation_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgProfileCreationRequestAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProfileCreationRequestAck_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgProfileCreationRequestAck_ErrorCode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgProfileUpdateRequestAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProfileUpdateRequestAck_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgProfileUpdateRequestAck_ErrorCode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgProfileUpdate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProfileUpdate_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgProfileDestruction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProfileDestruction_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgProfileDestructionRequestAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProfileDestructionRequestAck_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgProfileDestructionRequestAck_ErrorCode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* FormationList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FormationList_reflection_ = NULL;
const ::google::protobuf::Descriptor* TeamList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TeamList_reflection_ = NULL;
const ::google::protobuf::Descriptor* PopulationList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PopulationList_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgProfile_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProfile_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgAuthenticationToClient_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgAuthenticationToClient_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgAuthenticationToClient_Content_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgAuthenticationToClient_Content_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_AuthenticationToClient_2eproto() {
  protobuf_AddDesc_AuthenticationToClient_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "AuthenticationToClient.proto");
  GOOGLE_CHECK(file != NULL);
  MsgAuthenticationResponse_descriptor_ = file->message_type(0);
  static const int MsgAuthenticationResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAuthenticationResponse, error_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAuthenticationResponse, profile_),
  };
  MsgAuthenticationResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgAuthenticationResponse_descriptor_,
      MsgAuthenticationResponse::default_instance_,
      MsgAuthenticationResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAuthenticationResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAuthenticationResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgAuthenticationResponse));
  MsgAuthenticationResponse_ErrorCode_descriptor_ = MsgAuthenticationResponse_descriptor_->enum_type(0);
  MsgProfileCreation_descriptor_ = file->message_type(1);
  static const int MsgProfileCreation_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfileCreation, profile_),
  };
  MsgProfileCreation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProfileCreation_descriptor_,
      MsgProfileCreation::default_instance_,
      MsgProfileCreation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfileCreation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfileCreation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProfileCreation));
  MsgProfileCreationRequestAck_descriptor_ = file->message_type(2);
  static const int MsgProfileCreationRequestAck_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfileCreationRequestAck, login_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfileCreationRequestAck, error_code_),
  };
  MsgProfileCreationRequestAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProfileCreationRequestAck_descriptor_,
      MsgProfileCreationRequestAck::default_instance_,
      MsgProfileCreationRequestAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfileCreationRequestAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfileCreationRequestAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProfileCreationRequestAck));
  MsgProfileCreationRequestAck_ErrorCode_descriptor_ = MsgProfileCreationRequestAck_descriptor_->enum_type(0);
  MsgProfileUpdateRequestAck_descriptor_ = file->message_type(3);
  static const int MsgProfileUpdateRequestAck_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfileUpdateRequestAck, login_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfileUpdateRequestAck, error_code_),
  };
  MsgProfileUpdateRequestAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProfileUpdateRequestAck_descriptor_,
      MsgProfileUpdateRequestAck::default_instance_,
      MsgProfileUpdateRequestAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfileUpdateRequestAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfileUpdateRequestAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProfileUpdateRequestAck));
  MsgProfileUpdateRequestAck_ErrorCode_descriptor_ = MsgProfileUpdateRequestAck_descriptor_->enum_type(0);
  MsgProfileUpdate_descriptor_ = file->message_type(4);
  static const int MsgProfileUpdate_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfileUpdate, login_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfileUpdate, profile_),
  };
  MsgProfileUpdate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProfileUpdate_descriptor_,
      MsgProfileUpdate::default_instance_,
      MsgProfileUpdate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfileUpdate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfileUpdate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProfileUpdate));
  MsgProfileDestruction_descriptor_ = file->message_type(5);
  static const int MsgProfileDestruction_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfileDestruction, login_),
  };
  MsgProfileDestruction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProfileDestruction_descriptor_,
      MsgProfileDestruction::default_instance_,
      MsgProfileDestruction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfileDestruction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfileDestruction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProfileDestruction));
  MsgProfileDestructionRequestAck_descriptor_ = file->message_type(6);
  static const int MsgProfileDestructionRequestAck_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfileDestructionRequestAck, error_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfileDestructionRequestAck, login_),
  };
  MsgProfileDestructionRequestAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProfileDestructionRequestAck_descriptor_,
      MsgProfileDestructionRequestAck::default_instance_,
      MsgProfileDestructionRequestAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfileDestructionRequestAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfileDestructionRequestAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProfileDestructionRequestAck));
  MsgProfileDestructionRequestAck_ErrorCode_descriptor_ = MsgProfileDestructionRequestAck_descriptor_->enum_type(0);
  FormationList_descriptor_ = file->message_type(7);
  static const int FormationList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FormationList, elem_),
  };
  FormationList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FormationList_descriptor_,
      FormationList::default_instance_,
      FormationList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FormationList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FormationList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FormationList));
  TeamList_descriptor_ = file->message_type(8);
  static const int TeamList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamList, elem_),
  };
  TeamList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TeamList_descriptor_,
      TeamList::default_instance_,
      TeamList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TeamList));
  PopulationList_descriptor_ = file->message_type(9);
  static const int PopulationList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PopulationList, elem_),
  };
  PopulationList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PopulationList_descriptor_,
      PopulationList::default_instance_,
      PopulationList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PopulationList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PopulationList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PopulationList));
  MsgProfile_descriptor_ = file->message_type(10);
  static const int MsgProfile_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfile, login_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfile, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfile, read_only_formations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfile, read_write_formations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfile, read_only_automates_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfile, read_write_automates_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfile, read_only_camps_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfile, read_write_camps_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfile, read_only_populations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfile, read_write_populations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfile, superviseur_),
  };
  MsgProfile_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProfile_descriptor_,
      MsgProfile::default_instance_,
      MsgProfile_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfile, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfile, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProfile));
  MsgAuthenticationToClient_descriptor_ = file->message_type(11);
  static const int MsgAuthenticationToClient_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAuthenticationToClient, context_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAuthenticationToClient, message_),
  };
  MsgAuthenticationToClient_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgAuthenticationToClient_descriptor_,
      MsgAuthenticationToClient::default_instance_,
      MsgAuthenticationToClient_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAuthenticationToClient, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAuthenticationToClient, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgAuthenticationToClient));
  MsgAuthenticationToClient_Content_descriptor_ = MsgAuthenticationToClient_descriptor_->nested_type(0);
  static const int MsgAuthenticationToClient_Content_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAuthenticationToClient_Content, authentication_response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAuthenticationToClient_Content, profile_creation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAuthenticationToClient_Content, profile_creation_request_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAuthenticationToClient_Content, profile_update_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAuthenticationToClient_Content, profile_update_request_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAuthenticationToClient_Content, profile_destruction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAuthenticationToClient_Content, profile_destruction_request_ack_),
  };
  MsgAuthenticationToClient_Content_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgAuthenticationToClient_Content_descriptor_,
      MsgAuthenticationToClient_Content::default_instance_,
      MsgAuthenticationToClient_Content_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAuthenticationToClient_Content, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAuthenticationToClient_Content, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgAuthenticationToClient_Content));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_AuthenticationToClient_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgAuthenticationResponse_descriptor_, &MsgAuthenticationResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProfileCreation_descriptor_, &MsgProfileCreation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProfileCreationRequestAck_descriptor_, &MsgProfileCreationRequestAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProfileUpdateRequestAck_descriptor_, &MsgProfileUpdateRequestAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProfileUpdate_descriptor_, &MsgProfileUpdate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProfileDestruction_descriptor_, &MsgProfileDestruction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProfileDestructionRequestAck_descriptor_, &MsgProfileDestructionRequestAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FormationList_descriptor_, &FormationList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TeamList_descriptor_, &TeamList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PopulationList_descriptor_, &PopulationList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProfile_descriptor_, &MsgProfile::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgAuthenticationToClient_descriptor_, &MsgAuthenticationToClient::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgAuthenticationToClient_Content_descriptor_, &MsgAuthenticationToClient_Content::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_AuthenticationToClient_2eproto() {
  delete MsgAuthenticationResponse::default_instance_;
  delete MsgAuthenticationResponse_reflection_;
  delete MsgProfileCreation::default_instance_;
  delete MsgProfileCreation_reflection_;
  delete MsgProfileCreationRequestAck::default_instance_;
  delete MsgProfileCreationRequestAck_reflection_;
  delete MsgProfileUpdateRequestAck::default_instance_;
  delete MsgProfileUpdateRequestAck_reflection_;
  delete MsgProfileUpdate::default_instance_;
  delete MsgProfileUpdate_reflection_;
  delete MsgProfileDestruction::default_instance_;
  delete MsgProfileDestruction_reflection_;
  delete MsgProfileDestructionRequestAck::default_instance_;
  delete MsgProfileDestructionRequestAck_reflection_;
  delete FormationList::default_instance_;
  delete FormationList_reflection_;
  delete TeamList::default_instance_;
  delete TeamList_reflection_;
  delete PopulationList::default_instance_;
  delete PopulationList_reflection_;
  delete MsgProfile::default_instance_;
  delete MsgProfile_reflection_;
  delete MsgAuthenticationToClient::default_instance_;
  delete MsgAuthenticationToClient_reflection_;
  delete MsgAuthenticationToClient_Content::default_instance_;
  delete MsgAuthenticationToClient_Content_reflection_;
}

void protobuf_AddDesc_AuthenticationToClient_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Common::protobuf_AddDesc_Common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\034AuthenticationToClient.proto\022\032MsgsAuth"
    "enticationToClient\032\014Common.proto\"\326\001\n\031Msg"
    "AuthenticationResponse\022S\n\nerror_code\030\001 \002"
    "(\0162?.MsgsAuthenticationToClient.MsgAuthe"
    "nticationResponse.ErrorCode\0227\n\007profile\030\002"
    " \001(\0132&.MsgsAuthenticationToClient.MsgPro"
    "file\"+\n\tErrorCode\022\013\n\007success\020\000\022\021\n\rinvali"
    "d_login\020\001\"M\n\022MsgProfileCreation\0227\n\007profi"
    "le\030\001 \001(\0132&.MsgsAuthenticationToClient.Ms"
    "gProfile\"\335\001\n\034MsgProfileCreationRequestAc"
    "k\022\r\n\005login\030\001 \002(\t\022V\n\nerror_code\030\002 \002(\0162B.M"
    "sgsAuthenticationToClient.MsgProfileCrea"
    "tionRequestAck.ErrorCode\"V\n\tErrorCode\022\013\n"
    "\007success\020\000\022\021\n\rinvalid_login\020\001\022\024\n\020invalid"
    "_password\020\002\022\023\n\017duplicate_login\020\003\"\356\001\n\032Msg"
    "ProfileUpdateRequestAck\022\r\n\005login\030\001 \002(\t\022T"
    "\n\nerror_code\030\002 \002(\0162@.MsgsAuthenticationT"
    "oClient.MsgProfileUpdateRequestAck.Error"
    "Code\"k\n\tErrorCode\022\013\n\007success\020\000\022\023\n\017invali"
    "d_profile\020\001\022\021\n\rinvalid_login\020\002\022\024\n\020invali"
    "d_password\020\003\022\023\n\017duplicate_login\020\004\"Z\n\020Msg"
    "ProfileUpdate\022\r\n\005login\030\001 \002(\t\0227\n\007profile\030"
    "\002 \002(\0132&.MsgsAuthenticationToClient.MsgPr"
    "ofile\"&\n\025MsgProfileDestruction\022\r\n\005login\030"
    "\001 \001(\t\"\307\001\n\037MsgProfileDestructionRequestAc"
    "k\022Y\n\nerror_code\030\001 \002(\0162E.MsgsAuthenticati"
    "onToClient.MsgProfileDestructionRequestA"
    "ck.ErrorCode\022\r\n\005login\030\002 \002(\t\":\n\tErrorCode"
    "\022\013\n\007success\020\000\022\023\n\017invalid_profile\020\001\022\013\n\007fa"
    "ilure\020\002\"3\n\rFormationList\022\"\n\004elem\030\001 \003(\0132\024"
    ".Common.MsgFormation\")\n\010TeamList\022\035\n\004elem"
    "\030\001 \003(\0132\017.Common.MsgTeam\"5\n\016PopulationLis"
    "t\022#\n\004elem\030\001 \003(\0132\025.Common.MsgPopulation\"\326"
    "\004\n\nMsgProfile\022\r\n\005login\030\001 \002(\t\022\020\n\010password"
    "\030\002 \001(\t\022G\n\024read_only_formations\030\003 \001(\0132).M"
    "sgsAuthenticationToClient.FormationList\022"
    "H\n\025read_write_formations\030\004 \001(\0132).MsgsAut"
    "henticationToClient.FormationList\0223\n\023rea"
    "d_only_automates\030\005 \001(\0132\026.Common.MsgAutom"
    "atList\0224\n\024read_write_automates\030\006 \001(\0132\026.C"
    "ommon.MsgAutomatList\022=\n\017read_only_camps\030"
    "\007 \001(\0132$.MsgsAuthenticationToClient.TeamL"
    "ist\022>\n\020read_write_camps\030\010 \001(\0132$.MsgsAuth"
    "enticationToClient.TeamList\022I\n\025read_only"
    "_populations\030\t \001(\0132*.MsgsAuthenticationT"
    "oClient.PopulationList\022J\n\026read_write_pop"
    "ulations\030\n \001(\0132*.MsgsAuthenticationToCli"
    "ent.PopulationList\022\023\n\013superviseur\030\013 \002(\010\""
    "\345\005\n\031MsgAuthenticationToClient\022\022\n\007context"
    "\030\001 \001(\005:\0010\022N\n\007message\030\002 \002(\0132=.MsgsAuthent"
    "icationToClient.MsgAuthenticationToClien"
    "t.Content\032\343\004\n\007Content\022V\n\027authentication_"
    "response\030\001 \001(\01325.MsgsAuthenticationToCli"
    "ent.MsgAuthenticationResponse\022H\n\020profile"
    "_creation\030\002 \001(\0132..MsgsAuthenticationToCl"
    "ient.MsgProfileCreation\022^\n\034profile_creat"
    "ion_request_ack\030\003 \001(\01328.MsgsAuthenticati"
    "onToClient.MsgProfileCreationRequestAck\022"
    "D\n\016profile_update\030\004 \001(\0132,.MsgsAuthentica"
    "tionToClient.MsgProfileUpdate\022Z\n\032profile"
    "_update_request_ack\030\005 \001(\01326.MsgsAuthenti"
    "cationToClient.MsgProfileUpdateRequestAc"
    "k\022N\n\023profile_destruction\030\006 \001(\01321.MsgsAut"
    "henticationToClient.MsgProfileDestructio"
    "n\022d\n\037profile_destruction_request_ack\030\007 \001"
    "(\0132;.MsgsAuthenticationToClient.MsgProfi"
    "leDestructionRequestAck", 2663);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AuthenticationToClient.proto", &protobuf_RegisterTypes);
  MsgAuthenticationResponse::default_instance_ = new MsgAuthenticationResponse();
  MsgProfileCreation::default_instance_ = new MsgProfileCreation();
  MsgProfileCreationRequestAck::default_instance_ = new MsgProfileCreationRequestAck();
  MsgProfileUpdateRequestAck::default_instance_ = new MsgProfileUpdateRequestAck();
  MsgProfileUpdate::default_instance_ = new MsgProfileUpdate();
  MsgProfileDestruction::default_instance_ = new MsgProfileDestruction();
  MsgProfileDestructionRequestAck::default_instance_ = new MsgProfileDestructionRequestAck();
  FormationList::default_instance_ = new FormationList();
  TeamList::default_instance_ = new TeamList();
  PopulationList::default_instance_ = new PopulationList();
  MsgProfile::default_instance_ = new MsgProfile();
  MsgAuthenticationToClient::default_instance_ = new MsgAuthenticationToClient();
  MsgAuthenticationToClient_Content::default_instance_ = new MsgAuthenticationToClient_Content();
  MsgAuthenticationResponse::default_instance_->InitAsDefaultInstance();
  MsgProfileCreation::default_instance_->InitAsDefaultInstance();
  MsgProfileCreationRequestAck::default_instance_->InitAsDefaultInstance();
  MsgProfileUpdateRequestAck::default_instance_->InitAsDefaultInstance();
  MsgProfileUpdate::default_instance_->InitAsDefaultInstance();
  MsgProfileDestruction::default_instance_->InitAsDefaultInstance();
  MsgProfileDestructionRequestAck::default_instance_->InitAsDefaultInstance();
  FormationList::default_instance_->InitAsDefaultInstance();
  TeamList::default_instance_->InitAsDefaultInstance();
  PopulationList::default_instance_->InitAsDefaultInstance();
  MsgProfile::default_instance_->InitAsDefaultInstance();
  MsgAuthenticationToClient::default_instance_->InitAsDefaultInstance();
  MsgAuthenticationToClient_Content::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_AuthenticationToClient_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_AuthenticationToClient_2eproto {
  StaticDescriptorInitializer_AuthenticationToClient_2eproto() {
    protobuf_AddDesc_AuthenticationToClient_2eproto();
  }
} static_descriptor_initializer_AuthenticationToClient_2eproto_;


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgAuthenticationResponse_ErrorCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgAuthenticationResponse_ErrorCode_descriptor_;
}
bool MsgAuthenticationResponse_ErrorCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgAuthenticationResponse_ErrorCode MsgAuthenticationResponse::success;
const MsgAuthenticationResponse_ErrorCode MsgAuthenticationResponse::invalid_login;
const MsgAuthenticationResponse_ErrorCode MsgAuthenticationResponse::ErrorCode_MIN;
const MsgAuthenticationResponse_ErrorCode MsgAuthenticationResponse::ErrorCode_MAX;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgAuthenticationResponse::kErrorCodeFieldNumber;
const int MsgAuthenticationResponse::kProfileFieldNumber;
#endif  // !_MSC_VER

MsgAuthenticationResponse::MsgAuthenticationResponse() {
  SharedCtor();
}

void MsgAuthenticationResponse::InitAsDefaultInstance() {
  profile_ = const_cast< ::MsgsAuthenticationToClient::MsgProfile*>(&::MsgsAuthenticationToClient::MsgProfile::default_instance());
}

MsgAuthenticationResponse::MsgAuthenticationResponse(const MsgAuthenticationResponse& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgAuthenticationResponse::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0;
  profile_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgAuthenticationResponse::~MsgAuthenticationResponse() {
  SharedDtor();
}

void MsgAuthenticationResponse::SharedDtor() {
  if (this != default_instance_) {
    delete profile_;
  }
}

const ::google::protobuf::Descriptor* MsgAuthenticationResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgAuthenticationResponse_descriptor_;
}

const MsgAuthenticationResponse& MsgAuthenticationResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AuthenticationToClient_2eproto();  return *default_instance_;
}

MsgAuthenticationResponse* MsgAuthenticationResponse::default_instance_ = NULL;

MsgAuthenticationResponse* MsgAuthenticationResponse::New() const {
  return new MsgAuthenticationResponse;
}

void MsgAuthenticationResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0;
    if (_has_bit(1)) {
      if (profile_ != NULL) profile_->::MsgsAuthenticationToClient::MsgProfile::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgAuthenticationResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MsgsAuthenticationToClient.MsgAuthenticationResponse.ErrorCode error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsAuthenticationToClient::MsgAuthenticationResponse_ErrorCode_IsValid(value)) {
          set_error_code(static_cast< ::MsgsAuthenticationToClient::MsgAuthenticationResponse_ErrorCode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectTag(18)) goto parse_profile;
        break;
      }
      
      // optional .MsgsAuthenticationToClient.MsgProfile profile = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_profile:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_profile()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgAuthenticationResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgAuthenticationResponse::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .MsgsAuthenticationToClient.MsgAuthenticationResponse.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }
  
  // optional .MsgsAuthenticationToClient.MsgProfile profile = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->profile(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgAuthenticationResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .MsgsAuthenticationToClient.MsgAuthenticationResponse.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }
  
  // optional .MsgsAuthenticationToClient.MsgProfile profile = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->profile(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgAuthenticationResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .MsgsAuthenticationToClient.MsgAuthenticationResponse.ErrorCode error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }
    
    // optional .MsgsAuthenticationToClient.MsgProfile profile = 2;
    if (has_profile()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->profile());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgAuthenticationResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgAuthenticationResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgAuthenticationResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgAuthenticationResponse::MergeFrom(const MsgAuthenticationResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_error_code(from.error_code());
    }
    if (from._has_bit(1)) {
      mutable_profile()->::MsgsAuthenticationToClient::MsgProfile::MergeFrom(from.profile());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgAuthenticationResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgAuthenticationResponse::CopyFrom(const MsgAuthenticationResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgAuthenticationResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_profile()) {
    if (!this->profile().IsInitialized()) return false;
  }
  return true;
}

void MsgAuthenticationResponse::Swap(MsgAuthenticationResponse* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(profile_, other->profile_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgAuthenticationResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgAuthenticationResponse_descriptor_;
  metadata.reflection = MsgAuthenticationResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgProfileCreation::kProfileFieldNumber;
#endif  // !_MSC_VER

MsgProfileCreation::MsgProfileCreation() {
  SharedCtor();
}

void MsgProfileCreation::InitAsDefaultInstance() {
  profile_ = const_cast< ::MsgsAuthenticationToClient::MsgProfile*>(&::MsgsAuthenticationToClient::MsgProfile::default_instance());
}

MsgProfileCreation::MsgProfileCreation(const MsgProfileCreation& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgProfileCreation::SharedCtor() {
  _cached_size_ = 0;
  profile_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProfileCreation::~MsgProfileCreation() {
  SharedDtor();
}

void MsgProfileCreation::SharedDtor() {
  if (this != default_instance_) {
    delete profile_;
  }
}

const ::google::protobuf::Descriptor* MsgProfileCreation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProfileCreation_descriptor_;
}

const MsgProfileCreation& MsgProfileCreation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AuthenticationToClient_2eproto();  return *default_instance_;
}

MsgProfileCreation* MsgProfileCreation::default_instance_ = NULL;

MsgProfileCreation* MsgProfileCreation::New() const {
  return new MsgProfileCreation;
}

void MsgProfileCreation::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (profile_ != NULL) profile_->::MsgsAuthenticationToClient::MsgProfile::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProfileCreation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgsAuthenticationToClient.MsgProfile profile = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_profile()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgProfileCreation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgProfileCreation::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .MsgsAuthenticationToClient.MsgProfile profile = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->profile(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgProfileCreation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .MsgsAuthenticationToClient.MsgProfile profile = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->profile(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgProfileCreation::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgsAuthenticationToClient.MsgProfile profile = 1;
    if (has_profile()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->profile());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgProfileCreation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProfileCreation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProfileCreation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProfileCreation::MergeFrom(const MsgProfileCreation& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_profile()->::MsgsAuthenticationToClient::MsgProfile::MergeFrom(from.profile());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProfileCreation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProfileCreation::CopyFrom(const MsgProfileCreation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProfileCreation::IsInitialized() const {
  
  if (has_profile()) {
    if (!this->profile().IsInitialized()) return false;
  }
  return true;
}

void MsgProfileCreation::Swap(MsgProfileCreation* other) {
  if (other != this) {
    std::swap(profile_, other->profile_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProfileCreation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProfileCreation_descriptor_;
  metadata.reflection = MsgProfileCreation_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgProfileCreationRequestAck_ErrorCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProfileCreationRequestAck_ErrorCode_descriptor_;
}
bool MsgProfileCreationRequestAck_ErrorCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgProfileCreationRequestAck_ErrorCode MsgProfileCreationRequestAck::success;
const MsgProfileCreationRequestAck_ErrorCode MsgProfileCreationRequestAck::invalid_login;
const MsgProfileCreationRequestAck_ErrorCode MsgProfileCreationRequestAck::invalid_password;
const MsgProfileCreationRequestAck_ErrorCode MsgProfileCreationRequestAck::duplicate_login;
const MsgProfileCreationRequestAck_ErrorCode MsgProfileCreationRequestAck::ErrorCode_MIN;
const MsgProfileCreationRequestAck_ErrorCode MsgProfileCreationRequestAck::ErrorCode_MAX;
#endif  // _MSC_VER
const ::std::string MsgProfileCreationRequestAck::_default_login_;
#ifndef _MSC_VER
const int MsgProfileCreationRequestAck::kLoginFieldNumber;
const int MsgProfileCreationRequestAck::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

MsgProfileCreationRequestAck::MsgProfileCreationRequestAck() {
  SharedCtor();
}

void MsgProfileCreationRequestAck::InitAsDefaultInstance() {
}

MsgProfileCreationRequestAck::MsgProfileCreationRequestAck(const MsgProfileCreationRequestAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgProfileCreationRequestAck::SharedCtor() {
  _cached_size_ = 0;
  login_ = const_cast< ::std::string*>(&_default_login_);
  error_code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProfileCreationRequestAck::~MsgProfileCreationRequestAck() {
  SharedDtor();
}

void MsgProfileCreationRequestAck::SharedDtor() {
  if (login_ != &_default_login_) {
    delete login_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgProfileCreationRequestAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProfileCreationRequestAck_descriptor_;
}

const MsgProfileCreationRequestAck& MsgProfileCreationRequestAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AuthenticationToClient_2eproto();  return *default_instance_;
}

MsgProfileCreationRequestAck* MsgProfileCreationRequestAck::default_instance_ = NULL;

MsgProfileCreationRequestAck* MsgProfileCreationRequestAck::New() const {
  return new MsgProfileCreationRequestAck;
}

void MsgProfileCreationRequestAck::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (login_ != &_default_login_) {
        login_->clear();
      }
    }
    error_code_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProfileCreationRequestAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string login = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_login()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->login().data(), this->login().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(16)) goto parse_error_code;
        break;
      }
      
      // required .MsgsAuthenticationToClient.MsgProfileCreationRequestAck.ErrorCode error_code = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_error_code:
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsAuthenticationToClient::MsgProfileCreationRequestAck_ErrorCode_IsValid(value)) {
          set_error_code(static_cast< ::MsgsAuthenticationToClient::MsgProfileCreationRequestAck_ErrorCode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(2, value);
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgProfileCreationRequestAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgProfileCreationRequestAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required string login = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->login().data(), this->login().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->login(), output);
  }
  
  // required .MsgsAuthenticationToClient.MsgProfileCreationRequestAck.ErrorCode error_code = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->error_code(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgProfileCreationRequestAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string login = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->login().data(), this->login().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->login(), target);
  }
  
  // required .MsgsAuthenticationToClient.MsgProfileCreationRequestAck.ErrorCode error_code = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->error_code(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgProfileCreationRequestAck::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string login = 1;
    if (has_login()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->login());
    }
    
    // required .MsgsAuthenticationToClient.MsgProfileCreationRequestAck.ErrorCode error_code = 2;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgProfileCreationRequestAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProfileCreationRequestAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProfileCreationRequestAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProfileCreationRequestAck::MergeFrom(const MsgProfileCreationRequestAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_login(from.login());
    }
    if (from._has_bit(1)) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProfileCreationRequestAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProfileCreationRequestAck::CopyFrom(const MsgProfileCreationRequestAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProfileCreationRequestAck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void MsgProfileCreationRequestAck::Swap(MsgProfileCreationRequestAck* other) {
  if (other != this) {
    std::swap(login_, other->login_);
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProfileCreationRequestAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProfileCreationRequestAck_descriptor_;
  metadata.reflection = MsgProfileCreationRequestAck_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgProfileUpdateRequestAck_ErrorCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProfileUpdateRequestAck_ErrorCode_descriptor_;
}
bool MsgProfileUpdateRequestAck_ErrorCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgProfileUpdateRequestAck_ErrorCode MsgProfileUpdateRequestAck::success;
const MsgProfileUpdateRequestAck_ErrorCode MsgProfileUpdateRequestAck::invalid_profile;
const MsgProfileUpdateRequestAck_ErrorCode MsgProfileUpdateRequestAck::invalid_login;
const MsgProfileUpdateRequestAck_ErrorCode MsgProfileUpdateRequestAck::invalid_password;
const MsgProfileUpdateRequestAck_ErrorCode MsgProfileUpdateRequestAck::duplicate_login;
const MsgProfileUpdateRequestAck_ErrorCode MsgProfileUpdateRequestAck::ErrorCode_MIN;
const MsgProfileUpdateRequestAck_ErrorCode MsgProfileUpdateRequestAck::ErrorCode_MAX;
#endif  // _MSC_VER
const ::std::string MsgProfileUpdateRequestAck::_default_login_;
#ifndef _MSC_VER
const int MsgProfileUpdateRequestAck::kLoginFieldNumber;
const int MsgProfileUpdateRequestAck::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

MsgProfileUpdateRequestAck::MsgProfileUpdateRequestAck() {
  SharedCtor();
}

void MsgProfileUpdateRequestAck::InitAsDefaultInstance() {
}

MsgProfileUpdateRequestAck::MsgProfileUpdateRequestAck(const MsgProfileUpdateRequestAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgProfileUpdateRequestAck::SharedCtor() {
  _cached_size_ = 0;
  login_ = const_cast< ::std::string*>(&_default_login_);
  error_code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProfileUpdateRequestAck::~MsgProfileUpdateRequestAck() {
  SharedDtor();
}

void MsgProfileUpdateRequestAck::SharedDtor() {
  if (login_ != &_default_login_) {
    delete login_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgProfileUpdateRequestAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProfileUpdateRequestAck_descriptor_;
}

const MsgProfileUpdateRequestAck& MsgProfileUpdateRequestAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AuthenticationToClient_2eproto();  return *default_instance_;
}

MsgProfileUpdateRequestAck* MsgProfileUpdateRequestAck::default_instance_ = NULL;

MsgProfileUpdateRequestAck* MsgProfileUpdateRequestAck::New() const {
  return new MsgProfileUpdateRequestAck;
}

void MsgProfileUpdateRequestAck::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (login_ != &_default_login_) {
        login_->clear();
      }
    }
    error_code_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProfileUpdateRequestAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string login = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_login()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->login().data(), this->login().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(16)) goto parse_error_code;
        break;
      }
      
      // required .MsgsAuthenticationToClient.MsgProfileUpdateRequestAck.ErrorCode error_code = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_error_code:
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsAuthenticationToClient::MsgProfileUpdateRequestAck_ErrorCode_IsValid(value)) {
          set_error_code(static_cast< ::MsgsAuthenticationToClient::MsgProfileUpdateRequestAck_ErrorCode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(2, value);
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgProfileUpdateRequestAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgProfileUpdateRequestAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required string login = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->login().data(), this->login().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->login(), output);
  }
  
  // required .MsgsAuthenticationToClient.MsgProfileUpdateRequestAck.ErrorCode error_code = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->error_code(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgProfileUpdateRequestAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string login = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->login().data(), this->login().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->login(), target);
  }
  
  // required .MsgsAuthenticationToClient.MsgProfileUpdateRequestAck.ErrorCode error_code = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->error_code(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgProfileUpdateRequestAck::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string login = 1;
    if (has_login()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->login());
    }
    
    // required .MsgsAuthenticationToClient.MsgProfileUpdateRequestAck.ErrorCode error_code = 2;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgProfileUpdateRequestAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProfileUpdateRequestAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProfileUpdateRequestAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProfileUpdateRequestAck::MergeFrom(const MsgProfileUpdateRequestAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_login(from.login());
    }
    if (from._has_bit(1)) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProfileUpdateRequestAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProfileUpdateRequestAck::CopyFrom(const MsgProfileUpdateRequestAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProfileUpdateRequestAck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void MsgProfileUpdateRequestAck::Swap(MsgProfileUpdateRequestAck* other) {
  if (other != this) {
    std::swap(login_, other->login_);
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProfileUpdateRequestAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProfileUpdateRequestAck_descriptor_;
  metadata.reflection = MsgProfileUpdateRequestAck_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgProfileUpdate::_default_login_;
#ifndef _MSC_VER
const int MsgProfileUpdate::kLoginFieldNumber;
const int MsgProfileUpdate::kProfileFieldNumber;
#endif  // !_MSC_VER

MsgProfileUpdate::MsgProfileUpdate() {
  SharedCtor();
}

void MsgProfileUpdate::InitAsDefaultInstance() {
  profile_ = const_cast< ::MsgsAuthenticationToClient::MsgProfile*>(&::MsgsAuthenticationToClient::MsgProfile::default_instance());
}

MsgProfileUpdate::MsgProfileUpdate(const MsgProfileUpdate& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgProfileUpdate::SharedCtor() {
  _cached_size_ = 0;
  login_ = const_cast< ::std::string*>(&_default_login_);
  profile_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProfileUpdate::~MsgProfileUpdate() {
  SharedDtor();
}

void MsgProfileUpdate::SharedDtor() {
  if (login_ != &_default_login_) {
    delete login_;
  }
  if (this != default_instance_) {
    delete profile_;
  }
}

const ::google::protobuf::Descriptor* MsgProfileUpdate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProfileUpdate_descriptor_;
}

const MsgProfileUpdate& MsgProfileUpdate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AuthenticationToClient_2eproto();  return *default_instance_;
}

MsgProfileUpdate* MsgProfileUpdate::default_instance_ = NULL;

MsgProfileUpdate* MsgProfileUpdate::New() const {
  return new MsgProfileUpdate;
}

void MsgProfileUpdate::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (login_ != &_default_login_) {
        login_->clear();
      }
    }
    if (_has_bit(1)) {
      if (profile_ != NULL) profile_->::MsgsAuthenticationToClient::MsgProfile::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProfileUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string login = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_login()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->login().data(), this->login().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(18)) goto parse_profile;
        break;
      }
      
      // required .MsgsAuthenticationToClient.MsgProfile profile = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_profile:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_profile()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgProfileUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgProfileUpdate::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required string login = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->login().data(), this->login().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->login(), output);
  }
  
  // required .MsgsAuthenticationToClient.MsgProfile profile = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->profile(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgProfileUpdate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string login = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->login().data(), this->login().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->login(), target);
  }
  
  // required .MsgsAuthenticationToClient.MsgProfile profile = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->profile(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgProfileUpdate::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string login = 1;
    if (has_login()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->login());
    }
    
    // required .MsgsAuthenticationToClient.MsgProfile profile = 2;
    if (has_profile()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->profile());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgProfileUpdate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProfileUpdate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProfileUpdate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProfileUpdate::MergeFrom(const MsgProfileUpdate& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_login(from.login());
    }
    if (from._has_bit(1)) {
      mutable_profile()->::MsgsAuthenticationToClient::MsgProfile::MergeFrom(from.profile());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProfileUpdate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProfileUpdate::CopyFrom(const MsgProfileUpdate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProfileUpdate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_profile()) {
    if (!this->profile().IsInitialized()) return false;
  }
  return true;
}

void MsgProfileUpdate::Swap(MsgProfileUpdate* other) {
  if (other != this) {
    std::swap(login_, other->login_);
    std::swap(profile_, other->profile_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProfileUpdate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProfileUpdate_descriptor_;
  metadata.reflection = MsgProfileUpdate_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgProfileDestruction::_default_login_;
#ifndef _MSC_VER
const int MsgProfileDestruction::kLoginFieldNumber;
#endif  // !_MSC_VER

MsgProfileDestruction::MsgProfileDestruction() {
  SharedCtor();
}

void MsgProfileDestruction::InitAsDefaultInstance() {
}

MsgProfileDestruction::MsgProfileDestruction(const MsgProfileDestruction& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgProfileDestruction::SharedCtor() {
  _cached_size_ = 0;
  login_ = const_cast< ::std::string*>(&_default_login_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProfileDestruction::~MsgProfileDestruction() {
  SharedDtor();
}

void MsgProfileDestruction::SharedDtor() {
  if (login_ != &_default_login_) {
    delete login_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgProfileDestruction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProfileDestruction_descriptor_;
}

const MsgProfileDestruction& MsgProfileDestruction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AuthenticationToClient_2eproto();  return *default_instance_;
}

MsgProfileDestruction* MsgProfileDestruction::default_instance_ = NULL;

MsgProfileDestruction* MsgProfileDestruction::New() const {
  return new MsgProfileDestruction;
}

void MsgProfileDestruction::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (login_ != &_default_login_) {
        login_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProfileDestruction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string login = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_login()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->login().data(), this->login().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgProfileDestruction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgProfileDestruction::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional string login = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->login().data(), this->login().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->login(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgProfileDestruction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string login = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->login().data(), this->login().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->login(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgProfileDestruction::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string login = 1;
    if (has_login()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->login());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgProfileDestruction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProfileDestruction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProfileDestruction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProfileDestruction::MergeFrom(const MsgProfileDestruction& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_login(from.login());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProfileDestruction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProfileDestruction::CopyFrom(const MsgProfileDestruction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProfileDestruction::IsInitialized() const {
  
  return true;
}

void MsgProfileDestruction::Swap(MsgProfileDestruction* other) {
  if (other != this) {
    std::swap(login_, other->login_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProfileDestruction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProfileDestruction_descriptor_;
  metadata.reflection = MsgProfileDestruction_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgProfileDestructionRequestAck_ErrorCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProfileDestructionRequestAck_ErrorCode_descriptor_;
}
bool MsgProfileDestructionRequestAck_ErrorCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgProfileDestructionRequestAck_ErrorCode MsgProfileDestructionRequestAck::success;
const MsgProfileDestructionRequestAck_ErrorCode MsgProfileDestructionRequestAck::invalid_profile;
const MsgProfileDestructionRequestAck_ErrorCode MsgProfileDestructionRequestAck::failure;
const MsgProfileDestructionRequestAck_ErrorCode MsgProfileDestructionRequestAck::ErrorCode_MIN;
const MsgProfileDestructionRequestAck_ErrorCode MsgProfileDestructionRequestAck::ErrorCode_MAX;
#endif  // _MSC_VER
const ::std::string MsgProfileDestructionRequestAck::_default_login_;
#ifndef _MSC_VER
const int MsgProfileDestructionRequestAck::kErrorCodeFieldNumber;
const int MsgProfileDestructionRequestAck::kLoginFieldNumber;
#endif  // !_MSC_VER

MsgProfileDestructionRequestAck::MsgProfileDestructionRequestAck() {
  SharedCtor();
}

void MsgProfileDestructionRequestAck::InitAsDefaultInstance() {
}

MsgProfileDestructionRequestAck::MsgProfileDestructionRequestAck(const MsgProfileDestructionRequestAck& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgProfileDestructionRequestAck::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0;
  login_ = const_cast< ::std::string*>(&_default_login_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProfileDestructionRequestAck::~MsgProfileDestructionRequestAck() {
  SharedDtor();
}

void MsgProfileDestructionRequestAck::SharedDtor() {
  if (login_ != &_default_login_) {
    delete login_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgProfileDestructionRequestAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProfileDestructionRequestAck_descriptor_;
}

const MsgProfileDestructionRequestAck& MsgProfileDestructionRequestAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AuthenticationToClient_2eproto();  return *default_instance_;
}

MsgProfileDestructionRequestAck* MsgProfileDestructionRequestAck::default_instance_ = NULL;

MsgProfileDestructionRequestAck* MsgProfileDestructionRequestAck::New() const {
  return new MsgProfileDestructionRequestAck;
}

void MsgProfileDestructionRequestAck::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0;
    if (_has_bit(1)) {
      if (login_ != &_default_login_) {
        login_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProfileDestructionRequestAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MsgsAuthenticationToClient.MsgProfileDestructionRequestAck.ErrorCode error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsAuthenticationToClient::MsgProfileDestructionRequestAck_ErrorCode_IsValid(value)) {
          set_error_code(static_cast< ::MsgsAuthenticationToClient::MsgProfileDestructionRequestAck_ErrorCode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectTag(18)) goto parse_login;
        break;
      }
      
      // required string login = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_login:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_login()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->login().data(), this->login().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgProfileDestructionRequestAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgProfileDestructionRequestAck::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .MsgsAuthenticationToClient.MsgProfileDestructionRequestAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }
  
  // required string login = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->login().data(), this->login().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->login(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgProfileDestructionRequestAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .MsgsAuthenticationToClient.MsgProfileDestructionRequestAck.ErrorCode error_code = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }
  
  // required string login = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->login().data(), this->login().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->login(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgProfileDestructionRequestAck::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .MsgsAuthenticationToClient.MsgProfileDestructionRequestAck.ErrorCode error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }
    
    // required string login = 2;
    if (has_login()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->login());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgProfileDestructionRequestAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProfileDestructionRequestAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProfileDestructionRequestAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProfileDestructionRequestAck::MergeFrom(const MsgProfileDestructionRequestAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_error_code(from.error_code());
    }
    if (from._has_bit(1)) {
      set_login(from.login());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProfileDestructionRequestAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProfileDestructionRequestAck::CopyFrom(const MsgProfileDestructionRequestAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProfileDestructionRequestAck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void MsgProfileDestructionRequestAck::Swap(MsgProfileDestructionRequestAck* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(login_, other->login_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProfileDestructionRequestAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProfileDestructionRequestAck_descriptor_;
  metadata.reflection = MsgProfileDestructionRequestAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FormationList::kElemFieldNumber;
#endif  // !_MSC_VER

FormationList::FormationList() {
  SharedCtor();
}

void FormationList::InitAsDefaultInstance() {
}

FormationList::FormationList(const FormationList& from) {
  SharedCtor();
  MergeFrom(from);
}

void FormationList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FormationList::~FormationList() {
  SharedDtor();
}

void FormationList::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* FormationList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FormationList_descriptor_;
}

const FormationList& FormationList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AuthenticationToClient_2eproto();  return *default_instance_;
}

FormationList* FormationList::default_instance_ = NULL;

FormationList* FormationList::New() const {
  return new FormationList;
}

void FormationList::Clear() {
  elem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FormationList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Common.MsgFormation elem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_elem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_elem()));
        if (input->ExpectTag(10)) goto parse_elem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FormationList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    FormationList::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .Common.MsgFormation elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->elem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FormationList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Common.MsgFormation elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->elem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FormationList::ByteSize() const {
  int total_size = 0;
  
  // repeated .Common.MsgFormation elem = 1;
  total_size += 1 * this->elem_size();
  for (int i = 0; i < this->elem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elem(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void FormationList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FormationList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FormationList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FormationList::MergeFrom(const FormationList& from) {
  GOOGLE_CHECK_NE(&from, this);
  elem_.MergeFrom(from.elem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FormationList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FormationList::CopyFrom(const FormationList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FormationList::IsInitialized() const {
  
  for (int i = 0; i < elem_size(); i++) {
    if (!this->elem(i).IsInitialized()) return false;
  }
  return true;
}

void FormationList::Swap(FormationList* other) {
  if (other != this) {
    elem_.Swap(&other->elem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FormationList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FormationList_descriptor_;
  metadata.reflection = FormationList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TeamList::kElemFieldNumber;
#endif  // !_MSC_VER

TeamList::TeamList() {
  SharedCtor();
}

void TeamList::InitAsDefaultInstance() {
}

TeamList::TeamList(const TeamList& from) {
  SharedCtor();
  MergeFrom(from);
}

void TeamList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TeamList::~TeamList() {
  SharedDtor();
}

void TeamList::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* TeamList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TeamList_descriptor_;
}

const TeamList& TeamList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AuthenticationToClient_2eproto();  return *default_instance_;
}

TeamList* TeamList::default_instance_ = NULL;

TeamList* TeamList::New() const {
  return new TeamList;
}

void TeamList::Clear() {
  elem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TeamList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Common.MsgTeam elem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_elem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_elem()));
        if (input->ExpectTag(10)) goto parse_elem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TeamList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    TeamList::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .Common.MsgTeam elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->elem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TeamList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Common.MsgTeam elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->elem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TeamList::ByteSize() const {
  int total_size = 0;
  
  // repeated .Common.MsgTeam elem = 1;
  total_size += 1 * this->elem_size();
  for (int i = 0; i < this->elem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elem(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void TeamList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TeamList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TeamList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TeamList::MergeFrom(const TeamList& from) {
  GOOGLE_CHECK_NE(&from, this);
  elem_.MergeFrom(from.elem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TeamList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamList::CopyFrom(const TeamList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TeamList::IsInitialized() const {
  
  for (int i = 0; i < elem_size(); i++) {
    if (!this->elem(i).IsInitialized()) return false;
  }
  return true;
}

void TeamList::Swap(TeamList* other) {
  if (other != this) {
    elem_.Swap(&other->elem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TeamList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TeamList_descriptor_;
  metadata.reflection = TeamList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PopulationList::kElemFieldNumber;
#endif  // !_MSC_VER

PopulationList::PopulationList() {
  SharedCtor();
}

void PopulationList::InitAsDefaultInstance() {
}

PopulationList::PopulationList(const PopulationList& from) {
  SharedCtor();
  MergeFrom(from);
}

void PopulationList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PopulationList::~PopulationList() {
  SharedDtor();
}

void PopulationList::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PopulationList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PopulationList_descriptor_;
}

const PopulationList& PopulationList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AuthenticationToClient_2eproto();  return *default_instance_;
}

PopulationList* PopulationList::default_instance_ = NULL;

PopulationList* PopulationList::New() const {
  return new PopulationList;
}

void PopulationList::Clear() {
  elem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PopulationList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Common.MsgPopulation elem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_elem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_elem()));
        if (input->ExpectTag(10)) goto parse_elem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PopulationList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PopulationList::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .Common.MsgPopulation elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->elem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PopulationList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Common.MsgPopulation elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->elem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PopulationList::ByteSize() const {
  int total_size = 0;
  
  // repeated .Common.MsgPopulation elem = 1;
  total_size += 1 * this->elem_size();
  for (int i = 0; i < this->elem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elem(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PopulationList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PopulationList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PopulationList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PopulationList::MergeFrom(const PopulationList& from) {
  GOOGLE_CHECK_NE(&from, this);
  elem_.MergeFrom(from.elem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PopulationList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PopulationList::CopyFrom(const PopulationList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PopulationList::IsInitialized() const {
  
  for (int i = 0; i < elem_size(); i++) {
    if (!this->elem(i).IsInitialized()) return false;
  }
  return true;
}

void PopulationList::Swap(PopulationList* other) {
  if (other != this) {
    elem_.Swap(&other->elem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PopulationList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PopulationList_descriptor_;
  metadata.reflection = PopulationList_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgProfile::_default_login_;
const ::std::string MsgProfile::_default_password_;
#ifndef _MSC_VER
const int MsgProfile::kLoginFieldNumber;
const int MsgProfile::kPasswordFieldNumber;
const int MsgProfile::kReadOnlyFormationsFieldNumber;
const int MsgProfile::kReadWriteFormationsFieldNumber;
const int MsgProfile::kReadOnlyAutomatesFieldNumber;
const int MsgProfile::kReadWriteAutomatesFieldNumber;
const int MsgProfile::kReadOnlyCampsFieldNumber;
const int MsgProfile::kReadWriteCampsFieldNumber;
const int MsgProfile::kReadOnlyPopulationsFieldNumber;
const int MsgProfile::kReadWritePopulationsFieldNumber;
const int MsgProfile::kSuperviseurFieldNumber;
#endif  // !_MSC_VER

MsgProfile::MsgProfile() {
  SharedCtor();
}

void MsgProfile::InitAsDefaultInstance() {
  read_only_formations_ = const_cast< ::MsgsAuthenticationToClient::FormationList*>(&::MsgsAuthenticationToClient::FormationList::default_instance());
  read_write_formations_ = const_cast< ::MsgsAuthenticationToClient::FormationList*>(&::MsgsAuthenticationToClient::FormationList::default_instance());
  read_only_automates_ = const_cast< ::Common::MsgAutomatList*>(&::Common::MsgAutomatList::default_instance());
  read_write_automates_ = const_cast< ::Common::MsgAutomatList*>(&::Common::MsgAutomatList::default_instance());
  read_only_camps_ = const_cast< ::MsgsAuthenticationToClient::TeamList*>(&::MsgsAuthenticationToClient::TeamList::default_instance());
  read_write_camps_ = const_cast< ::MsgsAuthenticationToClient::TeamList*>(&::MsgsAuthenticationToClient::TeamList::default_instance());
  read_only_populations_ = const_cast< ::MsgsAuthenticationToClient::PopulationList*>(&::MsgsAuthenticationToClient::PopulationList::default_instance());
  read_write_populations_ = const_cast< ::MsgsAuthenticationToClient::PopulationList*>(&::MsgsAuthenticationToClient::PopulationList::default_instance());
}

MsgProfile::MsgProfile(const MsgProfile& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgProfile::SharedCtor() {
  _cached_size_ = 0;
  login_ = const_cast< ::std::string*>(&_default_login_);
  password_ = const_cast< ::std::string*>(&_default_password_);
  read_only_formations_ = NULL;
  read_write_formations_ = NULL;
  read_only_automates_ = NULL;
  read_write_automates_ = NULL;
  read_only_camps_ = NULL;
  read_write_camps_ = NULL;
  read_only_populations_ = NULL;
  read_write_populations_ = NULL;
  superviseur_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProfile::~MsgProfile() {
  SharedDtor();
}

void MsgProfile::SharedDtor() {
  if (login_ != &_default_login_) {
    delete login_;
  }
  if (password_ != &_default_password_) {
    delete password_;
  }
  if (this != default_instance_) {
    delete read_only_formations_;
    delete read_write_formations_;
    delete read_only_automates_;
    delete read_write_automates_;
    delete read_only_camps_;
    delete read_write_camps_;
    delete read_only_populations_;
    delete read_write_populations_;
  }
}

const ::google::protobuf::Descriptor* MsgProfile::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProfile_descriptor_;
}

const MsgProfile& MsgProfile::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AuthenticationToClient_2eproto();  return *default_instance_;
}

MsgProfile* MsgProfile::default_instance_ = NULL;

MsgProfile* MsgProfile::New() const {
  return new MsgProfile;
}

void MsgProfile::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (login_ != &_default_login_) {
        login_->clear();
      }
    }
    if (_has_bit(1)) {
      if (password_ != &_default_password_) {
        password_->clear();
      }
    }
    if (_has_bit(2)) {
      if (read_only_formations_ != NULL) read_only_formations_->::MsgsAuthenticationToClient::FormationList::Clear();
    }
    if (_has_bit(3)) {
      if (read_write_formations_ != NULL) read_write_formations_->::MsgsAuthenticationToClient::FormationList::Clear();
    }
    if (_has_bit(4)) {
      if (read_only_automates_ != NULL) read_only_automates_->::Common::MsgAutomatList::Clear();
    }
    if (_has_bit(5)) {
      if (read_write_automates_ != NULL) read_write_automates_->::Common::MsgAutomatList::Clear();
    }
    if (_has_bit(6)) {
      if (read_only_camps_ != NULL) read_only_camps_->::MsgsAuthenticationToClient::TeamList::Clear();
    }
    if (_has_bit(7)) {
      if (read_write_camps_ != NULL) read_write_camps_->::MsgsAuthenticationToClient::TeamList::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (_has_bit(8)) {
      if (read_only_populations_ != NULL) read_only_populations_->::MsgsAuthenticationToClient::PopulationList::Clear();
    }
    if (_has_bit(9)) {
      if (read_write_populations_ != NULL) read_write_populations_->::MsgsAuthenticationToClient::PopulationList::Clear();
    }
    superviseur_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProfile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string login = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_login()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->login().data(), this->login().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }
      
      // optional string password = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_password:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_password()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->password().data(), this->password().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(26)) goto parse_read_only_formations;
        break;
      }
      
      // optional .MsgsAuthenticationToClient.FormationList read_only_formations = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_read_only_formations:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_read_only_formations()));
        if (input->ExpectTag(34)) goto parse_read_write_formations;
        break;
      }
      
      // optional .MsgsAuthenticationToClient.FormationList read_write_formations = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_read_write_formations:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_read_write_formations()));
        if (input->ExpectTag(42)) goto parse_read_only_automates;
        break;
      }
      
      // optional .Common.MsgAutomatList read_only_automates = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_read_only_automates:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_read_only_automates()));
        if (input->ExpectTag(50)) goto parse_read_write_automates;
        break;
      }
      
      // optional .Common.MsgAutomatList read_write_automates = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_read_write_automates:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_read_write_automates()));
        if (input->ExpectTag(58)) goto parse_read_only_camps;
        break;
      }
      
      // optional .MsgsAuthenticationToClient.TeamList read_only_camps = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_read_only_camps:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_read_only_camps()));
        if (input->ExpectTag(66)) goto parse_read_write_camps;
        break;
      }
      
      // optional .MsgsAuthenticationToClient.TeamList read_write_camps = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_read_write_camps:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_read_write_camps()));
        if (input->ExpectTag(74)) goto parse_read_only_populations;
        break;
      }
      
      // optional .MsgsAuthenticationToClient.PopulationList read_only_populations = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_read_only_populations:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_read_only_populations()));
        if (input->ExpectTag(82)) goto parse_read_write_populations;
        break;
      }
      
      // optional .MsgsAuthenticationToClient.PopulationList read_write_populations = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_read_write_populations:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_read_write_populations()));
        if (input->ExpectTag(88)) goto parse_superviseur;
        break;
      }
      
      // required bool superviseur = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_superviseur:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &superviseur_));
        _set_bit(10);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgProfile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgProfile::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required string login = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->login().data(), this->login().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->login(), output);
  }
  
  // optional string password = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->password(), output);
  }
  
  // optional .MsgsAuthenticationToClient.FormationList read_only_formations = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->read_only_formations(), output);
  }
  
  // optional .MsgsAuthenticationToClient.FormationList read_write_formations = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      4, this->read_write_formations(), output);
  }
  
  // optional .Common.MsgAutomatList read_only_automates = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      5, this->read_only_automates(), output);
  }
  
  // optional .Common.MsgAutomatList read_write_automates = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      6, this->read_write_automates(), output);
  }
  
  // optional .MsgsAuthenticationToClient.TeamList read_only_camps = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      7, this->read_only_camps(), output);
  }
  
  // optional .MsgsAuthenticationToClient.TeamList read_write_camps = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      8, this->read_write_camps(), output);
  }
  
  // optional .MsgsAuthenticationToClient.PopulationList read_only_populations = 9;
  if (_has_bit(8)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      9, this->read_only_populations(), output);
  }
  
  // optional .MsgsAuthenticationToClient.PopulationList read_write_populations = 10;
  if (_has_bit(9)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      10, this->read_write_populations(), output);
  }
  
  // required bool superviseur = 11;
  if (_has_bit(10)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->superviseur(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgProfile::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string login = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->login().data(), this->login().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->login(), target);
  }
  
  // optional string password = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }
  
  // optional .MsgsAuthenticationToClient.FormationList read_only_formations = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->read_only_formations(), target);
  }
  
  // optional .MsgsAuthenticationToClient.FormationList read_write_formations = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->read_write_formations(), target);
  }
  
  // optional .Common.MsgAutomatList read_only_automates = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->read_only_automates(), target);
  }
  
  // optional .Common.MsgAutomatList read_write_automates = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->read_write_automates(), target);
  }
  
  // optional .MsgsAuthenticationToClient.TeamList read_only_camps = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->read_only_camps(), target);
  }
  
  // optional .MsgsAuthenticationToClient.TeamList read_write_camps = 8;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->read_write_camps(), target);
  }
  
  // optional .MsgsAuthenticationToClient.PopulationList read_only_populations = 9;
  if (_has_bit(8)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->read_only_populations(), target);
  }
  
  // optional .MsgsAuthenticationToClient.PopulationList read_write_populations = 10;
  if (_has_bit(9)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->read_write_populations(), target);
  }
  
  // required bool superviseur = 11;
  if (_has_bit(10)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->superviseur(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgProfile::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string login = 1;
    if (has_login()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->login());
    }
    
    // optional string password = 2;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }
    
    // optional .MsgsAuthenticationToClient.FormationList read_only_formations = 3;
    if (has_read_only_formations()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->read_only_formations());
    }
    
    // optional .MsgsAuthenticationToClient.FormationList read_write_formations = 4;
    if (has_read_write_formations()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->read_write_formations());
    }
    
    // optional .Common.MsgAutomatList read_only_automates = 5;
    if (has_read_only_automates()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->read_only_automates());
    }
    
    // optional .Common.MsgAutomatList read_write_automates = 6;
    if (has_read_write_automates()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->read_write_automates());
    }
    
    // optional .MsgsAuthenticationToClient.TeamList read_only_camps = 7;
    if (has_read_only_camps()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->read_only_camps());
    }
    
    // optional .MsgsAuthenticationToClient.TeamList read_write_camps = 8;
    if (has_read_write_camps()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->read_write_camps());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .MsgsAuthenticationToClient.PopulationList read_only_populations = 9;
    if (has_read_only_populations()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->read_only_populations());
    }
    
    // optional .MsgsAuthenticationToClient.PopulationList read_write_populations = 10;
    if (has_read_write_populations()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->read_write_populations());
    }
    
    // required bool superviseur = 11;
    if (has_superviseur()) {
      total_size += 1 + 1;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgProfile::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProfile* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProfile*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProfile::MergeFrom(const MsgProfile& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_login(from.login());
    }
    if (from._has_bit(1)) {
      set_password(from.password());
    }
    if (from._has_bit(2)) {
      mutable_read_only_formations()->::MsgsAuthenticationToClient::FormationList::MergeFrom(from.read_only_formations());
    }
    if (from._has_bit(3)) {
      mutable_read_write_formations()->::MsgsAuthenticationToClient::FormationList::MergeFrom(from.read_write_formations());
    }
    if (from._has_bit(4)) {
      mutable_read_only_automates()->::Common::MsgAutomatList::MergeFrom(from.read_only_automates());
    }
    if (from._has_bit(5)) {
      mutable_read_write_automates()->::Common::MsgAutomatList::MergeFrom(from.read_write_automates());
    }
    if (from._has_bit(6)) {
      mutable_read_only_camps()->::MsgsAuthenticationToClient::TeamList::MergeFrom(from.read_only_camps());
    }
    if (from._has_bit(7)) {
      mutable_read_write_camps()->::MsgsAuthenticationToClient::TeamList::MergeFrom(from.read_write_camps());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from._has_bit(8)) {
      mutable_read_only_populations()->::MsgsAuthenticationToClient::PopulationList::MergeFrom(from.read_only_populations());
    }
    if (from._has_bit(9)) {
      mutable_read_write_populations()->::MsgsAuthenticationToClient::PopulationList::MergeFrom(from.read_write_populations());
    }
    if (from._has_bit(10)) {
      set_superviseur(from.superviseur());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProfile::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProfile::CopyFrom(const MsgProfile& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProfile::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000401) != 0x00000401) return false;
  
  if (has_read_only_formations()) {
    if (!this->read_only_formations().IsInitialized()) return false;
  }
  if (has_read_write_formations()) {
    if (!this->read_write_formations().IsInitialized()) return false;
  }
  if (has_read_only_automates()) {
    if (!this->read_only_automates().IsInitialized()) return false;
  }
  if (has_read_write_automates()) {
    if (!this->read_write_automates().IsInitialized()) return false;
  }
  if (has_read_only_camps()) {
    if (!this->read_only_camps().IsInitialized()) return false;
  }
  if (has_read_write_camps()) {
    if (!this->read_write_camps().IsInitialized()) return false;
  }
  if (has_read_only_populations()) {
    if (!this->read_only_populations().IsInitialized()) return false;
  }
  if (has_read_write_populations()) {
    if (!this->read_write_populations().IsInitialized()) return false;
  }
  return true;
}

void MsgProfile::Swap(MsgProfile* other) {
  if (other != this) {
    std::swap(login_, other->login_);
    std::swap(password_, other->password_);
    std::swap(read_only_formations_, other->read_only_formations_);
    std::swap(read_write_formations_, other->read_write_formations_);
    std::swap(read_only_automates_, other->read_only_automates_);
    std::swap(read_write_automates_, other->read_write_automates_);
    std::swap(read_only_camps_, other->read_only_camps_);
    std::swap(read_write_camps_, other->read_write_camps_);
    std::swap(read_only_populations_, other->read_only_populations_);
    std::swap(read_write_populations_, other->read_write_populations_);
    std::swap(superviseur_, other->superviseur_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProfile::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProfile_descriptor_;
  metadata.reflection = MsgProfile_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgAuthenticationToClient_Content::kAuthenticationResponseFieldNumber;
const int MsgAuthenticationToClient_Content::kProfileCreationFieldNumber;
const int MsgAuthenticationToClient_Content::kProfileCreationRequestAckFieldNumber;
const int MsgAuthenticationToClient_Content::kProfileUpdateFieldNumber;
const int MsgAuthenticationToClient_Content::kProfileUpdateRequestAckFieldNumber;
const int MsgAuthenticationToClient_Content::kProfileDestructionFieldNumber;
const int MsgAuthenticationToClient_Content::kProfileDestructionRequestAckFieldNumber;
#endif  // !_MSC_VER

MsgAuthenticationToClient_Content::MsgAuthenticationToClient_Content() {
  SharedCtor();
}

void MsgAuthenticationToClient_Content::InitAsDefaultInstance() {
  authentication_response_ = const_cast< ::MsgsAuthenticationToClient::MsgAuthenticationResponse*>(&::MsgsAuthenticationToClient::MsgAuthenticationResponse::default_instance());
  profile_creation_ = const_cast< ::MsgsAuthenticationToClient::MsgProfileCreation*>(&::MsgsAuthenticationToClient::MsgProfileCreation::default_instance());
  profile_creation_request_ack_ = const_cast< ::MsgsAuthenticationToClient::MsgProfileCreationRequestAck*>(&::MsgsAuthenticationToClient::MsgProfileCreationRequestAck::default_instance());
  profile_update_ = const_cast< ::MsgsAuthenticationToClient::MsgProfileUpdate*>(&::MsgsAuthenticationToClient::MsgProfileUpdate::default_instance());
  profile_update_request_ack_ = const_cast< ::MsgsAuthenticationToClient::MsgProfileUpdateRequestAck*>(&::MsgsAuthenticationToClient::MsgProfileUpdateRequestAck::default_instance());
  profile_destruction_ = const_cast< ::MsgsAuthenticationToClient::MsgProfileDestruction*>(&::MsgsAuthenticationToClient::MsgProfileDestruction::default_instance());
  profile_destruction_request_ack_ = const_cast< ::MsgsAuthenticationToClient::MsgProfileDestructionRequestAck*>(&::MsgsAuthenticationToClient::MsgProfileDestructionRequestAck::default_instance());
}

MsgAuthenticationToClient_Content::MsgAuthenticationToClient_Content(const MsgAuthenticationToClient_Content& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgAuthenticationToClient_Content::SharedCtor() {
  _cached_size_ = 0;
  authentication_response_ = NULL;
  profile_creation_ = NULL;
  profile_creation_request_ack_ = NULL;
  profile_update_ = NULL;
  profile_update_request_ack_ = NULL;
  profile_destruction_ = NULL;
  profile_destruction_request_ack_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgAuthenticationToClient_Content::~MsgAuthenticationToClient_Content() {
  SharedDtor();
}

void MsgAuthenticationToClient_Content::SharedDtor() {
  if (this != default_instance_) {
    delete authentication_response_;
    delete profile_creation_;
    delete profile_creation_request_ack_;
    delete profile_update_;
    delete profile_update_request_ack_;
    delete profile_destruction_;
    delete profile_destruction_request_ack_;
  }
}

const ::google::protobuf::Descriptor* MsgAuthenticationToClient_Content::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgAuthenticationToClient_Content_descriptor_;
}

const MsgAuthenticationToClient_Content& MsgAuthenticationToClient_Content::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AuthenticationToClient_2eproto();  return *default_instance_;
}

MsgAuthenticationToClient_Content* MsgAuthenticationToClient_Content::default_instance_ = NULL;

MsgAuthenticationToClient_Content* MsgAuthenticationToClient_Content::New() const {
  return new MsgAuthenticationToClient_Content;
}

void MsgAuthenticationToClient_Content::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (authentication_response_ != NULL) authentication_response_->::MsgsAuthenticationToClient::MsgAuthenticationResponse::Clear();
    }
    if (_has_bit(1)) {
      if (profile_creation_ != NULL) profile_creation_->::MsgsAuthenticationToClient::MsgProfileCreation::Clear();
    }
    if (_has_bit(2)) {
      if (profile_creation_request_ack_ != NULL) profile_creation_request_ack_->::MsgsAuthenticationToClient::MsgProfileCreationRequestAck::Clear();
    }
    if (_has_bit(3)) {
      if (profile_update_ != NULL) profile_update_->::MsgsAuthenticationToClient::MsgProfileUpdate::Clear();
    }
    if (_has_bit(4)) {
      if (profile_update_request_ack_ != NULL) profile_update_request_ack_->::MsgsAuthenticationToClient::MsgProfileUpdateRequestAck::Clear();
    }
    if (_has_bit(5)) {
      if (profile_destruction_ != NULL) profile_destruction_->::MsgsAuthenticationToClient::MsgProfileDestruction::Clear();
    }
    if (_has_bit(6)) {
      if (profile_destruction_request_ack_ != NULL) profile_destruction_request_ack_->::MsgsAuthenticationToClient::MsgProfileDestructionRequestAck::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgAuthenticationToClient_Content::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgsAuthenticationToClient.MsgAuthenticationResponse authentication_response = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_authentication_response()));
        if (input->ExpectTag(18)) goto parse_profile_creation;
        break;
      }
      
      // optional .MsgsAuthenticationToClient.MsgProfileCreation profile_creation = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_profile_creation:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_profile_creation()));
        if (input->ExpectTag(26)) goto parse_profile_creation_request_ack;
        break;
      }
      
      // optional .MsgsAuthenticationToClient.MsgProfileCreationRequestAck profile_creation_request_ack = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_profile_creation_request_ack:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_profile_creation_request_ack()));
        if (input->ExpectTag(34)) goto parse_profile_update;
        break;
      }
      
      // optional .MsgsAuthenticationToClient.MsgProfileUpdate profile_update = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_profile_update:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_profile_update()));
        if (input->ExpectTag(42)) goto parse_profile_update_request_ack;
        break;
      }
      
      // optional .MsgsAuthenticationToClient.MsgProfileUpdateRequestAck profile_update_request_ack = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_profile_update_request_ack:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_profile_update_request_ack()));
        if (input->ExpectTag(50)) goto parse_profile_destruction;
        break;
      }
      
      // optional .MsgsAuthenticationToClient.MsgProfileDestruction profile_destruction = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_profile_destruction:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_profile_destruction()));
        if (input->ExpectTag(58)) goto parse_profile_destruction_request_ack;
        break;
      }
      
      // optional .MsgsAuthenticationToClient.MsgProfileDestructionRequestAck profile_destruction_request_ack = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_profile_destruction_request_ack:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_profile_destruction_request_ack()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgAuthenticationToClient_Content::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgAuthenticationToClient_Content::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .MsgsAuthenticationToClient.MsgAuthenticationResponse authentication_response = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->authentication_response(), output);
  }
  
  // optional .MsgsAuthenticationToClient.MsgProfileCreation profile_creation = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->profile_creation(), output);
  }
  
  // optional .MsgsAuthenticationToClient.MsgProfileCreationRequestAck profile_creation_request_ack = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->profile_creation_request_ack(), output);
  }
  
  // optional .MsgsAuthenticationToClient.MsgProfileUpdate profile_update = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      4, this->profile_update(), output);
  }
  
  // optional .MsgsAuthenticationToClient.MsgProfileUpdateRequestAck profile_update_request_ack = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      5, this->profile_update_request_ack(), output);
  }
  
  // optional .MsgsAuthenticationToClient.MsgProfileDestruction profile_destruction = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      6, this->profile_destruction(), output);
  }
  
  // optional .MsgsAuthenticationToClient.MsgProfileDestructionRequestAck profile_destruction_request_ack = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      7, this->profile_destruction_request_ack(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgAuthenticationToClient_Content::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .MsgsAuthenticationToClient.MsgAuthenticationResponse authentication_response = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->authentication_response(), target);
  }
  
  // optional .MsgsAuthenticationToClient.MsgProfileCreation profile_creation = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->profile_creation(), target);
  }
  
  // optional .MsgsAuthenticationToClient.MsgProfileCreationRequestAck profile_creation_request_ack = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->profile_creation_request_ack(), target);
  }
  
  // optional .MsgsAuthenticationToClient.MsgProfileUpdate profile_update = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->profile_update(), target);
  }
  
  // optional .MsgsAuthenticationToClient.MsgProfileUpdateRequestAck profile_update_request_ack = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->profile_update_request_ack(), target);
  }
  
  // optional .MsgsAuthenticationToClient.MsgProfileDestruction profile_destruction = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->profile_destruction(), target);
  }
  
  // optional .MsgsAuthenticationToClient.MsgProfileDestructionRequestAck profile_destruction_request_ack = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->profile_destruction_request_ack(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgAuthenticationToClient_Content::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgsAuthenticationToClient.MsgAuthenticationResponse authentication_response = 1;
    if (has_authentication_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->authentication_response());
    }
    
    // optional .MsgsAuthenticationToClient.MsgProfileCreation profile_creation = 2;
    if (has_profile_creation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->profile_creation());
    }
    
    // optional .MsgsAuthenticationToClient.MsgProfileCreationRequestAck profile_creation_request_ack = 3;
    if (has_profile_creation_request_ack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->profile_creation_request_ack());
    }
    
    // optional .MsgsAuthenticationToClient.MsgProfileUpdate profile_update = 4;
    if (has_profile_update()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->profile_update());
    }
    
    // optional .MsgsAuthenticationToClient.MsgProfileUpdateRequestAck profile_update_request_ack = 5;
    if (has_profile_update_request_ack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->profile_update_request_ack());
    }
    
    // optional .MsgsAuthenticationToClient.MsgProfileDestruction profile_destruction = 6;
    if (has_profile_destruction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->profile_destruction());
    }
    
    // optional .MsgsAuthenticationToClient.MsgProfileDestructionRequestAck profile_destruction_request_ack = 7;
    if (has_profile_destruction_request_ack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->profile_destruction_request_ack());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgAuthenticationToClient_Content::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgAuthenticationToClient_Content* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgAuthenticationToClient_Content*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgAuthenticationToClient_Content::MergeFrom(const MsgAuthenticationToClient_Content& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_authentication_response()->::MsgsAuthenticationToClient::MsgAuthenticationResponse::MergeFrom(from.authentication_response());
    }
    if (from._has_bit(1)) {
      mutable_profile_creation()->::MsgsAuthenticationToClient::MsgProfileCreation::MergeFrom(from.profile_creation());
    }
    if (from._has_bit(2)) {
      mutable_profile_creation_request_ack()->::MsgsAuthenticationToClient::MsgProfileCreationRequestAck::MergeFrom(from.profile_creation_request_ack());
    }
    if (from._has_bit(3)) {
      mutable_profile_update()->::MsgsAuthenticationToClient::MsgProfileUpdate::MergeFrom(from.profile_update());
    }
    if (from._has_bit(4)) {
      mutable_profile_update_request_ack()->::MsgsAuthenticationToClient::MsgProfileUpdateRequestAck::MergeFrom(from.profile_update_request_ack());
    }
    if (from._has_bit(5)) {
      mutable_profile_destruction()->::MsgsAuthenticationToClient::MsgProfileDestruction::MergeFrom(from.profile_destruction());
    }
    if (from._has_bit(6)) {
      mutable_profile_destruction_request_ack()->::MsgsAuthenticationToClient::MsgProfileDestructionRequestAck::MergeFrom(from.profile_destruction_request_ack());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgAuthenticationToClient_Content::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgAuthenticationToClient_Content::CopyFrom(const MsgAuthenticationToClient_Content& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgAuthenticationToClient_Content::IsInitialized() const {
  
  if (has_authentication_response()) {
    if (!this->authentication_response().IsInitialized()) return false;
  }
  if (has_profile_creation()) {
    if (!this->profile_creation().IsInitialized()) return false;
  }
  if (has_profile_creation_request_ack()) {
    if (!this->profile_creation_request_ack().IsInitialized()) return false;
  }
  if (has_profile_update()) {
    if (!this->profile_update().IsInitialized()) return false;
  }
  if (has_profile_update_request_ack()) {
    if (!this->profile_update_request_ack().IsInitialized()) return false;
  }
  if (has_profile_destruction_request_ack()) {
    if (!this->profile_destruction_request_ack().IsInitialized()) return false;
  }
  return true;
}

void MsgAuthenticationToClient_Content::Swap(MsgAuthenticationToClient_Content* other) {
  if (other != this) {
    std::swap(authentication_response_, other->authentication_response_);
    std::swap(profile_creation_, other->profile_creation_);
    std::swap(profile_creation_request_ack_, other->profile_creation_request_ack_);
    std::swap(profile_update_, other->profile_update_);
    std::swap(profile_update_request_ack_, other->profile_update_request_ack_);
    std::swap(profile_destruction_, other->profile_destruction_);
    std::swap(profile_destruction_request_ack_, other->profile_destruction_request_ack_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgAuthenticationToClient_Content::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgAuthenticationToClient_Content_descriptor_;
  metadata.reflection = MsgAuthenticationToClient_Content_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MsgAuthenticationToClient::kContextFieldNumber;
const int MsgAuthenticationToClient::kMessageFieldNumber;
#endif  // !_MSC_VER

MsgAuthenticationToClient::MsgAuthenticationToClient() {
  SharedCtor();
}

void MsgAuthenticationToClient::InitAsDefaultInstance() {
  message_ = const_cast< ::MsgsAuthenticationToClient::MsgAuthenticationToClient_Content*>(&::MsgsAuthenticationToClient::MsgAuthenticationToClient_Content::default_instance());
}

MsgAuthenticationToClient::MsgAuthenticationToClient(const MsgAuthenticationToClient& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgAuthenticationToClient::SharedCtor() {
  _cached_size_ = 0;
  context_ = 0;
  message_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgAuthenticationToClient::~MsgAuthenticationToClient() {
  SharedDtor();
}

void MsgAuthenticationToClient::SharedDtor() {
  if (this != default_instance_) {
    delete message_;
  }
}

const ::google::protobuf::Descriptor* MsgAuthenticationToClient::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgAuthenticationToClient_descriptor_;
}

const MsgAuthenticationToClient& MsgAuthenticationToClient::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AuthenticationToClient_2eproto();  return *default_instance_;
}

MsgAuthenticationToClient* MsgAuthenticationToClient::default_instance_ = NULL;

MsgAuthenticationToClient* MsgAuthenticationToClient::New() const {
  return new MsgAuthenticationToClient;
}

void MsgAuthenticationToClient::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    context_ = 0;
    if (_has_bit(1)) {
      if (message_ != NULL) message_->::MsgsAuthenticationToClient::MsgAuthenticationToClient_Content::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgAuthenticationToClient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 context = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &context_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }
      
      // required .MsgsAuthenticationToClient.MsgAuthenticationToClient.Content message = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_message:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_message()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgAuthenticationToClient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgAuthenticationToClient::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 context = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->context(), output);
  }
  
  // required .MsgsAuthenticationToClient.MsgAuthenticationToClient.Content message = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->message(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgAuthenticationToClient::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 context = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->context(), target);
  }
  
  // required .MsgsAuthenticationToClient.MsgAuthenticationToClient.Content message = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->message(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgAuthenticationToClient::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 context = 1 [default = 0];
    if (has_context()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->context());
    }
    
    // required .MsgsAuthenticationToClient.MsgAuthenticationToClient.Content message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->message());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgAuthenticationToClient::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgAuthenticationToClient* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgAuthenticationToClient*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgAuthenticationToClient::MergeFrom(const MsgAuthenticationToClient& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_context(from.context());
    }
    if (from._has_bit(1)) {
      mutable_message()->::MsgsAuthenticationToClient::MsgAuthenticationToClient_Content::MergeFrom(from.message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgAuthenticationToClient::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgAuthenticationToClient::CopyFrom(const MsgAuthenticationToClient& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgAuthenticationToClient::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  
  if (has_message()) {
    if (!this->message().IsInitialized()) return false;
  }
  return true;
}

void MsgAuthenticationToClient::Swap(MsgAuthenticationToClient* other) {
  if (other != this) {
    std::swap(context_, other->context_);
    std::swap(message_, other->message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgAuthenticationToClient::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgAuthenticationToClient_descriptor_;
  metadata.reflection = MsgAuthenticationToClient_reflection_;
  return metadata;
}


}  // namespace MsgsAuthenticationToClient
