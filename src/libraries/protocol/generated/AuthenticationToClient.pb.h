// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_AuthenticationToClient_2eproto__INCLUDED
#define PROTOBUF_AuthenticationToClient_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "Common.pb.h"
#include "Version.pb.h"

namespace MsgsAuthenticationToClient {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_AuthenticationToClient_2eproto();
void protobuf_AssignDesc_AuthenticationToClient_2eproto();
void protobuf_ShutdownFile_AuthenticationToClient_2eproto();

class MsgAuthenticationResponse;
class MsgProfileCreation;
class MsgProfileCreationRequestAck;
class MsgProfileUpdateRequestAck;
class MsgProfileUpdate;
class MsgProfileDestruction;
class MsgProfileDestructionRequestAck;
class MsgProfile;
class MsgProfileDescriptionList;
class MsgProfileDescription;
class MsgAuthenticationToClient;
class MsgAuthenticationToClient_Content;

enum MsgAuthenticationResponse_ErrorCode {
  MsgAuthenticationResponse_ErrorCode_success = 0,
  MsgAuthenticationResponse_ErrorCode_invalid_login = 1,
  MsgAuthenticationResponse_ErrorCode_too_many_connections = 2,
  MsgAuthenticationResponse_ErrorCode_mismatched_protocol_version = 4
};
bool MsgAuthenticationResponse_ErrorCode_IsValid(int value);
const MsgAuthenticationResponse_ErrorCode MsgAuthenticationResponse_ErrorCode_ErrorCode_MIN = MsgAuthenticationResponse_ErrorCode_success;
const MsgAuthenticationResponse_ErrorCode MsgAuthenticationResponse_ErrorCode_ErrorCode_MAX = MsgAuthenticationResponse_ErrorCode_mismatched_protocol_version;

const ::google::protobuf::EnumDescriptor* MsgAuthenticationResponse_ErrorCode_descriptor();
inline const ::std::string& MsgAuthenticationResponse_ErrorCode_Name(MsgAuthenticationResponse_ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgAuthenticationResponse_ErrorCode_descriptor(), value);
}
inline bool MsgAuthenticationResponse_ErrorCode_Parse(
    const ::std::string& name, MsgAuthenticationResponse_ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgAuthenticationResponse_ErrorCode>(
    MsgAuthenticationResponse_ErrorCode_descriptor(), name, value);
}
enum MsgProfileCreationRequestAck_ErrorCode {
  MsgProfileCreationRequestAck_ErrorCode_success = 0,
  MsgProfileCreationRequestAck_ErrorCode_invalid_login = 1,
  MsgProfileCreationRequestAck_ErrorCode_invalid_password = 2,
  MsgProfileCreationRequestAck_ErrorCode_duplicate_login = 3
};
bool MsgProfileCreationRequestAck_ErrorCode_IsValid(int value);
const MsgProfileCreationRequestAck_ErrorCode MsgProfileCreationRequestAck_ErrorCode_ErrorCode_MIN = MsgProfileCreationRequestAck_ErrorCode_success;
const MsgProfileCreationRequestAck_ErrorCode MsgProfileCreationRequestAck_ErrorCode_ErrorCode_MAX = MsgProfileCreationRequestAck_ErrorCode_duplicate_login;

const ::google::protobuf::EnumDescriptor* MsgProfileCreationRequestAck_ErrorCode_descriptor();
inline const ::std::string& MsgProfileCreationRequestAck_ErrorCode_Name(MsgProfileCreationRequestAck_ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgProfileCreationRequestAck_ErrorCode_descriptor(), value);
}
inline bool MsgProfileCreationRequestAck_ErrorCode_Parse(
    const ::std::string& name, MsgProfileCreationRequestAck_ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgProfileCreationRequestAck_ErrorCode>(
    MsgProfileCreationRequestAck_ErrorCode_descriptor(), name, value);
}
enum MsgProfileUpdateRequestAck_ErrorCode {
  MsgProfileUpdateRequestAck_ErrorCode_success = 0,
  MsgProfileUpdateRequestAck_ErrorCode_invalid_profile = 1,
  MsgProfileUpdateRequestAck_ErrorCode_invalid_login = 2,
  MsgProfileUpdateRequestAck_ErrorCode_invalid_password = 3,
  MsgProfileUpdateRequestAck_ErrorCode_duplicate_login = 4
};
bool MsgProfileUpdateRequestAck_ErrorCode_IsValid(int value);
const MsgProfileUpdateRequestAck_ErrorCode MsgProfileUpdateRequestAck_ErrorCode_ErrorCode_MIN = MsgProfileUpdateRequestAck_ErrorCode_success;
const MsgProfileUpdateRequestAck_ErrorCode MsgProfileUpdateRequestAck_ErrorCode_ErrorCode_MAX = MsgProfileUpdateRequestAck_ErrorCode_duplicate_login;

const ::google::protobuf::EnumDescriptor* MsgProfileUpdateRequestAck_ErrorCode_descriptor();
inline const ::std::string& MsgProfileUpdateRequestAck_ErrorCode_Name(MsgProfileUpdateRequestAck_ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgProfileUpdateRequestAck_ErrorCode_descriptor(), value);
}
inline bool MsgProfileUpdateRequestAck_ErrorCode_Parse(
    const ::std::string& name, MsgProfileUpdateRequestAck_ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgProfileUpdateRequestAck_ErrorCode>(
    MsgProfileUpdateRequestAck_ErrorCode_descriptor(), name, value);
}
enum MsgProfileDestructionRequestAck_ErrorCode {
  MsgProfileDestructionRequestAck_ErrorCode_success = 0,
  MsgProfileDestructionRequestAck_ErrorCode_invalid_profile = 1,
  MsgProfileDestructionRequestAck_ErrorCode_failure = 2
};
bool MsgProfileDestructionRequestAck_ErrorCode_IsValid(int value);
const MsgProfileDestructionRequestAck_ErrorCode MsgProfileDestructionRequestAck_ErrorCode_ErrorCode_MIN = MsgProfileDestructionRequestAck_ErrorCode_success;
const MsgProfileDestructionRequestAck_ErrorCode MsgProfileDestructionRequestAck_ErrorCode_ErrorCode_MAX = MsgProfileDestructionRequestAck_ErrorCode_failure;

const ::google::protobuf::EnumDescriptor* MsgProfileDestructionRequestAck_ErrorCode_descriptor();
inline const ::std::string& MsgProfileDestructionRequestAck_ErrorCode_Name(MsgProfileDestructionRequestAck_ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgProfileDestructionRequestAck_ErrorCode_descriptor(), value);
}
inline bool MsgProfileDestructionRequestAck_ErrorCode_Parse(
    const ::std::string& name, MsgProfileDestructionRequestAck_ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgProfileDestructionRequestAck_ErrorCode>(
    MsgProfileDestructionRequestAck_ErrorCode_descriptor(), name, value);
}
enum Role {
  superviseur = 0,
  anibas = 1,
  eniex = 2,
  direx = 3,
  environnement = 4,
  analyse = 5
};
bool Role_IsValid(int value);
const Role Role_MIN = superviseur;
const Role Role_MAX = analyse;

const ::google::protobuf::EnumDescriptor* Role_descriptor();
inline const ::std::string& Role_Name(Role value) {
  return ::google::protobuf::internal::NameOfEnum(
    Role_descriptor(), value);
}
inline bool Role_Parse(
    const ::std::string& name, Role* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Role>(
    Role_descriptor(), name, value);
}
// ===================================================================

class MsgAuthenticationResponse : public ::google::protobuf::Message {
 public:
  MsgAuthenticationResponse();
  virtual ~MsgAuthenticationResponse();
  
  MsgAuthenticationResponse(const MsgAuthenticationResponse& from);
  
  inline MsgAuthenticationResponse& operator=(const MsgAuthenticationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgAuthenticationResponse& default_instance();
  void Swap(MsgAuthenticationResponse* other);
  
  // implements Message ----------------------------------------------
  
  MsgAuthenticationResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgAuthenticationResponse& from);
  void MergeFrom(const MsgAuthenticationResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef MsgAuthenticationResponse_ErrorCode ErrorCode;
  static const ErrorCode success = MsgAuthenticationResponse_ErrorCode_success;
  static const ErrorCode invalid_login = MsgAuthenticationResponse_ErrorCode_invalid_login;
  static const ErrorCode too_many_connections = MsgAuthenticationResponse_ErrorCode_too_many_connections;
  static const ErrorCode mismatched_protocol_version = MsgAuthenticationResponse_ErrorCode_mismatched_protocol_version;
  static inline bool ErrorCode_IsValid(int value) {
    return MsgAuthenticationResponse_ErrorCode_IsValid(value);
  }
  static const ErrorCode ErrorCode_MIN =
    MsgAuthenticationResponse_ErrorCode_ErrorCode_MIN;
  static const ErrorCode ErrorCode_MAX =
    MsgAuthenticationResponse_ErrorCode_ErrorCode_MAX;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorCode_descriptor() {
    return MsgAuthenticationResponse_ErrorCode_descriptor();
  }
  static inline const ::std::string& ErrorCode_Name(ErrorCode value) {
    return MsgAuthenticationResponse_ErrorCode_Name(value);
  }
  static inline bool ErrorCode_Parse(const ::std::string& name,
      ErrorCode* value) {
    return MsgAuthenticationResponse_ErrorCode_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .MsgsAuthenticationToClient.MsgAuthenticationResponse.ErrorCode error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::MsgsAuthenticationToClient::MsgAuthenticationResponse_ErrorCode error_code() const;
  inline void set_error_code(::MsgsAuthenticationToClient::MsgAuthenticationResponse_ErrorCode value);
  
  // optional .MsgsAuthenticationToClient.MsgProfile profile = 2;
  inline bool has_profile() const;
  inline void clear_profile();
  static const int kProfileFieldNumber = 2;
  inline const ::MsgsAuthenticationToClient::MsgProfile& profile() const;
  inline ::MsgsAuthenticationToClient::MsgProfile* mutable_profile();
  
  // optional .MsgsAuthenticationToClient.MsgProfileDescriptionList profiles = 3;
  inline bool has_profiles() const;
  inline void clear_profiles();
  static const int kProfilesFieldNumber = 3;
  inline const ::MsgsAuthenticationToClient::MsgProfileDescriptionList& profiles() const;
  inline ::MsgsAuthenticationToClient::MsgProfileDescriptionList* mutable_profiles();
  
  // required .Version.ProtocolVersion server_version = 4;
  inline bool has_server_version() const;
  inline void clear_server_version();
  static const int kServerVersionFieldNumber = 4;
  inline const ::Version::ProtocolVersion& server_version() const;
  inline ::Version::ProtocolVersion* mutable_server_version();
  
  // optional .Common.MsgDateTime restart_date_time = 5;
  inline bool has_restart_date_time() const;
  inline void clear_restart_date_time();
  static const int kRestartDateTimeFieldNumber = 5;
  inline const ::Common::MsgDateTime& restart_date_time() const;
  inline ::Common::MsgDateTime* mutable_restart_date_time();
  
  // optional string terrain_name = 6;
  inline bool has_terrain_name() const;
  inline void clear_terrain_name();
  static const int kTerrainNameFieldNumber = 6;
  inline const ::std::string& terrain_name() const;
  inline void set_terrain_name(const ::std::string& value);
  inline void set_terrain_name(const char* value);
  inline void set_terrain_name(const char* value, size_t size);
  inline ::std::string* mutable_terrain_name();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int error_code_;
  ::MsgsAuthenticationToClient::MsgProfile* profile_;
  ::MsgsAuthenticationToClient::MsgProfileDescriptionList* profiles_;
  ::Version::ProtocolVersion* server_version_;
  ::Common::MsgDateTime* restart_date_time_;
  ::std::string* terrain_name_;
  static const ::std::string _default_terrain_name_;
  friend void  protobuf_AddDesc_AuthenticationToClient_2eproto();
  friend void protobuf_AssignDesc_AuthenticationToClient_2eproto();
  friend void protobuf_ShutdownFile_AuthenticationToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgAuthenticationResponse* default_instance_;
};
// -------------------------------------------------------------------

class MsgProfileCreation : public ::google::protobuf::Message {
 public:
  MsgProfileCreation();
  virtual ~MsgProfileCreation();
  
  MsgProfileCreation(const MsgProfileCreation& from);
  
  inline MsgProfileCreation& operator=(const MsgProfileCreation& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgProfileCreation& default_instance();
  void Swap(MsgProfileCreation* other);
  
  // implements Message ----------------------------------------------
  
  MsgProfileCreation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgProfileCreation& from);
  void MergeFrom(const MsgProfileCreation& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .MsgsAuthenticationToClient.MsgProfile profile = 1;
  inline bool has_profile() const;
  inline void clear_profile();
  static const int kProfileFieldNumber = 1;
  inline const ::MsgsAuthenticationToClient::MsgProfile& profile() const;
  inline ::MsgsAuthenticationToClient::MsgProfile* mutable_profile();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::MsgsAuthenticationToClient::MsgProfile* profile_;
  friend void  protobuf_AddDesc_AuthenticationToClient_2eproto();
  friend void protobuf_AssignDesc_AuthenticationToClient_2eproto();
  friend void protobuf_ShutdownFile_AuthenticationToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgProfileCreation* default_instance_;
};
// -------------------------------------------------------------------

class MsgProfileCreationRequestAck : public ::google::protobuf::Message {
 public:
  MsgProfileCreationRequestAck();
  virtual ~MsgProfileCreationRequestAck();
  
  MsgProfileCreationRequestAck(const MsgProfileCreationRequestAck& from);
  
  inline MsgProfileCreationRequestAck& operator=(const MsgProfileCreationRequestAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgProfileCreationRequestAck& default_instance();
  void Swap(MsgProfileCreationRequestAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgProfileCreationRequestAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgProfileCreationRequestAck& from);
  void MergeFrom(const MsgProfileCreationRequestAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef MsgProfileCreationRequestAck_ErrorCode ErrorCode;
  static const ErrorCode success = MsgProfileCreationRequestAck_ErrorCode_success;
  static const ErrorCode invalid_login = MsgProfileCreationRequestAck_ErrorCode_invalid_login;
  static const ErrorCode invalid_password = MsgProfileCreationRequestAck_ErrorCode_invalid_password;
  static const ErrorCode duplicate_login = MsgProfileCreationRequestAck_ErrorCode_duplicate_login;
  static inline bool ErrorCode_IsValid(int value) {
    return MsgProfileCreationRequestAck_ErrorCode_IsValid(value);
  }
  static const ErrorCode ErrorCode_MIN =
    MsgProfileCreationRequestAck_ErrorCode_ErrorCode_MIN;
  static const ErrorCode ErrorCode_MAX =
    MsgProfileCreationRequestAck_ErrorCode_ErrorCode_MAX;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorCode_descriptor() {
    return MsgProfileCreationRequestAck_ErrorCode_descriptor();
  }
  static inline const ::std::string& ErrorCode_Name(ErrorCode value) {
    return MsgProfileCreationRequestAck_ErrorCode_Name(value);
  }
  static inline bool ErrorCode_Parse(const ::std::string& name,
      ErrorCode* value) {
    return MsgProfileCreationRequestAck_ErrorCode_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required string login = 1;
  inline bool has_login() const;
  inline void clear_login();
  static const int kLoginFieldNumber = 1;
  inline const ::std::string& login() const;
  inline void set_login(const ::std::string& value);
  inline void set_login(const char* value);
  inline void set_login(const char* value, size_t size);
  inline ::std::string* mutable_login();
  
  // required .MsgsAuthenticationToClient.MsgProfileCreationRequestAck.ErrorCode error_code = 2;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 2;
  inline ::MsgsAuthenticationToClient::MsgProfileCreationRequestAck_ErrorCode error_code() const;
  inline void set_error_code(::MsgsAuthenticationToClient::MsgProfileCreationRequestAck_ErrorCode value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* login_;
  static const ::std::string _default_login_;
  int error_code_;
  friend void  protobuf_AddDesc_AuthenticationToClient_2eproto();
  friend void protobuf_AssignDesc_AuthenticationToClient_2eproto();
  friend void protobuf_ShutdownFile_AuthenticationToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgProfileCreationRequestAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgProfileUpdateRequestAck : public ::google::protobuf::Message {
 public:
  MsgProfileUpdateRequestAck();
  virtual ~MsgProfileUpdateRequestAck();
  
  MsgProfileUpdateRequestAck(const MsgProfileUpdateRequestAck& from);
  
  inline MsgProfileUpdateRequestAck& operator=(const MsgProfileUpdateRequestAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgProfileUpdateRequestAck& default_instance();
  void Swap(MsgProfileUpdateRequestAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgProfileUpdateRequestAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgProfileUpdateRequestAck& from);
  void MergeFrom(const MsgProfileUpdateRequestAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef MsgProfileUpdateRequestAck_ErrorCode ErrorCode;
  static const ErrorCode success = MsgProfileUpdateRequestAck_ErrorCode_success;
  static const ErrorCode invalid_profile = MsgProfileUpdateRequestAck_ErrorCode_invalid_profile;
  static const ErrorCode invalid_login = MsgProfileUpdateRequestAck_ErrorCode_invalid_login;
  static const ErrorCode invalid_password = MsgProfileUpdateRequestAck_ErrorCode_invalid_password;
  static const ErrorCode duplicate_login = MsgProfileUpdateRequestAck_ErrorCode_duplicate_login;
  static inline bool ErrorCode_IsValid(int value) {
    return MsgProfileUpdateRequestAck_ErrorCode_IsValid(value);
  }
  static const ErrorCode ErrorCode_MIN =
    MsgProfileUpdateRequestAck_ErrorCode_ErrorCode_MIN;
  static const ErrorCode ErrorCode_MAX =
    MsgProfileUpdateRequestAck_ErrorCode_ErrorCode_MAX;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorCode_descriptor() {
    return MsgProfileUpdateRequestAck_ErrorCode_descriptor();
  }
  static inline const ::std::string& ErrorCode_Name(ErrorCode value) {
    return MsgProfileUpdateRequestAck_ErrorCode_Name(value);
  }
  static inline bool ErrorCode_Parse(const ::std::string& name,
      ErrorCode* value) {
    return MsgProfileUpdateRequestAck_ErrorCode_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required string login = 1;
  inline bool has_login() const;
  inline void clear_login();
  static const int kLoginFieldNumber = 1;
  inline const ::std::string& login() const;
  inline void set_login(const ::std::string& value);
  inline void set_login(const char* value);
  inline void set_login(const char* value, size_t size);
  inline ::std::string* mutable_login();
  
  // required .MsgsAuthenticationToClient.MsgProfileUpdateRequestAck.ErrorCode error_code = 2;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 2;
  inline ::MsgsAuthenticationToClient::MsgProfileUpdateRequestAck_ErrorCode error_code() const;
  inline void set_error_code(::MsgsAuthenticationToClient::MsgProfileUpdateRequestAck_ErrorCode value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* login_;
  static const ::std::string _default_login_;
  int error_code_;
  friend void  protobuf_AddDesc_AuthenticationToClient_2eproto();
  friend void protobuf_AssignDesc_AuthenticationToClient_2eproto();
  friend void protobuf_ShutdownFile_AuthenticationToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgProfileUpdateRequestAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgProfileUpdate : public ::google::protobuf::Message {
 public:
  MsgProfileUpdate();
  virtual ~MsgProfileUpdate();
  
  MsgProfileUpdate(const MsgProfileUpdate& from);
  
  inline MsgProfileUpdate& operator=(const MsgProfileUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgProfileUpdate& default_instance();
  void Swap(MsgProfileUpdate* other);
  
  // implements Message ----------------------------------------------
  
  MsgProfileUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgProfileUpdate& from);
  void MergeFrom(const MsgProfileUpdate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string login = 1;
  inline bool has_login() const;
  inline void clear_login();
  static const int kLoginFieldNumber = 1;
  inline const ::std::string& login() const;
  inline void set_login(const ::std::string& value);
  inline void set_login(const char* value);
  inline void set_login(const char* value, size_t size);
  inline ::std::string* mutable_login();
  
  // required .MsgsAuthenticationToClient.MsgProfile profile = 2;
  inline bool has_profile() const;
  inline void clear_profile();
  static const int kProfileFieldNumber = 2;
  inline const ::MsgsAuthenticationToClient::MsgProfile& profile() const;
  inline ::MsgsAuthenticationToClient::MsgProfile* mutable_profile();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* login_;
  static const ::std::string _default_login_;
  ::MsgsAuthenticationToClient::MsgProfile* profile_;
  friend void  protobuf_AddDesc_AuthenticationToClient_2eproto();
  friend void protobuf_AssignDesc_AuthenticationToClient_2eproto();
  friend void protobuf_ShutdownFile_AuthenticationToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgProfileUpdate* default_instance_;
};
// -------------------------------------------------------------------

class MsgProfileDestruction : public ::google::protobuf::Message {
 public:
  MsgProfileDestruction();
  virtual ~MsgProfileDestruction();
  
  MsgProfileDestruction(const MsgProfileDestruction& from);
  
  inline MsgProfileDestruction& operator=(const MsgProfileDestruction& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgProfileDestruction& default_instance();
  void Swap(MsgProfileDestruction* other);
  
  // implements Message ----------------------------------------------
  
  MsgProfileDestruction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgProfileDestruction& from);
  void MergeFrom(const MsgProfileDestruction& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string login = 1;
  inline bool has_login() const;
  inline void clear_login();
  static const int kLoginFieldNumber = 1;
  inline const ::std::string& login() const;
  inline void set_login(const ::std::string& value);
  inline void set_login(const char* value);
  inline void set_login(const char* value, size_t size);
  inline ::std::string* mutable_login();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* login_;
  static const ::std::string _default_login_;
  friend void  protobuf_AddDesc_AuthenticationToClient_2eproto();
  friend void protobuf_AssignDesc_AuthenticationToClient_2eproto();
  friend void protobuf_ShutdownFile_AuthenticationToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgProfileDestruction* default_instance_;
};
// -------------------------------------------------------------------

class MsgProfileDestructionRequestAck : public ::google::protobuf::Message {
 public:
  MsgProfileDestructionRequestAck();
  virtual ~MsgProfileDestructionRequestAck();
  
  MsgProfileDestructionRequestAck(const MsgProfileDestructionRequestAck& from);
  
  inline MsgProfileDestructionRequestAck& operator=(const MsgProfileDestructionRequestAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgProfileDestructionRequestAck& default_instance();
  void Swap(MsgProfileDestructionRequestAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgProfileDestructionRequestAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgProfileDestructionRequestAck& from);
  void MergeFrom(const MsgProfileDestructionRequestAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef MsgProfileDestructionRequestAck_ErrorCode ErrorCode;
  static const ErrorCode success = MsgProfileDestructionRequestAck_ErrorCode_success;
  static const ErrorCode invalid_profile = MsgProfileDestructionRequestAck_ErrorCode_invalid_profile;
  static const ErrorCode failure = MsgProfileDestructionRequestAck_ErrorCode_failure;
  static inline bool ErrorCode_IsValid(int value) {
    return MsgProfileDestructionRequestAck_ErrorCode_IsValid(value);
  }
  static const ErrorCode ErrorCode_MIN =
    MsgProfileDestructionRequestAck_ErrorCode_ErrorCode_MIN;
  static const ErrorCode ErrorCode_MAX =
    MsgProfileDestructionRequestAck_ErrorCode_ErrorCode_MAX;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorCode_descriptor() {
    return MsgProfileDestructionRequestAck_ErrorCode_descriptor();
  }
  static inline const ::std::string& ErrorCode_Name(ErrorCode value) {
    return MsgProfileDestructionRequestAck_ErrorCode_Name(value);
  }
  static inline bool ErrorCode_Parse(const ::std::string& name,
      ErrorCode* value) {
    return MsgProfileDestructionRequestAck_ErrorCode_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .MsgsAuthenticationToClient.MsgProfileDestructionRequestAck.ErrorCode error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::MsgsAuthenticationToClient::MsgProfileDestructionRequestAck_ErrorCode error_code() const;
  inline void set_error_code(::MsgsAuthenticationToClient::MsgProfileDestructionRequestAck_ErrorCode value);
  
  // required string login = 2;
  inline bool has_login() const;
  inline void clear_login();
  static const int kLoginFieldNumber = 2;
  inline const ::std::string& login() const;
  inline void set_login(const ::std::string& value);
  inline void set_login(const char* value);
  inline void set_login(const char* value, size_t size);
  inline ::std::string* mutable_login();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int error_code_;
  ::std::string* login_;
  static const ::std::string _default_login_;
  friend void  protobuf_AddDesc_AuthenticationToClient_2eproto();
  friend void protobuf_AssignDesc_AuthenticationToClient_2eproto();
  friend void protobuf_ShutdownFile_AuthenticationToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgProfileDestructionRequestAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgProfile : public ::google::protobuf::Message {
 public:
  MsgProfile();
  virtual ~MsgProfile();
  
  MsgProfile(const MsgProfile& from);
  
  inline MsgProfile& operator=(const MsgProfile& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgProfile& default_instance();
  void Swap(MsgProfile* other);
  
  // implements Message ----------------------------------------------
  
  MsgProfile* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgProfile& from);
  void MergeFrom(const MsgProfile& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string login = 1;
  inline bool has_login() const;
  inline void clear_login();
  static const int kLoginFieldNumber = 1;
  inline const ::std::string& login() const;
  inline void set_login(const ::std::string& value);
  inline void set_login(const char* value);
  inline void set_login(const char* value, size_t size);
  inline ::std::string* mutable_login();
  
  // optional string password = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 2;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  
  // optional .Common.FormationIdList read_only_formations = 3;
  inline bool has_read_only_formations() const;
  inline void clear_read_only_formations();
  static const int kReadOnlyFormationsFieldNumber = 3;
  inline const ::Common::FormationIdList& read_only_formations() const;
  inline ::Common::FormationIdList* mutable_read_only_formations();
  
  // optional .Common.FormationIdList read_write_formations = 4;
  inline bool has_read_write_formations() const;
  inline void clear_read_write_formations();
  static const int kReadWriteFormationsFieldNumber = 4;
  inline const ::Common::FormationIdList& read_write_formations() const;
  inline ::Common::FormationIdList* mutable_read_write_formations();
  
  // optional .Common.AutomatIdList read_only_automates = 5;
  inline bool has_read_only_automates() const;
  inline void clear_read_only_automates();
  static const int kReadOnlyAutomatesFieldNumber = 5;
  inline const ::Common::AutomatIdList& read_only_automates() const;
  inline ::Common::AutomatIdList* mutable_read_only_automates();
  
  // optional .Common.AutomatIdList read_write_automates = 6;
  inline bool has_read_write_automates() const;
  inline void clear_read_write_automates();
  static const int kReadWriteAutomatesFieldNumber = 6;
  inline const ::Common::AutomatIdList& read_write_automates() const;
  inline ::Common::AutomatIdList* mutable_read_write_automates();
  
  // optional .Common.PartyIdList read_only_camps = 7;
  inline bool has_read_only_camps() const;
  inline void clear_read_only_camps();
  static const int kReadOnlyCampsFieldNumber = 7;
  inline const ::Common::PartyIdList& read_only_camps() const;
  inline ::Common::PartyIdList* mutable_read_only_camps();
  
  // optional .Common.PartyIdList read_write_camps = 8;
  inline bool has_read_write_camps() const;
  inline void clear_read_write_camps();
  static const int kReadWriteCampsFieldNumber = 8;
  inline const ::Common::PartyIdList& read_write_camps() const;
  inline ::Common::PartyIdList* mutable_read_write_camps();
  
  // optional .Common.CrowdIdList read_only_crowds = 9;
  inline bool has_read_only_crowds() const;
  inline void clear_read_only_crowds();
  static const int kReadOnlyCrowdsFieldNumber = 9;
  inline const ::Common::CrowdIdList& read_only_crowds() const;
  inline ::Common::CrowdIdList* mutable_read_only_crowds();
  
  // optional .Common.CrowdIdList read_write_crowds = 10;
  inline bool has_read_write_crowds() const;
  inline void clear_read_write_crowds();
  static const int kReadWriteCrowdsFieldNumber = 10;
  inline const ::Common::CrowdIdList& read_write_crowds() const;
  inline ::Common::CrowdIdList* mutable_read_write_crowds();
  
  // required bool supervisor = 11;
  inline bool has_supervisor() const;
  inline void clear_supervisor();
  static const int kSupervisorFieldNumber = 11;
  inline bool supervisor() const;
  inline void set_supervisor(bool value);
  
  // optional .MsgsAuthenticationToClient.Role role = 12;
  inline bool has_role() const;
  inline void clear_role();
  static const int kRoleFieldNumber = 12;
  inline MsgsAuthenticationToClient::Role role() const;
  inline void set_role(MsgsAuthenticationToClient::Role value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* login_;
  static const ::std::string _default_login_;
  ::std::string* password_;
  static const ::std::string _default_password_;
  ::Common::FormationIdList* read_only_formations_;
  ::Common::FormationIdList* read_write_formations_;
  ::Common::AutomatIdList* read_only_automates_;
  ::Common::AutomatIdList* read_write_automates_;
  ::Common::PartyIdList* read_only_camps_;
  ::Common::PartyIdList* read_write_camps_;
  ::Common::CrowdIdList* read_only_crowds_;
  ::Common::CrowdIdList* read_write_crowds_;
  bool supervisor_;
  int role_;
  friend void  protobuf_AddDesc_AuthenticationToClient_2eproto();
  friend void protobuf_AssignDesc_AuthenticationToClient_2eproto();
  friend void protobuf_ShutdownFile_AuthenticationToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgProfile* default_instance_;
};
// -------------------------------------------------------------------

class MsgProfileDescriptionList : public ::google::protobuf::Message {
 public:
  MsgProfileDescriptionList();
  virtual ~MsgProfileDescriptionList();
  
  MsgProfileDescriptionList(const MsgProfileDescriptionList& from);
  
  inline MsgProfileDescriptionList& operator=(const MsgProfileDescriptionList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgProfileDescriptionList& default_instance();
  void Swap(MsgProfileDescriptionList* other);
  
  // implements Message ----------------------------------------------
  
  MsgProfileDescriptionList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgProfileDescriptionList& from);
  void MergeFrom(const MsgProfileDescriptionList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .MsgsAuthenticationToClient.MsgProfileDescription elem = 1;
  inline int elem_size() const;
  inline void clear_elem();
  static const int kElemFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::MsgsAuthenticationToClient::MsgProfileDescription >& elem() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgsAuthenticationToClient::MsgProfileDescription >* mutable_elem();
  inline const ::MsgsAuthenticationToClient::MsgProfileDescription& elem(int index) const;
  inline ::MsgsAuthenticationToClient::MsgProfileDescription* mutable_elem(int index);
  inline ::MsgsAuthenticationToClient::MsgProfileDescription* add_elem();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::MsgsAuthenticationToClient::MsgProfileDescription > elem_;
  friend void  protobuf_AddDesc_AuthenticationToClient_2eproto();
  friend void protobuf_AssignDesc_AuthenticationToClient_2eproto();
  friend void protobuf_ShutdownFile_AuthenticationToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgProfileDescriptionList* default_instance_;
};
// -------------------------------------------------------------------

class MsgProfileDescription : public ::google::protobuf::Message {
 public:
  MsgProfileDescription();
  virtual ~MsgProfileDescription();
  
  MsgProfileDescription(const MsgProfileDescription& from);
  
  inline MsgProfileDescription& operator=(const MsgProfileDescription& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgProfileDescription& default_instance();
  void Swap(MsgProfileDescription* other);
  
  // implements Message ----------------------------------------------
  
  MsgProfileDescription* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgProfileDescription& from);
  void MergeFrom(const MsgProfileDescription& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string login = 1;
  inline bool has_login() const;
  inline void clear_login();
  static const int kLoginFieldNumber = 1;
  inline const ::std::string& login() const;
  inline void set_login(const ::std::string& value);
  inline void set_login(const char* value);
  inline void set_login(const char* value, size_t size);
  inline ::std::string* mutable_login();
  
  // required bool password = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 2;
  inline bool password() const;
  inline void set_password(bool value);
  
  // required bool supervisor = 3;
  inline bool has_supervisor() const;
  inline void clear_supervisor();
  static const int kSupervisorFieldNumber = 3;
  inline bool supervisor() const;
  inline void set_supervisor(bool value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* login_;
  static const ::std::string _default_login_;
  bool password_;
  bool supervisor_;
  friend void  protobuf_AddDesc_AuthenticationToClient_2eproto();
  friend void protobuf_AssignDesc_AuthenticationToClient_2eproto();
  friend void protobuf_ShutdownFile_AuthenticationToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgProfileDescription* default_instance_;
};
// -------------------------------------------------------------------

class MsgAuthenticationToClient_Content : public ::google::protobuf::Message {
 public:
  MsgAuthenticationToClient_Content();
  virtual ~MsgAuthenticationToClient_Content();
  
  MsgAuthenticationToClient_Content(const MsgAuthenticationToClient_Content& from);
  
  inline MsgAuthenticationToClient_Content& operator=(const MsgAuthenticationToClient_Content& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgAuthenticationToClient_Content& default_instance();
  void Swap(MsgAuthenticationToClient_Content* other);
  
  // implements Message ----------------------------------------------
  
  MsgAuthenticationToClient_Content* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgAuthenticationToClient_Content& from);
  void MergeFrom(const MsgAuthenticationToClient_Content& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .MsgsAuthenticationToClient.MsgAuthenticationResponse authentication_response = 1;
  inline bool has_authentication_response() const;
  inline void clear_authentication_response();
  static const int kAuthenticationResponseFieldNumber = 1;
  inline const ::MsgsAuthenticationToClient::MsgAuthenticationResponse& authentication_response() const;
  inline ::MsgsAuthenticationToClient::MsgAuthenticationResponse* mutable_authentication_response();
  
  // optional .MsgsAuthenticationToClient.MsgProfileCreation profile_creation = 2;
  inline bool has_profile_creation() const;
  inline void clear_profile_creation();
  static const int kProfileCreationFieldNumber = 2;
  inline const ::MsgsAuthenticationToClient::MsgProfileCreation& profile_creation() const;
  inline ::MsgsAuthenticationToClient::MsgProfileCreation* mutable_profile_creation();
  
  // optional .MsgsAuthenticationToClient.MsgProfileCreationRequestAck profile_creation_request_ack = 3;
  inline bool has_profile_creation_request_ack() const;
  inline void clear_profile_creation_request_ack();
  static const int kProfileCreationRequestAckFieldNumber = 3;
  inline const ::MsgsAuthenticationToClient::MsgProfileCreationRequestAck& profile_creation_request_ack() const;
  inline ::MsgsAuthenticationToClient::MsgProfileCreationRequestAck* mutable_profile_creation_request_ack();
  
  // optional .MsgsAuthenticationToClient.MsgProfileUpdate profile_update = 4;
  inline bool has_profile_update() const;
  inline void clear_profile_update();
  static const int kProfileUpdateFieldNumber = 4;
  inline const ::MsgsAuthenticationToClient::MsgProfileUpdate& profile_update() const;
  inline ::MsgsAuthenticationToClient::MsgProfileUpdate* mutable_profile_update();
  
  // optional .MsgsAuthenticationToClient.MsgProfileUpdateRequestAck profile_update_request_ack = 5;
  inline bool has_profile_update_request_ack() const;
  inline void clear_profile_update_request_ack();
  static const int kProfileUpdateRequestAckFieldNumber = 5;
  inline const ::MsgsAuthenticationToClient::MsgProfileUpdateRequestAck& profile_update_request_ack() const;
  inline ::MsgsAuthenticationToClient::MsgProfileUpdateRequestAck* mutable_profile_update_request_ack();
  
  // optional .MsgsAuthenticationToClient.MsgProfileDestruction profile_destruction = 6;
  inline bool has_profile_destruction() const;
  inline void clear_profile_destruction();
  static const int kProfileDestructionFieldNumber = 6;
  inline const ::MsgsAuthenticationToClient::MsgProfileDestruction& profile_destruction() const;
  inline ::MsgsAuthenticationToClient::MsgProfileDestruction* mutable_profile_destruction();
  
  // optional .MsgsAuthenticationToClient.MsgProfileDestructionRequestAck profile_destruction_request_ack = 7;
  inline bool has_profile_destruction_request_ack() const;
  inline void clear_profile_destruction_request_ack();
  static const int kProfileDestructionRequestAckFieldNumber = 7;
  inline const ::MsgsAuthenticationToClient::MsgProfileDestructionRequestAck& profile_destruction_request_ack() const;
  inline ::MsgsAuthenticationToClient::MsgProfileDestructionRequestAck* mutable_profile_destruction_request_ack();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::MsgsAuthenticationToClient::MsgAuthenticationResponse* authentication_response_;
  ::MsgsAuthenticationToClient::MsgProfileCreation* profile_creation_;
  ::MsgsAuthenticationToClient::MsgProfileCreationRequestAck* profile_creation_request_ack_;
  ::MsgsAuthenticationToClient::MsgProfileUpdate* profile_update_;
  ::MsgsAuthenticationToClient::MsgProfileUpdateRequestAck* profile_update_request_ack_;
  ::MsgsAuthenticationToClient::MsgProfileDestruction* profile_destruction_;
  ::MsgsAuthenticationToClient::MsgProfileDestructionRequestAck* profile_destruction_request_ack_;
  friend void  protobuf_AddDesc_AuthenticationToClient_2eproto();
  friend void protobuf_AssignDesc_AuthenticationToClient_2eproto();
  friend void protobuf_ShutdownFile_AuthenticationToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgAuthenticationToClient_Content* default_instance_;
};
// -------------------------------------------------------------------

class MsgAuthenticationToClient : public ::google::protobuf::Message {
 public:
  MsgAuthenticationToClient();
  virtual ~MsgAuthenticationToClient();
  
  MsgAuthenticationToClient(const MsgAuthenticationToClient& from);
  
  inline MsgAuthenticationToClient& operator=(const MsgAuthenticationToClient& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgAuthenticationToClient& default_instance();
  void Swap(MsgAuthenticationToClient* other);
  
  // implements Message ----------------------------------------------
  
  MsgAuthenticationToClient* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgAuthenticationToClient& from);
  void MergeFrom(const MsgAuthenticationToClient& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef MsgAuthenticationToClient_Content Content;
  
  // accessors -------------------------------------------------------
  
  // optional int32 context = 1;
  inline bool has_context() const;
  inline void clear_context();
  static const int kContextFieldNumber = 1;
  inline ::google::protobuf::int32 context() const;
  inline void set_context(::google::protobuf::int32 value);
  
  // required .MsgsAuthenticationToClient.MsgAuthenticationToClient.Content message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::MsgsAuthenticationToClient::MsgAuthenticationToClient_Content& message() const;
  inline ::MsgsAuthenticationToClient::MsgAuthenticationToClient_Content* mutable_message();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 context_;
  ::MsgsAuthenticationToClient::MsgAuthenticationToClient_Content* message_;
  friend void  protobuf_AddDesc_AuthenticationToClient_2eproto();
  friend void protobuf_AssignDesc_AuthenticationToClient_2eproto();
  friend void protobuf_ShutdownFile_AuthenticationToClient_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgAuthenticationToClient* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// MsgAuthenticationResponse

// required .MsgsAuthenticationToClient.MsgAuthenticationResponse.ErrorCode error_code = 1;
inline bool MsgAuthenticationResponse::has_error_code() const {
  return _has_bit(0);
}
inline void MsgAuthenticationResponse::clear_error_code() {
  error_code_ = 0;
  _clear_bit(0);
}
inline ::MsgsAuthenticationToClient::MsgAuthenticationResponse_ErrorCode MsgAuthenticationResponse::error_code() const {
  return static_cast< ::MsgsAuthenticationToClient::MsgAuthenticationResponse_ErrorCode >(error_code_);
}
inline void MsgAuthenticationResponse::set_error_code(::MsgsAuthenticationToClient::MsgAuthenticationResponse_ErrorCode value) {
  GOOGLE_DCHECK(::MsgsAuthenticationToClient::MsgAuthenticationResponse_ErrorCode_IsValid(value));
  _set_bit(0);
  error_code_ = value;
}

// optional .MsgsAuthenticationToClient.MsgProfile profile = 2;
inline bool MsgAuthenticationResponse::has_profile() const {
  return _has_bit(1);
}
inline void MsgAuthenticationResponse::clear_profile() {
  if (profile_ != NULL) profile_->::MsgsAuthenticationToClient::MsgProfile::Clear();
  _clear_bit(1);
}
inline const ::MsgsAuthenticationToClient::MsgProfile& MsgAuthenticationResponse::profile() const {
  return profile_ != NULL ? *profile_ : *default_instance_->profile_;
}
inline ::MsgsAuthenticationToClient::MsgProfile* MsgAuthenticationResponse::mutable_profile() {
  _set_bit(1);
  if (profile_ == NULL) profile_ = new ::MsgsAuthenticationToClient::MsgProfile;
  return profile_;
}

// optional .MsgsAuthenticationToClient.MsgProfileDescriptionList profiles = 3;
inline bool MsgAuthenticationResponse::has_profiles() const {
  return _has_bit(2);
}
inline void MsgAuthenticationResponse::clear_profiles() {
  if (profiles_ != NULL) profiles_->::MsgsAuthenticationToClient::MsgProfileDescriptionList::Clear();
  _clear_bit(2);
}
inline const ::MsgsAuthenticationToClient::MsgProfileDescriptionList& MsgAuthenticationResponse::profiles() const {
  return profiles_ != NULL ? *profiles_ : *default_instance_->profiles_;
}
inline ::MsgsAuthenticationToClient::MsgProfileDescriptionList* MsgAuthenticationResponse::mutable_profiles() {
  _set_bit(2);
  if (profiles_ == NULL) profiles_ = new ::MsgsAuthenticationToClient::MsgProfileDescriptionList;
  return profiles_;
}

// required .Version.ProtocolVersion server_version = 4;
inline bool MsgAuthenticationResponse::has_server_version() const {
  return _has_bit(3);
}
inline void MsgAuthenticationResponse::clear_server_version() {
  if (server_version_ != NULL) server_version_->::Version::ProtocolVersion::Clear();
  _clear_bit(3);
}
inline const ::Version::ProtocolVersion& MsgAuthenticationResponse::server_version() const {
  return server_version_ != NULL ? *server_version_ : *default_instance_->server_version_;
}
inline ::Version::ProtocolVersion* MsgAuthenticationResponse::mutable_server_version() {
  _set_bit(3);
  if (server_version_ == NULL) server_version_ = new ::Version::ProtocolVersion;
  return server_version_;
}

// optional .Common.MsgDateTime restart_date_time = 5;
inline bool MsgAuthenticationResponse::has_restart_date_time() const {
  return _has_bit(4);
}
inline void MsgAuthenticationResponse::clear_restart_date_time() {
  if (restart_date_time_ != NULL) restart_date_time_->::Common::MsgDateTime::Clear();
  _clear_bit(4);
}
inline const ::Common::MsgDateTime& MsgAuthenticationResponse::restart_date_time() const {
  return restart_date_time_ != NULL ? *restart_date_time_ : *default_instance_->restart_date_time_;
}
inline ::Common::MsgDateTime* MsgAuthenticationResponse::mutable_restart_date_time() {
  _set_bit(4);
  if (restart_date_time_ == NULL) restart_date_time_ = new ::Common::MsgDateTime;
  return restart_date_time_;
}

// optional string terrain_name = 6;
inline bool MsgAuthenticationResponse::has_terrain_name() const {
  return _has_bit(5);
}
inline void MsgAuthenticationResponse::clear_terrain_name() {
  if (terrain_name_ != &_default_terrain_name_) {
    terrain_name_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& MsgAuthenticationResponse::terrain_name() const {
  return *terrain_name_;
}
inline void MsgAuthenticationResponse::set_terrain_name(const ::std::string& value) {
  _set_bit(5);
  if (terrain_name_ == &_default_terrain_name_) {
    terrain_name_ = new ::std::string;
  }
  terrain_name_->assign(value);
}
inline void MsgAuthenticationResponse::set_terrain_name(const char* value) {
  _set_bit(5);
  if (terrain_name_ == &_default_terrain_name_) {
    terrain_name_ = new ::std::string;
  }
  terrain_name_->assign(value);
}
inline void MsgAuthenticationResponse::set_terrain_name(const char* value, size_t size) {
  _set_bit(5);
  if (terrain_name_ == &_default_terrain_name_) {
    terrain_name_ = new ::std::string;
  }
  terrain_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgAuthenticationResponse::mutable_terrain_name() {
  _set_bit(5);
  if (terrain_name_ == &_default_terrain_name_) {
    terrain_name_ = new ::std::string;
  }
  return terrain_name_;
}

// -------------------------------------------------------------------

// MsgProfileCreation

// required .MsgsAuthenticationToClient.MsgProfile profile = 1;
inline bool MsgProfileCreation::has_profile() const {
  return _has_bit(0);
}
inline void MsgProfileCreation::clear_profile() {
  if (profile_ != NULL) profile_->::MsgsAuthenticationToClient::MsgProfile::Clear();
  _clear_bit(0);
}
inline const ::MsgsAuthenticationToClient::MsgProfile& MsgProfileCreation::profile() const {
  return profile_ != NULL ? *profile_ : *default_instance_->profile_;
}
inline ::MsgsAuthenticationToClient::MsgProfile* MsgProfileCreation::mutable_profile() {
  _set_bit(0);
  if (profile_ == NULL) profile_ = new ::MsgsAuthenticationToClient::MsgProfile;
  return profile_;
}

// -------------------------------------------------------------------

// MsgProfileCreationRequestAck

// required string login = 1;
inline bool MsgProfileCreationRequestAck::has_login() const {
  return _has_bit(0);
}
inline void MsgProfileCreationRequestAck::clear_login() {
  if (login_ != &_default_login_) {
    login_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgProfileCreationRequestAck::login() const {
  return *login_;
}
inline void MsgProfileCreationRequestAck::set_login(const ::std::string& value) {
  _set_bit(0);
  if (login_ == &_default_login_) {
    login_ = new ::std::string;
  }
  login_->assign(value);
}
inline void MsgProfileCreationRequestAck::set_login(const char* value) {
  _set_bit(0);
  if (login_ == &_default_login_) {
    login_ = new ::std::string;
  }
  login_->assign(value);
}
inline void MsgProfileCreationRequestAck::set_login(const char* value, size_t size) {
  _set_bit(0);
  if (login_ == &_default_login_) {
    login_ = new ::std::string;
  }
  login_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgProfileCreationRequestAck::mutable_login() {
  _set_bit(0);
  if (login_ == &_default_login_) {
    login_ = new ::std::string;
  }
  return login_;
}

// required .MsgsAuthenticationToClient.MsgProfileCreationRequestAck.ErrorCode error_code = 2;
inline bool MsgProfileCreationRequestAck::has_error_code() const {
  return _has_bit(1);
}
inline void MsgProfileCreationRequestAck::clear_error_code() {
  error_code_ = 0;
  _clear_bit(1);
}
inline ::MsgsAuthenticationToClient::MsgProfileCreationRequestAck_ErrorCode MsgProfileCreationRequestAck::error_code() const {
  return static_cast< ::MsgsAuthenticationToClient::MsgProfileCreationRequestAck_ErrorCode >(error_code_);
}
inline void MsgProfileCreationRequestAck::set_error_code(::MsgsAuthenticationToClient::MsgProfileCreationRequestAck_ErrorCode value) {
  GOOGLE_DCHECK(::MsgsAuthenticationToClient::MsgProfileCreationRequestAck_ErrorCode_IsValid(value));
  _set_bit(1);
  error_code_ = value;
}

// -------------------------------------------------------------------

// MsgProfileUpdateRequestAck

// required string login = 1;
inline bool MsgProfileUpdateRequestAck::has_login() const {
  return _has_bit(0);
}
inline void MsgProfileUpdateRequestAck::clear_login() {
  if (login_ != &_default_login_) {
    login_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgProfileUpdateRequestAck::login() const {
  return *login_;
}
inline void MsgProfileUpdateRequestAck::set_login(const ::std::string& value) {
  _set_bit(0);
  if (login_ == &_default_login_) {
    login_ = new ::std::string;
  }
  login_->assign(value);
}
inline void MsgProfileUpdateRequestAck::set_login(const char* value) {
  _set_bit(0);
  if (login_ == &_default_login_) {
    login_ = new ::std::string;
  }
  login_->assign(value);
}
inline void MsgProfileUpdateRequestAck::set_login(const char* value, size_t size) {
  _set_bit(0);
  if (login_ == &_default_login_) {
    login_ = new ::std::string;
  }
  login_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgProfileUpdateRequestAck::mutable_login() {
  _set_bit(0);
  if (login_ == &_default_login_) {
    login_ = new ::std::string;
  }
  return login_;
}

// required .MsgsAuthenticationToClient.MsgProfileUpdateRequestAck.ErrorCode error_code = 2;
inline bool MsgProfileUpdateRequestAck::has_error_code() const {
  return _has_bit(1);
}
inline void MsgProfileUpdateRequestAck::clear_error_code() {
  error_code_ = 0;
  _clear_bit(1);
}
inline ::MsgsAuthenticationToClient::MsgProfileUpdateRequestAck_ErrorCode MsgProfileUpdateRequestAck::error_code() const {
  return static_cast< ::MsgsAuthenticationToClient::MsgProfileUpdateRequestAck_ErrorCode >(error_code_);
}
inline void MsgProfileUpdateRequestAck::set_error_code(::MsgsAuthenticationToClient::MsgProfileUpdateRequestAck_ErrorCode value) {
  GOOGLE_DCHECK(::MsgsAuthenticationToClient::MsgProfileUpdateRequestAck_ErrorCode_IsValid(value));
  _set_bit(1);
  error_code_ = value;
}

// -------------------------------------------------------------------

// MsgProfileUpdate

// required string login = 1;
inline bool MsgProfileUpdate::has_login() const {
  return _has_bit(0);
}
inline void MsgProfileUpdate::clear_login() {
  if (login_ != &_default_login_) {
    login_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgProfileUpdate::login() const {
  return *login_;
}
inline void MsgProfileUpdate::set_login(const ::std::string& value) {
  _set_bit(0);
  if (login_ == &_default_login_) {
    login_ = new ::std::string;
  }
  login_->assign(value);
}
inline void MsgProfileUpdate::set_login(const char* value) {
  _set_bit(0);
  if (login_ == &_default_login_) {
    login_ = new ::std::string;
  }
  login_->assign(value);
}
inline void MsgProfileUpdate::set_login(const char* value, size_t size) {
  _set_bit(0);
  if (login_ == &_default_login_) {
    login_ = new ::std::string;
  }
  login_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgProfileUpdate::mutable_login() {
  _set_bit(0);
  if (login_ == &_default_login_) {
    login_ = new ::std::string;
  }
  return login_;
}

// required .MsgsAuthenticationToClient.MsgProfile profile = 2;
inline bool MsgProfileUpdate::has_profile() const {
  return _has_bit(1);
}
inline void MsgProfileUpdate::clear_profile() {
  if (profile_ != NULL) profile_->::MsgsAuthenticationToClient::MsgProfile::Clear();
  _clear_bit(1);
}
inline const ::MsgsAuthenticationToClient::MsgProfile& MsgProfileUpdate::profile() const {
  return profile_ != NULL ? *profile_ : *default_instance_->profile_;
}
inline ::MsgsAuthenticationToClient::MsgProfile* MsgProfileUpdate::mutable_profile() {
  _set_bit(1);
  if (profile_ == NULL) profile_ = new ::MsgsAuthenticationToClient::MsgProfile;
  return profile_;
}

// -------------------------------------------------------------------

// MsgProfileDestruction

// optional string login = 1;
inline bool MsgProfileDestruction::has_login() const {
  return _has_bit(0);
}
inline void MsgProfileDestruction::clear_login() {
  if (login_ != &_default_login_) {
    login_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgProfileDestruction::login() const {
  return *login_;
}
inline void MsgProfileDestruction::set_login(const ::std::string& value) {
  _set_bit(0);
  if (login_ == &_default_login_) {
    login_ = new ::std::string;
  }
  login_->assign(value);
}
inline void MsgProfileDestruction::set_login(const char* value) {
  _set_bit(0);
  if (login_ == &_default_login_) {
    login_ = new ::std::string;
  }
  login_->assign(value);
}
inline void MsgProfileDestruction::set_login(const char* value, size_t size) {
  _set_bit(0);
  if (login_ == &_default_login_) {
    login_ = new ::std::string;
  }
  login_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgProfileDestruction::mutable_login() {
  _set_bit(0);
  if (login_ == &_default_login_) {
    login_ = new ::std::string;
  }
  return login_;
}

// -------------------------------------------------------------------

// MsgProfileDestructionRequestAck

// required .MsgsAuthenticationToClient.MsgProfileDestructionRequestAck.ErrorCode error_code = 1;
inline bool MsgProfileDestructionRequestAck::has_error_code() const {
  return _has_bit(0);
}
inline void MsgProfileDestructionRequestAck::clear_error_code() {
  error_code_ = 0;
  _clear_bit(0);
}
inline ::MsgsAuthenticationToClient::MsgProfileDestructionRequestAck_ErrorCode MsgProfileDestructionRequestAck::error_code() const {
  return static_cast< ::MsgsAuthenticationToClient::MsgProfileDestructionRequestAck_ErrorCode >(error_code_);
}
inline void MsgProfileDestructionRequestAck::set_error_code(::MsgsAuthenticationToClient::MsgProfileDestructionRequestAck_ErrorCode value) {
  GOOGLE_DCHECK(::MsgsAuthenticationToClient::MsgProfileDestructionRequestAck_ErrorCode_IsValid(value));
  _set_bit(0);
  error_code_ = value;
}

// required string login = 2;
inline bool MsgProfileDestructionRequestAck::has_login() const {
  return _has_bit(1);
}
inline void MsgProfileDestructionRequestAck::clear_login() {
  if (login_ != &_default_login_) {
    login_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& MsgProfileDestructionRequestAck::login() const {
  return *login_;
}
inline void MsgProfileDestructionRequestAck::set_login(const ::std::string& value) {
  _set_bit(1);
  if (login_ == &_default_login_) {
    login_ = new ::std::string;
  }
  login_->assign(value);
}
inline void MsgProfileDestructionRequestAck::set_login(const char* value) {
  _set_bit(1);
  if (login_ == &_default_login_) {
    login_ = new ::std::string;
  }
  login_->assign(value);
}
inline void MsgProfileDestructionRequestAck::set_login(const char* value, size_t size) {
  _set_bit(1);
  if (login_ == &_default_login_) {
    login_ = new ::std::string;
  }
  login_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgProfileDestructionRequestAck::mutable_login() {
  _set_bit(1);
  if (login_ == &_default_login_) {
    login_ = new ::std::string;
  }
  return login_;
}

// -------------------------------------------------------------------

// MsgProfile

// required string login = 1;
inline bool MsgProfile::has_login() const {
  return _has_bit(0);
}
inline void MsgProfile::clear_login() {
  if (login_ != &_default_login_) {
    login_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgProfile::login() const {
  return *login_;
}
inline void MsgProfile::set_login(const ::std::string& value) {
  _set_bit(0);
  if (login_ == &_default_login_) {
    login_ = new ::std::string;
  }
  login_->assign(value);
}
inline void MsgProfile::set_login(const char* value) {
  _set_bit(0);
  if (login_ == &_default_login_) {
    login_ = new ::std::string;
  }
  login_->assign(value);
}
inline void MsgProfile::set_login(const char* value, size_t size) {
  _set_bit(0);
  if (login_ == &_default_login_) {
    login_ = new ::std::string;
  }
  login_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgProfile::mutable_login() {
  _set_bit(0);
  if (login_ == &_default_login_) {
    login_ = new ::std::string;
  }
  return login_;
}

// optional string password = 2;
inline bool MsgProfile::has_password() const {
  return _has_bit(1);
}
inline void MsgProfile::clear_password() {
  if (password_ != &_default_password_) {
    password_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& MsgProfile::password() const {
  return *password_;
}
inline void MsgProfile::set_password(const ::std::string& value) {
  _set_bit(1);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void MsgProfile::set_password(const char* value) {
  _set_bit(1);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void MsgProfile::set_password(const char* value, size_t size) {
  _set_bit(1);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgProfile::mutable_password() {
  _set_bit(1);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  return password_;
}

// optional .Common.FormationIdList read_only_formations = 3;
inline bool MsgProfile::has_read_only_formations() const {
  return _has_bit(2);
}
inline void MsgProfile::clear_read_only_formations() {
  if (read_only_formations_ != NULL) read_only_formations_->::Common::FormationIdList::Clear();
  _clear_bit(2);
}
inline const ::Common::FormationIdList& MsgProfile::read_only_formations() const {
  return read_only_formations_ != NULL ? *read_only_formations_ : *default_instance_->read_only_formations_;
}
inline ::Common::FormationIdList* MsgProfile::mutable_read_only_formations() {
  _set_bit(2);
  if (read_only_formations_ == NULL) read_only_formations_ = new ::Common::FormationIdList;
  return read_only_formations_;
}

// optional .Common.FormationIdList read_write_formations = 4;
inline bool MsgProfile::has_read_write_formations() const {
  return _has_bit(3);
}
inline void MsgProfile::clear_read_write_formations() {
  if (read_write_formations_ != NULL) read_write_formations_->::Common::FormationIdList::Clear();
  _clear_bit(3);
}
inline const ::Common::FormationIdList& MsgProfile::read_write_formations() const {
  return read_write_formations_ != NULL ? *read_write_formations_ : *default_instance_->read_write_formations_;
}
inline ::Common::FormationIdList* MsgProfile::mutable_read_write_formations() {
  _set_bit(3);
  if (read_write_formations_ == NULL) read_write_formations_ = new ::Common::FormationIdList;
  return read_write_formations_;
}

// optional .Common.AutomatIdList read_only_automates = 5;
inline bool MsgProfile::has_read_only_automates() const {
  return _has_bit(4);
}
inline void MsgProfile::clear_read_only_automates() {
  if (read_only_automates_ != NULL) read_only_automates_->::Common::AutomatIdList::Clear();
  _clear_bit(4);
}
inline const ::Common::AutomatIdList& MsgProfile::read_only_automates() const {
  return read_only_automates_ != NULL ? *read_only_automates_ : *default_instance_->read_only_automates_;
}
inline ::Common::AutomatIdList* MsgProfile::mutable_read_only_automates() {
  _set_bit(4);
  if (read_only_automates_ == NULL) read_only_automates_ = new ::Common::AutomatIdList;
  return read_only_automates_;
}

// optional .Common.AutomatIdList read_write_automates = 6;
inline bool MsgProfile::has_read_write_automates() const {
  return _has_bit(5);
}
inline void MsgProfile::clear_read_write_automates() {
  if (read_write_automates_ != NULL) read_write_automates_->::Common::AutomatIdList::Clear();
  _clear_bit(5);
}
inline const ::Common::AutomatIdList& MsgProfile::read_write_automates() const {
  return read_write_automates_ != NULL ? *read_write_automates_ : *default_instance_->read_write_automates_;
}
inline ::Common::AutomatIdList* MsgProfile::mutable_read_write_automates() {
  _set_bit(5);
  if (read_write_automates_ == NULL) read_write_automates_ = new ::Common::AutomatIdList;
  return read_write_automates_;
}

// optional .Common.PartyIdList read_only_camps = 7;
inline bool MsgProfile::has_read_only_camps() const {
  return _has_bit(6);
}
inline void MsgProfile::clear_read_only_camps() {
  if (read_only_camps_ != NULL) read_only_camps_->::Common::PartyIdList::Clear();
  _clear_bit(6);
}
inline const ::Common::PartyIdList& MsgProfile::read_only_camps() const {
  return read_only_camps_ != NULL ? *read_only_camps_ : *default_instance_->read_only_camps_;
}
inline ::Common::PartyIdList* MsgProfile::mutable_read_only_camps() {
  _set_bit(6);
  if (read_only_camps_ == NULL) read_only_camps_ = new ::Common::PartyIdList;
  return read_only_camps_;
}

// optional .Common.PartyIdList read_write_camps = 8;
inline bool MsgProfile::has_read_write_camps() const {
  return _has_bit(7);
}
inline void MsgProfile::clear_read_write_camps() {
  if (read_write_camps_ != NULL) read_write_camps_->::Common::PartyIdList::Clear();
  _clear_bit(7);
}
inline const ::Common::PartyIdList& MsgProfile::read_write_camps() const {
  return read_write_camps_ != NULL ? *read_write_camps_ : *default_instance_->read_write_camps_;
}
inline ::Common::PartyIdList* MsgProfile::mutable_read_write_camps() {
  _set_bit(7);
  if (read_write_camps_ == NULL) read_write_camps_ = new ::Common::PartyIdList;
  return read_write_camps_;
}

// optional .Common.CrowdIdList read_only_crowds = 9;
inline bool MsgProfile::has_read_only_crowds() const {
  return _has_bit(8);
}
inline void MsgProfile::clear_read_only_crowds() {
  if (read_only_crowds_ != NULL) read_only_crowds_->::Common::CrowdIdList::Clear();
  _clear_bit(8);
}
inline const ::Common::CrowdIdList& MsgProfile::read_only_crowds() const {
  return read_only_crowds_ != NULL ? *read_only_crowds_ : *default_instance_->read_only_crowds_;
}
inline ::Common::CrowdIdList* MsgProfile::mutable_read_only_crowds() {
  _set_bit(8);
  if (read_only_crowds_ == NULL) read_only_crowds_ = new ::Common::CrowdIdList;
  return read_only_crowds_;
}

// optional .Common.CrowdIdList read_write_crowds = 10;
inline bool MsgProfile::has_read_write_crowds() const {
  return _has_bit(9);
}
inline void MsgProfile::clear_read_write_crowds() {
  if (read_write_crowds_ != NULL) read_write_crowds_->::Common::CrowdIdList::Clear();
  _clear_bit(9);
}
inline const ::Common::CrowdIdList& MsgProfile::read_write_crowds() const {
  return read_write_crowds_ != NULL ? *read_write_crowds_ : *default_instance_->read_write_crowds_;
}
inline ::Common::CrowdIdList* MsgProfile::mutable_read_write_crowds() {
  _set_bit(9);
  if (read_write_crowds_ == NULL) read_write_crowds_ = new ::Common::CrowdIdList;
  return read_write_crowds_;
}

// required bool supervisor = 11;
inline bool MsgProfile::has_supervisor() const {
  return _has_bit(10);
}
inline void MsgProfile::clear_supervisor() {
  supervisor_ = false;
  _clear_bit(10);
}
inline bool MsgProfile::supervisor() const {
  return supervisor_;
}
inline void MsgProfile::set_supervisor(bool value) {
  _set_bit(10);
  supervisor_ = value;
}

// optional .MsgsAuthenticationToClient.Role role = 12;
inline bool MsgProfile::has_role() const {
  return _has_bit(11);
}
inline void MsgProfile::clear_role() {
  role_ = 0;
  _clear_bit(11);
}
inline MsgsAuthenticationToClient::Role MsgProfile::role() const {
  return static_cast< MsgsAuthenticationToClient::Role >(role_);
}
inline void MsgProfile::set_role(MsgsAuthenticationToClient::Role value) {
  GOOGLE_DCHECK(MsgsAuthenticationToClient::Role_IsValid(value));
  _set_bit(11);
  role_ = value;
}

// -------------------------------------------------------------------

// MsgProfileDescriptionList

// repeated .MsgsAuthenticationToClient.MsgProfileDescription elem = 1;
inline int MsgProfileDescriptionList::elem_size() const {
  return elem_.size();
}
inline void MsgProfileDescriptionList::clear_elem() {
  elem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgsAuthenticationToClient::MsgProfileDescription >&
MsgProfileDescriptionList::elem() const {
  return elem_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgsAuthenticationToClient::MsgProfileDescription >*
MsgProfileDescriptionList::mutable_elem() {
  return &elem_;
}
inline const ::MsgsAuthenticationToClient::MsgProfileDescription& MsgProfileDescriptionList::elem(int index) const {
  return elem_.Get(index);
}
inline ::MsgsAuthenticationToClient::MsgProfileDescription* MsgProfileDescriptionList::mutable_elem(int index) {
  return elem_.Mutable(index);
}
inline ::MsgsAuthenticationToClient::MsgProfileDescription* MsgProfileDescriptionList::add_elem() {
  return elem_.Add();
}

// -------------------------------------------------------------------

// MsgProfileDescription

// required string login = 1;
inline bool MsgProfileDescription::has_login() const {
  return _has_bit(0);
}
inline void MsgProfileDescription::clear_login() {
  if (login_ != &_default_login_) {
    login_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgProfileDescription::login() const {
  return *login_;
}
inline void MsgProfileDescription::set_login(const ::std::string& value) {
  _set_bit(0);
  if (login_ == &_default_login_) {
    login_ = new ::std::string;
  }
  login_->assign(value);
}
inline void MsgProfileDescription::set_login(const char* value) {
  _set_bit(0);
  if (login_ == &_default_login_) {
    login_ = new ::std::string;
  }
  login_->assign(value);
}
inline void MsgProfileDescription::set_login(const char* value, size_t size) {
  _set_bit(0);
  if (login_ == &_default_login_) {
    login_ = new ::std::string;
  }
  login_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgProfileDescription::mutable_login() {
  _set_bit(0);
  if (login_ == &_default_login_) {
    login_ = new ::std::string;
  }
  return login_;
}

// required bool password = 2;
inline bool MsgProfileDescription::has_password() const {
  return _has_bit(1);
}
inline void MsgProfileDescription::clear_password() {
  password_ = false;
  _clear_bit(1);
}
inline bool MsgProfileDescription::password() const {
  return password_;
}
inline void MsgProfileDescription::set_password(bool value) {
  _set_bit(1);
  password_ = value;
}

// required bool supervisor = 3;
inline bool MsgProfileDescription::has_supervisor() const {
  return _has_bit(2);
}
inline void MsgProfileDescription::clear_supervisor() {
  supervisor_ = false;
  _clear_bit(2);
}
inline bool MsgProfileDescription::supervisor() const {
  return supervisor_;
}
inline void MsgProfileDescription::set_supervisor(bool value) {
  _set_bit(2);
  supervisor_ = value;
}

// -------------------------------------------------------------------

// MsgAuthenticationToClient_Content

// optional .MsgsAuthenticationToClient.MsgAuthenticationResponse authentication_response = 1;
inline bool MsgAuthenticationToClient_Content::has_authentication_response() const {
  return _has_bit(0);
}
inline void MsgAuthenticationToClient_Content::clear_authentication_response() {
  if (authentication_response_ != NULL) authentication_response_->::MsgsAuthenticationToClient::MsgAuthenticationResponse::Clear();
  _clear_bit(0);
}
inline const ::MsgsAuthenticationToClient::MsgAuthenticationResponse& MsgAuthenticationToClient_Content::authentication_response() const {
  return authentication_response_ != NULL ? *authentication_response_ : *default_instance_->authentication_response_;
}
inline ::MsgsAuthenticationToClient::MsgAuthenticationResponse* MsgAuthenticationToClient_Content::mutable_authentication_response() {
  _set_bit(0);
  if (authentication_response_ == NULL) authentication_response_ = new ::MsgsAuthenticationToClient::MsgAuthenticationResponse;
  return authentication_response_;
}

// optional .MsgsAuthenticationToClient.MsgProfileCreation profile_creation = 2;
inline bool MsgAuthenticationToClient_Content::has_profile_creation() const {
  return _has_bit(1);
}
inline void MsgAuthenticationToClient_Content::clear_profile_creation() {
  if (profile_creation_ != NULL) profile_creation_->::MsgsAuthenticationToClient::MsgProfileCreation::Clear();
  _clear_bit(1);
}
inline const ::MsgsAuthenticationToClient::MsgProfileCreation& MsgAuthenticationToClient_Content::profile_creation() const {
  return profile_creation_ != NULL ? *profile_creation_ : *default_instance_->profile_creation_;
}
inline ::MsgsAuthenticationToClient::MsgProfileCreation* MsgAuthenticationToClient_Content::mutable_profile_creation() {
  _set_bit(1);
  if (profile_creation_ == NULL) profile_creation_ = new ::MsgsAuthenticationToClient::MsgProfileCreation;
  return profile_creation_;
}

// optional .MsgsAuthenticationToClient.MsgProfileCreationRequestAck profile_creation_request_ack = 3;
inline bool MsgAuthenticationToClient_Content::has_profile_creation_request_ack() const {
  return _has_bit(2);
}
inline void MsgAuthenticationToClient_Content::clear_profile_creation_request_ack() {
  if (profile_creation_request_ack_ != NULL) profile_creation_request_ack_->::MsgsAuthenticationToClient::MsgProfileCreationRequestAck::Clear();
  _clear_bit(2);
}
inline const ::MsgsAuthenticationToClient::MsgProfileCreationRequestAck& MsgAuthenticationToClient_Content::profile_creation_request_ack() const {
  return profile_creation_request_ack_ != NULL ? *profile_creation_request_ack_ : *default_instance_->profile_creation_request_ack_;
}
inline ::MsgsAuthenticationToClient::MsgProfileCreationRequestAck* MsgAuthenticationToClient_Content::mutable_profile_creation_request_ack() {
  _set_bit(2);
  if (profile_creation_request_ack_ == NULL) profile_creation_request_ack_ = new ::MsgsAuthenticationToClient::MsgProfileCreationRequestAck;
  return profile_creation_request_ack_;
}

// optional .MsgsAuthenticationToClient.MsgProfileUpdate profile_update = 4;
inline bool MsgAuthenticationToClient_Content::has_profile_update() const {
  return _has_bit(3);
}
inline void MsgAuthenticationToClient_Content::clear_profile_update() {
  if (profile_update_ != NULL) profile_update_->::MsgsAuthenticationToClient::MsgProfileUpdate::Clear();
  _clear_bit(3);
}
inline const ::MsgsAuthenticationToClient::MsgProfileUpdate& MsgAuthenticationToClient_Content::profile_update() const {
  return profile_update_ != NULL ? *profile_update_ : *default_instance_->profile_update_;
}
inline ::MsgsAuthenticationToClient::MsgProfileUpdate* MsgAuthenticationToClient_Content::mutable_profile_update() {
  _set_bit(3);
  if (profile_update_ == NULL) profile_update_ = new ::MsgsAuthenticationToClient::MsgProfileUpdate;
  return profile_update_;
}

// optional .MsgsAuthenticationToClient.MsgProfileUpdateRequestAck profile_update_request_ack = 5;
inline bool MsgAuthenticationToClient_Content::has_profile_update_request_ack() const {
  return _has_bit(4);
}
inline void MsgAuthenticationToClient_Content::clear_profile_update_request_ack() {
  if (profile_update_request_ack_ != NULL) profile_update_request_ack_->::MsgsAuthenticationToClient::MsgProfileUpdateRequestAck::Clear();
  _clear_bit(4);
}
inline const ::MsgsAuthenticationToClient::MsgProfileUpdateRequestAck& MsgAuthenticationToClient_Content::profile_update_request_ack() const {
  return profile_update_request_ack_ != NULL ? *profile_update_request_ack_ : *default_instance_->profile_update_request_ack_;
}
inline ::MsgsAuthenticationToClient::MsgProfileUpdateRequestAck* MsgAuthenticationToClient_Content::mutable_profile_update_request_ack() {
  _set_bit(4);
  if (profile_update_request_ack_ == NULL) profile_update_request_ack_ = new ::MsgsAuthenticationToClient::MsgProfileUpdateRequestAck;
  return profile_update_request_ack_;
}

// optional .MsgsAuthenticationToClient.MsgProfileDestruction profile_destruction = 6;
inline bool MsgAuthenticationToClient_Content::has_profile_destruction() const {
  return _has_bit(5);
}
inline void MsgAuthenticationToClient_Content::clear_profile_destruction() {
  if (profile_destruction_ != NULL) profile_destruction_->::MsgsAuthenticationToClient::MsgProfileDestruction::Clear();
  _clear_bit(5);
}
inline const ::MsgsAuthenticationToClient::MsgProfileDestruction& MsgAuthenticationToClient_Content::profile_destruction() const {
  return profile_destruction_ != NULL ? *profile_destruction_ : *default_instance_->profile_destruction_;
}
inline ::MsgsAuthenticationToClient::MsgProfileDestruction* MsgAuthenticationToClient_Content::mutable_profile_destruction() {
  _set_bit(5);
  if (profile_destruction_ == NULL) profile_destruction_ = new ::MsgsAuthenticationToClient::MsgProfileDestruction;
  return profile_destruction_;
}

// optional .MsgsAuthenticationToClient.MsgProfileDestructionRequestAck profile_destruction_request_ack = 7;
inline bool MsgAuthenticationToClient_Content::has_profile_destruction_request_ack() const {
  return _has_bit(6);
}
inline void MsgAuthenticationToClient_Content::clear_profile_destruction_request_ack() {
  if (profile_destruction_request_ack_ != NULL) profile_destruction_request_ack_->::MsgsAuthenticationToClient::MsgProfileDestructionRequestAck::Clear();
  _clear_bit(6);
}
inline const ::MsgsAuthenticationToClient::MsgProfileDestructionRequestAck& MsgAuthenticationToClient_Content::profile_destruction_request_ack() const {
  return profile_destruction_request_ack_ != NULL ? *profile_destruction_request_ack_ : *default_instance_->profile_destruction_request_ack_;
}
inline ::MsgsAuthenticationToClient::MsgProfileDestructionRequestAck* MsgAuthenticationToClient_Content::mutable_profile_destruction_request_ack() {
  _set_bit(6);
  if (profile_destruction_request_ack_ == NULL) profile_destruction_request_ack_ = new ::MsgsAuthenticationToClient::MsgProfileDestructionRequestAck;
  return profile_destruction_request_ack_;
}

// -------------------------------------------------------------------

// MsgAuthenticationToClient

// optional int32 context = 1;
inline bool MsgAuthenticationToClient::has_context() const {
  return _has_bit(0);
}
inline void MsgAuthenticationToClient::clear_context() {
  context_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 MsgAuthenticationToClient::context() const {
  return context_;
}
inline void MsgAuthenticationToClient::set_context(::google::protobuf::int32 value) {
  _set_bit(0);
  context_ = value;
}

// required .MsgsAuthenticationToClient.MsgAuthenticationToClient.Content message = 2;
inline bool MsgAuthenticationToClient::has_message() const {
  return _has_bit(1);
}
inline void MsgAuthenticationToClient::clear_message() {
  if (message_ != NULL) message_->::MsgsAuthenticationToClient::MsgAuthenticationToClient_Content::Clear();
  _clear_bit(1);
}
inline const ::MsgsAuthenticationToClient::MsgAuthenticationToClient_Content& MsgAuthenticationToClient::message() const {
  return message_ != NULL ? *message_ : *default_instance_->message_;
}
inline ::MsgsAuthenticationToClient::MsgAuthenticationToClient_Content* MsgAuthenticationToClient::mutable_message() {
  _set_bit(1);
  if (message_ == NULL) message_ = new ::MsgsAuthenticationToClient::MsgAuthenticationToClient_Content;
  return message_;
}


}  // namespace MsgsAuthenticationToClient

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgsAuthenticationToClient::MsgAuthenticationResponse_ErrorCode>() {
  return ::MsgsAuthenticationToClient::MsgAuthenticationResponse_ErrorCode_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgsAuthenticationToClient::MsgProfileCreationRequestAck_ErrorCode>() {
  return ::MsgsAuthenticationToClient::MsgProfileCreationRequestAck_ErrorCode_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgsAuthenticationToClient::MsgProfileUpdateRequestAck_ErrorCode>() {
  return ::MsgsAuthenticationToClient::MsgProfileUpdateRequestAck_ErrorCode_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgsAuthenticationToClient::MsgProfileDestructionRequestAck_ErrorCode>() {
  return ::MsgsAuthenticationToClient::MsgProfileDestructionRequestAck_ErrorCode_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< MsgsAuthenticationToClient::Role>() {
  return MsgsAuthenticationToClient::Role_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

#endif  // PROTOBUF_AuthenticationToClient_2eproto__INCLUDED
