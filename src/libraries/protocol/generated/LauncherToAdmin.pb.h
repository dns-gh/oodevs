// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_LauncherToAdmin_2eproto__INCLUDED
#define PROTOBUF_LauncherToAdmin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "Common.pb.h"
#include "Version.pb.h"

namespace MsgsLauncherToAdmin {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_LauncherToAdmin_2eproto();
void protobuf_AssignDesc_LauncherToAdmin_2eproto();
void protobuf_ShutdownFile_LauncherToAdmin_2eproto();

class MsgConnectionAck;
class MsgExercicesListResponse;
class MsgControlStartAck;
class MsgControlStopAck;
class MsgLauncherToAdmin;
class MsgLauncherToAdmin_Content;

enum MsgConnectionAck_ErrorCode {
  MsgConnectionAck_ErrorCode_success = 0,
  MsgConnectionAck_ErrorCode_invalid_connection = 1,
  MsgConnectionAck_ErrorCode_incompatible_protocol_version = 2,
  MsgConnectionAck_ErrorCode_exercise_already_running = 3
};
bool MsgConnectionAck_ErrorCode_IsValid(int value);
const MsgConnectionAck_ErrorCode MsgConnectionAck_ErrorCode_ErrorCode_MIN = MsgConnectionAck_ErrorCode_success;
const MsgConnectionAck_ErrorCode MsgConnectionAck_ErrorCode_ErrorCode_MAX = MsgConnectionAck_ErrorCode_exercise_already_running;

const ::google::protobuf::EnumDescriptor* MsgConnectionAck_ErrorCode_descriptor();
inline const ::std::string& MsgConnectionAck_ErrorCode_Name(MsgConnectionAck_ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgConnectionAck_ErrorCode_descriptor(), value);
}
inline bool MsgConnectionAck_ErrorCode_Parse(
    const ::std::string& name, MsgConnectionAck_ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgConnectionAck_ErrorCode>(
    MsgConnectionAck_ErrorCode_descriptor(), name, value);
}
enum MsgExercicesListResponse_ErrorCode {
  MsgExercicesListResponse_ErrorCode_success = 0,
  MsgExercicesListResponse_ErrorCode_failure = 1
};
bool MsgExercicesListResponse_ErrorCode_IsValid(int value);
const MsgExercicesListResponse_ErrorCode MsgExercicesListResponse_ErrorCode_ErrorCode_MIN = MsgExercicesListResponse_ErrorCode_success;
const MsgExercicesListResponse_ErrorCode MsgExercicesListResponse_ErrorCode_ErrorCode_MAX = MsgExercicesListResponse_ErrorCode_failure;

const ::google::protobuf::EnumDescriptor* MsgExercicesListResponse_ErrorCode_descriptor();
inline const ::std::string& MsgExercicesListResponse_ErrorCode_Name(MsgExercicesListResponse_ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgExercicesListResponse_ErrorCode_descriptor(), value);
}
inline bool MsgExercicesListResponse_ErrorCode_Parse(
    const ::std::string& name, MsgExercicesListResponse_ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgExercicesListResponse_ErrorCode>(
    MsgExercicesListResponse_ErrorCode_descriptor(), name, value);
}
enum MsgControlStartAck_ErrorCode {
  MsgControlStartAck_ErrorCode_success = 0,
  MsgControlStartAck_ErrorCode_bad_exercise_name = 1,
  MsgControlStartAck_ErrorCode_exercise_already_running = 2
};
bool MsgControlStartAck_ErrorCode_IsValid(int value);
const MsgControlStartAck_ErrorCode MsgControlStartAck_ErrorCode_ErrorCode_MIN = MsgControlStartAck_ErrorCode_success;
const MsgControlStartAck_ErrorCode MsgControlStartAck_ErrorCode_ErrorCode_MAX = MsgControlStartAck_ErrorCode_exercise_already_running;

const ::google::protobuf::EnumDescriptor* MsgControlStartAck_ErrorCode_descriptor();
inline const ::std::string& MsgControlStartAck_ErrorCode_Name(MsgControlStartAck_ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgControlStartAck_ErrorCode_descriptor(), value);
}
inline bool MsgControlStartAck_ErrorCode_Parse(
    const ::std::string& name, MsgControlStartAck_ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgControlStartAck_ErrorCode>(
    MsgControlStartAck_ErrorCode_descriptor(), name, value);
}
enum MsgControlStopAck_ErrorCode {
  MsgControlStopAck_ErrorCode_success = 0,
  MsgControlStopAck_ErrorCode_bad_exercise_name = 1,
  MsgControlStopAck_ErrorCode_exercise_not_running = 2
};
bool MsgControlStopAck_ErrorCode_IsValid(int value);
const MsgControlStopAck_ErrorCode MsgControlStopAck_ErrorCode_ErrorCode_MIN = MsgControlStopAck_ErrorCode_success;
const MsgControlStopAck_ErrorCode MsgControlStopAck_ErrorCode_ErrorCode_MAX = MsgControlStopAck_ErrorCode_exercise_not_running;

const ::google::protobuf::EnumDescriptor* MsgControlStopAck_ErrorCode_descriptor();
inline const ::std::string& MsgControlStopAck_ErrorCode_Name(MsgControlStopAck_ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgControlStopAck_ErrorCode_descriptor(), value);
}
inline bool MsgControlStopAck_ErrorCode_Parse(
    const ::std::string& name, MsgControlStopAck_ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgControlStopAck_ErrorCode>(
    MsgControlStopAck_ErrorCode_descriptor(), name, value);
}
// ===================================================================

class MsgConnectionAck : public ::google::protobuf::Message {
 public:
  MsgConnectionAck();
  virtual ~MsgConnectionAck();
  
  MsgConnectionAck(const MsgConnectionAck& from);
  
  inline MsgConnectionAck& operator=(const MsgConnectionAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgConnectionAck& default_instance();
  void Swap(MsgConnectionAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgConnectionAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgConnectionAck& from);
  void MergeFrom(const MsgConnectionAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef MsgConnectionAck_ErrorCode ErrorCode;
  static const ErrorCode success = MsgConnectionAck_ErrorCode_success;
  static const ErrorCode invalid_connection = MsgConnectionAck_ErrorCode_invalid_connection;
  static const ErrorCode incompatible_protocol_version = MsgConnectionAck_ErrorCode_incompatible_protocol_version;
  static const ErrorCode exercise_already_running = MsgConnectionAck_ErrorCode_exercise_already_running;
  static inline bool ErrorCode_IsValid(int value) {
    return MsgConnectionAck_ErrorCode_IsValid(value);
  }
  static const ErrorCode ErrorCode_MIN =
    MsgConnectionAck_ErrorCode_ErrorCode_MIN;
  static const ErrorCode ErrorCode_MAX =
    MsgConnectionAck_ErrorCode_ErrorCode_MAX;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorCode_descriptor() {
    return MsgConnectionAck_ErrorCode_descriptor();
  }
  static inline const ::std::string& ErrorCode_Name(ErrorCode value) {
    return MsgConnectionAck_ErrorCode_Name(value);
  }
  static inline bool ErrorCode_Parse(const ::std::string& name,
      ErrorCode* value) {
    return MsgConnectionAck_ErrorCode_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .MsgsLauncherToAdmin.MsgConnectionAck.ErrorCode error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::MsgsLauncherToAdmin::MsgConnectionAck_ErrorCode error_code() const;
  inline void set_error_code(::MsgsLauncherToAdmin::MsgConnectionAck_ErrorCode value);
  
  // optional int32 context = 2;
  inline bool has_context() const;
  inline void clear_context();
  static const int kContextFieldNumber = 2;
  inline ::google::protobuf::int32 context() const;
  inline void set_context(::google::protobuf::int32 value);
  
  // required .Version.ProtocolVersion server_version = 3;
  inline bool has_server_version() const;
  inline void clear_server_version();
  static const int kServerVersionFieldNumber = 3;
  inline const ::Version::ProtocolVersion& server_version() const;
  inline ::Version::ProtocolVersion* mutable_server_version();
  
  // required .Common.MsgNetworkAddress dispatcher_address = 4;
  inline bool has_dispatcher_address() const;
  inline void clear_dispatcher_address();
  static const int kDispatcherAddressFieldNumber = 4;
  inline const ::Common::MsgNetworkAddress& dispatcher_address() const;
  inline ::Common::MsgNetworkAddress* mutable_dispatcher_address();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int error_code_;
  ::google::protobuf::int32 context_;
  ::Version::ProtocolVersion* server_version_;
  ::Common::MsgNetworkAddress* dispatcher_address_;
  friend void  protobuf_AddDesc_LauncherToAdmin_2eproto();
  friend void protobuf_AssignDesc_LauncherToAdmin_2eproto();
  friend void protobuf_ShutdownFile_LauncherToAdmin_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgConnectionAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgExercicesListResponse : public ::google::protobuf::Message {
 public:
  MsgExercicesListResponse();
  virtual ~MsgExercicesListResponse();
  
  MsgExercicesListResponse(const MsgExercicesListResponse& from);
  
  inline MsgExercicesListResponse& operator=(const MsgExercicesListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgExercicesListResponse& default_instance();
  void Swap(MsgExercicesListResponse* other);
  
  // implements Message ----------------------------------------------
  
  MsgExercicesListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgExercicesListResponse& from);
  void MergeFrom(const MsgExercicesListResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef MsgExercicesListResponse_ErrorCode ErrorCode;
  static const ErrorCode success = MsgExercicesListResponse_ErrorCode_success;
  static const ErrorCode failure = MsgExercicesListResponse_ErrorCode_failure;
  static inline bool ErrorCode_IsValid(int value) {
    return MsgExercicesListResponse_ErrorCode_IsValid(value);
  }
  static const ErrorCode ErrorCode_MIN =
    MsgExercicesListResponse_ErrorCode_ErrorCode_MIN;
  static const ErrorCode ErrorCode_MAX =
    MsgExercicesListResponse_ErrorCode_ErrorCode_MAX;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorCode_descriptor() {
    return MsgExercicesListResponse_ErrorCode_descriptor();
  }
  static inline const ::std::string& ErrorCode_Name(ErrorCode value) {
    return MsgExercicesListResponse_ErrorCode_Name(value);
  }
  static inline bool ErrorCode_Parse(const ::std::string& name,
      ErrorCode* value) {
    return MsgExercicesListResponse_ErrorCode_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .MsgsLauncherToAdmin.MsgExercicesListResponse.ErrorCode error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::MsgsLauncherToAdmin::MsgExercicesListResponse_ErrorCode error_code() const;
  inline void set_error_code(::MsgsLauncherToAdmin::MsgExercicesListResponse_ErrorCode value);
  
  // repeated .Common.MsgExercise exercise = 2;
  inline int exercise_size() const;
  inline void clear_exercise();
  static const int kExerciseFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgExercise >& exercise() const;
  inline ::google::protobuf::RepeatedPtrField< ::Common::MsgExercise >* mutable_exercise();
  inline const ::Common::MsgExercise& exercise(int index) const;
  inline ::Common::MsgExercise* mutable_exercise(int index);
  inline ::Common::MsgExercise* add_exercise();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int error_code_;
  ::google::protobuf::RepeatedPtrField< ::Common::MsgExercise > exercise_;
  friend void  protobuf_AddDesc_LauncherToAdmin_2eproto();
  friend void protobuf_AssignDesc_LauncherToAdmin_2eproto();
  friend void protobuf_ShutdownFile_LauncherToAdmin_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgExercicesListResponse* default_instance_;
};
// -------------------------------------------------------------------

class MsgControlStartAck : public ::google::protobuf::Message {
 public:
  MsgControlStartAck();
  virtual ~MsgControlStartAck();
  
  MsgControlStartAck(const MsgControlStartAck& from);
  
  inline MsgControlStartAck& operator=(const MsgControlStartAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgControlStartAck& default_instance();
  void Swap(MsgControlStartAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgControlStartAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgControlStartAck& from);
  void MergeFrom(const MsgControlStartAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef MsgControlStartAck_ErrorCode ErrorCode;
  static const ErrorCode success = MsgControlStartAck_ErrorCode_success;
  static const ErrorCode bad_exercise_name = MsgControlStartAck_ErrorCode_bad_exercise_name;
  static const ErrorCode exercise_already_running = MsgControlStartAck_ErrorCode_exercise_already_running;
  static inline bool ErrorCode_IsValid(int value) {
    return MsgControlStartAck_ErrorCode_IsValid(value);
  }
  static const ErrorCode ErrorCode_MIN =
    MsgControlStartAck_ErrorCode_ErrorCode_MIN;
  static const ErrorCode ErrorCode_MAX =
    MsgControlStartAck_ErrorCode_ErrorCode_MAX;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorCode_descriptor() {
    return MsgControlStartAck_ErrorCode_descriptor();
  }
  static inline const ::std::string& ErrorCode_Name(ErrorCode value) {
    return MsgControlStartAck_ErrorCode_Name(value);
  }
  static inline bool ErrorCode_Parse(const ::std::string& name,
      ErrorCode* value) {
    return MsgControlStartAck_ErrorCode_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .MsgsLauncherToAdmin.MsgControlStartAck.ErrorCode error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::MsgsLauncherToAdmin::MsgControlStartAck_ErrorCode error_code() const;
  inline void set_error_code(::MsgsLauncherToAdmin::MsgControlStartAck_ErrorCode value);
  
  // required .Common.MsgExercise exercise = 2;
  inline bool has_exercise() const;
  inline void clear_exercise();
  static const int kExerciseFieldNumber = 2;
  inline const ::Common::MsgExercise& exercise() const;
  inline ::Common::MsgExercise* mutable_exercise();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int error_code_;
  ::Common::MsgExercise* exercise_;
  friend void  protobuf_AddDesc_LauncherToAdmin_2eproto();
  friend void protobuf_AssignDesc_LauncherToAdmin_2eproto();
  friend void protobuf_ShutdownFile_LauncherToAdmin_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgControlStartAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgControlStopAck : public ::google::protobuf::Message {
 public:
  MsgControlStopAck();
  virtual ~MsgControlStopAck();
  
  MsgControlStopAck(const MsgControlStopAck& from);
  
  inline MsgControlStopAck& operator=(const MsgControlStopAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgControlStopAck& default_instance();
  void Swap(MsgControlStopAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgControlStopAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgControlStopAck& from);
  void MergeFrom(const MsgControlStopAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef MsgControlStopAck_ErrorCode ErrorCode;
  static const ErrorCode success = MsgControlStopAck_ErrorCode_success;
  static const ErrorCode bad_exercise_name = MsgControlStopAck_ErrorCode_bad_exercise_name;
  static const ErrorCode exercise_not_running = MsgControlStopAck_ErrorCode_exercise_not_running;
  static inline bool ErrorCode_IsValid(int value) {
    return MsgControlStopAck_ErrorCode_IsValid(value);
  }
  static const ErrorCode ErrorCode_MIN =
    MsgControlStopAck_ErrorCode_ErrorCode_MIN;
  static const ErrorCode ErrorCode_MAX =
    MsgControlStopAck_ErrorCode_ErrorCode_MAX;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorCode_descriptor() {
    return MsgControlStopAck_ErrorCode_descriptor();
  }
  static inline const ::std::string& ErrorCode_Name(ErrorCode value) {
    return MsgControlStopAck_ErrorCode_Name(value);
  }
  static inline bool ErrorCode_Parse(const ::std::string& name,
      ErrorCode* value) {
    return MsgControlStopAck_ErrorCode_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .MsgsLauncherToAdmin.MsgControlStopAck.ErrorCode error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::MsgsLauncherToAdmin::MsgControlStopAck_ErrorCode error_code() const;
  inline void set_error_code(::MsgsLauncherToAdmin::MsgControlStopAck_ErrorCode value);
  
  // required .Common.MsgExercise exercise = 2;
  inline bool has_exercise() const;
  inline void clear_exercise();
  static const int kExerciseFieldNumber = 2;
  inline const ::Common::MsgExercise& exercise() const;
  inline ::Common::MsgExercise* mutable_exercise();
  
  // optional .Common.EnumSimulationState simulation_state = 3;
  inline bool has_simulation_state() const;
  inline void clear_simulation_state();
  static const int kSimulationStateFieldNumber = 3;
  inline Common::EnumSimulationState simulation_state() const;
  inline void set_simulation_state(Common::EnumSimulationState value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int error_code_;
  ::Common::MsgExercise* exercise_;
  int simulation_state_;
  friend void  protobuf_AddDesc_LauncherToAdmin_2eproto();
  friend void protobuf_AssignDesc_LauncherToAdmin_2eproto();
  friend void protobuf_ShutdownFile_LauncherToAdmin_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgControlStopAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgLauncherToAdmin_Content : public ::google::protobuf::Message {
 public:
  MsgLauncherToAdmin_Content();
  virtual ~MsgLauncherToAdmin_Content();
  
  MsgLauncherToAdmin_Content(const MsgLauncherToAdmin_Content& from);
  
  inline MsgLauncherToAdmin_Content& operator=(const MsgLauncherToAdmin_Content& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLauncherToAdmin_Content& default_instance();
  void Swap(MsgLauncherToAdmin_Content* other);
  
  // implements Message ----------------------------------------------
  
  MsgLauncherToAdmin_Content* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLauncherToAdmin_Content& from);
  void MergeFrom(const MsgLauncherToAdmin_Content& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .MsgsLauncherToAdmin.MsgConnectionAck connection_ack = 1;
  inline bool has_connection_ack() const;
  inline void clear_connection_ack();
  static const int kConnectionAckFieldNumber = 1;
  inline const ::MsgsLauncherToAdmin::MsgConnectionAck& connection_ack() const;
  inline ::MsgsLauncherToAdmin::MsgConnectionAck* mutable_connection_ack();
  
  // optional .MsgsLauncherToAdmin.MsgExercicesListResponse exercise_list_response = 2;
  inline bool has_exercise_list_response() const;
  inline void clear_exercise_list_response();
  static const int kExerciseListResponseFieldNumber = 2;
  inline const ::MsgsLauncherToAdmin::MsgExercicesListResponse& exercise_list_response() const;
  inline ::MsgsLauncherToAdmin::MsgExercicesListResponse* mutable_exercise_list_response();
  
  // optional .MsgsLauncherToAdmin.MsgControlStartAck control_start_ack = 3;
  inline bool has_control_start_ack() const;
  inline void clear_control_start_ack();
  static const int kControlStartAckFieldNumber = 3;
  inline const ::MsgsLauncherToAdmin::MsgControlStartAck& control_start_ack() const;
  inline ::MsgsLauncherToAdmin::MsgControlStartAck* mutable_control_start_ack();
  
  // optional .MsgsLauncherToAdmin.MsgControlStopAck control_stop_ack = 4;
  inline bool has_control_stop_ack() const;
  inline void clear_control_stop_ack();
  static const int kControlStopAckFieldNumber = 4;
  inline const ::MsgsLauncherToAdmin::MsgControlStopAck& control_stop_ack() const;
  inline ::MsgsLauncherToAdmin::MsgControlStopAck* mutable_control_stop_ack();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::MsgsLauncherToAdmin::MsgConnectionAck* connection_ack_;
  ::MsgsLauncherToAdmin::MsgExercicesListResponse* exercise_list_response_;
  ::MsgsLauncherToAdmin::MsgControlStartAck* control_start_ack_;
  ::MsgsLauncherToAdmin::MsgControlStopAck* control_stop_ack_;
  friend void  protobuf_AddDesc_LauncherToAdmin_2eproto();
  friend void protobuf_AssignDesc_LauncherToAdmin_2eproto();
  friend void protobuf_ShutdownFile_LauncherToAdmin_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLauncherToAdmin_Content* default_instance_;
};
// -------------------------------------------------------------------

class MsgLauncherToAdmin : public ::google::protobuf::Message {
 public:
  MsgLauncherToAdmin();
  virtual ~MsgLauncherToAdmin();
  
  MsgLauncherToAdmin(const MsgLauncherToAdmin& from);
  
  inline MsgLauncherToAdmin& operator=(const MsgLauncherToAdmin& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLauncherToAdmin& default_instance();
  void Swap(MsgLauncherToAdmin* other);
  
  // implements Message ----------------------------------------------
  
  MsgLauncherToAdmin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLauncherToAdmin& from);
  void MergeFrom(const MsgLauncherToAdmin& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef MsgLauncherToAdmin_Content Content;
  
  // accessors -------------------------------------------------------
  
  // optional int32 context = 1 [default = 0];
  inline bool has_context() const;
  inline void clear_context();
  static const int kContextFieldNumber = 1;
  inline ::google::protobuf::int32 context() const;
  inline void set_context(::google::protobuf::int32 value);
  
  // required .MsgsLauncherToAdmin.MsgLauncherToAdmin.Content message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::MsgsLauncherToAdmin::MsgLauncherToAdmin_Content& message() const;
  inline ::MsgsLauncherToAdmin::MsgLauncherToAdmin_Content* mutable_message();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 context_;
  ::MsgsLauncherToAdmin::MsgLauncherToAdmin_Content* message_;
  friend void  protobuf_AddDesc_LauncherToAdmin_2eproto();
  friend void protobuf_AssignDesc_LauncherToAdmin_2eproto();
  friend void protobuf_ShutdownFile_LauncherToAdmin_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLauncherToAdmin* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// MsgConnectionAck

// required .MsgsLauncherToAdmin.MsgConnectionAck.ErrorCode error_code = 1;
inline bool MsgConnectionAck::has_error_code() const {
  return _has_bit(0);
}
inline void MsgConnectionAck::clear_error_code() {
  error_code_ = 0;
  _clear_bit(0);
}
inline ::MsgsLauncherToAdmin::MsgConnectionAck_ErrorCode MsgConnectionAck::error_code() const {
  return static_cast< ::MsgsLauncherToAdmin::MsgConnectionAck_ErrorCode >(error_code_);
}
inline void MsgConnectionAck::set_error_code(::MsgsLauncherToAdmin::MsgConnectionAck_ErrorCode value) {
  GOOGLE_DCHECK(::MsgsLauncherToAdmin::MsgConnectionAck_ErrorCode_IsValid(value));
  _set_bit(0);
  error_code_ = value;
}

// optional int32 context = 2;
inline bool MsgConnectionAck::has_context() const {
  return _has_bit(1);
}
inline void MsgConnectionAck::clear_context() {
  context_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 MsgConnectionAck::context() const {
  return context_;
}
inline void MsgConnectionAck::set_context(::google::protobuf::int32 value) {
  _set_bit(1);
  context_ = value;
}

// required .Version.ProtocolVersion server_version = 3;
inline bool MsgConnectionAck::has_server_version() const {
  return _has_bit(2);
}
inline void MsgConnectionAck::clear_server_version() {
  if (server_version_ != NULL) server_version_->::Version::ProtocolVersion::Clear();
  _clear_bit(2);
}
inline const ::Version::ProtocolVersion& MsgConnectionAck::server_version() const {
  return server_version_ != NULL ? *server_version_ : *default_instance_->server_version_;
}
inline ::Version::ProtocolVersion* MsgConnectionAck::mutable_server_version() {
  _set_bit(2);
  if (server_version_ == NULL) server_version_ = new ::Version::ProtocolVersion;
  return server_version_;
}

// required .Common.MsgNetworkAddress dispatcher_address = 4;
inline bool MsgConnectionAck::has_dispatcher_address() const {
  return _has_bit(3);
}
inline void MsgConnectionAck::clear_dispatcher_address() {
  if (dispatcher_address_ != NULL) dispatcher_address_->::Common::MsgNetworkAddress::Clear();
  _clear_bit(3);
}
inline const ::Common::MsgNetworkAddress& MsgConnectionAck::dispatcher_address() const {
  return dispatcher_address_ != NULL ? *dispatcher_address_ : *default_instance_->dispatcher_address_;
}
inline ::Common::MsgNetworkAddress* MsgConnectionAck::mutable_dispatcher_address() {
  _set_bit(3);
  if (dispatcher_address_ == NULL) dispatcher_address_ = new ::Common::MsgNetworkAddress;
  return dispatcher_address_;
}

// -------------------------------------------------------------------

// MsgExercicesListResponse

// required .MsgsLauncherToAdmin.MsgExercicesListResponse.ErrorCode error_code = 1;
inline bool MsgExercicesListResponse::has_error_code() const {
  return _has_bit(0);
}
inline void MsgExercicesListResponse::clear_error_code() {
  error_code_ = 0;
  _clear_bit(0);
}
inline ::MsgsLauncherToAdmin::MsgExercicesListResponse_ErrorCode MsgExercicesListResponse::error_code() const {
  return static_cast< ::MsgsLauncherToAdmin::MsgExercicesListResponse_ErrorCode >(error_code_);
}
inline void MsgExercicesListResponse::set_error_code(::MsgsLauncherToAdmin::MsgExercicesListResponse_ErrorCode value) {
  GOOGLE_DCHECK(::MsgsLauncherToAdmin::MsgExercicesListResponse_ErrorCode_IsValid(value));
  _set_bit(0);
  error_code_ = value;
}

// repeated .Common.MsgExercise exercise = 2;
inline int MsgExercicesListResponse::exercise_size() const {
  return exercise_.size();
}
inline void MsgExercicesListResponse::clear_exercise() {
  exercise_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::MsgExercise >&
MsgExercicesListResponse::exercise() const {
  return exercise_;
}
inline ::google::protobuf::RepeatedPtrField< ::Common::MsgExercise >*
MsgExercicesListResponse::mutable_exercise() {
  return &exercise_;
}
inline const ::Common::MsgExercise& MsgExercicesListResponse::exercise(int index) const {
  return exercise_.Get(index);
}
inline ::Common::MsgExercise* MsgExercicesListResponse::mutable_exercise(int index) {
  return exercise_.Mutable(index);
}
inline ::Common::MsgExercise* MsgExercicesListResponse::add_exercise() {
  return exercise_.Add();
}

// -------------------------------------------------------------------

// MsgControlStartAck

// required .MsgsLauncherToAdmin.MsgControlStartAck.ErrorCode error_code = 1;
inline bool MsgControlStartAck::has_error_code() const {
  return _has_bit(0);
}
inline void MsgControlStartAck::clear_error_code() {
  error_code_ = 0;
  _clear_bit(0);
}
inline ::MsgsLauncherToAdmin::MsgControlStartAck_ErrorCode MsgControlStartAck::error_code() const {
  return static_cast< ::MsgsLauncherToAdmin::MsgControlStartAck_ErrorCode >(error_code_);
}
inline void MsgControlStartAck::set_error_code(::MsgsLauncherToAdmin::MsgControlStartAck_ErrorCode value) {
  GOOGLE_DCHECK(::MsgsLauncherToAdmin::MsgControlStartAck_ErrorCode_IsValid(value));
  _set_bit(0);
  error_code_ = value;
}

// required .Common.MsgExercise exercise = 2;
inline bool MsgControlStartAck::has_exercise() const {
  return _has_bit(1);
}
inline void MsgControlStartAck::clear_exercise() {
  if (exercise_ != NULL) exercise_->::Common::MsgExercise::Clear();
  _clear_bit(1);
}
inline const ::Common::MsgExercise& MsgControlStartAck::exercise() const {
  return exercise_ != NULL ? *exercise_ : *default_instance_->exercise_;
}
inline ::Common::MsgExercise* MsgControlStartAck::mutable_exercise() {
  _set_bit(1);
  if (exercise_ == NULL) exercise_ = new ::Common::MsgExercise;
  return exercise_;
}

// -------------------------------------------------------------------

// MsgControlStopAck

// required .MsgsLauncherToAdmin.MsgControlStopAck.ErrorCode error_code = 1;
inline bool MsgControlStopAck::has_error_code() const {
  return _has_bit(0);
}
inline void MsgControlStopAck::clear_error_code() {
  error_code_ = 0;
  _clear_bit(0);
}
inline ::MsgsLauncherToAdmin::MsgControlStopAck_ErrorCode MsgControlStopAck::error_code() const {
  return static_cast< ::MsgsLauncherToAdmin::MsgControlStopAck_ErrorCode >(error_code_);
}
inline void MsgControlStopAck::set_error_code(::MsgsLauncherToAdmin::MsgControlStopAck_ErrorCode value) {
  GOOGLE_DCHECK(::MsgsLauncherToAdmin::MsgControlStopAck_ErrorCode_IsValid(value));
  _set_bit(0);
  error_code_ = value;
}

// required .Common.MsgExercise exercise = 2;
inline bool MsgControlStopAck::has_exercise() const {
  return _has_bit(1);
}
inline void MsgControlStopAck::clear_exercise() {
  if (exercise_ != NULL) exercise_->::Common::MsgExercise::Clear();
  _clear_bit(1);
}
inline const ::Common::MsgExercise& MsgControlStopAck::exercise() const {
  return exercise_ != NULL ? *exercise_ : *default_instance_->exercise_;
}
inline ::Common::MsgExercise* MsgControlStopAck::mutable_exercise() {
  _set_bit(1);
  if (exercise_ == NULL) exercise_ = new ::Common::MsgExercise;
  return exercise_;
}

// optional .Common.EnumSimulationState simulation_state = 3;
inline bool MsgControlStopAck::has_simulation_state() const {
  return _has_bit(2);
}
inline void MsgControlStopAck::clear_simulation_state() {
  simulation_state_ = 0;
  _clear_bit(2);
}
inline Common::EnumSimulationState MsgControlStopAck::simulation_state() const {
  return static_cast< Common::EnumSimulationState >(simulation_state_);
}
inline void MsgControlStopAck::set_simulation_state(Common::EnumSimulationState value) {
  GOOGLE_DCHECK(Common::EnumSimulationState_IsValid(value));
  _set_bit(2);
  simulation_state_ = value;
}

// -------------------------------------------------------------------

// MsgLauncherToAdmin_Content

// optional .MsgsLauncherToAdmin.MsgConnectionAck connection_ack = 1;
inline bool MsgLauncherToAdmin_Content::has_connection_ack() const {
  return _has_bit(0);
}
inline void MsgLauncherToAdmin_Content::clear_connection_ack() {
  if (connection_ack_ != NULL) connection_ack_->::MsgsLauncherToAdmin::MsgConnectionAck::Clear();
  _clear_bit(0);
}
inline const ::MsgsLauncherToAdmin::MsgConnectionAck& MsgLauncherToAdmin_Content::connection_ack() const {
  return connection_ack_ != NULL ? *connection_ack_ : *default_instance_->connection_ack_;
}
inline ::MsgsLauncherToAdmin::MsgConnectionAck* MsgLauncherToAdmin_Content::mutable_connection_ack() {
  _set_bit(0);
  if (connection_ack_ == NULL) connection_ack_ = new ::MsgsLauncherToAdmin::MsgConnectionAck;
  return connection_ack_;
}

// optional .MsgsLauncherToAdmin.MsgExercicesListResponse exercise_list_response = 2;
inline bool MsgLauncherToAdmin_Content::has_exercise_list_response() const {
  return _has_bit(1);
}
inline void MsgLauncherToAdmin_Content::clear_exercise_list_response() {
  if (exercise_list_response_ != NULL) exercise_list_response_->::MsgsLauncherToAdmin::MsgExercicesListResponse::Clear();
  _clear_bit(1);
}
inline const ::MsgsLauncherToAdmin::MsgExercicesListResponse& MsgLauncherToAdmin_Content::exercise_list_response() const {
  return exercise_list_response_ != NULL ? *exercise_list_response_ : *default_instance_->exercise_list_response_;
}
inline ::MsgsLauncherToAdmin::MsgExercicesListResponse* MsgLauncherToAdmin_Content::mutable_exercise_list_response() {
  _set_bit(1);
  if (exercise_list_response_ == NULL) exercise_list_response_ = new ::MsgsLauncherToAdmin::MsgExercicesListResponse;
  return exercise_list_response_;
}

// optional .MsgsLauncherToAdmin.MsgControlStartAck control_start_ack = 3;
inline bool MsgLauncherToAdmin_Content::has_control_start_ack() const {
  return _has_bit(2);
}
inline void MsgLauncherToAdmin_Content::clear_control_start_ack() {
  if (control_start_ack_ != NULL) control_start_ack_->::MsgsLauncherToAdmin::MsgControlStartAck::Clear();
  _clear_bit(2);
}
inline const ::MsgsLauncherToAdmin::MsgControlStartAck& MsgLauncherToAdmin_Content::control_start_ack() const {
  return control_start_ack_ != NULL ? *control_start_ack_ : *default_instance_->control_start_ack_;
}
inline ::MsgsLauncherToAdmin::MsgControlStartAck* MsgLauncherToAdmin_Content::mutable_control_start_ack() {
  _set_bit(2);
  if (control_start_ack_ == NULL) control_start_ack_ = new ::MsgsLauncherToAdmin::MsgControlStartAck;
  return control_start_ack_;
}

// optional .MsgsLauncherToAdmin.MsgControlStopAck control_stop_ack = 4;
inline bool MsgLauncherToAdmin_Content::has_control_stop_ack() const {
  return _has_bit(3);
}
inline void MsgLauncherToAdmin_Content::clear_control_stop_ack() {
  if (control_stop_ack_ != NULL) control_stop_ack_->::MsgsLauncherToAdmin::MsgControlStopAck::Clear();
  _clear_bit(3);
}
inline const ::MsgsLauncherToAdmin::MsgControlStopAck& MsgLauncherToAdmin_Content::control_stop_ack() const {
  return control_stop_ack_ != NULL ? *control_stop_ack_ : *default_instance_->control_stop_ack_;
}
inline ::MsgsLauncherToAdmin::MsgControlStopAck* MsgLauncherToAdmin_Content::mutable_control_stop_ack() {
  _set_bit(3);
  if (control_stop_ack_ == NULL) control_stop_ack_ = new ::MsgsLauncherToAdmin::MsgControlStopAck;
  return control_stop_ack_;
}

// -------------------------------------------------------------------

// MsgLauncherToAdmin

// optional int32 context = 1 [default = 0];
inline bool MsgLauncherToAdmin::has_context() const {
  return _has_bit(0);
}
inline void MsgLauncherToAdmin::clear_context() {
  context_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 MsgLauncherToAdmin::context() const {
  return context_;
}
inline void MsgLauncherToAdmin::set_context(::google::protobuf::int32 value) {
  _set_bit(0);
  context_ = value;
}

// required .MsgsLauncherToAdmin.MsgLauncherToAdmin.Content message = 2;
inline bool MsgLauncherToAdmin::has_message() const {
  return _has_bit(1);
}
inline void MsgLauncherToAdmin::clear_message() {
  if (message_ != NULL) message_->::MsgsLauncherToAdmin::MsgLauncherToAdmin_Content::Clear();
  _clear_bit(1);
}
inline const ::MsgsLauncherToAdmin::MsgLauncherToAdmin_Content& MsgLauncherToAdmin::message() const {
  return message_ != NULL ? *message_ : *default_instance_->message_;
}
inline ::MsgsLauncherToAdmin::MsgLauncherToAdmin_Content* MsgLauncherToAdmin::mutable_message() {
  _set_bit(1);
  if (message_ == NULL) message_ = new ::MsgsLauncherToAdmin::MsgLauncherToAdmin_Content;
  return message_;
}


}  // namespace MsgsLauncherToAdmin

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgsLauncherToAdmin::MsgConnectionAck_ErrorCode>() {
  return ::MsgsLauncherToAdmin::MsgConnectionAck_ErrorCode_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgsLauncherToAdmin::MsgExercicesListResponse_ErrorCode>() {
  return ::MsgsLauncherToAdmin::MsgExercicesListResponse_ErrorCode_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgsLauncherToAdmin::MsgControlStartAck_ErrorCode>() {
  return ::MsgsLauncherToAdmin::MsgControlStartAck_ErrorCode_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgsLauncherToAdmin::MsgControlStopAck_ErrorCode>() {
  return ::MsgsLauncherToAdmin::MsgControlStopAck_ErrorCode_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

#endif  // PROTOBUF_LauncherToAdmin_2eproto__INCLUDED
