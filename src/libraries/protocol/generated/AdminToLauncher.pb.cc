// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "AdminToLauncher.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>

namespace MsgsAdminToLauncher {

namespace {

const ::google::protobuf::Descriptor* MsgConnectionRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgConnectionRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgExercicesListRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgExercicesListRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgControlStart_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgControlStart_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgControlStop_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgControlStop_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgAdminToLauncher_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgAdminToLauncher_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgAdminToLauncher_Content_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgAdminToLauncher_Content_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_AdminToLauncher_2eproto() {
  protobuf_AddDesc_AdminToLauncher_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "AdminToLauncher.proto");
  GOOGLE_CHECK(file != NULL);
  MsgConnectionRequest_descriptor_ = file->message_type(0);
  static const int MsgConnectionRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgConnectionRequest, client_version_),
  };
  MsgConnectionRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgConnectionRequest_descriptor_,
      MsgConnectionRequest::default_instance_,
      MsgConnectionRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgConnectionRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgConnectionRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgConnectionRequest));
  MsgExercicesListRequest_descriptor_ = file->message_type(1);
  static const int MsgExercicesListRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgExercicesListRequest, context_),
  };
  MsgExercicesListRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgExercicesListRequest_descriptor_,
      MsgExercicesListRequest::default_instance_,
      MsgExercicesListRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgExercicesListRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgExercicesListRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgExercicesListRequest));
  MsgControlStart_descriptor_ = file->message_type(2);
  static const int MsgControlStart_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlStart, exercise_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlStart, with_3a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlStart, with_sic_),
  };
  MsgControlStart_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgControlStart_descriptor_,
      MsgControlStart::default_instance_,
      MsgControlStart_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlStart, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlStart, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgControlStart));
  MsgControlStop_descriptor_ = file->message_type(3);
  static const int MsgControlStop_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlStop, exercise_),
  };
  MsgControlStop_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgControlStop_descriptor_,
      MsgControlStop::default_instance_,
      MsgControlStop_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlStop, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlStop, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgControlStop));
  MsgAdminToLauncher_descriptor_ = file->message_type(4);
  static const int MsgAdminToLauncher_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAdminToLauncher, context_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAdminToLauncher, message_),
  };
  MsgAdminToLauncher_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgAdminToLauncher_descriptor_,
      MsgAdminToLauncher::default_instance_,
      MsgAdminToLauncher_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAdminToLauncher, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAdminToLauncher, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgAdminToLauncher));
  MsgAdminToLauncher_Content_descriptor_ = MsgAdminToLauncher_descriptor_->nested_type(0);
  static const int MsgAdminToLauncher_Content_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAdminToLauncher_Content, connection_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAdminToLauncher_Content, exercise_list_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAdminToLauncher_Content, control_start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAdminToLauncher_Content, control_stop_),
  };
  MsgAdminToLauncher_Content_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgAdminToLauncher_Content_descriptor_,
      MsgAdminToLauncher_Content::default_instance_,
      MsgAdminToLauncher_Content_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAdminToLauncher_Content, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAdminToLauncher_Content, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgAdminToLauncher_Content));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_AdminToLauncher_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgConnectionRequest_descriptor_, &MsgConnectionRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgExercicesListRequest_descriptor_, &MsgExercicesListRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgControlStart_descriptor_, &MsgControlStart::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgControlStop_descriptor_, &MsgControlStop::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgAdminToLauncher_descriptor_, &MsgAdminToLauncher::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgAdminToLauncher_Content_descriptor_, &MsgAdminToLauncher_Content::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_AdminToLauncher_2eproto() {
  delete MsgConnectionRequest::default_instance_;
  delete MsgConnectionRequest_reflection_;
  delete MsgExercicesListRequest::default_instance_;
  delete MsgExercicesListRequest_reflection_;
  delete MsgControlStart::default_instance_;
  delete MsgControlStart_reflection_;
  delete MsgControlStop::default_instance_;
  delete MsgControlStop_reflection_;
  delete MsgAdminToLauncher::default_instance_;
  delete MsgAdminToLauncher_reflection_;
  delete MsgAdminToLauncher_Content::default_instance_;
  delete MsgAdminToLauncher_Content_reflection_;
}

void protobuf_AddDesc_AdminToLauncher_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Common::protobuf_AddDesc_Common_2eproto();
  ::Version::protobuf_AddDesc_Version_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025AdminToLauncher.proto\022\023MsgsAdminToLaun"
    "cher\032\014Common.proto\032\rVersion.proto\"H\n\024Msg"
    "ConnectionRequest\0220\n\016client_version\030\001 \002("
    "\0132\030.Version.ProtocolVersion\"-\n\027MsgExerci"
    "cesListRequest\022\022\n\007context\030\001 \001(\005:\0010\"h\n\017Ms"
    "gControlStart\022%\n\010exercise\030\001 \002(\0132\023.Common"
    ".MsgExercise\022\025\n\007with_3A\030\002 \001(\010:\004true\022\027\n\010w"
    "ith_SIC\030\003 \001(\010:\005false\"7\n\016MsgControlStop\022%"
    "\n\010exercise\030\001 \002(\0132\023.Common.MsgExercise\"\202\003"
    "\n\022MsgAdminToLauncher\022\022\n\007context\030\001 \001(\005:\0010"
    "\022@\n\007message\030\002 \002(\0132/.MsgsAdminToLauncher."
    "MsgAdminToLauncher.Content\032\225\002\n\007Content\022E"
    "\n\022connection_request\030\001 \001(\0132).MsgsAdminTo"
    "Launcher.MsgConnectionRequest\022K\n\025exercis"
    "e_list_request\030\002 \001(\0132,.MsgsAdminToLaunch"
    "er.MsgExercicesListRequest\022;\n\rcontrol_st"
    "art\030\003 \001(\0132$.MsgsAdminToLauncher.MsgContr"
    "olStart\0229\n\014control_stop\030\004 \001(\0132#.MsgsAdmi"
    "nToLauncher.MsgControlStop", 746);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AdminToLauncher.proto", &protobuf_RegisterTypes);
  MsgConnectionRequest::default_instance_ = new MsgConnectionRequest();
  MsgExercicesListRequest::default_instance_ = new MsgExercicesListRequest();
  MsgControlStart::default_instance_ = new MsgControlStart();
  MsgControlStop::default_instance_ = new MsgControlStop();
  MsgAdminToLauncher::default_instance_ = new MsgAdminToLauncher();
  MsgAdminToLauncher_Content::default_instance_ = new MsgAdminToLauncher_Content();
  MsgConnectionRequest::default_instance_->InitAsDefaultInstance();
  MsgExercicesListRequest::default_instance_->InitAsDefaultInstance();
  MsgControlStart::default_instance_->InitAsDefaultInstance();
  MsgControlStop::default_instance_->InitAsDefaultInstance();
  MsgAdminToLauncher::default_instance_->InitAsDefaultInstance();
  MsgAdminToLauncher_Content::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_AdminToLauncher_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_AdminToLauncher_2eproto {
  StaticDescriptorInitializer_AdminToLauncher_2eproto() {
    protobuf_AddDesc_AdminToLauncher_2eproto();
  }
} static_descriptor_initializer_AdminToLauncher_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int MsgConnectionRequest::kClientVersionFieldNumber;
#endif  // !_MSC_VER

MsgConnectionRequest::MsgConnectionRequest() {
  SharedCtor();
}

void MsgConnectionRequest::InitAsDefaultInstance() {
  client_version_ = const_cast< ::Version::ProtocolVersion*>(&::Version::ProtocolVersion::default_instance());
}

MsgConnectionRequest::MsgConnectionRequest(const MsgConnectionRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgConnectionRequest::SharedCtor() {
  _cached_size_ = 0;
  client_version_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgConnectionRequest::~MsgConnectionRequest() {
  SharedDtor();
}

void MsgConnectionRequest::SharedDtor() {
  if (this != default_instance_) {
    delete client_version_;
  }
}

const ::google::protobuf::Descriptor* MsgConnectionRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgConnectionRequest_descriptor_;
}

const MsgConnectionRequest& MsgConnectionRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdminToLauncher_2eproto();  return *default_instance_;
}

MsgConnectionRequest* MsgConnectionRequest::default_instance_ = NULL;

MsgConnectionRequest* MsgConnectionRequest::New() const {
  return new MsgConnectionRequest;
}

void MsgConnectionRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (client_version_ != NULL) client_version_->::Version::ProtocolVersion::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgConnectionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Version.ProtocolVersion client_version = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_client_version()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgConnectionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgConnectionRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Version.ProtocolVersion client_version = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->client_version(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgConnectionRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Version.ProtocolVersion client_version = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->client_version(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgConnectionRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Version.ProtocolVersion client_version = 1;
    if (has_client_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->client_version());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgConnectionRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgConnectionRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgConnectionRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgConnectionRequest::MergeFrom(const MsgConnectionRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_client_version()->::Version::ProtocolVersion::MergeFrom(from.client_version());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgConnectionRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgConnectionRequest::CopyFrom(const MsgConnectionRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgConnectionRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_client_version()) {
    if (!this->client_version().IsInitialized()) return false;
  }
  return true;
}

void MsgConnectionRequest::Swap(MsgConnectionRequest* other) {
  if (other != this) {
    std::swap(client_version_, other->client_version_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgConnectionRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgConnectionRequest_descriptor_;
  metadata.reflection = MsgConnectionRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgExercicesListRequest::kContextFieldNumber;
#endif  // !_MSC_VER

MsgExercicesListRequest::MsgExercicesListRequest() {
  SharedCtor();
}

void MsgExercicesListRequest::InitAsDefaultInstance() {
}

MsgExercicesListRequest::MsgExercicesListRequest(const MsgExercicesListRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgExercicesListRequest::SharedCtor() {
  _cached_size_ = 0;
  context_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgExercicesListRequest::~MsgExercicesListRequest() {
  SharedDtor();
}

void MsgExercicesListRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgExercicesListRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgExercicesListRequest_descriptor_;
}

const MsgExercicesListRequest& MsgExercicesListRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdminToLauncher_2eproto();  return *default_instance_;
}

MsgExercicesListRequest* MsgExercicesListRequest::default_instance_ = NULL;

MsgExercicesListRequest* MsgExercicesListRequest::New() const {
  return new MsgExercicesListRequest;
}

void MsgExercicesListRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    context_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgExercicesListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 context = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &context_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgExercicesListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgExercicesListRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 context = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->context(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgExercicesListRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 context = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->context(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgExercicesListRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 context = 1 [default = 0];
    if (has_context()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->context());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgExercicesListRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgExercicesListRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgExercicesListRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgExercicesListRequest::MergeFrom(const MsgExercicesListRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_context(from.context());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgExercicesListRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgExercicesListRequest::CopyFrom(const MsgExercicesListRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgExercicesListRequest::IsInitialized() const {
  
  return true;
}

void MsgExercicesListRequest::Swap(MsgExercicesListRequest* other) {
  if (other != this) {
    std::swap(context_, other->context_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgExercicesListRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgExercicesListRequest_descriptor_;
  metadata.reflection = MsgExercicesListRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgControlStart::kExerciseFieldNumber;
const int MsgControlStart::kWith3AFieldNumber;
const int MsgControlStart::kWithSICFieldNumber;
#endif  // !_MSC_VER

MsgControlStart::MsgControlStart() {
  SharedCtor();
}

void MsgControlStart::InitAsDefaultInstance() {
  exercise_ = const_cast< ::Common::MsgExercise*>(&::Common::MsgExercise::default_instance());
}

MsgControlStart::MsgControlStart(const MsgControlStart& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgControlStart::SharedCtor() {
  _cached_size_ = 0;
  exercise_ = NULL;
  with_3a_ = true;
  with_sic_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgControlStart::~MsgControlStart() {
  SharedDtor();
}

void MsgControlStart::SharedDtor() {
  if (this != default_instance_) {
    delete exercise_;
  }
}

const ::google::protobuf::Descriptor* MsgControlStart::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlStart_descriptor_;
}

const MsgControlStart& MsgControlStart::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdminToLauncher_2eproto();  return *default_instance_;
}

MsgControlStart* MsgControlStart::default_instance_ = NULL;

MsgControlStart* MsgControlStart::New() const {
  return new MsgControlStart;
}

void MsgControlStart::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (exercise_ != NULL) exercise_->::Common::MsgExercise::Clear();
    }
    with_3a_ = true;
    with_sic_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgControlStart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MsgExercise exercise = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_exercise()));
        if (input->ExpectTag(16)) goto parse_with_3A;
        break;
      }
      
      // optional bool with_3A = 2 [default = true];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_with_3A:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &with_3a_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_with_SIC;
        break;
      }
      
      // optional bool with_SIC = 3 [default = false];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_with_SIC:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &with_sic_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgControlStart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgControlStart::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MsgExercise exercise = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->exercise(), output);
  }
  
  // optional bool with_3A = 2 [default = true];
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->with_3a(), output);
  }
  
  // optional bool with_SIC = 3 [default = false];
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->with_sic(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgControlStart::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MsgExercise exercise = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->exercise(), target);
  }
  
  // optional bool with_3A = 2 [default = true];
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->with_3a(), target);
  }
  
  // optional bool with_SIC = 3 [default = false];
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->with_sic(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgControlStart::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MsgExercise exercise = 1;
    if (has_exercise()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->exercise());
    }
    
    // optional bool with_3A = 2 [default = true];
    if (has_with_3a()) {
      total_size += 1 + 1;
    }
    
    // optional bool with_SIC = 3 [default = false];
    if (has_with_sic()) {
      total_size += 1 + 1;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgControlStart::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgControlStart* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgControlStart*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgControlStart::MergeFrom(const MsgControlStart& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_exercise()->::Common::MsgExercise::MergeFrom(from.exercise());
    }
    if (from._has_bit(1)) {
      set_with_3a(from.with_3a());
    }
    if (from._has_bit(2)) {
      set_with_sic(from.with_sic());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgControlStart::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgControlStart::CopyFrom(const MsgControlStart& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgControlStart::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_exercise()) {
    if (!this->exercise().IsInitialized()) return false;
  }
  return true;
}

void MsgControlStart::Swap(MsgControlStart* other) {
  if (other != this) {
    std::swap(exercise_, other->exercise_);
    std::swap(with_3a_, other->with_3a_);
    std::swap(with_sic_, other->with_sic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgControlStart::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgControlStart_descriptor_;
  metadata.reflection = MsgControlStart_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgControlStop::kExerciseFieldNumber;
#endif  // !_MSC_VER

MsgControlStop::MsgControlStop() {
  SharedCtor();
}

void MsgControlStop::InitAsDefaultInstance() {
  exercise_ = const_cast< ::Common::MsgExercise*>(&::Common::MsgExercise::default_instance());
}

MsgControlStop::MsgControlStop(const MsgControlStop& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgControlStop::SharedCtor() {
  _cached_size_ = 0;
  exercise_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgControlStop::~MsgControlStop() {
  SharedDtor();
}

void MsgControlStop::SharedDtor() {
  if (this != default_instance_) {
    delete exercise_;
  }
}

const ::google::protobuf::Descriptor* MsgControlStop::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlStop_descriptor_;
}

const MsgControlStop& MsgControlStop::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdminToLauncher_2eproto();  return *default_instance_;
}

MsgControlStop* MsgControlStop::default_instance_ = NULL;

MsgControlStop* MsgControlStop::New() const {
  return new MsgControlStop;
}

void MsgControlStop::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (exercise_ != NULL) exercise_->::Common::MsgExercise::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgControlStop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MsgExercise exercise = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_exercise()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgControlStop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgControlStop::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MsgExercise exercise = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->exercise(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgControlStop::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MsgExercise exercise = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->exercise(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgControlStop::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MsgExercise exercise = 1;
    if (has_exercise()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->exercise());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgControlStop::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgControlStop* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgControlStop*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgControlStop::MergeFrom(const MsgControlStop& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_exercise()->::Common::MsgExercise::MergeFrom(from.exercise());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgControlStop::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgControlStop::CopyFrom(const MsgControlStop& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgControlStop::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_exercise()) {
    if (!this->exercise().IsInitialized()) return false;
  }
  return true;
}

void MsgControlStop::Swap(MsgControlStop* other) {
  if (other != this) {
    std::swap(exercise_, other->exercise_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgControlStop::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgControlStop_descriptor_;
  metadata.reflection = MsgControlStop_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgAdminToLauncher_Content::kConnectionRequestFieldNumber;
const int MsgAdminToLauncher_Content::kExerciseListRequestFieldNumber;
const int MsgAdminToLauncher_Content::kControlStartFieldNumber;
const int MsgAdminToLauncher_Content::kControlStopFieldNumber;
#endif  // !_MSC_VER

MsgAdminToLauncher_Content::MsgAdminToLauncher_Content() {
  SharedCtor();
}

void MsgAdminToLauncher_Content::InitAsDefaultInstance() {
  connection_request_ = const_cast< ::MsgsAdminToLauncher::MsgConnectionRequest*>(&::MsgsAdminToLauncher::MsgConnectionRequest::default_instance());
  exercise_list_request_ = const_cast< ::MsgsAdminToLauncher::MsgExercicesListRequest*>(&::MsgsAdminToLauncher::MsgExercicesListRequest::default_instance());
  control_start_ = const_cast< ::MsgsAdminToLauncher::MsgControlStart*>(&::MsgsAdminToLauncher::MsgControlStart::default_instance());
  control_stop_ = const_cast< ::MsgsAdminToLauncher::MsgControlStop*>(&::MsgsAdminToLauncher::MsgControlStop::default_instance());
}

MsgAdminToLauncher_Content::MsgAdminToLauncher_Content(const MsgAdminToLauncher_Content& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgAdminToLauncher_Content::SharedCtor() {
  _cached_size_ = 0;
  connection_request_ = NULL;
  exercise_list_request_ = NULL;
  control_start_ = NULL;
  control_stop_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgAdminToLauncher_Content::~MsgAdminToLauncher_Content() {
  SharedDtor();
}

void MsgAdminToLauncher_Content::SharedDtor() {
  if (this != default_instance_) {
    delete connection_request_;
    delete exercise_list_request_;
    delete control_start_;
    delete control_stop_;
  }
}

const ::google::protobuf::Descriptor* MsgAdminToLauncher_Content::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgAdminToLauncher_Content_descriptor_;
}

const MsgAdminToLauncher_Content& MsgAdminToLauncher_Content::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdminToLauncher_2eproto();  return *default_instance_;
}

MsgAdminToLauncher_Content* MsgAdminToLauncher_Content::default_instance_ = NULL;

MsgAdminToLauncher_Content* MsgAdminToLauncher_Content::New() const {
  return new MsgAdminToLauncher_Content;
}

void MsgAdminToLauncher_Content::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (connection_request_ != NULL) connection_request_->::MsgsAdminToLauncher::MsgConnectionRequest::Clear();
    }
    if (_has_bit(1)) {
      if (exercise_list_request_ != NULL) exercise_list_request_->::MsgsAdminToLauncher::MsgExercicesListRequest::Clear();
    }
    if (_has_bit(2)) {
      if (control_start_ != NULL) control_start_->::MsgsAdminToLauncher::MsgControlStart::Clear();
    }
    if (_has_bit(3)) {
      if (control_stop_ != NULL) control_stop_->::MsgsAdminToLauncher::MsgControlStop::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgAdminToLauncher_Content::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgsAdminToLauncher.MsgConnectionRequest connection_request = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_connection_request()));
        if (input->ExpectTag(18)) goto parse_exercise_list_request;
        break;
      }
      
      // optional .MsgsAdminToLauncher.MsgExercicesListRequest exercise_list_request = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_exercise_list_request:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_exercise_list_request()));
        if (input->ExpectTag(26)) goto parse_control_start;
        break;
      }
      
      // optional .MsgsAdminToLauncher.MsgControlStart control_start = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_control_start:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_start()));
        if (input->ExpectTag(34)) goto parse_control_stop;
        break;
      }
      
      // optional .MsgsAdminToLauncher.MsgControlStop control_stop = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_control_stop:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_stop()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgAdminToLauncher_Content::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgAdminToLauncher_Content::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .MsgsAdminToLauncher.MsgConnectionRequest connection_request = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->connection_request(), output);
  }
  
  // optional .MsgsAdminToLauncher.MsgExercicesListRequest exercise_list_request = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->exercise_list_request(), output);
  }
  
  // optional .MsgsAdminToLauncher.MsgControlStart control_start = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->control_start(), output);
  }
  
  // optional .MsgsAdminToLauncher.MsgControlStop control_stop = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      4, this->control_stop(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgAdminToLauncher_Content::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .MsgsAdminToLauncher.MsgConnectionRequest connection_request = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->connection_request(), target);
  }
  
  // optional .MsgsAdminToLauncher.MsgExercicesListRequest exercise_list_request = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->exercise_list_request(), target);
  }
  
  // optional .MsgsAdminToLauncher.MsgControlStart control_start = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->control_start(), target);
  }
  
  // optional .MsgsAdminToLauncher.MsgControlStop control_stop = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->control_stop(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgAdminToLauncher_Content::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgsAdminToLauncher.MsgConnectionRequest connection_request = 1;
    if (has_connection_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->connection_request());
    }
    
    // optional .MsgsAdminToLauncher.MsgExercicesListRequest exercise_list_request = 2;
    if (has_exercise_list_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->exercise_list_request());
    }
    
    // optional .MsgsAdminToLauncher.MsgControlStart control_start = 3;
    if (has_control_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_start());
    }
    
    // optional .MsgsAdminToLauncher.MsgControlStop control_stop = 4;
    if (has_control_stop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_stop());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgAdminToLauncher_Content::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgAdminToLauncher_Content* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgAdminToLauncher_Content*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgAdminToLauncher_Content::MergeFrom(const MsgAdminToLauncher_Content& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_connection_request()->::MsgsAdminToLauncher::MsgConnectionRequest::MergeFrom(from.connection_request());
    }
    if (from._has_bit(1)) {
      mutable_exercise_list_request()->::MsgsAdminToLauncher::MsgExercicesListRequest::MergeFrom(from.exercise_list_request());
    }
    if (from._has_bit(2)) {
      mutable_control_start()->::MsgsAdminToLauncher::MsgControlStart::MergeFrom(from.control_start());
    }
    if (from._has_bit(3)) {
      mutable_control_stop()->::MsgsAdminToLauncher::MsgControlStop::MergeFrom(from.control_stop());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgAdminToLauncher_Content::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgAdminToLauncher_Content::CopyFrom(const MsgAdminToLauncher_Content& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgAdminToLauncher_Content::IsInitialized() const {
  
  if (has_connection_request()) {
    if (!this->connection_request().IsInitialized()) return false;
  }
  if (has_control_start()) {
    if (!this->control_start().IsInitialized()) return false;
  }
  if (has_control_stop()) {
    if (!this->control_stop().IsInitialized()) return false;
  }
  return true;
}

void MsgAdminToLauncher_Content::Swap(MsgAdminToLauncher_Content* other) {
  if (other != this) {
    std::swap(connection_request_, other->connection_request_);
    std::swap(exercise_list_request_, other->exercise_list_request_);
    std::swap(control_start_, other->control_start_);
    std::swap(control_stop_, other->control_stop_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgAdminToLauncher_Content::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgAdminToLauncher_Content_descriptor_;
  metadata.reflection = MsgAdminToLauncher_Content_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MsgAdminToLauncher::kContextFieldNumber;
const int MsgAdminToLauncher::kMessageFieldNumber;
#endif  // !_MSC_VER

MsgAdminToLauncher::MsgAdminToLauncher() {
  SharedCtor();
}

void MsgAdminToLauncher::InitAsDefaultInstance() {
  message_ = const_cast< ::MsgsAdminToLauncher::MsgAdminToLauncher_Content*>(&::MsgsAdminToLauncher::MsgAdminToLauncher_Content::default_instance());
}

MsgAdminToLauncher::MsgAdminToLauncher(const MsgAdminToLauncher& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgAdminToLauncher::SharedCtor() {
  _cached_size_ = 0;
  context_ = 0;
  message_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgAdminToLauncher::~MsgAdminToLauncher() {
  SharedDtor();
}

void MsgAdminToLauncher::SharedDtor() {
  if (this != default_instance_) {
    delete message_;
  }
}

const ::google::protobuf::Descriptor* MsgAdminToLauncher::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgAdminToLauncher_descriptor_;
}

const MsgAdminToLauncher& MsgAdminToLauncher::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdminToLauncher_2eproto();  return *default_instance_;
}

MsgAdminToLauncher* MsgAdminToLauncher::default_instance_ = NULL;

MsgAdminToLauncher* MsgAdminToLauncher::New() const {
  return new MsgAdminToLauncher;
}

void MsgAdminToLauncher::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    context_ = 0;
    if (_has_bit(1)) {
      if (message_ != NULL) message_->::MsgsAdminToLauncher::MsgAdminToLauncher_Content::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgAdminToLauncher::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 context = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &context_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }
      
      // required .MsgsAdminToLauncher.MsgAdminToLauncher.Content message = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_message:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_message()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgAdminToLauncher::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgAdminToLauncher::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 context = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->context(), output);
  }
  
  // required .MsgsAdminToLauncher.MsgAdminToLauncher.Content message = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->message(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgAdminToLauncher::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 context = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->context(), target);
  }
  
  // required .MsgsAdminToLauncher.MsgAdminToLauncher.Content message = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->message(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgAdminToLauncher::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 context = 1 [default = 0];
    if (has_context()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->context());
    }
    
    // required .MsgsAdminToLauncher.MsgAdminToLauncher.Content message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->message());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgAdminToLauncher::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgAdminToLauncher* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgAdminToLauncher*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgAdminToLauncher::MergeFrom(const MsgAdminToLauncher& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_context(from.context());
    }
    if (from._has_bit(1)) {
      mutable_message()->::MsgsAdminToLauncher::MsgAdminToLauncher_Content::MergeFrom(from.message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgAdminToLauncher::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgAdminToLauncher::CopyFrom(const MsgAdminToLauncher& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgAdminToLauncher::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  
  if (has_message()) {
    if (!this->message().IsInitialized()) return false;
  }
  return true;
}

void MsgAdminToLauncher::Swap(MsgAdminToLauncher* other) {
  if (other != this) {
    std::swap(context_, other->context_);
    std::swap(message_, other->message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgAdminToLauncher::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgAdminToLauncher_descriptor_;
  metadata.reflection = MsgAdminToLauncher_reflection_;
  return metadata;
}


}  // namespace MsgsAdminToLauncher
