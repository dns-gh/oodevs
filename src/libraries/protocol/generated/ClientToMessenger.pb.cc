// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ClientToMessenger.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>

namespace MsgsClientToMessenger {

namespace {

const ::google::protobuf::Descriptor* MsgLimaCreationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLimaCreationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLimaUpdateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLimaUpdateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLimaDestructionRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLimaDestructionRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLimitCreationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLimitCreationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLimitUpdateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLimitUpdateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLimitDestructionRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLimitDestructionRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgIntelligenceCreationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgIntelligenceCreationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgIntelligenceUpdateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgIntelligenceUpdateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgIntelligenceDestructionRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgIntelligenceDestructionRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgShapeCreationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgShapeCreationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgShapeUpdateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgShapeUpdateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgShapeDestructionRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgShapeDestructionRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMarkerCreationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMarkerCreationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMarkerUpdateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMarkerUpdateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMarkerDestructionRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMarkerDestructionRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgClientObjectCreationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgClientObjectCreationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgClientObjectUpdateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgClientObjectUpdateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgClientObjectDestructionRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgClientObjectDestructionRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgClientToMessenger_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgClientToMessenger_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgClientToMessenger_Content_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgClientToMessenger_Content_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ClientToMessenger_2eproto() {
  protobuf_AddDesc_ClientToMessenger_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ClientToMessenger.proto");
  GOOGLE_CHECK(file != NULL);
  MsgLimaCreationRequest_descriptor_ = file->message_type(0);
  static const int MsgLimaCreationRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaCreationRequest, tactical_line_),
  };
  MsgLimaCreationRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLimaCreationRequest_descriptor_,
      MsgLimaCreationRequest::default_instance_,
      MsgLimaCreationRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaCreationRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaCreationRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLimaCreationRequest));
  MsgLimaUpdateRequest_descriptor_ = file->message_type(1);
  static const int MsgLimaUpdateRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaUpdateRequest, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaUpdateRequest, tactical_line_),
  };
  MsgLimaUpdateRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLimaUpdateRequest_descriptor_,
      MsgLimaUpdateRequest::default_instance_,
      MsgLimaUpdateRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaUpdateRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaUpdateRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLimaUpdateRequest));
  MsgLimaDestructionRequest_descriptor_ = file->message_type(2);
  static const int MsgLimaDestructionRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaDestructionRequest, id_),
  };
  MsgLimaDestructionRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLimaDestructionRequest_descriptor_,
      MsgLimaDestructionRequest::default_instance_,
      MsgLimaDestructionRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaDestructionRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaDestructionRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLimaDestructionRequest));
  MsgLimitCreationRequest_descriptor_ = file->message_type(3);
  static const int MsgLimitCreationRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitCreationRequest, tactical_line_),
  };
  MsgLimitCreationRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLimitCreationRequest_descriptor_,
      MsgLimitCreationRequest::default_instance_,
      MsgLimitCreationRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitCreationRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitCreationRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLimitCreationRequest));
  MsgLimitUpdateRequest_descriptor_ = file->message_type(4);
  static const int MsgLimitUpdateRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitUpdateRequest, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitUpdateRequest, tactical_line_),
  };
  MsgLimitUpdateRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLimitUpdateRequest_descriptor_,
      MsgLimitUpdateRequest::default_instance_,
      MsgLimitUpdateRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitUpdateRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitUpdateRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLimitUpdateRequest));
  MsgLimitDestructionRequest_descriptor_ = file->message_type(5);
  static const int MsgLimitDestructionRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitDestructionRequest, id_),
  };
  MsgLimitDestructionRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLimitDestructionRequest_descriptor_,
      MsgLimitDestructionRequest::default_instance_,
      MsgLimitDestructionRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitDestructionRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimitDestructionRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLimitDestructionRequest));
  MsgIntelligenceCreationRequest_descriptor_ = file->message_type(6);
  static const int MsgIntelligenceCreationRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceCreationRequest, intelligence_),
  };
  MsgIntelligenceCreationRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgIntelligenceCreationRequest_descriptor_,
      MsgIntelligenceCreationRequest::default_instance_,
      MsgIntelligenceCreationRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceCreationRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceCreationRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgIntelligenceCreationRequest));
  MsgIntelligenceUpdateRequest_descriptor_ = file->message_type(7);
  static const int MsgIntelligenceUpdateRequest_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceUpdateRequest, intelligence_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceUpdateRequest, formation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceUpdateRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceUpdateRequest, nature_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceUpdateRequest, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceUpdateRequest, embarked_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceUpdateRequest, location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceUpdateRequest, diplomacy_),
  };
  MsgIntelligenceUpdateRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgIntelligenceUpdateRequest_descriptor_,
      MsgIntelligenceUpdateRequest::default_instance_,
      MsgIntelligenceUpdateRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceUpdateRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceUpdateRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgIntelligenceUpdateRequest));
  MsgIntelligenceDestructionRequest_descriptor_ = file->message_type(8);
  static const int MsgIntelligenceDestructionRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceDestructionRequest, id_),
  };
  MsgIntelligenceDestructionRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgIntelligenceDestructionRequest_descriptor_,
      MsgIntelligenceDestructionRequest::default_instance_,
      MsgIntelligenceDestructionRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceDestructionRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceDestructionRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgIntelligenceDestructionRequest));
  MsgShapeCreationRequest_descriptor_ = file->message_type(9);
  static const int MsgShapeCreationRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeCreationRequest, shape_),
  };
  MsgShapeCreationRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgShapeCreationRequest_descriptor_,
      MsgShapeCreationRequest::default_instance_,
      MsgShapeCreationRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeCreationRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeCreationRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgShapeCreationRequest));
  MsgShapeUpdateRequest_descriptor_ = file->message_type(10);
  static const int MsgShapeUpdateRequest_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeUpdateRequest, shape_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeUpdateRequest, category_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeUpdateRequest, color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeUpdateRequest, template__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeUpdateRequest, points_),
  };
  MsgShapeUpdateRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgShapeUpdateRequest_descriptor_,
      MsgShapeUpdateRequest::default_instance_,
      MsgShapeUpdateRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeUpdateRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeUpdateRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgShapeUpdateRequest));
  MsgShapeDestructionRequest_descriptor_ = file->message_type(11);
  static const int MsgShapeDestructionRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeDestructionRequest, id_),
  };
  MsgShapeDestructionRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgShapeDestructionRequest_descriptor_,
      MsgShapeDestructionRequest::default_instance_,
      MsgShapeDestructionRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeDestructionRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShapeDestructionRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgShapeDestructionRequest));
  MsgMarkerCreationRequest_descriptor_ = file->message_type(12);
  static const int MsgMarkerCreationRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerCreationRequest, marker_),
  };
  MsgMarkerCreationRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMarkerCreationRequest_descriptor_,
      MsgMarkerCreationRequest::default_instance_,
      MsgMarkerCreationRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerCreationRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerCreationRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMarkerCreationRequest));
  MsgMarkerUpdateRequest_descriptor_ = file->message_type(13);
  static const int MsgMarkerUpdateRequest_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerUpdateRequest, marker_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerUpdateRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerUpdateRequest, number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerUpdateRequest, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerUpdateRequest, parent_),
  };
  MsgMarkerUpdateRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMarkerUpdateRequest_descriptor_,
      MsgMarkerUpdateRequest::default_instance_,
      MsgMarkerUpdateRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerUpdateRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerUpdateRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMarkerUpdateRequest));
  MsgMarkerDestructionRequest_descriptor_ = file->message_type(14);
  static const int MsgMarkerDestructionRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerDestructionRequest, marker_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerDestructionRequest, delete_all_),
  };
  MsgMarkerDestructionRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMarkerDestructionRequest_descriptor_,
      MsgMarkerDestructionRequest::default_instance_,
      MsgMarkerDestructionRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerDestructionRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMarkerDestructionRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMarkerDestructionRequest));
  MsgClientObjectCreationRequest_descriptor_ = file->message_type(15);
  static const int MsgClientObjectCreationRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectCreationRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectCreationRequest, properties_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectCreationRequest, persistent_),
  };
  MsgClientObjectCreationRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgClientObjectCreationRequest_descriptor_,
      MsgClientObjectCreationRequest::default_instance_,
      MsgClientObjectCreationRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectCreationRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectCreationRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgClientObjectCreationRequest));
  MsgClientObjectUpdateRequest_descriptor_ = file->message_type(16);
  static const int MsgClientObjectUpdateRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectUpdateRequest, object_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectUpdateRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectUpdateRequest, properties_),
  };
  MsgClientObjectUpdateRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgClientObjectUpdateRequest_descriptor_,
      MsgClientObjectUpdateRequest::default_instance_,
      MsgClientObjectUpdateRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectUpdateRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectUpdateRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgClientObjectUpdateRequest));
  MsgClientObjectDestructionRequest_descriptor_ = file->message_type(17);
  static const int MsgClientObjectDestructionRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectDestructionRequest, object_),
  };
  MsgClientObjectDestructionRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgClientObjectDestructionRequest_descriptor_,
      MsgClientObjectDestructionRequest::default_instance_,
      MsgClientObjectDestructionRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectDestructionRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientObjectDestructionRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgClientObjectDestructionRequest));
  MsgClientToMessenger_descriptor_ = file->message_type(18);
  static const int MsgClientToMessenger_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToMessenger, context_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToMessenger, message_),
  };
  MsgClientToMessenger_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgClientToMessenger_descriptor_,
      MsgClientToMessenger::default_instance_,
      MsgClientToMessenger_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToMessenger, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToMessenger, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgClientToMessenger));
  MsgClientToMessenger_Content_descriptor_ = MsgClientToMessenger_descriptor_->nested_type(0);
  static const int MsgClientToMessenger_Content_offsets_[19] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToMessenger_Content, limit_creation_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToMessenger_Content, limit_destruction_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToMessenger_Content, limit_update_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToMessenger_Content, lima_creation_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToMessenger_Content, lima_destruction_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToMessenger_Content, lima_update_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToMessenger_Content, intelligence_creation_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToMessenger_Content, intelligence_update_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToMessenger_Content, intelligence_destruction_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToMessenger_Content, shape_creation_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToMessenger_Content, shape_destruction_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToMessenger_Content, shape_update_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToMessenger_Content, text_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToMessenger_Content, marker_creation_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToMessenger_Content, marker_update_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToMessenger_Content, marker_destruction_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToMessenger_Content, client_object_creation_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToMessenger_Content, client_object_update_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToMessenger_Content, client_object_destruction_request_),
  };
  MsgClientToMessenger_Content_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgClientToMessenger_Content_descriptor_,
      MsgClientToMessenger_Content::default_instance_,
      MsgClientToMessenger_Content_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToMessenger_Content, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToMessenger_Content, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgClientToMessenger_Content));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ClientToMessenger_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLimaCreationRequest_descriptor_, &MsgLimaCreationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLimaUpdateRequest_descriptor_, &MsgLimaUpdateRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLimaDestructionRequest_descriptor_, &MsgLimaDestructionRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLimitCreationRequest_descriptor_, &MsgLimitCreationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLimitUpdateRequest_descriptor_, &MsgLimitUpdateRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLimitDestructionRequest_descriptor_, &MsgLimitDestructionRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgIntelligenceCreationRequest_descriptor_, &MsgIntelligenceCreationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgIntelligenceUpdateRequest_descriptor_, &MsgIntelligenceUpdateRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgIntelligenceDestructionRequest_descriptor_, &MsgIntelligenceDestructionRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgShapeCreationRequest_descriptor_, &MsgShapeCreationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgShapeUpdateRequest_descriptor_, &MsgShapeUpdateRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgShapeDestructionRequest_descriptor_, &MsgShapeDestructionRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMarkerCreationRequest_descriptor_, &MsgMarkerCreationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMarkerUpdateRequest_descriptor_, &MsgMarkerUpdateRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMarkerDestructionRequest_descriptor_, &MsgMarkerDestructionRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgClientObjectCreationRequest_descriptor_, &MsgClientObjectCreationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgClientObjectUpdateRequest_descriptor_, &MsgClientObjectUpdateRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgClientObjectDestructionRequest_descriptor_, &MsgClientObjectDestructionRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgClientToMessenger_descriptor_, &MsgClientToMessenger::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgClientToMessenger_Content_descriptor_, &MsgClientToMessenger_Content::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ClientToMessenger_2eproto() {
  delete MsgLimaCreationRequest::default_instance_;
  delete MsgLimaCreationRequest_reflection_;
  delete MsgLimaUpdateRequest::default_instance_;
  delete MsgLimaUpdateRequest_reflection_;
  delete MsgLimaDestructionRequest::default_instance_;
  delete MsgLimaDestructionRequest_reflection_;
  delete MsgLimitCreationRequest::default_instance_;
  delete MsgLimitCreationRequest_reflection_;
  delete MsgLimitUpdateRequest::default_instance_;
  delete MsgLimitUpdateRequest_reflection_;
  delete MsgLimitDestructionRequest::default_instance_;
  delete MsgLimitDestructionRequest_reflection_;
  delete MsgIntelligenceCreationRequest::default_instance_;
  delete MsgIntelligenceCreationRequest_reflection_;
  delete MsgIntelligenceUpdateRequest::default_instance_;
  delete MsgIntelligenceUpdateRequest_reflection_;
  delete MsgIntelligenceDestructionRequest::default_instance_;
  delete MsgIntelligenceDestructionRequest_reflection_;
  delete MsgShapeCreationRequest::default_instance_;
  delete MsgShapeCreationRequest_reflection_;
  delete MsgShapeUpdateRequest::default_instance_;
  delete MsgShapeUpdateRequest_reflection_;
  delete MsgShapeDestructionRequest::default_instance_;
  delete MsgShapeDestructionRequest_reflection_;
  delete MsgMarkerCreationRequest::default_instance_;
  delete MsgMarkerCreationRequest_reflection_;
  delete MsgMarkerUpdateRequest::default_instance_;
  delete MsgMarkerUpdateRequest_reflection_;
  delete MsgMarkerDestructionRequest::default_instance_;
  delete MsgMarkerDestructionRequest_reflection_;
  delete MsgClientObjectCreationRequest::default_instance_;
  delete MsgClientObjectCreationRequest_reflection_;
  delete MsgClientObjectUpdateRequest::default_instance_;
  delete MsgClientObjectUpdateRequest_reflection_;
  delete MsgClientObjectDestructionRequest::default_instance_;
  delete MsgClientObjectDestructionRequest_reflection_;
  delete MsgClientToMessenger::default_instance_;
  delete MsgClientToMessenger_reflection_;
  delete MsgClientToMessenger_Content::default_instance_;
  delete MsgClientToMessenger_Content_reflection_;
}

void protobuf_AddDesc_ClientToMessenger_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Common::protobuf_AddDesc_Common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027ClientToMessenger.proto\022\025MsgsClientToM"
    "essenger\032\014Common.proto\"H\n\026MsgLimaCreatio"
    "nRequest\022.\n\rtactical_line\030\001 \002(\0132\027.Common"
    ".MsgTacticalLine\"j\n\024MsgLimaUpdateRequest"
    "\022\"\n\002id\030\001 \002(\0132\026.Common.TacticalLineId\022.\n\r"
    "tactical_line\030\002 \001(\0132\027.Common.MsgTactical"
    "Line\"?\n\031MsgLimaDestructionRequest\022\"\n\002id\030"
    "\001 \002(\0132\026.Common.TacticalLineId\"I\n\027MsgLimi"
    "tCreationRequest\022.\n\rtactical_line\030\001 \002(\0132"
    "\027.Common.MsgTacticalLine\"k\n\025MsgLimitUpda"
    "teRequest\022\"\n\002id\030\001 \002(\0132\026.Common.TacticalL"
    "ineId\022.\n\rtactical_line\030\002 \001(\0132\027.Common.Ms"
    "gTacticalLine\"@\n\032MsgLimitDestructionRequ"
    "est\022\"\n\002id\030\001 \002(\0132\026.Common.TacticalLineId\""
    "O\n\036MsgIntelligenceCreationRequest\022-\n\014int"
    "elligence\030\001 \002(\0132\027.Common.MsgIntelligence"
    "\"\241\002\n\034MsgIntelligenceUpdateRequest\022,\n\014int"
    "elligence\030\001 \002(\0132\026.Common.IntelligenceId\022"
    "&\n\tformation\030\002 \001(\0132\023.Common.FormationId\022"
    "\014\n\004name\030\003 \001(\t\022\016\n\006nature\030\004 \001(\t\022&\n\005level\030\005"
    " \001(\0162\027.Common.EnumNatureLevel\022\020\n\010embarke"
    "d\030\006 \001(\010\022)\n\010location\030\007 \001(\0132\027.Common.MsgCo"
    "ordLatLong\022(\n\tdiplomacy\030\010 \001(\0162\025.Common.E"
    "numDiplomacy\"G\n!MsgIntelligenceDestructi"
    "onRequest\022\"\n\002id\030\001 \002(\0132\026.Common.Intellige"
    "nceId\":\n\027MsgShapeCreationRequest\022\037\n\005shap"
    "e\030\001 \002(\0132\020.Common.MsgShape\"\231\001\n\025MsgShapeUp"
    "dateRequest\022 \n\005shape\030\001 \002(\0132\021.Common.Draw"
    "ingId\022\020\n\010category\030\002 \001(\t\022\r\n\005color\030\003 \001(\t\022\020"
    "\n\010template\030\004 \001(\t\022+\n\006points\030\005 \001(\0132\033.Commo"
    "n.MsgCoordLatLongList\";\n\032MsgShapeDestruc"
    "tionRequest\022\035\n\002id\030\001 \002(\0132\021.Common.Drawing"
    "Id\"=\n\030MsgMarkerCreationRequest\022!\n\006marker"
    "\030\001 \002(\0132\021.Common.MsgMarker\"\217\001\n\026MsgMarkerU"
    "pdateRequest\022 \n\006marker\030\001 \002(\0132\020.Common.Ma"
    "rkerId\022\014\n\004name\030\002 \001(\t\022\016\n\006number\030\003 \001(\t\022\023\n\013"
    "description\030\004 \001(\t\022 \n\006parent\030\005 \001(\0132\020.Comm"
    "on.MarkerId\"S\n\033MsgMarkerDestructionReque"
    "st\022 \n\006marker\030\001 \002(\0132\020.Common.MarkerId\022\022\n\n"
    "delete_all\030\002 \002(\010\"t\n\036MsgClientObjectCreat"
    "ionRequest\022\014\n\004name\030\001 \001(\t\0220\n\nproperties\030\002"
    " \003(\0132\034.Common.ClientObjectProperty\022\022\n\npe"
    "rsistent\030\003 \001(\010\"\206\001\n\034MsgClientObjectUpdate"
    "Request\022&\n\006object\030\001 \002(\0132\026.Common.ClientO"
    "bjectId\022\014\n\004name\030\002 \001(\t\0220\n\nproperties\030\003 \003("
    "\0132\034.Common.ClientObjectProperty\"K\n!MsgCl"
    "ientObjectDestructionRequest\022&\n\006object\030\001"
    " \002(\0132\026.Common.ClientObjectId\"\252\r\n\024MsgClie"
    "ntToMessenger\022\017\n\007context\030\001 \001(\005\022D\n\007messag"
    "e\030\002 \002(\01323.MsgsClientToMessenger.MsgClien"
    "tToMessenger.Content\032\272\014\n\007Content\022N\n\026limi"
    "t_creation_request\030\001 \001(\0132..MsgsClientToM"
    "essenger.MsgLimitCreationRequest\022T\n\031limi"
    "t_destruction_request\030\002 \001(\01321.MsgsClient"
    "ToMessenger.MsgLimitDestructionRequest\022J"
    "\n\024limit_update_request\030\003 \001(\0132,.MsgsClien"
    "tToMessenger.MsgLimitUpdateRequest\022L\n\025li"
    "ma_creation_request\030\004 \001(\0132-.MsgsClientTo"
    "Messenger.MsgLimaCreationRequest\022R\n\030lima"
    "_destruction_request\030\005 \001(\01320.MsgsClientT"
    "oMessenger.MsgLimaDestructionRequest\022H\n\023"
    "lima_update_request\030\006 \001(\0132+.MsgsClientTo"
    "Messenger.MsgLimaUpdateRequest\022\\\n\035intell"
    "igence_creation_request\030\007 \001(\01325.MsgsClie"
    "ntToMessenger.MsgIntelligenceCreationReq"
    "uest\022X\n\033intelligence_update_request\030\010 \001("
    "\01323.MsgsClientToMessenger.MsgIntelligenc"
    "eUpdateRequest\022b\n intelligence_destructi"
    "on_request\030\t \001(\01328.MsgsClientToMessenger"
    ".MsgIntelligenceDestructionRequest\022N\n\026sh"
    "ape_creation_request\030\n \001(\0132..MsgsClientT"
    "oMessenger.MsgShapeCreationRequest\022T\n\031sh"
    "ape_destruction_request\030\013 \001(\01321.MsgsClie"
    "ntToMessenger.MsgShapeDestructionRequest"
    "\022J\n\024shape_update_request\030\014 \001(\0132,.MsgsCli"
    "entToMessenger.MsgShapeUpdateRequest\022,\n\014"
    "text_message\030\r \001(\0132\026.Common.MsgTextMessa"
    "ge\022P\n\027marker_creation_request\030\016 \001(\0132/.Ms"
    "gsClientToMessenger.MsgMarkerCreationReq"
    "uest\022L\n\025marker_update_request\030\017 \001(\0132-.Ms"
    "gsClientToMessenger.MsgMarkerUpdateReque"
    "st\022V\n\032marker_destruction_request\030\020 \001(\01322"
    ".MsgsClientToMessenger.MsgMarkerDestruct"
    "ionRequest\022]\n\036client_object_creation_req"
    "uest\030\021 \001(\01325.MsgsClientToMessenger.MsgCl"
    "ientObjectCreationRequest\022Y\n\034client_obje"
    "ct_update_request\030\022 \001(\01323.MsgsClientToMe"
    "ssenger.MsgClientObjectUpdateRequest\022c\n!"
    "client_object_destruction_request\030\023 \001(\0132"
    "8.MsgsClientToMessenger.MsgClientObjectD"
    "estructionRequest", 3617);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ClientToMessenger.proto", &protobuf_RegisterTypes);
  MsgLimaCreationRequest::default_instance_ = new MsgLimaCreationRequest();
  MsgLimaUpdateRequest::default_instance_ = new MsgLimaUpdateRequest();
  MsgLimaDestructionRequest::default_instance_ = new MsgLimaDestructionRequest();
  MsgLimitCreationRequest::default_instance_ = new MsgLimitCreationRequest();
  MsgLimitUpdateRequest::default_instance_ = new MsgLimitUpdateRequest();
  MsgLimitDestructionRequest::default_instance_ = new MsgLimitDestructionRequest();
  MsgIntelligenceCreationRequest::default_instance_ = new MsgIntelligenceCreationRequest();
  MsgIntelligenceUpdateRequest::default_instance_ = new MsgIntelligenceUpdateRequest();
  MsgIntelligenceDestructionRequest::default_instance_ = new MsgIntelligenceDestructionRequest();
  MsgShapeCreationRequest::default_instance_ = new MsgShapeCreationRequest();
  MsgShapeUpdateRequest::default_instance_ = new MsgShapeUpdateRequest();
  MsgShapeDestructionRequest::default_instance_ = new MsgShapeDestructionRequest();
  MsgMarkerCreationRequest::default_instance_ = new MsgMarkerCreationRequest();
  MsgMarkerUpdateRequest::default_instance_ = new MsgMarkerUpdateRequest();
  MsgMarkerDestructionRequest::default_instance_ = new MsgMarkerDestructionRequest();
  MsgClientObjectCreationRequest::default_instance_ = new MsgClientObjectCreationRequest();
  MsgClientObjectUpdateRequest::default_instance_ = new MsgClientObjectUpdateRequest();
  MsgClientObjectDestructionRequest::default_instance_ = new MsgClientObjectDestructionRequest();
  MsgClientToMessenger::default_instance_ = new MsgClientToMessenger();
  MsgClientToMessenger_Content::default_instance_ = new MsgClientToMessenger_Content();
  MsgLimaCreationRequest::default_instance_->InitAsDefaultInstance();
  MsgLimaUpdateRequest::default_instance_->InitAsDefaultInstance();
  MsgLimaDestructionRequest::default_instance_->InitAsDefaultInstance();
  MsgLimitCreationRequest::default_instance_->InitAsDefaultInstance();
  MsgLimitUpdateRequest::default_instance_->InitAsDefaultInstance();
  MsgLimitDestructionRequest::default_instance_->InitAsDefaultInstance();
  MsgIntelligenceCreationRequest::default_instance_->InitAsDefaultInstance();
  MsgIntelligenceUpdateRequest::default_instance_->InitAsDefaultInstance();
  MsgIntelligenceDestructionRequest::default_instance_->InitAsDefaultInstance();
  MsgShapeCreationRequest::default_instance_->InitAsDefaultInstance();
  MsgShapeUpdateRequest::default_instance_->InitAsDefaultInstance();
  MsgShapeDestructionRequest::default_instance_->InitAsDefaultInstance();
  MsgMarkerCreationRequest::default_instance_->InitAsDefaultInstance();
  MsgMarkerUpdateRequest::default_instance_->InitAsDefaultInstance();
  MsgMarkerDestructionRequest::default_instance_->InitAsDefaultInstance();
  MsgClientObjectCreationRequest::default_instance_->InitAsDefaultInstance();
  MsgClientObjectUpdateRequest::default_instance_->InitAsDefaultInstance();
  MsgClientObjectDestructionRequest::default_instance_->InitAsDefaultInstance();
  MsgClientToMessenger::default_instance_->InitAsDefaultInstance();
  MsgClientToMessenger_Content::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ClientToMessenger_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ClientToMessenger_2eproto {
  StaticDescriptorInitializer_ClientToMessenger_2eproto() {
    protobuf_AddDesc_ClientToMessenger_2eproto();
  }
} static_descriptor_initializer_ClientToMessenger_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int MsgLimaCreationRequest::kTacticalLineFieldNumber;
#endif  // !_MSC_VER

MsgLimaCreationRequest::MsgLimaCreationRequest() {
  SharedCtor();
}

void MsgLimaCreationRequest::InitAsDefaultInstance() {
  tactical_line_ = const_cast< ::Common::MsgTacticalLine*>(&::Common::MsgTacticalLine::default_instance());
}

MsgLimaCreationRequest::MsgLimaCreationRequest(const MsgLimaCreationRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLimaCreationRequest::SharedCtor() {
  _cached_size_ = 0;
  tactical_line_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLimaCreationRequest::~MsgLimaCreationRequest() {
  SharedDtor();
}

void MsgLimaCreationRequest::SharedDtor() {
  if (this != default_instance_) {
    delete tactical_line_;
  }
}

const ::google::protobuf::Descriptor* MsgLimaCreationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLimaCreationRequest_descriptor_;
}

const MsgLimaCreationRequest& MsgLimaCreationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToMessenger_2eproto();  return *default_instance_;
}

MsgLimaCreationRequest* MsgLimaCreationRequest::default_instance_ = NULL;

MsgLimaCreationRequest* MsgLimaCreationRequest::New() const {
  return new MsgLimaCreationRequest;
}

void MsgLimaCreationRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (tactical_line_ != NULL) tactical_line_->::Common::MsgTacticalLine::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLimaCreationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MsgTacticalLine tactical_line = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_tactical_line()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLimaCreationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLimaCreationRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MsgTacticalLine tactical_line = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->tactical_line(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLimaCreationRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MsgTacticalLine tactical_line = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->tactical_line(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLimaCreationRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MsgTacticalLine tactical_line = 1;
    if (has_tactical_line()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tactical_line());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLimaCreationRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLimaCreationRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLimaCreationRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLimaCreationRequest::MergeFrom(const MsgLimaCreationRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_tactical_line()->::Common::MsgTacticalLine::MergeFrom(from.tactical_line());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLimaCreationRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLimaCreationRequest::CopyFrom(const MsgLimaCreationRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLimaCreationRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_tactical_line()) {
    if (!this->tactical_line().IsInitialized()) return false;
  }
  return true;
}

void MsgLimaCreationRequest::Swap(MsgLimaCreationRequest* other) {
  if (other != this) {
    std::swap(tactical_line_, other->tactical_line_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLimaCreationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLimaCreationRequest_descriptor_;
  metadata.reflection = MsgLimaCreationRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLimaUpdateRequest::kIdFieldNumber;
const int MsgLimaUpdateRequest::kTacticalLineFieldNumber;
#endif  // !_MSC_VER

MsgLimaUpdateRequest::MsgLimaUpdateRequest() {
  SharedCtor();
}

void MsgLimaUpdateRequest::InitAsDefaultInstance() {
  id_ = const_cast< ::Common::TacticalLineId*>(&::Common::TacticalLineId::default_instance());
  tactical_line_ = const_cast< ::Common::MsgTacticalLine*>(&::Common::MsgTacticalLine::default_instance());
}

MsgLimaUpdateRequest::MsgLimaUpdateRequest(const MsgLimaUpdateRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLimaUpdateRequest::SharedCtor() {
  _cached_size_ = 0;
  id_ = NULL;
  tactical_line_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLimaUpdateRequest::~MsgLimaUpdateRequest() {
  SharedDtor();
}

void MsgLimaUpdateRequest::SharedDtor() {
  if (this != default_instance_) {
    delete id_;
    delete tactical_line_;
  }
}

const ::google::protobuf::Descriptor* MsgLimaUpdateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLimaUpdateRequest_descriptor_;
}

const MsgLimaUpdateRequest& MsgLimaUpdateRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToMessenger_2eproto();  return *default_instance_;
}

MsgLimaUpdateRequest* MsgLimaUpdateRequest::default_instance_ = NULL;

MsgLimaUpdateRequest* MsgLimaUpdateRequest::New() const {
  return new MsgLimaUpdateRequest;
}

void MsgLimaUpdateRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (id_ != NULL) id_->::Common::TacticalLineId::Clear();
    }
    if (_has_bit(1)) {
      if (tactical_line_ != NULL) tactical_line_->::Common::MsgTacticalLine::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLimaUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.TacticalLineId id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_id()));
        if (input->ExpectTag(18)) goto parse_tactical_line;
        break;
      }
      
      // optional .Common.MsgTacticalLine tactical_line = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_tactical_line:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_tactical_line()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLimaUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLimaUpdateRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.TacticalLineId id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->id(), output);
  }
  
  // optional .Common.MsgTacticalLine tactical_line = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->tactical_line(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLimaUpdateRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.TacticalLineId id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->id(), target);
  }
  
  // optional .Common.MsgTacticalLine tactical_line = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->tactical_line(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLimaUpdateRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.TacticalLineId id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->id());
    }
    
    // optional .Common.MsgTacticalLine tactical_line = 2;
    if (has_tactical_line()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tactical_line());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLimaUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLimaUpdateRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLimaUpdateRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLimaUpdateRequest::MergeFrom(const MsgLimaUpdateRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_id()->::Common::TacticalLineId::MergeFrom(from.id());
    }
    if (from._has_bit(1)) {
      mutable_tactical_line()->::Common::MsgTacticalLine::MergeFrom(from.tactical_line());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLimaUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLimaUpdateRequest::CopyFrom(const MsgLimaUpdateRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLimaUpdateRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_id()) {
    if (!this->id().IsInitialized()) return false;
  }
  if (has_tactical_line()) {
    if (!this->tactical_line().IsInitialized()) return false;
  }
  return true;
}

void MsgLimaUpdateRequest::Swap(MsgLimaUpdateRequest* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(tactical_line_, other->tactical_line_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLimaUpdateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLimaUpdateRequest_descriptor_;
  metadata.reflection = MsgLimaUpdateRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLimaDestructionRequest::kIdFieldNumber;
#endif  // !_MSC_VER

MsgLimaDestructionRequest::MsgLimaDestructionRequest() {
  SharedCtor();
}

void MsgLimaDestructionRequest::InitAsDefaultInstance() {
  id_ = const_cast< ::Common::TacticalLineId*>(&::Common::TacticalLineId::default_instance());
}

MsgLimaDestructionRequest::MsgLimaDestructionRequest(const MsgLimaDestructionRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLimaDestructionRequest::SharedCtor() {
  _cached_size_ = 0;
  id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLimaDestructionRequest::~MsgLimaDestructionRequest() {
  SharedDtor();
}

void MsgLimaDestructionRequest::SharedDtor() {
  if (this != default_instance_) {
    delete id_;
  }
}

const ::google::protobuf::Descriptor* MsgLimaDestructionRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLimaDestructionRequest_descriptor_;
}

const MsgLimaDestructionRequest& MsgLimaDestructionRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToMessenger_2eproto();  return *default_instance_;
}

MsgLimaDestructionRequest* MsgLimaDestructionRequest::default_instance_ = NULL;

MsgLimaDestructionRequest* MsgLimaDestructionRequest::New() const {
  return new MsgLimaDestructionRequest;
}

void MsgLimaDestructionRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (id_ != NULL) id_->::Common::TacticalLineId::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLimaDestructionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.TacticalLineId id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_id()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLimaDestructionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLimaDestructionRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.TacticalLineId id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLimaDestructionRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.TacticalLineId id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLimaDestructionRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.TacticalLineId id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLimaDestructionRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLimaDestructionRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLimaDestructionRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLimaDestructionRequest::MergeFrom(const MsgLimaDestructionRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_id()->::Common::TacticalLineId::MergeFrom(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLimaDestructionRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLimaDestructionRequest::CopyFrom(const MsgLimaDestructionRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLimaDestructionRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_id()) {
    if (!this->id().IsInitialized()) return false;
  }
  return true;
}

void MsgLimaDestructionRequest::Swap(MsgLimaDestructionRequest* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLimaDestructionRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLimaDestructionRequest_descriptor_;
  metadata.reflection = MsgLimaDestructionRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLimitCreationRequest::kTacticalLineFieldNumber;
#endif  // !_MSC_VER

MsgLimitCreationRequest::MsgLimitCreationRequest() {
  SharedCtor();
}

void MsgLimitCreationRequest::InitAsDefaultInstance() {
  tactical_line_ = const_cast< ::Common::MsgTacticalLine*>(&::Common::MsgTacticalLine::default_instance());
}

MsgLimitCreationRequest::MsgLimitCreationRequest(const MsgLimitCreationRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLimitCreationRequest::SharedCtor() {
  _cached_size_ = 0;
  tactical_line_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLimitCreationRequest::~MsgLimitCreationRequest() {
  SharedDtor();
}

void MsgLimitCreationRequest::SharedDtor() {
  if (this != default_instance_) {
    delete tactical_line_;
  }
}

const ::google::protobuf::Descriptor* MsgLimitCreationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLimitCreationRequest_descriptor_;
}

const MsgLimitCreationRequest& MsgLimitCreationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToMessenger_2eproto();  return *default_instance_;
}

MsgLimitCreationRequest* MsgLimitCreationRequest::default_instance_ = NULL;

MsgLimitCreationRequest* MsgLimitCreationRequest::New() const {
  return new MsgLimitCreationRequest;
}

void MsgLimitCreationRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (tactical_line_ != NULL) tactical_line_->::Common::MsgTacticalLine::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLimitCreationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MsgTacticalLine tactical_line = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_tactical_line()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLimitCreationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLimitCreationRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MsgTacticalLine tactical_line = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->tactical_line(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLimitCreationRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MsgTacticalLine tactical_line = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->tactical_line(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLimitCreationRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MsgTacticalLine tactical_line = 1;
    if (has_tactical_line()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tactical_line());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLimitCreationRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLimitCreationRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLimitCreationRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLimitCreationRequest::MergeFrom(const MsgLimitCreationRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_tactical_line()->::Common::MsgTacticalLine::MergeFrom(from.tactical_line());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLimitCreationRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLimitCreationRequest::CopyFrom(const MsgLimitCreationRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLimitCreationRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_tactical_line()) {
    if (!this->tactical_line().IsInitialized()) return false;
  }
  return true;
}

void MsgLimitCreationRequest::Swap(MsgLimitCreationRequest* other) {
  if (other != this) {
    std::swap(tactical_line_, other->tactical_line_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLimitCreationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLimitCreationRequest_descriptor_;
  metadata.reflection = MsgLimitCreationRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLimitUpdateRequest::kIdFieldNumber;
const int MsgLimitUpdateRequest::kTacticalLineFieldNumber;
#endif  // !_MSC_VER

MsgLimitUpdateRequest::MsgLimitUpdateRequest() {
  SharedCtor();
}

void MsgLimitUpdateRequest::InitAsDefaultInstance() {
  id_ = const_cast< ::Common::TacticalLineId*>(&::Common::TacticalLineId::default_instance());
  tactical_line_ = const_cast< ::Common::MsgTacticalLine*>(&::Common::MsgTacticalLine::default_instance());
}

MsgLimitUpdateRequest::MsgLimitUpdateRequest(const MsgLimitUpdateRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLimitUpdateRequest::SharedCtor() {
  _cached_size_ = 0;
  id_ = NULL;
  tactical_line_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLimitUpdateRequest::~MsgLimitUpdateRequest() {
  SharedDtor();
}

void MsgLimitUpdateRequest::SharedDtor() {
  if (this != default_instance_) {
    delete id_;
    delete tactical_line_;
  }
}

const ::google::protobuf::Descriptor* MsgLimitUpdateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLimitUpdateRequest_descriptor_;
}

const MsgLimitUpdateRequest& MsgLimitUpdateRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToMessenger_2eproto();  return *default_instance_;
}

MsgLimitUpdateRequest* MsgLimitUpdateRequest::default_instance_ = NULL;

MsgLimitUpdateRequest* MsgLimitUpdateRequest::New() const {
  return new MsgLimitUpdateRequest;
}

void MsgLimitUpdateRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (id_ != NULL) id_->::Common::TacticalLineId::Clear();
    }
    if (_has_bit(1)) {
      if (tactical_line_ != NULL) tactical_line_->::Common::MsgTacticalLine::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLimitUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.TacticalLineId id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_id()));
        if (input->ExpectTag(18)) goto parse_tactical_line;
        break;
      }
      
      // optional .Common.MsgTacticalLine tactical_line = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_tactical_line:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_tactical_line()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLimitUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLimitUpdateRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.TacticalLineId id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->id(), output);
  }
  
  // optional .Common.MsgTacticalLine tactical_line = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->tactical_line(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLimitUpdateRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.TacticalLineId id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->id(), target);
  }
  
  // optional .Common.MsgTacticalLine tactical_line = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->tactical_line(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLimitUpdateRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.TacticalLineId id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->id());
    }
    
    // optional .Common.MsgTacticalLine tactical_line = 2;
    if (has_tactical_line()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tactical_line());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLimitUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLimitUpdateRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLimitUpdateRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLimitUpdateRequest::MergeFrom(const MsgLimitUpdateRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_id()->::Common::TacticalLineId::MergeFrom(from.id());
    }
    if (from._has_bit(1)) {
      mutable_tactical_line()->::Common::MsgTacticalLine::MergeFrom(from.tactical_line());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLimitUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLimitUpdateRequest::CopyFrom(const MsgLimitUpdateRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLimitUpdateRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_id()) {
    if (!this->id().IsInitialized()) return false;
  }
  if (has_tactical_line()) {
    if (!this->tactical_line().IsInitialized()) return false;
  }
  return true;
}

void MsgLimitUpdateRequest::Swap(MsgLimitUpdateRequest* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(tactical_line_, other->tactical_line_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLimitUpdateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLimitUpdateRequest_descriptor_;
  metadata.reflection = MsgLimitUpdateRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLimitDestructionRequest::kIdFieldNumber;
#endif  // !_MSC_VER

MsgLimitDestructionRequest::MsgLimitDestructionRequest() {
  SharedCtor();
}

void MsgLimitDestructionRequest::InitAsDefaultInstance() {
  id_ = const_cast< ::Common::TacticalLineId*>(&::Common::TacticalLineId::default_instance());
}

MsgLimitDestructionRequest::MsgLimitDestructionRequest(const MsgLimitDestructionRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLimitDestructionRequest::SharedCtor() {
  _cached_size_ = 0;
  id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLimitDestructionRequest::~MsgLimitDestructionRequest() {
  SharedDtor();
}

void MsgLimitDestructionRequest::SharedDtor() {
  if (this != default_instance_) {
    delete id_;
  }
}

const ::google::protobuf::Descriptor* MsgLimitDestructionRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLimitDestructionRequest_descriptor_;
}

const MsgLimitDestructionRequest& MsgLimitDestructionRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToMessenger_2eproto();  return *default_instance_;
}

MsgLimitDestructionRequest* MsgLimitDestructionRequest::default_instance_ = NULL;

MsgLimitDestructionRequest* MsgLimitDestructionRequest::New() const {
  return new MsgLimitDestructionRequest;
}

void MsgLimitDestructionRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (id_ != NULL) id_->::Common::TacticalLineId::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLimitDestructionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.TacticalLineId id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_id()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLimitDestructionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLimitDestructionRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.TacticalLineId id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLimitDestructionRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.TacticalLineId id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLimitDestructionRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.TacticalLineId id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLimitDestructionRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLimitDestructionRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLimitDestructionRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLimitDestructionRequest::MergeFrom(const MsgLimitDestructionRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_id()->::Common::TacticalLineId::MergeFrom(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLimitDestructionRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLimitDestructionRequest::CopyFrom(const MsgLimitDestructionRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLimitDestructionRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_id()) {
    if (!this->id().IsInitialized()) return false;
  }
  return true;
}

void MsgLimitDestructionRequest::Swap(MsgLimitDestructionRequest* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLimitDestructionRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLimitDestructionRequest_descriptor_;
  metadata.reflection = MsgLimitDestructionRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgIntelligenceCreationRequest::kIntelligenceFieldNumber;
#endif  // !_MSC_VER

MsgIntelligenceCreationRequest::MsgIntelligenceCreationRequest() {
  SharedCtor();
}

void MsgIntelligenceCreationRequest::InitAsDefaultInstance() {
  intelligence_ = const_cast< ::Common::MsgIntelligence*>(&::Common::MsgIntelligence::default_instance());
}

MsgIntelligenceCreationRequest::MsgIntelligenceCreationRequest(const MsgIntelligenceCreationRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgIntelligenceCreationRequest::SharedCtor() {
  _cached_size_ = 0;
  intelligence_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgIntelligenceCreationRequest::~MsgIntelligenceCreationRequest() {
  SharedDtor();
}

void MsgIntelligenceCreationRequest::SharedDtor() {
  if (this != default_instance_) {
    delete intelligence_;
  }
}

const ::google::protobuf::Descriptor* MsgIntelligenceCreationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgIntelligenceCreationRequest_descriptor_;
}

const MsgIntelligenceCreationRequest& MsgIntelligenceCreationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToMessenger_2eproto();  return *default_instance_;
}

MsgIntelligenceCreationRequest* MsgIntelligenceCreationRequest::default_instance_ = NULL;

MsgIntelligenceCreationRequest* MsgIntelligenceCreationRequest::New() const {
  return new MsgIntelligenceCreationRequest;
}

void MsgIntelligenceCreationRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (intelligence_ != NULL) intelligence_->::Common::MsgIntelligence::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgIntelligenceCreationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MsgIntelligence intelligence = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_intelligence()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgIntelligenceCreationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgIntelligenceCreationRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MsgIntelligence intelligence = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->intelligence(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgIntelligenceCreationRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MsgIntelligence intelligence = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->intelligence(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgIntelligenceCreationRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MsgIntelligence intelligence = 1;
    if (has_intelligence()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intelligence());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgIntelligenceCreationRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgIntelligenceCreationRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgIntelligenceCreationRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgIntelligenceCreationRequest::MergeFrom(const MsgIntelligenceCreationRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_intelligence()->::Common::MsgIntelligence::MergeFrom(from.intelligence());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgIntelligenceCreationRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgIntelligenceCreationRequest::CopyFrom(const MsgIntelligenceCreationRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgIntelligenceCreationRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_intelligence()) {
    if (!this->intelligence().IsInitialized()) return false;
  }
  return true;
}

void MsgIntelligenceCreationRequest::Swap(MsgIntelligenceCreationRequest* other) {
  if (other != this) {
    std::swap(intelligence_, other->intelligence_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgIntelligenceCreationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgIntelligenceCreationRequest_descriptor_;
  metadata.reflection = MsgIntelligenceCreationRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgIntelligenceUpdateRequest::_default_name_;
const ::std::string MsgIntelligenceUpdateRequest::_default_nature_;
#ifndef _MSC_VER
const int MsgIntelligenceUpdateRequest::kIntelligenceFieldNumber;
const int MsgIntelligenceUpdateRequest::kFormationFieldNumber;
const int MsgIntelligenceUpdateRequest::kNameFieldNumber;
const int MsgIntelligenceUpdateRequest::kNatureFieldNumber;
const int MsgIntelligenceUpdateRequest::kLevelFieldNumber;
const int MsgIntelligenceUpdateRequest::kEmbarkedFieldNumber;
const int MsgIntelligenceUpdateRequest::kLocationFieldNumber;
const int MsgIntelligenceUpdateRequest::kDiplomacyFieldNumber;
#endif  // !_MSC_VER

MsgIntelligenceUpdateRequest::MsgIntelligenceUpdateRequest() {
  SharedCtor();
}

void MsgIntelligenceUpdateRequest::InitAsDefaultInstance() {
  intelligence_ = const_cast< ::Common::IntelligenceId*>(&::Common::IntelligenceId::default_instance());
  formation_ = const_cast< ::Common::FormationId*>(&::Common::FormationId::default_instance());
  location_ = const_cast< ::Common::MsgCoordLatLong*>(&::Common::MsgCoordLatLong::default_instance());
}

MsgIntelligenceUpdateRequest::MsgIntelligenceUpdateRequest(const MsgIntelligenceUpdateRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgIntelligenceUpdateRequest::SharedCtor() {
  _cached_size_ = 0;
  intelligence_ = NULL;
  formation_ = NULL;
  name_ = const_cast< ::std::string*>(&_default_name_);
  nature_ = const_cast< ::std::string*>(&_default_nature_);
  level_ = 0;
  embarked_ = false;
  location_ = NULL;
  diplomacy_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgIntelligenceUpdateRequest::~MsgIntelligenceUpdateRequest() {
  SharedDtor();
}

void MsgIntelligenceUpdateRequest::SharedDtor() {
  if (name_ != &_default_name_) {
    delete name_;
  }
  if (nature_ != &_default_nature_) {
    delete nature_;
  }
  if (this != default_instance_) {
    delete intelligence_;
    delete formation_;
    delete location_;
  }
}

const ::google::protobuf::Descriptor* MsgIntelligenceUpdateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgIntelligenceUpdateRequest_descriptor_;
}

const MsgIntelligenceUpdateRequest& MsgIntelligenceUpdateRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToMessenger_2eproto();  return *default_instance_;
}

MsgIntelligenceUpdateRequest* MsgIntelligenceUpdateRequest::default_instance_ = NULL;

MsgIntelligenceUpdateRequest* MsgIntelligenceUpdateRequest::New() const {
  return new MsgIntelligenceUpdateRequest;
}

void MsgIntelligenceUpdateRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (intelligence_ != NULL) intelligence_->::Common::IntelligenceId::Clear();
    }
    if (_has_bit(1)) {
      if (formation_ != NULL) formation_->::Common::FormationId::Clear();
    }
    if (_has_bit(2)) {
      if (name_ != &_default_name_) {
        name_->clear();
      }
    }
    if (_has_bit(3)) {
      if (nature_ != &_default_nature_) {
        nature_->clear();
      }
    }
    level_ = 0;
    embarked_ = false;
    if (_has_bit(6)) {
      if (location_ != NULL) location_->::Common::MsgCoordLatLong::Clear();
    }
    diplomacy_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgIntelligenceUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.IntelligenceId intelligence = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_intelligence()));
        if (input->ExpectTag(18)) goto parse_formation;
        break;
      }
      
      // optional .Common.FormationId formation = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_formation:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_formation()));
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }
      
      // optional string name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_name:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_name()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->name().data(), this->name().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(34)) goto parse_nature;
        break;
      }
      
      // optional string nature = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_nature:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_nature()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->nature().data(), this->nature().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(40)) goto parse_level;
        break;
      }
      
      // optional .Common.EnumNatureLevel level = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_level:
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (Common::EnumNatureLevel_IsValid(value)) {
          set_level(static_cast< Common::EnumNatureLevel >(value));
        } else {
          mutable_unknown_fields()->AddVarint(5, value);
        }
        if (input->ExpectTag(48)) goto parse_embarked;
        break;
      }
      
      // optional bool embarked = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_embarked:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &embarked_));
        _set_bit(5);
        if (input->ExpectTag(58)) goto parse_location;
        break;
      }
      
      // optional .Common.MsgCoordLatLong location = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_location:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_location()));
        if (input->ExpectTag(64)) goto parse_diplomacy;
        break;
      }
      
      // optional .Common.EnumDiplomacy diplomacy = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_diplomacy:
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (Common::EnumDiplomacy_IsValid(value)) {
          set_diplomacy(static_cast< Common::EnumDiplomacy >(value));
        } else {
          mutable_unknown_fields()->AddVarint(8, value);
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgIntelligenceUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgIntelligenceUpdateRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.IntelligenceId intelligence = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->intelligence(), output);
  }
  
  // optional .Common.FormationId formation = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->formation(), output);
  }
  
  // optional string name = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->name(), output);
  }
  
  // optional string nature = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nature().data(), this->nature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->nature(), output);
  }
  
  // optional .Common.EnumNatureLevel level = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->level(), output);
  }
  
  // optional bool embarked = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->embarked(), output);
  }
  
  // optional .Common.MsgCoordLatLong location = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      7, this->location(), output);
  }
  
  // optional .Common.EnumDiplomacy diplomacy = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->diplomacy(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgIntelligenceUpdateRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.IntelligenceId intelligence = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->intelligence(), target);
  }
  
  // optional .Common.FormationId formation = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->formation(), target);
  }
  
  // optional string name = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }
  
  // optional string nature = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nature().data(), this->nature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->nature(), target);
  }
  
  // optional .Common.EnumNatureLevel level = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->level(), target);
  }
  
  // optional bool embarked = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->embarked(), target);
  }
  
  // optional .Common.MsgCoordLatLong location = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->location(), target);
  }
  
  // optional .Common.EnumDiplomacy diplomacy = 8;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->diplomacy(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgIntelligenceUpdateRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.IntelligenceId intelligence = 1;
    if (has_intelligence()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intelligence());
    }
    
    // optional .Common.FormationId formation = 2;
    if (has_formation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->formation());
    }
    
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // optional string nature = 4;
    if (has_nature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nature());
    }
    
    // optional .Common.EnumNatureLevel level = 5;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->level());
    }
    
    // optional bool embarked = 6;
    if (has_embarked()) {
      total_size += 1 + 1;
    }
    
    // optional .Common.MsgCoordLatLong location = 7;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->location());
    }
    
    // optional .Common.EnumDiplomacy diplomacy = 8;
    if (has_diplomacy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->diplomacy());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgIntelligenceUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgIntelligenceUpdateRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgIntelligenceUpdateRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgIntelligenceUpdateRequest::MergeFrom(const MsgIntelligenceUpdateRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_intelligence()->::Common::IntelligenceId::MergeFrom(from.intelligence());
    }
    if (from._has_bit(1)) {
      mutable_formation()->::Common::FormationId::MergeFrom(from.formation());
    }
    if (from._has_bit(2)) {
      set_name(from.name());
    }
    if (from._has_bit(3)) {
      set_nature(from.nature());
    }
    if (from._has_bit(4)) {
      set_level(from.level());
    }
    if (from._has_bit(5)) {
      set_embarked(from.embarked());
    }
    if (from._has_bit(6)) {
      mutable_location()->::Common::MsgCoordLatLong::MergeFrom(from.location());
    }
    if (from._has_bit(7)) {
      set_diplomacy(from.diplomacy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgIntelligenceUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgIntelligenceUpdateRequest::CopyFrom(const MsgIntelligenceUpdateRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgIntelligenceUpdateRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_intelligence()) {
    if (!this->intelligence().IsInitialized()) return false;
  }
  if (has_formation()) {
    if (!this->formation().IsInitialized()) return false;
  }
  if (has_location()) {
    if (!this->location().IsInitialized()) return false;
  }
  return true;
}

void MsgIntelligenceUpdateRequest::Swap(MsgIntelligenceUpdateRequest* other) {
  if (other != this) {
    std::swap(intelligence_, other->intelligence_);
    std::swap(formation_, other->formation_);
    std::swap(name_, other->name_);
    std::swap(nature_, other->nature_);
    std::swap(level_, other->level_);
    std::swap(embarked_, other->embarked_);
    std::swap(location_, other->location_);
    std::swap(diplomacy_, other->diplomacy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgIntelligenceUpdateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgIntelligenceUpdateRequest_descriptor_;
  metadata.reflection = MsgIntelligenceUpdateRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgIntelligenceDestructionRequest::kIdFieldNumber;
#endif  // !_MSC_VER

MsgIntelligenceDestructionRequest::MsgIntelligenceDestructionRequest() {
  SharedCtor();
}

void MsgIntelligenceDestructionRequest::InitAsDefaultInstance() {
  id_ = const_cast< ::Common::IntelligenceId*>(&::Common::IntelligenceId::default_instance());
}

MsgIntelligenceDestructionRequest::MsgIntelligenceDestructionRequest(const MsgIntelligenceDestructionRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgIntelligenceDestructionRequest::SharedCtor() {
  _cached_size_ = 0;
  id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgIntelligenceDestructionRequest::~MsgIntelligenceDestructionRequest() {
  SharedDtor();
}

void MsgIntelligenceDestructionRequest::SharedDtor() {
  if (this != default_instance_) {
    delete id_;
  }
}

const ::google::protobuf::Descriptor* MsgIntelligenceDestructionRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgIntelligenceDestructionRequest_descriptor_;
}

const MsgIntelligenceDestructionRequest& MsgIntelligenceDestructionRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToMessenger_2eproto();  return *default_instance_;
}

MsgIntelligenceDestructionRequest* MsgIntelligenceDestructionRequest::default_instance_ = NULL;

MsgIntelligenceDestructionRequest* MsgIntelligenceDestructionRequest::New() const {
  return new MsgIntelligenceDestructionRequest;
}

void MsgIntelligenceDestructionRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (id_ != NULL) id_->::Common::IntelligenceId::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgIntelligenceDestructionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.IntelligenceId id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_id()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgIntelligenceDestructionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgIntelligenceDestructionRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.IntelligenceId id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgIntelligenceDestructionRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.IntelligenceId id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgIntelligenceDestructionRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.IntelligenceId id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgIntelligenceDestructionRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgIntelligenceDestructionRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgIntelligenceDestructionRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgIntelligenceDestructionRequest::MergeFrom(const MsgIntelligenceDestructionRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_id()->::Common::IntelligenceId::MergeFrom(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgIntelligenceDestructionRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgIntelligenceDestructionRequest::CopyFrom(const MsgIntelligenceDestructionRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgIntelligenceDestructionRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_id()) {
    if (!this->id().IsInitialized()) return false;
  }
  return true;
}

void MsgIntelligenceDestructionRequest::Swap(MsgIntelligenceDestructionRequest* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgIntelligenceDestructionRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgIntelligenceDestructionRequest_descriptor_;
  metadata.reflection = MsgIntelligenceDestructionRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgShapeCreationRequest::kShapeFieldNumber;
#endif  // !_MSC_VER

MsgShapeCreationRequest::MsgShapeCreationRequest() {
  SharedCtor();
}

void MsgShapeCreationRequest::InitAsDefaultInstance() {
  shape_ = const_cast< ::Common::MsgShape*>(&::Common::MsgShape::default_instance());
}

MsgShapeCreationRequest::MsgShapeCreationRequest(const MsgShapeCreationRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgShapeCreationRequest::SharedCtor() {
  _cached_size_ = 0;
  shape_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgShapeCreationRequest::~MsgShapeCreationRequest() {
  SharedDtor();
}

void MsgShapeCreationRequest::SharedDtor() {
  if (this != default_instance_) {
    delete shape_;
  }
}

const ::google::protobuf::Descriptor* MsgShapeCreationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgShapeCreationRequest_descriptor_;
}

const MsgShapeCreationRequest& MsgShapeCreationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToMessenger_2eproto();  return *default_instance_;
}

MsgShapeCreationRequest* MsgShapeCreationRequest::default_instance_ = NULL;

MsgShapeCreationRequest* MsgShapeCreationRequest::New() const {
  return new MsgShapeCreationRequest;
}

void MsgShapeCreationRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (shape_ != NULL) shape_->::Common::MsgShape::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgShapeCreationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MsgShape shape = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_shape()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgShapeCreationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgShapeCreationRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MsgShape shape = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->shape(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgShapeCreationRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MsgShape shape = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->shape(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgShapeCreationRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MsgShape shape = 1;
    if (has_shape()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shape());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgShapeCreationRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgShapeCreationRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgShapeCreationRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgShapeCreationRequest::MergeFrom(const MsgShapeCreationRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_shape()->::Common::MsgShape::MergeFrom(from.shape());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgShapeCreationRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgShapeCreationRequest::CopyFrom(const MsgShapeCreationRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgShapeCreationRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_shape()) {
    if (!this->shape().IsInitialized()) return false;
  }
  return true;
}

void MsgShapeCreationRequest::Swap(MsgShapeCreationRequest* other) {
  if (other != this) {
    std::swap(shape_, other->shape_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgShapeCreationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgShapeCreationRequest_descriptor_;
  metadata.reflection = MsgShapeCreationRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgShapeUpdateRequest::_default_category_;
const ::std::string MsgShapeUpdateRequest::_default_color_;
const ::std::string MsgShapeUpdateRequest::_default_template__;
#ifndef _MSC_VER
const int MsgShapeUpdateRequest::kShapeFieldNumber;
const int MsgShapeUpdateRequest::kCategoryFieldNumber;
const int MsgShapeUpdateRequest::kColorFieldNumber;
const int MsgShapeUpdateRequest::kTemplateFieldNumber;
const int MsgShapeUpdateRequest::kPointsFieldNumber;
#endif  // !_MSC_VER

MsgShapeUpdateRequest::MsgShapeUpdateRequest() {
  SharedCtor();
}

void MsgShapeUpdateRequest::InitAsDefaultInstance() {
  shape_ = const_cast< ::Common::DrawingId*>(&::Common::DrawingId::default_instance());
  points_ = const_cast< ::Common::MsgCoordLatLongList*>(&::Common::MsgCoordLatLongList::default_instance());
}

MsgShapeUpdateRequest::MsgShapeUpdateRequest(const MsgShapeUpdateRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgShapeUpdateRequest::SharedCtor() {
  _cached_size_ = 0;
  shape_ = NULL;
  category_ = const_cast< ::std::string*>(&_default_category_);
  color_ = const_cast< ::std::string*>(&_default_color_);
  template__ = const_cast< ::std::string*>(&_default_template__);
  points_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgShapeUpdateRequest::~MsgShapeUpdateRequest() {
  SharedDtor();
}

void MsgShapeUpdateRequest::SharedDtor() {
  if (category_ != &_default_category_) {
    delete category_;
  }
  if (color_ != &_default_color_) {
    delete color_;
  }
  if (template__ != &_default_template__) {
    delete template__;
  }
  if (this != default_instance_) {
    delete shape_;
    delete points_;
  }
}

const ::google::protobuf::Descriptor* MsgShapeUpdateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgShapeUpdateRequest_descriptor_;
}

const MsgShapeUpdateRequest& MsgShapeUpdateRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToMessenger_2eproto();  return *default_instance_;
}

MsgShapeUpdateRequest* MsgShapeUpdateRequest::default_instance_ = NULL;

MsgShapeUpdateRequest* MsgShapeUpdateRequest::New() const {
  return new MsgShapeUpdateRequest;
}

void MsgShapeUpdateRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (shape_ != NULL) shape_->::Common::DrawingId::Clear();
    }
    if (_has_bit(1)) {
      if (category_ != &_default_category_) {
        category_->clear();
      }
    }
    if (_has_bit(2)) {
      if (color_ != &_default_color_) {
        color_->clear();
      }
    }
    if (_has_bit(3)) {
      if (template__ != &_default_template__) {
        template__->clear();
      }
    }
    if (_has_bit(4)) {
      if (points_ != NULL) points_->::Common::MsgCoordLatLongList::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgShapeUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.DrawingId shape = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_shape()));
        if (input->ExpectTag(18)) goto parse_category;
        break;
      }
      
      // optional string category = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_category:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_category()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->category().data(), this->category().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(26)) goto parse_color;
        break;
      }
      
      // optional string color = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_color:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_color()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->color().data(), this->color().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(34)) goto parse_template;
        break;
      }
      
      // optional string template = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_template:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_template_()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->template_().data(), this->template_().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(42)) goto parse_points;
        break;
      }
      
      // optional .Common.MsgCoordLatLongList points = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_points:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_points()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgShapeUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgShapeUpdateRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.DrawingId shape = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->shape(), output);
  }
  
  // optional string category = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->category().data(), this->category().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->category(), output);
  }
  
  // optional string color = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->color().data(), this->color().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->color(), output);
  }
  
  // optional string template = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->template_().data(), this->template_().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->template_(), output);
  }
  
  // optional .Common.MsgCoordLatLongList points = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      5, this->points(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgShapeUpdateRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.DrawingId shape = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->shape(), target);
  }
  
  // optional string category = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->category().data(), this->category().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->category(), target);
  }
  
  // optional string color = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->color().data(), this->color().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->color(), target);
  }
  
  // optional string template = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->template_().data(), this->template_().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->template_(), target);
  }
  
  // optional .Common.MsgCoordLatLongList points = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->points(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgShapeUpdateRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.DrawingId shape = 1;
    if (has_shape()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shape());
    }
    
    // optional string category = 2;
    if (has_category()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->category());
    }
    
    // optional string color = 3;
    if (has_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->color());
    }
    
    // optional string template = 4;
    if (has_template_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->template_());
    }
    
    // optional .Common.MsgCoordLatLongList points = 5;
    if (has_points()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->points());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgShapeUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgShapeUpdateRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgShapeUpdateRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgShapeUpdateRequest::MergeFrom(const MsgShapeUpdateRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_shape()->::Common::DrawingId::MergeFrom(from.shape());
    }
    if (from._has_bit(1)) {
      set_category(from.category());
    }
    if (from._has_bit(2)) {
      set_color(from.color());
    }
    if (from._has_bit(3)) {
      set_template_(from.template_());
    }
    if (from._has_bit(4)) {
      mutable_points()->::Common::MsgCoordLatLongList::MergeFrom(from.points());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgShapeUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgShapeUpdateRequest::CopyFrom(const MsgShapeUpdateRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgShapeUpdateRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_shape()) {
    if (!this->shape().IsInitialized()) return false;
  }
  if (has_points()) {
    if (!this->points().IsInitialized()) return false;
  }
  return true;
}

void MsgShapeUpdateRequest::Swap(MsgShapeUpdateRequest* other) {
  if (other != this) {
    std::swap(shape_, other->shape_);
    std::swap(category_, other->category_);
    std::swap(color_, other->color_);
    std::swap(template__, other->template__);
    std::swap(points_, other->points_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgShapeUpdateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgShapeUpdateRequest_descriptor_;
  metadata.reflection = MsgShapeUpdateRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgShapeDestructionRequest::kIdFieldNumber;
#endif  // !_MSC_VER

MsgShapeDestructionRequest::MsgShapeDestructionRequest() {
  SharedCtor();
}

void MsgShapeDestructionRequest::InitAsDefaultInstance() {
  id_ = const_cast< ::Common::DrawingId*>(&::Common::DrawingId::default_instance());
}

MsgShapeDestructionRequest::MsgShapeDestructionRequest(const MsgShapeDestructionRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgShapeDestructionRequest::SharedCtor() {
  _cached_size_ = 0;
  id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgShapeDestructionRequest::~MsgShapeDestructionRequest() {
  SharedDtor();
}

void MsgShapeDestructionRequest::SharedDtor() {
  if (this != default_instance_) {
    delete id_;
  }
}

const ::google::protobuf::Descriptor* MsgShapeDestructionRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgShapeDestructionRequest_descriptor_;
}

const MsgShapeDestructionRequest& MsgShapeDestructionRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToMessenger_2eproto();  return *default_instance_;
}

MsgShapeDestructionRequest* MsgShapeDestructionRequest::default_instance_ = NULL;

MsgShapeDestructionRequest* MsgShapeDestructionRequest::New() const {
  return new MsgShapeDestructionRequest;
}

void MsgShapeDestructionRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (id_ != NULL) id_->::Common::DrawingId::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgShapeDestructionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.DrawingId id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_id()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgShapeDestructionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgShapeDestructionRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.DrawingId id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgShapeDestructionRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.DrawingId id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgShapeDestructionRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.DrawingId id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgShapeDestructionRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgShapeDestructionRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgShapeDestructionRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgShapeDestructionRequest::MergeFrom(const MsgShapeDestructionRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_id()->::Common::DrawingId::MergeFrom(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgShapeDestructionRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgShapeDestructionRequest::CopyFrom(const MsgShapeDestructionRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgShapeDestructionRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_id()) {
    if (!this->id().IsInitialized()) return false;
  }
  return true;
}

void MsgShapeDestructionRequest::Swap(MsgShapeDestructionRequest* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgShapeDestructionRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgShapeDestructionRequest_descriptor_;
  metadata.reflection = MsgShapeDestructionRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMarkerCreationRequest::kMarkerFieldNumber;
#endif  // !_MSC_VER

MsgMarkerCreationRequest::MsgMarkerCreationRequest() {
  SharedCtor();
}

void MsgMarkerCreationRequest::InitAsDefaultInstance() {
  marker_ = const_cast< ::Common::MsgMarker*>(&::Common::MsgMarker::default_instance());
}

MsgMarkerCreationRequest::MsgMarkerCreationRequest(const MsgMarkerCreationRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMarkerCreationRequest::SharedCtor() {
  _cached_size_ = 0;
  marker_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMarkerCreationRequest::~MsgMarkerCreationRequest() {
  SharedDtor();
}

void MsgMarkerCreationRequest::SharedDtor() {
  if (this != default_instance_) {
    delete marker_;
  }
}

const ::google::protobuf::Descriptor* MsgMarkerCreationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMarkerCreationRequest_descriptor_;
}

const MsgMarkerCreationRequest& MsgMarkerCreationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToMessenger_2eproto();  return *default_instance_;
}

MsgMarkerCreationRequest* MsgMarkerCreationRequest::default_instance_ = NULL;

MsgMarkerCreationRequest* MsgMarkerCreationRequest::New() const {
  return new MsgMarkerCreationRequest;
}

void MsgMarkerCreationRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (marker_ != NULL) marker_->::Common::MsgMarker::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMarkerCreationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MsgMarker marker = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_marker()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMarkerCreationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMarkerCreationRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MsgMarker marker = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->marker(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMarkerCreationRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MsgMarker marker = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->marker(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMarkerCreationRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MsgMarker marker = 1;
    if (has_marker()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->marker());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMarkerCreationRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMarkerCreationRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMarkerCreationRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMarkerCreationRequest::MergeFrom(const MsgMarkerCreationRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_marker()->::Common::MsgMarker::MergeFrom(from.marker());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMarkerCreationRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMarkerCreationRequest::CopyFrom(const MsgMarkerCreationRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMarkerCreationRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_marker()) {
    if (!this->marker().IsInitialized()) return false;
  }
  return true;
}

void MsgMarkerCreationRequest::Swap(MsgMarkerCreationRequest* other) {
  if (other != this) {
    std::swap(marker_, other->marker_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMarkerCreationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMarkerCreationRequest_descriptor_;
  metadata.reflection = MsgMarkerCreationRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgMarkerUpdateRequest::_default_name_;
const ::std::string MsgMarkerUpdateRequest::_default_number_;
const ::std::string MsgMarkerUpdateRequest::_default_description_;
#ifndef _MSC_VER
const int MsgMarkerUpdateRequest::kMarkerFieldNumber;
const int MsgMarkerUpdateRequest::kNameFieldNumber;
const int MsgMarkerUpdateRequest::kNumberFieldNumber;
const int MsgMarkerUpdateRequest::kDescriptionFieldNumber;
const int MsgMarkerUpdateRequest::kParentFieldNumber;
#endif  // !_MSC_VER

MsgMarkerUpdateRequest::MsgMarkerUpdateRequest() {
  SharedCtor();
}

void MsgMarkerUpdateRequest::InitAsDefaultInstance() {
  marker_ = const_cast< ::Common::MarkerId*>(&::Common::MarkerId::default_instance());
  parent_ = const_cast< ::Common::MarkerId*>(&::Common::MarkerId::default_instance());
}

MsgMarkerUpdateRequest::MsgMarkerUpdateRequest(const MsgMarkerUpdateRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMarkerUpdateRequest::SharedCtor() {
  _cached_size_ = 0;
  marker_ = NULL;
  name_ = const_cast< ::std::string*>(&_default_name_);
  number_ = const_cast< ::std::string*>(&_default_number_);
  description_ = const_cast< ::std::string*>(&_default_description_);
  parent_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMarkerUpdateRequest::~MsgMarkerUpdateRequest() {
  SharedDtor();
}

void MsgMarkerUpdateRequest::SharedDtor() {
  if (name_ != &_default_name_) {
    delete name_;
  }
  if (number_ != &_default_number_) {
    delete number_;
  }
  if (description_ != &_default_description_) {
    delete description_;
  }
  if (this != default_instance_) {
    delete marker_;
    delete parent_;
  }
}

const ::google::protobuf::Descriptor* MsgMarkerUpdateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMarkerUpdateRequest_descriptor_;
}

const MsgMarkerUpdateRequest& MsgMarkerUpdateRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToMessenger_2eproto();  return *default_instance_;
}

MsgMarkerUpdateRequest* MsgMarkerUpdateRequest::default_instance_ = NULL;

MsgMarkerUpdateRequest* MsgMarkerUpdateRequest::New() const {
  return new MsgMarkerUpdateRequest;
}

void MsgMarkerUpdateRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (marker_ != NULL) marker_->::Common::MarkerId::Clear();
    }
    if (_has_bit(1)) {
      if (name_ != &_default_name_) {
        name_->clear();
      }
    }
    if (_has_bit(2)) {
      if (number_ != &_default_number_) {
        number_->clear();
      }
    }
    if (_has_bit(3)) {
      if (description_ != &_default_description_) {
        description_->clear();
      }
    }
    if (_has_bit(4)) {
      if (parent_ != NULL) parent_->::Common::MarkerId::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMarkerUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MarkerId marker = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_marker()));
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }
      
      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_name:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_name()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->name().data(), this->name().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(26)) goto parse_number;
        break;
      }
      
      // optional string number = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_number:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_number()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->number().data(), this->number().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(34)) goto parse_description;
        break;
      }
      
      // optional string description = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_description:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_description()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->description().data(), this->description().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(42)) goto parse_parent;
        break;
      }
      
      // optional .Common.MarkerId parent = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_parent:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_parent()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMarkerUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMarkerUpdateRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MarkerId marker = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->marker(), output);
  }
  
  // optional string name = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }
  
  // optional string number = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->number().data(), this->number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->number(), output);
  }
  
  // optional string description = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->description(), output);
  }
  
  // optional .Common.MarkerId parent = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      5, this->parent(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMarkerUpdateRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MarkerId marker = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->marker(), target);
  }
  
  // optional string name = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }
  
  // optional string number = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->number().data(), this->number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->number(), target);
  }
  
  // optional string description = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->description(), target);
  }
  
  // optional .Common.MarkerId parent = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->parent(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMarkerUpdateRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MarkerId marker = 1;
    if (has_marker()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->marker());
    }
    
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // optional string number = 3;
    if (has_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->number());
    }
    
    // optional string description = 4;
    if (has_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }
    
    // optional .Common.MarkerId parent = 5;
    if (has_parent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parent());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMarkerUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMarkerUpdateRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMarkerUpdateRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMarkerUpdateRequest::MergeFrom(const MsgMarkerUpdateRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_marker()->::Common::MarkerId::MergeFrom(from.marker());
    }
    if (from._has_bit(1)) {
      set_name(from.name());
    }
    if (from._has_bit(2)) {
      set_number(from.number());
    }
    if (from._has_bit(3)) {
      set_description(from.description());
    }
    if (from._has_bit(4)) {
      mutable_parent()->::Common::MarkerId::MergeFrom(from.parent());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMarkerUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMarkerUpdateRequest::CopyFrom(const MsgMarkerUpdateRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMarkerUpdateRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_marker()) {
    if (!this->marker().IsInitialized()) return false;
  }
  if (has_parent()) {
    if (!this->parent().IsInitialized()) return false;
  }
  return true;
}

void MsgMarkerUpdateRequest::Swap(MsgMarkerUpdateRequest* other) {
  if (other != this) {
    std::swap(marker_, other->marker_);
    std::swap(name_, other->name_);
    std::swap(number_, other->number_);
    std::swap(description_, other->description_);
    std::swap(parent_, other->parent_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMarkerUpdateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMarkerUpdateRequest_descriptor_;
  metadata.reflection = MsgMarkerUpdateRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMarkerDestructionRequest::kMarkerFieldNumber;
const int MsgMarkerDestructionRequest::kDeleteAllFieldNumber;
#endif  // !_MSC_VER

MsgMarkerDestructionRequest::MsgMarkerDestructionRequest() {
  SharedCtor();
}

void MsgMarkerDestructionRequest::InitAsDefaultInstance() {
  marker_ = const_cast< ::Common::MarkerId*>(&::Common::MarkerId::default_instance());
}

MsgMarkerDestructionRequest::MsgMarkerDestructionRequest(const MsgMarkerDestructionRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMarkerDestructionRequest::SharedCtor() {
  _cached_size_ = 0;
  marker_ = NULL;
  delete_all_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMarkerDestructionRequest::~MsgMarkerDestructionRequest() {
  SharedDtor();
}

void MsgMarkerDestructionRequest::SharedDtor() {
  if (this != default_instance_) {
    delete marker_;
  }
}

const ::google::protobuf::Descriptor* MsgMarkerDestructionRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMarkerDestructionRequest_descriptor_;
}

const MsgMarkerDestructionRequest& MsgMarkerDestructionRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToMessenger_2eproto();  return *default_instance_;
}

MsgMarkerDestructionRequest* MsgMarkerDestructionRequest::default_instance_ = NULL;

MsgMarkerDestructionRequest* MsgMarkerDestructionRequest::New() const {
  return new MsgMarkerDestructionRequest;
}

void MsgMarkerDestructionRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (marker_ != NULL) marker_->::Common::MarkerId::Clear();
    }
    delete_all_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMarkerDestructionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MarkerId marker = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_marker()));
        if (input->ExpectTag(16)) goto parse_delete_all;
        break;
      }
      
      // required bool delete_all = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_delete_all:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &delete_all_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMarkerDestructionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMarkerDestructionRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MarkerId marker = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->marker(), output);
  }
  
  // required bool delete_all = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->delete_all(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMarkerDestructionRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MarkerId marker = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->marker(), target);
  }
  
  // required bool delete_all = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->delete_all(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMarkerDestructionRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MarkerId marker = 1;
    if (has_marker()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->marker());
    }
    
    // required bool delete_all = 2;
    if (has_delete_all()) {
      total_size += 1 + 1;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMarkerDestructionRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMarkerDestructionRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMarkerDestructionRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMarkerDestructionRequest::MergeFrom(const MsgMarkerDestructionRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_marker()->::Common::MarkerId::MergeFrom(from.marker());
    }
    if (from._has_bit(1)) {
      set_delete_all(from.delete_all());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMarkerDestructionRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMarkerDestructionRequest::CopyFrom(const MsgMarkerDestructionRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMarkerDestructionRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_marker()) {
    if (!this->marker().IsInitialized()) return false;
  }
  return true;
}

void MsgMarkerDestructionRequest::Swap(MsgMarkerDestructionRequest* other) {
  if (other != this) {
    std::swap(marker_, other->marker_);
    std::swap(delete_all_, other->delete_all_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMarkerDestructionRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMarkerDestructionRequest_descriptor_;
  metadata.reflection = MsgMarkerDestructionRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgClientObjectCreationRequest::_default_name_;
#ifndef _MSC_VER
const int MsgClientObjectCreationRequest::kNameFieldNumber;
const int MsgClientObjectCreationRequest::kPropertiesFieldNumber;
const int MsgClientObjectCreationRequest::kPersistentFieldNumber;
#endif  // !_MSC_VER

MsgClientObjectCreationRequest::MsgClientObjectCreationRequest() {
  SharedCtor();
}

void MsgClientObjectCreationRequest::InitAsDefaultInstance() {
}

MsgClientObjectCreationRequest::MsgClientObjectCreationRequest(const MsgClientObjectCreationRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgClientObjectCreationRequest::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&_default_name_);
  persistent_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgClientObjectCreationRequest::~MsgClientObjectCreationRequest() {
  SharedDtor();
}

void MsgClientObjectCreationRequest::SharedDtor() {
  if (name_ != &_default_name_) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgClientObjectCreationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgClientObjectCreationRequest_descriptor_;
}

const MsgClientObjectCreationRequest& MsgClientObjectCreationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToMessenger_2eproto();  return *default_instance_;
}

MsgClientObjectCreationRequest* MsgClientObjectCreationRequest::default_instance_ = NULL;

MsgClientObjectCreationRequest* MsgClientObjectCreationRequest::New() const {
  return new MsgClientObjectCreationRequest;
}

void MsgClientObjectCreationRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (name_ != &_default_name_) {
        name_->clear();
      }
    }
    persistent_ = false;
  }
  properties_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgClientObjectCreationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_name()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->name().data(), this->name().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(18)) goto parse_properties;
        break;
      }
      
      // repeated .Common.ClientObjectProperty properties = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_properties:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_properties()));
        if (input->ExpectTag(18)) goto parse_properties;
        if (input->ExpectTag(24)) goto parse_persistent;
        break;
      }
      
      // optional bool persistent = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_persistent:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &persistent_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgClientObjectCreationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgClientObjectCreationRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional string name = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }
  
  // repeated .Common.ClientObjectProperty properties = 2;
  for (int i = 0; i < this->properties_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->properties(i), output);
  }
  
  // optional bool persistent = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->persistent(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgClientObjectCreationRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string name = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }
  
  // repeated .Common.ClientObjectProperty properties = 2;
  for (int i = 0; i < this->properties_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->properties(i), target);
  }
  
  // optional bool persistent = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->persistent(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgClientObjectCreationRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // optional bool persistent = 3;
    if (has_persistent()) {
      total_size += 1 + 1;
    }
    
  }
  // repeated .Common.ClientObjectProperty properties = 2;
  total_size += 1 * this->properties_size();
  for (int i = 0; i < this->properties_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->properties(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgClientObjectCreationRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgClientObjectCreationRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgClientObjectCreationRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgClientObjectCreationRequest::MergeFrom(const MsgClientObjectCreationRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  properties_.MergeFrom(from.properties_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_name(from.name());
    }
    if (from._has_bit(2)) {
      set_persistent(from.persistent());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgClientObjectCreationRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgClientObjectCreationRequest::CopyFrom(const MsgClientObjectCreationRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgClientObjectCreationRequest::IsInitialized() const {
  
  for (int i = 0; i < properties_size(); i++) {
    if (!this->properties(i).IsInitialized()) return false;
  }
  return true;
}

void MsgClientObjectCreationRequest::Swap(MsgClientObjectCreationRequest* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    properties_.Swap(&other->properties_);
    std::swap(persistent_, other->persistent_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgClientObjectCreationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgClientObjectCreationRequest_descriptor_;
  metadata.reflection = MsgClientObjectCreationRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgClientObjectUpdateRequest::_default_name_;
#ifndef _MSC_VER
const int MsgClientObjectUpdateRequest::kObjectFieldNumber;
const int MsgClientObjectUpdateRequest::kNameFieldNumber;
const int MsgClientObjectUpdateRequest::kPropertiesFieldNumber;
#endif  // !_MSC_VER

MsgClientObjectUpdateRequest::MsgClientObjectUpdateRequest() {
  SharedCtor();
}

void MsgClientObjectUpdateRequest::InitAsDefaultInstance() {
  object_ = const_cast< ::Common::ClientObjectId*>(&::Common::ClientObjectId::default_instance());
}

MsgClientObjectUpdateRequest::MsgClientObjectUpdateRequest(const MsgClientObjectUpdateRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgClientObjectUpdateRequest::SharedCtor() {
  _cached_size_ = 0;
  object_ = NULL;
  name_ = const_cast< ::std::string*>(&_default_name_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgClientObjectUpdateRequest::~MsgClientObjectUpdateRequest() {
  SharedDtor();
}

void MsgClientObjectUpdateRequest::SharedDtor() {
  if (name_ != &_default_name_) {
    delete name_;
  }
  if (this != default_instance_) {
    delete object_;
  }
}

const ::google::protobuf::Descriptor* MsgClientObjectUpdateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgClientObjectUpdateRequest_descriptor_;
}

const MsgClientObjectUpdateRequest& MsgClientObjectUpdateRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToMessenger_2eproto();  return *default_instance_;
}

MsgClientObjectUpdateRequest* MsgClientObjectUpdateRequest::default_instance_ = NULL;

MsgClientObjectUpdateRequest* MsgClientObjectUpdateRequest::New() const {
  return new MsgClientObjectUpdateRequest;
}

void MsgClientObjectUpdateRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (object_ != NULL) object_->::Common::ClientObjectId::Clear();
    }
    if (_has_bit(1)) {
      if (name_ != &_default_name_) {
        name_->clear();
      }
    }
  }
  properties_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgClientObjectUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.ClientObjectId object = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_object()));
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }
      
      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_name:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_name()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->name().data(), this->name().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(26)) goto parse_properties;
        break;
      }
      
      // repeated .Common.ClientObjectProperty properties = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_properties:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_properties()));
        if (input->ExpectTag(26)) goto parse_properties;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgClientObjectUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgClientObjectUpdateRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.ClientObjectId object = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->object(), output);
  }
  
  // optional string name = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }
  
  // repeated .Common.ClientObjectProperty properties = 3;
  for (int i = 0; i < this->properties_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->properties(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgClientObjectUpdateRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.ClientObjectId object = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->object(), target);
  }
  
  // optional string name = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }
  
  // repeated .Common.ClientObjectProperty properties = 3;
  for (int i = 0; i < this->properties_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->properties(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgClientObjectUpdateRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.ClientObjectId object = 1;
    if (has_object()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->object());
    }
    
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
  }
  // repeated .Common.ClientObjectProperty properties = 3;
  total_size += 1 * this->properties_size();
  for (int i = 0; i < this->properties_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->properties(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgClientObjectUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgClientObjectUpdateRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgClientObjectUpdateRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgClientObjectUpdateRequest::MergeFrom(const MsgClientObjectUpdateRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  properties_.MergeFrom(from.properties_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_object()->::Common::ClientObjectId::MergeFrom(from.object());
    }
    if (from._has_bit(1)) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgClientObjectUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgClientObjectUpdateRequest::CopyFrom(const MsgClientObjectUpdateRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgClientObjectUpdateRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_object()) {
    if (!this->object().IsInitialized()) return false;
  }
  for (int i = 0; i < properties_size(); i++) {
    if (!this->properties(i).IsInitialized()) return false;
  }
  return true;
}

void MsgClientObjectUpdateRequest::Swap(MsgClientObjectUpdateRequest* other) {
  if (other != this) {
    std::swap(object_, other->object_);
    std::swap(name_, other->name_);
    properties_.Swap(&other->properties_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgClientObjectUpdateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgClientObjectUpdateRequest_descriptor_;
  metadata.reflection = MsgClientObjectUpdateRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgClientObjectDestructionRequest::kObjectFieldNumber;
#endif  // !_MSC_VER

MsgClientObjectDestructionRequest::MsgClientObjectDestructionRequest() {
  SharedCtor();
}

void MsgClientObjectDestructionRequest::InitAsDefaultInstance() {
  object_ = const_cast< ::Common::ClientObjectId*>(&::Common::ClientObjectId::default_instance());
}

MsgClientObjectDestructionRequest::MsgClientObjectDestructionRequest(const MsgClientObjectDestructionRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgClientObjectDestructionRequest::SharedCtor() {
  _cached_size_ = 0;
  object_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgClientObjectDestructionRequest::~MsgClientObjectDestructionRequest() {
  SharedDtor();
}

void MsgClientObjectDestructionRequest::SharedDtor() {
  if (this != default_instance_) {
    delete object_;
  }
}

const ::google::protobuf::Descriptor* MsgClientObjectDestructionRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgClientObjectDestructionRequest_descriptor_;
}

const MsgClientObjectDestructionRequest& MsgClientObjectDestructionRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToMessenger_2eproto();  return *default_instance_;
}

MsgClientObjectDestructionRequest* MsgClientObjectDestructionRequest::default_instance_ = NULL;

MsgClientObjectDestructionRequest* MsgClientObjectDestructionRequest::New() const {
  return new MsgClientObjectDestructionRequest;
}

void MsgClientObjectDestructionRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (object_ != NULL) object_->::Common::ClientObjectId::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgClientObjectDestructionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.ClientObjectId object = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_object()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgClientObjectDestructionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgClientObjectDestructionRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.ClientObjectId object = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->object(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgClientObjectDestructionRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.ClientObjectId object = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->object(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgClientObjectDestructionRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.ClientObjectId object = 1;
    if (has_object()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->object());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgClientObjectDestructionRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgClientObjectDestructionRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgClientObjectDestructionRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgClientObjectDestructionRequest::MergeFrom(const MsgClientObjectDestructionRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_object()->::Common::ClientObjectId::MergeFrom(from.object());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgClientObjectDestructionRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgClientObjectDestructionRequest::CopyFrom(const MsgClientObjectDestructionRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgClientObjectDestructionRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_object()) {
    if (!this->object().IsInitialized()) return false;
  }
  return true;
}

void MsgClientObjectDestructionRequest::Swap(MsgClientObjectDestructionRequest* other) {
  if (other != this) {
    std::swap(object_, other->object_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgClientObjectDestructionRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgClientObjectDestructionRequest_descriptor_;
  metadata.reflection = MsgClientObjectDestructionRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgClientToMessenger_Content::kLimitCreationRequestFieldNumber;
const int MsgClientToMessenger_Content::kLimitDestructionRequestFieldNumber;
const int MsgClientToMessenger_Content::kLimitUpdateRequestFieldNumber;
const int MsgClientToMessenger_Content::kLimaCreationRequestFieldNumber;
const int MsgClientToMessenger_Content::kLimaDestructionRequestFieldNumber;
const int MsgClientToMessenger_Content::kLimaUpdateRequestFieldNumber;
const int MsgClientToMessenger_Content::kIntelligenceCreationRequestFieldNumber;
const int MsgClientToMessenger_Content::kIntelligenceUpdateRequestFieldNumber;
const int MsgClientToMessenger_Content::kIntelligenceDestructionRequestFieldNumber;
const int MsgClientToMessenger_Content::kShapeCreationRequestFieldNumber;
const int MsgClientToMessenger_Content::kShapeDestructionRequestFieldNumber;
const int MsgClientToMessenger_Content::kShapeUpdateRequestFieldNumber;
const int MsgClientToMessenger_Content::kTextMessageFieldNumber;
const int MsgClientToMessenger_Content::kMarkerCreationRequestFieldNumber;
const int MsgClientToMessenger_Content::kMarkerUpdateRequestFieldNumber;
const int MsgClientToMessenger_Content::kMarkerDestructionRequestFieldNumber;
const int MsgClientToMessenger_Content::kClientObjectCreationRequestFieldNumber;
const int MsgClientToMessenger_Content::kClientObjectUpdateRequestFieldNumber;
const int MsgClientToMessenger_Content::kClientObjectDestructionRequestFieldNumber;
#endif  // !_MSC_VER

MsgClientToMessenger_Content::MsgClientToMessenger_Content() {
  SharedCtor();
}

void MsgClientToMessenger_Content::InitAsDefaultInstance() {
  limit_creation_request_ = const_cast< ::MsgsClientToMessenger::MsgLimitCreationRequest*>(&::MsgsClientToMessenger::MsgLimitCreationRequest::default_instance());
  limit_destruction_request_ = const_cast< ::MsgsClientToMessenger::MsgLimitDestructionRequest*>(&::MsgsClientToMessenger::MsgLimitDestructionRequest::default_instance());
  limit_update_request_ = const_cast< ::MsgsClientToMessenger::MsgLimitUpdateRequest*>(&::MsgsClientToMessenger::MsgLimitUpdateRequest::default_instance());
  lima_creation_request_ = const_cast< ::MsgsClientToMessenger::MsgLimaCreationRequest*>(&::MsgsClientToMessenger::MsgLimaCreationRequest::default_instance());
  lima_destruction_request_ = const_cast< ::MsgsClientToMessenger::MsgLimaDestructionRequest*>(&::MsgsClientToMessenger::MsgLimaDestructionRequest::default_instance());
  lima_update_request_ = const_cast< ::MsgsClientToMessenger::MsgLimaUpdateRequest*>(&::MsgsClientToMessenger::MsgLimaUpdateRequest::default_instance());
  intelligence_creation_request_ = const_cast< ::MsgsClientToMessenger::MsgIntelligenceCreationRequest*>(&::MsgsClientToMessenger::MsgIntelligenceCreationRequest::default_instance());
  intelligence_update_request_ = const_cast< ::MsgsClientToMessenger::MsgIntelligenceUpdateRequest*>(&::MsgsClientToMessenger::MsgIntelligenceUpdateRequest::default_instance());
  intelligence_destruction_request_ = const_cast< ::MsgsClientToMessenger::MsgIntelligenceDestructionRequest*>(&::MsgsClientToMessenger::MsgIntelligenceDestructionRequest::default_instance());
  shape_creation_request_ = const_cast< ::MsgsClientToMessenger::MsgShapeCreationRequest*>(&::MsgsClientToMessenger::MsgShapeCreationRequest::default_instance());
  shape_destruction_request_ = const_cast< ::MsgsClientToMessenger::MsgShapeDestructionRequest*>(&::MsgsClientToMessenger::MsgShapeDestructionRequest::default_instance());
  shape_update_request_ = const_cast< ::MsgsClientToMessenger::MsgShapeUpdateRequest*>(&::MsgsClientToMessenger::MsgShapeUpdateRequest::default_instance());
  text_message_ = const_cast< ::Common::MsgTextMessage*>(&::Common::MsgTextMessage::default_instance());
  marker_creation_request_ = const_cast< ::MsgsClientToMessenger::MsgMarkerCreationRequest*>(&::MsgsClientToMessenger::MsgMarkerCreationRequest::default_instance());
  marker_update_request_ = const_cast< ::MsgsClientToMessenger::MsgMarkerUpdateRequest*>(&::MsgsClientToMessenger::MsgMarkerUpdateRequest::default_instance());
  marker_destruction_request_ = const_cast< ::MsgsClientToMessenger::MsgMarkerDestructionRequest*>(&::MsgsClientToMessenger::MsgMarkerDestructionRequest::default_instance());
  client_object_creation_request_ = const_cast< ::MsgsClientToMessenger::MsgClientObjectCreationRequest*>(&::MsgsClientToMessenger::MsgClientObjectCreationRequest::default_instance());
  client_object_update_request_ = const_cast< ::MsgsClientToMessenger::MsgClientObjectUpdateRequest*>(&::MsgsClientToMessenger::MsgClientObjectUpdateRequest::default_instance());
  client_object_destruction_request_ = const_cast< ::MsgsClientToMessenger::MsgClientObjectDestructionRequest*>(&::MsgsClientToMessenger::MsgClientObjectDestructionRequest::default_instance());
}

MsgClientToMessenger_Content::MsgClientToMessenger_Content(const MsgClientToMessenger_Content& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgClientToMessenger_Content::SharedCtor() {
  _cached_size_ = 0;
  limit_creation_request_ = NULL;
  limit_destruction_request_ = NULL;
  limit_update_request_ = NULL;
  lima_creation_request_ = NULL;
  lima_destruction_request_ = NULL;
  lima_update_request_ = NULL;
  intelligence_creation_request_ = NULL;
  intelligence_update_request_ = NULL;
  intelligence_destruction_request_ = NULL;
  shape_creation_request_ = NULL;
  shape_destruction_request_ = NULL;
  shape_update_request_ = NULL;
  text_message_ = NULL;
  marker_creation_request_ = NULL;
  marker_update_request_ = NULL;
  marker_destruction_request_ = NULL;
  client_object_creation_request_ = NULL;
  client_object_update_request_ = NULL;
  client_object_destruction_request_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgClientToMessenger_Content::~MsgClientToMessenger_Content() {
  SharedDtor();
}

void MsgClientToMessenger_Content::SharedDtor() {
  if (this != default_instance_) {
    delete limit_creation_request_;
    delete limit_destruction_request_;
    delete limit_update_request_;
    delete lima_creation_request_;
    delete lima_destruction_request_;
    delete lima_update_request_;
    delete intelligence_creation_request_;
    delete intelligence_update_request_;
    delete intelligence_destruction_request_;
    delete shape_creation_request_;
    delete shape_destruction_request_;
    delete shape_update_request_;
    delete text_message_;
    delete marker_creation_request_;
    delete marker_update_request_;
    delete marker_destruction_request_;
    delete client_object_creation_request_;
    delete client_object_update_request_;
    delete client_object_destruction_request_;
  }
}

const ::google::protobuf::Descriptor* MsgClientToMessenger_Content::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgClientToMessenger_Content_descriptor_;
}

const MsgClientToMessenger_Content& MsgClientToMessenger_Content::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToMessenger_2eproto();  return *default_instance_;
}

MsgClientToMessenger_Content* MsgClientToMessenger_Content::default_instance_ = NULL;

MsgClientToMessenger_Content* MsgClientToMessenger_Content::New() const {
  return new MsgClientToMessenger_Content;
}

void MsgClientToMessenger_Content::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (limit_creation_request_ != NULL) limit_creation_request_->::MsgsClientToMessenger::MsgLimitCreationRequest::Clear();
    }
    if (_has_bit(1)) {
      if (limit_destruction_request_ != NULL) limit_destruction_request_->::MsgsClientToMessenger::MsgLimitDestructionRequest::Clear();
    }
    if (_has_bit(2)) {
      if (limit_update_request_ != NULL) limit_update_request_->::MsgsClientToMessenger::MsgLimitUpdateRequest::Clear();
    }
    if (_has_bit(3)) {
      if (lima_creation_request_ != NULL) lima_creation_request_->::MsgsClientToMessenger::MsgLimaCreationRequest::Clear();
    }
    if (_has_bit(4)) {
      if (lima_destruction_request_ != NULL) lima_destruction_request_->::MsgsClientToMessenger::MsgLimaDestructionRequest::Clear();
    }
    if (_has_bit(5)) {
      if (lima_update_request_ != NULL) lima_update_request_->::MsgsClientToMessenger::MsgLimaUpdateRequest::Clear();
    }
    if (_has_bit(6)) {
      if (intelligence_creation_request_ != NULL) intelligence_creation_request_->::MsgsClientToMessenger::MsgIntelligenceCreationRequest::Clear();
    }
    if (_has_bit(7)) {
      if (intelligence_update_request_ != NULL) intelligence_update_request_->::MsgsClientToMessenger::MsgIntelligenceUpdateRequest::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (_has_bit(8)) {
      if (intelligence_destruction_request_ != NULL) intelligence_destruction_request_->::MsgsClientToMessenger::MsgIntelligenceDestructionRequest::Clear();
    }
    if (_has_bit(9)) {
      if (shape_creation_request_ != NULL) shape_creation_request_->::MsgsClientToMessenger::MsgShapeCreationRequest::Clear();
    }
    if (_has_bit(10)) {
      if (shape_destruction_request_ != NULL) shape_destruction_request_->::MsgsClientToMessenger::MsgShapeDestructionRequest::Clear();
    }
    if (_has_bit(11)) {
      if (shape_update_request_ != NULL) shape_update_request_->::MsgsClientToMessenger::MsgShapeUpdateRequest::Clear();
    }
    if (_has_bit(12)) {
      if (text_message_ != NULL) text_message_->::Common::MsgTextMessage::Clear();
    }
    if (_has_bit(13)) {
      if (marker_creation_request_ != NULL) marker_creation_request_->::MsgsClientToMessenger::MsgMarkerCreationRequest::Clear();
    }
    if (_has_bit(14)) {
      if (marker_update_request_ != NULL) marker_update_request_->::MsgsClientToMessenger::MsgMarkerUpdateRequest::Clear();
    }
    if (_has_bit(15)) {
      if (marker_destruction_request_ != NULL) marker_destruction_request_->::MsgsClientToMessenger::MsgMarkerDestructionRequest::Clear();
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (_has_bit(16)) {
      if (client_object_creation_request_ != NULL) client_object_creation_request_->::MsgsClientToMessenger::MsgClientObjectCreationRequest::Clear();
    }
    if (_has_bit(17)) {
      if (client_object_update_request_ != NULL) client_object_update_request_->::MsgsClientToMessenger::MsgClientObjectUpdateRequest::Clear();
    }
    if (_has_bit(18)) {
      if (client_object_destruction_request_ != NULL) client_object_destruction_request_->::MsgsClientToMessenger::MsgClientObjectDestructionRequest::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgClientToMessenger_Content::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgsClientToMessenger.MsgLimitCreationRequest limit_creation_request = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_limit_creation_request()));
        if (input->ExpectTag(18)) goto parse_limit_destruction_request;
        break;
      }
      
      // optional .MsgsClientToMessenger.MsgLimitDestructionRequest limit_destruction_request = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_limit_destruction_request:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_limit_destruction_request()));
        if (input->ExpectTag(26)) goto parse_limit_update_request;
        break;
      }
      
      // optional .MsgsClientToMessenger.MsgLimitUpdateRequest limit_update_request = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_limit_update_request:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_limit_update_request()));
        if (input->ExpectTag(34)) goto parse_lima_creation_request;
        break;
      }
      
      // optional .MsgsClientToMessenger.MsgLimaCreationRequest lima_creation_request = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_lima_creation_request:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_lima_creation_request()));
        if (input->ExpectTag(42)) goto parse_lima_destruction_request;
        break;
      }
      
      // optional .MsgsClientToMessenger.MsgLimaDestructionRequest lima_destruction_request = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_lima_destruction_request:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_lima_destruction_request()));
        if (input->ExpectTag(50)) goto parse_lima_update_request;
        break;
      }
      
      // optional .MsgsClientToMessenger.MsgLimaUpdateRequest lima_update_request = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_lima_update_request:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_lima_update_request()));
        if (input->ExpectTag(58)) goto parse_intelligence_creation_request;
        break;
      }
      
      // optional .MsgsClientToMessenger.MsgIntelligenceCreationRequest intelligence_creation_request = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_intelligence_creation_request:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_intelligence_creation_request()));
        if (input->ExpectTag(66)) goto parse_intelligence_update_request;
        break;
      }
      
      // optional .MsgsClientToMessenger.MsgIntelligenceUpdateRequest intelligence_update_request = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_intelligence_update_request:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_intelligence_update_request()));
        if (input->ExpectTag(74)) goto parse_intelligence_destruction_request;
        break;
      }
      
      // optional .MsgsClientToMessenger.MsgIntelligenceDestructionRequest intelligence_destruction_request = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_intelligence_destruction_request:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_intelligence_destruction_request()));
        if (input->ExpectTag(82)) goto parse_shape_creation_request;
        break;
      }
      
      // optional .MsgsClientToMessenger.MsgShapeCreationRequest shape_creation_request = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_shape_creation_request:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_shape_creation_request()));
        if (input->ExpectTag(90)) goto parse_shape_destruction_request;
        break;
      }
      
      // optional .MsgsClientToMessenger.MsgShapeDestructionRequest shape_destruction_request = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_shape_destruction_request:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_shape_destruction_request()));
        if (input->ExpectTag(98)) goto parse_shape_update_request;
        break;
      }
      
      // optional .MsgsClientToMessenger.MsgShapeUpdateRequest shape_update_request = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_shape_update_request:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_shape_update_request()));
        if (input->ExpectTag(106)) goto parse_text_message;
        break;
      }
      
      // optional .Common.MsgTextMessage text_message = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_text_message:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_text_message()));
        if (input->ExpectTag(114)) goto parse_marker_creation_request;
        break;
      }
      
      // optional .MsgsClientToMessenger.MsgMarkerCreationRequest marker_creation_request = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_marker_creation_request:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_marker_creation_request()));
        if (input->ExpectTag(122)) goto parse_marker_update_request;
        break;
      }
      
      // optional .MsgsClientToMessenger.MsgMarkerUpdateRequest marker_update_request = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_marker_update_request:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_marker_update_request()));
        if (input->ExpectTag(130)) goto parse_marker_destruction_request;
        break;
      }
      
      // optional .MsgsClientToMessenger.MsgMarkerDestructionRequest marker_destruction_request = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_marker_destruction_request:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_marker_destruction_request()));
        if (input->ExpectTag(138)) goto parse_client_object_creation_request;
        break;
      }
      
      // optional .MsgsClientToMessenger.MsgClientObjectCreationRequest client_object_creation_request = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_client_object_creation_request:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_client_object_creation_request()));
        if (input->ExpectTag(146)) goto parse_client_object_update_request;
        break;
      }
      
      // optional .MsgsClientToMessenger.MsgClientObjectUpdateRequest client_object_update_request = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_client_object_update_request:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_client_object_update_request()));
        if (input->ExpectTag(154)) goto parse_client_object_destruction_request;
        break;
      }
      
      // optional .MsgsClientToMessenger.MsgClientObjectDestructionRequest client_object_destruction_request = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_client_object_destruction_request:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_client_object_destruction_request()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgClientToMessenger_Content::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgClientToMessenger_Content::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .MsgsClientToMessenger.MsgLimitCreationRequest limit_creation_request = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->limit_creation_request(), output);
  }
  
  // optional .MsgsClientToMessenger.MsgLimitDestructionRequest limit_destruction_request = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->limit_destruction_request(), output);
  }
  
  // optional .MsgsClientToMessenger.MsgLimitUpdateRequest limit_update_request = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->limit_update_request(), output);
  }
  
  // optional .MsgsClientToMessenger.MsgLimaCreationRequest lima_creation_request = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      4, this->lima_creation_request(), output);
  }
  
  // optional .MsgsClientToMessenger.MsgLimaDestructionRequest lima_destruction_request = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      5, this->lima_destruction_request(), output);
  }
  
  // optional .MsgsClientToMessenger.MsgLimaUpdateRequest lima_update_request = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      6, this->lima_update_request(), output);
  }
  
  // optional .MsgsClientToMessenger.MsgIntelligenceCreationRequest intelligence_creation_request = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      7, this->intelligence_creation_request(), output);
  }
  
  // optional .MsgsClientToMessenger.MsgIntelligenceUpdateRequest intelligence_update_request = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      8, this->intelligence_update_request(), output);
  }
  
  // optional .MsgsClientToMessenger.MsgIntelligenceDestructionRequest intelligence_destruction_request = 9;
  if (_has_bit(8)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      9, this->intelligence_destruction_request(), output);
  }
  
  // optional .MsgsClientToMessenger.MsgShapeCreationRequest shape_creation_request = 10;
  if (_has_bit(9)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      10, this->shape_creation_request(), output);
  }
  
  // optional .MsgsClientToMessenger.MsgShapeDestructionRequest shape_destruction_request = 11;
  if (_has_bit(10)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      11, this->shape_destruction_request(), output);
  }
  
  // optional .MsgsClientToMessenger.MsgShapeUpdateRequest shape_update_request = 12;
  if (_has_bit(11)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      12, this->shape_update_request(), output);
  }
  
  // optional .Common.MsgTextMessage text_message = 13;
  if (_has_bit(12)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      13, this->text_message(), output);
  }
  
  // optional .MsgsClientToMessenger.MsgMarkerCreationRequest marker_creation_request = 14;
  if (_has_bit(13)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      14, this->marker_creation_request(), output);
  }
  
  // optional .MsgsClientToMessenger.MsgMarkerUpdateRequest marker_update_request = 15;
  if (_has_bit(14)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      15, this->marker_update_request(), output);
  }
  
  // optional .MsgsClientToMessenger.MsgMarkerDestructionRequest marker_destruction_request = 16;
  if (_has_bit(15)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      16, this->marker_destruction_request(), output);
  }
  
  // optional .MsgsClientToMessenger.MsgClientObjectCreationRequest client_object_creation_request = 17;
  if (_has_bit(16)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      17, this->client_object_creation_request(), output);
  }
  
  // optional .MsgsClientToMessenger.MsgClientObjectUpdateRequest client_object_update_request = 18;
  if (_has_bit(17)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      18, this->client_object_update_request(), output);
  }
  
  // optional .MsgsClientToMessenger.MsgClientObjectDestructionRequest client_object_destruction_request = 19;
  if (_has_bit(18)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      19, this->client_object_destruction_request(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgClientToMessenger_Content::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .MsgsClientToMessenger.MsgLimitCreationRequest limit_creation_request = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->limit_creation_request(), target);
  }
  
  // optional .MsgsClientToMessenger.MsgLimitDestructionRequest limit_destruction_request = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->limit_destruction_request(), target);
  }
  
  // optional .MsgsClientToMessenger.MsgLimitUpdateRequest limit_update_request = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->limit_update_request(), target);
  }
  
  // optional .MsgsClientToMessenger.MsgLimaCreationRequest lima_creation_request = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->lima_creation_request(), target);
  }
  
  // optional .MsgsClientToMessenger.MsgLimaDestructionRequest lima_destruction_request = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->lima_destruction_request(), target);
  }
  
  // optional .MsgsClientToMessenger.MsgLimaUpdateRequest lima_update_request = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->lima_update_request(), target);
  }
  
  // optional .MsgsClientToMessenger.MsgIntelligenceCreationRequest intelligence_creation_request = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->intelligence_creation_request(), target);
  }
  
  // optional .MsgsClientToMessenger.MsgIntelligenceUpdateRequest intelligence_update_request = 8;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->intelligence_update_request(), target);
  }
  
  // optional .MsgsClientToMessenger.MsgIntelligenceDestructionRequest intelligence_destruction_request = 9;
  if (_has_bit(8)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->intelligence_destruction_request(), target);
  }
  
  // optional .MsgsClientToMessenger.MsgShapeCreationRequest shape_creation_request = 10;
  if (_has_bit(9)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->shape_creation_request(), target);
  }
  
  // optional .MsgsClientToMessenger.MsgShapeDestructionRequest shape_destruction_request = 11;
  if (_has_bit(10)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->shape_destruction_request(), target);
  }
  
  // optional .MsgsClientToMessenger.MsgShapeUpdateRequest shape_update_request = 12;
  if (_has_bit(11)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->shape_update_request(), target);
  }
  
  // optional .Common.MsgTextMessage text_message = 13;
  if (_has_bit(12)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->text_message(), target);
  }
  
  // optional .MsgsClientToMessenger.MsgMarkerCreationRequest marker_creation_request = 14;
  if (_has_bit(13)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->marker_creation_request(), target);
  }
  
  // optional .MsgsClientToMessenger.MsgMarkerUpdateRequest marker_update_request = 15;
  if (_has_bit(14)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->marker_update_request(), target);
  }
  
  // optional .MsgsClientToMessenger.MsgMarkerDestructionRequest marker_destruction_request = 16;
  if (_has_bit(15)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->marker_destruction_request(), target);
  }
  
  // optional .MsgsClientToMessenger.MsgClientObjectCreationRequest client_object_creation_request = 17;
  if (_has_bit(16)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->client_object_creation_request(), target);
  }
  
  // optional .MsgsClientToMessenger.MsgClientObjectUpdateRequest client_object_update_request = 18;
  if (_has_bit(17)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->client_object_update_request(), target);
  }
  
  // optional .MsgsClientToMessenger.MsgClientObjectDestructionRequest client_object_destruction_request = 19;
  if (_has_bit(18)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->client_object_destruction_request(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgClientToMessenger_Content::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgsClientToMessenger.MsgLimitCreationRequest limit_creation_request = 1;
    if (has_limit_creation_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->limit_creation_request());
    }
    
    // optional .MsgsClientToMessenger.MsgLimitDestructionRequest limit_destruction_request = 2;
    if (has_limit_destruction_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->limit_destruction_request());
    }
    
    // optional .MsgsClientToMessenger.MsgLimitUpdateRequest limit_update_request = 3;
    if (has_limit_update_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->limit_update_request());
    }
    
    // optional .MsgsClientToMessenger.MsgLimaCreationRequest lima_creation_request = 4;
    if (has_lima_creation_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->lima_creation_request());
    }
    
    // optional .MsgsClientToMessenger.MsgLimaDestructionRequest lima_destruction_request = 5;
    if (has_lima_destruction_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->lima_destruction_request());
    }
    
    // optional .MsgsClientToMessenger.MsgLimaUpdateRequest lima_update_request = 6;
    if (has_lima_update_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->lima_update_request());
    }
    
    // optional .MsgsClientToMessenger.MsgIntelligenceCreationRequest intelligence_creation_request = 7;
    if (has_intelligence_creation_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intelligence_creation_request());
    }
    
    // optional .MsgsClientToMessenger.MsgIntelligenceUpdateRequest intelligence_update_request = 8;
    if (has_intelligence_update_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intelligence_update_request());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .MsgsClientToMessenger.MsgIntelligenceDestructionRequest intelligence_destruction_request = 9;
    if (has_intelligence_destruction_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intelligence_destruction_request());
    }
    
    // optional .MsgsClientToMessenger.MsgShapeCreationRequest shape_creation_request = 10;
    if (has_shape_creation_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shape_creation_request());
    }
    
    // optional .MsgsClientToMessenger.MsgShapeDestructionRequest shape_destruction_request = 11;
    if (has_shape_destruction_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shape_destruction_request());
    }
    
    // optional .MsgsClientToMessenger.MsgShapeUpdateRequest shape_update_request = 12;
    if (has_shape_update_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shape_update_request());
    }
    
    // optional .Common.MsgTextMessage text_message = 13;
    if (has_text_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->text_message());
    }
    
    // optional .MsgsClientToMessenger.MsgMarkerCreationRequest marker_creation_request = 14;
    if (has_marker_creation_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->marker_creation_request());
    }
    
    // optional .MsgsClientToMessenger.MsgMarkerUpdateRequest marker_update_request = 15;
    if (has_marker_update_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->marker_update_request());
    }
    
    // optional .MsgsClientToMessenger.MsgMarkerDestructionRequest marker_destruction_request = 16;
    if (has_marker_destruction_request()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->marker_destruction_request());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional .MsgsClientToMessenger.MsgClientObjectCreationRequest client_object_creation_request = 17;
    if (has_client_object_creation_request()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->client_object_creation_request());
    }
    
    // optional .MsgsClientToMessenger.MsgClientObjectUpdateRequest client_object_update_request = 18;
    if (has_client_object_update_request()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->client_object_update_request());
    }
    
    // optional .MsgsClientToMessenger.MsgClientObjectDestructionRequest client_object_destruction_request = 19;
    if (has_client_object_destruction_request()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->client_object_destruction_request());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgClientToMessenger_Content::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgClientToMessenger_Content* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgClientToMessenger_Content*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgClientToMessenger_Content::MergeFrom(const MsgClientToMessenger_Content& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_limit_creation_request()->::MsgsClientToMessenger::MsgLimitCreationRequest::MergeFrom(from.limit_creation_request());
    }
    if (from._has_bit(1)) {
      mutable_limit_destruction_request()->::MsgsClientToMessenger::MsgLimitDestructionRequest::MergeFrom(from.limit_destruction_request());
    }
    if (from._has_bit(2)) {
      mutable_limit_update_request()->::MsgsClientToMessenger::MsgLimitUpdateRequest::MergeFrom(from.limit_update_request());
    }
    if (from._has_bit(3)) {
      mutable_lima_creation_request()->::MsgsClientToMessenger::MsgLimaCreationRequest::MergeFrom(from.lima_creation_request());
    }
    if (from._has_bit(4)) {
      mutable_lima_destruction_request()->::MsgsClientToMessenger::MsgLimaDestructionRequest::MergeFrom(from.lima_destruction_request());
    }
    if (from._has_bit(5)) {
      mutable_lima_update_request()->::MsgsClientToMessenger::MsgLimaUpdateRequest::MergeFrom(from.lima_update_request());
    }
    if (from._has_bit(6)) {
      mutable_intelligence_creation_request()->::MsgsClientToMessenger::MsgIntelligenceCreationRequest::MergeFrom(from.intelligence_creation_request());
    }
    if (from._has_bit(7)) {
      mutable_intelligence_update_request()->::MsgsClientToMessenger::MsgIntelligenceUpdateRequest::MergeFrom(from.intelligence_update_request());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from._has_bit(8)) {
      mutable_intelligence_destruction_request()->::MsgsClientToMessenger::MsgIntelligenceDestructionRequest::MergeFrom(from.intelligence_destruction_request());
    }
    if (from._has_bit(9)) {
      mutable_shape_creation_request()->::MsgsClientToMessenger::MsgShapeCreationRequest::MergeFrom(from.shape_creation_request());
    }
    if (from._has_bit(10)) {
      mutable_shape_destruction_request()->::MsgsClientToMessenger::MsgShapeDestructionRequest::MergeFrom(from.shape_destruction_request());
    }
    if (from._has_bit(11)) {
      mutable_shape_update_request()->::MsgsClientToMessenger::MsgShapeUpdateRequest::MergeFrom(from.shape_update_request());
    }
    if (from._has_bit(12)) {
      mutable_text_message()->::Common::MsgTextMessage::MergeFrom(from.text_message());
    }
    if (from._has_bit(13)) {
      mutable_marker_creation_request()->::MsgsClientToMessenger::MsgMarkerCreationRequest::MergeFrom(from.marker_creation_request());
    }
    if (from._has_bit(14)) {
      mutable_marker_update_request()->::MsgsClientToMessenger::MsgMarkerUpdateRequest::MergeFrom(from.marker_update_request());
    }
    if (from._has_bit(15)) {
      mutable_marker_destruction_request()->::MsgsClientToMessenger::MsgMarkerDestructionRequest::MergeFrom(from.marker_destruction_request());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from._has_bit(16)) {
      mutable_client_object_creation_request()->::MsgsClientToMessenger::MsgClientObjectCreationRequest::MergeFrom(from.client_object_creation_request());
    }
    if (from._has_bit(17)) {
      mutable_client_object_update_request()->::MsgsClientToMessenger::MsgClientObjectUpdateRequest::MergeFrom(from.client_object_update_request());
    }
    if (from._has_bit(18)) {
      mutable_client_object_destruction_request()->::MsgsClientToMessenger::MsgClientObjectDestructionRequest::MergeFrom(from.client_object_destruction_request());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgClientToMessenger_Content::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgClientToMessenger_Content::CopyFrom(const MsgClientToMessenger_Content& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgClientToMessenger_Content::IsInitialized() const {
  
  if (has_limit_creation_request()) {
    if (!this->limit_creation_request().IsInitialized()) return false;
  }
  if (has_limit_destruction_request()) {
    if (!this->limit_destruction_request().IsInitialized()) return false;
  }
  if (has_limit_update_request()) {
    if (!this->limit_update_request().IsInitialized()) return false;
  }
  if (has_lima_creation_request()) {
    if (!this->lima_creation_request().IsInitialized()) return false;
  }
  if (has_lima_destruction_request()) {
    if (!this->lima_destruction_request().IsInitialized()) return false;
  }
  if (has_lima_update_request()) {
    if (!this->lima_update_request().IsInitialized()) return false;
  }
  if (has_intelligence_creation_request()) {
    if (!this->intelligence_creation_request().IsInitialized()) return false;
  }
  if (has_intelligence_update_request()) {
    if (!this->intelligence_update_request().IsInitialized()) return false;
  }
  if (has_intelligence_destruction_request()) {
    if (!this->intelligence_destruction_request().IsInitialized()) return false;
  }
  if (has_shape_creation_request()) {
    if (!this->shape_creation_request().IsInitialized()) return false;
  }
  if (has_shape_destruction_request()) {
    if (!this->shape_destruction_request().IsInitialized()) return false;
  }
  if (has_shape_update_request()) {
    if (!this->shape_update_request().IsInitialized()) return false;
  }
  if (has_text_message()) {
    if (!this->text_message().IsInitialized()) return false;
  }
  if (has_marker_creation_request()) {
    if (!this->marker_creation_request().IsInitialized()) return false;
  }
  if (has_marker_update_request()) {
    if (!this->marker_update_request().IsInitialized()) return false;
  }
  if (has_marker_destruction_request()) {
    if (!this->marker_destruction_request().IsInitialized()) return false;
  }
  if (has_client_object_creation_request()) {
    if (!this->client_object_creation_request().IsInitialized()) return false;
  }
  if (has_client_object_update_request()) {
    if (!this->client_object_update_request().IsInitialized()) return false;
  }
  if (has_client_object_destruction_request()) {
    if (!this->client_object_destruction_request().IsInitialized()) return false;
  }
  return true;
}

void MsgClientToMessenger_Content::Swap(MsgClientToMessenger_Content* other) {
  if (other != this) {
    std::swap(limit_creation_request_, other->limit_creation_request_);
    std::swap(limit_destruction_request_, other->limit_destruction_request_);
    std::swap(limit_update_request_, other->limit_update_request_);
    std::swap(lima_creation_request_, other->lima_creation_request_);
    std::swap(lima_destruction_request_, other->lima_destruction_request_);
    std::swap(lima_update_request_, other->lima_update_request_);
    std::swap(intelligence_creation_request_, other->intelligence_creation_request_);
    std::swap(intelligence_update_request_, other->intelligence_update_request_);
    std::swap(intelligence_destruction_request_, other->intelligence_destruction_request_);
    std::swap(shape_creation_request_, other->shape_creation_request_);
    std::swap(shape_destruction_request_, other->shape_destruction_request_);
    std::swap(shape_update_request_, other->shape_update_request_);
    std::swap(text_message_, other->text_message_);
    std::swap(marker_creation_request_, other->marker_creation_request_);
    std::swap(marker_update_request_, other->marker_update_request_);
    std::swap(marker_destruction_request_, other->marker_destruction_request_);
    std::swap(client_object_creation_request_, other->client_object_creation_request_);
    std::swap(client_object_update_request_, other->client_object_update_request_);
    std::swap(client_object_destruction_request_, other->client_object_destruction_request_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgClientToMessenger_Content::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgClientToMessenger_Content_descriptor_;
  metadata.reflection = MsgClientToMessenger_Content_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MsgClientToMessenger::kContextFieldNumber;
const int MsgClientToMessenger::kMessageFieldNumber;
#endif  // !_MSC_VER

MsgClientToMessenger::MsgClientToMessenger() {
  SharedCtor();
}

void MsgClientToMessenger::InitAsDefaultInstance() {
  message_ = const_cast< ::MsgsClientToMessenger::MsgClientToMessenger_Content*>(&::MsgsClientToMessenger::MsgClientToMessenger_Content::default_instance());
}

MsgClientToMessenger::MsgClientToMessenger(const MsgClientToMessenger& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgClientToMessenger::SharedCtor() {
  _cached_size_ = 0;
  context_ = 0;
  message_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgClientToMessenger::~MsgClientToMessenger() {
  SharedDtor();
}

void MsgClientToMessenger::SharedDtor() {
  if (this != default_instance_) {
    delete message_;
  }
}

const ::google::protobuf::Descriptor* MsgClientToMessenger::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgClientToMessenger_descriptor_;
}

const MsgClientToMessenger& MsgClientToMessenger::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToMessenger_2eproto();  return *default_instance_;
}

MsgClientToMessenger* MsgClientToMessenger::default_instance_ = NULL;

MsgClientToMessenger* MsgClientToMessenger::New() const {
  return new MsgClientToMessenger;
}

void MsgClientToMessenger::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    context_ = 0;
    if (_has_bit(1)) {
      if (message_ != NULL) message_->::MsgsClientToMessenger::MsgClientToMessenger_Content::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgClientToMessenger::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 context = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &context_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }
      
      // required .MsgsClientToMessenger.MsgClientToMessenger.Content message = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_message:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_message()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgClientToMessenger::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgClientToMessenger::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 context = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->context(), output);
  }
  
  // required .MsgsClientToMessenger.MsgClientToMessenger.Content message = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->message(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgClientToMessenger::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 context = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->context(), target);
  }
  
  // required .MsgsClientToMessenger.MsgClientToMessenger.Content message = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->message(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgClientToMessenger::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 context = 1;
    if (has_context()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->context());
    }
    
    // required .MsgsClientToMessenger.MsgClientToMessenger.Content message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->message());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgClientToMessenger::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgClientToMessenger* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgClientToMessenger*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgClientToMessenger::MergeFrom(const MsgClientToMessenger& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_context(from.context());
    }
    if (from._has_bit(1)) {
      mutable_message()->::MsgsClientToMessenger::MsgClientToMessenger_Content::MergeFrom(from.message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgClientToMessenger::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgClientToMessenger::CopyFrom(const MsgClientToMessenger& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgClientToMessenger::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  
  if (has_message()) {
    if (!this->message().IsInitialized()) return false;
  }
  return true;
}

void MsgClientToMessenger::Swap(MsgClientToMessenger* other) {
  if (other != this) {
    std::swap(context_, other->context_);
    std::swap(message_, other->message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgClientToMessenger::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgClientToMessenger_descriptor_;
  metadata.reflection = MsgClientToMessenger_reflection_;
  return metadata;
}


}  // namespace MsgsClientToMessenger
