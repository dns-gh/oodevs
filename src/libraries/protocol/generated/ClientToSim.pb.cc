// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ClientToSim.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>

namespace MsgsClientToSim {

namespace {

const ::google::protobuf::Descriptor* MsgControlDatetimeChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgControlDatetimeChange_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgControlGlobalMeteo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgControlGlobalMeteo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgControlLocalMeteo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgControlLocalMeteo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgControlCheckPointSaveNow_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgControlCheckPointSaveNow_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgFragOrder_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgFragOrder_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSetAutomatMode_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSetAutomatMode_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgUnitCreationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgUnitCreationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MagicActionChangeHumanFactors_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MagicActionChangeHumanFactors_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMagicActionPartialRecovery_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMagicActionPartialRecovery_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMagicActionPartialRecovery_SeqOfHumanRecovery_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMagicActionPartialRecovery_SeqOfHumanRecovery_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMagicActionPartialRecovery_SeqOfDotationRecovery_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMagicActionPartialRecovery_SeqOfDotationRecovery_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMagicActionPartialRecovery_SeqOfStockRecovery_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMagicActionPartialRecovery_SeqOfStockRecovery_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgUnitMagicAction_action_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgUnitMagicAction_action_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgUnitMagicAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgUnitMagicAction_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMagicActionCreateObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMagicActionCreateObject_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMagicActionUpdateObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMagicActionUpdateObject_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgObjectMagicAction_action_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgObjectMagicAction_action_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgObjectMagicAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgObjectMagicAction_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMagicActionCreateFireOrder_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMagicActionCreateFireOrder_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgPopulationMagicAction_action_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgPopulationMagicAction_action_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgPopulationMagicAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgPopulationMagicAction_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMagicActionMoveTo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMagicActionMoveTo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLogSupplyPushFlow_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLogSupplyPushFlow_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLogSupplyChangeQuotas_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLogSupplyChangeQuotas_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgControlCheckPointSetFrequency_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgControlCheckPointSetFrequency_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgControlToggleVisionCones_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgControlToggleVisionCones_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgKnowledgeGroupCreationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgKnowledgeGroupCreationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgKnowledgeGroupUpdateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgKnowledgeGroupUpdateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgClientToSim_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgClientToSim_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgClientToSim_Content_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgClientToSim_Content_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ClientToSim_2eproto() {
  protobuf_AddDesc_ClientToSim_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ClientToSim.proto");
  GOOGLE_CHECK(file != NULL);
  MsgControlDatetimeChange_descriptor_ = file->message_type(0);
  static const int MsgControlDatetimeChange_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlDatetimeChange, date_time_),
  };
  MsgControlDatetimeChange_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgControlDatetimeChange_descriptor_,
      MsgControlDatetimeChange::default_instance_,
      MsgControlDatetimeChange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlDatetimeChange, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlDatetimeChange, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgControlDatetimeChange));
  MsgControlGlobalMeteo_descriptor_ = file->message_type(1);
  static const int MsgControlGlobalMeteo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlGlobalMeteo, attributes_),
  };
  MsgControlGlobalMeteo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgControlGlobalMeteo_descriptor_,
      MsgControlGlobalMeteo::default_instance_,
      MsgControlGlobalMeteo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlGlobalMeteo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlGlobalMeteo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgControlGlobalMeteo));
  MsgControlLocalMeteo_descriptor_ = file->message_type(2);
  static const int MsgControlLocalMeteo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlLocalMeteo, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlLocalMeteo, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlLocalMeteo, top_left_coordinate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlLocalMeteo, bottom_right_coordinate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlLocalMeteo, attributes_),
  };
  MsgControlLocalMeteo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgControlLocalMeteo_descriptor_,
      MsgControlLocalMeteo::default_instance_,
      MsgControlLocalMeteo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlLocalMeteo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlLocalMeteo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgControlLocalMeteo));
  MsgControlCheckPointSaveNow_descriptor_ = file->message_type(3);
  static const int MsgControlCheckPointSaveNow_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlCheckPointSaveNow, name_),
  };
  MsgControlCheckPointSaveNow_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgControlCheckPointSaveNow_descriptor_,
      MsgControlCheckPointSaveNow::default_instance_,
      MsgControlCheckPointSaveNow_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlCheckPointSaveNow, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlCheckPointSaveNow, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgControlCheckPointSaveNow));
  MsgFragOrder_descriptor_ = file->message_type(4);
  static const int MsgFragOrder_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFragOrder, oid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFragOrder, frag_order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFragOrder, parametres_),
  };
  MsgFragOrder_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgFragOrder_descriptor_,
      MsgFragOrder::default_instance_,
      MsgFragOrder_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFragOrder, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFragOrder, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgFragOrder));
  MsgSetAutomatMode_descriptor_ = file->message_type(5);
  static const int MsgSetAutomatMode_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetAutomatMode, oid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetAutomatMode, mode_),
  };
  MsgSetAutomatMode_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSetAutomatMode_descriptor_,
      MsgSetAutomatMode::default_instance_,
      MsgSetAutomatMode_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetAutomatMode, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetAutomatMode, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSetAutomatMode));
  MsgUnitCreationRequest_descriptor_ = file->message_type(6);
  static const int MsgUnitCreationRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitCreationRequest, type_pion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitCreationRequest, oid_automate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitCreationRequest, position_),
  };
  MsgUnitCreationRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgUnitCreationRequest_descriptor_,
      MsgUnitCreationRequest::default_instance_,
      MsgUnitCreationRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitCreationRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitCreationRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgUnitCreationRequest));
  MagicActionChangeHumanFactors_descriptor_ = file->message_type(7);
  static const int MagicActionChangeHumanFactors_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicActionChangeHumanFactors, fatigue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicActionChangeHumanFactors, moral_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicActionChangeHumanFactors, experience_),
  };
  MagicActionChangeHumanFactors_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MagicActionChangeHumanFactors_descriptor_,
      MagicActionChangeHumanFactors::default_instance_,
      MagicActionChangeHumanFactors_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicActionChangeHumanFactors, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicActionChangeHumanFactors, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MagicActionChangeHumanFactors));
  MsgMagicActionPartialRecovery_descriptor_ = file->message_type(8);
  static const int MsgMagicActionPartialRecovery_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery, equipements_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery, personnels_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery, dotations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery, munitions_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery, stocks_),
  };
  MsgMagicActionPartialRecovery_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMagicActionPartialRecovery_descriptor_,
      MsgMagicActionPartialRecovery::default_instance_,
      MsgMagicActionPartialRecovery_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMagicActionPartialRecovery));
  MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_descriptor_ = MsgMagicActionPartialRecovery_descriptor_->nested_type(0);
  static const int MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery, elem_),
  };
  MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_descriptor_,
      MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::default_instance_,
      MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery));
  MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery_descriptor_ = MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_descriptor_->nested_type(0);
  static const int MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery, type_equipement_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery, nombre_disponible_),
  };
  MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery_descriptor_,
      MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::default_instance_,
      MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery));
  MsgMagicActionPartialRecovery_SeqOfHumanRecovery_descriptor_ = MsgMagicActionPartialRecovery_descriptor_->nested_type(1);
  static const int MsgMagicActionPartialRecovery_SeqOfHumanRecovery_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfHumanRecovery, elem_),
  };
  MsgMagicActionPartialRecovery_SeqOfHumanRecovery_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMagicActionPartialRecovery_SeqOfHumanRecovery_descriptor_,
      MsgMagicActionPartialRecovery_SeqOfHumanRecovery::default_instance_,
      MsgMagicActionPartialRecovery_SeqOfHumanRecovery_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfHumanRecovery, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfHumanRecovery, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMagicActionPartialRecovery_SeqOfHumanRecovery));
  MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery_descriptor_ = MsgMagicActionPartialRecovery_SeqOfHumanRecovery_descriptor_->nested_type(0);
  static const int MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery, rang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery, nombre_disponible_),
  };
  MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery_descriptor_,
      MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::default_instance_,
      MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery));
  MsgMagicActionPartialRecovery_SeqOfDotationRecovery_descriptor_ = MsgMagicActionPartialRecovery_descriptor_->nested_type(2);
  static const int MsgMagicActionPartialRecovery_SeqOfDotationRecovery_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfDotationRecovery, elem_),
  };
  MsgMagicActionPartialRecovery_SeqOfDotationRecovery_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMagicActionPartialRecovery_SeqOfDotationRecovery_descriptor_,
      MsgMagicActionPartialRecovery_SeqOfDotationRecovery::default_instance_,
      MsgMagicActionPartialRecovery_SeqOfDotationRecovery_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfDotationRecovery, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfDotationRecovery, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMagicActionPartialRecovery_SeqOfDotationRecovery));
  MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery_descriptor_ = MsgMagicActionPartialRecovery_SeqOfDotationRecovery_descriptor_->nested_type(0);
  static const int MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery, famille_dotation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery, pourcentage_),
  };
  MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery_descriptor_,
      MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::default_instance_,
      MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery));
  MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_descriptor_ = MsgMagicActionPartialRecovery_descriptor_->nested_type(3);
  static const int MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery, elem_),
  };
  MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_descriptor_,
      MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::default_instance_,
      MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery));
  MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery_descriptor_ = MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_descriptor_->nested_type(0);
  static const int MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery, famille_munition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery, pourcentage_),
  };
  MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery_descriptor_,
      MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::default_instance_,
      MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery));
  MsgMagicActionPartialRecovery_SeqOfStockRecovery_descriptor_ = MsgMagicActionPartialRecovery_descriptor_->nested_type(4);
  static const int MsgMagicActionPartialRecovery_SeqOfStockRecovery_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfStockRecovery, elem_),
  };
  MsgMagicActionPartialRecovery_SeqOfStockRecovery_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMagicActionPartialRecovery_SeqOfStockRecovery_descriptor_,
      MsgMagicActionPartialRecovery_SeqOfStockRecovery::default_instance_,
      MsgMagicActionPartialRecovery_SeqOfStockRecovery_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfStockRecovery, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfStockRecovery, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMagicActionPartialRecovery_SeqOfStockRecovery));
  MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery_descriptor_ = MsgMagicActionPartialRecovery_SeqOfStockRecovery_descriptor_->nested_type(0);
  static const int MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery, ressource_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery, quantite_disponible_),
  };
  MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery_descriptor_,
      MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::default_instance_,
      MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery));
  MsgUnitMagicAction_action_descriptor_ = file->message_type(9);
  static const int MsgUnitMagicAction_action_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitMagicAction_action, recompletement_partiel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitMagicAction_action, change_facteurs_humains_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitMagicAction_action, se_rendre_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitMagicAction_action, destruction_totale_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitMagicAction_action, destruction_composante_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitMagicAction_action, annuler_reddition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitMagicAction_action, recuperer_transporteurs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitMagicAction_action, recompletement_total_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitMagicAction_action, recompletement_personnel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitMagicAction_action, recompletement_equipement_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitMagicAction_action, recompletement_ressources_),
  };
  MsgUnitMagicAction_action_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgUnitMagicAction_action_descriptor_,
      MsgUnitMagicAction_action::default_instance_,
      MsgUnitMagicAction_action_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitMagicAction_action, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitMagicAction_action, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgUnitMagicAction_action));
  MsgUnitMagicAction_descriptor_ = file->message_type(10);
  static const int MsgUnitMagicAction_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitMagicAction, oid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitMagicAction, action_),
  };
  MsgUnitMagicAction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgUnitMagicAction_descriptor_,
      MsgUnitMagicAction::default_instance_,
      MsgUnitMagicAction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitMagicAction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitMagicAction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgUnitMagicAction));
  MsgMagicActionCreateObject_descriptor_ = file->message_type(11);
  static const int MsgMagicActionCreateObject_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionCreateObject, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionCreateObject, location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionCreateObject, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionCreateObject, team_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionCreateObject, attributes_),
  };
  MsgMagicActionCreateObject_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMagicActionCreateObject_descriptor_,
      MsgMagicActionCreateObject::default_instance_,
      MsgMagicActionCreateObject_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionCreateObject, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionCreateObject, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMagicActionCreateObject));
  MsgMagicActionUpdateObject_descriptor_ = file->message_type(12);
  static const int MsgMagicActionUpdateObject_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionUpdateObject, oid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionUpdateObject, attributes_),
  };
  MsgMagicActionUpdateObject_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMagicActionUpdateObject_descriptor_,
      MsgMagicActionUpdateObject::default_instance_,
      MsgMagicActionUpdateObject_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionUpdateObject, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionUpdateObject, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMagicActionUpdateObject));
  MsgObjectMagicAction_action_descriptor_ = file->message_type(13);
  static const int MsgObjectMagicAction_action_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectMagicAction_action, create_object_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectMagicAction_action, update_object_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectMagicAction_action, destroy_object_),
  };
  MsgObjectMagicAction_action_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgObjectMagicAction_action_descriptor_,
      MsgObjectMagicAction_action::default_instance_,
      MsgObjectMagicAction_action_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectMagicAction_action, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectMagicAction_action, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgObjectMagicAction_action));
  MsgObjectMagicAction_descriptor_ = file->message_type(14);
  static const int MsgObjectMagicAction_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectMagicAction, action_),
  };
  MsgObjectMagicAction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgObjectMagicAction_descriptor_,
      MsgObjectMagicAction::default_instance_,
      MsgObjectMagicAction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectMagicAction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectMagicAction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgObjectMagicAction));
  MsgMagicActionCreateFireOrder_descriptor_ = file->message_type(15);
  static const int MsgMagicActionCreateFireOrder_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionCreateFireOrder, oid_targetknowledge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionCreateFireOrder, oid_agentforcr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionCreateFireOrder, munition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionCreateFireOrder, it_),
  };
  MsgMagicActionCreateFireOrder_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMagicActionCreateFireOrder_descriptor_,
      MsgMagicActionCreateFireOrder::default_instance_,
      MsgMagicActionCreateFireOrder_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionCreateFireOrder, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionCreateFireOrder, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMagicActionCreateFireOrder));
  MsgPopulationMagicAction_action_descriptor_ = file->message_type(16);
  static const int MsgPopulationMagicAction_action_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPopulationMagicAction_action, change_attitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPopulationMagicAction_action, destruction_totale_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPopulationMagicAction_action, tuer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPopulationMagicAction_action, ressusciter_),
  };
  MsgPopulationMagicAction_action_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgPopulationMagicAction_action_descriptor_,
      MsgPopulationMagicAction_action::default_instance_,
      MsgPopulationMagicAction_action_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPopulationMagicAction_action, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPopulationMagicAction_action, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgPopulationMagicAction_action));
  MsgPopulationMagicAction_descriptor_ = file->message_type(17);
  static const int MsgPopulationMagicAction_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPopulationMagicAction, oid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPopulationMagicAction, action_),
  };
  MsgPopulationMagicAction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgPopulationMagicAction_descriptor_,
      MsgPopulationMagicAction::default_instance_,
      MsgPopulationMagicAction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPopulationMagicAction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPopulationMagicAction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgPopulationMagicAction));
  MsgMagicActionMoveTo_descriptor_ = file->message_type(18);
  static const int MsgMagicActionMoveTo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionMoveTo, oid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionMoveTo, parametres_),
  };
  MsgMagicActionMoveTo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMagicActionMoveTo_descriptor_,
      MsgMagicActionMoveTo::default_instance_,
      MsgMagicActionMoveTo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionMoveTo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionMoveTo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMagicActionMoveTo));
  MsgLogSupplyPushFlow_descriptor_ = file->message_type(19);
  static const int MsgLogSupplyPushFlow_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogSupplyPushFlow, oid_donneur_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogSupplyPushFlow, oid_receveur_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogSupplyPushFlow, stocks_),
  };
  MsgLogSupplyPushFlow_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLogSupplyPushFlow_descriptor_,
      MsgLogSupplyPushFlow::default_instance_,
      MsgLogSupplyPushFlow_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogSupplyPushFlow, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogSupplyPushFlow, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLogSupplyPushFlow));
  MsgLogSupplyChangeQuotas_descriptor_ = file->message_type(20);
  static const int MsgLogSupplyChangeQuotas_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogSupplyChangeQuotas, oid_donneur_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogSupplyChangeQuotas, oid_receveur_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogSupplyChangeQuotas, quotas_),
  };
  MsgLogSupplyChangeQuotas_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLogSupplyChangeQuotas_descriptor_,
      MsgLogSupplyChangeQuotas::default_instance_,
      MsgLogSupplyChangeQuotas_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogSupplyChangeQuotas, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogSupplyChangeQuotas, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLogSupplyChangeQuotas));
  MsgControlCheckPointSetFrequency_descriptor_ = file->message_type(21);
  static const int MsgControlCheckPointSetFrequency_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlCheckPointSetFrequency, frequency_),
  };
  MsgControlCheckPointSetFrequency_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgControlCheckPointSetFrequency_descriptor_,
      MsgControlCheckPointSetFrequency::default_instance_,
      MsgControlCheckPointSetFrequency_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlCheckPointSetFrequency, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlCheckPointSetFrequency, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgControlCheckPointSetFrequency));
  MsgControlToggleVisionCones_descriptor_ = file->message_type(22);
  static const int MsgControlToggleVisionCones_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlToggleVisionCones, vision_cones_),
  };
  MsgControlToggleVisionCones_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgControlToggleVisionCones_descriptor_,
      MsgControlToggleVisionCones::default_instance_,
      MsgControlToggleVisionCones_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlToggleVisionCones, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlToggleVisionCones, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgControlToggleVisionCones));
  MsgKnowledgeGroupCreationRequest_descriptor_ = file->message_type(23);
  static const int MsgKnowledgeGroupCreationRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeGroupCreationRequest, oid_camp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeGroupCreationRequest, oid_parent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeGroupCreationRequest, type_),
  };
  MsgKnowledgeGroupCreationRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgKnowledgeGroupCreationRequest_descriptor_,
      MsgKnowledgeGroupCreationRequest::default_instance_,
      MsgKnowledgeGroupCreationRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeGroupCreationRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeGroupCreationRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgKnowledgeGroupCreationRequest));
  MsgKnowledgeGroupUpdateRequest_descriptor_ = file->message_type(24);
  static const int MsgKnowledgeGroupUpdateRequest_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeGroupUpdateRequest, oid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeGroupUpdateRequest, oid_camp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeGroupUpdateRequest, oid_parent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeGroupUpdateRequest, enabled_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeGroupUpdateRequest, type_),
  };
  MsgKnowledgeGroupUpdateRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgKnowledgeGroupUpdateRequest_descriptor_,
      MsgKnowledgeGroupUpdateRequest::default_instance_,
      MsgKnowledgeGroupUpdateRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeGroupUpdateRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeGroupUpdateRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgKnowledgeGroupUpdateRequest));
  MsgClientToSim_descriptor_ = file->message_type(25);
  static const int MsgClientToSim_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim, context_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim, message_),
  };
  MsgClientToSim_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgClientToSim_descriptor_,
      MsgClientToSim::default_instance_,
      MsgClientToSim_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgClientToSim));
  MsgClientToSim_Content_descriptor_ = MsgClientToSim_descriptor_->nested_type(0);
  static const int MsgClientToSim_Content_offsets_[30] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, control_stop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, control_pause_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, control_resume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, control_change_time_factor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, control_date_time_change_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, control_global_meteo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, control_local_meteo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, control_checkpoint_save_now_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, control_checkpoint_set_frequency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, control_toggle_vision_cones_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, unit_order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, automat_order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, population_order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, frag_order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, set_automat_mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, unit_creation_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, unit_magic_action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, object_magic_action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, population_magic_action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, change_diplomacy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, automat_change_knowledge_group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, automat_change_logistic_links_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, automat_change_superior_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, unit_change_superior_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, log_supply_push_flow_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, log_supply_change_quotas_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, knowledge_group_creation_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, knowledge_group_update_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, create_fire_order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, magic_action_move_to_),
  };
  MsgClientToSim_Content_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgClientToSim_Content_descriptor_,
      MsgClientToSim_Content::default_instance_,
      MsgClientToSim_Content_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgClientToSim_Content));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ClientToSim_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgControlDatetimeChange_descriptor_, &MsgControlDatetimeChange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgControlGlobalMeteo_descriptor_, &MsgControlGlobalMeteo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgControlLocalMeteo_descriptor_, &MsgControlLocalMeteo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgControlCheckPointSaveNow_descriptor_, &MsgControlCheckPointSaveNow::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgFragOrder_descriptor_, &MsgFragOrder::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSetAutomatMode_descriptor_, &MsgSetAutomatMode::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgUnitCreationRequest_descriptor_, &MsgUnitCreationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MagicActionChangeHumanFactors_descriptor_, &MagicActionChangeHumanFactors::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMagicActionPartialRecovery_descriptor_, &MsgMagicActionPartialRecovery::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_descriptor_, &MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery_descriptor_, &MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMagicActionPartialRecovery_SeqOfHumanRecovery_descriptor_, &MsgMagicActionPartialRecovery_SeqOfHumanRecovery::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery_descriptor_, &MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMagicActionPartialRecovery_SeqOfDotationRecovery_descriptor_, &MsgMagicActionPartialRecovery_SeqOfDotationRecovery::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery_descriptor_, &MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_descriptor_, &MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery_descriptor_, &MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMagicActionPartialRecovery_SeqOfStockRecovery_descriptor_, &MsgMagicActionPartialRecovery_SeqOfStockRecovery::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery_descriptor_, &MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgUnitMagicAction_action_descriptor_, &MsgUnitMagicAction_action::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgUnitMagicAction_descriptor_, &MsgUnitMagicAction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMagicActionCreateObject_descriptor_, &MsgMagicActionCreateObject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMagicActionUpdateObject_descriptor_, &MsgMagicActionUpdateObject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgObjectMagicAction_action_descriptor_, &MsgObjectMagicAction_action::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgObjectMagicAction_descriptor_, &MsgObjectMagicAction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMagicActionCreateFireOrder_descriptor_, &MsgMagicActionCreateFireOrder::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgPopulationMagicAction_action_descriptor_, &MsgPopulationMagicAction_action::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgPopulationMagicAction_descriptor_, &MsgPopulationMagicAction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMagicActionMoveTo_descriptor_, &MsgMagicActionMoveTo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLogSupplyPushFlow_descriptor_, &MsgLogSupplyPushFlow::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLogSupplyChangeQuotas_descriptor_, &MsgLogSupplyChangeQuotas::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgControlCheckPointSetFrequency_descriptor_, &MsgControlCheckPointSetFrequency::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgControlToggleVisionCones_descriptor_, &MsgControlToggleVisionCones::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgKnowledgeGroupCreationRequest_descriptor_, &MsgKnowledgeGroupCreationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgKnowledgeGroupUpdateRequest_descriptor_, &MsgKnowledgeGroupUpdateRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgClientToSim_descriptor_, &MsgClientToSim::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgClientToSim_Content_descriptor_, &MsgClientToSim_Content::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ClientToSim_2eproto() {
  delete MsgControlDatetimeChange::default_instance_;
  delete MsgControlDatetimeChange_reflection_;
  delete MsgControlGlobalMeteo::default_instance_;
  delete MsgControlGlobalMeteo_reflection_;
  delete MsgControlLocalMeteo::default_instance_;
  delete MsgControlLocalMeteo_reflection_;
  delete MsgControlCheckPointSaveNow::default_instance_;
  delete MsgControlCheckPointSaveNow_reflection_;
  delete MsgFragOrder::default_instance_;
  delete MsgFragOrder_reflection_;
  delete MsgSetAutomatMode::default_instance_;
  delete MsgSetAutomatMode_reflection_;
  delete MsgUnitCreationRequest::default_instance_;
  delete MsgUnitCreationRequest_reflection_;
  delete MagicActionChangeHumanFactors::default_instance_;
  delete MagicActionChangeHumanFactors_reflection_;
  delete MsgMagicActionPartialRecovery::default_instance_;
  delete MsgMagicActionPartialRecovery_reflection_;
  delete MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::default_instance_;
  delete MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_reflection_;
  delete MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::default_instance_;
  delete MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery_reflection_;
  delete MsgMagicActionPartialRecovery_SeqOfHumanRecovery::default_instance_;
  delete MsgMagicActionPartialRecovery_SeqOfHumanRecovery_reflection_;
  delete MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::default_instance_;
  delete MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery_reflection_;
  delete MsgMagicActionPartialRecovery_SeqOfDotationRecovery::default_instance_;
  delete MsgMagicActionPartialRecovery_SeqOfDotationRecovery_reflection_;
  delete MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::default_instance_;
  delete MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery_reflection_;
  delete MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::default_instance_;
  delete MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_reflection_;
  delete MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::default_instance_;
  delete MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery_reflection_;
  delete MsgMagicActionPartialRecovery_SeqOfStockRecovery::default_instance_;
  delete MsgMagicActionPartialRecovery_SeqOfStockRecovery_reflection_;
  delete MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::default_instance_;
  delete MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery_reflection_;
  delete MsgUnitMagicAction_action::default_instance_;
  delete MsgUnitMagicAction_action_reflection_;
  delete MsgUnitMagicAction::default_instance_;
  delete MsgUnitMagicAction_reflection_;
  delete MsgMagicActionCreateObject::default_instance_;
  delete MsgMagicActionCreateObject_reflection_;
  delete MsgMagicActionUpdateObject::default_instance_;
  delete MsgMagicActionUpdateObject_reflection_;
  delete MsgObjectMagicAction_action::default_instance_;
  delete MsgObjectMagicAction_action_reflection_;
  delete MsgObjectMagicAction::default_instance_;
  delete MsgObjectMagicAction_reflection_;
  delete MsgMagicActionCreateFireOrder::default_instance_;
  delete MsgMagicActionCreateFireOrder_reflection_;
  delete MsgPopulationMagicAction_action::default_instance_;
  delete MsgPopulationMagicAction_action_reflection_;
  delete MsgPopulationMagicAction::default_instance_;
  delete MsgPopulationMagicAction_reflection_;
  delete MsgMagicActionMoveTo::default_instance_;
  delete MsgMagicActionMoveTo_reflection_;
  delete MsgLogSupplyPushFlow::default_instance_;
  delete MsgLogSupplyPushFlow_reflection_;
  delete MsgLogSupplyChangeQuotas::default_instance_;
  delete MsgLogSupplyChangeQuotas_reflection_;
  delete MsgControlCheckPointSetFrequency::default_instance_;
  delete MsgControlCheckPointSetFrequency_reflection_;
  delete MsgControlToggleVisionCones::default_instance_;
  delete MsgControlToggleVisionCones_reflection_;
  delete MsgKnowledgeGroupCreationRequest::default_instance_;
  delete MsgKnowledgeGroupCreationRequest_reflection_;
  delete MsgKnowledgeGroupUpdateRequest::default_instance_;
  delete MsgKnowledgeGroupUpdateRequest_reflection_;
  delete MsgClientToSim::default_instance_;
  delete MsgClientToSim_reflection_;
  delete MsgClientToSim_Content::default_instance_;
  delete MsgClientToSim_Content_reflection_;
}

void protobuf_AddDesc_ClientToSim_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Common::protobuf_AddDesc_Common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021ClientToSim.proto\022\017MsgsClientToSim\032\014Co"
    "mmon.proto\"B\n\030MsgControlDatetimeChange\022&"
    "\n\tdate_time\030\001 \002(\0132\023.Common.MsgDateTime\"G"
    "\n\025MsgControlGlobalMeteo\022.\n\nattributes\030\001 "
    "\002(\0132\032.Common.MsgMeteoAttributes\"\206\002\n\024MsgC"
    "ontrolLocalMeteo\022\'\n\nstart_time\030\001 \002(\0132\023.C"
    "ommon.MsgDateTime\022%\n\010end_time\030\002 \002(\0132\023.Co"
    "mmon.MsgDateTime\0224\n\023top_left_coordinate\030"
    "\003 \002(\0132\027.Common.MsgCoordLatLong\0228\n\027bottom"
    "_right_coordinate\030\004 \002(\0132\027.Common.MsgCoor"
    "dLatLong\022.\n\nattributes\030\005 \002(\0132\032.Common.Ms"
    "gMeteoAttributes\"+\n\033MsgControlCheckPoint"
    "SaveNow\022\014\n\004name\030\001 \001(\t\"a\n\014MsgFragOrder\022\013\n"
    "\003oid\030\001 \002(\r\022\022\n\nfrag_order\030\002 \002(\r\0220\n\nparame"
    "tres\030\003 \001(\0132\034.Common.MsgMissionParameters"
    "\"G\n\021MsgSetAutomatMode\022\013\n\003oid\030\001 \002(\005\022%\n\004mo"
    "de\030\002 \002(\0162\027.Common.EnumAutomatMode\"l\n\026Msg"
    "UnitCreationRequest\022\021\n\ttype_pion\030\001 \002(\r\022\024"
    "\n\014oid_automate\030\002 \002(\r\022)\n\010position\030\003 \002(\0132\027"
    ".Common.MsgCoordLatLong\"\242\001\n\035MagicActionC"
    "hangeHumanFactors\022*\n\007fatigue\030\001 \001(\0162\031.Com"
    "mon.EnumUnitTiredness\022%\n\005moral\030\002 \001(\0162\026.C"
    "ommon.EnumUnitMorale\022.\n\nexperience\030\003 \001(\016"
    "2\032.Common.EnumUnitExperience\"\255\014\n\035MsgMagi"
    "cActionPartialRecovery\022Z\n\013equipements\030\001 "
    "\001(\0132E.MsgsClientToSim.MsgMagicActionPart"
    "ialRecovery.SeqOfEquipmentRecovery\022U\n\npe"
    "rsonnels\030\002 \001(\0132A.MsgsClientToSim.MsgMagi"
    "cActionPartialRecovery.SeqOfHumanRecover"
    "y\022W\n\tdotations\030\003 \001(\0132D.MsgsClientToSim.M"
    "sgMagicActionPartialRecovery.SeqOfDotati"
    "onRecovery\022a\n\tmunitions\030\004 \001(\0132N.MsgsClie"
    "ntToSim.MsgMagicActionPartialRecovery.Se"
    "qOfAmmunitionDotationRecovery\022Q\n\006stocks\030"
    "\005 \001(\0132A.MsgsClientToSim.MsgMagicActionPa"
    "rtialRecovery.SeqOfStockRecovery\032\342\001\n\026Seq"
    "OfEquipmentRecovery\022e\n\004elem\030\001 \003(\0132W.Msgs"
    "ClientToSim.MsgMagicActionPartialRecover"
    "y.SeqOfEquipmentRecovery.EquipmentRecove"
    "ry\032a\n\021EquipmentRecovery\0221\n\017type_equipeme"
    "nt\030\001 \002(\0132\030.Common.MsgEquipmentType\022\031\n\021no"
    "mbre_disponible\030\002 \002(\005\032\304\001\n\022SeqOfHumanReco"
    "very\022]\n\004elem\030\001 \003(\0132O.MsgsClientToSim.Msg"
    "MagicActionPartialRecovery.SeqOfHumanRec"
    "overy.HumanRecovery\032O\n\rHumanRecovery\022#\n\004"
    "rang\030\001 \002(\0162\025.Common.EnumHumanRank\022\031\n\021nom"
    "bre_disponible\030\002 \002(\005\032\333\001\n\025SeqOfDotationRe"
    "covery\022c\n\004elem\030\001 \003(\0132U.MsgsClientToSim.M"
    "sgMagicActionPartialRecovery.SeqOfDotati"
    "onRecovery.DotationRecovery\032]\n\020DotationR"
    "ecovery\0224\n\020famille_dotation\030\001 \002(\0162\032.Comm"
    "on.EnumDotationFamily\022\023\n\013pourcentage\030\002 \002"
    "(\005\032\205\002\n\037SeqOfAmmunitionDotationRecovery\022w"
    "\n\004elem\030\001 \003(\0132i.MsgsClientToSim.MsgMagicA"
    "ctionPartialRecovery.SeqOfAmmunitionDota"
    "tionRecovery.AmmunitionDotationRecovery\032"
    "i\n\032AmmunitionDotationRecovery\0226\n\020famille"
    "_munition\030\001 \002(\0162\034.Common.EnumAmmunitionF"
    "amily\022\023\n\013pourcentage\030\002 \002(\r\032\267\001\n\022SeqOfStoc"
    "kRecovery\022]\n\004elem\030\001 \003(\0132O.MsgsClientToSi"
    "m.MsgMagicActionPartialRecovery.SeqOfSto"
    "ckRecovery.StockRecovery\032B\n\rStockRecover"
    "y\022\024\n\014ressource_id\030\001 \002(\r\022\033\n\023quantite_disp"
    "onible\030\002 \002(\005\"\307\003\n\031MsgUnitMagicAction_acti"
    "on\022N\n\026recompletement_partiel\030\001 \001(\0132..Msg"
    "sClientToSim.MsgMagicActionPartialRecove"
    "ry\022I\n\027change_facteurs_humains\030\002 \001(\0132(.Co"
    "mmon.MsgMagicActionChangeHumanFactors\022\021\n"
    "\tse_rendre\030\003 \001(\005\022\032\n\022destruction_totale\030\004"
    " \001(\005\022\036\n\026destruction_composante\030\005 \001(\005\022\031\n\021"
    "annuler_reddition\030\006 \001(\005\022\037\n\027recuperer_tra"
    "nsporteurs\030\007 \001(\005\022\034\n\024recompletement_total"
    "\030\010 \001(\005\022 \n\030recompletement_personnel\030\t \001(\005"
    "\022!\n\031recompletement_equipement\030\n \001(\005\022!\n\031r"
    "ecompletement_ressources\030\013 \001(\005\"]\n\022MsgUni"
    "tMagicAction\022\013\n\003oid\030\001 \002(\r\022:\n\006action\030\002 \002("
    "\0132*.MsgsClientToSim.MsgUnitMagicAction_a"
    "ction\"\236\001\n\032MsgMagicActionCreateObject\022\014\n\004"
    "type\030\001 \002(\t\022%\n\010location\030\002 \002(\0132\023.Common.Ms"
    "gLocation\022\014\n\004name\030\003 \002(\t\022\014\n\004team\030\004 \002(\005\022/\n"
    "\nattributes\030\005 \002(\0132\033.Common.MsgObjectAttr"
    "ibutes\"Z\n\032MsgMagicActionUpdateObject\022\013\n\003"
    "oid\030\001 \002(\005\022/\n\nattributes\030\002 \002(\0132\033.Common.M"
    "sgObjectAttributes\"\275\001\n\033MsgObjectMagicAct"
    "ion_action\022B\n\rcreate_object\030\001 \001(\0132+.Msgs"
    "ClientToSim.MsgMagicActionCreateObject\022B"
    "\n\rupdate_object\030\002 \001(\0132+.MsgsClientToSim."
    "MsgMagicActionUpdateObject\022\026\n\016destroy_ob"
    "ject\030\003 \001(\005\"T\n\024MsgObjectMagicAction\022<\n\006ac"
    "tion\030\001 \002(\0132,.MsgsClientToSim.MsgObjectMa"
    "gicAction_action\"r\n\035MsgMagicActionCreate"
    "FireOrder\022\033\n\023oid_targetKnowledge\030\001 \002(\005\022\026"
    "\n\016oid_agentForCr\030\002 \002(\005\022\020\n\010munition\030\003 \002(\005"
    "\022\n\n\002it\030\004 \002(\005\"\372\001\n\037MsgPopulationMagicActio"
    "n_action\022G\n\017change_attitude\030\001 \001(\0132..Comm"
    "on.MsgMagicActionPopulationChangeAttitud"
    "e\022\032\n\022destruction_totale\030\002 \001(\010\0222\n\004tuer\030\003 "
    "\001(\0132$.Common.MsgMagicActionPopulationKil"
    "l\022>\n\013ressusciter\030\004 \001(\0132).Common.MsgMagic"
    "ActionPopulationResurrect\"i\n\030MsgPopulati"
    "onMagicAction\022\013\n\003oid\030\001 \002(\r\022@\n\006action\030\002 \002"
    "(\01320.MsgsClientToSim.MsgPopulationMagicA"
    "ction_action\"U\n\024MsgMagicActionMoveTo\022\013\n\003"
    "oid\030\001 \002(\005\0220\n\nparametres\030\002 \002(\0132\034.Common.M"
    "sgMissionParameters\"m\n\024MsgLogSupplyPushF"
    "low\022\023\n\013oid_donneur\030\001 \002(\r\022\024\n\014oid_receveur"
    "\030\002 \002(\r\022*\n\006stocks\030\003 \002(\0132\032.Common.SeqOfDot"
    "ationStock\"q\n\030MsgLogSupplyChangeQuotas\022\023"
    "\n\013oid_donneur\030\001 \002(\r\022\024\n\014oid_receveur\030\002 \002("
    "\r\022*\n\006quotas\030\003 \002(\0132\032.Common.SeqOfDotation"
    "Quota\"5\n MsgControlCheckPointSetFrequenc"
    "y\022\021\n\tfrequency\030\001 \002(\005\"3\n\033MsgControlToggle"
    "VisionCones\022\024\n\014vision_cones\030\001 \002(\010\"V\n Msg"
    "KnowledgeGroupCreationRequest\022\020\n\010oid_cam"
    "p\030\001 \002(\r\022\022\n\noid_parent\030\002 \001(\r\022\014\n\004type\030\003 \002("
    "\t\"r\n\036MsgKnowledgeGroupUpdateRequest\022\013\n\003o"
    "id\030\001 \002(\r\022\020\n\010oid_camp\030\002 \001(\r\022\022\n\noid_parent"
    "\030\003 \001(\r\022\017\n\007enabled\030\004 \001(\010\022\014\n\004type\030\005 \001(\t\"\341\020"
    "\n\016MsgClientToSim\022\022\n\007context\030\001 \001(\005:\0010\0228\n\007"
    "message\030\002 \002(\0132\'.MsgsClientToSim.MsgClien"
    "tToSim.Content\032\200\020\n\007Content\022,\n\014control_st"
    "op\030\001 \001(\0132\026.Common.MsgControlStop\022.\n\rcont"
    "rol_pause\030\002 \001(\0132\027.Common.MsgControlPause"
    "\0220\n\016control_resume\030\003 \001(\0132\030.Common.MsgCon"
    "trolResume\022F\n\032control_change_time_factor"
    "\030\004 \001(\0132\".Common.MsgControlChangeTimeFact"
    "or\022K\n\030control_date_time_change\030\005 \001(\0132).M"
    "sgsClientToSim.MsgControlDatetimeChange\022"
    "D\n\024control_global_meteo\030\006 \001(\0132&.MsgsClie"
    "ntToSim.MsgControlGlobalMeteo\022B\n\023control"
    "_local_meteo\030\007 \001(\0132%.MsgsClientToSim.Msg"
    "ControlLocalMeteo\022Q\n\033control_checkpoint_"
    "save_now\030\010 \001(\0132,.MsgsClientToSim.MsgCont"
    "rolCheckPointSaveNow\022[\n control_checkpoi"
    "nt_set_frequency\030\t \001(\01321.MsgsClientToSim"
    ".MsgControlCheckPointSetFrequency\022Q\n\033con"
    "trol_toggle_vision_cones\030\n \001(\0132,.MsgsCli"
    "entToSim.MsgControlToggleVisionCones\022(\n\n"
    "unit_order\030\013 \001(\0132\024.Common.MsgUnitOrder\022."
    "\n\rautomat_order\030\014 \001(\0132\027.Common.MsgAutoma"
    "tOrder\0224\n\020population_order\030\r \001(\0132\032.Commo"
    "n.MsgPopulationOrder\0221\n\nfrag_order\030\016 \001(\013"
    "2\035.MsgsClientToSim.MsgFragOrder\022<\n\020set_a"
    "utomat_mode\030\017 \001(\0132\".MsgsClientToSim.MsgS"
    "etAutomatMode\022F\n\025unit_creation_request\030\020"
    " \001(\0132\'.MsgsClientToSim.MsgUnitCreationRe"
    "quest\022>\n\021unit_magic_action\030\021 \001(\0132#.MsgsC"
    "lientToSim.MsgUnitMagicAction\022B\n\023object_"
    "magic_action\030\022 \001(\0132%.MsgsClientToSim.Msg"
    "ObjectMagicAction\022J\n\027population_magic_ac"
    "tion\030\023 \001(\0132).MsgsClientToSim.MsgPopulati"
    "onMagicAction\0224\n\020change_diplomacy\030\024 \001(\0132"
    "\032.Common.MsgChangeDiplomacy\022N\n\036automat_c"
    "hange_knowledge_group\030\025 \001(\0132&.Common.Msg"
    "AutomatChangeKnowledgeGroup\022L\n\035automat_c"
    "hange_logistic_links\030\026 \001(\0132%.Common.MsgA"
    "utomatChangeLogisticLinks\022A\n\027automat_cha"
    "nge_superior\030\027 \001(\0132 .Common.MsgAutomatCh"
    "angeSuperior\022;\n\024unit_change_superior\030\030 \001"
    "(\0132\035.Common.MsgUnitChangeSuperior\022C\n\024log"
    "_supply_push_flow\030\031 \001(\0132%.MsgsClientToSi"
    "m.MsgLogSupplyPushFlow\022K\n\030log_supply_cha"
    "nge_quotas\030\032 \001(\0132).MsgsClientToSim.MsgLo"
    "gSupplyChangeQuotas\022[\n knowledge_group_c"
    "reation_request\030\033 \001(\01321.MsgsClientToSim."
    "MsgKnowledgeGroupCreationRequest\022W\n\036know"
    "ledge_group_update_request\030\034 \001(\0132/.MsgsC"
    "lientToSim.MsgKnowledgeGroupUpdateReques"
    "t\022I\n\021create_fire_order\030\035 \001(\0132..MsgsClien"
    "tToSim.MsgMagicActionCreateFireOrder\022C\n\024"
    "magic_action_move_to\030\036 \001(\0132%.MsgsClientT"
    "oSim.MsgMagicActionMoveTo", 6865);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ClientToSim.proto", &protobuf_RegisterTypes);
  MsgControlDatetimeChange::default_instance_ = new MsgControlDatetimeChange();
  MsgControlGlobalMeteo::default_instance_ = new MsgControlGlobalMeteo();
  MsgControlLocalMeteo::default_instance_ = new MsgControlLocalMeteo();
  MsgControlCheckPointSaveNow::default_instance_ = new MsgControlCheckPointSaveNow();
  MsgFragOrder::default_instance_ = new MsgFragOrder();
  MsgSetAutomatMode::default_instance_ = new MsgSetAutomatMode();
  MsgUnitCreationRequest::default_instance_ = new MsgUnitCreationRequest();
  MagicActionChangeHumanFactors::default_instance_ = new MagicActionChangeHumanFactors();
  MsgMagicActionPartialRecovery::default_instance_ = new MsgMagicActionPartialRecovery();
  MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::default_instance_ = new MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery();
  MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::default_instance_ = new MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery();
  MsgMagicActionPartialRecovery_SeqOfHumanRecovery::default_instance_ = new MsgMagicActionPartialRecovery_SeqOfHumanRecovery();
  MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::default_instance_ = new MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery();
  MsgMagicActionPartialRecovery_SeqOfDotationRecovery::default_instance_ = new MsgMagicActionPartialRecovery_SeqOfDotationRecovery();
  MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::default_instance_ = new MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery();
  MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::default_instance_ = new MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery();
  MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::default_instance_ = new MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery();
  MsgMagicActionPartialRecovery_SeqOfStockRecovery::default_instance_ = new MsgMagicActionPartialRecovery_SeqOfStockRecovery();
  MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::default_instance_ = new MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery();
  MsgUnitMagicAction_action::default_instance_ = new MsgUnitMagicAction_action();
  MsgUnitMagicAction::default_instance_ = new MsgUnitMagicAction();
  MsgMagicActionCreateObject::default_instance_ = new MsgMagicActionCreateObject();
  MsgMagicActionUpdateObject::default_instance_ = new MsgMagicActionUpdateObject();
  MsgObjectMagicAction_action::default_instance_ = new MsgObjectMagicAction_action();
  MsgObjectMagicAction::default_instance_ = new MsgObjectMagicAction();
  MsgMagicActionCreateFireOrder::default_instance_ = new MsgMagicActionCreateFireOrder();
  MsgPopulationMagicAction_action::default_instance_ = new MsgPopulationMagicAction_action();
  MsgPopulationMagicAction::default_instance_ = new MsgPopulationMagicAction();
  MsgMagicActionMoveTo::default_instance_ = new MsgMagicActionMoveTo();
  MsgLogSupplyPushFlow::default_instance_ = new MsgLogSupplyPushFlow();
  MsgLogSupplyChangeQuotas::default_instance_ = new MsgLogSupplyChangeQuotas();
  MsgControlCheckPointSetFrequency::default_instance_ = new MsgControlCheckPointSetFrequency();
  MsgControlToggleVisionCones::default_instance_ = new MsgControlToggleVisionCones();
  MsgKnowledgeGroupCreationRequest::default_instance_ = new MsgKnowledgeGroupCreationRequest();
  MsgKnowledgeGroupUpdateRequest::default_instance_ = new MsgKnowledgeGroupUpdateRequest();
  MsgClientToSim::default_instance_ = new MsgClientToSim();
  MsgClientToSim_Content::default_instance_ = new MsgClientToSim_Content();
  MsgControlDatetimeChange::default_instance_->InitAsDefaultInstance();
  MsgControlGlobalMeteo::default_instance_->InitAsDefaultInstance();
  MsgControlLocalMeteo::default_instance_->InitAsDefaultInstance();
  MsgControlCheckPointSaveNow::default_instance_->InitAsDefaultInstance();
  MsgFragOrder::default_instance_->InitAsDefaultInstance();
  MsgSetAutomatMode::default_instance_->InitAsDefaultInstance();
  MsgUnitCreationRequest::default_instance_->InitAsDefaultInstance();
  MagicActionChangeHumanFactors::default_instance_->InitAsDefaultInstance();
  MsgMagicActionPartialRecovery::default_instance_->InitAsDefaultInstance();
  MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::default_instance_->InitAsDefaultInstance();
  MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::default_instance_->InitAsDefaultInstance();
  MsgMagicActionPartialRecovery_SeqOfHumanRecovery::default_instance_->InitAsDefaultInstance();
  MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::default_instance_->InitAsDefaultInstance();
  MsgMagicActionPartialRecovery_SeqOfDotationRecovery::default_instance_->InitAsDefaultInstance();
  MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::default_instance_->InitAsDefaultInstance();
  MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::default_instance_->InitAsDefaultInstance();
  MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::default_instance_->InitAsDefaultInstance();
  MsgMagicActionPartialRecovery_SeqOfStockRecovery::default_instance_->InitAsDefaultInstance();
  MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::default_instance_->InitAsDefaultInstance();
  MsgUnitMagicAction_action::default_instance_->InitAsDefaultInstance();
  MsgUnitMagicAction::default_instance_->InitAsDefaultInstance();
  MsgMagicActionCreateObject::default_instance_->InitAsDefaultInstance();
  MsgMagicActionUpdateObject::default_instance_->InitAsDefaultInstance();
  MsgObjectMagicAction_action::default_instance_->InitAsDefaultInstance();
  MsgObjectMagicAction::default_instance_->InitAsDefaultInstance();
  MsgMagicActionCreateFireOrder::default_instance_->InitAsDefaultInstance();
  MsgPopulationMagicAction_action::default_instance_->InitAsDefaultInstance();
  MsgPopulationMagicAction::default_instance_->InitAsDefaultInstance();
  MsgMagicActionMoveTo::default_instance_->InitAsDefaultInstance();
  MsgLogSupplyPushFlow::default_instance_->InitAsDefaultInstance();
  MsgLogSupplyChangeQuotas::default_instance_->InitAsDefaultInstance();
  MsgControlCheckPointSetFrequency::default_instance_->InitAsDefaultInstance();
  MsgControlToggleVisionCones::default_instance_->InitAsDefaultInstance();
  MsgKnowledgeGroupCreationRequest::default_instance_->InitAsDefaultInstance();
  MsgKnowledgeGroupUpdateRequest::default_instance_->InitAsDefaultInstance();
  MsgClientToSim::default_instance_->InitAsDefaultInstance();
  MsgClientToSim_Content::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ClientToSim_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ClientToSim_2eproto {
  StaticDescriptorInitializer_ClientToSim_2eproto() {
    protobuf_AddDesc_ClientToSim_2eproto();
  }
} static_descriptor_initializer_ClientToSim_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int MsgControlDatetimeChange::kDateTimeFieldNumber;
#endif  // !_MSC_VER

MsgControlDatetimeChange::MsgControlDatetimeChange() {
  SharedCtor();
}

void MsgControlDatetimeChange::InitAsDefaultInstance() {
  date_time_ = const_cast< ::Common::MsgDateTime*>(&::Common::MsgDateTime::default_instance());
}

MsgControlDatetimeChange::MsgControlDatetimeChange(const MsgControlDatetimeChange& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgControlDatetimeChange::SharedCtor() {
  _cached_size_ = 0;
  date_time_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgControlDatetimeChange::~MsgControlDatetimeChange() {
  SharedDtor();
}

void MsgControlDatetimeChange::SharedDtor() {
  if (this != default_instance_) {
    delete date_time_;
  }
}

const ::google::protobuf::Descriptor* MsgControlDatetimeChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlDatetimeChange_descriptor_;
}

const MsgControlDatetimeChange& MsgControlDatetimeChange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgControlDatetimeChange* MsgControlDatetimeChange::default_instance_ = NULL;

MsgControlDatetimeChange* MsgControlDatetimeChange::New() const {
  return new MsgControlDatetimeChange;
}

void MsgControlDatetimeChange::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (date_time_ != NULL) date_time_->::Common::MsgDateTime::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgControlDatetimeChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MsgDateTime date_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_date_time()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgControlDatetimeChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgControlDatetimeChange::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MsgDateTime date_time = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->date_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgControlDatetimeChange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MsgDateTime date_time = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->date_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgControlDatetimeChange::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MsgDateTime date_time = 1;
    if (has_date_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->date_time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgControlDatetimeChange::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgControlDatetimeChange* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgControlDatetimeChange*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgControlDatetimeChange::MergeFrom(const MsgControlDatetimeChange& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_date_time()->::Common::MsgDateTime::MergeFrom(from.date_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgControlDatetimeChange::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgControlDatetimeChange::CopyFrom(const MsgControlDatetimeChange& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgControlDatetimeChange::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_date_time()) {
    if (!this->date_time().IsInitialized()) return false;
  }
  return true;
}

void MsgControlDatetimeChange::Swap(MsgControlDatetimeChange* other) {
  if (other != this) {
    std::swap(date_time_, other->date_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgControlDatetimeChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgControlDatetimeChange_descriptor_;
  metadata.reflection = MsgControlDatetimeChange_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgControlGlobalMeteo::kAttributesFieldNumber;
#endif  // !_MSC_VER

MsgControlGlobalMeteo::MsgControlGlobalMeteo() {
  SharedCtor();
}

void MsgControlGlobalMeteo::InitAsDefaultInstance() {
  attributes_ = const_cast< ::Common::MsgMeteoAttributes*>(&::Common::MsgMeteoAttributes::default_instance());
}

MsgControlGlobalMeteo::MsgControlGlobalMeteo(const MsgControlGlobalMeteo& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgControlGlobalMeteo::SharedCtor() {
  _cached_size_ = 0;
  attributes_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgControlGlobalMeteo::~MsgControlGlobalMeteo() {
  SharedDtor();
}

void MsgControlGlobalMeteo::SharedDtor() {
  if (this != default_instance_) {
    delete attributes_;
  }
}

const ::google::protobuf::Descriptor* MsgControlGlobalMeteo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlGlobalMeteo_descriptor_;
}

const MsgControlGlobalMeteo& MsgControlGlobalMeteo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgControlGlobalMeteo* MsgControlGlobalMeteo::default_instance_ = NULL;

MsgControlGlobalMeteo* MsgControlGlobalMeteo::New() const {
  return new MsgControlGlobalMeteo;
}

void MsgControlGlobalMeteo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (attributes_ != NULL) attributes_->::Common::MsgMeteoAttributes::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgControlGlobalMeteo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MsgMeteoAttributes attributes = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_attributes()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgControlGlobalMeteo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgControlGlobalMeteo::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MsgMeteoAttributes attributes = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->attributes(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgControlGlobalMeteo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MsgMeteoAttributes attributes = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->attributes(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgControlGlobalMeteo::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MsgMeteoAttributes attributes = 1;
    if (has_attributes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attributes());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgControlGlobalMeteo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgControlGlobalMeteo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgControlGlobalMeteo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgControlGlobalMeteo::MergeFrom(const MsgControlGlobalMeteo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_attributes()->::Common::MsgMeteoAttributes::MergeFrom(from.attributes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgControlGlobalMeteo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgControlGlobalMeteo::CopyFrom(const MsgControlGlobalMeteo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgControlGlobalMeteo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_attributes()) {
    if (!this->attributes().IsInitialized()) return false;
  }
  return true;
}

void MsgControlGlobalMeteo::Swap(MsgControlGlobalMeteo* other) {
  if (other != this) {
    std::swap(attributes_, other->attributes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgControlGlobalMeteo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgControlGlobalMeteo_descriptor_;
  metadata.reflection = MsgControlGlobalMeteo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgControlLocalMeteo::kStartTimeFieldNumber;
const int MsgControlLocalMeteo::kEndTimeFieldNumber;
const int MsgControlLocalMeteo::kTopLeftCoordinateFieldNumber;
const int MsgControlLocalMeteo::kBottomRightCoordinateFieldNumber;
const int MsgControlLocalMeteo::kAttributesFieldNumber;
#endif  // !_MSC_VER

MsgControlLocalMeteo::MsgControlLocalMeteo() {
  SharedCtor();
}

void MsgControlLocalMeteo::InitAsDefaultInstance() {
  start_time_ = const_cast< ::Common::MsgDateTime*>(&::Common::MsgDateTime::default_instance());
  end_time_ = const_cast< ::Common::MsgDateTime*>(&::Common::MsgDateTime::default_instance());
  top_left_coordinate_ = const_cast< ::Common::MsgCoordLatLong*>(&::Common::MsgCoordLatLong::default_instance());
  bottom_right_coordinate_ = const_cast< ::Common::MsgCoordLatLong*>(&::Common::MsgCoordLatLong::default_instance());
  attributes_ = const_cast< ::Common::MsgMeteoAttributes*>(&::Common::MsgMeteoAttributes::default_instance());
}

MsgControlLocalMeteo::MsgControlLocalMeteo(const MsgControlLocalMeteo& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgControlLocalMeteo::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = NULL;
  end_time_ = NULL;
  top_left_coordinate_ = NULL;
  bottom_right_coordinate_ = NULL;
  attributes_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgControlLocalMeteo::~MsgControlLocalMeteo() {
  SharedDtor();
}

void MsgControlLocalMeteo::SharedDtor() {
  if (this != default_instance_) {
    delete start_time_;
    delete end_time_;
    delete top_left_coordinate_;
    delete bottom_right_coordinate_;
    delete attributes_;
  }
}

const ::google::protobuf::Descriptor* MsgControlLocalMeteo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlLocalMeteo_descriptor_;
}

const MsgControlLocalMeteo& MsgControlLocalMeteo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgControlLocalMeteo* MsgControlLocalMeteo::default_instance_ = NULL;

MsgControlLocalMeteo* MsgControlLocalMeteo::New() const {
  return new MsgControlLocalMeteo;
}

void MsgControlLocalMeteo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (start_time_ != NULL) start_time_->::Common::MsgDateTime::Clear();
    }
    if (_has_bit(1)) {
      if (end_time_ != NULL) end_time_->::Common::MsgDateTime::Clear();
    }
    if (_has_bit(2)) {
      if (top_left_coordinate_ != NULL) top_left_coordinate_->::Common::MsgCoordLatLong::Clear();
    }
    if (_has_bit(3)) {
      if (bottom_right_coordinate_ != NULL) bottom_right_coordinate_->::Common::MsgCoordLatLong::Clear();
    }
    if (_has_bit(4)) {
      if (attributes_ != NULL) attributes_->::Common::MsgMeteoAttributes::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgControlLocalMeteo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MsgDateTime start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_start_time()));
        if (input->ExpectTag(18)) goto parse_end_time;
        break;
      }
      
      // required .Common.MsgDateTime end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_end_time:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_end_time()));
        if (input->ExpectTag(26)) goto parse_top_left_coordinate;
        break;
      }
      
      // required .Common.MsgCoordLatLong top_left_coordinate = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_top_left_coordinate:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_top_left_coordinate()));
        if (input->ExpectTag(34)) goto parse_bottom_right_coordinate;
        break;
      }
      
      // required .Common.MsgCoordLatLong bottom_right_coordinate = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_bottom_right_coordinate:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_bottom_right_coordinate()));
        if (input->ExpectTag(42)) goto parse_attributes;
        break;
      }
      
      // required .Common.MsgMeteoAttributes attributes = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_attributes:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_attributes()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgControlLocalMeteo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgControlLocalMeteo::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MsgDateTime start_time = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->start_time(), output);
  }
  
  // required .Common.MsgDateTime end_time = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->end_time(), output);
  }
  
  // required .Common.MsgCoordLatLong top_left_coordinate = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->top_left_coordinate(), output);
  }
  
  // required .Common.MsgCoordLatLong bottom_right_coordinate = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      4, this->bottom_right_coordinate(), output);
  }
  
  // required .Common.MsgMeteoAttributes attributes = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      5, this->attributes(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgControlLocalMeteo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MsgDateTime start_time = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->start_time(), target);
  }
  
  // required .Common.MsgDateTime end_time = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->end_time(), target);
  }
  
  // required .Common.MsgCoordLatLong top_left_coordinate = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->top_left_coordinate(), target);
  }
  
  // required .Common.MsgCoordLatLong bottom_right_coordinate = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->bottom_right_coordinate(), target);
  }
  
  // required .Common.MsgMeteoAttributes attributes = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->attributes(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgControlLocalMeteo::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MsgDateTime start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->start_time());
    }
    
    // required .Common.MsgDateTime end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->end_time());
    }
    
    // required .Common.MsgCoordLatLong top_left_coordinate = 3;
    if (has_top_left_coordinate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->top_left_coordinate());
    }
    
    // required .Common.MsgCoordLatLong bottom_right_coordinate = 4;
    if (has_bottom_right_coordinate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bottom_right_coordinate());
    }
    
    // required .Common.MsgMeteoAttributes attributes = 5;
    if (has_attributes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attributes());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgControlLocalMeteo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgControlLocalMeteo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgControlLocalMeteo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgControlLocalMeteo::MergeFrom(const MsgControlLocalMeteo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_start_time()->::Common::MsgDateTime::MergeFrom(from.start_time());
    }
    if (from._has_bit(1)) {
      mutable_end_time()->::Common::MsgDateTime::MergeFrom(from.end_time());
    }
    if (from._has_bit(2)) {
      mutable_top_left_coordinate()->::Common::MsgCoordLatLong::MergeFrom(from.top_left_coordinate());
    }
    if (from._has_bit(3)) {
      mutable_bottom_right_coordinate()->::Common::MsgCoordLatLong::MergeFrom(from.bottom_right_coordinate());
    }
    if (from._has_bit(4)) {
      mutable_attributes()->::Common::MsgMeteoAttributes::MergeFrom(from.attributes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgControlLocalMeteo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgControlLocalMeteo::CopyFrom(const MsgControlLocalMeteo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgControlLocalMeteo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  
  if (has_start_time()) {
    if (!this->start_time().IsInitialized()) return false;
  }
  if (has_end_time()) {
    if (!this->end_time().IsInitialized()) return false;
  }
  if (has_top_left_coordinate()) {
    if (!this->top_left_coordinate().IsInitialized()) return false;
  }
  if (has_bottom_right_coordinate()) {
    if (!this->bottom_right_coordinate().IsInitialized()) return false;
  }
  if (has_attributes()) {
    if (!this->attributes().IsInitialized()) return false;
  }
  return true;
}

void MsgControlLocalMeteo::Swap(MsgControlLocalMeteo* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(top_left_coordinate_, other->top_left_coordinate_);
    std::swap(bottom_right_coordinate_, other->bottom_right_coordinate_);
    std::swap(attributes_, other->attributes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgControlLocalMeteo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgControlLocalMeteo_descriptor_;
  metadata.reflection = MsgControlLocalMeteo_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgControlCheckPointSaveNow::_default_name_;
#ifndef _MSC_VER
const int MsgControlCheckPointSaveNow::kNameFieldNumber;
#endif  // !_MSC_VER

MsgControlCheckPointSaveNow::MsgControlCheckPointSaveNow() {
  SharedCtor();
}

void MsgControlCheckPointSaveNow::InitAsDefaultInstance() {
}

MsgControlCheckPointSaveNow::MsgControlCheckPointSaveNow(const MsgControlCheckPointSaveNow& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgControlCheckPointSaveNow::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&_default_name_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgControlCheckPointSaveNow::~MsgControlCheckPointSaveNow() {
  SharedDtor();
}

void MsgControlCheckPointSaveNow::SharedDtor() {
  if (name_ != &_default_name_) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgControlCheckPointSaveNow::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlCheckPointSaveNow_descriptor_;
}

const MsgControlCheckPointSaveNow& MsgControlCheckPointSaveNow::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgControlCheckPointSaveNow* MsgControlCheckPointSaveNow::default_instance_ = NULL;

MsgControlCheckPointSaveNow* MsgControlCheckPointSaveNow::New() const {
  return new MsgControlCheckPointSaveNow;
}

void MsgControlCheckPointSaveNow::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (name_ != &_default_name_) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgControlCheckPointSaveNow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_name()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->name().data(), this->name().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgControlCheckPointSaveNow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgControlCheckPointSaveNow::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional string name = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgControlCheckPointSaveNow::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string name = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgControlCheckPointSaveNow::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgControlCheckPointSaveNow::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgControlCheckPointSaveNow* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgControlCheckPointSaveNow*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgControlCheckPointSaveNow::MergeFrom(const MsgControlCheckPointSaveNow& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgControlCheckPointSaveNow::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgControlCheckPointSaveNow::CopyFrom(const MsgControlCheckPointSaveNow& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgControlCheckPointSaveNow::IsInitialized() const {
  
  return true;
}

void MsgControlCheckPointSaveNow::Swap(MsgControlCheckPointSaveNow* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgControlCheckPointSaveNow::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgControlCheckPointSaveNow_descriptor_;
  metadata.reflection = MsgControlCheckPointSaveNow_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgFragOrder::kOidFieldNumber;
const int MsgFragOrder::kFragOrderFieldNumber;
const int MsgFragOrder::kParametresFieldNumber;
#endif  // !_MSC_VER

MsgFragOrder::MsgFragOrder() {
  SharedCtor();
}

void MsgFragOrder::InitAsDefaultInstance() {
  parametres_ = const_cast< ::Common::MsgMissionParameters*>(&::Common::MsgMissionParameters::default_instance());
}

MsgFragOrder::MsgFragOrder(const MsgFragOrder& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgFragOrder::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0u;
  frag_order_ = 0u;
  parametres_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgFragOrder::~MsgFragOrder() {
  SharedDtor();
}

void MsgFragOrder::SharedDtor() {
  if (this != default_instance_) {
    delete parametres_;
  }
}

const ::google::protobuf::Descriptor* MsgFragOrder::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgFragOrder_descriptor_;
}

const MsgFragOrder& MsgFragOrder::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgFragOrder* MsgFragOrder::default_instance_ = NULL;

MsgFragOrder* MsgFragOrder::New() const {
  return new MsgFragOrder;
}

void MsgFragOrder::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0u;
    frag_order_ = 0u;
    if (_has_bit(2)) {
      if (parametres_ != NULL) parametres_->::Common::MsgMissionParameters::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgFragOrder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_frag_order;
        break;
      }
      
      // required uint32 frag_order = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_frag_order:
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &frag_order_));
        _set_bit(1);
        if (input->ExpectTag(26)) goto parse_parametres;
        break;
      }
      
      // optional .Common.MsgMissionParameters parametres = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_parametres:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_parametres()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgFragOrder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgFragOrder::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->oid(), output);
  }
  
  // required uint32 frag_order = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->frag_order(), output);
  }
  
  // optional .Common.MsgMissionParameters parametres = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->parametres(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgFragOrder::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->oid(), target);
  }
  
  // required uint32 frag_order = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->frag_order(), target);
  }
  
  // optional .Common.MsgMissionParameters parametres = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->parametres(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgFragOrder::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid());
    }
    
    // required uint32 frag_order = 2;
    if (has_frag_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->frag_order());
    }
    
    // optional .Common.MsgMissionParameters parametres = 3;
    if (has_parametres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parametres());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgFragOrder::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgFragOrder* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgFragOrder*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgFragOrder::MergeFrom(const MsgFragOrder& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
    if (from._has_bit(1)) {
      set_frag_order(from.frag_order());
    }
    if (from._has_bit(2)) {
      mutable_parametres()->::Common::MsgMissionParameters::MergeFrom(from.parametres());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgFragOrder::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgFragOrder::CopyFrom(const MsgFragOrder& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgFragOrder::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_parametres()) {
    if (!this->parametres().IsInitialized()) return false;
  }
  return true;
}

void MsgFragOrder::Swap(MsgFragOrder* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(frag_order_, other->frag_order_);
    std::swap(parametres_, other->parametres_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgFragOrder::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgFragOrder_descriptor_;
  metadata.reflection = MsgFragOrder_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSetAutomatMode::kOidFieldNumber;
const int MsgSetAutomatMode::kModeFieldNumber;
#endif  // !_MSC_VER

MsgSetAutomatMode::MsgSetAutomatMode() {
  SharedCtor();
}

void MsgSetAutomatMode::InitAsDefaultInstance() {
}

MsgSetAutomatMode::MsgSetAutomatMode(const MsgSetAutomatMode& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgSetAutomatMode::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0;
  mode_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSetAutomatMode::~MsgSetAutomatMode() {
  SharedDtor();
}

void MsgSetAutomatMode::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgSetAutomatMode::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSetAutomatMode_descriptor_;
}

const MsgSetAutomatMode& MsgSetAutomatMode::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgSetAutomatMode* MsgSetAutomatMode::default_instance_ = NULL;

MsgSetAutomatMode* MsgSetAutomatMode::New() const {
  return new MsgSetAutomatMode;
}

void MsgSetAutomatMode::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0;
    mode_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSetAutomatMode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_mode;
        break;
      }
      
      // required .Common.EnumAutomatMode mode = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_mode:
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (Common::EnumAutomatMode_IsValid(value)) {
          set_mode(static_cast< Common::EnumAutomatMode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(2, value);
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgSetAutomatMode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgSetAutomatMode::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->oid(), output);
  }
  
  // required .Common.EnumAutomatMode mode = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->mode(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgSetAutomatMode::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->oid(), target);
  }
  
  // required .Common.EnumAutomatMode mode = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->mode(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgSetAutomatMode::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oid());
    }
    
    // required .Common.EnumAutomatMode mode = 2;
    if (has_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgSetAutomatMode::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSetAutomatMode* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSetAutomatMode*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSetAutomatMode::MergeFrom(const MsgSetAutomatMode& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
    if (from._has_bit(1)) {
      set_mode(from.mode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSetAutomatMode::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSetAutomatMode::CopyFrom(const MsgSetAutomatMode& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSetAutomatMode::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void MsgSetAutomatMode::Swap(MsgSetAutomatMode* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(mode_, other->mode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSetAutomatMode::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSetAutomatMode_descriptor_;
  metadata.reflection = MsgSetAutomatMode_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgUnitCreationRequest::kTypePionFieldNumber;
const int MsgUnitCreationRequest::kOidAutomateFieldNumber;
const int MsgUnitCreationRequest::kPositionFieldNumber;
#endif  // !_MSC_VER

MsgUnitCreationRequest::MsgUnitCreationRequest() {
  SharedCtor();
}

void MsgUnitCreationRequest::InitAsDefaultInstance() {
  position_ = const_cast< ::Common::MsgCoordLatLong*>(&::Common::MsgCoordLatLong::default_instance());
}

MsgUnitCreationRequest::MsgUnitCreationRequest(const MsgUnitCreationRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgUnitCreationRequest::SharedCtor() {
  _cached_size_ = 0;
  type_pion_ = 0u;
  oid_automate_ = 0u;
  position_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgUnitCreationRequest::~MsgUnitCreationRequest() {
  SharedDtor();
}

void MsgUnitCreationRequest::SharedDtor() {
  if (this != default_instance_) {
    delete position_;
  }
}

const ::google::protobuf::Descriptor* MsgUnitCreationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgUnitCreationRequest_descriptor_;
}

const MsgUnitCreationRequest& MsgUnitCreationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgUnitCreationRequest* MsgUnitCreationRequest::default_instance_ = NULL;

MsgUnitCreationRequest* MsgUnitCreationRequest::New() const {
  return new MsgUnitCreationRequest;
}

void MsgUnitCreationRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_pion_ = 0u;
    oid_automate_ = 0u;
    if (_has_bit(2)) {
      if (position_ != NULL) position_->::Common::MsgCoordLatLong::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgUnitCreationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 type_pion = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &type_pion_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_oid_automate;
        break;
      }
      
      // required uint32 oid_automate = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_oid_automate:
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_automate_));
        _set_bit(1);
        if (input->ExpectTag(26)) goto parse_position;
        break;
      }
      
      // required .Common.MsgCoordLatLong position = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_position:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_position()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgUnitCreationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgUnitCreationRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required uint32 type_pion = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type_pion(), output);
  }
  
  // required uint32 oid_automate = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->oid_automate(), output);
  }
  
  // required .Common.MsgCoordLatLong position = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->position(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgUnitCreationRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 type_pion = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type_pion(), target);
  }
  
  // required uint32 oid_automate = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->oid_automate(), target);
  }
  
  // required .Common.MsgCoordLatLong position = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->position(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgUnitCreationRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 type_pion = 1;
    if (has_type_pion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type_pion());
    }
    
    // required uint32 oid_automate = 2;
    if (has_oid_automate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid_automate());
    }
    
    // required .Common.MsgCoordLatLong position = 3;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->position());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgUnitCreationRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgUnitCreationRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgUnitCreationRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgUnitCreationRequest::MergeFrom(const MsgUnitCreationRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_type_pion(from.type_pion());
    }
    if (from._has_bit(1)) {
      set_oid_automate(from.oid_automate());
    }
    if (from._has_bit(2)) {
      mutable_position()->::Common::MsgCoordLatLong::MergeFrom(from.position());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgUnitCreationRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgUnitCreationRequest::CopyFrom(const MsgUnitCreationRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUnitCreationRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  if (has_position()) {
    if (!this->position().IsInitialized()) return false;
  }
  return true;
}

void MsgUnitCreationRequest::Swap(MsgUnitCreationRequest* other) {
  if (other != this) {
    std::swap(type_pion_, other->type_pion_);
    std::swap(oid_automate_, other->oid_automate_);
    std::swap(position_, other->position_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgUnitCreationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgUnitCreationRequest_descriptor_;
  metadata.reflection = MsgUnitCreationRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MagicActionChangeHumanFactors::kFatigueFieldNumber;
const int MagicActionChangeHumanFactors::kMoralFieldNumber;
const int MagicActionChangeHumanFactors::kExperienceFieldNumber;
#endif  // !_MSC_VER

MagicActionChangeHumanFactors::MagicActionChangeHumanFactors() {
  SharedCtor();
}

void MagicActionChangeHumanFactors::InitAsDefaultInstance() {
}

MagicActionChangeHumanFactors::MagicActionChangeHumanFactors(const MagicActionChangeHumanFactors& from) {
  SharedCtor();
  MergeFrom(from);
}

void MagicActionChangeHumanFactors::SharedCtor() {
  _cached_size_ = 0;
  fatigue_ = 0;
  moral_ = 0;
  experience_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MagicActionChangeHumanFactors::~MagicActionChangeHumanFactors() {
  SharedDtor();
}

void MagicActionChangeHumanFactors::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MagicActionChangeHumanFactors::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MagicActionChangeHumanFactors_descriptor_;
}

const MagicActionChangeHumanFactors& MagicActionChangeHumanFactors::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MagicActionChangeHumanFactors* MagicActionChangeHumanFactors::default_instance_ = NULL;

MagicActionChangeHumanFactors* MagicActionChangeHumanFactors::New() const {
  return new MagicActionChangeHumanFactors;
}

void MagicActionChangeHumanFactors::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fatigue_ = 0;
    moral_ = 0;
    experience_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MagicActionChangeHumanFactors::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Common.EnumUnitTiredness fatigue = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (Common::EnumUnitTiredness_IsValid(value)) {
          set_fatigue(static_cast< Common::EnumUnitTiredness >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectTag(16)) goto parse_moral;
        break;
      }
      
      // optional .Common.EnumUnitMorale moral = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_moral:
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (Common::EnumUnitMorale_IsValid(value)) {
          set_moral(static_cast< Common::EnumUnitMorale >(value));
        } else {
          mutable_unknown_fields()->AddVarint(2, value);
        }
        if (input->ExpectTag(24)) goto parse_experience;
        break;
      }
      
      // optional .Common.EnumUnitExperience experience = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_experience:
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (Common::EnumUnitExperience_IsValid(value)) {
          set_experience(static_cast< Common::EnumUnitExperience >(value));
        } else {
          mutable_unknown_fields()->AddVarint(3, value);
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MagicActionChangeHumanFactors::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MagicActionChangeHumanFactors::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .Common.EnumUnitTiredness fatigue = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->fatigue(), output);
  }
  
  // optional .Common.EnumUnitMorale moral = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->moral(), output);
  }
  
  // optional .Common.EnumUnitExperience experience = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->experience(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MagicActionChangeHumanFactors::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .Common.EnumUnitTiredness fatigue = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->fatigue(), target);
  }
  
  // optional .Common.EnumUnitMorale moral = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->moral(), target);
  }
  
  // optional .Common.EnumUnitExperience experience = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->experience(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MagicActionChangeHumanFactors::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Common.EnumUnitTiredness fatigue = 1;
    if (has_fatigue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->fatigue());
    }
    
    // optional .Common.EnumUnitMorale moral = 2;
    if (has_moral()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->moral());
    }
    
    // optional .Common.EnumUnitExperience experience = 3;
    if (has_experience()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->experience());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MagicActionChangeHumanFactors::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MagicActionChangeHumanFactors* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MagicActionChangeHumanFactors*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MagicActionChangeHumanFactors::MergeFrom(const MagicActionChangeHumanFactors& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_fatigue(from.fatigue());
    }
    if (from._has_bit(1)) {
      set_moral(from.moral());
    }
    if (from._has_bit(2)) {
      set_experience(from.experience());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MagicActionChangeHumanFactors::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MagicActionChangeHumanFactors::CopyFrom(const MagicActionChangeHumanFactors& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MagicActionChangeHumanFactors::IsInitialized() const {
  
  return true;
}

void MagicActionChangeHumanFactors::Swap(MagicActionChangeHumanFactors* other) {
  if (other != this) {
    std::swap(fatigue_, other->fatigue_);
    std::swap(moral_, other->moral_);
    std::swap(experience_, other->experience_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MagicActionChangeHumanFactors::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MagicActionChangeHumanFactors_descriptor_;
  metadata.reflection = MagicActionChangeHumanFactors_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::kTypeEquipementFieldNumber;
const int MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::kNombreDisponibleFieldNumber;
#endif  // !_MSC_VER

MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery() {
  SharedCtor();
}

void MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::InitAsDefaultInstance() {
  type_equipement_ = const_cast< ::Common::MsgEquipmentType*>(&::Common::MsgEquipmentType::default_instance());
}

MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery(const MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::SharedCtor() {
  _cached_size_ = 0;
  type_equipement_ = NULL;
  nombre_disponible_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::~MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery() {
  SharedDtor();
}

void MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::SharedDtor() {
  if (this != default_instance_) {
    delete type_equipement_;
  }
}

const ::google::protobuf::Descriptor* MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery_descriptor_;
}

const MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery& MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery* MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::default_instance_ = NULL;

MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery* MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::New() const {
  return new MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery;
}

void MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (type_equipement_ != NULL) type_equipement_->::Common::MsgEquipmentType::Clear();
    }
    nombre_disponible_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MsgEquipmentType type_equipement = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_type_equipement()));
        if (input->ExpectTag(16)) goto parse_nombre_disponible;
        break;
      }
      
      // required int32 nombre_disponible = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_nombre_disponible:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &nombre_disponible_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MsgEquipmentType type_equipement = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->type_equipement(), output);
  }
  
  // required int32 nombre_disponible = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nombre_disponible(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MsgEquipmentType type_equipement = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->type_equipement(), target);
  }
  
  // required int32 nombre_disponible = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nombre_disponible(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MsgEquipmentType type_equipement = 1;
    if (has_type_equipement()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->type_equipement());
    }
    
    // required int32 nombre_disponible = 2;
    if (has_nombre_disponible()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nombre_disponible());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::MergeFrom(const MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_type_equipement()->::Common::MsgEquipmentType::MergeFrom(from.type_equipement());
    }
    if (from._has_bit(1)) {
      set_nombre_disponible(from.nombre_disponible());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::CopyFrom(const MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_type_equipement()) {
    if (!this->type_equipement().IsInitialized()) return false;
  }
  return true;
}

void MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::Swap(MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery* other) {
  if (other != this) {
    std::swap(type_equipement_, other->type_equipement_);
    std::swap(nombre_disponible_, other->nombre_disponible_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery_descriptor_;
  metadata.reflection = MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_EquipmentRecovery_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::kElemFieldNumber;
#endif  // !_MSC_VER

MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery() {
  SharedCtor();
}

void MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::InitAsDefaultInstance() {
}

MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery(const MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::~MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery() {
  SharedDtor();
}

void MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_descriptor_;
}

const MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery& MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery* MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::default_instance_ = NULL;

MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery* MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::New() const {
  return new MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery;
}

void MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::Clear() {
  elem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfEquipmentRecovery.EquipmentRecovery elem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_elem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_elem()));
        if (input->ExpectTag(10)) goto parse_elem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfEquipmentRecovery.EquipmentRecovery elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->elem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfEquipmentRecovery.EquipmentRecovery elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->elem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::ByteSize() const {
  int total_size = 0;
  
  // repeated .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfEquipmentRecovery.EquipmentRecovery elem = 1;
  total_size += 1 * this->elem_size();
  for (int i = 0; i < this->elem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elem(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::MergeFrom(const MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery& from) {
  GOOGLE_CHECK_NE(&from, this);
  elem_.MergeFrom(from.elem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::CopyFrom(const MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::IsInitialized() const {
  
  for (int i = 0; i < elem_size(); i++) {
    if (!this->elem(i).IsInitialized()) return false;
  }
  return true;
}

void MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::Swap(MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery* other) {
  if (other != this) {
    elem_.Swap(&other->elem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_descriptor_;
  metadata.reflection = MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::kRangFieldNumber;
const int MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::kNombreDisponibleFieldNumber;
#endif  // !_MSC_VER

MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery() {
  SharedCtor();
}

void MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::InitAsDefaultInstance() {
}

MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery(const MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::SharedCtor() {
  _cached_size_ = 0;
  rang_ = 0;
  nombre_disponible_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::~MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery() {
  SharedDtor();
}

void MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery_descriptor_;
}

const MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery& MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery* MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::default_instance_ = NULL;

MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery* MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::New() const {
  return new MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery;
}

void MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    rang_ = 0;
    nombre_disponible_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.EnumHumanRank rang = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (Common::EnumHumanRank_IsValid(value)) {
          set_rang(static_cast< Common::EnumHumanRank >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectTag(16)) goto parse_nombre_disponible;
        break;
      }
      
      // required int32 nombre_disponible = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_nombre_disponible:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &nombre_disponible_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.EnumHumanRank rang = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->rang(), output);
  }
  
  // required int32 nombre_disponible = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nombre_disponible(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.EnumHumanRank rang = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->rang(), target);
  }
  
  // required int32 nombre_disponible = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nombre_disponible(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.EnumHumanRank rang = 1;
    if (has_rang()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->rang());
    }
    
    // required int32 nombre_disponible = 2;
    if (has_nombre_disponible()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nombre_disponible());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::MergeFrom(const MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_rang(from.rang());
    }
    if (from._has_bit(1)) {
      set_nombre_disponible(from.nombre_disponible());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::CopyFrom(const MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::Swap(MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery* other) {
  if (other != this) {
    std::swap(rang_, other->rang_);
    std::swap(nombre_disponible_, other->nombre_disponible_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery_descriptor_;
  metadata.reflection = MsgMagicActionPartialRecovery_SeqOfHumanRecovery_HumanRecovery_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MsgMagicActionPartialRecovery_SeqOfHumanRecovery::kElemFieldNumber;
#endif  // !_MSC_VER

MsgMagicActionPartialRecovery_SeqOfHumanRecovery::MsgMagicActionPartialRecovery_SeqOfHumanRecovery() {
  SharedCtor();
}

void MsgMagicActionPartialRecovery_SeqOfHumanRecovery::InitAsDefaultInstance() {
}

MsgMagicActionPartialRecovery_SeqOfHumanRecovery::MsgMagicActionPartialRecovery_SeqOfHumanRecovery(const MsgMagicActionPartialRecovery_SeqOfHumanRecovery& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMagicActionPartialRecovery_SeqOfHumanRecovery::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMagicActionPartialRecovery_SeqOfHumanRecovery::~MsgMagicActionPartialRecovery_SeqOfHumanRecovery() {
  SharedDtor();
}

void MsgMagicActionPartialRecovery_SeqOfHumanRecovery::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgMagicActionPartialRecovery_SeqOfHumanRecovery::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMagicActionPartialRecovery_SeqOfHumanRecovery_descriptor_;
}

const MsgMagicActionPartialRecovery_SeqOfHumanRecovery& MsgMagicActionPartialRecovery_SeqOfHumanRecovery::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgMagicActionPartialRecovery_SeqOfHumanRecovery* MsgMagicActionPartialRecovery_SeqOfHumanRecovery::default_instance_ = NULL;

MsgMagicActionPartialRecovery_SeqOfHumanRecovery* MsgMagicActionPartialRecovery_SeqOfHumanRecovery::New() const {
  return new MsgMagicActionPartialRecovery_SeqOfHumanRecovery;
}

void MsgMagicActionPartialRecovery_SeqOfHumanRecovery::Clear() {
  elem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMagicActionPartialRecovery_SeqOfHumanRecovery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfHumanRecovery.HumanRecovery elem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_elem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_elem()));
        if (input->ExpectTag(10)) goto parse_elem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMagicActionPartialRecovery_SeqOfHumanRecovery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMagicActionPartialRecovery_SeqOfHumanRecovery::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfHumanRecovery.HumanRecovery elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->elem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMagicActionPartialRecovery_SeqOfHumanRecovery::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfHumanRecovery.HumanRecovery elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->elem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMagicActionPartialRecovery_SeqOfHumanRecovery::ByteSize() const {
  int total_size = 0;
  
  // repeated .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfHumanRecovery.HumanRecovery elem = 1;
  total_size += 1 * this->elem_size();
  for (int i = 0; i < this->elem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elem(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMagicActionPartialRecovery_SeqOfHumanRecovery::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMagicActionPartialRecovery_SeqOfHumanRecovery* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMagicActionPartialRecovery_SeqOfHumanRecovery*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMagicActionPartialRecovery_SeqOfHumanRecovery::MergeFrom(const MsgMagicActionPartialRecovery_SeqOfHumanRecovery& from) {
  GOOGLE_CHECK_NE(&from, this);
  elem_.MergeFrom(from.elem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMagicActionPartialRecovery_SeqOfHumanRecovery::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMagicActionPartialRecovery_SeqOfHumanRecovery::CopyFrom(const MsgMagicActionPartialRecovery_SeqOfHumanRecovery& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMagicActionPartialRecovery_SeqOfHumanRecovery::IsInitialized() const {
  
  for (int i = 0; i < elem_size(); i++) {
    if (!this->elem(i).IsInitialized()) return false;
  }
  return true;
}

void MsgMagicActionPartialRecovery_SeqOfHumanRecovery::Swap(MsgMagicActionPartialRecovery_SeqOfHumanRecovery* other) {
  if (other != this) {
    elem_.Swap(&other->elem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMagicActionPartialRecovery_SeqOfHumanRecovery::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMagicActionPartialRecovery_SeqOfHumanRecovery_descriptor_;
  metadata.reflection = MsgMagicActionPartialRecovery_SeqOfHumanRecovery_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::kFamilleDotationFieldNumber;
const int MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::kPourcentageFieldNumber;
#endif  // !_MSC_VER

MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery() {
  SharedCtor();
}

void MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::InitAsDefaultInstance() {
}

MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery(const MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::SharedCtor() {
  _cached_size_ = 0;
  famille_dotation_ = 0;
  pourcentage_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::~MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery() {
  SharedDtor();
}

void MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery_descriptor_;
}

const MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery& MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery* MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::default_instance_ = NULL;

MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery* MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::New() const {
  return new MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery;
}

void MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    famille_dotation_ = 0;
    pourcentage_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.EnumDotationFamily famille_dotation = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (Common::EnumDotationFamily_IsValid(value)) {
          set_famille_dotation(static_cast< Common::EnumDotationFamily >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectTag(16)) goto parse_pourcentage;
        break;
      }
      
      // required int32 pourcentage = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_pourcentage:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &pourcentage_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.EnumDotationFamily famille_dotation = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->famille_dotation(), output);
  }
  
  // required int32 pourcentage = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pourcentage(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.EnumDotationFamily famille_dotation = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->famille_dotation(), target);
  }
  
  // required int32 pourcentage = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pourcentage(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.EnumDotationFamily famille_dotation = 1;
    if (has_famille_dotation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->famille_dotation());
    }
    
    // required int32 pourcentage = 2;
    if (has_pourcentage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pourcentage());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::MergeFrom(const MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_famille_dotation(from.famille_dotation());
    }
    if (from._has_bit(1)) {
      set_pourcentage(from.pourcentage());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::CopyFrom(const MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::Swap(MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery* other) {
  if (other != this) {
    std::swap(famille_dotation_, other->famille_dotation_);
    std::swap(pourcentage_, other->pourcentage_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery_descriptor_;
  metadata.reflection = MsgMagicActionPartialRecovery_SeqOfDotationRecovery_DotationRecovery_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MsgMagicActionPartialRecovery_SeqOfDotationRecovery::kElemFieldNumber;
#endif  // !_MSC_VER

MsgMagicActionPartialRecovery_SeqOfDotationRecovery::MsgMagicActionPartialRecovery_SeqOfDotationRecovery() {
  SharedCtor();
}

void MsgMagicActionPartialRecovery_SeqOfDotationRecovery::InitAsDefaultInstance() {
}

MsgMagicActionPartialRecovery_SeqOfDotationRecovery::MsgMagicActionPartialRecovery_SeqOfDotationRecovery(const MsgMagicActionPartialRecovery_SeqOfDotationRecovery& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMagicActionPartialRecovery_SeqOfDotationRecovery::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMagicActionPartialRecovery_SeqOfDotationRecovery::~MsgMagicActionPartialRecovery_SeqOfDotationRecovery() {
  SharedDtor();
}

void MsgMagicActionPartialRecovery_SeqOfDotationRecovery::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgMagicActionPartialRecovery_SeqOfDotationRecovery::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMagicActionPartialRecovery_SeqOfDotationRecovery_descriptor_;
}

const MsgMagicActionPartialRecovery_SeqOfDotationRecovery& MsgMagicActionPartialRecovery_SeqOfDotationRecovery::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgMagicActionPartialRecovery_SeqOfDotationRecovery* MsgMagicActionPartialRecovery_SeqOfDotationRecovery::default_instance_ = NULL;

MsgMagicActionPartialRecovery_SeqOfDotationRecovery* MsgMagicActionPartialRecovery_SeqOfDotationRecovery::New() const {
  return new MsgMagicActionPartialRecovery_SeqOfDotationRecovery;
}

void MsgMagicActionPartialRecovery_SeqOfDotationRecovery::Clear() {
  elem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMagicActionPartialRecovery_SeqOfDotationRecovery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfDotationRecovery.DotationRecovery elem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_elem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_elem()));
        if (input->ExpectTag(10)) goto parse_elem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMagicActionPartialRecovery_SeqOfDotationRecovery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMagicActionPartialRecovery_SeqOfDotationRecovery::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfDotationRecovery.DotationRecovery elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->elem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMagicActionPartialRecovery_SeqOfDotationRecovery::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfDotationRecovery.DotationRecovery elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->elem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMagicActionPartialRecovery_SeqOfDotationRecovery::ByteSize() const {
  int total_size = 0;
  
  // repeated .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfDotationRecovery.DotationRecovery elem = 1;
  total_size += 1 * this->elem_size();
  for (int i = 0; i < this->elem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elem(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMagicActionPartialRecovery_SeqOfDotationRecovery::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMagicActionPartialRecovery_SeqOfDotationRecovery* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMagicActionPartialRecovery_SeqOfDotationRecovery*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMagicActionPartialRecovery_SeqOfDotationRecovery::MergeFrom(const MsgMagicActionPartialRecovery_SeqOfDotationRecovery& from) {
  GOOGLE_CHECK_NE(&from, this);
  elem_.MergeFrom(from.elem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMagicActionPartialRecovery_SeqOfDotationRecovery::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMagicActionPartialRecovery_SeqOfDotationRecovery::CopyFrom(const MsgMagicActionPartialRecovery_SeqOfDotationRecovery& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMagicActionPartialRecovery_SeqOfDotationRecovery::IsInitialized() const {
  
  for (int i = 0; i < elem_size(); i++) {
    if (!this->elem(i).IsInitialized()) return false;
  }
  return true;
}

void MsgMagicActionPartialRecovery_SeqOfDotationRecovery::Swap(MsgMagicActionPartialRecovery_SeqOfDotationRecovery* other) {
  if (other != this) {
    elem_.Swap(&other->elem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMagicActionPartialRecovery_SeqOfDotationRecovery::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMagicActionPartialRecovery_SeqOfDotationRecovery_descriptor_;
  metadata.reflection = MsgMagicActionPartialRecovery_SeqOfDotationRecovery_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::kFamilleMunitionFieldNumber;
const int MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::kPourcentageFieldNumber;
#endif  // !_MSC_VER

MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery() {
  SharedCtor();
}

void MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::InitAsDefaultInstance() {
}

MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery(const MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::SharedCtor() {
  _cached_size_ = 0;
  famille_munition_ = 0;
  pourcentage_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::~MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery() {
  SharedDtor();
}

void MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery_descriptor_;
}

const MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery& MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery* MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::default_instance_ = NULL;

MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery* MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::New() const {
  return new MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery;
}

void MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    famille_munition_ = 0;
    pourcentage_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.EnumAmmunitionFamily famille_munition = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (Common::EnumAmmunitionFamily_IsValid(value)) {
          set_famille_munition(static_cast< Common::EnumAmmunitionFamily >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectTag(16)) goto parse_pourcentage;
        break;
      }
      
      // required uint32 pourcentage = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_pourcentage:
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &pourcentage_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.EnumAmmunitionFamily famille_munition = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->famille_munition(), output);
  }
  
  // required uint32 pourcentage = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pourcentage(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.EnumAmmunitionFamily famille_munition = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->famille_munition(), target);
  }
  
  // required uint32 pourcentage = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pourcentage(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.EnumAmmunitionFamily famille_munition = 1;
    if (has_famille_munition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->famille_munition());
    }
    
    // required uint32 pourcentage = 2;
    if (has_pourcentage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pourcentage());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::MergeFrom(const MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_famille_munition(from.famille_munition());
    }
    if (from._has_bit(1)) {
      set_pourcentage(from.pourcentage());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::CopyFrom(const MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::Swap(MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery* other) {
  if (other != this) {
    std::swap(famille_munition_, other->famille_munition_);
    std::swap(pourcentage_, other->pourcentage_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery_descriptor_;
  metadata.reflection = MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_AmmunitionDotationRecovery_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::kElemFieldNumber;
#endif  // !_MSC_VER

MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery() {
  SharedCtor();
}

void MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::InitAsDefaultInstance() {
}

MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery(const MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::~MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery() {
  SharedDtor();
}

void MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_descriptor_;
}

const MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery& MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery* MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::default_instance_ = NULL;

MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery* MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::New() const {
  return new MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery;
}

void MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::Clear() {
  elem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfAmmunitionDotationRecovery.AmmunitionDotationRecovery elem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_elem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_elem()));
        if (input->ExpectTag(10)) goto parse_elem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfAmmunitionDotationRecovery.AmmunitionDotationRecovery elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->elem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfAmmunitionDotationRecovery.AmmunitionDotationRecovery elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->elem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::ByteSize() const {
  int total_size = 0;
  
  // repeated .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfAmmunitionDotationRecovery.AmmunitionDotationRecovery elem = 1;
  total_size += 1 * this->elem_size();
  for (int i = 0; i < this->elem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elem(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::MergeFrom(const MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery& from) {
  GOOGLE_CHECK_NE(&from, this);
  elem_.MergeFrom(from.elem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::CopyFrom(const MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::IsInitialized() const {
  
  for (int i = 0; i < elem_size(); i++) {
    if (!this->elem(i).IsInitialized()) return false;
  }
  return true;
}

void MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::Swap(MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery* other) {
  if (other != this) {
    elem_.Swap(&other->elem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_descriptor_;
  metadata.reflection = MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::kRessourceIdFieldNumber;
const int MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::kQuantiteDisponibleFieldNumber;
#endif  // !_MSC_VER

MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery() {
  SharedCtor();
}

void MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::InitAsDefaultInstance() {
}

MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery(const MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::SharedCtor() {
  _cached_size_ = 0;
  ressource_id_ = 0u;
  quantite_disponible_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::~MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery() {
  SharedDtor();
}

void MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery_descriptor_;
}

const MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery& MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery* MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::default_instance_ = NULL;

MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery* MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::New() const {
  return new MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery;
}

void MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ressource_id_ = 0u;
    quantite_disponible_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ressource_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &ressource_id_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_quantite_disponible;
        break;
      }
      
      // required int32 quantite_disponible = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_quantite_disponible:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &quantite_disponible_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required uint32 ressource_id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ressource_id(), output);
  }
  
  // required int32 quantite_disponible = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->quantite_disponible(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 ressource_id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ressource_id(), target);
  }
  
  // required int32 quantite_disponible = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->quantite_disponible(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ressource_id = 1;
    if (has_ressource_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ressource_id());
    }
    
    // required int32 quantite_disponible = 2;
    if (has_quantite_disponible()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->quantite_disponible());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::MergeFrom(const MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_ressource_id(from.ressource_id());
    }
    if (from._has_bit(1)) {
      set_quantite_disponible(from.quantite_disponible());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::CopyFrom(const MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::Swap(MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery* other) {
  if (other != this) {
    std::swap(ressource_id_, other->ressource_id_);
    std::swap(quantite_disponible_, other->quantite_disponible_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery_descriptor_;
  metadata.reflection = MsgMagicActionPartialRecovery_SeqOfStockRecovery_StockRecovery_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MsgMagicActionPartialRecovery_SeqOfStockRecovery::kElemFieldNumber;
#endif  // !_MSC_VER

MsgMagicActionPartialRecovery_SeqOfStockRecovery::MsgMagicActionPartialRecovery_SeqOfStockRecovery() {
  SharedCtor();
}

void MsgMagicActionPartialRecovery_SeqOfStockRecovery::InitAsDefaultInstance() {
}

MsgMagicActionPartialRecovery_SeqOfStockRecovery::MsgMagicActionPartialRecovery_SeqOfStockRecovery(const MsgMagicActionPartialRecovery_SeqOfStockRecovery& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMagicActionPartialRecovery_SeqOfStockRecovery::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMagicActionPartialRecovery_SeqOfStockRecovery::~MsgMagicActionPartialRecovery_SeqOfStockRecovery() {
  SharedDtor();
}

void MsgMagicActionPartialRecovery_SeqOfStockRecovery::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgMagicActionPartialRecovery_SeqOfStockRecovery::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMagicActionPartialRecovery_SeqOfStockRecovery_descriptor_;
}

const MsgMagicActionPartialRecovery_SeqOfStockRecovery& MsgMagicActionPartialRecovery_SeqOfStockRecovery::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgMagicActionPartialRecovery_SeqOfStockRecovery* MsgMagicActionPartialRecovery_SeqOfStockRecovery::default_instance_ = NULL;

MsgMagicActionPartialRecovery_SeqOfStockRecovery* MsgMagicActionPartialRecovery_SeqOfStockRecovery::New() const {
  return new MsgMagicActionPartialRecovery_SeqOfStockRecovery;
}

void MsgMagicActionPartialRecovery_SeqOfStockRecovery::Clear() {
  elem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMagicActionPartialRecovery_SeqOfStockRecovery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfStockRecovery.StockRecovery elem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_elem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_elem()));
        if (input->ExpectTag(10)) goto parse_elem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMagicActionPartialRecovery_SeqOfStockRecovery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMagicActionPartialRecovery_SeqOfStockRecovery::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfStockRecovery.StockRecovery elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->elem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMagicActionPartialRecovery_SeqOfStockRecovery::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfStockRecovery.StockRecovery elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->elem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMagicActionPartialRecovery_SeqOfStockRecovery::ByteSize() const {
  int total_size = 0;
  
  // repeated .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfStockRecovery.StockRecovery elem = 1;
  total_size += 1 * this->elem_size();
  for (int i = 0; i < this->elem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elem(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMagicActionPartialRecovery_SeqOfStockRecovery::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMagicActionPartialRecovery_SeqOfStockRecovery* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMagicActionPartialRecovery_SeqOfStockRecovery*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMagicActionPartialRecovery_SeqOfStockRecovery::MergeFrom(const MsgMagicActionPartialRecovery_SeqOfStockRecovery& from) {
  GOOGLE_CHECK_NE(&from, this);
  elem_.MergeFrom(from.elem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMagicActionPartialRecovery_SeqOfStockRecovery::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMagicActionPartialRecovery_SeqOfStockRecovery::CopyFrom(const MsgMagicActionPartialRecovery_SeqOfStockRecovery& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMagicActionPartialRecovery_SeqOfStockRecovery::IsInitialized() const {
  
  for (int i = 0; i < elem_size(); i++) {
    if (!this->elem(i).IsInitialized()) return false;
  }
  return true;
}

void MsgMagicActionPartialRecovery_SeqOfStockRecovery::Swap(MsgMagicActionPartialRecovery_SeqOfStockRecovery* other) {
  if (other != this) {
    elem_.Swap(&other->elem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMagicActionPartialRecovery_SeqOfStockRecovery::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMagicActionPartialRecovery_SeqOfStockRecovery_descriptor_;
  metadata.reflection = MsgMagicActionPartialRecovery_SeqOfStockRecovery_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MsgMagicActionPartialRecovery::kEquipementsFieldNumber;
const int MsgMagicActionPartialRecovery::kPersonnelsFieldNumber;
const int MsgMagicActionPartialRecovery::kDotationsFieldNumber;
const int MsgMagicActionPartialRecovery::kMunitionsFieldNumber;
const int MsgMagicActionPartialRecovery::kStocksFieldNumber;
#endif  // !_MSC_VER

MsgMagicActionPartialRecovery::MsgMagicActionPartialRecovery() {
  SharedCtor();
}

void MsgMagicActionPartialRecovery::InitAsDefaultInstance() {
  equipements_ = const_cast< ::MsgsClientToSim::MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery*>(&::MsgsClientToSim::MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::default_instance());
  personnels_ = const_cast< ::MsgsClientToSim::MsgMagicActionPartialRecovery_SeqOfHumanRecovery*>(&::MsgsClientToSim::MsgMagicActionPartialRecovery_SeqOfHumanRecovery::default_instance());
  dotations_ = const_cast< ::MsgsClientToSim::MsgMagicActionPartialRecovery_SeqOfDotationRecovery*>(&::MsgsClientToSim::MsgMagicActionPartialRecovery_SeqOfDotationRecovery::default_instance());
  munitions_ = const_cast< ::MsgsClientToSim::MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery*>(&::MsgsClientToSim::MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::default_instance());
  stocks_ = const_cast< ::MsgsClientToSim::MsgMagicActionPartialRecovery_SeqOfStockRecovery*>(&::MsgsClientToSim::MsgMagicActionPartialRecovery_SeqOfStockRecovery::default_instance());
}

MsgMagicActionPartialRecovery::MsgMagicActionPartialRecovery(const MsgMagicActionPartialRecovery& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMagicActionPartialRecovery::SharedCtor() {
  _cached_size_ = 0;
  equipements_ = NULL;
  personnels_ = NULL;
  dotations_ = NULL;
  munitions_ = NULL;
  stocks_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMagicActionPartialRecovery::~MsgMagicActionPartialRecovery() {
  SharedDtor();
}

void MsgMagicActionPartialRecovery::SharedDtor() {
  if (this != default_instance_) {
    delete equipements_;
    delete personnels_;
    delete dotations_;
    delete munitions_;
    delete stocks_;
  }
}

const ::google::protobuf::Descriptor* MsgMagicActionPartialRecovery::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMagicActionPartialRecovery_descriptor_;
}

const MsgMagicActionPartialRecovery& MsgMagicActionPartialRecovery::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgMagicActionPartialRecovery* MsgMagicActionPartialRecovery::default_instance_ = NULL;

MsgMagicActionPartialRecovery* MsgMagicActionPartialRecovery::New() const {
  return new MsgMagicActionPartialRecovery;
}

void MsgMagicActionPartialRecovery::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (equipements_ != NULL) equipements_->::MsgsClientToSim::MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::Clear();
    }
    if (_has_bit(1)) {
      if (personnels_ != NULL) personnels_->::MsgsClientToSim::MsgMagicActionPartialRecovery_SeqOfHumanRecovery::Clear();
    }
    if (_has_bit(2)) {
      if (dotations_ != NULL) dotations_->::MsgsClientToSim::MsgMagicActionPartialRecovery_SeqOfDotationRecovery::Clear();
    }
    if (_has_bit(3)) {
      if (munitions_ != NULL) munitions_->::MsgsClientToSim::MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::Clear();
    }
    if (_has_bit(4)) {
      if (stocks_ != NULL) stocks_->::MsgsClientToSim::MsgMagicActionPartialRecovery_SeqOfStockRecovery::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMagicActionPartialRecovery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfEquipmentRecovery equipements = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_equipements()));
        if (input->ExpectTag(18)) goto parse_personnels;
        break;
      }
      
      // optional .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfHumanRecovery personnels = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_personnels:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_personnels()));
        if (input->ExpectTag(26)) goto parse_dotations;
        break;
      }
      
      // optional .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfDotationRecovery dotations = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_dotations:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_dotations()));
        if (input->ExpectTag(34)) goto parse_munitions;
        break;
      }
      
      // optional .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfAmmunitionDotationRecovery munitions = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_munitions:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_munitions()));
        if (input->ExpectTag(42)) goto parse_stocks;
        break;
      }
      
      // optional .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfStockRecovery stocks = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_stocks:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_stocks()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMagicActionPartialRecovery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMagicActionPartialRecovery::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfEquipmentRecovery equipements = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->equipements(), output);
  }
  
  // optional .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfHumanRecovery personnels = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->personnels(), output);
  }
  
  // optional .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfDotationRecovery dotations = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->dotations(), output);
  }
  
  // optional .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfAmmunitionDotationRecovery munitions = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      4, this->munitions(), output);
  }
  
  // optional .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfStockRecovery stocks = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      5, this->stocks(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMagicActionPartialRecovery::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfEquipmentRecovery equipements = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->equipements(), target);
  }
  
  // optional .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfHumanRecovery personnels = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->personnels(), target);
  }
  
  // optional .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfDotationRecovery dotations = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->dotations(), target);
  }
  
  // optional .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfAmmunitionDotationRecovery munitions = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->munitions(), target);
  }
  
  // optional .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfStockRecovery stocks = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->stocks(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMagicActionPartialRecovery::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfEquipmentRecovery equipements = 1;
    if (has_equipements()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->equipements());
    }
    
    // optional .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfHumanRecovery personnels = 2;
    if (has_personnels()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->personnels());
    }
    
    // optional .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfDotationRecovery dotations = 3;
    if (has_dotations()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dotations());
    }
    
    // optional .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfAmmunitionDotationRecovery munitions = 4;
    if (has_munitions()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->munitions());
    }
    
    // optional .MsgsClientToSim.MsgMagicActionPartialRecovery.SeqOfStockRecovery stocks = 5;
    if (has_stocks()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stocks());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMagicActionPartialRecovery::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMagicActionPartialRecovery* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMagicActionPartialRecovery*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMagicActionPartialRecovery::MergeFrom(const MsgMagicActionPartialRecovery& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_equipements()->::MsgsClientToSim::MsgMagicActionPartialRecovery_SeqOfEquipmentRecovery::MergeFrom(from.equipements());
    }
    if (from._has_bit(1)) {
      mutable_personnels()->::MsgsClientToSim::MsgMagicActionPartialRecovery_SeqOfHumanRecovery::MergeFrom(from.personnels());
    }
    if (from._has_bit(2)) {
      mutable_dotations()->::MsgsClientToSim::MsgMagicActionPartialRecovery_SeqOfDotationRecovery::MergeFrom(from.dotations());
    }
    if (from._has_bit(3)) {
      mutable_munitions()->::MsgsClientToSim::MsgMagicActionPartialRecovery_SeqOfAmmunitionDotationRecovery::MergeFrom(from.munitions());
    }
    if (from._has_bit(4)) {
      mutable_stocks()->::MsgsClientToSim::MsgMagicActionPartialRecovery_SeqOfStockRecovery::MergeFrom(from.stocks());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMagicActionPartialRecovery::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMagicActionPartialRecovery::CopyFrom(const MsgMagicActionPartialRecovery& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMagicActionPartialRecovery::IsInitialized() const {
  
  if (has_equipements()) {
    if (!this->equipements().IsInitialized()) return false;
  }
  if (has_personnels()) {
    if (!this->personnels().IsInitialized()) return false;
  }
  if (has_dotations()) {
    if (!this->dotations().IsInitialized()) return false;
  }
  if (has_munitions()) {
    if (!this->munitions().IsInitialized()) return false;
  }
  if (has_stocks()) {
    if (!this->stocks().IsInitialized()) return false;
  }
  return true;
}

void MsgMagicActionPartialRecovery::Swap(MsgMagicActionPartialRecovery* other) {
  if (other != this) {
    std::swap(equipements_, other->equipements_);
    std::swap(personnels_, other->personnels_);
    std::swap(dotations_, other->dotations_);
    std::swap(munitions_, other->munitions_);
    std::swap(stocks_, other->stocks_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMagicActionPartialRecovery::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMagicActionPartialRecovery_descriptor_;
  metadata.reflection = MsgMagicActionPartialRecovery_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgUnitMagicAction_action::kRecompletementPartielFieldNumber;
const int MsgUnitMagicAction_action::kChangeFacteursHumainsFieldNumber;
const int MsgUnitMagicAction_action::kSeRendreFieldNumber;
const int MsgUnitMagicAction_action::kDestructionTotaleFieldNumber;
const int MsgUnitMagicAction_action::kDestructionComposanteFieldNumber;
const int MsgUnitMagicAction_action::kAnnulerRedditionFieldNumber;
const int MsgUnitMagicAction_action::kRecupererTransporteursFieldNumber;
const int MsgUnitMagicAction_action::kRecompletementTotalFieldNumber;
const int MsgUnitMagicAction_action::kRecompletementPersonnelFieldNumber;
const int MsgUnitMagicAction_action::kRecompletementEquipementFieldNumber;
const int MsgUnitMagicAction_action::kRecompletementRessourcesFieldNumber;
#endif  // !_MSC_VER

MsgUnitMagicAction_action::MsgUnitMagicAction_action() {
  SharedCtor();
}

void MsgUnitMagicAction_action::InitAsDefaultInstance() {
  recompletement_partiel_ = const_cast< ::MsgsClientToSim::MsgMagicActionPartialRecovery*>(&::MsgsClientToSim::MsgMagicActionPartialRecovery::default_instance());
  change_facteurs_humains_ = const_cast< ::Common::MsgMagicActionChangeHumanFactors*>(&::Common::MsgMagicActionChangeHumanFactors::default_instance());
}

MsgUnitMagicAction_action::MsgUnitMagicAction_action(const MsgUnitMagicAction_action& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgUnitMagicAction_action::SharedCtor() {
  _cached_size_ = 0;
  recompletement_partiel_ = NULL;
  change_facteurs_humains_ = NULL;
  se_rendre_ = 0;
  destruction_totale_ = 0;
  destruction_composante_ = 0;
  annuler_reddition_ = 0;
  recuperer_transporteurs_ = 0;
  recompletement_total_ = 0;
  recompletement_personnel_ = 0;
  recompletement_equipement_ = 0;
  recompletement_ressources_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgUnitMagicAction_action::~MsgUnitMagicAction_action() {
  SharedDtor();
}

void MsgUnitMagicAction_action::SharedDtor() {
  if (this != default_instance_) {
    delete recompletement_partiel_;
    delete change_facteurs_humains_;
  }
}

const ::google::protobuf::Descriptor* MsgUnitMagicAction_action::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgUnitMagicAction_action_descriptor_;
}

const MsgUnitMagicAction_action& MsgUnitMagicAction_action::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgUnitMagicAction_action* MsgUnitMagicAction_action::default_instance_ = NULL;

MsgUnitMagicAction_action* MsgUnitMagicAction_action::New() const {
  return new MsgUnitMagicAction_action;
}

void MsgUnitMagicAction_action::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (recompletement_partiel_ != NULL) recompletement_partiel_->::MsgsClientToSim::MsgMagicActionPartialRecovery::Clear();
    }
    if (_has_bit(1)) {
      if (change_facteurs_humains_ != NULL) change_facteurs_humains_->::Common::MsgMagicActionChangeHumanFactors::Clear();
    }
    se_rendre_ = 0;
    destruction_totale_ = 0;
    destruction_composante_ = 0;
    annuler_reddition_ = 0;
    recuperer_transporteurs_ = 0;
    recompletement_total_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    recompletement_personnel_ = 0;
    recompletement_equipement_ = 0;
    recompletement_ressources_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgUnitMagicAction_action::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgsClientToSim.MsgMagicActionPartialRecovery recompletement_partiel = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_recompletement_partiel()));
        if (input->ExpectTag(18)) goto parse_change_facteurs_humains;
        break;
      }
      
      // optional .Common.MsgMagicActionChangeHumanFactors change_facteurs_humains = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_change_facteurs_humains:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_change_facteurs_humains()));
        if (input->ExpectTag(24)) goto parse_se_rendre;
        break;
      }
      
      // optional int32 se_rendre = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_se_rendre:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &se_rendre_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_destruction_totale;
        break;
      }
      
      // optional int32 destruction_totale = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_destruction_totale:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &destruction_totale_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_destruction_composante;
        break;
      }
      
      // optional int32 destruction_composante = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_destruction_composante:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &destruction_composante_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_annuler_reddition;
        break;
      }
      
      // optional int32 annuler_reddition = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_annuler_reddition:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &annuler_reddition_));
        _set_bit(5);
        if (input->ExpectTag(56)) goto parse_recuperer_transporteurs;
        break;
      }
      
      // optional int32 recuperer_transporteurs = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_recuperer_transporteurs:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &recuperer_transporteurs_));
        _set_bit(6);
        if (input->ExpectTag(64)) goto parse_recompletement_total;
        break;
      }
      
      // optional int32 recompletement_total = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_recompletement_total:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &recompletement_total_));
        _set_bit(7);
        if (input->ExpectTag(72)) goto parse_recompletement_personnel;
        break;
      }
      
      // optional int32 recompletement_personnel = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_recompletement_personnel:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &recompletement_personnel_));
        _set_bit(8);
        if (input->ExpectTag(80)) goto parse_recompletement_equipement;
        break;
      }
      
      // optional int32 recompletement_equipement = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_recompletement_equipement:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &recompletement_equipement_));
        _set_bit(9);
        if (input->ExpectTag(88)) goto parse_recompletement_ressources;
        break;
      }
      
      // optional int32 recompletement_ressources = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_recompletement_ressources:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &recompletement_ressources_));
        _set_bit(10);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgUnitMagicAction_action::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgUnitMagicAction_action::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .MsgsClientToSim.MsgMagicActionPartialRecovery recompletement_partiel = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->recompletement_partiel(), output);
  }
  
  // optional .Common.MsgMagicActionChangeHumanFactors change_facteurs_humains = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->change_facteurs_humains(), output);
  }
  
  // optional int32 se_rendre = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->se_rendre(), output);
  }
  
  // optional int32 destruction_totale = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->destruction_totale(), output);
  }
  
  // optional int32 destruction_composante = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->destruction_composante(), output);
  }
  
  // optional int32 annuler_reddition = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->annuler_reddition(), output);
  }
  
  // optional int32 recuperer_transporteurs = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->recuperer_transporteurs(), output);
  }
  
  // optional int32 recompletement_total = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->recompletement_total(), output);
  }
  
  // optional int32 recompletement_personnel = 9;
  if (_has_bit(8)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->recompletement_personnel(), output);
  }
  
  // optional int32 recompletement_equipement = 10;
  if (_has_bit(9)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->recompletement_equipement(), output);
  }
  
  // optional int32 recompletement_ressources = 11;
  if (_has_bit(10)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->recompletement_ressources(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgUnitMagicAction_action::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .MsgsClientToSim.MsgMagicActionPartialRecovery recompletement_partiel = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->recompletement_partiel(), target);
  }
  
  // optional .Common.MsgMagicActionChangeHumanFactors change_facteurs_humains = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->change_facteurs_humains(), target);
  }
  
  // optional int32 se_rendre = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->se_rendre(), target);
  }
  
  // optional int32 destruction_totale = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->destruction_totale(), target);
  }
  
  // optional int32 destruction_composante = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->destruction_composante(), target);
  }
  
  // optional int32 annuler_reddition = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->annuler_reddition(), target);
  }
  
  // optional int32 recuperer_transporteurs = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->recuperer_transporteurs(), target);
  }
  
  // optional int32 recompletement_total = 8;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->recompletement_total(), target);
  }
  
  // optional int32 recompletement_personnel = 9;
  if (_has_bit(8)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->recompletement_personnel(), target);
  }
  
  // optional int32 recompletement_equipement = 10;
  if (_has_bit(9)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->recompletement_equipement(), target);
  }
  
  // optional int32 recompletement_ressources = 11;
  if (_has_bit(10)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->recompletement_ressources(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgUnitMagicAction_action::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgsClientToSim.MsgMagicActionPartialRecovery recompletement_partiel = 1;
    if (has_recompletement_partiel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->recompletement_partiel());
    }
    
    // optional .Common.MsgMagicActionChangeHumanFactors change_facteurs_humains = 2;
    if (has_change_facteurs_humains()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->change_facteurs_humains());
    }
    
    // optional int32 se_rendre = 3;
    if (has_se_rendre()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->se_rendre());
    }
    
    // optional int32 destruction_totale = 4;
    if (has_destruction_totale()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->destruction_totale());
    }
    
    // optional int32 destruction_composante = 5;
    if (has_destruction_composante()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->destruction_composante());
    }
    
    // optional int32 annuler_reddition = 6;
    if (has_annuler_reddition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->annuler_reddition());
    }
    
    // optional int32 recuperer_transporteurs = 7;
    if (has_recuperer_transporteurs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recuperer_transporteurs());
    }
    
    // optional int32 recompletement_total = 8;
    if (has_recompletement_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recompletement_total());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 recompletement_personnel = 9;
    if (has_recompletement_personnel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recompletement_personnel());
    }
    
    // optional int32 recompletement_equipement = 10;
    if (has_recompletement_equipement()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recompletement_equipement());
    }
    
    // optional int32 recompletement_ressources = 11;
    if (has_recompletement_ressources()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recompletement_ressources());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgUnitMagicAction_action::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgUnitMagicAction_action* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgUnitMagicAction_action*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgUnitMagicAction_action::MergeFrom(const MsgUnitMagicAction_action& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_recompletement_partiel()->::MsgsClientToSim::MsgMagicActionPartialRecovery::MergeFrom(from.recompletement_partiel());
    }
    if (from._has_bit(1)) {
      mutable_change_facteurs_humains()->::Common::MsgMagicActionChangeHumanFactors::MergeFrom(from.change_facteurs_humains());
    }
    if (from._has_bit(2)) {
      set_se_rendre(from.se_rendre());
    }
    if (from._has_bit(3)) {
      set_destruction_totale(from.destruction_totale());
    }
    if (from._has_bit(4)) {
      set_destruction_composante(from.destruction_composante());
    }
    if (from._has_bit(5)) {
      set_annuler_reddition(from.annuler_reddition());
    }
    if (from._has_bit(6)) {
      set_recuperer_transporteurs(from.recuperer_transporteurs());
    }
    if (from._has_bit(7)) {
      set_recompletement_total(from.recompletement_total());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from._has_bit(8)) {
      set_recompletement_personnel(from.recompletement_personnel());
    }
    if (from._has_bit(9)) {
      set_recompletement_equipement(from.recompletement_equipement());
    }
    if (from._has_bit(10)) {
      set_recompletement_ressources(from.recompletement_ressources());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgUnitMagicAction_action::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgUnitMagicAction_action::CopyFrom(const MsgUnitMagicAction_action& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUnitMagicAction_action::IsInitialized() const {
  
  if (has_recompletement_partiel()) {
    if (!this->recompletement_partiel().IsInitialized()) return false;
  }
  return true;
}

void MsgUnitMagicAction_action::Swap(MsgUnitMagicAction_action* other) {
  if (other != this) {
    std::swap(recompletement_partiel_, other->recompletement_partiel_);
    std::swap(change_facteurs_humains_, other->change_facteurs_humains_);
    std::swap(se_rendre_, other->se_rendre_);
    std::swap(destruction_totale_, other->destruction_totale_);
    std::swap(destruction_composante_, other->destruction_composante_);
    std::swap(annuler_reddition_, other->annuler_reddition_);
    std::swap(recuperer_transporteurs_, other->recuperer_transporteurs_);
    std::swap(recompletement_total_, other->recompletement_total_);
    std::swap(recompletement_personnel_, other->recompletement_personnel_);
    std::swap(recompletement_equipement_, other->recompletement_equipement_);
    std::swap(recompletement_ressources_, other->recompletement_ressources_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgUnitMagicAction_action::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgUnitMagicAction_action_descriptor_;
  metadata.reflection = MsgUnitMagicAction_action_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgUnitMagicAction::kOidFieldNumber;
const int MsgUnitMagicAction::kActionFieldNumber;
#endif  // !_MSC_VER

MsgUnitMagicAction::MsgUnitMagicAction() {
  SharedCtor();
}

void MsgUnitMagicAction::InitAsDefaultInstance() {
  action_ = const_cast< ::MsgsClientToSim::MsgUnitMagicAction_action*>(&::MsgsClientToSim::MsgUnitMagicAction_action::default_instance());
}

MsgUnitMagicAction::MsgUnitMagicAction(const MsgUnitMagicAction& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgUnitMagicAction::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0u;
  action_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgUnitMagicAction::~MsgUnitMagicAction() {
  SharedDtor();
}

void MsgUnitMagicAction::SharedDtor() {
  if (this != default_instance_) {
    delete action_;
  }
}

const ::google::protobuf::Descriptor* MsgUnitMagicAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgUnitMagicAction_descriptor_;
}

const MsgUnitMagicAction& MsgUnitMagicAction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgUnitMagicAction* MsgUnitMagicAction::default_instance_ = NULL;

MsgUnitMagicAction* MsgUnitMagicAction::New() const {
  return new MsgUnitMagicAction;
}

void MsgUnitMagicAction::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0u;
    if (_has_bit(1)) {
      if (action_ != NULL) action_->::MsgsClientToSim::MsgUnitMagicAction_action::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgUnitMagicAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_action;
        break;
      }
      
      // required .MsgsClientToSim.MsgUnitMagicAction_action action = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_action:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_action()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgUnitMagicAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgUnitMagicAction::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->oid(), output);
  }
  
  // required .MsgsClientToSim.MsgUnitMagicAction_action action = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->action(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgUnitMagicAction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->oid(), target);
  }
  
  // required .MsgsClientToSim.MsgUnitMagicAction_action action = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->action(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgUnitMagicAction::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid());
    }
    
    // required .MsgsClientToSim.MsgUnitMagicAction_action action = 2;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->action());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgUnitMagicAction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgUnitMagicAction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgUnitMagicAction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgUnitMagicAction::MergeFrom(const MsgUnitMagicAction& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
    if (from._has_bit(1)) {
      mutable_action()->::MsgsClientToSim::MsgUnitMagicAction_action::MergeFrom(from.action());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgUnitMagicAction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgUnitMagicAction::CopyFrom(const MsgUnitMagicAction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUnitMagicAction::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_action()) {
    if (!this->action().IsInitialized()) return false;
  }
  return true;
}

void MsgUnitMagicAction::Swap(MsgUnitMagicAction* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(action_, other->action_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgUnitMagicAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgUnitMagicAction_descriptor_;
  metadata.reflection = MsgUnitMagicAction_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgMagicActionCreateObject::_default_type_;
const ::std::string MsgMagicActionCreateObject::_default_name_;
#ifndef _MSC_VER
const int MsgMagicActionCreateObject::kTypeFieldNumber;
const int MsgMagicActionCreateObject::kLocationFieldNumber;
const int MsgMagicActionCreateObject::kNameFieldNumber;
const int MsgMagicActionCreateObject::kTeamFieldNumber;
const int MsgMagicActionCreateObject::kAttributesFieldNumber;
#endif  // !_MSC_VER

MsgMagicActionCreateObject::MsgMagicActionCreateObject() {
  SharedCtor();
}

void MsgMagicActionCreateObject::InitAsDefaultInstance() {
  location_ = const_cast< ::Common::MsgLocation*>(&::Common::MsgLocation::default_instance());
  attributes_ = const_cast< ::Common::MsgObjectAttributes*>(&::Common::MsgObjectAttributes::default_instance());
}

MsgMagicActionCreateObject::MsgMagicActionCreateObject(const MsgMagicActionCreateObject& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMagicActionCreateObject::SharedCtor() {
  _cached_size_ = 0;
  type_ = const_cast< ::std::string*>(&_default_type_);
  location_ = NULL;
  name_ = const_cast< ::std::string*>(&_default_name_);
  team_ = 0;
  attributes_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMagicActionCreateObject::~MsgMagicActionCreateObject() {
  SharedDtor();
}

void MsgMagicActionCreateObject::SharedDtor() {
  if (type_ != &_default_type_) {
    delete type_;
  }
  if (name_ != &_default_name_) {
    delete name_;
  }
  if (this != default_instance_) {
    delete location_;
    delete attributes_;
  }
}

const ::google::protobuf::Descriptor* MsgMagicActionCreateObject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMagicActionCreateObject_descriptor_;
}

const MsgMagicActionCreateObject& MsgMagicActionCreateObject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgMagicActionCreateObject* MsgMagicActionCreateObject::default_instance_ = NULL;

MsgMagicActionCreateObject* MsgMagicActionCreateObject::New() const {
  return new MsgMagicActionCreateObject;
}

void MsgMagicActionCreateObject::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (type_ != &_default_type_) {
        type_->clear();
      }
    }
    if (_has_bit(1)) {
      if (location_ != NULL) location_->::Common::MsgLocation::Clear();
    }
    if (_has_bit(2)) {
      if (name_ != &_default_name_) {
        name_->clear();
      }
    }
    team_ = 0;
    if (_has_bit(4)) {
      if (attributes_ != NULL) attributes_->::Common::MsgObjectAttributes::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMagicActionCreateObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_type()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->type().data(), this->type().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(18)) goto parse_location;
        break;
      }
      
      // required .Common.MsgLocation location = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_location:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_location()));
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }
      
      // required string name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_name:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_name()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->name().data(), this->name().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(32)) goto parse_team;
        break;
      }
      
      // required int32 team = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_team:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &team_));
        _set_bit(3);
        if (input->ExpectTag(42)) goto parse_attributes;
        break;
      }
      
      // required .Common.MsgObjectAttributes attributes = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_attributes:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_attributes()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMagicActionCreateObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMagicActionCreateObject::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required string type = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->type(), output);
  }
  
  // required .Common.MsgLocation location = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->location(), output);
  }
  
  // required string name = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->name(), output);
  }
  
  // required int32 team = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->team(), output);
  }
  
  // required .Common.MsgObjectAttributes attributes = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      5, this->attributes(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMagicActionCreateObject::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string type = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }
  
  // required .Common.MsgLocation location = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->location(), target);
  }
  
  // required string name = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }
  
  // required int32 team = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->team(), target);
  }
  
  // required .Common.MsgObjectAttributes attributes = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->attributes(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMagicActionCreateObject::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }
    
    // required .Common.MsgLocation location = 2;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->location());
    }
    
    // required string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // required int32 team = 4;
    if (has_team()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->team());
    }
    
    // required .Common.MsgObjectAttributes attributes = 5;
    if (has_attributes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attributes());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMagicActionCreateObject::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMagicActionCreateObject* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMagicActionCreateObject*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMagicActionCreateObject::MergeFrom(const MsgMagicActionCreateObject& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_type(from.type());
    }
    if (from._has_bit(1)) {
      mutable_location()->::Common::MsgLocation::MergeFrom(from.location());
    }
    if (from._has_bit(2)) {
      set_name(from.name());
    }
    if (from._has_bit(3)) {
      set_team(from.team());
    }
    if (from._has_bit(4)) {
      mutable_attributes()->::Common::MsgObjectAttributes::MergeFrom(from.attributes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMagicActionCreateObject::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMagicActionCreateObject::CopyFrom(const MsgMagicActionCreateObject& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMagicActionCreateObject::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  
  if (has_location()) {
    if (!this->location().IsInitialized()) return false;
  }
  if (has_attributes()) {
    if (!this->attributes().IsInitialized()) return false;
  }
  return true;
}

void MsgMagicActionCreateObject::Swap(MsgMagicActionCreateObject* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(location_, other->location_);
    std::swap(name_, other->name_);
    std::swap(team_, other->team_);
    std::swap(attributes_, other->attributes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMagicActionCreateObject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMagicActionCreateObject_descriptor_;
  metadata.reflection = MsgMagicActionCreateObject_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMagicActionUpdateObject::kOidFieldNumber;
const int MsgMagicActionUpdateObject::kAttributesFieldNumber;
#endif  // !_MSC_VER

MsgMagicActionUpdateObject::MsgMagicActionUpdateObject() {
  SharedCtor();
}

void MsgMagicActionUpdateObject::InitAsDefaultInstance() {
  attributes_ = const_cast< ::Common::MsgObjectAttributes*>(&::Common::MsgObjectAttributes::default_instance());
}

MsgMagicActionUpdateObject::MsgMagicActionUpdateObject(const MsgMagicActionUpdateObject& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMagicActionUpdateObject::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0;
  attributes_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMagicActionUpdateObject::~MsgMagicActionUpdateObject() {
  SharedDtor();
}

void MsgMagicActionUpdateObject::SharedDtor() {
  if (this != default_instance_) {
    delete attributes_;
  }
}

const ::google::protobuf::Descriptor* MsgMagicActionUpdateObject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMagicActionUpdateObject_descriptor_;
}

const MsgMagicActionUpdateObject& MsgMagicActionUpdateObject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgMagicActionUpdateObject* MsgMagicActionUpdateObject::default_instance_ = NULL;

MsgMagicActionUpdateObject* MsgMagicActionUpdateObject::New() const {
  return new MsgMagicActionUpdateObject;
}

void MsgMagicActionUpdateObject::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0;
    if (_has_bit(1)) {
      if (attributes_ != NULL) attributes_->::Common::MsgObjectAttributes::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMagicActionUpdateObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_attributes;
        break;
      }
      
      // required .Common.MsgObjectAttributes attributes = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_attributes:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_attributes()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMagicActionUpdateObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMagicActionUpdateObject::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->oid(), output);
  }
  
  // required .Common.MsgObjectAttributes attributes = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->attributes(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMagicActionUpdateObject::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->oid(), target);
  }
  
  // required .Common.MsgObjectAttributes attributes = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->attributes(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMagicActionUpdateObject::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oid());
    }
    
    // required .Common.MsgObjectAttributes attributes = 2;
    if (has_attributes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attributes());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMagicActionUpdateObject::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMagicActionUpdateObject* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMagicActionUpdateObject*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMagicActionUpdateObject::MergeFrom(const MsgMagicActionUpdateObject& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
    if (from._has_bit(1)) {
      mutable_attributes()->::Common::MsgObjectAttributes::MergeFrom(from.attributes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMagicActionUpdateObject::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMagicActionUpdateObject::CopyFrom(const MsgMagicActionUpdateObject& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMagicActionUpdateObject::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_attributes()) {
    if (!this->attributes().IsInitialized()) return false;
  }
  return true;
}

void MsgMagicActionUpdateObject::Swap(MsgMagicActionUpdateObject* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(attributes_, other->attributes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMagicActionUpdateObject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMagicActionUpdateObject_descriptor_;
  metadata.reflection = MsgMagicActionUpdateObject_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjectMagicAction_action::kCreateObjectFieldNumber;
const int MsgObjectMagicAction_action::kUpdateObjectFieldNumber;
const int MsgObjectMagicAction_action::kDestroyObjectFieldNumber;
#endif  // !_MSC_VER

MsgObjectMagicAction_action::MsgObjectMagicAction_action() {
  SharedCtor();
}

void MsgObjectMagicAction_action::InitAsDefaultInstance() {
  create_object_ = const_cast< ::MsgsClientToSim::MsgMagicActionCreateObject*>(&::MsgsClientToSim::MsgMagicActionCreateObject::default_instance());
  update_object_ = const_cast< ::MsgsClientToSim::MsgMagicActionUpdateObject*>(&::MsgsClientToSim::MsgMagicActionUpdateObject::default_instance());
}

MsgObjectMagicAction_action::MsgObjectMagicAction_action(const MsgObjectMagicAction_action& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgObjectMagicAction_action::SharedCtor() {
  _cached_size_ = 0;
  create_object_ = NULL;
  update_object_ = NULL;
  destroy_object_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjectMagicAction_action::~MsgObjectMagicAction_action() {
  SharedDtor();
}

void MsgObjectMagicAction_action::SharedDtor() {
  if (this != default_instance_) {
    delete create_object_;
    delete update_object_;
  }
}

const ::google::protobuf::Descriptor* MsgObjectMagicAction_action::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjectMagicAction_action_descriptor_;
}

const MsgObjectMagicAction_action& MsgObjectMagicAction_action::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgObjectMagicAction_action* MsgObjectMagicAction_action::default_instance_ = NULL;

MsgObjectMagicAction_action* MsgObjectMagicAction_action::New() const {
  return new MsgObjectMagicAction_action;
}

void MsgObjectMagicAction_action::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (create_object_ != NULL) create_object_->::MsgsClientToSim::MsgMagicActionCreateObject::Clear();
    }
    if (_has_bit(1)) {
      if (update_object_ != NULL) update_object_->::MsgsClientToSim::MsgMagicActionUpdateObject::Clear();
    }
    destroy_object_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgObjectMagicAction_action::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgsClientToSim.MsgMagicActionCreateObject create_object = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_create_object()));
        if (input->ExpectTag(18)) goto parse_update_object;
        break;
      }
      
      // optional .MsgsClientToSim.MsgMagicActionUpdateObject update_object = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_update_object:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_update_object()));
        if (input->ExpectTag(24)) goto parse_destroy_object;
        break;
      }
      
      // optional int32 destroy_object = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_destroy_object:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &destroy_object_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgObjectMagicAction_action::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgObjectMagicAction_action::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .MsgsClientToSim.MsgMagicActionCreateObject create_object = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->create_object(), output);
  }
  
  // optional .MsgsClientToSim.MsgMagicActionUpdateObject update_object = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->update_object(), output);
  }
  
  // optional int32 destroy_object = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->destroy_object(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgObjectMagicAction_action::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .MsgsClientToSim.MsgMagicActionCreateObject create_object = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->create_object(), target);
  }
  
  // optional .MsgsClientToSim.MsgMagicActionUpdateObject update_object = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->update_object(), target);
  }
  
  // optional int32 destroy_object = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->destroy_object(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgObjectMagicAction_action::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgsClientToSim.MsgMagicActionCreateObject create_object = 1;
    if (has_create_object()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->create_object());
    }
    
    // optional .MsgsClientToSim.MsgMagicActionUpdateObject update_object = 2;
    if (has_update_object()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->update_object());
    }
    
    // optional int32 destroy_object = 3;
    if (has_destroy_object()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->destroy_object());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgObjectMagicAction_action::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgObjectMagicAction_action* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgObjectMagicAction_action*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgObjectMagicAction_action::MergeFrom(const MsgObjectMagicAction_action& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_create_object()->::MsgsClientToSim::MsgMagicActionCreateObject::MergeFrom(from.create_object());
    }
    if (from._has_bit(1)) {
      mutable_update_object()->::MsgsClientToSim::MsgMagicActionUpdateObject::MergeFrom(from.update_object());
    }
    if (from._has_bit(2)) {
      set_destroy_object(from.destroy_object());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgObjectMagicAction_action::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgObjectMagicAction_action::CopyFrom(const MsgObjectMagicAction_action& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjectMagicAction_action::IsInitialized() const {
  
  if (has_create_object()) {
    if (!this->create_object().IsInitialized()) return false;
  }
  if (has_update_object()) {
    if (!this->update_object().IsInitialized()) return false;
  }
  return true;
}

void MsgObjectMagicAction_action::Swap(MsgObjectMagicAction_action* other) {
  if (other != this) {
    std::swap(create_object_, other->create_object_);
    std::swap(update_object_, other->update_object_);
    std::swap(destroy_object_, other->destroy_object_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgObjectMagicAction_action::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgObjectMagicAction_action_descriptor_;
  metadata.reflection = MsgObjectMagicAction_action_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjectMagicAction::kActionFieldNumber;
#endif  // !_MSC_VER

MsgObjectMagicAction::MsgObjectMagicAction() {
  SharedCtor();
}

void MsgObjectMagicAction::InitAsDefaultInstance() {
  action_ = const_cast< ::MsgsClientToSim::MsgObjectMagicAction_action*>(&::MsgsClientToSim::MsgObjectMagicAction_action::default_instance());
}

MsgObjectMagicAction::MsgObjectMagicAction(const MsgObjectMagicAction& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgObjectMagicAction::SharedCtor() {
  _cached_size_ = 0;
  action_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjectMagicAction::~MsgObjectMagicAction() {
  SharedDtor();
}

void MsgObjectMagicAction::SharedDtor() {
  if (this != default_instance_) {
    delete action_;
  }
}

const ::google::protobuf::Descriptor* MsgObjectMagicAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjectMagicAction_descriptor_;
}

const MsgObjectMagicAction& MsgObjectMagicAction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgObjectMagicAction* MsgObjectMagicAction::default_instance_ = NULL;

MsgObjectMagicAction* MsgObjectMagicAction::New() const {
  return new MsgObjectMagicAction;
}

void MsgObjectMagicAction::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (action_ != NULL) action_->::MsgsClientToSim::MsgObjectMagicAction_action::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgObjectMagicAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MsgsClientToSim.MsgObjectMagicAction_action action = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_action()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgObjectMagicAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgObjectMagicAction::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .MsgsClientToSim.MsgObjectMagicAction_action action = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->action(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgObjectMagicAction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .MsgsClientToSim.MsgObjectMagicAction_action action = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->action(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgObjectMagicAction::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .MsgsClientToSim.MsgObjectMagicAction_action action = 1;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->action());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgObjectMagicAction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgObjectMagicAction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgObjectMagicAction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgObjectMagicAction::MergeFrom(const MsgObjectMagicAction& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_action()->::MsgsClientToSim::MsgObjectMagicAction_action::MergeFrom(from.action());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgObjectMagicAction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgObjectMagicAction::CopyFrom(const MsgObjectMagicAction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjectMagicAction::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_action()) {
    if (!this->action().IsInitialized()) return false;
  }
  return true;
}

void MsgObjectMagicAction::Swap(MsgObjectMagicAction* other) {
  if (other != this) {
    std::swap(action_, other->action_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgObjectMagicAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgObjectMagicAction_descriptor_;
  metadata.reflection = MsgObjectMagicAction_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMagicActionCreateFireOrder::kOidTargetKnowledgeFieldNumber;
const int MsgMagicActionCreateFireOrder::kOidAgentForCrFieldNumber;
const int MsgMagicActionCreateFireOrder::kMunitionFieldNumber;
const int MsgMagicActionCreateFireOrder::kItFieldNumber;
#endif  // !_MSC_VER

MsgMagicActionCreateFireOrder::MsgMagicActionCreateFireOrder() {
  SharedCtor();
}

void MsgMagicActionCreateFireOrder::InitAsDefaultInstance() {
}

MsgMagicActionCreateFireOrder::MsgMagicActionCreateFireOrder(const MsgMagicActionCreateFireOrder& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMagicActionCreateFireOrder::SharedCtor() {
  _cached_size_ = 0;
  oid_targetknowledge_ = 0;
  oid_agentforcr_ = 0;
  munition_ = 0;
  it_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMagicActionCreateFireOrder::~MsgMagicActionCreateFireOrder() {
  SharedDtor();
}

void MsgMagicActionCreateFireOrder::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgMagicActionCreateFireOrder::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMagicActionCreateFireOrder_descriptor_;
}

const MsgMagicActionCreateFireOrder& MsgMagicActionCreateFireOrder::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgMagicActionCreateFireOrder* MsgMagicActionCreateFireOrder::default_instance_ = NULL;

MsgMagicActionCreateFireOrder* MsgMagicActionCreateFireOrder::New() const {
  return new MsgMagicActionCreateFireOrder;
}

void MsgMagicActionCreateFireOrder::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_targetknowledge_ = 0;
    oid_agentforcr_ = 0;
    munition_ = 0;
    it_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMagicActionCreateFireOrder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 oid_targetKnowledge = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oid_targetknowledge_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_oid_agentForCr;
        break;
      }
      
      // required int32 oid_agentForCr = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_oid_agentForCr:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oid_agentforcr_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_munition;
        break;
      }
      
      // required int32 munition = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_munition:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &munition_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_it;
        break;
      }
      
      // required int32 it = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_it:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &it_));
        _set_bit(3);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMagicActionCreateFireOrder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMagicActionCreateFireOrder::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 oid_targetKnowledge = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->oid_targetknowledge(), output);
  }
  
  // required int32 oid_agentForCr = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->oid_agentforcr(), output);
  }
  
  // required int32 munition = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->munition(), output);
  }
  
  // required int32 it = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->it(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMagicActionCreateFireOrder::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 oid_targetKnowledge = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->oid_targetknowledge(), target);
  }
  
  // required int32 oid_agentForCr = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->oid_agentforcr(), target);
  }
  
  // required int32 munition = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->munition(), target);
  }
  
  // required int32 it = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->it(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMagicActionCreateFireOrder::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 oid_targetKnowledge = 1;
    if (has_oid_targetknowledge()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oid_targetknowledge());
    }
    
    // required int32 oid_agentForCr = 2;
    if (has_oid_agentforcr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oid_agentforcr());
    }
    
    // required int32 munition = 3;
    if (has_munition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->munition());
    }
    
    // required int32 it = 4;
    if (has_it()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->it());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMagicActionCreateFireOrder::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMagicActionCreateFireOrder* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMagicActionCreateFireOrder*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMagicActionCreateFireOrder::MergeFrom(const MsgMagicActionCreateFireOrder& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid_targetknowledge(from.oid_targetknowledge());
    }
    if (from._has_bit(1)) {
      set_oid_agentforcr(from.oid_agentforcr());
    }
    if (from._has_bit(2)) {
      set_munition(from.munition());
    }
    if (from._has_bit(3)) {
      set_it(from.it());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMagicActionCreateFireOrder::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMagicActionCreateFireOrder::CopyFrom(const MsgMagicActionCreateFireOrder& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMagicActionCreateFireOrder::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  
  return true;
}

void MsgMagicActionCreateFireOrder::Swap(MsgMagicActionCreateFireOrder* other) {
  if (other != this) {
    std::swap(oid_targetknowledge_, other->oid_targetknowledge_);
    std::swap(oid_agentforcr_, other->oid_agentforcr_);
    std::swap(munition_, other->munition_);
    std::swap(it_, other->it_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMagicActionCreateFireOrder::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMagicActionCreateFireOrder_descriptor_;
  metadata.reflection = MsgMagicActionCreateFireOrder_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgPopulationMagicAction_action::kChangeAttitudeFieldNumber;
const int MsgPopulationMagicAction_action::kDestructionTotaleFieldNumber;
const int MsgPopulationMagicAction_action::kTuerFieldNumber;
const int MsgPopulationMagicAction_action::kRessusciterFieldNumber;
#endif  // !_MSC_VER

MsgPopulationMagicAction_action::MsgPopulationMagicAction_action() {
  SharedCtor();
}

void MsgPopulationMagicAction_action::InitAsDefaultInstance() {
  change_attitude_ = const_cast< ::Common::MsgMagicActionPopulationChangeAttitude*>(&::Common::MsgMagicActionPopulationChangeAttitude::default_instance());
  tuer_ = const_cast< ::Common::MsgMagicActionPopulationKill*>(&::Common::MsgMagicActionPopulationKill::default_instance());
  ressusciter_ = const_cast< ::Common::MsgMagicActionPopulationResurrect*>(&::Common::MsgMagicActionPopulationResurrect::default_instance());
}

MsgPopulationMagicAction_action::MsgPopulationMagicAction_action(const MsgPopulationMagicAction_action& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgPopulationMagicAction_action::SharedCtor() {
  _cached_size_ = 0;
  change_attitude_ = NULL;
  destruction_totale_ = false;
  tuer_ = NULL;
  ressusciter_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgPopulationMagicAction_action::~MsgPopulationMagicAction_action() {
  SharedDtor();
}

void MsgPopulationMagicAction_action::SharedDtor() {
  if (this != default_instance_) {
    delete change_attitude_;
    delete tuer_;
    delete ressusciter_;
  }
}

const ::google::protobuf::Descriptor* MsgPopulationMagicAction_action::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgPopulationMagicAction_action_descriptor_;
}

const MsgPopulationMagicAction_action& MsgPopulationMagicAction_action::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgPopulationMagicAction_action* MsgPopulationMagicAction_action::default_instance_ = NULL;

MsgPopulationMagicAction_action* MsgPopulationMagicAction_action::New() const {
  return new MsgPopulationMagicAction_action;
}

void MsgPopulationMagicAction_action::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (change_attitude_ != NULL) change_attitude_->::Common::MsgMagicActionPopulationChangeAttitude::Clear();
    }
    destruction_totale_ = false;
    if (_has_bit(2)) {
      if (tuer_ != NULL) tuer_->::Common::MsgMagicActionPopulationKill::Clear();
    }
    if (_has_bit(3)) {
      if (ressusciter_ != NULL) ressusciter_->::Common::MsgMagicActionPopulationResurrect::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgPopulationMagicAction_action::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Common.MsgMagicActionPopulationChangeAttitude change_attitude = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_change_attitude()));
        if (input->ExpectTag(16)) goto parse_destruction_totale;
        break;
      }
      
      // optional bool destruction_totale = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_destruction_totale:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &destruction_totale_));
        _set_bit(1);
        if (input->ExpectTag(26)) goto parse_tuer;
        break;
      }
      
      // optional .Common.MsgMagicActionPopulationKill tuer = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_tuer:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_tuer()));
        if (input->ExpectTag(34)) goto parse_ressusciter;
        break;
      }
      
      // optional .Common.MsgMagicActionPopulationResurrect ressusciter = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ressusciter:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ressusciter()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgPopulationMagicAction_action::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgPopulationMagicAction_action::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .Common.MsgMagicActionPopulationChangeAttitude change_attitude = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->change_attitude(), output);
  }
  
  // optional bool destruction_totale = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->destruction_totale(), output);
  }
  
  // optional .Common.MsgMagicActionPopulationKill tuer = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->tuer(), output);
  }
  
  // optional .Common.MsgMagicActionPopulationResurrect ressusciter = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      4, this->ressusciter(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgPopulationMagicAction_action::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .Common.MsgMagicActionPopulationChangeAttitude change_attitude = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->change_attitude(), target);
  }
  
  // optional bool destruction_totale = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->destruction_totale(), target);
  }
  
  // optional .Common.MsgMagicActionPopulationKill tuer = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->tuer(), target);
  }
  
  // optional .Common.MsgMagicActionPopulationResurrect ressusciter = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->ressusciter(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgPopulationMagicAction_action::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Common.MsgMagicActionPopulationChangeAttitude change_attitude = 1;
    if (has_change_attitude()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->change_attitude());
    }
    
    // optional bool destruction_totale = 2;
    if (has_destruction_totale()) {
      total_size += 1 + 1;
    }
    
    // optional .Common.MsgMagicActionPopulationKill tuer = 3;
    if (has_tuer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tuer());
    }
    
    // optional .Common.MsgMagicActionPopulationResurrect ressusciter = 4;
    if (has_ressusciter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ressusciter());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgPopulationMagicAction_action::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgPopulationMagicAction_action* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgPopulationMagicAction_action*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgPopulationMagicAction_action::MergeFrom(const MsgPopulationMagicAction_action& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_change_attitude()->::Common::MsgMagicActionPopulationChangeAttitude::MergeFrom(from.change_attitude());
    }
    if (from._has_bit(1)) {
      set_destruction_totale(from.destruction_totale());
    }
    if (from._has_bit(2)) {
      mutable_tuer()->::Common::MsgMagicActionPopulationKill::MergeFrom(from.tuer());
    }
    if (from._has_bit(3)) {
      mutable_ressusciter()->::Common::MsgMagicActionPopulationResurrect::MergeFrom(from.ressusciter());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgPopulationMagicAction_action::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgPopulationMagicAction_action::CopyFrom(const MsgPopulationMagicAction_action& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgPopulationMagicAction_action::IsInitialized() const {
  
  if (has_change_attitude()) {
    if (!this->change_attitude().IsInitialized()) return false;
  }
  if (has_tuer()) {
    if (!this->tuer().IsInitialized()) return false;
  }
  if (has_ressusciter()) {
    if (!this->ressusciter().IsInitialized()) return false;
  }
  return true;
}

void MsgPopulationMagicAction_action::Swap(MsgPopulationMagicAction_action* other) {
  if (other != this) {
    std::swap(change_attitude_, other->change_attitude_);
    std::swap(destruction_totale_, other->destruction_totale_);
    std::swap(tuer_, other->tuer_);
    std::swap(ressusciter_, other->ressusciter_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgPopulationMagicAction_action::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgPopulationMagicAction_action_descriptor_;
  metadata.reflection = MsgPopulationMagicAction_action_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgPopulationMagicAction::kOidFieldNumber;
const int MsgPopulationMagicAction::kActionFieldNumber;
#endif  // !_MSC_VER

MsgPopulationMagicAction::MsgPopulationMagicAction() {
  SharedCtor();
}

void MsgPopulationMagicAction::InitAsDefaultInstance() {
  action_ = const_cast< ::MsgsClientToSim::MsgPopulationMagicAction_action*>(&::MsgsClientToSim::MsgPopulationMagicAction_action::default_instance());
}

MsgPopulationMagicAction::MsgPopulationMagicAction(const MsgPopulationMagicAction& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgPopulationMagicAction::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0u;
  action_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgPopulationMagicAction::~MsgPopulationMagicAction() {
  SharedDtor();
}

void MsgPopulationMagicAction::SharedDtor() {
  if (this != default_instance_) {
    delete action_;
  }
}

const ::google::protobuf::Descriptor* MsgPopulationMagicAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgPopulationMagicAction_descriptor_;
}

const MsgPopulationMagicAction& MsgPopulationMagicAction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgPopulationMagicAction* MsgPopulationMagicAction::default_instance_ = NULL;

MsgPopulationMagicAction* MsgPopulationMagicAction::New() const {
  return new MsgPopulationMagicAction;
}

void MsgPopulationMagicAction::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0u;
    if (_has_bit(1)) {
      if (action_ != NULL) action_->::MsgsClientToSim::MsgPopulationMagicAction_action::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgPopulationMagicAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_action;
        break;
      }
      
      // required .MsgsClientToSim.MsgPopulationMagicAction_action action = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_action:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_action()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgPopulationMagicAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgPopulationMagicAction::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->oid(), output);
  }
  
  // required .MsgsClientToSim.MsgPopulationMagicAction_action action = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->action(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgPopulationMagicAction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->oid(), target);
  }
  
  // required .MsgsClientToSim.MsgPopulationMagicAction_action action = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->action(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgPopulationMagicAction::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid());
    }
    
    // required .MsgsClientToSim.MsgPopulationMagicAction_action action = 2;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->action());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgPopulationMagicAction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgPopulationMagicAction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgPopulationMagicAction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgPopulationMagicAction::MergeFrom(const MsgPopulationMagicAction& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
    if (from._has_bit(1)) {
      mutable_action()->::MsgsClientToSim::MsgPopulationMagicAction_action::MergeFrom(from.action());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgPopulationMagicAction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgPopulationMagicAction::CopyFrom(const MsgPopulationMagicAction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgPopulationMagicAction::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_action()) {
    if (!this->action().IsInitialized()) return false;
  }
  return true;
}

void MsgPopulationMagicAction::Swap(MsgPopulationMagicAction* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(action_, other->action_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgPopulationMagicAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgPopulationMagicAction_descriptor_;
  metadata.reflection = MsgPopulationMagicAction_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMagicActionMoveTo::kOidFieldNumber;
const int MsgMagicActionMoveTo::kParametresFieldNumber;
#endif  // !_MSC_VER

MsgMagicActionMoveTo::MsgMagicActionMoveTo() {
  SharedCtor();
}

void MsgMagicActionMoveTo::InitAsDefaultInstance() {
  parametres_ = const_cast< ::Common::MsgMissionParameters*>(&::Common::MsgMissionParameters::default_instance());
}

MsgMagicActionMoveTo::MsgMagicActionMoveTo(const MsgMagicActionMoveTo& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMagicActionMoveTo::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0;
  parametres_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMagicActionMoveTo::~MsgMagicActionMoveTo() {
  SharedDtor();
}

void MsgMagicActionMoveTo::SharedDtor() {
  if (this != default_instance_) {
    delete parametres_;
  }
}

const ::google::protobuf::Descriptor* MsgMagicActionMoveTo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMagicActionMoveTo_descriptor_;
}

const MsgMagicActionMoveTo& MsgMagicActionMoveTo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgMagicActionMoveTo* MsgMagicActionMoveTo::default_instance_ = NULL;

MsgMagicActionMoveTo* MsgMagicActionMoveTo::New() const {
  return new MsgMagicActionMoveTo;
}

void MsgMagicActionMoveTo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0;
    if (_has_bit(1)) {
      if (parametres_ != NULL) parametres_->::Common::MsgMissionParameters::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMagicActionMoveTo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_parametres;
        break;
      }
      
      // required .Common.MsgMissionParameters parametres = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_parametres:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_parametres()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMagicActionMoveTo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMagicActionMoveTo::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->oid(), output);
  }
  
  // required .Common.MsgMissionParameters parametres = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->parametres(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMagicActionMoveTo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->oid(), target);
  }
  
  // required .Common.MsgMissionParameters parametres = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->parametres(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMagicActionMoveTo::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oid());
    }
    
    // required .Common.MsgMissionParameters parametres = 2;
    if (has_parametres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parametres());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMagicActionMoveTo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMagicActionMoveTo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMagicActionMoveTo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMagicActionMoveTo::MergeFrom(const MsgMagicActionMoveTo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
    if (from._has_bit(1)) {
      mutable_parametres()->::Common::MsgMissionParameters::MergeFrom(from.parametres());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMagicActionMoveTo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMagicActionMoveTo::CopyFrom(const MsgMagicActionMoveTo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMagicActionMoveTo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_parametres()) {
    if (!this->parametres().IsInitialized()) return false;
  }
  return true;
}

void MsgMagicActionMoveTo::Swap(MsgMagicActionMoveTo* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(parametres_, other->parametres_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMagicActionMoveTo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMagicActionMoveTo_descriptor_;
  metadata.reflection = MsgMagicActionMoveTo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLogSupplyPushFlow::kOidDonneurFieldNumber;
const int MsgLogSupplyPushFlow::kOidReceveurFieldNumber;
const int MsgLogSupplyPushFlow::kStocksFieldNumber;
#endif  // !_MSC_VER

MsgLogSupplyPushFlow::MsgLogSupplyPushFlow() {
  SharedCtor();
}

void MsgLogSupplyPushFlow::InitAsDefaultInstance() {
  stocks_ = const_cast< ::Common::SeqOfDotationStock*>(&::Common::SeqOfDotationStock::default_instance());
}

MsgLogSupplyPushFlow::MsgLogSupplyPushFlow(const MsgLogSupplyPushFlow& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLogSupplyPushFlow::SharedCtor() {
  _cached_size_ = 0;
  oid_donneur_ = 0u;
  oid_receveur_ = 0u;
  stocks_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLogSupplyPushFlow::~MsgLogSupplyPushFlow() {
  SharedDtor();
}

void MsgLogSupplyPushFlow::SharedDtor() {
  if (this != default_instance_) {
    delete stocks_;
  }
}

const ::google::protobuf::Descriptor* MsgLogSupplyPushFlow::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLogSupplyPushFlow_descriptor_;
}

const MsgLogSupplyPushFlow& MsgLogSupplyPushFlow::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgLogSupplyPushFlow* MsgLogSupplyPushFlow::default_instance_ = NULL;

MsgLogSupplyPushFlow* MsgLogSupplyPushFlow::New() const {
  return new MsgLogSupplyPushFlow;
}

void MsgLogSupplyPushFlow::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_donneur_ = 0u;
    oid_receveur_ = 0u;
    if (_has_bit(2)) {
      if (stocks_ != NULL) stocks_->::Common::SeqOfDotationStock::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLogSupplyPushFlow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 oid_donneur = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_donneur_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_oid_receveur;
        break;
      }
      
      // required uint32 oid_receveur = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_oid_receveur:
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_receveur_));
        _set_bit(1);
        if (input->ExpectTag(26)) goto parse_stocks;
        break;
      }
      
      // required .Common.SeqOfDotationStock stocks = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_stocks:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_stocks()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLogSupplyPushFlow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLogSupplyPushFlow::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required uint32 oid_donneur = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->oid_donneur(), output);
  }
  
  // required uint32 oid_receveur = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->oid_receveur(), output);
  }
  
  // required .Common.SeqOfDotationStock stocks = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->stocks(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLogSupplyPushFlow::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 oid_donneur = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->oid_donneur(), target);
  }
  
  // required uint32 oid_receveur = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->oid_receveur(), target);
  }
  
  // required .Common.SeqOfDotationStock stocks = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->stocks(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLogSupplyPushFlow::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 oid_donneur = 1;
    if (has_oid_donneur()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid_donneur());
    }
    
    // required uint32 oid_receveur = 2;
    if (has_oid_receveur()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid_receveur());
    }
    
    // required .Common.SeqOfDotationStock stocks = 3;
    if (has_stocks()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stocks());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLogSupplyPushFlow::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLogSupplyPushFlow* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLogSupplyPushFlow*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLogSupplyPushFlow::MergeFrom(const MsgLogSupplyPushFlow& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid_donneur(from.oid_donneur());
    }
    if (from._has_bit(1)) {
      set_oid_receveur(from.oid_receveur());
    }
    if (from._has_bit(2)) {
      mutable_stocks()->::Common::SeqOfDotationStock::MergeFrom(from.stocks());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLogSupplyPushFlow::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLogSupplyPushFlow::CopyFrom(const MsgLogSupplyPushFlow& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLogSupplyPushFlow::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  if (has_stocks()) {
    if (!this->stocks().IsInitialized()) return false;
  }
  return true;
}

void MsgLogSupplyPushFlow::Swap(MsgLogSupplyPushFlow* other) {
  if (other != this) {
    std::swap(oid_donneur_, other->oid_donneur_);
    std::swap(oid_receveur_, other->oid_receveur_);
    std::swap(stocks_, other->stocks_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLogSupplyPushFlow::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLogSupplyPushFlow_descriptor_;
  metadata.reflection = MsgLogSupplyPushFlow_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLogSupplyChangeQuotas::kOidDonneurFieldNumber;
const int MsgLogSupplyChangeQuotas::kOidReceveurFieldNumber;
const int MsgLogSupplyChangeQuotas::kQuotasFieldNumber;
#endif  // !_MSC_VER

MsgLogSupplyChangeQuotas::MsgLogSupplyChangeQuotas() {
  SharedCtor();
}

void MsgLogSupplyChangeQuotas::InitAsDefaultInstance() {
  quotas_ = const_cast< ::Common::SeqOfDotationQuota*>(&::Common::SeqOfDotationQuota::default_instance());
}

MsgLogSupplyChangeQuotas::MsgLogSupplyChangeQuotas(const MsgLogSupplyChangeQuotas& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLogSupplyChangeQuotas::SharedCtor() {
  _cached_size_ = 0;
  oid_donneur_ = 0u;
  oid_receveur_ = 0u;
  quotas_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLogSupplyChangeQuotas::~MsgLogSupplyChangeQuotas() {
  SharedDtor();
}

void MsgLogSupplyChangeQuotas::SharedDtor() {
  if (this != default_instance_) {
    delete quotas_;
  }
}

const ::google::protobuf::Descriptor* MsgLogSupplyChangeQuotas::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLogSupplyChangeQuotas_descriptor_;
}

const MsgLogSupplyChangeQuotas& MsgLogSupplyChangeQuotas::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgLogSupplyChangeQuotas* MsgLogSupplyChangeQuotas::default_instance_ = NULL;

MsgLogSupplyChangeQuotas* MsgLogSupplyChangeQuotas::New() const {
  return new MsgLogSupplyChangeQuotas;
}

void MsgLogSupplyChangeQuotas::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_donneur_ = 0u;
    oid_receveur_ = 0u;
    if (_has_bit(2)) {
      if (quotas_ != NULL) quotas_->::Common::SeqOfDotationQuota::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLogSupplyChangeQuotas::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 oid_donneur = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_donneur_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_oid_receveur;
        break;
      }
      
      // required uint32 oid_receveur = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_oid_receveur:
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_receveur_));
        _set_bit(1);
        if (input->ExpectTag(26)) goto parse_quotas;
        break;
      }
      
      // required .Common.SeqOfDotationQuota quotas = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_quotas:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_quotas()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLogSupplyChangeQuotas::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLogSupplyChangeQuotas::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required uint32 oid_donneur = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->oid_donneur(), output);
  }
  
  // required uint32 oid_receveur = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->oid_receveur(), output);
  }
  
  // required .Common.SeqOfDotationQuota quotas = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->quotas(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLogSupplyChangeQuotas::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 oid_donneur = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->oid_donneur(), target);
  }
  
  // required uint32 oid_receveur = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->oid_receveur(), target);
  }
  
  // required .Common.SeqOfDotationQuota quotas = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->quotas(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLogSupplyChangeQuotas::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 oid_donneur = 1;
    if (has_oid_donneur()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid_donneur());
    }
    
    // required uint32 oid_receveur = 2;
    if (has_oid_receveur()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid_receveur());
    }
    
    // required .Common.SeqOfDotationQuota quotas = 3;
    if (has_quotas()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->quotas());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLogSupplyChangeQuotas::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLogSupplyChangeQuotas* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLogSupplyChangeQuotas*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLogSupplyChangeQuotas::MergeFrom(const MsgLogSupplyChangeQuotas& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid_donneur(from.oid_donneur());
    }
    if (from._has_bit(1)) {
      set_oid_receveur(from.oid_receveur());
    }
    if (from._has_bit(2)) {
      mutable_quotas()->::Common::SeqOfDotationQuota::MergeFrom(from.quotas());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLogSupplyChangeQuotas::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLogSupplyChangeQuotas::CopyFrom(const MsgLogSupplyChangeQuotas& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLogSupplyChangeQuotas::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  if (has_quotas()) {
    if (!this->quotas().IsInitialized()) return false;
  }
  return true;
}

void MsgLogSupplyChangeQuotas::Swap(MsgLogSupplyChangeQuotas* other) {
  if (other != this) {
    std::swap(oid_donneur_, other->oid_donneur_);
    std::swap(oid_receveur_, other->oid_receveur_);
    std::swap(quotas_, other->quotas_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLogSupplyChangeQuotas::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLogSupplyChangeQuotas_descriptor_;
  metadata.reflection = MsgLogSupplyChangeQuotas_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgControlCheckPointSetFrequency::kFrequencyFieldNumber;
#endif  // !_MSC_VER

MsgControlCheckPointSetFrequency::MsgControlCheckPointSetFrequency() {
  SharedCtor();
}

void MsgControlCheckPointSetFrequency::InitAsDefaultInstance() {
}

MsgControlCheckPointSetFrequency::MsgControlCheckPointSetFrequency(const MsgControlCheckPointSetFrequency& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgControlCheckPointSetFrequency::SharedCtor() {
  _cached_size_ = 0;
  frequency_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgControlCheckPointSetFrequency::~MsgControlCheckPointSetFrequency() {
  SharedDtor();
}

void MsgControlCheckPointSetFrequency::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgControlCheckPointSetFrequency::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlCheckPointSetFrequency_descriptor_;
}

const MsgControlCheckPointSetFrequency& MsgControlCheckPointSetFrequency::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgControlCheckPointSetFrequency* MsgControlCheckPointSetFrequency::default_instance_ = NULL;

MsgControlCheckPointSetFrequency* MsgControlCheckPointSetFrequency::New() const {
  return new MsgControlCheckPointSetFrequency;
}

void MsgControlCheckPointSetFrequency::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    frequency_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgControlCheckPointSetFrequency::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 frequency = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &frequency_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgControlCheckPointSetFrequency::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgControlCheckPointSetFrequency::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 frequency = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->frequency(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgControlCheckPointSetFrequency::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 frequency = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->frequency(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgControlCheckPointSetFrequency::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 frequency = 1;
    if (has_frequency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->frequency());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgControlCheckPointSetFrequency::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgControlCheckPointSetFrequency* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgControlCheckPointSetFrequency*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgControlCheckPointSetFrequency::MergeFrom(const MsgControlCheckPointSetFrequency& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_frequency(from.frequency());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgControlCheckPointSetFrequency::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgControlCheckPointSetFrequency::CopyFrom(const MsgControlCheckPointSetFrequency& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgControlCheckPointSetFrequency::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgControlCheckPointSetFrequency::Swap(MsgControlCheckPointSetFrequency* other) {
  if (other != this) {
    std::swap(frequency_, other->frequency_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgControlCheckPointSetFrequency::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgControlCheckPointSetFrequency_descriptor_;
  metadata.reflection = MsgControlCheckPointSetFrequency_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgControlToggleVisionCones::kVisionConesFieldNumber;
#endif  // !_MSC_VER

MsgControlToggleVisionCones::MsgControlToggleVisionCones() {
  SharedCtor();
}

void MsgControlToggleVisionCones::InitAsDefaultInstance() {
}

MsgControlToggleVisionCones::MsgControlToggleVisionCones(const MsgControlToggleVisionCones& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgControlToggleVisionCones::SharedCtor() {
  _cached_size_ = 0;
  vision_cones_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgControlToggleVisionCones::~MsgControlToggleVisionCones() {
  SharedDtor();
}

void MsgControlToggleVisionCones::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgControlToggleVisionCones::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlToggleVisionCones_descriptor_;
}

const MsgControlToggleVisionCones& MsgControlToggleVisionCones::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgControlToggleVisionCones* MsgControlToggleVisionCones::default_instance_ = NULL;

MsgControlToggleVisionCones* MsgControlToggleVisionCones::New() const {
  return new MsgControlToggleVisionCones;
}

void MsgControlToggleVisionCones::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    vision_cones_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgControlToggleVisionCones::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool vision_cones = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &vision_cones_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgControlToggleVisionCones::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgControlToggleVisionCones::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required bool vision_cones = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->vision_cones(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgControlToggleVisionCones::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool vision_cones = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->vision_cones(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgControlToggleVisionCones::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool vision_cones = 1;
    if (has_vision_cones()) {
      total_size += 1 + 1;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgControlToggleVisionCones::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgControlToggleVisionCones* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgControlToggleVisionCones*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgControlToggleVisionCones::MergeFrom(const MsgControlToggleVisionCones& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_vision_cones(from.vision_cones());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgControlToggleVisionCones::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgControlToggleVisionCones::CopyFrom(const MsgControlToggleVisionCones& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgControlToggleVisionCones::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgControlToggleVisionCones::Swap(MsgControlToggleVisionCones* other) {
  if (other != this) {
    std::swap(vision_cones_, other->vision_cones_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgControlToggleVisionCones::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgControlToggleVisionCones_descriptor_;
  metadata.reflection = MsgControlToggleVisionCones_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgKnowledgeGroupCreationRequest::_default_type_;
#ifndef _MSC_VER
const int MsgKnowledgeGroupCreationRequest::kOidCampFieldNumber;
const int MsgKnowledgeGroupCreationRequest::kOidParentFieldNumber;
const int MsgKnowledgeGroupCreationRequest::kTypeFieldNumber;
#endif  // !_MSC_VER

MsgKnowledgeGroupCreationRequest::MsgKnowledgeGroupCreationRequest() {
  SharedCtor();
}

void MsgKnowledgeGroupCreationRequest::InitAsDefaultInstance() {
}

MsgKnowledgeGroupCreationRequest::MsgKnowledgeGroupCreationRequest(const MsgKnowledgeGroupCreationRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgKnowledgeGroupCreationRequest::SharedCtor() {
  _cached_size_ = 0;
  oid_camp_ = 0u;
  oid_parent_ = 0u;
  type_ = const_cast< ::std::string*>(&_default_type_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgKnowledgeGroupCreationRequest::~MsgKnowledgeGroupCreationRequest() {
  SharedDtor();
}

void MsgKnowledgeGroupCreationRequest::SharedDtor() {
  if (type_ != &_default_type_) {
    delete type_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgKnowledgeGroupCreationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgKnowledgeGroupCreationRequest_descriptor_;
}

const MsgKnowledgeGroupCreationRequest& MsgKnowledgeGroupCreationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgKnowledgeGroupCreationRequest* MsgKnowledgeGroupCreationRequest::default_instance_ = NULL;

MsgKnowledgeGroupCreationRequest* MsgKnowledgeGroupCreationRequest::New() const {
  return new MsgKnowledgeGroupCreationRequest;
}

void MsgKnowledgeGroupCreationRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_camp_ = 0u;
    oid_parent_ = 0u;
    if (_has_bit(2)) {
      if (type_ != &_default_type_) {
        type_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgKnowledgeGroupCreationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 oid_camp = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_camp_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_oid_parent;
        break;
      }
      
      // optional uint32 oid_parent = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_oid_parent:
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_parent_));
        _set_bit(1);
        if (input->ExpectTag(26)) goto parse_type;
        break;
      }
      
      // required string type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_type:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_type()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->type().data(), this->type().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgKnowledgeGroupCreationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgKnowledgeGroupCreationRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required uint32 oid_camp = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->oid_camp(), output);
  }
  
  // optional uint32 oid_parent = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->oid_parent(), output);
  }
  
  // required string type = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgKnowledgeGroupCreationRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 oid_camp = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->oid_camp(), target);
  }
  
  // optional uint32 oid_parent = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->oid_parent(), target);
  }
  
  // required string type = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgKnowledgeGroupCreationRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 oid_camp = 1;
    if (has_oid_camp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid_camp());
    }
    
    // optional uint32 oid_parent = 2;
    if (has_oid_parent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid_parent());
    }
    
    // required string type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgKnowledgeGroupCreationRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgKnowledgeGroupCreationRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgKnowledgeGroupCreationRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgKnowledgeGroupCreationRequest::MergeFrom(const MsgKnowledgeGroupCreationRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid_camp(from.oid_camp());
    }
    if (from._has_bit(1)) {
      set_oid_parent(from.oid_parent());
    }
    if (from._has_bit(2)) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgKnowledgeGroupCreationRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgKnowledgeGroupCreationRequest::CopyFrom(const MsgKnowledgeGroupCreationRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgKnowledgeGroupCreationRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  
  return true;
}

void MsgKnowledgeGroupCreationRequest::Swap(MsgKnowledgeGroupCreationRequest* other) {
  if (other != this) {
    std::swap(oid_camp_, other->oid_camp_);
    std::swap(oid_parent_, other->oid_parent_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgKnowledgeGroupCreationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgKnowledgeGroupCreationRequest_descriptor_;
  metadata.reflection = MsgKnowledgeGroupCreationRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgKnowledgeGroupUpdateRequest::_default_type_;
#ifndef _MSC_VER
const int MsgKnowledgeGroupUpdateRequest::kOidFieldNumber;
const int MsgKnowledgeGroupUpdateRequest::kOidCampFieldNumber;
const int MsgKnowledgeGroupUpdateRequest::kOidParentFieldNumber;
const int MsgKnowledgeGroupUpdateRequest::kEnabledFieldNumber;
const int MsgKnowledgeGroupUpdateRequest::kTypeFieldNumber;
#endif  // !_MSC_VER

MsgKnowledgeGroupUpdateRequest::MsgKnowledgeGroupUpdateRequest() {
  SharedCtor();
}

void MsgKnowledgeGroupUpdateRequest::InitAsDefaultInstance() {
}

MsgKnowledgeGroupUpdateRequest::MsgKnowledgeGroupUpdateRequest(const MsgKnowledgeGroupUpdateRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgKnowledgeGroupUpdateRequest::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0u;
  oid_camp_ = 0u;
  oid_parent_ = 0u;
  enabled_ = false;
  type_ = const_cast< ::std::string*>(&_default_type_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgKnowledgeGroupUpdateRequest::~MsgKnowledgeGroupUpdateRequest() {
  SharedDtor();
}

void MsgKnowledgeGroupUpdateRequest::SharedDtor() {
  if (type_ != &_default_type_) {
    delete type_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgKnowledgeGroupUpdateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgKnowledgeGroupUpdateRequest_descriptor_;
}

const MsgKnowledgeGroupUpdateRequest& MsgKnowledgeGroupUpdateRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgKnowledgeGroupUpdateRequest* MsgKnowledgeGroupUpdateRequest::default_instance_ = NULL;

MsgKnowledgeGroupUpdateRequest* MsgKnowledgeGroupUpdateRequest::New() const {
  return new MsgKnowledgeGroupUpdateRequest;
}

void MsgKnowledgeGroupUpdateRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0u;
    oid_camp_ = 0u;
    oid_parent_ = 0u;
    enabled_ = false;
    if (_has_bit(4)) {
      if (type_ != &_default_type_) {
        type_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgKnowledgeGroupUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_oid_camp;
        break;
      }
      
      // optional uint32 oid_camp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_oid_camp:
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_camp_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_oid_parent;
        break;
      }
      
      // optional uint32 oid_parent = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_oid_parent:
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_parent_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_enabled;
        break;
      }
      
      // optional bool enabled = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_enabled:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &enabled_));
        _set_bit(3);
        if (input->ExpectTag(42)) goto parse_type;
        break;
      }
      
      // optional string type = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_type:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_type()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->type().data(), this->type().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgKnowledgeGroupUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgKnowledgeGroupUpdateRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->oid(), output);
  }
  
  // optional uint32 oid_camp = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->oid_camp(), output);
  }
  
  // optional uint32 oid_parent = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->oid_parent(), output);
  }
  
  // optional bool enabled = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->enabled(), output);
  }
  
  // optional string type = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgKnowledgeGroupUpdateRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->oid(), target);
  }
  
  // optional uint32 oid_camp = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->oid_camp(), target);
  }
  
  // optional uint32 oid_parent = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->oid_parent(), target);
  }
  
  // optional bool enabled = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->enabled(), target);
  }
  
  // optional string type = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgKnowledgeGroupUpdateRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid());
    }
    
    // optional uint32 oid_camp = 2;
    if (has_oid_camp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid_camp());
    }
    
    // optional uint32 oid_parent = 3;
    if (has_oid_parent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid_parent());
    }
    
    // optional bool enabled = 4;
    if (has_enabled()) {
      total_size += 1 + 1;
    }
    
    // optional string type = 5;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgKnowledgeGroupUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgKnowledgeGroupUpdateRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgKnowledgeGroupUpdateRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgKnowledgeGroupUpdateRequest::MergeFrom(const MsgKnowledgeGroupUpdateRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
    if (from._has_bit(1)) {
      set_oid_camp(from.oid_camp());
    }
    if (from._has_bit(2)) {
      set_oid_parent(from.oid_parent());
    }
    if (from._has_bit(3)) {
      set_enabled(from.enabled());
    }
    if (from._has_bit(4)) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgKnowledgeGroupUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgKnowledgeGroupUpdateRequest::CopyFrom(const MsgKnowledgeGroupUpdateRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgKnowledgeGroupUpdateRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgKnowledgeGroupUpdateRequest::Swap(MsgKnowledgeGroupUpdateRequest* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(oid_camp_, other->oid_camp_);
    std::swap(oid_parent_, other->oid_parent_);
    std::swap(enabled_, other->enabled_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgKnowledgeGroupUpdateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgKnowledgeGroupUpdateRequest_descriptor_;
  metadata.reflection = MsgKnowledgeGroupUpdateRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgClientToSim_Content::kControlStopFieldNumber;
const int MsgClientToSim_Content::kControlPauseFieldNumber;
const int MsgClientToSim_Content::kControlResumeFieldNumber;
const int MsgClientToSim_Content::kControlChangeTimeFactorFieldNumber;
const int MsgClientToSim_Content::kControlDateTimeChangeFieldNumber;
const int MsgClientToSim_Content::kControlGlobalMeteoFieldNumber;
const int MsgClientToSim_Content::kControlLocalMeteoFieldNumber;
const int MsgClientToSim_Content::kControlCheckpointSaveNowFieldNumber;
const int MsgClientToSim_Content::kControlCheckpointSetFrequencyFieldNumber;
const int MsgClientToSim_Content::kControlToggleVisionConesFieldNumber;
const int MsgClientToSim_Content::kUnitOrderFieldNumber;
const int MsgClientToSim_Content::kAutomatOrderFieldNumber;
const int MsgClientToSim_Content::kPopulationOrderFieldNumber;
const int MsgClientToSim_Content::kFragOrderFieldNumber;
const int MsgClientToSim_Content::kSetAutomatModeFieldNumber;
const int MsgClientToSim_Content::kUnitCreationRequestFieldNumber;
const int MsgClientToSim_Content::kUnitMagicActionFieldNumber;
const int MsgClientToSim_Content::kObjectMagicActionFieldNumber;
const int MsgClientToSim_Content::kPopulationMagicActionFieldNumber;
const int MsgClientToSim_Content::kChangeDiplomacyFieldNumber;
const int MsgClientToSim_Content::kAutomatChangeKnowledgeGroupFieldNumber;
const int MsgClientToSim_Content::kAutomatChangeLogisticLinksFieldNumber;
const int MsgClientToSim_Content::kAutomatChangeSuperiorFieldNumber;
const int MsgClientToSim_Content::kUnitChangeSuperiorFieldNumber;
const int MsgClientToSim_Content::kLogSupplyPushFlowFieldNumber;
const int MsgClientToSim_Content::kLogSupplyChangeQuotasFieldNumber;
const int MsgClientToSim_Content::kKnowledgeGroupCreationRequestFieldNumber;
const int MsgClientToSim_Content::kKnowledgeGroupUpdateRequestFieldNumber;
const int MsgClientToSim_Content::kCreateFireOrderFieldNumber;
const int MsgClientToSim_Content::kMagicActionMoveToFieldNumber;
#endif  // !_MSC_VER

MsgClientToSim_Content::MsgClientToSim_Content() {
  SharedCtor();
}

void MsgClientToSim_Content::InitAsDefaultInstance() {
  control_stop_ = const_cast< ::Common::MsgControlStop*>(&::Common::MsgControlStop::default_instance());
  control_pause_ = const_cast< ::Common::MsgControlPause*>(&::Common::MsgControlPause::default_instance());
  control_resume_ = const_cast< ::Common::MsgControlResume*>(&::Common::MsgControlResume::default_instance());
  control_change_time_factor_ = const_cast< ::Common::MsgControlChangeTimeFactor*>(&::Common::MsgControlChangeTimeFactor::default_instance());
  control_date_time_change_ = const_cast< ::MsgsClientToSim::MsgControlDatetimeChange*>(&::MsgsClientToSim::MsgControlDatetimeChange::default_instance());
  control_global_meteo_ = const_cast< ::MsgsClientToSim::MsgControlGlobalMeteo*>(&::MsgsClientToSim::MsgControlGlobalMeteo::default_instance());
  control_local_meteo_ = const_cast< ::MsgsClientToSim::MsgControlLocalMeteo*>(&::MsgsClientToSim::MsgControlLocalMeteo::default_instance());
  control_checkpoint_save_now_ = const_cast< ::MsgsClientToSim::MsgControlCheckPointSaveNow*>(&::MsgsClientToSim::MsgControlCheckPointSaveNow::default_instance());
  control_checkpoint_set_frequency_ = const_cast< ::MsgsClientToSim::MsgControlCheckPointSetFrequency*>(&::MsgsClientToSim::MsgControlCheckPointSetFrequency::default_instance());
  control_toggle_vision_cones_ = const_cast< ::MsgsClientToSim::MsgControlToggleVisionCones*>(&::MsgsClientToSim::MsgControlToggleVisionCones::default_instance());
  unit_order_ = const_cast< ::Common::MsgUnitOrder*>(&::Common::MsgUnitOrder::default_instance());
  automat_order_ = const_cast< ::Common::MsgAutomatOrder*>(&::Common::MsgAutomatOrder::default_instance());
  population_order_ = const_cast< ::Common::MsgPopulationOrder*>(&::Common::MsgPopulationOrder::default_instance());
  frag_order_ = const_cast< ::MsgsClientToSim::MsgFragOrder*>(&::MsgsClientToSim::MsgFragOrder::default_instance());
  set_automat_mode_ = const_cast< ::MsgsClientToSim::MsgSetAutomatMode*>(&::MsgsClientToSim::MsgSetAutomatMode::default_instance());
  unit_creation_request_ = const_cast< ::MsgsClientToSim::MsgUnitCreationRequest*>(&::MsgsClientToSim::MsgUnitCreationRequest::default_instance());
  unit_magic_action_ = const_cast< ::MsgsClientToSim::MsgUnitMagicAction*>(&::MsgsClientToSim::MsgUnitMagicAction::default_instance());
  object_magic_action_ = const_cast< ::MsgsClientToSim::MsgObjectMagicAction*>(&::MsgsClientToSim::MsgObjectMagicAction::default_instance());
  population_magic_action_ = const_cast< ::MsgsClientToSim::MsgPopulationMagicAction*>(&::MsgsClientToSim::MsgPopulationMagicAction::default_instance());
  change_diplomacy_ = const_cast< ::Common::MsgChangeDiplomacy*>(&::Common::MsgChangeDiplomacy::default_instance());
  automat_change_knowledge_group_ = const_cast< ::Common::MsgAutomatChangeKnowledgeGroup*>(&::Common::MsgAutomatChangeKnowledgeGroup::default_instance());
  automat_change_logistic_links_ = const_cast< ::Common::MsgAutomatChangeLogisticLinks*>(&::Common::MsgAutomatChangeLogisticLinks::default_instance());
  automat_change_superior_ = const_cast< ::Common::MsgAutomatChangeSuperior*>(&::Common::MsgAutomatChangeSuperior::default_instance());
  unit_change_superior_ = const_cast< ::Common::MsgUnitChangeSuperior*>(&::Common::MsgUnitChangeSuperior::default_instance());
  log_supply_push_flow_ = const_cast< ::MsgsClientToSim::MsgLogSupplyPushFlow*>(&::MsgsClientToSim::MsgLogSupplyPushFlow::default_instance());
  log_supply_change_quotas_ = const_cast< ::MsgsClientToSim::MsgLogSupplyChangeQuotas*>(&::MsgsClientToSim::MsgLogSupplyChangeQuotas::default_instance());
  knowledge_group_creation_request_ = const_cast< ::MsgsClientToSim::MsgKnowledgeGroupCreationRequest*>(&::MsgsClientToSim::MsgKnowledgeGroupCreationRequest::default_instance());
  knowledge_group_update_request_ = const_cast< ::MsgsClientToSim::MsgKnowledgeGroupUpdateRequest*>(&::MsgsClientToSim::MsgKnowledgeGroupUpdateRequest::default_instance());
  create_fire_order_ = const_cast< ::MsgsClientToSim::MsgMagicActionCreateFireOrder*>(&::MsgsClientToSim::MsgMagicActionCreateFireOrder::default_instance());
  magic_action_move_to_ = const_cast< ::MsgsClientToSim::MsgMagicActionMoveTo*>(&::MsgsClientToSim::MsgMagicActionMoveTo::default_instance());
}

MsgClientToSim_Content::MsgClientToSim_Content(const MsgClientToSim_Content& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgClientToSim_Content::SharedCtor() {
  _cached_size_ = 0;
  control_stop_ = NULL;
  control_pause_ = NULL;
  control_resume_ = NULL;
  control_change_time_factor_ = NULL;
  control_date_time_change_ = NULL;
  control_global_meteo_ = NULL;
  control_local_meteo_ = NULL;
  control_checkpoint_save_now_ = NULL;
  control_checkpoint_set_frequency_ = NULL;
  control_toggle_vision_cones_ = NULL;
  unit_order_ = NULL;
  automat_order_ = NULL;
  population_order_ = NULL;
  frag_order_ = NULL;
  set_automat_mode_ = NULL;
  unit_creation_request_ = NULL;
  unit_magic_action_ = NULL;
  object_magic_action_ = NULL;
  population_magic_action_ = NULL;
  change_diplomacy_ = NULL;
  automat_change_knowledge_group_ = NULL;
  automat_change_logistic_links_ = NULL;
  automat_change_superior_ = NULL;
  unit_change_superior_ = NULL;
  log_supply_push_flow_ = NULL;
  log_supply_change_quotas_ = NULL;
  knowledge_group_creation_request_ = NULL;
  knowledge_group_update_request_ = NULL;
  create_fire_order_ = NULL;
  magic_action_move_to_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgClientToSim_Content::~MsgClientToSim_Content() {
  SharedDtor();
}

void MsgClientToSim_Content::SharedDtor() {
  if (this != default_instance_) {
    delete control_stop_;
    delete control_pause_;
    delete control_resume_;
    delete control_change_time_factor_;
    delete control_date_time_change_;
    delete control_global_meteo_;
    delete control_local_meteo_;
    delete control_checkpoint_save_now_;
    delete control_checkpoint_set_frequency_;
    delete control_toggle_vision_cones_;
    delete unit_order_;
    delete automat_order_;
    delete population_order_;
    delete frag_order_;
    delete set_automat_mode_;
    delete unit_creation_request_;
    delete unit_magic_action_;
    delete object_magic_action_;
    delete population_magic_action_;
    delete change_diplomacy_;
    delete automat_change_knowledge_group_;
    delete automat_change_logistic_links_;
    delete automat_change_superior_;
    delete unit_change_superior_;
    delete log_supply_push_flow_;
    delete log_supply_change_quotas_;
    delete knowledge_group_creation_request_;
    delete knowledge_group_update_request_;
    delete create_fire_order_;
    delete magic_action_move_to_;
  }
}

const ::google::protobuf::Descriptor* MsgClientToSim_Content::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgClientToSim_Content_descriptor_;
}

const MsgClientToSim_Content& MsgClientToSim_Content::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgClientToSim_Content* MsgClientToSim_Content::default_instance_ = NULL;

MsgClientToSim_Content* MsgClientToSim_Content::New() const {
  return new MsgClientToSim_Content;
}

void MsgClientToSim_Content::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (control_stop_ != NULL) control_stop_->::Common::MsgControlStop::Clear();
    }
    if (_has_bit(1)) {
      if (control_pause_ != NULL) control_pause_->::Common::MsgControlPause::Clear();
    }
    if (_has_bit(2)) {
      if (control_resume_ != NULL) control_resume_->::Common::MsgControlResume::Clear();
    }
    if (_has_bit(3)) {
      if (control_change_time_factor_ != NULL) control_change_time_factor_->::Common::MsgControlChangeTimeFactor::Clear();
    }
    if (_has_bit(4)) {
      if (control_date_time_change_ != NULL) control_date_time_change_->::MsgsClientToSim::MsgControlDatetimeChange::Clear();
    }
    if (_has_bit(5)) {
      if (control_global_meteo_ != NULL) control_global_meteo_->::MsgsClientToSim::MsgControlGlobalMeteo::Clear();
    }
    if (_has_bit(6)) {
      if (control_local_meteo_ != NULL) control_local_meteo_->::MsgsClientToSim::MsgControlLocalMeteo::Clear();
    }
    if (_has_bit(7)) {
      if (control_checkpoint_save_now_ != NULL) control_checkpoint_save_now_->::MsgsClientToSim::MsgControlCheckPointSaveNow::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (_has_bit(8)) {
      if (control_checkpoint_set_frequency_ != NULL) control_checkpoint_set_frequency_->::MsgsClientToSim::MsgControlCheckPointSetFrequency::Clear();
    }
    if (_has_bit(9)) {
      if (control_toggle_vision_cones_ != NULL) control_toggle_vision_cones_->::MsgsClientToSim::MsgControlToggleVisionCones::Clear();
    }
    if (_has_bit(10)) {
      if (unit_order_ != NULL) unit_order_->::Common::MsgUnitOrder::Clear();
    }
    if (_has_bit(11)) {
      if (automat_order_ != NULL) automat_order_->::Common::MsgAutomatOrder::Clear();
    }
    if (_has_bit(12)) {
      if (population_order_ != NULL) population_order_->::Common::MsgPopulationOrder::Clear();
    }
    if (_has_bit(13)) {
      if (frag_order_ != NULL) frag_order_->::MsgsClientToSim::MsgFragOrder::Clear();
    }
    if (_has_bit(14)) {
      if (set_automat_mode_ != NULL) set_automat_mode_->::MsgsClientToSim::MsgSetAutomatMode::Clear();
    }
    if (_has_bit(15)) {
      if (unit_creation_request_ != NULL) unit_creation_request_->::MsgsClientToSim::MsgUnitCreationRequest::Clear();
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (_has_bit(16)) {
      if (unit_magic_action_ != NULL) unit_magic_action_->::MsgsClientToSim::MsgUnitMagicAction::Clear();
    }
    if (_has_bit(17)) {
      if (object_magic_action_ != NULL) object_magic_action_->::MsgsClientToSim::MsgObjectMagicAction::Clear();
    }
    if (_has_bit(18)) {
      if (population_magic_action_ != NULL) population_magic_action_->::MsgsClientToSim::MsgPopulationMagicAction::Clear();
    }
    if (_has_bit(19)) {
      if (change_diplomacy_ != NULL) change_diplomacy_->::Common::MsgChangeDiplomacy::Clear();
    }
    if (_has_bit(20)) {
      if (automat_change_knowledge_group_ != NULL) automat_change_knowledge_group_->::Common::MsgAutomatChangeKnowledgeGroup::Clear();
    }
    if (_has_bit(21)) {
      if (automat_change_logistic_links_ != NULL) automat_change_logistic_links_->::Common::MsgAutomatChangeLogisticLinks::Clear();
    }
    if (_has_bit(22)) {
      if (automat_change_superior_ != NULL) automat_change_superior_->::Common::MsgAutomatChangeSuperior::Clear();
    }
    if (_has_bit(23)) {
      if (unit_change_superior_ != NULL) unit_change_superior_->::Common::MsgUnitChangeSuperior::Clear();
    }
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (_has_bit(24)) {
      if (log_supply_push_flow_ != NULL) log_supply_push_flow_->::MsgsClientToSim::MsgLogSupplyPushFlow::Clear();
    }
    if (_has_bit(25)) {
      if (log_supply_change_quotas_ != NULL) log_supply_change_quotas_->::MsgsClientToSim::MsgLogSupplyChangeQuotas::Clear();
    }
    if (_has_bit(26)) {
      if (knowledge_group_creation_request_ != NULL) knowledge_group_creation_request_->::MsgsClientToSim::MsgKnowledgeGroupCreationRequest::Clear();
    }
    if (_has_bit(27)) {
      if (knowledge_group_update_request_ != NULL) knowledge_group_update_request_->::MsgsClientToSim::MsgKnowledgeGroupUpdateRequest::Clear();
    }
    if (_has_bit(28)) {
      if (create_fire_order_ != NULL) create_fire_order_->::MsgsClientToSim::MsgMagicActionCreateFireOrder::Clear();
    }
    if (_has_bit(29)) {
      if (magic_action_move_to_ != NULL) magic_action_move_to_->::MsgsClientToSim::MsgMagicActionMoveTo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgClientToSim_Content::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Common.MsgControlStop control_stop = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_stop()));
        if (input->ExpectTag(18)) goto parse_control_pause;
        break;
      }
      
      // optional .Common.MsgControlPause control_pause = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_control_pause:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_pause()));
        if (input->ExpectTag(26)) goto parse_control_resume;
        break;
      }
      
      // optional .Common.MsgControlResume control_resume = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_control_resume:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_resume()));
        if (input->ExpectTag(34)) goto parse_control_change_time_factor;
        break;
      }
      
      // optional .Common.MsgControlChangeTimeFactor control_change_time_factor = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_control_change_time_factor:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_change_time_factor()));
        if (input->ExpectTag(42)) goto parse_control_date_time_change;
        break;
      }
      
      // optional .MsgsClientToSim.MsgControlDatetimeChange control_date_time_change = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_control_date_time_change:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_date_time_change()));
        if (input->ExpectTag(50)) goto parse_control_global_meteo;
        break;
      }
      
      // optional .MsgsClientToSim.MsgControlGlobalMeteo control_global_meteo = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_control_global_meteo:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_global_meteo()));
        if (input->ExpectTag(58)) goto parse_control_local_meteo;
        break;
      }
      
      // optional .MsgsClientToSim.MsgControlLocalMeteo control_local_meteo = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_control_local_meteo:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_local_meteo()));
        if (input->ExpectTag(66)) goto parse_control_checkpoint_save_now;
        break;
      }
      
      // optional .MsgsClientToSim.MsgControlCheckPointSaveNow control_checkpoint_save_now = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_control_checkpoint_save_now:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_checkpoint_save_now()));
        if (input->ExpectTag(74)) goto parse_control_checkpoint_set_frequency;
        break;
      }
      
      // optional .MsgsClientToSim.MsgControlCheckPointSetFrequency control_checkpoint_set_frequency = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_control_checkpoint_set_frequency:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_checkpoint_set_frequency()));
        if (input->ExpectTag(82)) goto parse_control_toggle_vision_cones;
        break;
      }
      
      // optional .MsgsClientToSim.MsgControlToggleVisionCones control_toggle_vision_cones = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_control_toggle_vision_cones:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_toggle_vision_cones()));
        if (input->ExpectTag(90)) goto parse_unit_order;
        break;
      }
      
      // optional .Common.MsgUnitOrder unit_order = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_unit_order:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_unit_order()));
        if (input->ExpectTag(98)) goto parse_automat_order;
        break;
      }
      
      // optional .Common.MsgAutomatOrder automat_order = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_automat_order:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_automat_order()));
        if (input->ExpectTag(106)) goto parse_population_order;
        break;
      }
      
      // optional .Common.MsgPopulationOrder population_order = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_population_order:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_population_order()));
        if (input->ExpectTag(114)) goto parse_frag_order;
        break;
      }
      
      // optional .MsgsClientToSim.MsgFragOrder frag_order = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_frag_order:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_frag_order()));
        if (input->ExpectTag(122)) goto parse_set_automat_mode;
        break;
      }
      
      // optional .MsgsClientToSim.MsgSetAutomatMode set_automat_mode = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_set_automat_mode:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_set_automat_mode()));
        if (input->ExpectTag(130)) goto parse_unit_creation_request;
        break;
      }
      
      // optional .MsgsClientToSim.MsgUnitCreationRequest unit_creation_request = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_unit_creation_request:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_unit_creation_request()));
        if (input->ExpectTag(138)) goto parse_unit_magic_action;
        break;
      }
      
      // optional .MsgsClientToSim.MsgUnitMagicAction unit_magic_action = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_unit_magic_action:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_unit_magic_action()));
        if (input->ExpectTag(146)) goto parse_object_magic_action;
        break;
      }
      
      // optional .MsgsClientToSim.MsgObjectMagicAction object_magic_action = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_object_magic_action:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_object_magic_action()));
        if (input->ExpectTag(154)) goto parse_population_magic_action;
        break;
      }
      
      // optional .MsgsClientToSim.MsgPopulationMagicAction population_magic_action = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_population_magic_action:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_population_magic_action()));
        if (input->ExpectTag(162)) goto parse_change_diplomacy;
        break;
      }
      
      // optional .Common.MsgChangeDiplomacy change_diplomacy = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_change_diplomacy:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_change_diplomacy()));
        if (input->ExpectTag(170)) goto parse_automat_change_knowledge_group;
        break;
      }
      
      // optional .Common.MsgAutomatChangeKnowledgeGroup automat_change_knowledge_group = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_automat_change_knowledge_group:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_automat_change_knowledge_group()));
        if (input->ExpectTag(178)) goto parse_automat_change_logistic_links;
        break;
      }
      
      // optional .Common.MsgAutomatChangeLogisticLinks automat_change_logistic_links = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_automat_change_logistic_links:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_automat_change_logistic_links()));
        if (input->ExpectTag(186)) goto parse_automat_change_superior;
        break;
      }
      
      // optional .Common.MsgAutomatChangeSuperior automat_change_superior = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_automat_change_superior:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_automat_change_superior()));
        if (input->ExpectTag(194)) goto parse_unit_change_superior;
        break;
      }
      
      // optional .Common.MsgUnitChangeSuperior unit_change_superior = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_unit_change_superior:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_unit_change_superior()));
        if (input->ExpectTag(202)) goto parse_log_supply_push_flow;
        break;
      }
      
      // optional .MsgsClientToSim.MsgLogSupplyPushFlow log_supply_push_flow = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_log_supply_push_flow:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_log_supply_push_flow()));
        if (input->ExpectTag(210)) goto parse_log_supply_change_quotas;
        break;
      }
      
      // optional .MsgsClientToSim.MsgLogSupplyChangeQuotas log_supply_change_quotas = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_log_supply_change_quotas:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_log_supply_change_quotas()));
        if (input->ExpectTag(218)) goto parse_knowledge_group_creation_request;
        break;
      }
      
      // optional .MsgsClientToSim.MsgKnowledgeGroupCreationRequest knowledge_group_creation_request = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_knowledge_group_creation_request:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_knowledge_group_creation_request()));
        if (input->ExpectTag(226)) goto parse_knowledge_group_update_request;
        break;
      }
      
      // optional .MsgsClientToSim.MsgKnowledgeGroupUpdateRequest knowledge_group_update_request = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_knowledge_group_update_request:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_knowledge_group_update_request()));
        if (input->ExpectTag(234)) goto parse_create_fire_order;
        break;
      }
      
      // optional .MsgsClientToSim.MsgMagicActionCreateFireOrder create_fire_order = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_create_fire_order:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_create_fire_order()));
        if (input->ExpectTag(242)) goto parse_magic_action_move_to;
        break;
      }
      
      // optional .MsgsClientToSim.MsgMagicActionMoveTo magic_action_move_to = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_magic_action_move_to:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_magic_action_move_to()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgClientToSim_Content::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgClientToSim_Content::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .Common.MsgControlStop control_stop = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->control_stop(), output);
  }
  
  // optional .Common.MsgControlPause control_pause = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->control_pause(), output);
  }
  
  // optional .Common.MsgControlResume control_resume = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->control_resume(), output);
  }
  
  // optional .Common.MsgControlChangeTimeFactor control_change_time_factor = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      4, this->control_change_time_factor(), output);
  }
  
  // optional .MsgsClientToSim.MsgControlDatetimeChange control_date_time_change = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      5, this->control_date_time_change(), output);
  }
  
  // optional .MsgsClientToSim.MsgControlGlobalMeteo control_global_meteo = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      6, this->control_global_meteo(), output);
  }
  
  // optional .MsgsClientToSim.MsgControlLocalMeteo control_local_meteo = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      7, this->control_local_meteo(), output);
  }
  
  // optional .MsgsClientToSim.MsgControlCheckPointSaveNow control_checkpoint_save_now = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      8, this->control_checkpoint_save_now(), output);
  }
  
  // optional .MsgsClientToSim.MsgControlCheckPointSetFrequency control_checkpoint_set_frequency = 9;
  if (_has_bit(8)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      9, this->control_checkpoint_set_frequency(), output);
  }
  
  // optional .MsgsClientToSim.MsgControlToggleVisionCones control_toggle_vision_cones = 10;
  if (_has_bit(9)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      10, this->control_toggle_vision_cones(), output);
  }
  
  // optional .Common.MsgUnitOrder unit_order = 11;
  if (_has_bit(10)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      11, this->unit_order(), output);
  }
  
  // optional .Common.MsgAutomatOrder automat_order = 12;
  if (_has_bit(11)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      12, this->automat_order(), output);
  }
  
  // optional .Common.MsgPopulationOrder population_order = 13;
  if (_has_bit(12)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      13, this->population_order(), output);
  }
  
  // optional .MsgsClientToSim.MsgFragOrder frag_order = 14;
  if (_has_bit(13)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      14, this->frag_order(), output);
  }
  
  // optional .MsgsClientToSim.MsgSetAutomatMode set_automat_mode = 15;
  if (_has_bit(14)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      15, this->set_automat_mode(), output);
  }
  
  // optional .MsgsClientToSim.MsgUnitCreationRequest unit_creation_request = 16;
  if (_has_bit(15)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      16, this->unit_creation_request(), output);
  }
  
  // optional .MsgsClientToSim.MsgUnitMagicAction unit_magic_action = 17;
  if (_has_bit(16)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      17, this->unit_magic_action(), output);
  }
  
  // optional .MsgsClientToSim.MsgObjectMagicAction object_magic_action = 18;
  if (_has_bit(17)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      18, this->object_magic_action(), output);
  }
  
  // optional .MsgsClientToSim.MsgPopulationMagicAction population_magic_action = 19;
  if (_has_bit(18)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      19, this->population_magic_action(), output);
  }
  
  // optional .Common.MsgChangeDiplomacy change_diplomacy = 20;
  if (_has_bit(19)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      20, this->change_diplomacy(), output);
  }
  
  // optional .Common.MsgAutomatChangeKnowledgeGroup automat_change_knowledge_group = 21;
  if (_has_bit(20)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      21, this->automat_change_knowledge_group(), output);
  }
  
  // optional .Common.MsgAutomatChangeLogisticLinks automat_change_logistic_links = 22;
  if (_has_bit(21)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      22, this->automat_change_logistic_links(), output);
  }
  
  // optional .Common.MsgAutomatChangeSuperior automat_change_superior = 23;
  if (_has_bit(22)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      23, this->automat_change_superior(), output);
  }
  
  // optional .Common.MsgUnitChangeSuperior unit_change_superior = 24;
  if (_has_bit(23)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      24, this->unit_change_superior(), output);
  }
  
  // optional .MsgsClientToSim.MsgLogSupplyPushFlow log_supply_push_flow = 25;
  if (_has_bit(24)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      25, this->log_supply_push_flow(), output);
  }
  
  // optional .MsgsClientToSim.MsgLogSupplyChangeQuotas log_supply_change_quotas = 26;
  if (_has_bit(25)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      26, this->log_supply_change_quotas(), output);
  }
  
  // optional .MsgsClientToSim.MsgKnowledgeGroupCreationRequest knowledge_group_creation_request = 27;
  if (_has_bit(26)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      27, this->knowledge_group_creation_request(), output);
  }
  
  // optional .MsgsClientToSim.MsgKnowledgeGroupUpdateRequest knowledge_group_update_request = 28;
  if (_has_bit(27)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      28, this->knowledge_group_update_request(), output);
  }
  
  // optional .MsgsClientToSim.MsgMagicActionCreateFireOrder create_fire_order = 29;
  if (_has_bit(28)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      29, this->create_fire_order(), output);
  }
  
  // optional .MsgsClientToSim.MsgMagicActionMoveTo magic_action_move_to = 30;
  if (_has_bit(29)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      30, this->magic_action_move_to(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgClientToSim_Content::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .Common.MsgControlStop control_stop = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->control_stop(), target);
  }
  
  // optional .Common.MsgControlPause control_pause = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->control_pause(), target);
  }
  
  // optional .Common.MsgControlResume control_resume = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->control_resume(), target);
  }
  
  // optional .Common.MsgControlChangeTimeFactor control_change_time_factor = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->control_change_time_factor(), target);
  }
  
  // optional .MsgsClientToSim.MsgControlDatetimeChange control_date_time_change = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->control_date_time_change(), target);
  }
  
  // optional .MsgsClientToSim.MsgControlGlobalMeteo control_global_meteo = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->control_global_meteo(), target);
  }
  
  // optional .MsgsClientToSim.MsgControlLocalMeteo control_local_meteo = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->control_local_meteo(), target);
  }
  
  // optional .MsgsClientToSim.MsgControlCheckPointSaveNow control_checkpoint_save_now = 8;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->control_checkpoint_save_now(), target);
  }
  
  // optional .MsgsClientToSim.MsgControlCheckPointSetFrequency control_checkpoint_set_frequency = 9;
  if (_has_bit(8)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->control_checkpoint_set_frequency(), target);
  }
  
  // optional .MsgsClientToSim.MsgControlToggleVisionCones control_toggle_vision_cones = 10;
  if (_has_bit(9)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->control_toggle_vision_cones(), target);
  }
  
  // optional .Common.MsgUnitOrder unit_order = 11;
  if (_has_bit(10)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->unit_order(), target);
  }
  
  // optional .Common.MsgAutomatOrder automat_order = 12;
  if (_has_bit(11)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->automat_order(), target);
  }
  
  // optional .Common.MsgPopulationOrder population_order = 13;
  if (_has_bit(12)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->population_order(), target);
  }
  
  // optional .MsgsClientToSim.MsgFragOrder frag_order = 14;
  if (_has_bit(13)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->frag_order(), target);
  }
  
  // optional .MsgsClientToSim.MsgSetAutomatMode set_automat_mode = 15;
  if (_has_bit(14)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->set_automat_mode(), target);
  }
  
  // optional .MsgsClientToSim.MsgUnitCreationRequest unit_creation_request = 16;
  if (_has_bit(15)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->unit_creation_request(), target);
  }
  
  // optional .MsgsClientToSim.MsgUnitMagicAction unit_magic_action = 17;
  if (_has_bit(16)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->unit_magic_action(), target);
  }
  
  // optional .MsgsClientToSim.MsgObjectMagicAction object_magic_action = 18;
  if (_has_bit(17)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->object_magic_action(), target);
  }
  
  // optional .MsgsClientToSim.MsgPopulationMagicAction population_magic_action = 19;
  if (_has_bit(18)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->population_magic_action(), target);
  }
  
  // optional .Common.MsgChangeDiplomacy change_diplomacy = 20;
  if (_has_bit(19)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->change_diplomacy(), target);
  }
  
  // optional .Common.MsgAutomatChangeKnowledgeGroup automat_change_knowledge_group = 21;
  if (_has_bit(20)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->automat_change_knowledge_group(), target);
  }
  
  // optional .Common.MsgAutomatChangeLogisticLinks automat_change_logistic_links = 22;
  if (_has_bit(21)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        22, this->automat_change_logistic_links(), target);
  }
  
  // optional .Common.MsgAutomatChangeSuperior automat_change_superior = 23;
  if (_has_bit(22)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        23, this->automat_change_superior(), target);
  }
  
  // optional .Common.MsgUnitChangeSuperior unit_change_superior = 24;
  if (_has_bit(23)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        24, this->unit_change_superior(), target);
  }
  
  // optional .MsgsClientToSim.MsgLogSupplyPushFlow log_supply_push_flow = 25;
  if (_has_bit(24)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        25, this->log_supply_push_flow(), target);
  }
  
  // optional .MsgsClientToSim.MsgLogSupplyChangeQuotas log_supply_change_quotas = 26;
  if (_has_bit(25)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        26, this->log_supply_change_quotas(), target);
  }
  
  // optional .MsgsClientToSim.MsgKnowledgeGroupCreationRequest knowledge_group_creation_request = 27;
  if (_has_bit(26)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        27, this->knowledge_group_creation_request(), target);
  }
  
  // optional .MsgsClientToSim.MsgKnowledgeGroupUpdateRequest knowledge_group_update_request = 28;
  if (_has_bit(27)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        28, this->knowledge_group_update_request(), target);
  }
  
  // optional .MsgsClientToSim.MsgMagicActionCreateFireOrder create_fire_order = 29;
  if (_has_bit(28)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        29, this->create_fire_order(), target);
  }
  
  // optional .MsgsClientToSim.MsgMagicActionMoveTo magic_action_move_to = 30;
  if (_has_bit(29)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        30, this->magic_action_move_to(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgClientToSim_Content::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Common.MsgControlStop control_stop = 1;
    if (has_control_stop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_stop());
    }
    
    // optional .Common.MsgControlPause control_pause = 2;
    if (has_control_pause()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_pause());
    }
    
    // optional .Common.MsgControlResume control_resume = 3;
    if (has_control_resume()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_resume());
    }
    
    // optional .Common.MsgControlChangeTimeFactor control_change_time_factor = 4;
    if (has_control_change_time_factor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_change_time_factor());
    }
    
    // optional .MsgsClientToSim.MsgControlDatetimeChange control_date_time_change = 5;
    if (has_control_date_time_change()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_date_time_change());
    }
    
    // optional .MsgsClientToSim.MsgControlGlobalMeteo control_global_meteo = 6;
    if (has_control_global_meteo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_global_meteo());
    }
    
    // optional .MsgsClientToSim.MsgControlLocalMeteo control_local_meteo = 7;
    if (has_control_local_meteo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_local_meteo());
    }
    
    // optional .MsgsClientToSim.MsgControlCheckPointSaveNow control_checkpoint_save_now = 8;
    if (has_control_checkpoint_save_now()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_checkpoint_save_now());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .MsgsClientToSim.MsgControlCheckPointSetFrequency control_checkpoint_set_frequency = 9;
    if (has_control_checkpoint_set_frequency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_checkpoint_set_frequency());
    }
    
    // optional .MsgsClientToSim.MsgControlToggleVisionCones control_toggle_vision_cones = 10;
    if (has_control_toggle_vision_cones()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_toggle_vision_cones());
    }
    
    // optional .Common.MsgUnitOrder unit_order = 11;
    if (has_unit_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->unit_order());
    }
    
    // optional .Common.MsgAutomatOrder automat_order = 12;
    if (has_automat_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->automat_order());
    }
    
    // optional .Common.MsgPopulationOrder population_order = 13;
    if (has_population_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->population_order());
    }
    
    // optional .MsgsClientToSim.MsgFragOrder frag_order = 14;
    if (has_frag_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->frag_order());
    }
    
    // optional .MsgsClientToSim.MsgSetAutomatMode set_automat_mode = 15;
    if (has_set_automat_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->set_automat_mode());
    }
    
    // optional .MsgsClientToSim.MsgUnitCreationRequest unit_creation_request = 16;
    if (has_unit_creation_request()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->unit_creation_request());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional .MsgsClientToSim.MsgUnitMagicAction unit_magic_action = 17;
    if (has_unit_magic_action()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->unit_magic_action());
    }
    
    // optional .MsgsClientToSim.MsgObjectMagicAction object_magic_action = 18;
    if (has_object_magic_action()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->object_magic_action());
    }
    
    // optional .MsgsClientToSim.MsgPopulationMagicAction population_magic_action = 19;
    if (has_population_magic_action()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->population_magic_action());
    }
    
    // optional .Common.MsgChangeDiplomacy change_diplomacy = 20;
    if (has_change_diplomacy()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->change_diplomacy());
    }
    
    // optional .Common.MsgAutomatChangeKnowledgeGroup automat_change_knowledge_group = 21;
    if (has_automat_change_knowledge_group()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->automat_change_knowledge_group());
    }
    
    // optional .Common.MsgAutomatChangeLogisticLinks automat_change_logistic_links = 22;
    if (has_automat_change_logistic_links()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->automat_change_logistic_links());
    }
    
    // optional .Common.MsgAutomatChangeSuperior automat_change_superior = 23;
    if (has_automat_change_superior()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->automat_change_superior());
    }
    
    // optional .Common.MsgUnitChangeSuperior unit_change_superior = 24;
    if (has_unit_change_superior()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->unit_change_superior());
    }
    
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional .MsgsClientToSim.MsgLogSupplyPushFlow log_supply_push_flow = 25;
    if (has_log_supply_push_flow()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->log_supply_push_flow());
    }
    
    // optional .MsgsClientToSim.MsgLogSupplyChangeQuotas log_supply_change_quotas = 26;
    if (has_log_supply_change_quotas()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->log_supply_change_quotas());
    }
    
    // optional .MsgsClientToSim.MsgKnowledgeGroupCreationRequest knowledge_group_creation_request = 27;
    if (has_knowledge_group_creation_request()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->knowledge_group_creation_request());
    }
    
    // optional .MsgsClientToSim.MsgKnowledgeGroupUpdateRequest knowledge_group_update_request = 28;
    if (has_knowledge_group_update_request()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->knowledge_group_update_request());
    }
    
    // optional .MsgsClientToSim.MsgMagicActionCreateFireOrder create_fire_order = 29;
    if (has_create_fire_order()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->create_fire_order());
    }
    
    // optional .MsgsClientToSim.MsgMagicActionMoveTo magic_action_move_to = 30;
    if (has_magic_action_move_to()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->magic_action_move_to());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgClientToSim_Content::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgClientToSim_Content* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgClientToSim_Content*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgClientToSim_Content::MergeFrom(const MsgClientToSim_Content& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_control_stop()->::Common::MsgControlStop::MergeFrom(from.control_stop());
    }
    if (from._has_bit(1)) {
      mutable_control_pause()->::Common::MsgControlPause::MergeFrom(from.control_pause());
    }
    if (from._has_bit(2)) {
      mutable_control_resume()->::Common::MsgControlResume::MergeFrom(from.control_resume());
    }
    if (from._has_bit(3)) {
      mutable_control_change_time_factor()->::Common::MsgControlChangeTimeFactor::MergeFrom(from.control_change_time_factor());
    }
    if (from._has_bit(4)) {
      mutable_control_date_time_change()->::MsgsClientToSim::MsgControlDatetimeChange::MergeFrom(from.control_date_time_change());
    }
    if (from._has_bit(5)) {
      mutable_control_global_meteo()->::MsgsClientToSim::MsgControlGlobalMeteo::MergeFrom(from.control_global_meteo());
    }
    if (from._has_bit(6)) {
      mutable_control_local_meteo()->::MsgsClientToSim::MsgControlLocalMeteo::MergeFrom(from.control_local_meteo());
    }
    if (from._has_bit(7)) {
      mutable_control_checkpoint_save_now()->::MsgsClientToSim::MsgControlCheckPointSaveNow::MergeFrom(from.control_checkpoint_save_now());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from._has_bit(8)) {
      mutable_control_checkpoint_set_frequency()->::MsgsClientToSim::MsgControlCheckPointSetFrequency::MergeFrom(from.control_checkpoint_set_frequency());
    }
    if (from._has_bit(9)) {
      mutable_control_toggle_vision_cones()->::MsgsClientToSim::MsgControlToggleVisionCones::MergeFrom(from.control_toggle_vision_cones());
    }
    if (from._has_bit(10)) {
      mutable_unit_order()->::Common::MsgUnitOrder::MergeFrom(from.unit_order());
    }
    if (from._has_bit(11)) {
      mutable_automat_order()->::Common::MsgAutomatOrder::MergeFrom(from.automat_order());
    }
    if (from._has_bit(12)) {
      mutable_population_order()->::Common::MsgPopulationOrder::MergeFrom(from.population_order());
    }
    if (from._has_bit(13)) {
      mutable_frag_order()->::MsgsClientToSim::MsgFragOrder::MergeFrom(from.frag_order());
    }
    if (from._has_bit(14)) {
      mutable_set_automat_mode()->::MsgsClientToSim::MsgSetAutomatMode::MergeFrom(from.set_automat_mode());
    }
    if (from._has_bit(15)) {
      mutable_unit_creation_request()->::MsgsClientToSim::MsgUnitCreationRequest::MergeFrom(from.unit_creation_request());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from._has_bit(16)) {
      mutable_unit_magic_action()->::MsgsClientToSim::MsgUnitMagicAction::MergeFrom(from.unit_magic_action());
    }
    if (from._has_bit(17)) {
      mutable_object_magic_action()->::MsgsClientToSim::MsgObjectMagicAction::MergeFrom(from.object_magic_action());
    }
    if (from._has_bit(18)) {
      mutable_population_magic_action()->::MsgsClientToSim::MsgPopulationMagicAction::MergeFrom(from.population_magic_action());
    }
    if (from._has_bit(19)) {
      mutable_change_diplomacy()->::Common::MsgChangeDiplomacy::MergeFrom(from.change_diplomacy());
    }
    if (from._has_bit(20)) {
      mutable_automat_change_knowledge_group()->::Common::MsgAutomatChangeKnowledgeGroup::MergeFrom(from.automat_change_knowledge_group());
    }
    if (from._has_bit(21)) {
      mutable_automat_change_logistic_links()->::Common::MsgAutomatChangeLogisticLinks::MergeFrom(from.automat_change_logistic_links());
    }
    if (from._has_bit(22)) {
      mutable_automat_change_superior()->::Common::MsgAutomatChangeSuperior::MergeFrom(from.automat_change_superior());
    }
    if (from._has_bit(23)) {
      mutable_unit_change_superior()->::Common::MsgUnitChangeSuperior::MergeFrom(from.unit_change_superior());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from._has_bit(24)) {
      mutable_log_supply_push_flow()->::MsgsClientToSim::MsgLogSupplyPushFlow::MergeFrom(from.log_supply_push_flow());
    }
    if (from._has_bit(25)) {
      mutable_log_supply_change_quotas()->::MsgsClientToSim::MsgLogSupplyChangeQuotas::MergeFrom(from.log_supply_change_quotas());
    }
    if (from._has_bit(26)) {
      mutable_knowledge_group_creation_request()->::MsgsClientToSim::MsgKnowledgeGroupCreationRequest::MergeFrom(from.knowledge_group_creation_request());
    }
    if (from._has_bit(27)) {
      mutable_knowledge_group_update_request()->::MsgsClientToSim::MsgKnowledgeGroupUpdateRequest::MergeFrom(from.knowledge_group_update_request());
    }
    if (from._has_bit(28)) {
      mutable_create_fire_order()->::MsgsClientToSim::MsgMagicActionCreateFireOrder::MergeFrom(from.create_fire_order());
    }
    if (from._has_bit(29)) {
      mutable_magic_action_move_to()->::MsgsClientToSim::MsgMagicActionMoveTo::MergeFrom(from.magic_action_move_to());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgClientToSim_Content::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgClientToSim_Content::CopyFrom(const MsgClientToSim_Content& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgClientToSim_Content::IsInitialized() const {
  
  if (has_control_change_time_factor()) {
    if (!this->control_change_time_factor().IsInitialized()) return false;
  }
  if (has_control_date_time_change()) {
    if (!this->control_date_time_change().IsInitialized()) return false;
  }
  if (has_control_global_meteo()) {
    if (!this->control_global_meteo().IsInitialized()) return false;
  }
  if (has_control_local_meteo()) {
    if (!this->control_local_meteo().IsInitialized()) return false;
  }
  if (has_control_checkpoint_set_frequency()) {
    if (!this->control_checkpoint_set_frequency().IsInitialized()) return false;
  }
  if (has_control_toggle_vision_cones()) {
    if (!this->control_toggle_vision_cones().IsInitialized()) return false;
  }
  if (has_unit_order()) {
    if (!this->unit_order().IsInitialized()) return false;
  }
  if (has_automat_order()) {
    if (!this->automat_order().IsInitialized()) return false;
  }
  if (has_population_order()) {
    if (!this->population_order().IsInitialized()) return false;
  }
  if (has_frag_order()) {
    if (!this->frag_order().IsInitialized()) return false;
  }
  if (has_set_automat_mode()) {
    if (!this->set_automat_mode().IsInitialized()) return false;
  }
  if (has_unit_creation_request()) {
    if (!this->unit_creation_request().IsInitialized()) return false;
  }
  if (has_unit_magic_action()) {
    if (!this->unit_magic_action().IsInitialized()) return false;
  }
  if (has_object_magic_action()) {
    if (!this->object_magic_action().IsInitialized()) return false;
  }
  if (has_population_magic_action()) {
    if (!this->population_magic_action().IsInitialized()) return false;
  }
  if (has_change_diplomacy()) {
    if (!this->change_diplomacy().IsInitialized()) return false;
  }
  if (has_automat_change_knowledge_group()) {
    if (!this->automat_change_knowledge_group().IsInitialized()) return false;
  }
  if (has_automat_change_logistic_links()) {
    if (!this->automat_change_logistic_links().IsInitialized()) return false;
  }
  if (has_automat_change_superior()) {
    if (!this->automat_change_superior().IsInitialized()) return false;
  }
  if (has_unit_change_superior()) {
    if (!this->unit_change_superior().IsInitialized()) return false;
  }
  if (has_log_supply_push_flow()) {
    if (!this->log_supply_push_flow().IsInitialized()) return false;
  }
  if (has_log_supply_change_quotas()) {
    if (!this->log_supply_change_quotas().IsInitialized()) return false;
  }
  if (has_knowledge_group_creation_request()) {
    if (!this->knowledge_group_creation_request().IsInitialized()) return false;
  }
  if (has_knowledge_group_update_request()) {
    if (!this->knowledge_group_update_request().IsInitialized()) return false;
  }
  if (has_create_fire_order()) {
    if (!this->create_fire_order().IsInitialized()) return false;
  }
  if (has_magic_action_move_to()) {
    if (!this->magic_action_move_to().IsInitialized()) return false;
  }
  return true;
}

void MsgClientToSim_Content::Swap(MsgClientToSim_Content* other) {
  if (other != this) {
    std::swap(control_stop_, other->control_stop_);
    std::swap(control_pause_, other->control_pause_);
    std::swap(control_resume_, other->control_resume_);
    std::swap(control_change_time_factor_, other->control_change_time_factor_);
    std::swap(control_date_time_change_, other->control_date_time_change_);
    std::swap(control_global_meteo_, other->control_global_meteo_);
    std::swap(control_local_meteo_, other->control_local_meteo_);
    std::swap(control_checkpoint_save_now_, other->control_checkpoint_save_now_);
    std::swap(control_checkpoint_set_frequency_, other->control_checkpoint_set_frequency_);
    std::swap(control_toggle_vision_cones_, other->control_toggle_vision_cones_);
    std::swap(unit_order_, other->unit_order_);
    std::swap(automat_order_, other->automat_order_);
    std::swap(population_order_, other->population_order_);
    std::swap(frag_order_, other->frag_order_);
    std::swap(set_automat_mode_, other->set_automat_mode_);
    std::swap(unit_creation_request_, other->unit_creation_request_);
    std::swap(unit_magic_action_, other->unit_magic_action_);
    std::swap(object_magic_action_, other->object_magic_action_);
    std::swap(population_magic_action_, other->population_magic_action_);
    std::swap(change_diplomacy_, other->change_diplomacy_);
    std::swap(automat_change_knowledge_group_, other->automat_change_knowledge_group_);
    std::swap(automat_change_logistic_links_, other->automat_change_logistic_links_);
    std::swap(automat_change_superior_, other->automat_change_superior_);
    std::swap(unit_change_superior_, other->unit_change_superior_);
    std::swap(log_supply_push_flow_, other->log_supply_push_flow_);
    std::swap(log_supply_change_quotas_, other->log_supply_change_quotas_);
    std::swap(knowledge_group_creation_request_, other->knowledge_group_creation_request_);
    std::swap(knowledge_group_update_request_, other->knowledge_group_update_request_);
    std::swap(create_fire_order_, other->create_fire_order_);
    std::swap(magic_action_move_to_, other->magic_action_move_to_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgClientToSim_Content::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgClientToSim_Content_descriptor_;
  metadata.reflection = MsgClientToSim_Content_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MsgClientToSim::kContextFieldNumber;
const int MsgClientToSim::kMessageFieldNumber;
#endif  // !_MSC_VER

MsgClientToSim::MsgClientToSim() {
  SharedCtor();
}

void MsgClientToSim::InitAsDefaultInstance() {
  message_ = const_cast< ::MsgsClientToSim::MsgClientToSim_Content*>(&::MsgsClientToSim::MsgClientToSim_Content::default_instance());
}

MsgClientToSim::MsgClientToSim(const MsgClientToSim& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgClientToSim::SharedCtor() {
  _cached_size_ = 0;
  context_ = 0;
  message_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgClientToSim::~MsgClientToSim() {
  SharedDtor();
}

void MsgClientToSim::SharedDtor() {
  if (this != default_instance_) {
    delete message_;
  }
}

const ::google::protobuf::Descriptor* MsgClientToSim::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgClientToSim_descriptor_;
}

const MsgClientToSim& MsgClientToSim::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgClientToSim* MsgClientToSim::default_instance_ = NULL;

MsgClientToSim* MsgClientToSim::New() const {
  return new MsgClientToSim;
}

void MsgClientToSim::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    context_ = 0;
    if (_has_bit(1)) {
      if (message_ != NULL) message_->::MsgsClientToSim::MsgClientToSim_Content::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgClientToSim::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 context = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &context_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }
      
      // required .MsgsClientToSim.MsgClientToSim.Content message = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_message:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_message()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgClientToSim::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgClientToSim::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 context = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->context(), output);
  }
  
  // required .MsgsClientToSim.MsgClientToSim.Content message = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->message(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgClientToSim::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 context = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->context(), target);
  }
  
  // required .MsgsClientToSim.MsgClientToSim.Content message = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->message(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgClientToSim::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 context = 1 [default = 0];
    if (has_context()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->context());
    }
    
    // required .MsgsClientToSim.MsgClientToSim.Content message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->message());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgClientToSim::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgClientToSim* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgClientToSim*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgClientToSim::MergeFrom(const MsgClientToSim& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_context(from.context());
    }
    if (from._has_bit(1)) {
      mutable_message()->::MsgsClientToSim::MsgClientToSim_Content::MergeFrom(from.message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgClientToSim::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgClientToSim::CopyFrom(const MsgClientToSim& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgClientToSim::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  
  if (has_message()) {
    if (!this->message().IsInitialized()) return false;
  }
  return true;
}

void MsgClientToSim::Swap(MsgClientToSim* other) {
  if (other != this) {
    std::swap(context_, other->context_);
    std::swap(message_, other->message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgClientToSim::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgClientToSim_descriptor_;
  metadata.reflection = MsgClientToSim_reflection_;
  return metadata;
}


}  // namespace MsgsClientToSim
