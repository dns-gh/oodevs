// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ClientToSim.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>

namespace MsgsClientToSim {

namespace {

const ::google::protobuf::Descriptor* MsgControlDatetimeChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgControlDatetimeChange_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgControlCheckPointSaveNow_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgControlCheckPointSaveNow_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgFragOrder_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgFragOrder_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSetAutomatMode_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSetAutomatMode_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgUnitCreationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgUnitCreationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgUnitMagicAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgUnitMagicAction_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgUnitMagicAction_Type_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgKnowledgeMagicAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgKnowledgeMagicAction_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgKnowledgeMagicAction_Type_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgObjectMagicAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgObjectMagicAction_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgObjectMagicAction_Type_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgObjectMagicAction_Attribute_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgMagicAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMagicAction_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgMagicAction_Type_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgControlCheckPointSetFrequency_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgControlCheckPointSetFrequency_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgControlCheckPointDeleteRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgControlCheckPointDeleteRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgControlCheckPointListRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgControlCheckPointListRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgControlEnableVisionCones_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgControlEnableVisionCones_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgClientToSim_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgClientToSim_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgClientToSim_Content_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgClientToSim_Content_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ClientToSim_2eproto() {
  protobuf_AddDesc_ClientToSim_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ClientToSim.proto");
  GOOGLE_CHECK(file != NULL);
  MsgControlDatetimeChange_descriptor_ = file->message_type(0);
  static const int MsgControlDatetimeChange_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlDatetimeChange, date_time_),
  };
  MsgControlDatetimeChange_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgControlDatetimeChange_descriptor_,
      MsgControlDatetimeChange::default_instance_,
      MsgControlDatetimeChange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlDatetimeChange, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlDatetimeChange, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgControlDatetimeChange));
  MsgControlCheckPointSaveNow_descriptor_ = file->message_type(1);
  static const int MsgControlCheckPointSaveNow_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlCheckPointSaveNow, name_),
  };
  MsgControlCheckPointSaveNow_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgControlCheckPointSaveNow_descriptor_,
      MsgControlCheckPointSaveNow::default_instance_,
      MsgControlCheckPointSaveNow_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlCheckPointSaveNow, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlCheckPointSaveNow, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgControlCheckPointSaveNow));
  MsgFragOrder_descriptor_ = file->message_type(2);
  static const int MsgFragOrder_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFragOrder, tasker_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFragOrder, frag_order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFragOrder, parameters_),
  };
  MsgFragOrder_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgFragOrder_descriptor_,
      MsgFragOrder::default_instance_,
      MsgFragOrder_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFragOrder, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFragOrder, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgFragOrder));
  MsgSetAutomatMode_descriptor_ = file->message_type(3);
  static const int MsgSetAutomatMode_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetAutomatMode, automate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetAutomatMode, mode_),
  };
  MsgSetAutomatMode_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSetAutomatMode_descriptor_,
      MsgSetAutomatMode::default_instance_,
      MsgSetAutomatMode_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetAutomatMode, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetAutomatMode, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSetAutomatMode));
  MsgUnitCreationRequest_descriptor_ = file->message_type(4);
  static const int MsgUnitCreationRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitCreationRequest, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitCreationRequest, superior_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitCreationRequest, position_),
  };
  MsgUnitCreationRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgUnitCreationRequest_descriptor_,
      MsgUnitCreationRequest::default_instance_,
      MsgUnitCreationRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitCreationRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitCreationRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgUnitCreationRequest));
  MsgUnitMagicAction_descriptor_ = file->message_type(5);
  static const int MsgUnitMagicAction_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitMagicAction, tasker_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitMagicAction, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitMagicAction, parameters_),
  };
  MsgUnitMagicAction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgUnitMagicAction_descriptor_,
      MsgUnitMagicAction::default_instance_,
      MsgUnitMagicAction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitMagicAction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitMagicAction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgUnitMagicAction));
  MsgUnitMagicAction_Type_descriptor_ = MsgUnitMagicAction_descriptor_->enum_type(0);
  MsgKnowledgeMagicAction_descriptor_ = file->message_type(6);
  static const int MsgKnowledgeMagicAction_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeMagicAction, knowledge_group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeMagicAction, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeMagicAction, parameters_),
  };
  MsgKnowledgeMagicAction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgKnowledgeMagicAction_descriptor_,
      MsgKnowledgeMagicAction::default_instance_,
      MsgKnowledgeMagicAction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeMagicAction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeMagicAction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgKnowledgeMagicAction));
  MsgKnowledgeMagicAction_Type_descriptor_ = MsgKnowledgeMagicAction_descriptor_->enum_type(0);
  MsgObjectMagicAction_descriptor_ = file->message_type(7);
  static const int MsgObjectMagicAction_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectMagicAction, object_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectMagicAction, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectMagicAction, parameters_),
  };
  MsgObjectMagicAction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgObjectMagicAction_descriptor_,
      MsgObjectMagicAction::default_instance_,
      MsgObjectMagicAction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectMagicAction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectMagicAction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgObjectMagicAction));
  MsgObjectMagicAction_Type_descriptor_ = MsgObjectMagicAction_descriptor_->enum_type(0);
  MsgObjectMagicAction_Attribute_descriptor_ = MsgObjectMagicAction_descriptor_->enum_type(1);
  MsgMagicAction_descriptor_ = file->message_type(8);
  static const int MsgMagicAction_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAction, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAction, parameters_),
  };
  MsgMagicAction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMagicAction_descriptor_,
      MsgMagicAction::default_instance_,
      MsgMagicAction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMagicAction));
  MsgMagicAction_Type_descriptor_ = MsgMagicAction_descriptor_->enum_type(0);
  MsgControlCheckPointSetFrequency_descriptor_ = file->message_type(9);
  static const int MsgControlCheckPointSetFrequency_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlCheckPointSetFrequency, frequency_),
  };
  MsgControlCheckPointSetFrequency_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgControlCheckPointSetFrequency_descriptor_,
      MsgControlCheckPointSetFrequency::default_instance_,
      MsgControlCheckPointSetFrequency_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlCheckPointSetFrequency, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlCheckPointSetFrequency, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgControlCheckPointSetFrequency));
  MsgControlCheckPointDeleteRequest_descriptor_ = file->message_type(10);
  static const int MsgControlCheckPointDeleteRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlCheckPointDeleteRequest, checkpoint_),
  };
  MsgControlCheckPointDeleteRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgControlCheckPointDeleteRequest_descriptor_,
      MsgControlCheckPointDeleteRequest::default_instance_,
      MsgControlCheckPointDeleteRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlCheckPointDeleteRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlCheckPointDeleteRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgControlCheckPointDeleteRequest));
  MsgControlCheckPointListRequest_descriptor_ = file->message_type(11);
  static const int MsgControlCheckPointListRequest_offsets_[1] = {
  };
  MsgControlCheckPointListRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgControlCheckPointListRequest_descriptor_,
      MsgControlCheckPointListRequest::default_instance_,
      MsgControlCheckPointListRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlCheckPointListRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlCheckPointListRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgControlCheckPointListRequest));
  MsgControlEnableVisionCones_descriptor_ = file->message_type(12);
  static const int MsgControlEnableVisionCones_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlEnableVisionCones, vision_cones_),
  };
  MsgControlEnableVisionCones_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgControlEnableVisionCones_descriptor_,
      MsgControlEnableVisionCones::default_instance_,
      MsgControlEnableVisionCones_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlEnableVisionCones, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlEnableVisionCones, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgControlEnableVisionCones));
  MsgClientToSim_descriptor_ = file->message_type(13);
  static const int MsgClientToSim_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim, context_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim, message_),
  };
  MsgClientToSim_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgClientToSim_descriptor_,
      MsgClientToSim::default_instance_,
      MsgClientToSim_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgClientToSim));
  MsgClientToSim_Content_descriptor_ = MsgClientToSim_descriptor_->nested_type(0);
  static const int MsgClientToSim_Content_offsets_[18] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, control_stop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, control_pause_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, control_resume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, control_change_time_factor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, control_date_time_change_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, control_checkpoint_save_now_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, control_checkpoint_set_frequency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, control_toggle_vision_cones_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, unit_order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, automat_order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, crowd_order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, frag_order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, set_automat_mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, unit_creation_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, unit_magic_action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, object_magic_action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, knowledge_magic_action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, magic_action_),
  };
  MsgClientToSim_Content_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgClientToSim_Content_descriptor_,
      MsgClientToSim_Content::default_instance_,
      MsgClientToSim_Content_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgClientToSim_Content));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ClientToSim_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgControlDatetimeChange_descriptor_, &MsgControlDatetimeChange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgControlCheckPointSaveNow_descriptor_, &MsgControlCheckPointSaveNow::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgFragOrder_descriptor_, &MsgFragOrder::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSetAutomatMode_descriptor_, &MsgSetAutomatMode::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgUnitCreationRequest_descriptor_, &MsgUnitCreationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgUnitMagicAction_descriptor_, &MsgUnitMagicAction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgKnowledgeMagicAction_descriptor_, &MsgKnowledgeMagicAction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgObjectMagicAction_descriptor_, &MsgObjectMagicAction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMagicAction_descriptor_, &MsgMagicAction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgControlCheckPointSetFrequency_descriptor_, &MsgControlCheckPointSetFrequency::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgControlCheckPointDeleteRequest_descriptor_, &MsgControlCheckPointDeleteRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgControlCheckPointListRequest_descriptor_, &MsgControlCheckPointListRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgControlEnableVisionCones_descriptor_, &MsgControlEnableVisionCones::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgClientToSim_descriptor_, &MsgClientToSim::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgClientToSim_Content_descriptor_, &MsgClientToSim_Content::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ClientToSim_2eproto() {
  delete MsgControlDatetimeChange::default_instance_;
  delete MsgControlDatetimeChange_reflection_;
  delete MsgControlCheckPointSaveNow::default_instance_;
  delete MsgControlCheckPointSaveNow_reflection_;
  delete MsgFragOrder::default_instance_;
  delete MsgFragOrder_reflection_;
  delete MsgSetAutomatMode::default_instance_;
  delete MsgSetAutomatMode_reflection_;
  delete MsgUnitCreationRequest::default_instance_;
  delete MsgUnitCreationRequest_reflection_;
  delete MsgUnitMagicAction::default_instance_;
  delete MsgUnitMagicAction_reflection_;
  delete MsgKnowledgeMagicAction::default_instance_;
  delete MsgKnowledgeMagicAction_reflection_;
  delete MsgObjectMagicAction::default_instance_;
  delete MsgObjectMagicAction_reflection_;
  delete MsgMagicAction::default_instance_;
  delete MsgMagicAction_reflection_;
  delete MsgControlCheckPointSetFrequency::default_instance_;
  delete MsgControlCheckPointSetFrequency_reflection_;
  delete MsgControlCheckPointDeleteRequest::default_instance_;
  delete MsgControlCheckPointDeleteRequest_reflection_;
  delete MsgControlCheckPointListRequest::default_instance_;
  delete MsgControlCheckPointListRequest_reflection_;
  delete MsgControlEnableVisionCones::default_instance_;
  delete MsgControlEnableVisionCones_reflection_;
  delete MsgClientToSim::default_instance_;
  delete MsgClientToSim_reflection_;
  delete MsgClientToSim_Content::default_instance_;
  delete MsgClientToSim_Content_reflection_;
}

void protobuf_AddDesc_ClientToSim_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Common::protobuf_AddDesc_Common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021ClientToSim.proto\022\017MsgsClientToSim\032\014Co"
    "mmon.proto\"B\n\030MsgControlDatetimeChange\022&"
    "\n\tdate_time\030\001 \002(\0132\023.Common.MsgDateTime\"+"
    "\n\033MsgControlCheckPointSaveNow\022\014\n\004name\030\001 "
    "\001(\t\"\213\001\n\014MsgFragOrder\022\036\n\006tasker\030\001 \002(\0132\016.C"
    "ommon.Tasker\022)\n\nfrag_order\030\002 \002(\0132\025.Commo"
    "n.FragOrderType\0220\n\nparameters\030\003 \001(\0132\034.Co"
    "mmon.MsgMissionParameters\"_\n\021MsgSetAutom"
    "atMode\022#\n\010automate\030\001 \002(\0132\021.Common.Automa"
    "tId\022%\n\004mode\030\002 \002(\0162\027.Common.EnumAutomatMo"
    "de\"\210\001\n\026MsgUnitCreationRequest\022\036\n\004type\030\001 "
    "\002(\0132\020.Common.UnitType\022#\n\010superior\030\002 \002(\0132"
    "\021.Common.AutomatId\022)\n\010position\030\003 \002(\0132\027.C"
    "ommon.MsgCoordLatLong\"\314\006\n\022MsgUnitMagicAc"
    "tion\022\036\n\006tasker\030\001 \002(\0132\016.Common.Tasker\0226\n\004"
    "type\030\002 \002(\0162(.MsgsClientToSim.MsgUnitMagi"
    "cAction.Type\0220\n\nparameters\030\003 \002(\0132\034.Commo"
    "n.MsgMissionParameters\"\253\005\n\004Type\022\013\n\007move_"
    "to\020\000\022\020\n\014surrender_to\020\001\022\024\n\020cancel_surrend"
    "er\020\002\022\030\n\024recover_transporters\020\003\022\025\n\021destro"
    "y_component\020\004\022\017\n\013recover_all\020\005\022\022\n\016recove"
    "r_troops\020\006\022\026\n\022recover_equipments\020\007\022\025\n\021re"
    "cover_resources\020\010\022\017\n\013destroy_all\020\t\022\030\n\024ch"
    "ange_human_factors\020\n\022\024\n\020partial_recovery"
    "\020\013\022\021\n\runit_creation\020\014\022\025\n\021create_fire_ord"
    "er\020\r\022\033\n\027crowd_total_destruction\020\016\022\016\n\ncro"
    "wd_kill\020\017\022\023\n\017crowd_resurrect\020\020\022\031\n\025crowd_"
    "change_attitude\020\021\022\032\n\026change_knowledge_gr"
    "oup\020\022\022\031\n\025change_logistic_links\020\023\022\030\n\024unit"
    "_change_superior\020\024\022\033\n\027change_automat_sup"
    "erior\020\025\022\035\n\031change_formation_superior\020\026\022\032"
    "\n\026knowledge_group_update\020\027\022\030\n\024log_supply"
    "_push_flow\020\030\022\034\n\030log_supply_change_quotas"
    "\020\031\022\024\n\020automat_creation\020\032\022\026\n\022formation_cr"
    "eation\020\033\022\022\n\016crowd_creation\020\034\"\213\002\n\027MsgKnow"
    "ledgeMagicAction\0221\n\017knowledge_group\030\001 \002("
    "\0132\030.Common.KnowledgeGroupId\022;\n\004type\030\002 \002("
    "\0162-.MsgsClientToSim.MsgKnowledgeMagicAct"
    "ion.Type\0220\n\nparameters\030\003 \002(\0132\034.Common.Ms"
    "gMissionParameters\"N\n\004Type\022\n\n\006enable\020\000\022\020"
    "\n\014update_party\020\001\022\027\n\023update_party_parent\020"
    "\002\022\017\n\013update_type\020\003\"\332\003\n\024MsgObjectMagicAct"
    "ion\022 \n\006object\030\001 \002(\0132\020.Common.ObjectId\0228\n"
    "\004type\030\002 \002(\0162*.MsgsClientToSim.MsgObjectM"
    "agicAction.Type\0220\n\nparameters\030\003 \002(\0132\034.Co"
    "mmon.MsgMissionParameters\"+\n\004Type\022\n\n\006cre"
    "ate\020\000\022\n\n\006update\020\001\022\013\n\007destroy\020\002\"\206\002\n\tAttri"
    "bute\022\020\n\014construction\020\000\022\014\n\010obstacle\020\001\022\010\n\004"
    "mine\020\002\022\021\n\ractivity_time\020\003\022\n\n\006bypass\020\004\022\014\n"
    "\010logistic\020\005\022\007\n\003nbc\020\006\022\021\n\rcrossing_site\020\007\022"
    "\020\n\014supply_route\020\010\022\017\n\013toxic_cloud\020\t\022\010\n\004fi"
    "re\020\n\022\025\n\021medical_treatment\020\013\022\026\n\022interacti"
    "on_height\020\014\022\t\n\005stock\020\r\022\r\n\tnbc_agent\020\016\022\020\n"
    "\014effect_delay\020\017\"\200\002\n\016MsgMagicAction\0222\n\004ty"
    "pe\030\001 \002(\0162$.MsgsClientToSim.MsgMagicActio"
    "n.Type\0220\n\nparameters\030\002 \002(\0132\034.Common.MsgM"
    "issionParameters\"\207\001\n\004Type\022\022\n\016global_weat"
    "her\020\000\022\021\n\rlocal_weather\020\001\022\024\n\020change_diplo"
    "macy\020\002\022\032\n\026create_knowledge_group\020\003\022&\n\"ch"
    "ange_resource_network_properties\020\004\"5\n Ms"
    "gControlCheckPointSetFrequency\022\021\n\tfreque"
    "ncy\030\001 \002(\005\"7\n!MsgControlCheckPointDeleteR"
    "equest\022\022\n\ncheckpoint\030\001 \002(\t\"!\n\037MsgControl"
    "CheckPointListRequest\"3\n\033MsgControlEnabl"
    "eVisionCones\022\024\n\014vision_cones\030\001 \002(\010\"\323\t\n\016M"
    "sgClientToSim\022\017\n\007context\030\001 \001(\005\0228\n\007messag"
    "e\030\002 \002(\0132\'.MsgsClientToSim.MsgClientToSim"
    ".Content\032\365\010\n\007Content\022,\n\014control_stop\030\001 \001"
    "(\0132\026.Common.MsgControlStop\022.\n\rcontrol_pa"
    "use\030\002 \001(\0132\027.Common.MsgControlPause\0220\n\016co"
    "ntrol_resume\030\003 \001(\0132\030.Common.MsgControlRe"
    "sume\022F\n\032control_change_time_factor\030\004 \001(\013"
    "2\".Common.MsgControlChangeTimeFactor\022K\n\030"
    "control_date_time_change\030\005 \001(\0132).MsgsCli"
    "entToSim.MsgControlDatetimeChange\022Q\n\033con"
    "trol_checkpoint_save_now\030\006 \001(\0132,.MsgsCli"
    "entToSim.MsgControlCheckPointSaveNow\022[\n "
    "control_checkpoint_set_frequency\030\007 \001(\01321"
    ".MsgsClientToSim.MsgControlCheckPointSet"
    "Frequency\022Q\n\033control_toggle_vision_cones"
    "\030\010 \001(\0132,.MsgsClientToSim.MsgControlEnabl"
    "eVisionCones\022(\n\nunit_order\030\t \001(\0132\024.Commo"
    "n.MsgUnitOrder\022.\n\rautomat_order\030\n \001(\0132\027."
    "Common.MsgAutomatOrder\022*\n\013crowd_order\030\013 "
    "\001(\0132\025.Common.MsgCrowdOrder\0221\n\nfrag_order"
    "\030\014 \001(\0132\035.MsgsClientToSim.MsgFragOrder\022<\n"
    "\020set_automat_mode\030\r \001(\0132\".MsgsClientToSi"
    "m.MsgSetAutomatMode\022F\n\025unit_creation_req"
    "uest\030\016 \001(\0132\'.MsgsClientToSim.MsgUnitCrea"
    "tionRequest\022>\n\021unit_magic_action\030\017 \001(\0132#"
    ".MsgsClientToSim.MsgUnitMagicAction\022B\n\023o"
    "bject_magic_action\030\020 \001(\0132%.MsgsClientToS"
    "im.MsgObjectMagicAction\022H\n\026knowledge_mag"
    "ic_action\030\021 \001(\0132(.MsgsClientToSim.MsgKno"
    "wledgeMagicAction\0225\n\014magic_action\030\022 \001(\0132"
    "\037.MsgsClientToSim.MsgMagicAction", 3832);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ClientToSim.proto", &protobuf_RegisterTypes);
  MsgControlDatetimeChange::default_instance_ = new MsgControlDatetimeChange();
  MsgControlCheckPointSaveNow::default_instance_ = new MsgControlCheckPointSaveNow();
  MsgFragOrder::default_instance_ = new MsgFragOrder();
  MsgSetAutomatMode::default_instance_ = new MsgSetAutomatMode();
  MsgUnitCreationRequest::default_instance_ = new MsgUnitCreationRequest();
  MsgUnitMagicAction::default_instance_ = new MsgUnitMagicAction();
  MsgKnowledgeMagicAction::default_instance_ = new MsgKnowledgeMagicAction();
  MsgObjectMagicAction::default_instance_ = new MsgObjectMagicAction();
  MsgMagicAction::default_instance_ = new MsgMagicAction();
  MsgControlCheckPointSetFrequency::default_instance_ = new MsgControlCheckPointSetFrequency();
  MsgControlCheckPointDeleteRequest::default_instance_ = new MsgControlCheckPointDeleteRequest();
  MsgControlCheckPointListRequest::default_instance_ = new MsgControlCheckPointListRequest();
  MsgControlEnableVisionCones::default_instance_ = new MsgControlEnableVisionCones();
  MsgClientToSim::default_instance_ = new MsgClientToSim();
  MsgClientToSim_Content::default_instance_ = new MsgClientToSim_Content();
  MsgControlDatetimeChange::default_instance_->InitAsDefaultInstance();
  MsgControlCheckPointSaveNow::default_instance_->InitAsDefaultInstance();
  MsgFragOrder::default_instance_->InitAsDefaultInstance();
  MsgSetAutomatMode::default_instance_->InitAsDefaultInstance();
  MsgUnitCreationRequest::default_instance_->InitAsDefaultInstance();
  MsgUnitMagicAction::default_instance_->InitAsDefaultInstance();
  MsgKnowledgeMagicAction::default_instance_->InitAsDefaultInstance();
  MsgObjectMagicAction::default_instance_->InitAsDefaultInstance();
  MsgMagicAction::default_instance_->InitAsDefaultInstance();
  MsgControlCheckPointSetFrequency::default_instance_->InitAsDefaultInstance();
  MsgControlCheckPointDeleteRequest::default_instance_->InitAsDefaultInstance();
  MsgControlCheckPointListRequest::default_instance_->InitAsDefaultInstance();
  MsgControlEnableVisionCones::default_instance_->InitAsDefaultInstance();
  MsgClientToSim::default_instance_->InitAsDefaultInstance();
  MsgClientToSim_Content::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ClientToSim_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ClientToSim_2eproto {
  StaticDescriptorInitializer_ClientToSim_2eproto() {
    protobuf_AddDesc_ClientToSim_2eproto();
  }
} static_descriptor_initializer_ClientToSim_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int MsgControlDatetimeChange::kDateTimeFieldNumber;
#endif  // !_MSC_VER

MsgControlDatetimeChange::MsgControlDatetimeChange() {
  SharedCtor();
}

void MsgControlDatetimeChange::InitAsDefaultInstance() {
  date_time_ = const_cast< ::Common::MsgDateTime*>(&::Common::MsgDateTime::default_instance());
}

MsgControlDatetimeChange::MsgControlDatetimeChange(const MsgControlDatetimeChange& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgControlDatetimeChange::SharedCtor() {
  _cached_size_ = 0;
  date_time_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgControlDatetimeChange::~MsgControlDatetimeChange() {
  SharedDtor();
}

void MsgControlDatetimeChange::SharedDtor() {
  if (this != default_instance_) {
    delete date_time_;
  }
}

const ::google::protobuf::Descriptor* MsgControlDatetimeChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlDatetimeChange_descriptor_;
}

const MsgControlDatetimeChange& MsgControlDatetimeChange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgControlDatetimeChange* MsgControlDatetimeChange::default_instance_ = NULL;

MsgControlDatetimeChange* MsgControlDatetimeChange::New() const {
  return new MsgControlDatetimeChange;
}

void MsgControlDatetimeChange::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (date_time_ != NULL) date_time_->::Common::MsgDateTime::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgControlDatetimeChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MsgDateTime date_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_date_time()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgControlDatetimeChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgControlDatetimeChange::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MsgDateTime date_time = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->date_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgControlDatetimeChange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MsgDateTime date_time = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->date_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgControlDatetimeChange::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MsgDateTime date_time = 1;
    if (has_date_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->date_time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgControlDatetimeChange::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgControlDatetimeChange* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgControlDatetimeChange*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgControlDatetimeChange::MergeFrom(const MsgControlDatetimeChange& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_date_time()->::Common::MsgDateTime::MergeFrom(from.date_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgControlDatetimeChange::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgControlDatetimeChange::CopyFrom(const MsgControlDatetimeChange& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgControlDatetimeChange::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_date_time()) {
    if (!this->date_time().IsInitialized()) return false;
  }
  return true;
}

void MsgControlDatetimeChange::Swap(MsgControlDatetimeChange* other) {
  if (other != this) {
    std::swap(date_time_, other->date_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgControlDatetimeChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgControlDatetimeChange_descriptor_;
  metadata.reflection = MsgControlDatetimeChange_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgControlCheckPointSaveNow::_default_name_;
#ifndef _MSC_VER
const int MsgControlCheckPointSaveNow::kNameFieldNumber;
#endif  // !_MSC_VER

MsgControlCheckPointSaveNow::MsgControlCheckPointSaveNow() {
  SharedCtor();
}

void MsgControlCheckPointSaveNow::InitAsDefaultInstance() {
}

MsgControlCheckPointSaveNow::MsgControlCheckPointSaveNow(const MsgControlCheckPointSaveNow& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgControlCheckPointSaveNow::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&_default_name_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgControlCheckPointSaveNow::~MsgControlCheckPointSaveNow() {
  SharedDtor();
}

void MsgControlCheckPointSaveNow::SharedDtor() {
  if (name_ != &_default_name_) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgControlCheckPointSaveNow::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlCheckPointSaveNow_descriptor_;
}

const MsgControlCheckPointSaveNow& MsgControlCheckPointSaveNow::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgControlCheckPointSaveNow* MsgControlCheckPointSaveNow::default_instance_ = NULL;

MsgControlCheckPointSaveNow* MsgControlCheckPointSaveNow::New() const {
  return new MsgControlCheckPointSaveNow;
}

void MsgControlCheckPointSaveNow::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (name_ != &_default_name_) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgControlCheckPointSaveNow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_name()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->name().data(), this->name().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgControlCheckPointSaveNow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgControlCheckPointSaveNow::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional string name = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgControlCheckPointSaveNow::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string name = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgControlCheckPointSaveNow::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgControlCheckPointSaveNow::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgControlCheckPointSaveNow* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgControlCheckPointSaveNow*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgControlCheckPointSaveNow::MergeFrom(const MsgControlCheckPointSaveNow& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgControlCheckPointSaveNow::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgControlCheckPointSaveNow::CopyFrom(const MsgControlCheckPointSaveNow& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgControlCheckPointSaveNow::IsInitialized() const {
  
  return true;
}

void MsgControlCheckPointSaveNow::Swap(MsgControlCheckPointSaveNow* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgControlCheckPointSaveNow::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgControlCheckPointSaveNow_descriptor_;
  metadata.reflection = MsgControlCheckPointSaveNow_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgFragOrder::kTaskerFieldNumber;
const int MsgFragOrder::kFragOrderFieldNumber;
const int MsgFragOrder::kParametersFieldNumber;
#endif  // !_MSC_VER

MsgFragOrder::MsgFragOrder() {
  SharedCtor();
}

void MsgFragOrder::InitAsDefaultInstance() {
  tasker_ = const_cast< ::Common::Tasker*>(&::Common::Tasker::default_instance());
  frag_order_ = const_cast< ::Common::FragOrderType*>(&::Common::FragOrderType::default_instance());
  parameters_ = const_cast< ::Common::MsgMissionParameters*>(&::Common::MsgMissionParameters::default_instance());
}

MsgFragOrder::MsgFragOrder(const MsgFragOrder& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgFragOrder::SharedCtor() {
  _cached_size_ = 0;
  tasker_ = NULL;
  frag_order_ = NULL;
  parameters_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgFragOrder::~MsgFragOrder() {
  SharedDtor();
}

void MsgFragOrder::SharedDtor() {
  if (this != default_instance_) {
    delete tasker_;
    delete frag_order_;
    delete parameters_;
  }
}

const ::google::protobuf::Descriptor* MsgFragOrder::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgFragOrder_descriptor_;
}

const MsgFragOrder& MsgFragOrder::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgFragOrder* MsgFragOrder::default_instance_ = NULL;

MsgFragOrder* MsgFragOrder::New() const {
  return new MsgFragOrder;
}

void MsgFragOrder::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (tasker_ != NULL) tasker_->::Common::Tasker::Clear();
    }
    if (_has_bit(1)) {
      if (frag_order_ != NULL) frag_order_->::Common::FragOrderType::Clear();
    }
    if (_has_bit(2)) {
      if (parameters_ != NULL) parameters_->::Common::MsgMissionParameters::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgFragOrder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.Tasker tasker = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_tasker()));
        if (input->ExpectTag(18)) goto parse_frag_order;
        break;
      }
      
      // required .Common.FragOrderType frag_order = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_frag_order:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_frag_order()));
        if (input->ExpectTag(26)) goto parse_parameters;
        break;
      }
      
      // optional .Common.MsgMissionParameters parameters = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_parameters:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_parameters()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgFragOrder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgFragOrder::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.Tasker tasker = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->tasker(), output);
  }
  
  // required .Common.FragOrderType frag_order = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->frag_order(), output);
  }
  
  // optional .Common.MsgMissionParameters parameters = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->parameters(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgFragOrder::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.Tasker tasker = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->tasker(), target);
  }
  
  // required .Common.FragOrderType frag_order = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->frag_order(), target);
  }
  
  // optional .Common.MsgMissionParameters parameters = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->parameters(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgFragOrder::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.Tasker tasker = 1;
    if (has_tasker()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tasker());
    }
    
    // required .Common.FragOrderType frag_order = 2;
    if (has_frag_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->frag_order());
    }
    
    // optional .Common.MsgMissionParameters parameters = 3;
    if (has_parameters()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parameters());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgFragOrder::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgFragOrder* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgFragOrder*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgFragOrder::MergeFrom(const MsgFragOrder& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_tasker()->::Common::Tasker::MergeFrom(from.tasker());
    }
    if (from._has_bit(1)) {
      mutable_frag_order()->::Common::FragOrderType::MergeFrom(from.frag_order());
    }
    if (from._has_bit(2)) {
      mutable_parameters()->::Common::MsgMissionParameters::MergeFrom(from.parameters());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgFragOrder::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgFragOrder::CopyFrom(const MsgFragOrder& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgFragOrder::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_tasker()) {
    if (!this->tasker().IsInitialized()) return false;
  }
  if (has_frag_order()) {
    if (!this->frag_order().IsInitialized()) return false;
  }
  if (has_parameters()) {
    if (!this->parameters().IsInitialized()) return false;
  }
  return true;
}

void MsgFragOrder::Swap(MsgFragOrder* other) {
  if (other != this) {
    std::swap(tasker_, other->tasker_);
    std::swap(frag_order_, other->frag_order_);
    std::swap(parameters_, other->parameters_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgFragOrder::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgFragOrder_descriptor_;
  metadata.reflection = MsgFragOrder_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSetAutomatMode::kAutomateFieldNumber;
const int MsgSetAutomatMode::kModeFieldNumber;
#endif  // !_MSC_VER

MsgSetAutomatMode::MsgSetAutomatMode() {
  SharedCtor();
}

void MsgSetAutomatMode::InitAsDefaultInstance() {
  automate_ = const_cast< ::Common::AutomatId*>(&::Common::AutomatId::default_instance());
}

MsgSetAutomatMode::MsgSetAutomatMode(const MsgSetAutomatMode& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgSetAutomatMode::SharedCtor() {
  _cached_size_ = 0;
  automate_ = NULL;
  mode_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSetAutomatMode::~MsgSetAutomatMode() {
  SharedDtor();
}

void MsgSetAutomatMode::SharedDtor() {
  if (this != default_instance_) {
    delete automate_;
  }
}

const ::google::protobuf::Descriptor* MsgSetAutomatMode::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSetAutomatMode_descriptor_;
}

const MsgSetAutomatMode& MsgSetAutomatMode::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgSetAutomatMode* MsgSetAutomatMode::default_instance_ = NULL;

MsgSetAutomatMode* MsgSetAutomatMode::New() const {
  return new MsgSetAutomatMode;
}

void MsgSetAutomatMode::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (automate_ != NULL) automate_->::Common::AutomatId::Clear();
    }
    mode_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSetAutomatMode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.AutomatId automate = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_automate()));
        if (input->ExpectTag(16)) goto parse_mode;
        break;
      }
      
      // required .Common.EnumAutomatMode mode = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_mode:
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (Common::EnumAutomatMode_IsValid(value)) {
          set_mode(static_cast< Common::EnumAutomatMode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(2, value);
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgSetAutomatMode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgSetAutomatMode::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.AutomatId automate = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->automate(), output);
  }
  
  // required .Common.EnumAutomatMode mode = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->mode(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgSetAutomatMode::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.AutomatId automate = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->automate(), target);
  }
  
  // required .Common.EnumAutomatMode mode = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->mode(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgSetAutomatMode::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.AutomatId automate = 1;
    if (has_automate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->automate());
    }
    
    // required .Common.EnumAutomatMode mode = 2;
    if (has_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgSetAutomatMode::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSetAutomatMode* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSetAutomatMode*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSetAutomatMode::MergeFrom(const MsgSetAutomatMode& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_automate()->::Common::AutomatId::MergeFrom(from.automate());
    }
    if (from._has_bit(1)) {
      set_mode(from.mode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSetAutomatMode::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSetAutomatMode::CopyFrom(const MsgSetAutomatMode& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSetAutomatMode::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_automate()) {
    if (!this->automate().IsInitialized()) return false;
  }
  return true;
}

void MsgSetAutomatMode::Swap(MsgSetAutomatMode* other) {
  if (other != this) {
    std::swap(automate_, other->automate_);
    std::swap(mode_, other->mode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSetAutomatMode::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSetAutomatMode_descriptor_;
  metadata.reflection = MsgSetAutomatMode_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgUnitCreationRequest::kTypeFieldNumber;
const int MsgUnitCreationRequest::kSuperiorFieldNumber;
const int MsgUnitCreationRequest::kPositionFieldNumber;
#endif  // !_MSC_VER

MsgUnitCreationRequest::MsgUnitCreationRequest() {
  SharedCtor();
}

void MsgUnitCreationRequest::InitAsDefaultInstance() {
  type_ = const_cast< ::Common::UnitType*>(&::Common::UnitType::default_instance());
  superior_ = const_cast< ::Common::AutomatId*>(&::Common::AutomatId::default_instance());
  position_ = const_cast< ::Common::MsgCoordLatLong*>(&::Common::MsgCoordLatLong::default_instance());
}

MsgUnitCreationRequest::MsgUnitCreationRequest(const MsgUnitCreationRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgUnitCreationRequest::SharedCtor() {
  _cached_size_ = 0;
  type_ = NULL;
  superior_ = NULL;
  position_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgUnitCreationRequest::~MsgUnitCreationRequest() {
  SharedDtor();
}

void MsgUnitCreationRequest::SharedDtor() {
  if (this != default_instance_) {
    delete type_;
    delete superior_;
    delete position_;
  }
}

const ::google::protobuf::Descriptor* MsgUnitCreationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgUnitCreationRequest_descriptor_;
}

const MsgUnitCreationRequest& MsgUnitCreationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgUnitCreationRequest* MsgUnitCreationRequest::default_instance_ = NULL;

MsgUnitCreationRequest* MsgUnitCreationRequest::New() const {
  return new MsgUnitCreationRequest;
}

void MsgUnitCreationRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (type_ != NULL) type_->::Common::UnitType::Clear();
    }
    if (_has_bit(1)) {
      if (superior_ != NULL) superior_->::Common::AutomatId::Clear();
    }
    if (_has_bit(2)) {
      if (position_ != NULL) position_->::Common::MsgCoordLatLong::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgUnitCreationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.UnitType type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_type()));
        if (input->ExpectTag(18)) goto parse_superior;
        break;
      }
      
      // required .Common.AutomatId superior = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_superior:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_superior()));
        if (input->ExpectTag(26)) goto parse_position;
        break;
      }
      
      // required .Common.MsgCoordLatLong position = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_position:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_position()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgUnitCreationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgUnitCreationRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.UnitType type = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->type(), output);
  }
  
  // required .Common.AutomatId superior = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->superior(), output);
  }
  
  // required .Common.MsgCoordLatLong position = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->position(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgUnitCreationRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.UnitType type = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->type(), target);
  }
  
  // required .Common.AutomatId superior = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->superior(), target);
  }
  
  // required .Common.MsgCoordLatLong position = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->position(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgUnitCreationRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.UnitType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->type());
    }
    
    // required .Common.AutomatId superior = 2;
    if (has_superior()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->superior());
    }
    
    // required .Common.MsgCoordLatLong position = 3;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->position());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgUnitCreationRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgUnitCreationRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgUnitCreationRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgUnitCreationRequest::MergeFrom(const MsgUnitCreationRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_type()->::Common::UnitType::MergeFrom(from.type());
    }
    if (from._has_bit(1)) {
      mutable_superior()->::Common::AutomatId::MergeFrom(from.superior());
    }
    if (from._has_bit(2)) {
      mutable_position()->::Common::MsgCoordLatLong::MergeFrom(from.position());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgUnitCreationRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgUnitCreationRequest::CopyFrom(const MsgUnitCreationRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUnitCreationRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  if (has_type()) {
    if (!this->type().IsInitialized()) return false;
  }
  if (has_superior()) {
    if (!this->superior().IsInitialized()) return false;
  }
  if (has_position()) {
    if (!this->position().IsInitialized()) return false;
  }
  return true;
}

void MsgUnitCreationRequest::Swap(MsgUnitCreationRequest* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(superior_, other->superior_);
    std::swap(position_, other->position_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgUnitCreationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgUnitCreationRequest_descriptor_;
  metadata.reflection = MsgUnitCreationRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgUnitMagicAction_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgUnitMagicAction_Type_descriptor_;
}
bool MsgUnitMagicAction_Type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgUnitMagicAction_Type MsgUnitMagicAction::move_to;
const MsgUnitMagicAction_Type MsgUnitMagicAction::surrender_to;
const MsgUnitMagicAction_Type MsgUnitMagicAction::cancel_surrender;
const MsgUnitMagicAction_Type MsgUnitMagicAction::recover_transporters;
const MsgUnitMagicAction_Type MsgUnitMagicAction::destroy_component;
const MsgUnitMagicAction_Type MsgUnitMagicAction::recover_all;
const MsgUnitMagicAction_Type MsgUnitMagicAction::recover_troops;
const MsgUnitMagicAction_Type MsgUnitMagicAction::recover_equipments;
const MsgUnitMagicAction_Type MsgUnitMagicAction::recover_resources;
const MsgUnitMagicAction_Type MsgUnitMagicAction::destroy_all;
const MsgUnitMagicAction_Type MsgUnitMagicAction::change_human_factors;
const MsgUnitMagicAction_Type MsgUnitMagicAction::partial_recovery;
const MsgUnitMagicAction_Type MsgUnitMagicAction::unit_creation;
const MsgUnitMagicAction_Type MsgUnitMagicAction::create_fire_order;
const MsgUnitMagicAction_Type MsgUnitMagicAction::crowd_total_destruction;
const MsgUnitMagicAction_Type MsgUnitMagicAction::crowd_kill;
const MsgUnitMagicAction_Type MsgUnitMagicAction::crowd_resurrect;
const MsgUnitMagicAction_Type MsgUnitMagicAction::crowd_change_attitude;
const MsgUnitMagicAction_Type MsgUnitMagicAction::change_knowledge_group;
const MsgUnitMagicAction_Type MsgUnitMagicAction::change_logistic_links;
const MsgUnitMagicAction_Type MsgUnitMagicAction::unit_change_superior;
const MsgUnitMagicAction_Type MsgUnitMagicAction::change_automat_superior;
const MsgUnitMagicAction_Type MsgUnitMagicAction::change_formation_superior;
const MsgUnitMagicAction_Type MsgUnitMagicAction::knowledge_group_update;
const MsgUnitMagicAction_Type MsgUnitMagicAction::log_supply_push_flow;
const MsgUnitMagicAction_Type MsgUnitMagicAction::log_supply_change_quotas;
const MsgUnitMagicAction_Type MsgUnitMagicAction::automat_creation;
const MsgUnitMagicAction_Type MsgUnitMagicAction::formation_creation;
const MsgUnitMagicAction_Type MsgUnitMagicAction::crowd_creation;
const MsgUnitMagicAction_Type MsgUnitMagicAction::Type_MIN;
const MsgUnitMagicAction_Type MsgUnitMagicAction::Type_MAX;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgUnitMagicAction::kTaskerFieldNumber;
const int MsgUnitMagicAction::kTypeFieldNumber;
const int MsgUnitMagicAction::kParametersFieldNumber;
#endif  // !_MSC_VER

MsgUnitMagicAction::MsgUnitMagicAction() {
  SharedCtor();
}

void MsgUnitMagicAction::InitAsDefaultInstance() {
  tasker_ = const_cast< ::Common::Tasker*>(&::Common::Tasker::default_instance());
  parameters_ = const_cast< ::Common::MsgMissionParameters*>(&::Common::MsgMissionParameters::default_instance());
}

MsgUnitMagicAction::MsgUnitMagicAction(const MsgUnitMagicAction& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgUnitMagicAction::SharedCtor() {
  _cached_size_ = 0;
  tasker_ = NULL;
  type_ = 0;
  parameters_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgUnitMagicAction::~MsgUnitMagicAction() {
  SharedDtor();
}

void MsgUnitMagicAction::SharedDtor() {
  if (this != default_instance_) {
    delete tasker_;
    delete parameters_;
  }
}

const ::google::protobuf::Descriptor* MsgUnitMagicAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgUnitMagicAction_descriptor_;
}

const MsgUnitMagicAction& MsgUnitMagicAction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgUnitMagicAction* MsgUnitMagicAction::default_instance_ = NULL;

MsgUnitMagicAction* MsgUnitMagicAction::New() const {
  return new MsgUnitMagicAction;
}

void MsgUnitMagicAction::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (tasker_ != NULL) tasker_->::Common::Tasker::Clear();
    }
    type_ = 0;
    if (_has_bit(2)) {
      if (parameters_ != NULL) parameters_->::Common::MsgMissionParameters::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgUnitMagicAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.Tasker tasker = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_tasker()));
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // required .MsgsClientToSim.MsgUnitMagicAction.Type type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_type:
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsClientToSim::MsgUnitMagicAction_Type_IsValid(value)) {
          set_type(static_cast< ::MsgsClientToSim::MsgUnitMagicAction_Type >(value));
        } else {
          mutable_unknown_fields()->AddVarint(2, value);
        }
        if (input->ExpectTag(26)) goto parse_parameters;
        break;
      }
      
      // required .Common.MsgMissionParameters parameters = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_parameters:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_parameters()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgUnitMagicAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgUnitMagicAction::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.Tasker tasker = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->tasker(), output);
  }
  
  // required .MsgsClientToSim.MsgUnitMagicAction.Type type = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }
  
  // required .Common.MsgMissionParameters parameters = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->parameters(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgUnitMagicAction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.Tasker tasker = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->tasker(), target);
  }
  
  // required .MsgsClientToSim.MsgUnitMagicAction.Type type = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }
  
  // required .Common.MsgMissionParameters parameters = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->parameters(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgUnitMagicAction::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.Tasker tasker = 1;
    if (has_tasker()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tasker());
    }
    
    // required .MsgsClientToSim.MsgUnitMagicAction.Type type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }
    
    // required .Common.MsgMissionParameters parameters = 3;
    if (has_parameters()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parameters());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgUnitMagicAction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgUnitMagicAction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgUnitMagicAction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgUnitMagicAction::MergeFrom(const MsgUnitMagicAction& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_tasker()->::Common::Tasker::MergeFrom(from.tasker());
    }
    if (from._has_bit(1)) {
      set_type(from.type());
    }
    if (from._has_bit(2)) {
      mutable_parameters()->::Common::MsgMissionParameters::MergeFrom(from.parameters());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgUnitMagicAction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgUnitMagicAction::CopyFrom(const MsgUnitMagicAction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUnitMagicAction::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  if (has_tasker()) {
    if (!this->tasker().IsInitialized()) return false;
  }
  if (has_parameters()) {
    if (!this->parameters().IsInitialized()) return false;
  }
  return true;
}

void MsgUnitMagicAction::Swap(MsgUnitMagicAction* other) {
  if (other != this) {
    std::swap(tasker_, other->tasker_);
    std::swap(type_, other->type_);
    std::swap(parameters_, other->parameters_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgUnitMagicAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgUnitMagicAction_descriptor_;
  metadata.reflection = MsgUnitMagicAction_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgKnowledgeMagicAction_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgKnowledgeMagicAction_Type_descriptor_;
}
bool MsgKnowledgeMagicAction_Type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgKnowledgeMagicAction_Type MsgKnowledgeMagicAction::enable;
const MsgKnowledgeMagicAction_Type MsgKnowledgeMagicAction::update_party;
const MsgKnowledgeMagicAction_Type MsgKnowledgeMagicAction::update_party_parent;
const MsgKnowledgeMagicAction_Type MsgKnowledgeMagicAction::update_type;
const MsgKnowledgeMagicAction_Type MsgKnowledgeMagicAction::Type_MIN;
const MsgKnowledgeMagicAction_Type MsgKnowledgeMagicAction::Type_MAX;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgKnowledgeMagicAction::kKnowledgeGroupFieldNumber;
const int MsgKnowledgeMagicAction::kTypeFieldNumber;
const int MsgKnowledgeMagicAction::kParametersFieldNumber;
#endif  // !_MSC_VER

MsgKnowledgeMagicAction::MsgKnowledgeMagicAction() {
  SharedCtor();
}

void MsgKnowledgeMagicAction::InitAsDefaultInstance() {
  knowledge_group_ = const_cast< ::Common::KnowledgeGroupId*>(&::Common::KnowledgeGroupId::default_instance());
  parameters_ = const_cast< ::Common::MsgMissionParameters*>(&::Common::MsgMissionParameters::default_instance());
}

MsgKnowledgeMagicAction::MsgKnowledgeMagicAction(const MsgKnowledgeMagicAction& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgKnowledgeMagicAction::SharedCtor() {
  _cached_size_ = 0;
  knowledge_group_ = NULL;
  type_ = 0;
  parameters_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgKnowledgeMagicAction::~MsgKnowledgeMagicAction() {
  SharedDtor();
}

void MsgKnowledgeMagicAction::SharedDtor() {
  if (this != default_instance_) {
    delete knowledge_group_;
    delete parameters_;
  }
}

const ::google::protobuf::Descriptor* MsgKnowledgeMagicAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgKnowledgeMagicAction_descriptor_;
}

const MsgKnowledgeMagicAction& MsgKnowledgeMagicAction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgKnowledgeMagicAction* MsgKnowledgeMagicAction::default_instance_ = NULL;

MsgKnowledgeMagicAction* MsgKnowledgeMagicAction::New() const {
  return new MsgKnowledgeMagicAction;
}

void MsgKnowledgeMagicAction::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (knowledge_group_ != NULL) knowledge_group_->::Common::KnowledgeGroupId::Clear();
    }
    type_ = 0;
    if (_has_bit(2)) {
      if (parameters_ != NULL) parameters_->::Common::MsgMissionParameters::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgKnowledgeMagicAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.KnowledgeGroupId knowledge_group = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_knowledge_group()));
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // required .MsgsClientToSim.MsgKnowledgeMagicAction.Type type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_type:
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsClientToSim::MsgKnowledgeMagicAction_Type_IsValid(value)) {
          set_type(static_cast< ::MsgsClientToSim::MsgKnowledgeMagicAction_Type >(value));
        } else {
          mutable_unknown_fields()->AddVarint(2, value);
        }
        if (input->ExpectTag(26)) goto parse_parameters;
        break;
      }
      
      // required .Common.MsgMissionParameters parameters = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_parameters:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_parameters()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgKnowledgeMagicAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgKnowledgeMagicAction::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.KnowledgeGroupId knowledge_group = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->knowledge_group(), output);
  }
  
  // required .MsgsClientToSim.MsgKnowledgeMagicAction.Type type = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }
  
  // required .Common.MsgMissionParameters parameters = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->parameters(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgKnowledgeMagicAction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.KnowledgeGroupId knowledge_group = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->knowledge_group(), target);
  }
  
  // required .MsgsClientToSim.MsgKnowledgeMagicAction.Type type = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }
  
  // required .Common.MsgMissionParameters parameters = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->parameters(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgKnowledgeMagicAction::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.KnowledgeGroupId knowledge_group = 1;
    if (has_knowledge_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->knowledge_group());
    }
    
    // required .MsgsClientToSim.MsgKnowledgeMagicAction.Type type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }
    
    // required .Common.MsgMissionParameters parameters = 3;
    if (has_parameters()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parameters());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgKnowledgeMagicAction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgKnowledgeMagicAction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgKnowledgeMagicAction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgKnowledgeMagicAction::MergeFrom(const MsgKnowledgeMagicAction& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_knowledge_group()->::Common::KnowledgeGroupId::MergeFrom(from.knowledge_group());
    }
    if (from._has_bit(1)) {
      set_type(from.type());
    }
    if (from._has_bit(2)) {
      mutable_parameters()->::Common::MsgMissionParameters::MergeFrom(from.parameters());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgKnowledgeMagicAction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgKnowledgeMagicAction::CopyFrom(const MsgKnowledgeMagicAction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgKnowledgeMagicAction::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  if (has_knowledge_group()) {
    if (!this->knowledge_group().IsInitialized()) return false;
  }
  if (has_parameters()) {
    if (!this->parameters().IsInitialized()) return false;
  }
  return true;
}

void MsgKnowledgeMagicAction::Swap(MsgKnowledgeMagicAction* other) {
  if (other != this) {
    std::swap(knowledge_group_, other->knowledge_group_);
    std::swap(type_, other->type_);
    std::swap(parameters_, other->parameters_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgKnowledgeMagicAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgKnowledgeMagicAction_descriptor_;
  metadata.reflection = MsgKnowledgeMagicAction_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgObjectMagicAction_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjectMagicAction_Type_descriptor_;
}
bool MsgObjectMagicAction_Type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgObjectMagicAction_Type MsgObjectMagicAction::create;
const MsgObjectMagicAction_Type MsgObjectMagicAction::update;
const MsgObjectMagicAction_Type MsgObjectMagicAction::destroy;
const MsgObjectMagicAction_Type MsgObjectMagicAction::Type_MIN;
const MsgObjectMagicAction_Type MsgObjectMagicAction::Type_MAX;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* MsgObjectMagicAction_Attribute_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjectMagicAction_Attribute_descriptor_;
}
bool MsgObjectMagicAction_Attribute_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgObjectMagicAction_Attribute MsgObjectMagicAction::construction;
const MsgObjectMagicAction_Attribute MsgObjectMagicAction::obstacle;
const MsgObjectMagicAction_Attribute MsgObjectMagicAction::mine;
const MsgObjectMagicAction_Attribute MsgObjectMagicAction::activity_time;
const MsgObjectMagicAction_Attribute MsgObjectMagicAction::bypass;
const MsgObjectMagicAction_Attribute MsgObjectMagicAction::logistic;
const MsgObjectMagicAction_Attribute MsgObjectMagicAction::nbc;
const MsgObjectMagicAction_Attribute MsgObjectMagicAction::crossing_site;
const MsgObjectMagicAction_Attribute MsgObjectMagicAction::supply_route;
const MsgObjectMagicAction_Attribute MsgObjectMagicAction::toxic_cloud;
const MsgObjectMagicAction_Attribute MsgObjectMagicAction::fire;
const MsgObjectMagicAction_Attribute MsgObjectMagicAction::medical_treatment;
const MsgObjectMagicAction_Attribute MsgObjectMagicAction::interaction_height;
const MsgObjectMagicAction_Attribute MsgObjectMagicAction::stock;
const MsgObjectMagicAction_Attribute MsgObjectMagicAction::nbc_agent;
const MsgObjectMagicAction_Attribute MsgObjectMagicAction::effect_delay;
const MsgObjectMagicAction_Attribute MsgObjectMagicAction::Attribute_MIN;
const MsgObjectMagicAction_Attribute MsgObjectMagicAction::Attribute_MAX;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgObjectMagicAction::kObjectFieldNumber;
const int MsgObjectMagicAction::kTypeFieldNumber;
const int MsgObjectMagicAction::kParametersFieldNumber;
#endif  // !_MSC_VER

MsgObjectMagicAction::MsgObjectMagicAction() {
  SharedCtor();
}

void MsgObjectMagicAction::InitAsDefaultInstance() {
  object_ = const_cast< ::Common::ObjectId*>(&::Common::ObjectId::default_instance());
  parameters_ = const_cast< ::Common::MsgMissionParameters*>(&::Common::MsgMissionParameters::default_instance());
}

MsgObjectMagicAction::MsgObjectMagicAction(const MsgObjectMagicAction& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgObjectMagicAction::SharedCtor() {
  _cached_size_ = 0;
  object_ = NULL;
  type_ = 0;
  parameters_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjectMagicAction::~MsgObjectMagicAction() {
  SharedDtor();
}

void MsgObjectMagicAction::SharedDtor() {
  if (this != default_instance_) {
    delete object_;
    delete parameters_;
  }
}

const ::google::protobuf::Descriptor* MsgObjectMagicAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjectMagicAction_descriptor_;
}

const MsgObjectMagicAction& MsgObjectMagicAction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgObjectMagicAction* MsgObjectMagicAction::default_instance_ = NULL;

MsgObjectMagicAction* MsgObjectMagicAction::New() const {
  return new MsgObjectMagicAction;
}

void MsgObjectMagicAction::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (object_ != NULL) object_->::Common::ObjectId::Clear();
    }
    type_ = 0;
    if (_has_bit(2)) {
      if (parameters_ != NULL) parameters_->::Common::MsgMissionParameters::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgObjectMagicAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.ObjectId object = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_object()));
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // required .MsgsClientToSim.MsgObjectMagicAction.Type type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_type:
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsClientToSim::MsgObjectMagicAction_Type_IsValid(value)) {
          set_type(static_cast< ::MsgsClientToSim::MsgObjectMagicAction_Type >(value));
        } else {
          mutable_unknown_fields()->AddVarint(2, value);
        }
        if (input->ExpectTag(26)) goto parse_parameters;
        break;
      }
      
      // required .Common.MsgMissionParameters parameters = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_parameters:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_parameters()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgObjectMagicAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgObjectMagicAction::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.ObjectId object = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->object(), output);
  }
  
  // required .MsgsClientToSim.MsgObjectMagicAction.Type type = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }
  
  // required .Common.MsgMissionParameters parameters = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->parameters(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgObjectMagicAction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.ObjectId object = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->object(), target);
  }
  
  // required .MsgsClientToSim.MsgObjectMagicAction.Type type = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }
  
  // required .Common.MsgMissionParameters parameters = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->parameters(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgObjectMagicAction::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.ObjectId object = 1;
    if (has_object()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->object());
    }
    
    // required .MsgsClientToSim.MsgObjectMagicAction.Type type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }
    
    // required .Common.MsgMissionParameters parameters = 3;
    if (has_parameters()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parameters());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgObjectMagicAction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgObjectMagicAction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgObjectMagicAction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgObjectMagicAction::MergeFrom(const MsgObjectMagicAction& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_object()->::Common::ObjectId::MergeFrom(from.object());
    }
    if (from._has_bit(1)) {
      set_type(from.type());
    }
    if (from._has_bit(2)) {
      mutable_parameters()->::Common::MsgMissionParameters::MergeFrom(from.parameters());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgObjectMagicAction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgObjectMagicAction::CopyFrom(const MsgObjectMagicAction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjectMagicAction::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  if (has_object()) {
    if (!this->object().IsInitialized()) return false;
  }
  if (has_parameters()) {
    if (!this->parameters().IsInitialized()) return false;
  }
  return true;
}

void MsgObjectMagicAction::Swap(MsgObjectMagicAction* other) {
  if (other != this) {
    std::swap(object_, other->object_);
    std::swap(type_, other->type_);
    std::swap(parameters_, other->parameters_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgObjectMagicAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgObjectMagicAction_descriptor_;
  metadata.reflection = MsgObjectMagicAction_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgMagicAction_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMagicAction_Type_descriptor_;
}
bool MsgMagicAction_Type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgMagicAction_Type MsgMagicAction::global_weather;
const MsgMagicAction_Type MsgMagicAction::local_weather;
const MsgMagicAction_Type MsgMagicAction::change_diplomacy;
const MsgMagicAction_Type MsgMagicAction::create_knowledge_group;
const MsgMagicAction_Type MsgMagicAction::change_resource_network_properties;
const MsgMagicAction_Type MsgMagicAction::Type_MIN;
const MsgMagicAction_Type MsgMagicAction::Type_MAX;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgMagicAction::kTypeFieldNumber;
const int MsgMagicAction::kParametersFieldNumber;
#endif  // !_MSC_VER

MsgMagicAction::MsgMagicAction() {
  SharedCtor();
}

void MsgMagicAction::InitAsDefaultInstance() {
  parameters_ = const_cast< ::Common::MsgMissionParameters*>(&::Common::MsgMissionParameters::default_instance());
}

MsgMagicAction::MsgMagicAction(const MsgMagicAction& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMagicAction::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  parameters_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMagicAction::~MsgMagicAction() {
  SharedDtor();
}

void MsgMagicAction::SharedDtor() {
  if (this != default_instance_) {
    delete parameters_;
  }
}

const ::google::protobuf::Descriptor* MsgMagicAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMagicAction_descriptor_;
}

const MsgMagicAction& MsgMagicAction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgMagicAction* MsgMagicAction::default_instance_ = NULL;

MsgMagicAction* MsgMagicAction::New() const {
  return new MsgMagicAction;
}

void MsgMagicAction::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    if (_has_bit(1)) {
      if (parameters_ != NULL) parameters_->::Common::MsgMissionParameters::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMagicAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MsgsClientToSim.MsgMagicAction.Type type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsClientToSim::MsgMagicAction_Type_IsValid(value)) {
          set_type(static_cast< ::MsgsClientToSim::MsgMagicAction_Type >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectTag(18)) goto parse_parameters;
        break;
      }
      
      // required .Common.MsgMissionParameters parameters = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_parameters:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_parameters()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMagicAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMagicAction::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .MsgsClientToSim.MsgMagicAction.Type type = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }
  
  // required .Common.MsgMissionParameters parameters = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->parameters(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMagicAction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .MsgsClientToSim.MsgMagicAction.Type type = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }
  
  // required .Common.MsgMissionParameters parameters = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->parameters(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMagicAction::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .MsgsClientToSim.MsgMagicAction.Type type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }
    
    // required .Common.MsgMissionParameters parameters = 2;
    if (has_parameters()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parameters());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMagicAction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMagicAction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMagicAction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMagicAction::MergeFrom(const MsgMagicAction& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_type(from.type());
    }
    if (from._has_bit(1)) {
      mutable_parameters()->::Common::MsgMissionParameters::MergeFrom(from.parameters());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMagicAction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMagicAction::CopyFrom(const MsgMagicAction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMagicAction::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_parameters()) {
    if (!this->parameters().IsInitialized()) return false;
  }
  return true;
}

void MsgMagicAction::Swap(MsgMagicAction* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(parameters_, other->parameters_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMagicAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMagicAction_descriptor_;
  metadata.reflection = MsgMagicAction_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgControlCheckPointSetFrequency::kFrequencyFieldNumber;
#endif  // !_MSC_VER

MsgControlCheckPointSetFrequency::MsgControlCheckPointSetFrequency() {
  SharedCtor();
}

void MsgControlCheckPointSetFrequency::InitAsDefaultInstance() {
}

MsgControlCheckPointSetFrequency::MsgControlCheckPointSetFrequency(const MsgControlCheckPointSetFrequency& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgControlCheckPointSetFrequency::SharedCtor() {
  _cached_size_ = 0;
  frequency_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgControlCheckPointSetFrequency::~MsgControlCheckPointSetFrequency() {
  SharedDtor();
}

void MsgControlCheckPointSetFrequency::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgControlCheckPointSetFrequency::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlCheckPointSetFrequency_descriptor_;
}

const MsgControlCheckPointSetFrequency& MsgControlCheckPointSetFrequency::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgControlCheckPointSetFrequency* MsgControlCheckPointSetFrequency::default_instance_ = NULL;

MsgControlCheckPointSetFrequency* MsgControlCheckPointSetFrequency::New() const {
  return new MsgControlCheckPointSetFrequency;
}

void MsgControlCheckPointSetFrequency::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    frequency_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgControlCheckPointSetFrequency::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 frequency = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &frequency_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgControlCheckPointSetFrequency::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgControlCheckPointSetFrequency::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 frequency = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->frequency(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgControlCheckPointSetFrequency::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 frequency = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->frequency(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgControlCheckPointSetFrequency::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 frequency = 1;
    if (has_frequency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->frequency());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgControlCheckPointSetFrequency::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgControlCheckPointSetFrequency* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgControlCheckPointSetFrequency*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgControlCheckPointSetFrequency::MergeFrom(const MsgControlCheckPointSetFrequency& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_frequency(from.frequency());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgControlCheckPointSetFrequency::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgControlCheckPointSetFrequency::CopyFrom(const MsgControlCheckPointSetFrequency& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgControlCheckPointSetFrequency::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgControlCheckPointSetFrequency::Swap(MsgControlCheckPointSetFrequency* other) {
  if (other != this) {
    std::swap(frequency_, other->frequency_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgControlCheckPointSetFrequency::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgControlCheckPointSetFrequency_descriptor_;
  metadata.reflection = MsgControlCheckPointSetFrequency_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgControlCheckPointDeleteRequest::_default_checkpoint_;
#ifndef _MSC_VER
const int MsgControlCheckPointDeleteRequest::kCheckpointFieldNumber;
#endif  // !_MSC_VER

MsgControlCheckPointDeleteRequest::MsgControlCheckPointDeleteRequest() {
  SharedCtor();
}

void MsgControlCheckPointDeleteRequest::InitAsDefaultInstance() {
}

MsgControlCheckPointDeleteRequest::MsgControlCheckPointDeleteRequest(const MsgControlCheckPointDeleteRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgControlCheckPointDeleteRequest::SharedCtor() {
  _cached_size_ = 0;
  checkpoint_ = const_cast< ::std::string*>(&_default_checkpoint_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgControlCheckPointDeleteRequest::~MsgControlCheckPointDeleteRequest() {
  SharedDtor();
}

void MsgControlCheckPointDeleteRequest::SharedDtor() {
  if (checkpoint_ != &_default_checkpoint_) {
    delete checkpoint_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgControlCheckPointDeleteRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlCheckPointDeleteRequest_descriptor_;
}

const MsgControlCheckPointDeleteRequest& MsgControlCheckPointDeleteRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgControlCheckPointDeleteRequest* MsgControlCheckPointDeleteRequest::default_instance_ = NULL;

MsgControlCheckPointDeleteRequest* MsgControlCheckPointDeleteRequest::New() const {
  return new MsgControlCheckPointDeleteRequest;
}

void MsgControlCheckPointDeleteRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (checkpoint_ != &_default_checkpoint_) {
        checkpoint_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgControlCheckPointDeleteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string checkpoint = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_checkpoint()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->checkpoint().data(), this->checkpoint().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgControlCheckPointDeleteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgControlCheckPointDeleteRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required string checkpoint = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->checkpoint().data(), this->checkpoint().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->checkpoint(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgControlCheckPointDeleteRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string checkpoint = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->checkpoint().data(), this->checkpoint().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->checkpoint(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgControlCheckPointDeleteRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string checkpoint = 1;
    if (has_checkpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->checkpoint());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgControlCheckPointDeleteRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgControlCheckPointDeleteRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgControlCheckPointDeleteRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgControlCheckPointDeleteRequest::MergeFrom(const MsgControlCheckPointDeleteRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_checkpoint(from.checkpoint());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgControlCheckPointDeleteRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgControlCheckPointDeleteRequest::CopyFrom(const MsgControlCheckPointDeleteRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgControlCheckPointDeleteRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgControlCheckPointDeleteRequest::Swap(MsgControlCheckPointDeleteRequest* other) {
  if (other != this) {
    std::swap(checkpoint_, other->checkpoint_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgControlCheckPointDeleteRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgControlCheckPointDeleteRequest_descriptor_;
  metadata.reflection = MsgControlCheckPointDeleteRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MsgControlCheckPointListRequest::MsgControlCheckPointListRequest() {
  SharedCtor();
}

void MsgControlCheckPointListRequest::InitAsDefaultInstance() {
}

MsgControlCheckPointListRequest::MsgControlCheckPointListRequest(const MsgControlCheckPointListRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgControlCheckPointListRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgControlCheckPointListRequest::~MsgControlCheckPointListRequest() {
  SharedDtor();
}

void MsgControlCheckPointListRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgControlCheckPointListRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlCheckPointListRequest_descriptor_;
}

const MsgControlCheckPointListRequest& MsgControlCheckPointListRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgControlCheckPointListRequest* MsgControlCheckPointListRequest::default_instance_ = NULL;

MsgControlCheckPointListRequest* MsgControlCheckPointListRequest::New() const {
  return new MsgControlCheckPointListRequest;
}

void MsgControlCheckPointListRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgControlCheckPointListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void MsgControlCheckPointListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgControlCheckPointListRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgControlCheckPointListRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgControlCheckPointListRequest::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgControlCheckPointListRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgControlCheckPointListRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgControlCheckPointListRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgControlCheckPointListRequest::MergeFrom(const MsgControlCheckPointListRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgControlCheckPointListRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgControlCheckPointListRequest::CopyFrom(const MsgControlCheckPointListRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgControlCheckPointListRequest::IsInitialized() const {
  
  return true;
}

void MsgControlCheckPointListRequest::Swap(MsgControlCheckPointListRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgControlCheckPointListRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgControlCheckPointListRequest_descriptor_;
  metadata.reflection = MsgControlCheckPointListRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgControlEnableVisionCones::kVisionConesFieldNumber;
#endif  // !_MSC_VER

MsgControlEnableVisionCones::MsgControlEnableVisionCones() {
  SharedCtor();
}

void MsgControlEnableVisionCones::InitAsDefaultInstance() {
}

MsgControlEnableVisionCones::MsgControlEnableVisionCones(const MsgControlEnableVisionCones& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgControlEnableVisionCones::SharedCtor() {
  _cached_size_ = 0;
  vision_cones_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgControlEnableVisionCones::~MsgControlEnableVisionCones() {
  SharedDtor();
}

void MsgControlEnableVisionCones::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgControlEnableVisionCones::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlEnableVisionCones_descriptor_;
}

const MsgControlEnableVisionCones& MsgControlEnableVisionCones::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgControlEnableVisionCones* MsgControlEnableVisionCones::default_instance_ = NULL;

MsgControlEnableVisionCones* MsgControlEnableVisionCones::New() const {
  return new MsgControlEnableVisionCones;
}

void MsgControlEnableVisionCones::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    vision_cones_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgControlEnableVisionCones::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool vision_cones = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &vision_cones_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgControlEnableVisionCones::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgControlEnableVisionCones::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required bool vision_cones = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->vision_cones(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgControlEnableVisionCones::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool vision_cones = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->vision_cones(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgControlEnableVisionCones::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool vision_cones = 1;
    if (has_vision_cones()) {
      total_size += 1 + 1;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgControlEnableVisionCones::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgControlEnableVisionCones* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgControlEnableVisionCones*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgControlEnableVisionCones::MergeFrom(const MsgControlEnableVisionCones& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_vision_cones(from.vision_cones());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgControlEnableVisionCones::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgControlEnableVisionCones::CopyFrom(const MsgControlEnableVisionCones& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgControlEnableVisionCones::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgControlEnableVisionCones::Swap(MsgControlEnableVisionCones* other) {
  if (other != this) {
    std::swap(vision_cones_, other->vision_cones_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgControlEnableVisionCones::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgControlEnableVisionCones_descriptor_;
  metadata.reflection = MsgControlEnableVisionCones_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgClientToSim_Content::kControlStopFieldNumber;
const int MsgClientToSim_Content::kControlPauseFieldNumber;
const int MsgClientToSim_Content::kControlResumeFieldNumber;
const int MsgClientToSim_Content::kControlChangeTimeFactorFieldNumber;
const int MsgClientToSim_Content::kControlDateTimeChangeFieldNumber;
const int MsgClientToSim_Content::kControlCheckpointSaveNowFieldNumber;
const int MsgClientToSim_Content::kControlCheckpointSetFrequencyFieldNumber;
const int MsgClientToSim_Content::kControlToggleVisionConesFieldNumber;
const int MsgClientToSim_Content::kUnitOrderFieldNumber;
const int MsgClientToSim_Content::kAutomatOrderFieldNumber;
const int MsgClientToSim_Content::kCrowdOrderFieldNumber;
const int MsgClientToSim_Content::kFragOrderFieldNumber;
const int MsgClientToSim_Content::kSetAutomatModeFieldNumber;
const int MsgClientToSim_Content::kUnitCreationRequestFieldNumber;
const int MsgClientToSim_Content::kUnitMagicActionFieldNumber;
const int MsgClientToSim_Content::kObjectMagicActionFieldNumber;
const int MsgClientToSim_Content::kKnowledgeMagicActionFieldNumber;
const int MsgClientToSim_Content::kMagicActionFieldNumber;
#endif  // !_MSC_VER

MsgClientToSim_Content::MsgClientToSim_Content() {
  SharedCtor();
}

void MsgClientToSim_Content::InitAsDefaultInstance() {
  control_stop_ = const_cast< ::Common::MsgControlStop*>(&::Common::MsgControlStop::default_instance());
  control_pause_ = const_cast< ::Common::MsgControlPause*>(&::Common::MsgControlPause::default_instance());
  control_resume_ = const_cast< ::Common::MsgControlResume*>(&::Common::MsgControlResume::default_instance());
  control_change_time_factor_ = const_cast< ::Common::MsgControlChangeTimeFactor*>(&::Common::MsgControlChangeTimeFactor::default_instance());
  control_date_time_change_ = const_cast< ::MsgsClientToSim::MsgControlDatetimeChange*>(&::MsgsClientToSim::MsgControlDatetimeChange::default_instance());
  control_checkpoint_save_now_ = const_cast< ::MsgsClientToSim::MsgControlCheckPointSaveNow*>(&::MsgsClientToSim::MsgControlCheckPointSaveNow::default_instance());
  control_checkpoint_set_frequency_ = const_cast< ::MsgsClientToSim::MsgControlCheckPointSetFrequency*>(&::MsgsClientToSim::MsgControlCheckPointSetFrequency::default_instance());
  control_toggle_vision_cones_ = const_cast< ::MsgsClientToSim::MsgControlEnableVisionCones*>(&::MsgsClientToSim::MsgControlEnableVisionCones::default_instance());
  unit_order_ = const_cast< ::Common::MsgUnitOrder*>(&::Common::MsgUnitOrder::default_instance());
  automat_order_ = const_cast< ::Common::MsgAutomatOrder*>(&::Common::MsgAutomatOrder::default_instance());
  crowd_order_ = const_cast< ::Common::MsgCrowdOrder*>(&::Common::MsgCrowdOrder::default_instance());
  frag_order_ = const_cast< ::MsgsClientToSim::MsgFragOrder*>(&::MsgsClientToSim::MsgFragOrder::default_instance());
  set_automat_mode_ = const_cast< ::MsgsClientToSim::MsgSetAutomatMode*>(&::MsgsClientToSim::MsgSetAutomatMode::default_instance());
  unit_creation_request_ = const_cast< ::MsgsClientToSim::MsgUnitCreationRequest*>(&::MsgsClientToSim::MsgUnitCreationRequest::default_instance());
  unit_magic_action_ = const_cast< ::MsgsClientToSim::MsgUnitMagicAction*>(&::MsgsClientToSim::MsgUnitMagicAction::default_instance());
  object_magic_action_ = const_cast< ::MsgsClientToSim::MsgObjectMagicAction*>(&::MsgsClientToSim::MsgObjectMagicAction::default_instance());
  knowledge_magic_action_ = const_cast< ::MsgsClientToSim::MsgKnowledgeMagicAction*>(&::MsgsClientToSim::MsgKnowledgeMagicAction::default_instance());
  magic_action_ = const_cast< ::MsgsClientToSim::MsgMagicAction*>(&::MsgsClientToSim::MsgMagicAction::default_instance());
}

MsgClientToSim_Content::MsgClientToSim_Content(const MsgClientToSim_Content& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgClientToSim_Content::SharedCtor() {
  _cached_size_ = 0;
  control_stop_ = NULL;
  control_pause_ = NULL;
  control_resume_ = NULL;
  control_change_time_factor_ = NULL;
  control_date_time_change_ = NULL;
  control_checkpoint_save_now_ = NULL;
  control_checkpoint_set_frequency_ = NULL;
  control_toggle_vision_cones_ = NULL;
  unit_order_ = NULL;
  automat_order_ = NULL;
  crowd_order_ = NULL;
  frag_order_ = NULL;
  set_automat_mode_ = NULL;
  unit_creation_request_ = NULL;
  unit_magic_action_ = NULL;
  object_magic_action_ = NULL;
  knowledge_magic_action_ = NULL;
  magic_action_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgClientToSim_Content::~MsgClientToSim_Content() {
  SharedDtor();
}

void MsgClientToSim_Content::SharedDtor() {
  if (this != default_instance_) {
    delete control_stop_;
    delete control_pause_;
    delete control_resume_;
    delete control_change_time_factor_;
    delete control_date_time_change_;
    delete control_checkpoint_save_now_;
    delete control_checkpoint_set_frequency_;
    delete control_toggle_vision_cones_;
    delete unit_order_;
    delete automat_order_;
    delete crowd_order_;
    delete frag_order_;
    delete set_automat_mode_;
    delete unit_creation_request_;
    delete unit_magic_action_;
    delete object_magic_action_;
    delete knowledge_magic_action_;
    delete magic_action_;
  }
}

const ::google::protobuf::Descriptor* MsgClientToSim_Content::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgClientToSim_Content_descriptor_;
}

const MsgClientToSim_Content& MsgClientToSim_Content::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgClientToSim_Content* MsgClientToSim_Content::default_instance_ = NULL;

MsgClientToSim_Content* MsgClientToSim_Content::New() const {
  return new MsgClientToSim_Content;
}

void MsgClientToSim_Content::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (control_stop_ != NULL) control_stop_->::Common::MsgControlStop::Clear();
    }
    if (_has_bit(1)) {
      if (control_pause_ != NULL) control_pause_->::Common::MsgControlPause::Clear();
    }
    if (_has_bit(2)) {
      if (control_resume_ != NULL) control_resume_->::Common::MsgControlResume::Clear();
    }
    if (_has_bit(3)) {
      if (control_change_time_factor_ != NULL) control_change_time_factor_->::Common::MsgControlChangeTimeFactor::Clear();
    }
    if (_has_bit(4)) {
      if (control_date_time_change_ != NULL) control_date_time_change_->::MsgsClientToSim::MsgControlDatetimeChange::Clear();
    }
    if (_has_bit(5)) {
      if (control_checkpoint_save_now_ != NULL) control_checkpoint_save_now_->::MsgsClientToSim::MsgControlCheckPointSaveNow::Clear();
    }
    if (_has_bit(6)) {
      if (control_checkpoint_set_frequency_ != NULL) control_checkpoint_set_frequency_->::MsgsClientToSim::MsgControlCheckPointSetFrequency::Clear();
    }
    if (_has_bit(7)) {
      if (control_toggle_vision_cones_ != NULL) control_toggle_vision_cones_->::MsgsClientToSim::MsgControlEnableVisionCones::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (_has_bit(8)) {
      if (unit_order_ != NULL) unit_order_->::Common::MsgUnitOrder::Clear();
    }
    if (_has_bit(9)) {
      if (automat_order_ != NULL) automat_order_->::Common::MsgAutomatOrder::Clear();
    }
    if (_has_bit(10)) {
      if (crowd_order_ != NULL) crowd_order_->::Common::MsgCrowdOrder::Clear();
    }
    if (_has_bit(11)) {
      if (frag_order_ != NULL) frag_order_->::MsgsClientToSim::MsgFragOrder::Clear();
    }
    if (_has_bit(12)) {
      if (set_automat_mode_ != NULL) set_automat_mode_->::MsgsClientToSim::MsgSetAutomatMode::Clear();
    }
    if (_has_bit(13)) {
      if (unit_creation_request_ != NULL) unit_creation_request_->::MsgsClientToSim::MsgUnitCreationRequest::Clear();
    }
    if (_has_bit(14)) {
      if (unit_magic_action_ != NULL) unit_magic_action_->::MsgsClientToSim::MsgUnitMagicAction::Clear();
    }
    if (_has_bit(15)) {
      if (object_magic_action_ != NULL) object_magic_action_->::MsgsClientToSim::MsgObjectMagicAction::Clear();
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (_has_bit(16)) {
      if (knowledge_magic_action_ != NULL) knowledge_magic_action_->::MsgsClientToSim::MsgKnowledgeMagicAction::Clear();
    }
    if (_has_bit(17)) {
      if (magic_action_ != NULL) magic_action_->::MsgsClientToSim::MsgMagicAction::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgClientToSim_Content::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Common.MsgControlStop control_stop = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_stop()));
        if (input->ExpectTag(18)) goto parse_control_pause;
        break;
      }
      
      // optional .Common.MsgControlPause control_pause = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_control_pause:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_pause()));
        if (input->ExpectTag(26)) goto parse_control_resume;
        break;
      }
      
      // optional .Common.MsgControlResume control_resume = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_control_resume:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_resume()));
        if (input->ExpectTag(34)) goto parse_control_change_time_factor;
        break;
      }
      
      // optional .Common.MsgControlChangeTimeFactor control_change_time_factor = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_control_change_time_factor:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_change_time_factor()));
        if (input->ExpectTag(42)) goto parse_control_date_time_change;
        break;
      }
      
      // optional .MsgsClientToSim.MsgControlDatetimeChange control_date_time_change = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_control_date_time_change:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_date_time_change()));
        if (input->ExpectTag(50)) goto parse_control_checkpoint_save_now;
        break;
      }
      
      // optional .MsgsClientToSim.MsgControlCheckPointSaveNow control_checkpoint_save_now = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_control_checkpoint_save_now:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_checkpoint_save_now()));
        if (input->ExpectTag(58)) goto parse_control_checkpoint_set_frequency;
        break;
      }
      
      // optional .MsgsClientToSim.MsgControlCheckPointSetFrequency control_checkpoint_set_frequency = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_control_checkpoint_set_frequency:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_checkpoint_set_frequency()));
        if (input->ExpectTag(66)) goto parse_control_toggle_vision_cones;
        break;
      }
      
      // optional .MsgsClientToSim.MsgControlEnableVisionCones control_toggle_vision_cones = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_control_toggle_vision_cones:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_toggle_vision_cones()));
        if (input->ExpectTag(74)) goto parse_unit_order;
        break;
      }
      
      // optional .Common.MsgUnitOrder unit_order = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_unit_order:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_unit_order()));
        if (input->ExpectTag(82)) goto parse_automat_order;
        break;
      }
      
      // optional .Common.MsgAutomatOrder automat_order = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_automat_order:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_automat_order()));
        if (input->ExpectTag(90)) goto parse_crowd_order;
        break;
      }
      
      // optional .Common.MsgCrowdOrder crowd_order = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_crowd_order:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_crowd_order()));
        if (input->ExpectTag(98)) goto parse_frag_order;
        break;
      }
      
      // optional .MsgsClientToSim.MsgFragOrder frag_order = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_frag_order:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_frag_order()));
        if (input->ExpectTag(106)) goto parse_set_automat_mode;
        break;
      }
      
      // optional .MsgsClientToSim.MsgSetAutomatMode set_automat_mode = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_set_automat_mode:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_set_automat_mode()));
        if (input->ExpectTag(114)) goto parse_unit_creation_request;
        break;
      }
      
      // optional .MsgsClientToSim.MsgUnitCreationRequest unit_creation_request = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_unit_creation_request:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_unit_creation_request()));
        if (input->ExpectTag(122)) goto parse_unit_magic_action;
        break;
      }
      
      // optional .MsgsClientToSim.MsgUnitMagicAction unit_magic_action = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_unit_magic_action:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_unit_magic_action()));
        if (input->ExpectTag(130)) goto parse_object_magic_action;
        break;
      }
      
      // optional .MsgsClientToSim.MsgObjectMagicAction object_magic_action = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_object_magic_action:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_object_magic_action()));
        if (input->ExpectTag(138)) goto parse_knowledge_magic_action;
        break;
      }
      
      // optional .MsgsClientToSim.MsgKnowledgeMagicAction knowledge_magic_action = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_knowledge_magic_action:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_knowledge_magic_action()));
        if (input->ExpectTag(146)) goto parse_magic_action;
        break;
      }
      
      // optional .MsgsClientToSim.MsgMagicAction magic_action = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_magic_action:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_magic_action()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgClientToSim_Content::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgClientToSim_Content::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .Common.MsgControlStop control_stop = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->control_stop(), output);
  }
  
  // optional .Common.MsgControlPause control_pause = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->control_pause(), output);
  }
  
  // optional .Common.MsgControlResume control_resume = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->control_resume(), output);
  }
  
  // optional .Common.MsgControlChangeTimeFactor control_change_time_factor = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      4, this->control_change_time_factor(), output);
  }
  
  // optional .MsgsClientToSim.MsgControlDatetimeChange control_date_time_change = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      5, this->control_date_time_change(), output);
  }
  
  // optional .MsgsClientToSim.MsgControlCheckPointSaveNow control_checkpoint_save_now = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      6, this->control_checkpoint_save_now(), output);
  }
  
  // optional .MsgsClientToSim.MsgControlCheckPointSetFrequency control_checkpoint_set_frequency = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      7, this->control_checkpoint_set_frequency(), output);
  }
  
  // optional .MsgsClientToSim.MsgControlEnableVisionCones control_toggle_vision_cones = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      8, this->control_toggle_vision_cones(), output);
  }
  
  // optional .Common.MsgUnitOrder unit_order = 9;
  if (_has_bit(8)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      9, this->unit_order(), output);
  }
  
  // optional .Common.MsgAutomatOrder automat_order = 10;
  if (_has_bit(9)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      10, this->automat_order(), output);
  }
  
  // optional .Common.MsgCrowdOrder crowd_order = 11;
  if (_has_bit(10)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      11, this->crowd_order(), output);
  }
  
  // optional .MsgsClientToSim.MsgFragOrder frag_order = 12;
  if (_has_bit(11)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      12, this->frag_order(), output);
  }
  
  // optional .MsgsClientToSim.MsgSetAutomatMode set_automat_mode = 13;
  if (_has_bit(12)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      13, this->set_automat_mode(), output);
  }
  
  // optional .MsgsClientToSim.MsgUnitCreationRequest unit_creation_request = 14;
  if (_has_bit(13)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      14, this->unit_creation_request(), output);
  }
  
  // optional .MsgsClientToSim.MsgUnitMagicAction unit_magic_action = 15;
  if (_has_bit(14)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      15, this->unit_magic_action(), output);
  }
  
  // optional .MsgsClientToSim.MsgObjectMagicAction object_magic_action = 16;
  if (_has_bit(15)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      16, this->object_magic_action(), output);
  }
  
  // optional .MsgsClientToSim.MsgKnowledgeMagicAction knowledge_magic_action = 17;
  if (_has_bit(16)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      17, this->knowledge_magic_action(), output);
  }
  
  // optional .MsgsClientToSim.MsgMagicAction magic_action = 18;
  if (_has_bit(17)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      18, this->magic_action(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgClientToSim_Content::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .Common.MsgControlStop control_stop = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->control_stop(), target);
  }
  
  // optional .Common.MsgControlPause control_pause = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->control_pause(), target);
  }
  
  // optional .Common.MsgControlResume control_resume = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->control_resume(), target);
  }
  
  // optional .Common.MsgControlChangeTimeFactor control_change_time_factor = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->control_change_time_factor(), target);
  }
  
  // optional .MsgsClientToSim.MsgControlDatetimeChange control_date_time_change = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->control_date_time_change(), target);
  }
  
  // optional .MsgsClientToSim.MsgControlCheckPointSaveNow control_checkpoint_save_now = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->control_checkpoint_save_now(), target);
  }
  
  // optional .MsgsClientToSim.MsgControlCheckPointSetFrequency control_checkpoint_set_frequency = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->control_checkpoint_set_frequency(), target);
  }
  
  // optional .MsgsClientToSim.MsgControlEnableVisionCones control_toggle_vision_cones = 8;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->control_toggle_vision_cones(), target);
  }
  
  // optional .Common.MsgUnitOrder unit_order = 9;
  if (_has_bit(8)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->unit_order(), target);
  }
  
  // optional .Common.MsgAutomatOrder automat_order = 10;
  if (_has_bit(9)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->automat_order(), target);
  }
  
  // optional .Common.MsgCrowdOrder crowd_order = 11;
  if (_has_bit(10)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->crowd_order(), target);
  }
  
  // optional .MsgsClientToSim.MsgFragOrder frag_order = 12;
  if (_has_bit(11)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->frag_order(), target);
  }
  
  // optional .MsgsClientToSim.MsgSetAutomatMode set_automat_mode = 13;
  if (_has_bit(12)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->set_automat_mode(), target);
  }
  
  // optional .MsgsClientToSim.MsgUnitCreationRequest unit_creation_request = 14;
  if (_has_bit(13)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->unit_creation_request(), target);
  }
  
  // optional .MsgsClientToSim.MsgUnitMagicAction unit_magic_action = 15;
  if (_has_bit(14)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->unit_magic_action(), target);
  }
  
  // optional .MsgsClientToSim.MsgObjectMagicAction object_magic_action = 16;
  if (_has_bit(15)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->object_magic_action(), target);
  }
  
  // optional .MsgsClientToSim.MsgKnowledgeMagicAction knowledge_magic_action = 17;
  if (_has_bit(16)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->knowledge_magic_action(), target);
  }
  
  // optional .MsgsClientToSim.MsgMagicAction magic_action = 18;
  if (_has_bit(17)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->magic_action(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgClientToSim_Content::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Common.MsgControlStop control_stop = 1;
    if (has_control_stop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_stop());
    }
    
    // optional .Common.MsgControlPause control_pause = 2;
    if (has_control_pause()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_pause());
    }
    
    // optional .Common.MsgControlResume control_resume = 3;
    if (has_control_resume()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_resume());
    }
    
    // optional .Common.MsgControlChangeTimeFactor control_change_time_factor = 4;
    if (has_control_change_time_factor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_change_time_factor());
    }
    
    // optional .MsgsClientToSim.MsgControlDatetimeChange control_date_time_change = 5;
    if (has_control_date_time_change()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_date_time_change());
    }
    
    // optional .MsgsClientToSim.MsgControlCheckPointSaveNow control_checkpoint_save_now = 6;
    if (has_control_checkpoint_save_now()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_checkpoint_save_now());
    }
    
    // optional .MsgsClientToSim.MsgControlCheckPointSetFrequency control_checkpoint_set_frequency = 7;
    if (has_control_checkpoint_set_frequency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_checkpoint_set_frequency());
    }
    
    // optional .MsgsClientToSim.MsgControlEnableVisionCones control_toggle_vision_cones = 8;
    if (has_control_toggle_vision_cones()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_toggle_vision_cones());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .Common.MsgUnitOrder unit_order = 9;
    if (has_unit_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->unit_order());
    }
    
    // optional .Common.MsgAutomatOrder automat_order = 10;
    if (has_automat_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->automat_order());
    }
    
    // optional .Common.MsgCrowdOrder crowd_order = 11;
    if (has_crowd_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->crowd_order());
    }
    
    // optional .MsgsClientToSim.MsgFragOrder frag_order = 12;
    if (has_frag_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->frag_order());
    }
    
    // optional .MsgsClientToSim.MsgSetAutomatMode set_automat_mode = 13;
    if (has_set_automat_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->set_automat_mode());
    }
    
    // optional .MsgsClientToSim.MsgUnitCreationRequest unit_creation_request = 14;
    if (has_unit_creation_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->unit_creation_request());
    }
    
    // optional .MsgsClientToSim.MsgUnitMagicAction unit_magic_action = 15;
    if (has_unit_magic_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->unit_magic_action());
    }
    
    // optional .MsgsClientToSim.MsgObjectMagicAction object_magic_action = 16;
    if (has_object_magic_action()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->object_magic_action());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional .MsgsClientToSim.MsgKnowledgeMagicAction knowledge_magic_action = 17;
    if (has_knowledge_magic_action()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->knowledge_magic_action());
    }
    
    // optional .MsgsClientToSim.MsgMagicAction magic_action = 18;
    if (has_magic_action()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->magic_action());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgClientToSim_Content::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgClientToSim_Content* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgClientToSim_Content*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgClientToSim_Content::MergeFrom(const MsgClientToSim_Content& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_control_stop()->::Common::MsgControlStop::MergeFrom(from.control_stop());
    }
    if (from._has_bit(1)) {
      mutable_control_pause()->::Common::MsgControlPause::MergeFrom(from.control_pause());
    }
    if (from._has_bit(2)) {
      mutable_control_resume()->::Common::MsgControlResume::MergeFrom(from.control_resume());
    }
    if (from._has_bit(3)) {
      mutable_control_change_time_factor()->::Common::MsgControlChangeTimeFactor::MergeFrom(from.control_change_time_factor());
    }
    if (from._has_bit(4)) {
      mutable_control_date_time_change()->::MsgsClientToSim::MsgControlDatetimeChange::MergeFrom(from.control_date_time_change());
    }
    if (from._has_bit(5)) {
      mutable_control_checkpoint_save_now()->::MsgsClientToSim::MsgControlCheckPointSaveNow::MergeFrom(from.control_checkpoint_save_now());
    }
    if (from._has_bit(6)) {
      mutable_control_checkpoint_set_frequency()->::MsgsClientToSim::MsgControlCheckPointSetFrequency::MergeFrom(from.control_checkpoint_set_frequency());
    }
    if (from._has_bit(7)) {
      mutable_control_toggle_vision_cones()->::MsgsClientToSim::MsgControlEnableVisionCones::MergeFrom(from.control_toggle_vision_cones());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from._has_bit(8)) {
      mutable_unit_order()->::Common::MsgUnitOrder::MergeFrom(from.unit_order());
    }
    if (from._has_bit(9)) {
      mutable_automat_order()->::Common::MsgAutomatOrder::MergeFrom(from.automat_order());
    }
    if (from._has_bit(10)) {
      mutable_crowd_order()->::Common::MsgCrowdOrder::MergeFrom(from.crowd_order());
    }
    if (from._has_bit(11)) {
      mutable_frag_order()->::MsgsClientToSim::MsgFragOrder::MergeFrom(from.frag_order());
    }
    if (from._has_bit(12)) {
      mutable_set_automat_mode()->::MsgsClientToSim::MsgSetAutomatMode::MergeFrom(from.set_automat_mode());
    }
    if (from._has_bit(13)) {
      mutable_unit_creation_request()->::MsgsClientToSim::MsgUnitCreationRequest::MergeFrom(from.unit_creation_request());
    }
    if (from._has_bit(14)) {
      mutable_unit_magic_action()->::MsgsClientToSim::MsgUnitMagicAction::MergeFrom(from.unit_magic_action());
    }
    if (from._has_bit(15)) {
      mutable_object_magic_action()->::MsgsClientToSim::MsgObjectMagicAction::MergeFrom(from.object_magic_action());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from._has_bit(16)) {
      mutable_knowledge_magic_action()->::MsgsClientToSim::MsgKnowledgeMagicAction::MergeFrom(from.knowledge_magic_action());
    }
    if (from._has_bit(17)) {
      mutable_magic_action()->::MsgsClientToSim::MsgMagicAction::MergeFrom(from.magic_action());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgClientToSim_Content::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgClientToSim_Content::CopyFrom(const MsgClientToSim_Content& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgClientToSim_Content::IsInitialized() const {
  
  if (has_control_change_time_factor()) {
    if (!this->control_change_time_factor().IsInitialized()) return false;
  }
  if (has_control_date_time_change()) {
    if (!this->control_date_time_change().IsInitialized()) return false;
  }
  if (has_control_checkpoint_set_frequency()) {
    if (!this->control_checkpoint_set_frequency().IsInitialized()) return false;
  }
  if (has_control_toggle_vision_cones()) {
    if (!this->control_toggle_vision_cones().IsInitialized()) return false;
  }
  if (has_unit_order()) {
    if (!this->unit_order().IsInitialized()) return false;
  }
  if (has_automat_order()) {
    if (!this->automat_order().IsInitialized()) return false;
  }
  if (has_crowd_order()) {
    if (!this->crowd_order().IsInitialized()) return false;
  }
  if (has_frag_order()) {
    if (!this->frag_order().IsInitialized()) return false;
  }
  if (has_set_automat_mode()) {
    if (!this->set_automat_mode().IsInitialized()) return false;
  }
  if (has_unit_creation_request()) {
    if (!this->unit_creation_request().IsInitialized()) return false;
  }
  if (has_unit_magic_action()) {
    if (!this->unit_magic_action().IsInitialized()) return false;
  }
  if (has_object_magic_action()) {
    if (!this->object_magic_action().IsInitialized()) return false;
  }
  if (has_knowledge_magic_action()) {
    if (!this->knowledge_magic_action().IsInitialized()) return false;
  }
  if (has_magic_action()) {
    if (!this->magic_action().IsInitialized()) return false;
  }
  return true;
}

void MsgClientToSim_Content::Swap(MsgClientToSim_Content* other) {
  if (other != this) {
    std::swap(control_stop_, other->control_stop_);
    std::swap(control_pause_, other->control_pause_);
    std::swap(control_resume_, other->control_resume_);
    std::swap(control_change_time_factor_, other->control_change_time_factor_);
    std::swap(control_date_time_change_, other->control_date_time_change_);
    std::swap(control_checkpoint_save_now_, other->control_checkpoint_save_now_);
    std::swap(control_checkpoint_set_frequency_, other->control_checkpoint_set_frequency_);
    std::swap(control_toggle_vision_cones_, other->control_toggle_vision_cones_);
    std::swap(unit_order_, other->unit_order_);
    std::swap(automat_order_, other->automat_order_);
    std::swap(crowd_order_, other->crowd_order_);
    std::swap(frag_order_, other->frag_order_);
    std::swap(set_automat_mode_, other->set_automat_mode_);
    std::swap(unit_creation_request_, other->unit_creation_request_);
    std::swap(unit_magic_action_, other->unit_magic_action_);
    std::swap(object_magic_action_, other->object_magic_action_);
    std::swap(knowledge_magic_action_, other->knowledge_magic_action_);
    std::swap(magic_action_, other->magic_action_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgClientToSim_Content::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgClientToSim_Content_descriptor_;
  metadata.reflection = MsgClientToSim_Content_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MsgClientToSim::kContextFieldNumber;
const int MsgClientToSim::kMessageFieldNumber;
#endif  // !_MSC_VER

MsgClientToSim::MsgClientToSim() {
  SharedCtor();
}

void MsgClientToSim::InitAsDefaultInstance() {
  message_ = const_cast< ::MsgsClientToSim::MsgClientToSim_Content*>(&::MsgsClientToSim::MsgClientToSim_Content::default_instance());
}

MsgClientToSim::MsgClientToSim(const MsgClientToSim& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgClientToSim::SharedCtor() {
  _cached_size_ = 0;
  context_ = 0;
  message_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgClientToSim::~MsgClientToSim() {
  SharedDtor();
}

void MsgClientToSim::SharedDtor() {
  if (this != default_instance_) {
    delete message_;
  }
}

const ::google::protobuf::Descriptor* MsgClientToSim::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgClientToSim_descriptor_;
}

const MsgClientToSim& MsgClientToSim::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgClientToSim* MsgClientToSim::default_instance_ = NULL;

MsgClientToSim* MsgClientToSim::New() const {
  return new MsgClientToSim;
}

void MsgClientToSim::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    context_ = 0;
    if (_has_bit(1)) {
      if (message_ != NULL) message_->::MsgsClientToSim::MsgClientToSim_Content::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgClientToSim::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 context = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &context_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }
      
      // required .MsgsClientToSim.MsgClientToSim.Content message = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_message:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_message()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgClientToSim::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgClientToSim::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 context = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->context(), output);
  }
  
  // required .MsgsClientToSim.MsgClientToSim.Content message = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->message(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgClientToSim::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 context = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->context(), target);
  }
  
  // required .MsgsClientToSim.MsgClientToSim.Content message = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->message(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgClientToSim::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 context = 1;
    if (has_context()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->context());
    }
    
    // required .MsgsClientToSim.MsgClientToSim.Content message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->message());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgClientToSim::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgClientToSim* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgClientToSim*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgClientToSim::MergeFrom(const MsgClientToSim& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_context(from.context());
    }
    if (from._has_bit(1)) {
      mutable_message()->::MsgsClientToSim::MsgClientToSim_Content::MergeFrom(from.message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgClientToSim::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgClientToSim::CopyFrom(const MsgClientToSim& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgClientToSim::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  
  if (has_message()) {
    if (!this->message().IsInitialized()) return false;
  }
  return true;
}

void MsgClientToSim::Swap(MsgClientToSim* other) {
  if (other != this) {
    std::swap(context_, other->context_);
    std::swap(message_, other->message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgClientToSim::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgClientToSim_descriptor_;
  metadata.reflection = MsgClientToSim_reflection_;
  return metadata;
}


}  // namespace MsgsClientToSim
