// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ClientToSim.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>

namespace MsgsClientToSim {

namespace {

const ::google::protobuf::Descriptor* MsgControlDatetimeChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgControlDatetimeChange_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgControlMeteo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgControlMeteo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgControlCheckPointSaveNow_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgControlCheckPointSaveNow_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgFragOrder_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgFragOrder_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSetAutomatMode_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSetAutomatMode_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgUnitCreationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgUnitCreationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgUnitMagicAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgUnitMagicAction_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgUnitMagicAction_Type_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgKnowledgeMagicAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgKnowledgeMagicAction_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgKnowledgeMagicAction_Type_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgMagicActionCreateObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMagicActionCreateObject_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMagicActionUpdateObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMagicActionUpdateObject_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgObjectMagicAction_action_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgObjectMagicAction_action_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgObjectMagicAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgObjectMagicAction_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLogSupplyPushFlow_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLogSupplyPushFlow_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLogSupplyChangeQuotas_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLogSupplyChangeQuotas_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgControlCheckPointSetFrequency_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgControlCheckPointSetFrequency_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgControlToggleVisionCones_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgControlToggleVisionCones_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgKnowledgeGroupCreationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgKnowledgeGroupCreationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgKnowledgeGroupUpdateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgKnowledgeGroupUpdateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgClientToSim_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgClientToSim_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgClientToSim_Content_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgClientToSim_Content_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ClientToSim_2eproto() {
  protobuf_AddDesc_ClientToSim_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ClientToSim.proto");
  GOOGLE_CHECK(file != NULL);
  MsgControlDatetimeChange_descriptor_ = file->message_type(0);
  static const int MsgControlDatetimeChange_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlDatetimeChange, date_time_),
  };
  MsgControlDatetimeChange_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgControlDatetimeChange_descriptor_,
      MsgControlDatetimeChange::default_instance_,
      MsgControlDatetimeChange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlDatetimeChange, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlDatetimeChange, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgControlDatetimeChange));
  MsgControlMeteo_descriptor_ = file->message_type(1);
  static const int MsgControlMeteo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlMeteo, parametres_),
  };
  MsgControlMeteo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgControlMeteo_descriptor_,
      MsgControlMeteo::default_instance_,
      MsgControlMeteo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlMeteo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlMeteo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgControlMeteo));
  MsgControlCheckPointSaveNow_descriptor_ = file->message_type(2);
  static const int MsgControlCheckPointSaveNow_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlCheckPointSaveNow, name_),
  };
  MsgControlCheckPointSaveNow_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgControlCheckPointSaveNow_descriptor_,
      MsgControlCheckPointSaveNow::default_instance_,
      MsgControlCheckPointSaveNow_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlCheckPointSaveNow, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlCheckPointSaveNow, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgControlCheckPointSaveNow));
  MsgFragOrder_descriptor_ = file->message_type(3);
  static const int MsgFragOrder_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFragOrder, oid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFragOrder, frag_order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFragOrder, parametres_),
  };
  MsgFragOrder_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgFragOrder_descriptor_,
      MsgFragOrder::default_instance_,
      MsgFragOrder_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFragOrder, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFragOrder, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgFragOrder));
  MsgSetAutomatMode_descriptor_ = file->message_type(4);
  static const int MsgSetAutomatMode_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetAutomatMode, oid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetAutomatMode, mode_),
  };
  MsgSetAutomatMode_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSetAutomatMode_descriptor_,
      MsgSetAutomatMode::default_instance_,
      MsgSetAutomatMode_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetAutomatMode, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetAutomatMode, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSetAutomatMode));
  MsgUnitCreationRequest_descriptor_ = file->message_type(5);
  static const int MsgUnitCreationRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitCreationRequest, type_pion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitCreationRequest, oid_automate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitCreationRequest, position_),
  };
  MsgUnitCreationRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgUnitCreationRequest_descriptor_,
      MsgUnitCreationRequest::default_instance_,
      MsgUnitCreationRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitCreationRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitCreationRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgUnitCreationRequest));
  MsgUnitMagicAction_descriptor_ = file->message_type(6);
  static const int MsgUnitMagicAction_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitMagicAction, oid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitMagicAction, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitMagicAction, parametres_),
  };
  MsgUnitMagicAction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgUnitMagicAction_descriptor_,
      MsgUnitMagicAction::default_instance_,
      MsgUnitMagicAction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitMagicAction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitMagicAction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgUnitMagicAction));
  MsgUnitMagicAction_Type_descriptor_ = MsgUnitMagicAction_descriptor_->enum_type(0);
  MsgKnowledgeMagicAction_descriptor_ = file->message_type(7);
  static const int MsgKnowledgeMagicAction_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeMagicAction, oid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeMagicAction, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeMagicAction, parametres_),
  };
  MsgKnowledgeMagicAction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgKnowledgeMagicAction_descriptor_,
      MsgKnowledgeMagicAction::default_instance_,
      MsgKnowledgeMagicAction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeMagicAction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeMagicAction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgKnowledgeMagicAction));
  MsgKnowledgeMagicAction_Type_descriptor_ = MsgKnowledgeMagicAction_descriptor_->enum_type(0);
  MsgMagicActionCreateObject_descriptor_ = file->message_type(8);
  static const int MsgMagicActionCreateObject_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionCreateObject, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionCreateObject, location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionCreateObject, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionCreateObject, team_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionCreateObject, attributes_),
  };
  MsgMagicActionCreateObject_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMagicActionCreateObject_descriptor_,
      MsgMagicActionCreateObject::default_instance_,
      MsgMagicActionCreateObject_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionCreateObject, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionCreateObject, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMagicActionCreateObject));
  MsgMagicActionUpdateObject_descriptor_ = file->message_type(9);
  static const int MsgMagicActionUpdateObject_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionUpdateObject, oid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionUpdateObject, attributes_),
  };
  MsgMagicActionUpdateObject_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMagicActionUpdateObject_descriptor_,
      MsgMagicActionUpdateObject::default_instance_,
      MsgMagicActionUpdateObject_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionUpdateObject, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicActionUpdateObject, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMagicActionUpdateObject));
  MsgObjectMagicAction_action_descriptor_ = file->message_type(10);
  static const int MsgObjectMagicAction_action_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectMagicAction_action, create_object_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectMagicAction_action, update_object_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectMagicAction_action, destroy_object_),
  };
  MsgObjectMagicAction_action_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgObjectMagicAction_action_descriptor_,
      MsgObjectMagicAction_action::default_instance_,
      MsgObjectMagicAction_action_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectMagicAction_action, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectMagicAction_action, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgObjectMagicAction_action));
  MsgObjectMagicAction_descriptor_ = file->message_type(11);
  static const int MsgObjectMagicAction_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectMagicAction, action_),
  };
  MsgObjectMagicAction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgObjectMagicAction_descriptor_,
      MsgObjectMagicAction::default_instance_,
      MsgObjectMagicAction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectMagicAction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectMagicAction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgObjectMagicAction));
  MsgLogSupplyPushFlow_descriptor_ = file->message_type(12);
  static const int MsgLogSupplyPushFlow_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogSupplyPushFlow, oid_donneur_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogSupplyPushFlow, oid_receveur_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogSupplyPushFlow, stocks_),
  };
  MsgLogSupplyPushFlow_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLogSupplyPushFlow_descriptor_,
      MsgLogSupplyPushFlow::default_instance_,
      MsgLogSupplyPushFlow_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogSupplyPushFlow, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogSupplyPushFlow, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLogSupplyPushFlow));
  MsgLogSupplyChangeQuotas_descriptor_ = file->message_type(13);
  static const int MsgLogSupplyChangeQuotas_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogSupplyChangeQuotas, oid_donneur_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogSupplyChangeQuotas, oid_receveur_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogSupplyChangeQuotas, quotas_),
  };
  MsgLogSupplyChangeQuotas_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLogSupplyChangeQuotas_descriptor_,
      MsgLogSupplyChangeQuotas::default_instance_,
      MsgLogSupplyChangeQuotas_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogSupplyChangeQuotas, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogSupplyChangeQuotas, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLogSupplyChangeQuotas));
  MsgControlCheckPointSetFrequency_descriptor_ = file->message_type(14);
  static const int MsgControlCheckPointSetFrequency_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlCheckPointSetFrequency, frequency_),
  };
  MsgControlCheckPointSetFrequency_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgControlCheckPointSetFrequency_descriptor_,
      MsgControlCheckPointSetFrequency::default_instance_,
      MsgControlCheckPointSetFrequency_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlCheckPointSetFrequency, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlCheckPointSetFrequency, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgControlCheckPointSetFrequency));
  MsgControlToggleVisionCones_descriptor_ = file->message_type(15);
  static const int MsgControlToggleVisionCones_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlToggleVisionCones, vision_cones_),
  };
  MsgControlToggleVisionCones_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgControlToggleVisionCones_descriptor_,
      MsgControlToggleVisionCones::default_instance_,
      MsgControlToggleVisionCones_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlToggleVisionCones, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlToggleVisionCones, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgControlToggleVisionCones));
  MsgKnowledgeGroupCreationRequest_descriptor_ = file->message_type(16);
  static const int MsgKnowledgeGroupCreationRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeGroupCreationRequest, oid_camp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeGroupCreationRequest, oid_parent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeGroupCreationRequest, type_),
  };
  MsgKnowledgeGroupCreationRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgKnowledgeGroupCreationRequest_descriptor_,
      MsgKnowledgeGroupCreationRequest::default_instance_,
      MsgKnowledgeGroupCreationRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeGroupCreationRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeGroupCreationRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgKnowledgeGroupCreationRequest));
  MsgKnowledgeGroupUpdateRequest_descriptor_ = file->message_type(17);
  static const int MsgKnowledgeGroupUpdateRequest_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeGroupUpdateRequest, oid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeGroupUpdateRequest, oid_camp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeGroupUpdateRequest, oid_parent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeGroupUpdateRequest, enabled_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeGroupUpdateRequest, type_),
  };
  MsgKnowledgeGroupUpdateRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgKnowledgeGroupUpdateRequest_descriptor_,
      MsgKnowledgeGroupUpdateRequest::default_instance_,
      MsgKnowledgeGroupUpdateRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeGroupUpdateRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgKnowledgeGroupUpdateRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgKnowledgeGroupUpdateRequest));
  MsgClientToSim_descriptor_ = file->message_type(18);
  static const int MsgClientToSim_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim, context_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim, message_),
  };
  MsgClientToSim_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgClientToSim_descriptor_,
      MsgClientToSim::default_instance_,
      MsgClientToSim_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgClientToSim));
  MsgClientToSim_Content_descriptor_ = MsgClientToSim_descriptor_->nested_type(0);
  static const int MsgClientToSim_Content_offsets_[20] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, control_stop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, control_pause_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, control_resume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, control_change_time_factor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, control_date_time_change_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, control_meteo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, control_checkpoint_save_now_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, control_checkpoint_set_frequency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, control_toggle_vision_cones_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, unit_order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, automat_order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, population_order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, frag_order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, set_automat_mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, unit_creation_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, unit_magic_action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, object_magic_action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, change_diplomacy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, knowledge_magic_action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, knowledge_group_creation_request_),
  };
  MsgClientToSim_Content_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgClientToSim_Content_descriptor_,
      MsgClientToSim_Content::default_instance_,
      MsgClientToSim_Content_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgClientToSim_Content, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgClientToSim_Content));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ClientToSim_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgControlDatetimeChange_descriptor_, &MsgControlDatetimeChange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgControlMeteo_descriptor_, &MsgControlMeteo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgControlCheckPointSaveNow_descriptor_, &MsgControlCheckPointSaveNow::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgFragOrder_descriptor_, &MsgFragOrder::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSetAutomatMode_descriptor_, &MsgSetAutomatMode::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgUnitCreationRequest_descriptor_, &MsgUnitCreationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgUnitMagicAction_descriptor_, &MsgUnitMagicAction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgKnowledgeMagicAction_descriptor_, &MsgKnowledgeMagicAction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMagicActionCreateObject_descriptor_, &MsgMagicActionCreateObject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMagicActionUpdateObject_descriptor_, &MsgMagicActionUpdateObject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgObjectMagicAction_action_descriptor_, &MsgObjectMagicAction_action::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgObjectMagicAction_descriptor_, &MsgObjectMagicAction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLogSupplyPushFlow_descriptor_, &MsgLogSupplyPushFlow::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLogSupplyChangeQuotas_descriptor_, &MsgLogSupplyChangeQuotas::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgControlCheckPointSetFrequency_descriptor_, &MsgControlCheckPointSetFrequency::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgControlToggleVisionCones_descriptor_, &MsgControlToggleVisionCones::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgKnowledgeGroupCreationRequest_descriptor_, &MsgKnowledgeGroupCreationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgKnowledgeGroupUpdateRequest_descriptor_, &MsgKnowledgeGroupUpdateRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgClientToSim_descriptor_, &MsgClientToSim::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgClientToSim_Content_descriptor_, &MsgClientToSim_Content::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ClientToSim_2eproto() {
  delete MsgControlDatetimeChange::default_instance_;
  delete MsgControlDatetimeChange_reflection_;
  delete MsgControlMeteo::default_instance_;
  delete MsgControlMeteo_reflection_;
  delete MsgControlCheckPointSaveNow::default_instance_;
  delete MsgControlCheckPointSaveNow_reflection_;
  delete MsgFragOrder::default_instance_;
  delete MsgFragOrder_reflection_;
  delete MsgSetAutomatMode::default_instance_;
  delete MsgSetAutomatMode_reflection_;
  delete MsgUnitCreationRequest::default_instance_;
  delete MsgUnitCreationRequest_reflection_;
  delete MsgUnitMagicAction::default_instance_;
  delete MsgUnitMagicAction_reflection_;
  delete MsgKnowledgeMagicAction::default_instance_;
  delete MsgKnowledgeMagicAction_reflection_;
  delete MsgMagicActionCreateObject::default_instance_;
  delete MsgMagicActionCreateObject_reflection_;
  delete MsgMagicActionUpdateObject::default_instance_;
  delete MsgMagicActionUpdateObject_reflection_;
  delete MsgObjectMagicAction_action::default_instance_;
  delete MsgObjectMagicAction_action_reflection_;
  delete MsgObjectMagicAction::default_instance_;
  delete MsgObjectMagicAction_reflection_;
  delete MsgLogSupplyPushFlow::default_instance_;
  delete MsgLogSupplyPushFlow_reflection_;
  delete MsgLogSupplyChangeQuotas::default_instance_;
  delete MsgLogSupplyChangeQuotas_reflection_;
  delete MsgControlCheckPointSetFrequency::default_instance_;
  delete MsgControlCheckPointSetFrequency_reflection_;
  delete MsgControlToggleVisionCones::default_instance_;
  delete MsgControlToggleVisionCones_reflection_;
  delete MsgKnowledgeGroupCreationRequest::default_instance_;
  delete MsgKnowledgeGroupCreationRequest_reflection_;
  delete MsgKnowledgeGroupUpdateRequest::default_instance_;
  delete MsgKnowledgeGroupUpdateRequest_reflection_;
  delete MsgClientToSim::default_instance_;
  delete MsgClientToSim_reflection_;
  delete MsgClientToSim_Content::default_instance_;
  delete MsgClientToSim_Content_reflection_;
}

void protobuf_AddDesc_ClientToSim_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Common::protobuf_AddDesc_Common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021ClientToSim.proto\022\017MsgsClientToSim\032\014Co"
    "mmon.proto\"B\n\030MsgControlDatetimeChange\022&"
    "\n\tdate_time\030\001 \002(\0132\023.Common.MsgDateTime\"C"
    "\n\017MsgControlMeteo\0220\n\nparametres\030\001 \002(\0132\034."
    "Common.MsgMissionParameters\"+\n\033MsgContro"
    "lCheckPointSaveNow\022\014\n\004name\030\001 \001(\t\"a\n\014MsgF"
    "ragOrder\022\013\n\003oid\030\001 \002(\r\022\022\n\nfrag_order\030\002 \002("
    "\r\0220\n\nparametres\030\003 \001(\0132\034.Common.MsgMissio"
    "nParameters\"G\n\021MsgSetAutomatMode\022\013\n\003oid\030"
    "\001 \002(\005\022%\n\004mode\030\002 \002(\0162\027.Common.EnumAutomat"
    "Mode\"l\n\026MsgUnitCreationRequest\022\021\n\ttype_p"
    "ion\030\001 \002(\r\022\024\n\014oid_automate\030\002 \002(\r\022)\n\010posit"
    "ion\030\003 \002(\0132\027.Common.MsgCoordLatLong\"\213\006\n\022M"
    "sgUnitMagicAction\022\013\n\003oid\030\001 \002(\r\0226\n\004type\030\002"
    " \002(\0162(.MsgsClientToSim.MsgUnitMagicActio"
    "n.Type\0220\n\nparametres\030\003 \002(\0132\034.Common.MsgM"
    "issionParameters\"\375\004\n\004Type\022\013\n\007move_to\020\000\022\020"
    "\n\014surrender_to\020\001\022\024\n\020cancel_surrender\020\002\022\030"
    "\n\024recover_transporters\020\003\022\025\n\021destroy_comp"
    "onent\020\004\022\017\n\013recover_all\020\005\022\022\n\016recover_troo"
    "ps\020\006\022\026\n\022recover_equipments\020\007\022\025\n\021recover_"
    "resources\020\010\022\017\n\013destroy_all\020\t\022\030\n\024change_h"
    "uman_factors\020\n\022\024\n\020partial_recovery\020\013\022\021\n\r"
    "unit_creation\020\014\022\025\n\021create_fire_order\020\r\022 "
    "\n\034population_total_destruction\020\016\022\023\n\017popu"
    "lation_kill\020\017\022\030\n\024population_resurrect\020\020\022"
    "\036\n\032population_change_attitude\020\021\022\032\n\026chang"
    "e_knowledge_group\020\022\022\031\n\025change_logistic_l"
    "inks\020\023\022\030\n\024unit_change_superior\020\024\022\033\n\027chan"
    "ge_automat_superior\020\025\022\035\n\031change_formatio"
    "n_superior\020\026\022\032\n\026knowledge_group_update\020\027"
    "\022\030\n\024log_supply_push_flow\020\030\022\034\n\030log_supply"
    "_change_quotas\020\031\"\343\001\n\027MsgKnowledgeMagicAc"
    "tion\022\013\n\003oid\030\001 \002(\r\022;\n\004type\030\002 \002(\0162-.MsgsCl"
    "ientToSim.MsgKnowledgeMagicAction.Type\0220"
    "\n\nparametres\030\003 \002(\0132\034.Common.MsgMissionPa"
    "rameters\"L\n\004Type\022\n\n\006enable\020\030\022\017\n\013update_s"
    "ide\020\031\022\026\n\022update_side_parent\020\032\022\017\n\013update_"
    "type\020\033\"\236\001\n\032MsgMagicActionCreateObject\022\014\n"
    "\004type\030\001 \002(\t\022%\n\010location\030\002 \002(\0132\023.Common.M"
    "sgLocation\022\014\n\004name\030\003 \002(\t\022\014\n\004team\030\004 \002(\005\022/"
    "\n\nattributes\030\005 \002(\0132\033.Common.MsgObjectAtt"
    "ributes\"Z\n\032MsgMagicActionUpdateObject\022\013\n"
    "\003oid\030\001 \002(\005\022/\n\nattributes\030\002 \002(\0132\033.Common."
    "MsgObjectAttributes\"\275\001\n\033MsgObjectMagicAc"
    "tion_action\022B\n\rcreate_object\030\001 \001(\0132+.Msg"
    "sClientToSim.MsgMagicActionCreateObject\022"
    "B\n\rupdate_object\030\002 \001(\0132+.MsgsClientToSim"
    ".MsgMagicActionUpdateObject\022\026\n\016destroy_o"
    "bject\030\003 \001(\005\"T\n\024MsgObjectMagicAction\022<\n\006a"
    "ction\030\001 \002(\0132,.MsgsClientToSim.MsgObjectM"
    "agicAction_action\"m\n\024MsgLogSupplyPushFlo"
    "w\022\023\n\013oid_donneur\030\001 \002(\r\022\024\n\014oid_receveur\030\002"
    " \002(\r\022*\n\006stocks\030\003 \002(\0132\032.Common.SeqOfDotat"
    "ionStock\"q\n\030MsgLogSupplyChangeQuotas\022\023\n\013"
    "oid_donneur\030\001 \002(\r\022\024\n\014oid_receveur\030\002 \002(\r\022"
    "*\n\006quotas\030\003 \002(\0132\032.Common.SeqOfDotationQu"
    "ota\"5\n MsgControlCheckPointSetFrequency\022"
    "\021\n\tfrequency\030\001 \002(\005\"3\n\033MsgControlToggleVi"
    "sionCones\022\024\n\014vision_cones\030\001 \002(\010\"V\n MsgKn"
    "owledgeGroupCreationRequest\022\020\n\010oid_camp\030"
    "\001 \002(\r\022\022\n\noid_parent\030\002 \001(\r\022\014\n\004type\030\003 \002(\t\""
    "r\n\036MsgKnowledgeGroupUpdateRequest\022\013\n\003oid"
    "\030\001 \002(\r\022\020\n\010oid_camp\030\002 \001(\r\022\022\n\noid_parent\030\003"
    " \001(\r\022\017\n\007enabled\030\004 \001(\010\022\014\n\004type\030\005 \001(\t\"\365\n\n\016"
    "MsgClientToSim\022\022\n\007context\030\001 \001(\005:\0010\0228\n\007me"
    "ssage\030\002 \002(\0132\'.MsgsClientToSim.MsgClientT"
    "oSim.Content\032\224\n\n\007Content\022,\n\014control_stop"
    "\030\001 \001(\0132\026.Common.MsgControlStop\022.\n\rcontro"
    "l_pause\030\002 \001(\0132\027.Common.MsgControlPause\0220"
    "\n\016control_resume\030\003 \001(\0132\030.Common.MsgContr"
    "olResume\022F\n\032control_change_time_factor\030\004"
    " \001(\0132\".Common.MsgControlChangeTimeFactor"
    "\022K\n\030control_date_time_change\030\005 \001(\0132).Msg"
    "sClientToSim.MsgControlDatetimeChange\0227\n"
    "\rcontrol_meteo\030\006 \001(\0132 .MsgsClientToSim.M"
    "sgControlMeteo\022Q\n\033control_checkpoint_sav"
    "e_now\030\007 \001(\0132,.MsgsClientToSim.MsgControl"
    "CheckPointSaveNow\022[\n control_checkpoint_"
    "set_frequency\030\010 \001(\01321.MsgsClientToSim.Ms"
    "gControlCheckPointSetFrequency\022Q\n\033contro"
    "l_toggle_vision_cones\030\t \001(\0132,.MsgsClient"
    "ToSim.MsgControlToggleVisionCones\022(\n\nuni"
    "t_order\030\n \001(\0132\024.Common.MsgUnitOrder\022.\n\ra"
    "utomat_order\030\013 \001(\0132\027.Common.MsgAutomatOr"
    "der\0224\n\020population_order\030\014 \001(\0132\032.Common.M"
    "sgPopulationOrder\0221\n\nfrag_order\030\r \001(\0132\035."
    "MsgsClientToSim.MsgFragOrder\022<\n\020set_auto"
    "mat_mode\030\016 \001(\0132\".MsgsClientToSim.MsgSetA"
    "utomatMode\022F\n\025unit_creation_request\030\017 \001("
    "\0132\'.MsgsClientToSim.MsgUnitCreationReque"
    "st\022>\n\021unit_magic_action\030\020 \001(\0132#.MsgsClie"
    "ntToSim.MsgUnitMagicAction\022B\n\023object_mag"
    "ic_action\030\021 \001(\0132%.MsgsClientToSim.MsgObj"
    "ectMagicAction\0224\n\020change_diplomacy\030\022 \001(\013"
    "2\032.Common.MsgChangeDiplomacy\022H\n\026knowledg"
    "e_magic_action\030\023 \001(\0132(.MsgsClientToSim.M"
    "sgKnowledgeMagicAction\022[\n knowledge_grou"
    "p_creation_request\030\024 \001(\01321.MsgsClientToS"
    "im.MsgKnowledgeGroupCreationRequest", 3995);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ClientToSim.proto", &protobuf_RegisterTypes);
  MsgControlDatetimeChange::default_instance_ = new MsgControlDatetimeChange();
  MsgControlMeteo::default_instance_ = new MsgControlMeteo();
  MsgControlCheckPointSaveNow::default_instance_ = new MsgControlCheckPointSaveNow();
  MsgFragOrder::default_instance_ = new MsgFragOrder();
  MsgSetAutomatMode::default_instance_ = new MsgSetAutomatMode();
  MsgUnitCreationRequest::default_instance_ = new MsgUnitCreationRequest();
  MsgUnitMagicAction::default_instance_ = new MsgUnitMagicAction();
  MsgKnowledgeMagicAction::default_instance_ = new MsgKnowledgeMagicAction();
  MsgMagicActionCreateObject::default_instance_ = new MsgMagicActionCreateObject();
  MsgMagicActionUpdateObject::default_instance_ = new MsgMagicActionUpdateObject();
  MsgObjectMagicAction_action::default_instance_ = new MsgObjectMagicAction_action();
  MsgObjectMagicAction::default_instance_ = new MsgObjectMagicAction();
  MsgLogSupplyPushFlow::default_instance_ = new MsgLogSupplyPushFlow();
  MsgLogSupplyChangeQuotas::default_instance_ = new MsgLogSupplyChangeQuotas();
  MsgControlCheckPointSetFrequency::default_instance_ = new MsgControlCheckPointSetFrequency();
  MsgControlToggleVisionCones::default_instance_ = new MsgControlToggleVisionCones();
  MsgKnowledgeGroupCreationRequest::default_instance_ = new MsgKnowledgeGroupCreationRequest();
  MsgKnowledgeGroupUpdateRequest::default_instance_ = new MsgKnowledgeGroupUpdateRequest();
  MsgClientToSim::default_instance_ = new MsgClientToSim();
  MsgClientToSim_Content::default_instance_ = new MsgClientToSim_Content();
  MsgControlDatetimeChange::default_instance_->InitAsDefaultInstance();
  MsgControlMeteo::default_instance_->InitAsDefaultInstance();
  MsgControlCheckPointSaveNow::default_instance_->InitAsDefaultInstance();
  MsgFragOrder::default_instance_->InitAsDefaultInstance();
  MsgSetAutomatMode::default_instance_->InitAsDefaultInstance();
  MsgUnitCreationRequest::default_instance_->InitAsDefaultInstance();
  MsgUnitMagicAction::default_instance_->InitAsDefaultInstance();
  MsgKnowledgeMagicAction::default_instance_->InitAsDefaultInstance();
  MsgMagicActionCreateObject::default_instance_->InitAsDefaultInstance();
  MsgMagicActionUpdateObject::default_instance_->InitAsDefaultInstance();
  MsgObjectMagicAction_action::default_instance_->InitAsDefaultInstance();
  MsgObjectMagicAction::default_instance_->InitAsDefaultInstance();
  MsgLogSupplyPushFlow::default_instance_->InitAsDefaultInstance();
  MsgLogSupplyChangeQuotas::default_instance_->InitAsDefaultInstance();
  MsgControlCheckPointSetFrequency::default_instance_->InitAsDefaultInstance();
  MsgControlToggleVisionCones::default_instance_->InitAsDefaultInstance();
  MsgKnowledgeGroupCreationRequest::default_instance_->InitAsDefaultInstance();
  MsgKnowledgeGroupUpdateRequest::default_instance_->InitAsDefaultInstance();
  MsgClientToSim::default_instance_->InitAsDefaultInstance();
  MsgClientToSim_Content::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ClientToSim_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ClientToSim_2eproto {
  StaticDescriptorInitializer_ClientToSim_2eproto() {
    protobuf_AddDesc_ClientToSim_2eproto();
  }
} static_descriptor_initializer_ClientToSim_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int MsgControlDatetimeChange::kDateTimeFieldNumber;
#endif  // !_MSC_VER

MsgControlDatetimeChange::MsgControlDatetimeChange() {
  SharedCtor();
}

void MsgControlDatetimeChange::InitAsDefaultInstance() {
  date_time_ = const_cast< ::Common::MsgDateTime*>(&::Common::MsgDateTime::default_instance());
}

MsgControlDatetimeChange::MsgControlDatetimeChange(const MsgControlDatetimeChange& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgControlDatetimeChange::SharedCtor() {
  _cached_size_ = 0;
  date_time_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgControlDatetimeChange::~MsgControlDatetimeChange() {
  SharedDtor();
}

void MsgControlDatetimeChange::SharedDtor() {
  if (this != default_instance_) {
    delete date_time_;
  }
}

const ::google::protobuf::Descriptor* MsgControlDatetimeChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlDatetimeChange_descriptor_;
}

const MsgControlDatetimeChange& MsgControlDatetimeChange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgControlDatetimeChange* MsgControlDatetimeChange::default_instance_ = NULL;

MsgControlDatetimeChange* MsgControlDatetimeChange::New() const {
  return new MsgControlDatetimeChange;
}

void MsgControlDatetimeChange::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (date_time_ != NULL) date_time_->::Common::MsgDateTime::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgControlDatetimeChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MsgDateTime date_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_date_time()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgControlDatetimeChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgControlDatetimeChange::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MsgDateTime date_time = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->date_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgControlDatetimeChange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MsgDateTime date_time = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->date_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgControlDatetimeChange::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MsgDateTime date_time = 1;
    if (has_date_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->date_time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgControlDatetimeChange::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgControlDatetimeChange* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgControlDatetimeChange*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgControlDatetimeChange::MergeFrom(const MsgControlDatetimeChange& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_date_time()->::Common::MsgDateTime::MergeFrom(from.date_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgControlDatetimeChange::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgControlDatetimeChange::CopyFrom(const MsgControlDatetimeChange& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgControlDatetimeChange::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_date_time()) {
    if (!this->date_time().IsInitialized()) return false;
  }
  return true;
}

void MsgControlDatetimeChange::Swap(MsgControlDatetimeChange* other) {
  if (other != this) {
    std::swap(date_time_, other->date_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgControlDatetimeChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgControlDatetimeChange_descriptor_;
  metadata.reflection = MsgControlDatetimeChange_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgControlMeteo::kParametresFieldNumber;
#endif  // !_MSC_VER

MsgControlMeteo::MsgControlMeteo() {
  SharedCtor();
}

void MsgControlMeteo::InitAsDefaultInstance() {
  parametres_ = const_cast< ::Common::MsgMissionParameters*>(&::Common::MsgMissionParameters::default_instance());
}

MsgControlMeteo::MsgControlMeteo(const MsgControlMeteo& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgControlMeteo::SharedCtor() {
  _cached_size_ = 0;
  parametres_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgControlMeteo::~MsgControlMeteo() {
  SharedDtor();
}

void MsgControlMeteo::SharedDtor() {
  if (this != default_instance_) {
    delete parametres_;
  }
}

const ::google::protobuf::Descriptor* MsgControlMeteo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlMeteo_descriptor_;
}

const MsgControlMeteo& MsgControlMeteo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgControlMeteo* MsgControlMeteo::default_instance_ = NULL;

MsgControlMeteo* MsgControlMeteo::New() const {
  return new MsgControlMeteo;
}

void MsgControlMeteo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (parametres_ != NULL) parametres_->::Common::MsgMissionParameters::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgControlMeteo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MsgMissionParameters parametres = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_parametres()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgControlMeteo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgControlMeteo::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MsgMissionParameters parametres = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->parametres(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgControlMeteo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MsgMissionParameters parametres = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->parametres(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgControlMeteo::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MsgMissionParameters parametres = 1;
    if (has_parametres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parametres());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgControlMeteo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgControlMeteo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgControlMeteo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgControlMeteo::MergeFrom(const MsgControlMeteo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_parametres()->::Common::MsgMissionParameters::MergeFrom(from.parametres());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgControlMeteo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgControlMeteo::CopyFrom(const MsgControlMeteo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgControlMeteo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_parametres()) {
    if (!this->parametres().IsInitialized()) return false;
  }
  return true;
}

void MsgControlMeteo::Swap(MsgControlMeteo* other) {
  if (other != this) {
    std::swap(parametres_, other->parametres_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgControlMeteo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgControlMeteo_descriptor_;
  metadata.reflection = MsgControlMeteo_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgControlCheckPointSaveNow::_default_name_;
#ifndef _MSC_VER
const int MsgControlCheckPointSaveNow::kNameFieldNumber;
#endif  // !_MSC_VER

MsgControlCheckPointSaveNow::MsgControlCheckPointSaveNow() {
  SharedCtor();
}

void MsgControlCheckPointSaveNow::InitAsDefaultInstance() {
}

MsgControlCheckPointSaveNow::MsgControlCheckPointSaveNow(const MsgControlCheckPointSaveNow& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgControlCheckPointSaveNow::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&_default_name_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgControlCheckPointSaveNow::~MsgControlCheckPointSaveNow() {
  SharedDtor();
}

void MsgControlCheckPointSaveNow::SharedDtor() {
  if (name_ != &_default_name_) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgControlCheckPointSaveNow::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlCheckPointSaveNow_descriptor_;
}

const MsgControlCheckPointSaveNow& MsgControlCheckPointSaveNow::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgControlCheckPointSaveNow* MsgControlCheckPointSaveNow::default_instance_ = NULL;

MsgControlCheckPointSaveNow* MsgControlCheckPointSaveNow::New() const {
  return new MsgControlCheckPointSaveNow;
}

void MsgControlCheckPointSaveNow::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (name_ != &_default_name_) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgControlCheckPointSaveNow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_name()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->name().data(), this->name().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgControlCheckPointSaveNow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgControlCheckPointSaveNow::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional string name = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgControlCheckPointSaveNow::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string name = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgControlCheckPointSaveNow::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgControlCheckPointSaveNow::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgControlCheckPointSaveNow* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgControlCheckPointSaveNow*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgControlCheckPointSaveNow::MergeFrom(const MsgControlCheckPointSaveNow& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgControlCheckPointSaveNow::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgControlCheckPointSaveNow::CopyFrom(const MsgControlCheckPointSaveNow& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgControlCheckPointSaveNow::IsInitialized() const {
  
  return true;
}

void MsgControlCheckPointSaveNow::Swap(MsgControlCheckPointSaveNow* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgControlCheckPointSaveNow::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgControlCheckPointSaveNow_descriptor_;
  metadata.reflection = MsgControlCheckPointSaveNow_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgFragOrder::kOidFieldNumber;
const int MsgFragOrder::kFragOrderFieldNumber;
const int MsgFragOrder::kParametresFieldNumber;
#endif  // !_MSC_VER

MsgFragOrder::MsgFragOrder() {
  SharedCtor();
}

void MsgFragOrder::InitAsDefaultInstance() {
  parametres_ = const_cast< ::Common::MsgMissionParameters*>(&::Common::MsgMissionParameters::default_instance());
}

MsgFragOrder::MsgFragOrder(const MsgFragOrder& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgFragOrder::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0u;
  frag_order_ = 0u;
  parametres_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgFragOrder::~MsgFragOrder() {
  SharedDtor();
}

void MsgFragOrder::SharedDtor() {
  if (this != default_instance_) {
    delete parametres_;
  }
}

const ::google::protobuf::Descriptor* MsgFragOrder::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgFragOrder_descriptor_;
}

const MsgFragOrder& MsgFragOrder::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgFragOrder* MsgFragOrder::default_instance_ = NULL;

MsgFragOrder* MsgFragOrder::New() const {
  return new MsgFragOrder;
}

void MsgFragOrder::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0u;
    frag_order_ = 0u;
    if (_has_bit(2)) {
      if (parametres_ != NULL) parametres_->::Common::MsgMissionParameters::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgFragOrder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_frag_order;
        break;
      }
      
      // required uint32 frag_order = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_frag_order:
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &frag_order_));
        _set_bit(1);
        if (input->ExpectTag(26)) goto parse_parametres;
        break;
      }
      
      // optional .Common.MsgMissionParameters parametres = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_parametres:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_parametres()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgFragOrder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgFragOrder::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->oid(), output);
  }
  
  // required uint32 frag_order = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->frag_order(), output);
  }
  
  // optional .Common.MsgMissionParameters parametres = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->parametres(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgFragOrder::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->oid(), target);
  }
  
  // required uint32 frag_order = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->frag_order(), target);
  }
  
  // optional .Common.MsgMissionParameters parametres = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->parametres(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgFragOrder::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid());
    }
    
    // required uint32 frag_order = 2;
    if (has_frag_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->frag_order());
    }
    
    // optional .Common.MsgMissionParameters parametres = 3;
    if (has_parametres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parametres());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgFragOrder::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgFragOrder* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgFragOrder*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgFragOrder::MergeFrom(const MsgFragOrder& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
    if (from._has_bit(1)) {
      set_frag_order(from.frag_order());
    }
    if (from._has_bit(2)) {
      mutable_parametres()->::Common::MsgMissionParameters::MergeFrom(from.parametres());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgFragOrder::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgFragOrder::CopyFrom(const MsgFragOrder& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgFragOrder::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_parametres()) {
    if (!this->parametres().IsInitialized()) return false;
  }
  return true;
}

void MsgFragOrder::Swap(MsgFragOrder* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(frag_order_, other->frag_order_);
    std::swap(parametres_, other->parametres_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgFragOrder::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgFragOrder_descriptor_;
  metadata.reflection = MsgFragOrder_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSetAutomatMode::kOidFieldNumber;
const int MsgSetAutomatMode::kModeFieldNumber;
#endif  // !_MSC_VER

MsgSetAutomatMode::MsgSetAutomatMode() {
  SharedCtor();
}

void MsgSetAutomatMode::InitAsDefaultInstance() {
}

MsgSetAutomatMode::MsgSetAutomatMode(const MsgSetAutomatMode& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgSetAutomatMode::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0;
  mode_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSetAutomatMode::~MsgSetAutomatMode() {
  SharedDtor();
}

void MsgSetAutomatMode::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgSetAutomatMode::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSetAutomatMode_descriptor_;
}

const MsgSetAutomatMode& MsgSetAutomatMode::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgSetAutomatMode* MsgSetAutomatMode::default_instance_ = NULL;

MsgSetAutomatMode* MsgSetAutomatMode::New() const {
  return new MsgSetAutomatMode;
}

void MsgSetAutomatMode::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0;
    mode_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSetAutomatMode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_mode;
        break;
      }
      
      // required .Common.EnumAutomatMode mode = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_mode:
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (Common::EnumAutomatMode_IsValid(value)) {
          set_mode(static_cast< Common::EnumAutomatMode >(value));
        } else {
          mutable_unknown_fields()->AddVarint(2, value);
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgSetAutomatMode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgSetAutomatMode::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->oid(), output);
  }
  
  // required .Common.EnumAutomatMode mode = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->mode(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgSetAutomatMode::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->oid(), target);
  }
  
  // required .Common.EnumAutomatMode mode = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->mode(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgSetAutomatMode::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oid());
    }
    
    // required .Common.EnumAutomatMode mode = 2;
    if (has_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgSetAutomatMode::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSetAutomatMode* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSetAutomatMode*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSetAutomatMode::MergeFrom(const MsgSetAutomatMode& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
    if (from._has_bit(1)) {
      set_mode(from.mode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSetAutomatMode::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSetAutomatMode::CopyFrom(const MsgSetAutomatMode& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSetAutomatMode::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void MsgSetAutomatMode::Swap(MsgSetAutomatMode* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(mode_, other->mode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSetAutomatMode::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSetAutomatMode_descriptor_;
  metadata.reflection = MsgSetAutomatMode_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgUnitCreationRequest::kTypePionFieldNumber;
const int MsgUnitCreationRequest::kOidAutomateFieldNumber;
const int MsgUnitCreationRequest::kPositionFieldNumber;
#endif  // !_MSC_VER

MsgUnitCreationRequest::MsgUnitCreationRequest() {
  SharedCtor();
}

void MsgUnitCreationRequest::InitAsDefaultInstance() {
  position_ = const_cast< ::Common::MsgCoordLatLong*>(&::Common::MsgCoordLatLong::default_instance());
}

MsgUnitCreationRequest::MsgUnitCreationRequest(const MsgUnitCreationRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgUnitCreationRequest::SharedCtor() {
  _cached_size_ = 0;
  type_pion_ = 0u;
  oid_automate_ = 0u;
  position_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgUnitCreationRequest::~MsgUnitCreationRequest() {
  SharedDtor();
}

void MsgUnitCreationRequest::SharedDtor() {
  if (this != default_instance_) {
    delete position_;
  }
}

const ::google::protobuf::Descriptor* MsgUnitCreationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgUnitCreationRequest_descriptor_;
}

const MsgUnitCreationRequest& MsgUnitCreationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgUnitCreationRequest* MsgUnitCreationRequest::default_instance_ = NULL;

MsgUnitCreationRequest* MsgUnitCreationRequest::New() const {
  return new MsgUnitCreationRequest;
}

void MsgUnitCreationRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_pion_ = 0u;
    oid_automate_ = 0u;
    if (_has_bit(2)) {
      if (position_ != NULL) position_->::Common::MsgCoordLatLong::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgUnitCreationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 type_pion = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &type_pion_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_oid_automate;
        break;
      }
      
      // required uint32 oid_automate = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_oid_automate:
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_automate_));
        _set_bit(1);
        if (input->ExpectTag(26)) goto parse_position;
        break;
      }
      
      // required .Common.MsgCoordLatLong position = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_position:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_position()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgUnitCreationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgUnitCreationRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required uint32 type_pion = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type_pion(), output);
  }
  
  // required uint32 oid_automate = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->oid_automate(), output);
  }
  
  // required .Common.MsgCoordLatLong position = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->position(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgUnitCreationRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 type_pion = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type_pion(), target);
  }
  
  // required uint32 oid_automate = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->oid_automate(), target);
  }
  
  // required .Common.MsgCoordLatLong position = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->position(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgUnitCreationRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 type_pion = 1;
    if (has_type_pion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type_pion());
    }
    
    // required uint32 oid_automate = 2;
    if (has_oid_automate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid_automate());
    }
    
    // required .Common.MsgCoordLatLong position = 3;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->position());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgUnitCreationRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgUnitCreationRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgUnitCreationRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgUnitCreationRequest::MergeFrom(const MsgUnitCreationRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_type_pion(from.type_pion());
    }
    if (from._has_bit(1)) {
      set_oid_automate(from.oid_automate());
    }
    if (from._has_bit(2)) {
      mutable_position()->::Common::MsgCoordLatLong::MergeFrom(from.position());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgUnitCreationRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgUnitCreationRequest::CopyFrom(const MsgUnitCreationRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUnitCreationRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  if (has_position()) {
    if (!this->position().IsInitialized()) return false;
  }
  return true;
}

void MsgUnitCreationRequest::Swap(MsgUnitCreationRequest* other) {
  if (other != this) {
    std::swap(type_pion_, other->type_pion_);
    std::swap(oid_automate_, other->oid_automate_);
    std::swap(position_, other->position_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgUnitCreationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgUnitCreationRequest_descriptor_;
  metadata.reflection = MsgUnitCreationRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgUnitMagicAction_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgUnitMagicAction_Type_descriptor_;
}
bool MsgUnitMagicAction_Type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgUnitMagicAction_Type MsgUnitMagicAction::move_to;
const MsgUnitMagicAction_Type MsgUnitMagicAction::surrender_to;
const MsgUnitMagicAction_Type MsgUnitMagicAction::cancel_surrender;
const MsgUnitMagicAction_Type MsgUnitMagicAction::recover_transporters;
const MsgUnitMagicAction_Type MsgUnitMagicAction::destroy_component;
const MsgUnitMagicAction_Type MsgUnitMagicAction::recover_all;
const MsgUnitMagicAction_Type MsgUnitMagicAction::recover_troops;
const MsgUnitMagicAction_Type MsgUnitMagicAction::recover_equipments;
const MsgUnitMagicAction_Type MsgUnitMagicAction::recover_resources;
const MsgUnitMagicAction_Type MsgUnitMagicAction::destroy_all;
const MsgUnitMagicAction_Type MsgUnitMagicAction::change_human_factors;
const MsgUnitMagicAction_Type MsgUnitMagicAction::partial_recovery;
const MsgUnitMagicAction_Type MsgUnitMagicAction::unit_creation;
const MsgUnitMagicAction_Type MsgUnitMagicAction::create_fire_order;
const MsgUnitMagicAction_Type MsgUnitMagicAction::population_total_destruction;
const MsgUnitMagicAction_Type MsgUnitMagicAction::population_kill;
const MsgUnitMagicAction_Type MsgUnitMagicAction::population_resurrect;
const MsgUnitMagicAction_Type MsgUnitMagicAction::population_change_attitude;
const MsgUnitMagicAction_Type MsgUnitMagicAction::change_knowledge_group;
const MsgUnitMagicAction_Type MsgUnitMagicAction::change_logistic_links;
const MsgUnitMagicAction_Type MsgUnitMagicAction::unit_change_superior;
const MsgUnitMagicAction_Type MsgUnitMagicAction::change_automat_superior;
const MsgUnitMagicAction_Type MsgUnitMagicAction::change_formation_superior;
const MsgUnitMagicAction_Type MsgUnitMagicAction::knowledge_group_update;
const MsgUnitMagicAction_Type MsgUnitMagicAction::log_supply_push_flow;
const MsgUnitMagicAction_Type MsgUnitMagicAction::log_supply_change_quotas;
const MsgUnitMagicAction_Type MsgUnitMagicAction::Type_MIN;
const MsgUnitMagicAction_Type MsgUnitMagicAction::Type_MAX;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgUnitMagicAction::kOidFieldNumber;
const int MsgUnitMagicAction::kTypeFieldNumber;
const int MsgUnitMagicAction::kParametresFieldNumber;
#endif  // !_MSC_VER

MsgUnitMagicAction::MsgUnitMagicAction() {
  SharedCtor();
}

void MsgUnitMagicAction::InitAsDefaultInstance() {
  parametres_ = const_cast< ::Common::MsgMissionParameters*>(&::Common::MsgMissionParameters::default_instance());
}

MsgUnitMagicAction::MsgUnitMagicAction(const MsgUnitMagicAction& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgUnitMagicAction::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0u;
  type_ = 0;
  parametres_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgUnitMagicAction::~MsgUnitMagicAction() {
  SharedDtor();
}

void MsgUnitMagicAction::SharedDtor() {
  if (this != default_instance_) {
    delete parametres_;
  }
}

const ::google::protobuf::Descriptor* MsgUnitMagicAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgUnitMagicAction_descriptor_;
}

const MsgUnitMagicAction& MsgUnitMagicAction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgUnitMagicAction* MsgUnitMagicAction::default_instance_ = NULL;

MsgUnitMagicAction* MsgUnitMagicAction::New() const {
  return new MsgUnitMagicAction;
}

void MsgUnitMagicAction::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0u;
    type_ = 0;
    if (_has_bit(2)) {
      if (parametres_ != NULL) parametres_->::Common::MsgMissionParameters::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgUnitMagicAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // required .MsgsClientToSim.MsgUnitMagicAction.Type type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_type:
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsClientToSim::MsgUnitMagicAction_Type_IsValid(value)) {
          set_type(static_cast< ::MsgsClientToSim::MsgUnitMagicAction_Type >(value));
        } else {
          mutable_unknown_fields()->AddVarint(2, value);
        }
        if (input->ExpectTag(26)) goto parse_parametres;
        break;
      }
      
      // required .Common.MsgMissionParameters parametres = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_parametres:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_parametres()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgUnitMagicAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgUnitMagicAction::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->oid(), output);
  }
  
  // required .MsgsClientToSim.MsgUnitMagicAction.Type type = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }
  
  // required .Common.MsgMissionParameters parametres = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->parametres(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgUnitMagicAction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->oid(), target);
  }
  
  // required .MsgsClientToSim.MsgUnitMagicAction.Type type = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }
  
  // required .Common.MsgMissionParameters parametres = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->parametres(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgUnitMagicAction::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid());
    }
    
    // required .MsgsClientToSim.MsgUnitMagicAction.Type type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }
    
    // required .Common.MsgMissionParameters parametres = 3;
    if (has_parametres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parametres());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgUnitMagicAction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgUnitMagicAction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgUnitMagicAction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgUnitMagicAction::MergeFrom(const MsgUnitMagicAction& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
    if (from._has_bit(1)) {
      set_type(from.type());
    }
    if (from._has_bit(2)) {
      mutable_parametres()->::Common::MsgMissionParameters::MergeFrom(from.parametres());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgUnitMagicAction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgUnitMagicAction::CopyFrom(const MsgUnitMagicAction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUnitMagicAction::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  if (has_parametres()) {
    if (!this->parametres().IsInitialized()) return false;
  }
  return true;
}

void MsgUnitMagicAction::Swap(MsgUnitMagicAction* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(type_, other->type_);
    std::swap(parametres_, other->parametres_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgUnitMagicAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgUnitMagicAction_descriptor_;
  metadata.reflection = MsgUnitMagicAction_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgKnowledgeMagicAction_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgKnowledgeMagicAction_Type_descriptor_;
}
bool MsgKnowledgeMagicAction_Type_IsValid(int value) {
  switch(value) {
    case 24:
    case 25:
    case 26:
    case 27:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgKnowledgeMagicAction_Type MsgKnowledgeMagicAction::enable;
const MsgKnowledgeMagicAction_Type MsgKnowledgeMagicAction::update_side;
const MsgKnowledgeMagicAction_Type MsgKnowledgeMagicAction::update_side_parent;
const MsgKnowledgeMagicAction_Type MsgKnowledgeMagicAction::update_type;
const MsgKnowledgeMagicAction_Type MsgKnowledgeMagicAction::Type_MIN;
const MsgKnowledgeMagicAction_Type MsgKnowledgeMagicAction::Type_MAX;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgKnowledgeMagicAction::kOidFieldNumber;
const int MsgKnowledgeMagicAction::kTypeFieldNumber;
const int MsgKnowledgeMagicAction::kParametresFieldNumber;
#endif  // !_MSC_VER

MsgKnowledgeMagicAction::MsgKnowledgeMagicAction() {
  SharedCtor();
}

void MsgKnowledgeMagicAction::InitAsDefaultInstance() {
  parametres_ = const_cast< ::Common::MsgMissionParameters*>(&::Common::MsgMissionParameters::default_instance());
}

MsgKnowledgeMagicAction::MsgKnowledgeMagicAction(const MsgKnowledgeMagicAction& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgKnowledgeMagicAction::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0u;
  type_ = 24;
  parametres_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgKnowledgeMagicAction::~MsgKnowledgeMagicAction() {
  SharedDtor();
}

void MsgKnowledgeMagicAction::SharedDtor() {
  if (this != default_instance_) {
    delete parametres_;
  }
}

const ::google::protobuf::Descriptor* MsgKnowledgeMagicAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgKnowledgeMagicAction_descriptor_;
}

const MsgKnowledgeMagicAction& MsgKnowledgeMagicAction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgKnowledgeMagicAction* MsgKnowledgeMagicAction::default_instance_ = NULL;

MsgKnowledgeMagicAction* MsgKnowledgeMagicAction::New() const {
  return new MsgKnowledgeMagicAction;
}

void MsgKnowledgeMagicAction::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0u;
    type_ = 24;
    if (_has_bit(2)) {
      if (parametres_ != NULL) parametres_->::Common::MsgMissionParameters::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgKnowledgeMagicAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // required .MsgsClientToSim.MsgKnowledgeMagicAction.Type type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_type:
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::MsgsClientToSim::MsgKnowledgeMagicAction_Type_IsValid(value)) {
          set_type(static_cast< ::MsgsClientToSim::MsgKnowledgeMagicAction_Type >(value));
        } else {
          mutable_unknown_fields()->AddVarint(2, value);
        }
        if (input->ExpectTag(26)) goto parse_parametres;
        break;
      }
      
      // required .Common.MsgMissionParameters parametres = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_parametres:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_parametres()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgKnowledgeMagicAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgKnowledgeMagicAction::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->oid(), output);
  }
  
  // required .MsgsClientToSim.MsgKnowledgeMagicAction.Type type = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }
  
  // required .Common.MsgMissionParameters parametres = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->parametres(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgKnowledgeMagicAction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->oid(), target);
  }
  
  // required .MsgsClientToSim.MsgKnowledgeMagicAction.Type type = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }
  
  // required .Common.MsgMissionParameters parametres = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->parametres(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgKnowledgeMagicAction::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid());
    }
    
    // required .MsgsClientToSim.MsgKnowledgeMagicAction.Type type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }
    
    // required .Common.MsgMissionParameters parametres = 3;
    if (has_parametres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parametres());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgKnowledgeMagicAction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgKnowledgeMagicAction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgKnowledgeMagicAction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgKnowledgeMagicAction::MergeFrom(const MsgKnowledgeMagicAction& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
    if (from._has_bit(1)) {
      set_type(from.type());
    }
    if (from._has_bit(2)) {
      mutable_parametres()->::Common::MsgMissionParameters::MergeFrom(from.parametres());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgKnowledgeMagicAction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgKnowledgeMagicAction::CopyFrom(const MsgKnowledgeMagicAction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgKnowledgeMagicAction::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  if (has_parametres()) {
    if (!this->parametres().IsInitialized()) return false;
  }
  return true;
}

void MsgKnowledgeMagicAction::Swap(MsgKnowledgeMagicAction* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(type_, other->type_);
    std::swap(parametres_, other->parametres_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgKnowledgeMagicAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgKnowledgeMagicAction_descriptor_;
  metadata.reflection = MsgKnowledgeMagicAction_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgMagicActionCreateObject::_default_type_;
const ::std::string MsgMagicActionCreateObject::_default_name_;
#ifndef _MSC_VER
const int MsgMagicActionCreateObject::kTypeFieldNumber;
const int MsgMagicActionCreateObject::kLocationFieldNumber;
const int MsgMagicActionCreateObject::kNameFieldNumber;
const int MsgMagicActionCreateObject::kTeamFieldNumber;
const int MsgMagicActionCreateObject::kAttributesFieldNumber;
#endif  // !_MSC_VER

MsgMagicActionCreateObject::MsgMagicActionCreateObject() {
  SharedCtor();
}

void MsgMagicActionCreateObject::InitAsDefaultInstance() {
  location_ = const_cast< ::Common::MsgLocation*>(&::Common::MsgLocation::default_instance());
  attributes_ = const_cast< ::Common::MsgObjectAttributes*>(&::Common::MsgObjectAttributes::default_instance());
}

MsgMagicActionCreateObject::MsgMagicActionCreateObject(const MsgMagicActionCreateObject& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMagicActionCreateObject::SharedCtor() {
  _cached_size_ = 0;
  type_ = const_cast< ::std::string*>(&_default_type_);
  location_ = NULL;
  name_ = const_cast< ::std::string*>(&_default_name_);
  team_ = 0;
  attributes_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMagicActionCreateObject::~MsgMagicActionCreateObject() {
  SharedDtor();
}

void MsgMagicActionCreateObject::SharedDtor() {
  if (type_ != &_default_type_) {
    delete type_;
  }
  if (name_ != &_default_name_) {
    delete name_;
  }
  if (this != default_instance_) {
    delete location_;
    delete attributes_;
  }
}

const ::google::protobuf::Descriptor* MsgMagicActionCreateObject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMagicActionCreateObject_descriptor_;
}

const MsgMagicActionCreateObject& MsgMagicActionCreateObject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgMagicActionCreateObject* MsgMagicActionCreateObject::default_instance_ = NULL;

MsgMagicActionCreateObject* MsgMagicActionCreateObject::New() const {
  return new MsgMagicActionCreateObject;
}

void MsgMagicActionCreateObject::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (type_ != &_default_type_) {
        type_->clear();
      }
    }
    if (_has_bit(1)) {
      if (location_ != NULL) location_->::Common::MsgLocation::Clear();
    }
    if (_has_bit(2)) {
      if (name_ != &_default_name_) {
        name_->clear();
      }
    }
    team_ = 0;
    if (_has_bit(4)) {
      if (attributes_ != NULL) attributes_->::Common::MsgObjectAttributes::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMagicActionCreateObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_type()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->type().data(), this->type().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(18)) goto parse_location;
        break;
      }
      
      // required .Common.MsgLocation location = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_location:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_location()));
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }
      
      // required string name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_name:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_name()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->name().data(), this->name().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(32)) goto parse_team;
        break;
      }
      
      // required int32 team = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_team:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &team_));
        _set_bit(3);
        if (input->ExpectTag(42)) goto parse_attributes;
        break;
      }
      
      // required .Common.MsgObjectAttributes attributes = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_attributes:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_attributes()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMagicActionCreateObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMagicActionCreateObject::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required string type = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->type(), output);
  }
  
  // required .Common.MsgLocation location = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->location(), output);
  }
  
  // required string name = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->name(), output);
  }
  
  // required int32 team = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->team(), output);
  }
  
  // required .Common.MsgObjectAttributes attributes = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      5, this->attributes(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMagicActionCreateObject::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string type = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }
  
  // required .Common.MsgLocation location = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->location(), target);
  }
  
  // required string name = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }
  
  // required int32 team = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->team(), target);
  }
  
  // required .Common.MsgObjectAttributes attributes = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->attributes(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMagicActionCreateObject::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }
    
    // required .Common.MsgLocation location = 2;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->location());
    }
    
    // required string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // required int32 team = 4;
    if (has_team()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->team());
    }
    
    // required .Common.MsgObjectAttributes attributes = 5;
    if (has_attributes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attributes());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMagicActionCreateObject::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMagicActionCreateObject* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMagicActionCreateObject*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMagicActionCreateObject::MergeFrom(const MsgMagicActionCreateObject& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_type(from.type());
    }
    if (from._has_bit(1)) {
      mutable_location()->::Common::MsgLocation::MergeFrom(from.location());
    }
    if (from._has_bit(2)) {
      set_name(from.name());
    }
    if (from._has_bit(3)) {
      set_team(from.team());
    }
    if (from._has_bit(4)) {
      mutable_attributes()->::Common::MsgObjectAttributes::MergeFrom(from.attributes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMagicActionCreateObject::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMagicActionCreateObject::CopyFrom(const MsgMagicActionCreateObject& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMagicActionCreateObject::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  
  if (has_location()) {
    if (!this->location().IsInitialized()) return false;
  }
  if (has_attributes()) {
    if (!this->attributes().IsInitialized()) return false;
  }
  return true;
}

void MsgMagicActionCreateObject::Swap(MsgMagicActionCreateObject* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(location_, other->location_);
    std::swap(name_, other->name_);
    std::swap(team_, other->team_);
    std::swap(attributes_, other->attributes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMagicActionCreateObject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMagicActionCreateObject_descriptor_;
  metadata.reflection = MsgMagicActionCreateObject_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMagicActionUpdateObject::kOidFieldNumber;
const int MsgMagicActionUpdateObject::kAttributesFieldNumber;
#endif  // !_MSC_VER

MsgMagicActionUpdateObject::MsgMagicActionUpdateObject() {
  SharedCtor();
}

void MsgMagicActionUpdateObject::InitAsDefaultInstance() {
  attributes_ = const_cast< ::Common::MsgObjectAttributes*>(&::Common::MsgObjectAttributes::default_instance());
}

MsgMagicActionUpdateObject::MsgMagicActionUpdateObject(const MsgMagicActionUpdateObject& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMagicActionUpdateObject::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0;
  attributes_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMagicActionUpdateObject::~MsgMagicActionUpdateObject() {
  SharedDtor();
}

void MsgMagicActionUpdateObject::SharedDtor() {
  if (this != default_instance_) {
    delete attributes_;
  }
}

const ::google::protobuf::Descriptor* MsgMagicActionUpdateObject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMagicActionUpdateObject_descriptor_;
}

const MsgMagicActionUpdateObject& MsgMagicActionUpdateObject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgMagicActionUpdateObject* MsgMagicActionUpdateObject::default_instance_ = NULL;

MsgMagicActionUpdateObject* MsgMagicActionUpdateObject::New() const {
  return new MsgMagicActionUpdateObject;
}

void MsgMagicActionUpdateObject::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0;
    if (_has_bit(1)) {
      if (attributes_ != NULL) attributes_->::Common::MsgObjectAttributes::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMagicActionUpdateObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_attributes;
        break;
      }
      
      // required .Common.MsgObjectAttributes attributes = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_attributes:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_attributes()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMagicActionUpdateObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMagicActionUpdateObject::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->oid(), output);
  }
  
  // required .Common.MsgObjectAttributes attributes = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->attributes(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMagicActionUpdateObject::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->oid(), target);
  }
  
  // required .Common.MsgObjectAttributes attributes = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->attributes(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMagicActionUpdateObject::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oid());
    }
    
    // required .Common.MsgObjectAttributes attributes = 2;
    if (has_attributes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attributes());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMagicActionUpdateObject::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMagicActionUpdateObject* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMagicActionUpdateObject*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMagicActionUpdateObject::MergeFrom(const MsgMagicActionUpdateObject& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
    if (from._has_bit(1)) {
      mutable_attributes()->::Common::MsgObjectAttributes::MergeFrom(from.attributes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMagicActionUpdateObject::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMagicActionUpdateObject::CopyFrom(const MsgMagicActionUpdateObject& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMagicActionUpdateObject::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_attributes()) {
    if (!this->attributes().IsInitialized()) return false;
  }
  return true;
}

void MsgMagicActionUpdateObject::Swap(MsgMagicActionUpdateObject* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(attributes_, other->attributes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMagicActionUpdateObject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMagicActionUpdateObject_descriptor_;
  metadata.reflection = MsgMagicActionUpdateObject_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjectMagicAction_action::kCreateObjectFieldNumber;
const int MsgObjectMagicAction_action::kUpdateObjectFieldNumber;
const int MsgObjectMagicAction_action::kDestroyObjectFieldNumber;
#endif  // !_MSC_VER

MsgObjectMagicAction_action::MsgObjectMagicAction_action() {
  SharedCtor();
}

void MsgObjectMagicAction_action::InitAsDefaultInstance() {
  create_object_ = const_cast< ::MsgsClientToSim::MsgMagicActionCreateObject*>(&::MsgsClientToSim::MsgMagicActionCreateObject::default_instance());
  update_object_ = const_cast< ::MsgsClientToSim::MsgMagicActionUpdateObject*>(&::MsgsClientToSim::MsgMagicActionUpdateObject::default_instance());
}

MsgObjectMagicAction_action::MsgObjectMagicAction_action(const MsgObjectMagicAction_action& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgObjectMagicAction_action::SharedCtor() {
  _cached_size_ = 0;
  create_object_ = NULL;
  update_object_ = NULL;
  destroy_object_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjectMagicAction_action::~MsgObjectMagicAction_action() {
  SharedDtor();
}

void MsgObjectMagicAction_action::SharedDtor() {
  if (this != default_instance_) {
    delete create_object_;
    delete update_object_;
  }
}

const ::google::protobuf::Descriptor* MsgObjectMagicAction_action::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjectMagicAction_action_descriptor_;
}

const MsgObjectMagicAction_action& MsgObjectMagicAction_action::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgObjectMagicAction_action* MsgObjectMagicAction_action::default_instance_ = NULL;

MsgObjectMagicAction_action* MsgObjectMagicAction_action::New() const {
  return new MsgObjectMagicAction_action;
}

void MsgObjectMagicAction_action::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (create_object_ != NULL) create_object_->::MsgsClientToSim::MsgMagicActionCreateObject::Clear();
    }
    if (_has_bit(1)) {
      if (update_object_ != NULL) update_object_->::MsgsClientToSim::MsgMagicActionUpdateObject::Clear();
    }
    destroy_object_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgObjectMagicAction_action::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgsClientToSim.MsgMagicActionCreateObject create_object = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_create_object()));
        if (input->ExpectTag(18)) goto parse_update_object;
        break;
      }
      
      // optional .MsgsClientToSim.MsgMagicActionUpdateObject update_object = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_update_object:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_update_object()));
        if (input->ExpectTag(24)) goto parse_destroy_object;
        break;
      }
      
      // optional int32 destroy_object = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_destroy_object:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &destroy_object_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgObjectMagicAction_action::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgObjectMagicAction_action::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .MsgsClientToSim.MsgMagicActionCreateObject create_object = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->create_object(), output);
  }
  
  // optional .MsgsClientToSim.MsgMagicActionUpdateObject update_object = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->update_object(), output);
  }
  
  // optional int32 destroy_object = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->destroy_object(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgObjectMagicAction_action::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .MsgsClientToSim.MsgMagicActionCreateObject create_object = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->create_object(), target);
  }
  
  // optional .MsgsClientToSim.MsgMagicActionUpdateObject update_object = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->update_object(), target);
  }
  
  // optional int32 destroy_object = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->destroy_object(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgObjectMagicAction_action::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgsClientToSim.MsgMagicActionCreateObject create_object = 1;
    if (has_create_object()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->create_object());
    }
    
    // optional .MsgsClientToSim.MsgMagicActionUpdateObject update_object = 2;
    if (has_update_object()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->update_object());
    }
    
    // optional int32 destroy_object = 3;
    if (has_destroy_object()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->destroy_object());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgObjectMagicAction_action::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgObjectMagicAction_action* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgObjectMagicAction_action*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgObjectMagicAction_action::MergeFrom(const MsgObjectMagicAction_action& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_create_object()->::MsgsClientToSim::MsgMagicActionCreateObject::MergeFrom(from.create_object());
    }
    if (from._has_bit(1)) {
      mutable_update_object()->::MsgsClientToSim::MsgMagicActionUpdateObject::MergeFrom(from.update_object());
    }
    if (from._has_bit(2)) {
      set_destroy_object(from.destroy_object());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgObjectMagicAction_action::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgObjectMagicAction_action::CopyFrom(const MsgObjectMagicAction_action& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjectMagicAction_action::IsInitialized() const {
  
  if (has_create_object()) {
    if (!this->create_object().IsInitialized()) return false;
  }
  if (has_update_object()) {
    if (!this->update_object().IsInitialized()) return false;
  }
  return true;
}

void MsgObjectMagicAction_action::Swap(MsgObjectMagicAction_action* other) {
  if (other != this) {
    std::swap(create_object_, other->create_object_);
    std::swap(update_object_, other->update_object_);
    std::swap(destroy_object_, other->destroy_object_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgObjectMagicAction_action::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgObjectMagicAction_action_descriptor_;
  metadata.reflection = MsgObjectMagicAction_action_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjectMagicAction::kActionFieldNumber;
#endif  // !_MSC_VER

MsgObjectMagicAction::MsgObjectMagicAction() {
  SharedCtor();
}

void MsgObjectMagicAction::InitAsDefaultInstance() {
  action_ = const_cast< ::MsgsClientToSim::MsgObjectMagicAction_action*>(&::MsgsClientToSim::MsgObjectMagicAction_action::default_instance());
}

MsgObjectMagicAction::MsgObjectMagicAction(const MsgObjectMagicAction& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgObjectMagicAction::SharedCtor() {
  _cached_size_ = 0;
  action_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjectMagicAction::~MsgObjectMagicAction() {
  SharedDtor();
}

void MsgObjectMagicAction::SharedDtor() {
  if (this != default_instance_) {
    delete action_;
  }
}

const ::google::protobuf::Descriptor* MsgObjectMagicAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjectMagicAction_descriptor_;
}

const MsgObjectMagicAction& MsgObjectMagicAction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgObjectMagicAction* MsgObjectMagicAction::default_instance_ = NULL;

MsgObjectMagicAction* MsgObjectMagicAction::New() const {
  return new MsgObjectMagicAction;
}

void MsgObjectMagicAction::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (action_ != NULL) action_->::MsgsClientToSim::MsgObjectMagicAction_action::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgObjectMagicAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MsgsClientToSim.MsgObjectMagicAction_action action = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_action()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgObjectMagicAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgObjectMagicAction::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .MsgsClientToSim.MsgObjectMagicAction_action action = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->action(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgObjectMagicAction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .MsgsClientToSim.MsgObjectMagicAction_action action = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->action(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgObjectMagicAction::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .MsgsClientToSim.MsgObjectMagicAction_action action = 1;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->action());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgObjectMagicAction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgObjectMagicAction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgObjectMagicAction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgObjectMagicAction::MergeFrom(const MsgObjectMagicAction& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_action()->::MsgsClientToSim::MsgObjectMagicAction_action::MergeFrom(from.action());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgObjectMagicAction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgObjectMagicAction::CopyFrom(const MsgObjectMagicAction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjectMagicAction::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_action()) {
    if (!this->action().IsInitialized()) return false;
  }
  return true;
}

void MsgObjectMagicAction::Swap(MsgObjectMagicAction* other) {
  if (other != this) {
    std::swap(action_, other->action_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgObjectMagicAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgObjectMagicAction_descriptor_;
  metadata.reflection = MsgObjectMagicAction_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLogSupplyPushFlow::kOidDonneurFieldNumber;
const int MsgLogSupplyPushFlow::kOidReceveurFieldNumber;
const int MsgLogSupplyPushFlow::kStocksFieldNumber;
#endif  // !_MSC_VER

MsgLogSupplyPushFlow::MsgLogSupplyPushFlow() {
  SharedCtor();
}

void MsgLogSupplyPushFlow::InitAsDefaultInstance() {
  stocks_ = const_cast< ::Common::SeqOfDotationStock*>(&::Common::SeqOfDotationStock::default_instance());
}

MsgLogSupplyPushFlow::MsgLogSupplyPushFlow(const MsgLogSupplyPushFlow& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLogSupplyPushFlow::SharedCtor() {
  _cached_size_ = 0;
  oid_donneur_ = 0u;
  oid_receveur_ = 0u;
  stocks_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLogSupplyPushFlow::~MsgLogSupplyPushFlow() {
  SharedDtor();
}

void MsgLogSupplyPushFlow::SharedDtor() {
  if (this != default_instance_) {
    delete stocks_;
  }
}

const ::google::protobuf::Descriptor* MsgLogSupplyPushFlow::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLogSupplyPushFlow_descriptor_;
}

const MsgLogSupplyPushFlow& MsgLogSupplyPushFlow::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgLogSupplyPushFlow* MsgLogSupplyPushFlow::default_instance_ = NULL;

MsgLogSupplyPushFlow* MsgLogSupplyPushFlow::New() const {
  return new MsgLogSupplyPushFlow;
}

void MsgLogSupplyPushFlow::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_donneur_ = 0u;
    oid_receveur_ = 0u;
    if (_has_bit(2)) {
      if (stocks_ != NULL) stocks_->::Common::SeqOfDotationStock::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLogSupplyPushFlow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 oid_donneur = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_donneur_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_oid_receveur;
        break;
      }
      
      // required uint32 oid_receveur = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_oid_receveur:
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_receveur_));
        _set_bit(1);
        if (input->ExpectTag(26)) goto parse_stocks;
        break;
      }
      
      // required .Common.SeqOfDotationStock stocks = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_stocks:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_stocks()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLogSupplyPushFlow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLogSupplyPushFlow::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required uint32 oid_donneur = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->oid_donneur(), output);
  }
  
  // required uint32 oid_receveur = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->oid_receveur(), output);
  }
  
  // required .Common.SeqOfDotationStock stocks = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->stocks(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLogSupplyPushFlow::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 oid_donneur = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->oid_donneur(), target);
  }
  
  // required uint32 oid_receveur = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->oid_receveur(), target);
  }
  
  // required .Common.SeqOfDotationStock stocks = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->stocks(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLogSupplyPushFlow::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 oid_donneur = 1;
    if (has_oid_donneur()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid_donneur());
    }
    
    // required uint32 oid_receveur = 2;
    if (has_oid_receveur()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid_receveur());
    }
    
    // required .Common.SeqOfDotationStock stocks = 3;
    if (has_stocks()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stocks());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLogSupplyPushFlow::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLogSupplyPushFlow* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLogSupplyPushFlow*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLogSupplyPushFlow::MergeFrom(const MsgLogSupplyPushFlow& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid_donneur(from.oid_donneur());
    }
    if (from._has_bit(1)) {
      set_oid_receveur(from.oid_receveur());
    }
    if (from._has_bit(2)) {
      mutable_stocks()->::Common::SeqOfDotationStock::MergeFrom(from.stocks());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLogSupplyPushFlow::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLogSupplyPushFlow::CopyFrom(const MsgLogSupplyPushFlow& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLogSupplyPushFlow::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  if (has_stocks()) {
    if (!this->stocks().IsInitialized()) return false;
  }
  return true;
}

void MsgLogSupplyPushFlow::Swap(MsgLogSupplyPushFlow* other) {
  if (other != this) {
    std::swap(oid_donneur_, other->oid_donneur_);
    std::swap(oid_receveur_, other->oid_receveur_);
    std::swap(stocks_, other->stocks_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLogSupplyPushFlow::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLogSupplyPushFlow_descriptor_;
  metadata.reflection = MsgLogSupplyPushFlow_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLogSupplyChangeQuotas::kOidDonneurFieldNumber;
const int MsgLogSupplyChangeQuotas::kOidReceveurFieldNumber;
const int MsgLogSupplyChangeQuotas::kQuotasFieldNumber;
#endif  // !_MSC_VER

MsgLogSupplyChangeQuotas::MsgLogSupplyChangeQuotas() {
  SharedCtor();
}

void MsgLogSupplyChangeQuotas::InitAsDefaultInstance() {
  quotas_ = const_cast< ::Common::SeqOfDotationQuota*>(&::Common::SeqOfDotationQuota::default_instance());
}

MsgLogSupplyChangeQuotas::MsgLogSupplyChangeQuotas(const MsgLogSupplyChangeQuotas& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLogSupplyChangeQuotas::SharedCtor() {
  _cached_size_ = 0;
  oid_donneur_ = 0u;
  oid_receveur_ = 0u;
  quotas_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLogSupplyChangeQuotas::~MsgLogSupplyChangeQuotas() {
  SharedDtor();
}

void MsgLogSupplyChangeQuotas::SharedDtor() {
  if (this != default_instance_) {
    delete quotas_;
  }
}

const ::google::protobuf::Descriptor* MsgLogSupplyChangeQuotas::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLogSupplyChangeQuotas_descriptor_;
}

const MsgLogSupplyChangeQuotas& MsgLogSupplyChangeQuotas::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgLogSupplyChangeQuotas* MsgLogSupplyChangeQuotas::default_instance_ = NULL;

MsgLogSupplyChangeQuotas* MsgLogSupplyChangeQuotas::New() const {
  return new MsgLogSupplyChangeQuotas;
}

void MsgLogSupplyChangeQuotas::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_donneur_ = 0u;
    oid_receveur_ = 0u;
    if (_has_bit(2)) {
      if (quotas_ != NULL) quotas_->::Common::SeqOfDotationQuota::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLogSupplyChangeQuotas::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 oid_donneur = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_donneur_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_oid_receveur;
        break;
      }
      
      // required uint32 oid_receveur = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_oid_receveur:
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_receveur_));
        _set_bit(1);
        if (input->ExpectTag(26)) goto parse_quotas;
        break;
      }
      
      // required .Common.SeqOfDotationQuota quotas = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_quotas:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_quotas()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLogSupplyChangeQuotas::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLogSupplyChangeQuotas::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required uint32 oid_donneur = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->oid_donneur(), output);
  }
  
  // required uint32 oid_receveur = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->oid_receveur(), output);
  }
  
  // required .Common.SeqOfDotationQuota quotas = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->quotas(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLogSupplyChangeQuotas::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 oid_donneur = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->oid_donneur(), target);
  }
  
  // required uint32 oid_receveur = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->oid_receveur(), target);
  }
  
  // required .Common.SeqOfDotationQuota quotas = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->quotas(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLogSupplyChangeQuotas::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 oid_donneur = 1;
    if (has_oid_donneur()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid_donneur());
    }
    
    // required uint32 oid_receveur = 2;
    if (has_oid_receveur()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid_receveur());
    }
    
    // required .Common.SeqOfDotationQuota quotas = 3;
    if (has_quotas()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->quotas());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLogSupplyChangeQuotas::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLogSupplyChangeQuotas* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLogSupplyChangeQuotas*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLogSupplyChangeQuotas::MergeFrom(const MsgLogSupplyChangeQuotas& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid_donneur(from.oid_donneur());
    }
    if (from._has_bit(1)) {
      set_oid_receveur(from.oid_receveur());
    }
    if (from._has_bit(2)) {
      mutable_quotas()->::Common::SeqOfDotationQuota::MergeFrom(from.quotas());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLogSupplyChangeQuotas::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLogSupplyChangeQuotas::CopyFrom(const MsgLogSupplyChangeQuotas& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLogSupplyChangeQuotas::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  if (has_quotas()) {
    if (!this->quotas().IsInitialized()) return false;
  }
  return true;
}

void MsgLogSupplyChangeQuotas::Swap(MsgLogSupplyChangeQuotas* other) {
  if (other != this) {
    std::swap(oid_donneur_, other->oid_donneur_);
    std::swap(oid_receveur_, other->oid_receveur_);
    std::swap(quotas_, other->quotas_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLogSupplyChangeQuotas::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLogSupplyChangeQuotas_descriptor_;
  metadata.reflection = MsgLogSupplyChangeQuotas_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgControlCheckPointSetFrequency::kFrequencyFieldNumber;
#endif  // !_MSC_VER

MsgControlCheckPointSetFrequency::MsgControlCheckPointSetFrequency() {
  SharedCtor();
}

void MsgControlCheckPointSetFrequency::InitAsDefaultInstance() {
}

MsgControlCheckPointSetFrequency::MsgControlCheckPointSetFrequency(const MsgControlCheckPointSetFrequency& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgControlCheckPointSetFrequency::SharedCtor() {
  _cached_size_ = 0;
  frequency_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgControlCheckPointSetFrequency::~MsgControlCheckPointSetFrequency() {
  SharedDtor();
}

void MsgControlCheckPointSetFrequency::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgControlCheckPointSetFrequency::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlCheckPointSetFrequency_descriptor_;
}

const MsgControlCheckPointSetFrequency& MsgControlCheckPointSetFrequency::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgControlCheckPointSetFrequency* MsgControlCheckPointSetFrequency::default_instance_ = NULL;

MsgControlCheckPointSetFrequency* MsgControlCheckPointSetFrequency::New() const {
  return new MsgControlCheckPointSetFrequency;
}

void MsgControlCheckPointSetFrequency::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    frequency_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgControlCheckPointSetFrequency::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 frequency = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &frequency_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgControlCheckPointSetFrequency::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgControlCheckPointSetFrequency::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 frequency = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->frequency(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgControlCheckPointSetFrequency::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 frequency = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->frequency(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgControlCheckPointSetFrequency::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 frequency = 1;
    if (has_frequency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->frequency());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgControlCheckPointSetFrequency::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgControlCheckPointSetFrequency* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgControlCheckPointSetFrequency*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgControlCheckPointSetFrequency::MergeFrom(const MsgControlCheckPointSetFrequency& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_frequency(from.frequency());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgControlCheckPointSetFrequency::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgControlCheckPointSetFrequency::CopyFrom(const MsgControlCheckPointSetFrequency& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgControlCheckPointSetFrequency::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgControlCheckPointSetFrequency::Swap(MsgControlCheckPointSetFrequency* other) {
  if (other != this) {
    std::swap(frequency_, other->frequency_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgControlCheckPointSetFrequency::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgControlCheckPointSetFrequency_descriptor_;
  metadata.reflection = MsgControlCheckPointSetFrequency_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgControlToggleVisionCones::kVisionConesFieldNumber;
#endif  // !_MSC_VER

MsgControlToggleVisionCones::MsgControlToggleVisionCones() {
  SharedCtor();
}

void MsgControlToggleVisionCones::InitAsDefaultInstance() {
}

MsgControlToggleVisionCones::MsgControlToggleVisionCones(const MsgControlToggleVisionCones& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgControlToggleVisionCones::SharedCtor() {
  _cached_size_ = 0;
  vision_cones_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgControlToggleVisionCones::~MsgControlToggleVisionCones() {
  SharedDtor();
}

void MsgControlToggleVisionCones::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgControlToggleVisionCones::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlToggleVisionCones_descriptor_;
}

const MsgControlToggleVisionCones& MsgControlToggleVisionCones::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgControlToggleVisionCones* MsgControlToggleVisionCones::default_instance_ = NULL;

MsgControlToggleVisionCones* MsgControlToggleVisionCones::New() const {
  return new MsgControlToggleVisionCones;
}

void MsgControlToggleVisionCones::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    vision_cones_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgControlToggleVisionCones::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool vision_cones = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &vision_cones_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgControlToggleVisionCones::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgControlToggleVisionCones::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required bool vision_cones = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->vision_cones(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgControlToggleVisionCones::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool vision_cones = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->vision_cones(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgControlToggleVisionCones::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool vision_cones = 1;
    if (has_vision_cones()) {
      total_size += 1 + 1;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgControlToggleVisionCones::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgControlToggleVisionCones* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgControlToggleVisionCones*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgControlToggleVisionCones::MergeFrom(const MsgControlToggleVisionCones& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_vision_cones(from.vision_cones());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgControlToggleVisionCones::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgControlToggleVisionCones::CopyFrom(const MsgControlToggleVisionCones& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgControlToggleVisionCones::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgControlToggleVisionCones::Swap(MsgControlToggleVisionCones* other) {
  if (other != this) {
    std::swap(vision_cones_, other->vision_cones_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgControlToggleVisionCones::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgControlToggleVisionCones_descriptor_;
  metadata.reflection = MsgControlToggleVisionCones_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgKnowledgeGroupCreationRequest::_default_type_;
#ifndef _MSC_VER
const int MsgKnowledgeGroupCreationRequest::kOidCampFieldNumber;
const int MsgKnowledgeGroupCreationRequest::kOidParentFieldNumber;
const int MsgKnowledgeGroupCreationRequest::kTypeFieldNumber;
#endif  // !_MSC_VER

MsgKnowledgeGroupCreationRequest::MsgKnowledgeGroupCreationRequest() {
  SharedCtor();
}

void MsgKnowledgeGroupCreationRequest::InitAsDefaultInstance() {
}

MsgKnowledgeGroupCreationRequest::MsgKnowledgeGroupCreationRequest(const MsgKnowledgeGroupCreationRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgKnowledgeGroupCreationRequest::SharedCtor() {
  _cached_size_ = 0;
  oid_camp_ = 0u;
  oid_parent_ = 0u;
  type_ = const_cast< ::std::string*>(&_default_type_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgKnowledgeGroupCreationRequest::~MsgKnowledgeGroupCreationRequest() {
  SharedDtor();
}

void MsgKnowledgeGroupCreationRequest::SharedDtor() {
  if (type_ != &_default_type_) {
    delete type_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgKnowledgeGroupCreationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgKnowledgeGroupCreationRequest_descriptor_;
}

const MsgKnowledgeGroupCreationRequest& MsgKnowledgeGroupCreationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgKnowledgeGroupCreationRequest* MsgKnowledgeGroupCreationRequest::default_instance_ = NULL;

MsgKnowledgeGroupCreationRequest* MsgKnowledgeGroupCreationRequest::New() const {
  return new MsgKnowledgeGroupCreationRequest;
}

void MsgKnowledgeGroupCreationRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_camp_ = 0u;
    oid_parent_ = 0u;
    if (_has_bit(2)) {
      if (type_ != &_default_type_) {
        type_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgKnowledgeGroupCreationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 oid_camp = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_camp_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_oid_parent;
        break;
      }
      
      // optional uint32 oid_parent = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_oid_parent:
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_parent_));
        _set_bit(1);
        if (input->ExpectTag(26)) goto parse_type;
        break;
      }
      
      // required string type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_type:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_type()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->type().data(), this->type().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgKnowledgeGroupCreationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgKnowledgeGroupCreationRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required uint32 oid_camp = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->oid_camp(), output);
  }
  
  // optional uint32 oid_parent = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->oid_parent(), output);
  }
  
  // required string type = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgKnowledgeGroupCreationRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 oid_camp = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->oid_camp(), target);
  }
  
  // optional uint32 oid_parent = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->oid_parent(), target);
  }
  
  // required string type = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgKnowledgeGroupCreationRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 oid_camp = 1;
    if (has_oid_camp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid_camp());
    }
    
    // optional uint32 oid_parent = 2;
    if (has_oid_parent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid_parent());
    }
    
    // required string type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgKnowledgeGroupCreationRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgKnowledgeGroupCreationRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgKnowledgeGroupCreationRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgKnowledgeGroupCreationRequest::MergeFrom(const MsgKnowledgeGroupCreationRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid_camp(from.oid_camp());
    }
    if (from._has_bit(1)) {
      set_oid_parent(from.oid_parent());
    }
    if (from._has_bit(2)) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgKnowledgeGroupCreationRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgKnowledgeGroupCreationRequest::CopyFrom(const MsgKnowledgeGroupCreationRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgKnowledgeGroupCreationRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  
  return true;
}

void MsgKnowledgeGroupCreationRequest::Swap(MsgKnowledgeGroupCreationRequest* other) {
  if (other != this) {
    std::swap(oid_camp_, other->oid_camp_);
    std::swap(oid_parent_, other->oid_parent_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgKnowledgeGroupCreationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgKnowledgeGroupCreationRequest_descriptor_;
  metadata.reflection = MsgKnowledgeGroupCreationRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgKnowledgeGroupUpdateRequest::_default_type_;
#ifndef _MSC_VER
const int MsgKnowledgeGroupUpdateRequest::kOidFieldNumber;
const int MsgKnowledgeGroupUpdateRequest::kOidCampFieldNumber;
const int MsgKnowledgeGroupUpdateRequest::kOidParentFieldNumber;
const int MsgKnowledgeGroupUpdateRequest::kEnabledFieldNumber;
const int MsgKnowledgeGroupUpdateRequest::kTypeFieldNumber;
#endif  // !_MSC_VER

MsgKnowledgeGroupUpdateRequest::MsgKnowledgeGroupUpdateRequest() {
  SharedCtor();
}

void MsgKnowledgeGroupUpdateRequest::InitAsDefaultInstance() {
}

MsgKnowledgeGroupUpdateRequest::MsgKnowledgeGroupUpdateRequest(const MsgKnowledgeGroupUpdateRequest& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgKnowledgeGroupUpdateRequest::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0u;
  oid_camp_ = 0u;
  oid_parent_ = 0u;
  enabled_ = false;
  type_ = const_cast< ::std::string*>(&_default_type_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgKnowledgeGroupUpdateRequest::~MsgKnowledgeGroupUpdateRequest() {
  SharedDtor();
}

void MsgKnowledgeGroupUpdateRequest::SharedDtor() {
  if (type_ != &_default_type_) {
    delete type_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgKnowledgeGroupUpdateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgKnowledgeGroupUpdateRequest_descriptor_;
}

const MsgKnowledgeGroupUpdateRequest& MsgKnowledgeGroupUpdateRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgKnowledgeGroupUpdateRequest* MsgKnowledgeGroupUpdateRequest::default_instance_ = NULL;

MsgKnowledgeGroupUpdateRequest* MsgKnowledgeGroupUpdateRequest::New() const {
  return new MsgKnowledgeGroupUpdateRequest;
}

void MsgKnowledgeGroupUpdateRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0u;
    oid_camp_ = 0u;
    oid_parent_ = 0u;
    enabled_ = false;
    if (_has_bit(4)) {
      if (type_ != &_default_type_) {
        type_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgKnowledgeGroupUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_oid_camp;
        break;
      }
      
      // optional uint32 oid_camp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_oid_camp:
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_camp_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_oid_parent;
        break;
      }
      
      // optional uint32 oid_parent = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_oid_parent:
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_parent_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_enabled;
        break;
      }
      
      // optional bool enabled = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_enabled:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &enabled_));
        _set_bit(3);
        if (input->ExpectTag(42)) goto parse_type;
        break;
      }
      
      // optional string type = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_type:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_type()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->type().data(), this->type().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgKnowledgeGroupUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgKnowledgeGroupUpdateRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->oid(), output);
  }
  
  // optional uint32 oid_camp = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->oid_camp(), output);
  }
  
  // optional uint32 oid_parent = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->oid_parent(), output);
  }
  
  // optional bool enabled = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->enabled(), output);
  }
  
  // optional string type = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgKnowledgeGroupUpdateRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->oid(), target);
  }
  
  // optional uint32 oid_camp = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->oid_camp(), target);
  }
  
  // optional uint32 oid_parent = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->oid_parent(), target);
  }
  
  // optional bool enabled = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->enabled(), target);
  }
  
  // optional string type = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgKnowledgeGroupUpdateRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid());
    }
    
    // optional uint32 oid_camp = 2;
    if (has_oid_camp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid_camp());
    }
    
    // optional uint32 oid_parent = 3;
    if (has_oid_parent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid_parent());
    }
    
    // optional bool enabled = 4;
    if (has_enabled()) {
      total_size += 1 + 1;
    }
    
    // optional string type = 5;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgKnowledgeGroupUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgKnowledgeGroupUpdateRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgKnowledgeGroupUpdateRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgKnowledgeGroupUpdateRequest::MergeFrom(const MsgKnowledgeGroupUpdateRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
    if (from._has_bit(1)) {
      set_oid_camp(from.oid_camp());
    }
    if (from._has_bit(2)) {
      set_oid_parent(from.oid_parent());
    }
    if (from._has_bit(3)) {
      set_enabled(from.enabled());
    }
    if (from._has_bit(4)) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgKnowledgeGroupUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgKnowledgeGroupUpdateRequest::CopyFrom(const MsgKnowledgeGroupUpdateRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgKnowledgeGroupUpdateRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgKnowledgeGroupUpdateRequest::Swap(MsgKnowledgeGroupUpdateRequest* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(oid_camp_, other->oid_camp_);
    std::swap(oid_parent_, other->oid_parent_);
    std::swap(enabled_, other->enabled_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgKnowledgeGroupUpdateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgKnowledgeGroupUpdateRequest_descriptor_;
  metadata.reflection = MsgKnowledgeGroupUpdateRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgClientToSim_Content::kControlStopFieldNumber;
const int MsgClientToSim_Content::kControlPauseFieldNumber;
const int MsgClientToSim_Content::kControlResumeFieldNumber;
const int MsgClientToSim_Content::kControlChangeTimeFactorFieldNumber;
const int MsgClientToSim_Content::kControlDateTimeChangeFieldNumber;
const int MsgClientToSim_Content::kControlMeteoFieldNumber;
const int MsgClientToSim_Content::kControlCheckpointSaveNowFieldNumber;
const int MsgClientToSim_Content::kControlCheckpointSetFrequencyFieldNumber;
const int MsgClientToSim_Content::kControlToggleVisionConesFieldNumber;
const int MsgClientToSim_Content::kUnitOrderFieldNumber;
const int MsgClientToSim_Content::kAutomatOrderFieldNumber;
const int MsgClientToSim_Content::kPopulationOrderFieldNumber;
const int MsgClientToSim_Content::kFragOrderFieldNumber;
const int MsgClientToSim_Content::kSetAutomatModeFieldNumber;
const int MsgClientToSim_Content::kUnitCreationRequestFieldNumber;
const int MsgClientToSim_Content::kUnitMagicActionFieldNumber;
const int MsgClientToSim_Content::kObjectMagicActionFieldNumber;
const int MsgClientToSim_Content::kChangeDiplomacyFieldNumber;
const int MsgClientToSim_Content::kKnowledgeMagicActionFieldNumber;
const int MsgClientToSim_Content::kKnowledgeGroupCreationRequestFieldNumber;
#endif  // !_MSC_VER

MsgClientToSim_Content::MsgClientToSim_Content() {
  SharedCtor();
}

void MsgClientToSim_Content::InitAsDefaultInstance() {
  control_stop_ = const_cast< ::Common::MsgControlStop*>(&::Common::MsgControlStop::default_instance());
  control_pause_ = const_cast< ::Common::MsgControlPause*>(&::Common::MsgControlPause::default_instance());
  control_resume_ = const_cast< ::Common::MsgControlResume*>(&::Common::MsgControlResume::default_instance());
  control_change_time_factor_ = const_cast< ::Common::MsgControlChangeTimeFactor*>(&::Common::MsgControlChangeTimeFactor::default_instance());
  control_date_time_change_ = const_cast< ::MsgsClientToSim::MsgControlDatetimeChange*>(&::MsgsClientToSim::MsgControlDatetimeChange::default_instance());
  control_meteo_ = const_cast< ::MsgsClientToSim::MsgControlMeteo*>(&::MsgsClientToSim::MsgControlMeteo::default_instance());
  control_checkpoint_save_now_ = const_cast< ::MsgsClientToSim::MsgControlCheckPointSaveNow*>(&::MsgsClientToSim::MsgControlCheckPointSaveNow::default_instance());
  control_checkpoint_set_frequency_ = const_cast< ::MsgsClientToSim::MsgControlCheckPointSetFrequency*>(&::MsgsClientToSim::MsgControlCheckPointSetFrequency::default_instance());
  control_toggle_vision_cones_ = const_cast< ::MsgsClientToSim::MsgControlToggleVisionCones*>(&::MsgsClientToSim::MsgControlToggleVisionCones::default_instance());
  unit_order_ = const_cast< ::Common::MsgUnitOrder*>(&::Common::MsgUnitOrder::default_instance());
  automat_order_ = const_cast< ::Common::MsgAutomatOrder*>(&::Common::MsgAutomatOrder::default_instance());
  population_order_ = const_cast< ::Common::MsgPopulationOrder*>(&::Common::MsgPopulationOrder::default_instance());
  frag_order_ = const_cast< ::MsgsClientToSim::MsgFragOrder*>(&::MsgsClientToSim::MsgFragOrder::default_instance());
  set_automat_mode_ = const_cast< ::MsgsClientToSim::MsgSetAutomatMode*>(&::MsgsClientToSim::MsgSetAutomatMode::default_instance());
  unit_creation_request_ = const_cast< ::MsgsClientToSim::MsgUnitCreationRequest*>(&::MsgsClientToSim::MsgUnitCreationRequest::default_instance());
  unit_magic_action_ = const_cast< ::MsgsClientToSim::MsgUnitMagicAction*>(&::MsgsClientToSim::MsgUnitMagicAction::default_instance());
  object_magic_action_ = const_cast< ::MsgsClientToSim::MsgObjectMagicAction*>(&::MsgsClientToSim::MsgObjectMagicAction::default_instance());
  change_diplomacy_ = const_cast< ::Common::MsgChangeDiplomacy*>(&::Common::MsgChangeDiplomacy::default_instance());
  knowledge_magic_action_ = const_cast< ::MsgsClientToSim::MsgKnowledgeMagicAction*>(&::MsgsClientToSim::MsgKnowledgeMagicAction::default_instance());
  knowledge_group_creation_request_ = const_cast< ::MsgsClientToSim::MsgKnowledgeGroupCreationRequest*>(&::MsgsClientToSim::MsgKnowledgeGroupCreationRequest::default_instance());
}

MsgClientToSim_Content::MsgClientToSim_Content(const MsgClientToSim_Content& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgClientToSim_Content::SharedCtor() {
  _cached_size_ = 0;
  control_stop_ = NULL;
  control_pause_ = NULL;
  control_resume_ = NULL;
  control_change_time_factor_ = NULL;
  control_date_time_change_ = NULL;
  control_meteo_ = NULL;
  control_checkpoint_save_now_ = NULL;
  control_checkpoint_set_frequency_ = NULL;
  control_toggle_vision_cones_ = NULL;
  unit_order_ = NULL;
  automat_order_ = NULL;
  population_order_ = NULL;
  frag_order_ = NULL;
  set_automat_mode_ = NULL;
  unit_creation_request_ = NULL;
  unit_magic_action_ = NULL;
  object_magic_action_ = NULL;
  change_diplomacy_ = NULL;
  knowledge_magic_action_ = NULL;
  knowledge_group_creation_request_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgClientToSim_Content::~MsgClientToSim_Content() {
  SharedDtor();
}

void MsgClientToSim_Content::SharedDtor() {
  if (this != default_instance_) {
    delete control_stop_;
    delete control_pause_;
    delete control_resume_;
    delete control_change_time_factor_;
    delete control_date_time_change_;
    delete control_meteo_;
    delete control_checkpoint_save_now_;
    delete control_checkpoint_set_frequency_;
    delete control_toggle_vision_cones_;
    delete unit_order_;
    delete automat_order_;
    delete population_order_;
    delete frag_order_;
    delete set_automat_mode_;
    delete unit_creation_request_;
    delete unit_magic_action_;
    delete object_magic_action_;
    delete change_diplomacy_;
    delete knowledge_magic_action_;
    delete knowledge_group_creation_request_;
  }
}

const ::google::protobuf::Descriptor* MsgClientToSim_Content::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgClientToSim_Content_descriptor_;
}

const MsgClientToSim_Content& MsgClientToSim_Content::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgClientToSim_Content* MsgClientToSim_Content::default_instance_ = NULL;

MsgClientToSim_Content* MsgClientToSim_Content::New() const {
  return new MsgClientToSim_Content;
}

void MsgClientToSim_Content::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (control_stop_ != NULL) control_stop_->::Common::MsgControlStop::Clear();
    }
    if (_has_bit(1)) {
      if (control_pause_ != NULL) control_pause_->::Common::MsgControlPause::Clear();
    }
    if (_has_bit(2)) {
      if (control_resume_ != NULL) control_resume_->::Common::MsgControlResume::Clear();
    }
    if (_has_bit(3)) {
      if (control_change_time_factor_ != NULL) control_change_time_factor_->::Common::MsgControlChangeTimeFactor::Clear();
    }
    if (_has_bit(4)) {
      if (control_date_time_change_ != NULL) control_date_time_change_->::MsgsClientToSim::MsgControlDatetimeChange::Clear();
    }
    if (_has_bit(5)) {
      if (control_meteo_ != NULL) control_meteo_->::MsgsClientToSim::MsgControlMeteo::Clear();
    }
    if (_has_bit(6)) {
      if (control_checkpoint_save_now_ != NULL) control_checkpoint_save_now_->::MsgsClientToSim::MsgControlCheckPointSaveNow::Clear();
    }
    if (_has_bit(7)) {
      if (control_checkpoint_set_frequency_ != NULL) control_checkpoint_set_frequency_->::MsgsClientToSim::MsgControlCheckPointSetFrequency::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (_has_bit(8)) {
      if (control_toggle_vision_cones_ != NULL) control_toggle_vision_cones_->::MsgsClientToSim::MsgControlToggleVisionCones::Clear();
    }
    if (_has_bit(9)) {
      if (unit_order_ != NULL) unit_order_->::Common::MsgUnitOrder::Clear();
    }
    if (_has_bit(10)) {
      if (automat_order_ != NULL) automat_order_->::Common::MsgAutomatOrder::Clear();
    }
    if (_has_bit(11)) {
      if (population_order_ != NULL) population_order_->::Common::MsgPopulationOrder::Clear();
    }
    if (_has_bit(12)) {
      if (frag_order_ != NULL) frag_order_->::MsgsClientToSim::MsgFragOrder::Clear();
    }
    if (_has_bit(13)) {
      if (set_automat_mode_ != NULL) set_automat_mode_->::MsgsClientToSim::MsgSetAutomatMode::Clear();
    }
    if (_has_bit(14)) {
      if (unit_creation_request_ != NULL) unit_creation_request_->::MsgsClientToSim::MsgUnitCreationRequest::Clear();
    }
    if (_has_bit(15)) {
      if (unit_magic_action_ != NULL) unit_magic_action_->::MsgsClientToSim::MsgUnitMagicAction::Clear();
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (_has_bit(16)) {
      if (object_magic_action_ != NULL) object_magic_action_->::MsgsClientToSim::MsgObjectMagicAction::Clear();
    }
    if (_has_bit(17)) {
      if (change_diplomacy_ != NULL) change_diplomacy_->::Common::MsgChangeDiplomacy::Clear();
    }
    if (_has_bit(18)) {
      if (knowledge_magic_action_ != NULL) knowledge_magic_action_->::MsgsClientToSim::MsgKnowledgeMagicAction::Clear();
    }
    if (_has_bit(19)) {
      if (knowledge_group_creation_request_ != NULL) knowledge_group_creation_request_->::MsgsClientToSim::MsgKnowledgeGroupCreationRequest::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgClientToSim_Content::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Common.MsgControlStop control_stop = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_stop()));
        if (input->ExpectTag(18)) goto parse_control_pause;
        break;
      }
      
      // optional .Common.MsgControlPause control_pause = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_control_pause:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_pause()));
        if (input->ExpectTag(26)) goto parse_control_resume;
        break;
      }
      
      // optional .Common.MsgControlResume control_resume = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_control_resume:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_resume()));
        if (input->ExpectTag(34)) goto parse_control_change_time_factor;
        break;
      }
      
      // optional .Common.MsgControlChangeTimeFactor control_change_time_factor = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_control_change_time_factor:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_change_time_factor()));
        if (input->ExpectTag(42)) goto parse_control_date_time_change;
        break;
      }
      
      // optional .MsgsClientToSim.MsgControlDatetimeChange control_date_time_change = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_control_date_time_change:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_date_time_change()));
        if (input->ExpectTag(50)) goto parse_control_meteo;
        break;
      }
      
      // optional .MsgsClientToSim.MsgControlMeteo control_meteo = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_control_meteo:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_meteo()));
        if (input->ExpectTag(58)) goto parse_control_checkpoint_save_now;
        break;
      }
      
      // optional .MsgsClientToSim.MsgControlCheckPointSaveNow control_checkpoint_save_now = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_control_checkpoint_save_now:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_checkpoint_save_now()));
        if (input->ExpectTag(66)) goto parse_control_checkpoint_set_frequency;
        break;
      }
      
      // optional .MsgsClientToSim.MsgControlCheckPointSetFrequency control_checkpoint_set_frequency = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_control_checkpoint_set_frequency:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_checkpoint_set_frequency()));
        if (input->ExpectTag(74)) goto parse_control_toggle_vision_cones;
        break;
      }
      
      // optional .MsgsClientToSim.MsgControlToggleVisionCones control_toggle_vision_cones = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_control_toggle_vision_cones:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_control_toggle_vision_cones()));
        if (input->ExpectTag(82)) goto parse_unit_order;
        break;
      }
      
      // optional .Common.MsgUnitOrder unit_order = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_unit_order:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_unit_order()));
        if (input->ExpectTag(90)) goto parse_automat_order;
        break;
      }
      
      // optional .Common.MsgAutomatOrder automat_order = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_automat_order:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_automat_order()));
        if (input->ExpectTag(98)) goto parse_population_order;
        break;
      }
      
      // optional .Common.MsgPopulationOrder population_order = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_population_order:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_population_order()));
        if (input->ExpectTag(106)) goto parse_frag_order;
        break;
      }
      
      // optional .MsgsClientToSim.MsgFragOrder frag_order = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_frag_order:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_frag_order()));
        if (input->ExpectTag(114)) goto parse_set_automat_mode;
        break;
      }
      
      // optional .MsgsClientToSim.MsgSetAutomatMode set_automat_mode = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_set_automat_mode:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_set_automat_mode()));
        if (input->ExpectTag(122)) goto parse_unit_creation_request;
        break;
      }
      
      // optional .MsgsClientToSim.MsgUnitCreationRequest unit_creation_request = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_unit_creation_request:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_unit_creation_request()));
        if (input->ExpectTag(130)) goto parse_unit_magic_action;
        break;
      }
      
      // optional .MsgsClientToSim.MsgUnitMagicAction unit_magic_action = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_unit_magic_action:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_unit_magic_action()));
        if (input->ExpectTag(138)) goto parse_object_magic_action;
        break;
      }
      
      // optional .MsgsClientToSim.MsgObjectMagicAction object_magic_action = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_object_magic_action:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_object_magic_action()));
        if (input->ExpectTag(146)) goto parse_change_diplomacy;
        break;
      }
      
      // optional .Common.MsgChangeDiplomacy change_diplomacy = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_change_diplomacy:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_change_diplomacy()));
        if (input->ExpectTag(154)) goto parse_knowledge_magic_action;
        break;
      }
      
      // optional .MsgsClientToSim.MsgKnowledgeMagicAction knowledge_magic_action = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_knowledge_magic_action:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_knowledge_magic_action()));
        if (input->ExpectTag(162)) goto parse_knowledge_group_creation_request;
        break;
      }
      
      // optional .MsgsClientToSim.MsgKnowledgeGroupCreationRequest knowledge_group_creation_request = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_knowledge_group_creation_request:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_knowledge_group_creation_request()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgClientToSim_Content::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgClientToSim_Content::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .Common.MsgControlStop control_stop = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->control_stop(), output);
  }
  
  // optional .Common.MsgControlPause control_pause = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->control_pause(), output);
  }
  
  // optional .Common.MsgControlResume control_resume = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->control_resume(), output);
  }
  
  // optional .Common.MsgControlChangeTimeFactor control_change_time_factor = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      4, this->control_change_time_factor(), output);
  }
  
  // optional .MsgsClientToSim.MsgControlDatetimeChange control_date_time_change = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      5, this->control_date_time_change(), output);
  }
  
  // optional .MsgsClientToSim.MsgControlMeteo control_meteo = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      6, this->control_meteo(), output);
  }
  
  // optional .MsgsClientToSim.MsgControlCheckPointSaveNow control_checkpoint_save_now = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      7, this->control_checkpoint_save_now(), output);
  }
  
  // optional .MsgsClientToSim.MsgControlCheckPointSetFrequency control_checkpoint_set_frequency = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      8, this->control_checkpoint_set_frequency(), output);
  }
  
  // optional .MsgsClientToSim.MsgControlToggleVisionCones control_toggle_vision_cones = 9;
  if (_has_bit(8)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      9, this->control_toggle_vision_cones(), output);
  }
  
  // optional .Common.MsgUnitOrder unit_order = 10;
  if (_has_bit(9)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      10, this->unit_order(), output);
  }
  
  // optional .Common.MsgAutomatOrder automat_order = 11;
  if (_has_bit(10)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      11, this->automat_order(), output);
  }
  
  // optional .Common.MsgPopulationOrder population_order = 12;
  if (_has_bit(11)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      12, this->population_order(), output);
  }
  
  // optional .MsgsClientToSim.MsgFragOrder frag_order = 13;
  if (_has_bit(12)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      13, this->frag_order(), output);
  }
  
  // optional .MsgsClientToSim.MsgSetAutomatMode set_automat_mode = 14;
  if (_has_bit(13)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      14, this->set_automat_mode(), output);
  }
  
  // optional .MsgsClientToSim.MsgUnitCreationRequest unit_creation_request = 15;
  if (_has_bit(14)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      15, this->unit_creation_request(), output);
  }
  
  // optional .MsgsClientToSim.MsgUnitMagicAction unit_magic_action = 16;
  if (_has_bit(15)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      16, this->unit_magic_action(), output);
  }
  
  // optional .MsgsClientToSim.MsgObjectMagicAction object_magic_action = 17;
  if (_has_bit(16)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      17, this->object_magic_action(), output);
  }
  
  // optional .Common.MsgChangeDiplomacy change_diplomacy = 18;
  if (_has_bit(17)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      18, this->change_diplomacy(), output);
  }
  
  // optional .MsgsClientToSim.MsgKnowledgeMagicAction knowledge_magic_action = 19;
  if (_has_bit(18)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      19, this->knowledge_magic_action(), output);
  }
  
  // optional .MsgsClientToSim.MsgKnowledgeGroupCreationRequest knowledge_group_creation_request = 20;
  if (_has_bit(19)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      20, this->knowledge_group_creation_request(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgClientToSim_Content::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .Common.MsgControlStop control_stop = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->control_stop(), target);
  }
  
  // optional .Common.MsgControlPause control_pause = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->control_pause(), target);
  }
  
  // optional .Common.MsgControlResume control_resume = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->control_resume(), target);
  }
  
  // optional .Common.MsgControlChangeTimeFactor control_change_time_factor = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->control_change_time_factor(), target);
  }
  
  // optional .MsgsClientToSim.MsgControlDatetimeChange control_date_time_change = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->control_date_time_change(), target);
  }
  
  // optional .MsgsClientToSim.MsgControlMeteo control_meteo = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->control_meteo(), target);
  }
  
  // optional .MsgsClientToSim.MsgControlCheckPointSaveNow control_checkpoint_save_now = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->control_checkpoint_save_now(), target);
  }
  
  // optional .MsgsClientToSim.MsgControlCheckPointSetFrequency control_checkpoint_set_frequency = 8;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->control_checkpoint_set_frequency(), target);
  }
  
  // optional .MsgsClientToSim.MsgControlToggleVisionCones control_toggle_vision_cones = 9;
  if (_has_bit(8)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->control_toggle_vision_cones(), target);
  }
  
  // optional .Common.MsgUnitOrder unit_order = 10;
  if (_has_bit(9)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->unit_order(), target);
  }
  
  // optional .Common.MsgAutomatOrder automat_order = 11;
  if (_has_bit(10)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->automat_order(), target);
  }
  
  // optional .Common.MsgPopulationOrder population_order = 12;
  if (_has_bit(11)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->population_order(), target);
  }
  
  // optional .MsgsClientToSim.MsgFragOrder frag_order = 13;
  if (_has_bit(12)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->frag_order(), target);
  }
  
  // optional .MsgsClientToSim.MsgSetAutomatMode set_automat_mode = 14;
  if (_has_bit(13)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->set_automat_mode(), target);
  }
  
  // optional .MsgsClientToSim.MsgUnitCreationRequest unit_creation_request = 15;
  if (_has_bit(14)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->unit_creation_request(), target);
  }
  
  // optional .MsgsClientToSim.MsgUnitMagicAction unit_magic_action = 16;
  if (_has_bit(15)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->unit_magic_action(), target);
  }
  
  // optional .MsgsClientToSim.MsgObjectMagicAction object_magic_action = 17;
  if (_has_bit(16)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->object_magic_action(), target);
  }
  
  // optional .Common.MsgChangeDiplomacy change_diplomacy = 18;
  if (_has_bit(17)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->change_diplomacy(), target);
  }
  
  // optional .MsgsClientToSim.MsgKnowledgeMagicAction knowledge_magic_action = 19;
  if (_has_bit(18)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->knowledge_magic_action(), target);
  }
  
  // optional .MsgsClientToSim.MsgKnowledgeGroupCreationRequest knowledge_group_creation_request = 20;
  if (_has_bit(19)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->knowledge_group_creation_request(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgClientToSim_Content::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Common.MsgControlStop control_stop = 1;
    if (has_control_stop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_stop());
    }
    
    // optional .Common.MsgControlPause control_pause = 2;
    if (has_control_pause()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_pause());
    }
    
    // optional .Common.MsgControlResume control_resume = 3;
    if (has_control_resume()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_resume());
    }
    
    // optional .Common.MsgControlChangeTimeFactor control_change_time_factor = 4;
    if (has_control_change_time_factor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_change_time_factor());
    }
    
    // optional .MsgsClientToSim.MsgControlDatetimeChange control_date_time_change = 5;
    if (has_control_date_time_change()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_date_time_change());
    }
    
    // optional .MsgsClientToSim.MsgControlMeteo control_meteo = 6;
    if (has_control_meteo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_meteo());
    }
    
    // optional .MsgsClientToSim.MsgControlCheckPointSaveNow control_checkpoint_save_now = 7;
    if (has_control_checkpoint_save_now()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_checkpoint_save_now());
    }
    
    // optional .MsgsClientToSim.MsgControlCheckPointSetFrequency control_checkpoint_set_frequency = 8;
    if (has_control_checkpoint_set_frequency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_checkpoint_set_frequency());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .MsgsClientToSim.MsgControlToggleVisionCones control_toggle_vision_cones = 9;
    if (has_control_toggle_vision_cones()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_toggle_vision_cones());
    }
    
    // optional .Common.MsgUnitOrder unit_order = 10;
    if (has_unit_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->unit_order());
    }
    
    // optional .Common.MsgAutomatOrder automat_order = 11;
    if (has_automat_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->automat_order());
    }
    
    // optional .Common.MsgPopulationOrder population_order = 12;
    if (has_population_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->population_order());
    }
    
    // optional .MsgsClientToSim.MsgFragOrder frag_order = 13;
    if (has_frag_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->frag_order());
    }
    
    // optional .MsgsClientToSim.MsgSetAutomatMode set_automat_mode = 14;
    if (has_set_automat_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->set_automat_mode());
    }
    
    // optional .MsgsClientToSim.MsgUnitCreationRequest unit_creation_request = 15;
    if (has_unit_creation_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->unit_creation_request());
    }
    
    // optional .MsgsClientToSim.MsgUnitMagicAction unit_magic_action = 16;
    if (has_unit_magic_action()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->unit_magic_action());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional .MsgsClientToSim.MsgObjectMagicAction object_magic_action = 17;
    if (has_object_magic_action()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->object_magic_action());
    }
    
    // optional .Common.MsgChangeDiplomacy change_diplomacy = 18;
    if (has_change_diplomacy()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->change_diplomacy());
    }
    
    // optional .MsgsClientToSim.MsgKnowledgeMagicAction knowledge_magic_action = 19;
    if (has_knowledge_magic_action()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->knowledge_magic_action());
    }
    
    // optional .MsgsClientToSim.MsgKnowledgeGroupCreationRequest knowledge_group_creation_request = 20;
    if (has_knowledge_group_creation_request()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->knowledge_group_creation_request());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgClientToSim_Content::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgClientToSim_Content* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgClientToSim_Content*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgClientToSim_Content::MergeFrom(const MsgClientToSim_Content& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_control_stop()->::Common::MsgControlStop::MergeFrom(from.control_stop());
    }
    if (from._has_bit(1)) {
      mutable_control_pause()->::Common::MsgControlPause::MergeFrom(from.control_pause());
    }
    if (from._has_bit(2)) {
      mutable_control_resume()->::Common::MsgControlResume::MergeFrom(from.control_resume());
    }
    if (from._has_bit(3)) {
      mutable_control_change_time_factor()->::Common::MsgControlChangeTimeFactor::MergeFrom(from.control_change_time_factor());
    }
    if (from._has_bit(4)) {
      mutable_control_date_time_change()->::MsgsClientToSim::MsgControlDatetimeChange::MergeFrom(from.control_date_time_change());
    }
    if (from._has_bit(5)) {
      mutable_control_meteo()->::MsgsClientToSim::MsgControlMeteo::MergeFrom(from.control_meteo());
    }
    if (from._has_bit(6)) {
      mutable_control_checkpoint_save_now()->::MsgsClientToSim::MsgControlCheckPointSaveNow::MergeFrom(from.control_checkpoint_save_now());
    }
    if (from._has_bit(7)) {
      mutable_control_checkpoint_set_frequency()->::MsgsClientToSim::MsgControlCheckPointSetFrequency::MergeFrom(from.control_checkpoint_set_frequency());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from._has_bit(8)) {
      mutable_control_toggle_vision_cones()->::MsgsClientToSim::MsgControlToggleVisionCones::MergeFrom(from.control_toggle_vision_cones());
    }
    if (from._has_bit(9)) {
      mutable_unit_order()->::Common::MsgUnitOrder::MergeFrom(from.unit_order());
    }
    if (from._has_bit(10)) {
      mutable_automat_order()->::Common::MsgAutomatOrder::MergeFrom(from.automat_order());
    }
    if (from._has_bit(11)) {
      mutable_population_order()->::Common::MsgPopulationOrder::MergeFrom(from.population_order());
    }
    if (from._has_bit(12)) {
      mutable_frag_order()->::MsgsClientToSim::MsgFragOrder::MergeFrom(from.frag_order());
    }
    if (from._has_bit(13)) {
      mutable_set_automat_mode()->::MsgsClientToSim::MsgSetAutomatMode::MergeFrom(from.set_automat_mode());
    }
    if (from._has_bit(14)) {
      mutable_unit_creation_request()->::MsgsClientToSim::MsgUnitCreationRequest::MergeFrom(from.unit_creation_request());
    }
    if (from._has_bit(15)) {
      mutable_unit_magic_action()->::MsgsClientToSim::MsgUnitMagicAction::MergeFrom(from.unit_magic_action());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from._has_bit(16)) {
      mutable_object_magic_action()->::MsgsClientToSim::MsgObjectMagicAction::MergeFrom(from.object_magic_action());
    }
    if (from._has_bit(17)) {
      mutable_change_diplomacy()->::Common::MsgChangeDiplomacy::MergeFrom(from.change_diplomacy());
    }
    if (from._has_bit(18)) {
      mutable_knowledge_magic_action()->::MsgsClientToSim::MsgKnowledgeMagicAction::MergeFrom(from.knowledge_magic_action());
    }
    if (from._has_bit(19)) {
      mutable_knowledge_group_creation_request()->::MsgsClientToSim::MsgKnowledgeGroupCreationRequest::MergeFrom(from.knowledge_group_creation_request());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgClientToSim_Content::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgClientToSim_Content::CopyFrom(const MsgClientToSim_Content& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgClientToSim_Content::IsInitialized() const {
  
  if (has_control_change_time_factor()) {
    if (!this->control_change_time_factor().IsInitialized()) return false;
  }
  if (has_control_date_time_change()) {
    if (!this->control_date_time_change().IsInitialized()) return false;
  }
  if (has_control_meteo()) {
    if (!this->control_meteo().IsInitialized()) return false;
  }
  if (has_control_checkpoint_set_frequency()) {
    if (!this->control_checkpoint_set_frequency().IsInitialized()) return false;
  }
  if (has_control_toggle_vision_cones()) {
    if (!this->control_toggle_vision_cones().IsInitialized()) return false;
  }
  if (has_unit_order()) {
    if (!this->unit_order().IsInitialized()) return false;
  }
  if (has_automat_order()) {
    if (!this->automat_order().IsInitialized()) return false;
  }
  if (has_population_order()) {
    if (!this->population_order().IsInitialized()) return false;
  }
  if (has_frag_order()) {
    if (!this->frag_order().IsInitialized()) return false;
  }
  if (has_set_automat_mode()) {
    if (!this->set_automat_mode().IsInitialized()) return false;
  }
  if (has_unit_creation_request()) {
    if (!this->unit_creation_request().IsInitialized()) return false;
  }
  if (has_unit_magic_action()) {
    if (!this->unit_magic_action().IsInitialized()) return false;
  }
  if (has_object_magic_action()) {
    if (!this->object_magic_action().IsInitialized()) return false;
  }
  if (has_change_diplomacy()) {
    if (!this->change_diplomacy().IsInitialized()) return false;
  }
  if (has_knowledge_magic_action()) {
    if (!this->knowledge_magic_action().IsInitialized()) return false;
  }
  if (has_knowledge_group_creation_request()) {
    if (!this->knowledge_group_creation_request().IsInitialized()) return false;
  }
  return true;
}

void MsgClientToSim_Content::Swap(MsgClientToSim_Content* other) {
  if (other != this) {
    std::swap(control_stop_, other->control_stop_);
    std::swap(control_pause_, other->control_pause_);
    std::swap(control_resume_, other->control_resume_);
    std::swap(control_change_time_factor_, other->control_change_time_factor_);
    std::swap(control_date_time_change_, other->control_date_time_change_);
    std::swap(control_meteo_, other->control_meteo_);
    std::swap(control_checkpoint_save_now_, other->control_checkpoint_save_now_);
    std::swap(control_checkpoint_set_frequency_, other->control_checkpoint_set_frequency_);
    std::swap(control_toggle_vision_cones_, other->control_toggle_vision_cones_);
    std::swap(unit_order_, other->unit_order_);
    std::swap(automat_order_, other->automat_order_);
    std::swap(population_order_, other->population_order_);
    std::swap(frag_order_, other->frag_order_);
    std::swap(set_automat_mode_, other->set_automat_mode_);
    std::swap(unit_creation_request_, other->unit_creation_request_);
    std::swap(unit_magic_action_, other->unit_magic_action_);
    std::swap(object_magic_action_, other->object_magic_action_);
    std::swap(change_diplomacy_, other->change_diplomacy_);
    std::swap(knowledge_magic_action_, other->knowledge_magic_action_);
    std::swap(knowledge_group_creation_request_, other->knowledge_group_creation_request_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgClientToSim_Content::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgClientToSim_Content_descriptor_;
  metadata.reflection = MsgClientToSim_Content_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MsgClientToSim::kContextFieldNumber;
const int MsgClientToSim::kMessageFieldNumber;
#endif  // !_MSC_VER

MsgClientToSim::MsgClientToSim() {
  SharedCtor();
}

void MsgClientToSim::InitAsDefaultInstance() {
  message_ = const_cast< ::MsgsClientToSim::MsgClientToSim_Content*>(&::MsgsClientToSim::MsgClientToSim_Content::default_instance());
}

MsgClientToSim::MsgClientToSim(const MsgClientToSim& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgClientToSim::SharedCtor() {
  _cached_size_ = 0;
  context_ = 0;
  message_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgClientToSim::~MsgClientToSim() {
  SharedDtor();
}

void MsgClientToSim::SharedDtor() {
  if (this != default_instance_) {
    delete message_;
  }
}

const ::google::protobuf::Descriptor* MsgClientToSim::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgClientToSim_descriptor_;
}

const MsgClientToSim& MsgClientToSim::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientToSim_2eproto();  return *default_instance_;
}

MsgClientToSim* MsgClientToSim::default_instance_ = NULL;

MsgClientToSim* MsgClientToSim::New() const {
  return new MsgClientToSim;
}

void MsgClientToSim::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    context_ = 0;
    if (_has_bit(1)) {
      if (message_ != NULL) message_->::MsgsClientToSim::MsgClientToSim_Content::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgClientToSim::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 context = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &context_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }
      
      // required .MsgsClientToSim.MsgClientToSim.Content message = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_message:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_message()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgClientToSim::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgClientToSim::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 context = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->context(), output);
  }
  
  // required .MsgsClientToSim.MsgClientToSim.Content message = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->message(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgClientToSim::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 context = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->context(), target);
  }
  
  // required .MsgsClientToSim.MsgClientToSim.Content message = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->message(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgClientToSim::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 context = 1 [default = 0];
    if (has_context()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->context());
    }
    
    // required .MsgsClientToSim.MsgClientToSim.Content message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->message());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgClientToSim::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgClientToSim* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgClientToSim*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgClientToSim::MergeFrom(const MsgClientToSim& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_context(from.context());
    }
    if (from._has_bit(1)) {
      mutable_message()->::MsgsClientToSim::MsgClientToSim_Content::MergeFrom(from.message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgClientToSim::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgClientToSim::CopyFrom(const MsgClientToSim& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgClientToSim::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  
  if (has_message()) {
    if (!this->message().IsInitialized()) return false;
  }
  return true;
}

void MsgClientToSim::Swap(MsgClientToSim* other) {
  if (other != this) {
    std::swap(context_, other->context_);
    std::swap(message_, other->message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgClientToSim::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgClientToSim_descriptor_;
  metadata.reflection = MsgClientToSim_reflection_;
  return metadata;
}


}  // namespace MsgsClientToSim
