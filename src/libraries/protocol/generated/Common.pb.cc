// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Common.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>

namespace Common {

namespace {

const ::google::protobuf::Descriptor* MsgTeam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgTeam_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgPopulation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgPopulation_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgAutomat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgAutomat_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgUnit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgUnit_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgUnitFire_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgUnitFire_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDotationStock_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDotationStock_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgHeading_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgHeading_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgUnitType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgUnitType_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgListOID_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgListOID_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDateTime_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDateTime_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDotationQuota_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDotationQuota_reflection_ = NULL;
const ::google::protobuf::Descriptor* SeqOfDotationQuota_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SeqOfDotationQuota_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgControlStop_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgControlStop_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgControlPause_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgControlPause_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgControlResume_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgControlResume_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLine_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLine_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgControlChangeTimeFactor_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgControlChangeTimeFactor_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgAutomatChangeKnowledgeGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgAutomatChangeKnowledgeGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgAutomatChangeLogisticLinks_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgAutomatChangeLogisticLinks_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgAutomatChangeSuperior_oid_superior_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgAutomatChangeSuperior_oid_superior_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgAutomatChangeSuperior_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgAutomatChangeSuperior_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgUnitChangeSuperior_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgUnitChangeSuperior_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgAutomatList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgAutomatList_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLogMedicalPriorities_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLogMedicalPriorities_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgPolygon_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgPolygon_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgPath_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgPath_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgPathList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgPathList_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgCoordLatLong_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgCoordLatLong_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgCoordLatLongList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgCoordLatLongList_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLocation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLocation_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgLocation_Geometry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgPoint_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgPoint_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgUnitList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgUnitList_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgPointList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgPointList_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgPolygonList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgPolygonList_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLocationList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLocationList_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgUnitKnowledge_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgUnitKnowledge_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgUnitKnowledgeList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgUnitKnowledgeList_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgObjectKnowledge_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgObjectKnowledge_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgObjectKnowledgeList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgObjectKnowledgeList_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObstacleType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObstacleType_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ObstacleType_DemolitionTargetType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgPlannedWork_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgPlannedWork_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgPlannedWorkList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgPlannedWorkList_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLogMaintenancePriorities_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLogMaintenancePriorities_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMissionObjective_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMissionObjective_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMissionObjectiveList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMissionObjectiveList_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLimaOrder_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLimaOrder_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgLimaOrder_Function_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgLimasOrder_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLimasOrder_reflection_ = NULL;
const ::google::protobuf::Descriptor* SeqOfDotationStock_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SeqOfDotationStock_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgPopulationKnowledge_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgPopulationKnowledge_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgIntelligence_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgIntelligence_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgIntelligenceList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgIntelligenceList_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgChangeDiplomacy_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgChangeDiplomacy_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgAtlasNature_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgAtlasNature_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgAtlasNature_AtlasNature_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgEquipmentType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgEquipmentType_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDotationType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDotationType_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgUrbanBlock_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgUrbanBlock_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgUrbanKnowledge_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgUrbanKnowledge_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMissionParameter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMissionParameter_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMissionParameter_Value_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMissionParameter_Value_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMissionParameters_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMissionParameters_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgShape_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgShape_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgChatTarget_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgChatTarget_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgTextMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgTextMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgTacticalLine_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgTacticalLine_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgTacticalLine_Diffusion_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgTacticalLine_Diffusion_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgFormation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgFormation_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgFormationCreation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgFormationCreation_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgUnitOrder_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgUnitOrder_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgAutomatOrder_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgAutomatOrder_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgPopulationOrder_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgPopulationOrder_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgObjectAttributeConstruction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgObjectAttributeConstruction_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgObjectAttributeMine_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgObjectAttributeMine_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgObjectAttributeLogistic_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgObjectAttributeLogistic_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgObjectAttributeInteractionHeight_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgObjectAttributeInteractionHeight_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgObjectAttributeObstacle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgObjectAttributeObstacle_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgObjectAttributeActivityTime_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgObjectAttributeActivityTime_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgObjectAttributeBypass_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgObjectAttributeBypass_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgObjectAttributeNBC_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgObjectAttributeNBC_reflection_ = NULL;
const ::google::protobuf::Descriptor* StockResource_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StockResource_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgObjectAttributeStock_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgObjectAttributeStock_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgObjectAttributeCrossingSite_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgObjectAttributeCrossingSite_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgObjectAttributeSupplyRoute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgObjectAttributeSupplyRoute_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLocatedQuantity_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLocatedQuantity_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLocatedQuantityList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLocatedQuantityList_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgObjectAttributeToxicCloud_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgObjectAttributeToxicCloud_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgObjectAttributeFire_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgObjectAttributeFire_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgObjectAttributeMedicalTreatment_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgObjectAttributeMedicalTreatment_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgObjectAttributeNBCType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgObjectAttributeNBCType_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgObjectAttributes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgObjectAttributes_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgNote_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgNote_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMeteoAttributes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMeteoAttributes_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EnumDotationFamily_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnumAmmunitionFamily_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnumPrecipitationType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnumLogMaintenanceHandlingStatus_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnumLogMedicalHandlingStatus_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnumUnitVisibility_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnumFireEffectType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnumSimulationState_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnumMeetingEngagementStatus_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnumOperationalStatus_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgStartUnitFire_type_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnumAutomatMode_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnumPopulationAttitude_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnumUnitTiredness_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnumUnitMorale_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnumUnitExperience_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnumHumanRank_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnumDiplomacy_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnumHumanWound_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnumLogMaintenanceRegimeTravail_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnumNatureLevel_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_Common_2eproto() {
  protobuf_AddDesc_Common_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Common.proto");
  GOOGLE_CHECK(file != NULL);
  MsgTeam_descriptor_ = file->message_type(0);
  static const int MsgTeam_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTeam, oid_),
  };
  MsgTeam_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgTeam_descriptor_,
      MsgTeam::default_instance_,
      MsgTeam_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTeam, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTeam, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgTeam));
  MsgPopulation_descriptor_ = file->message_type(1);
  static const int MsgPopulation_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPopulation, oid_),
  };
  MsgPopulation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgPopulation_descriptor_,
      MsgPopulation::default_instance_,
      MsgPopulation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPopulation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPopulation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgPopulation));
  MsgAutomat_descriptor_ = file->message_type(2);
  static const int MsgAutomat_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomat, oid_),
  };
  MsgAutomat_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgAutomat_descriptor_,
      MsgAutomat::default_instance_,
      MsgAutomat_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomat, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomat, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgAutomat));
  MsgUnit_descriptor_ = file->message_type(3);
  static const int MsgUnit_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnit, oid_),
  };
  MsgUnit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgUnit_descriptor_,
      MsgUnit::default_instance_,
      MsgUnit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgUnit));
  MsgUnitFire_descriptor_ = file->message_type(4);
  static const int MsgUnitFire_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitFire, oid_),
  };
  MsgUnitFire_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgUnitFire_descriptor_,
      MsgUnitFire::default_instance_,
      MsgUnitFire_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitFire, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitFire, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgUnitFire));
  MsgDotationStock_descriptor_ = file->message_type(5);
  static const int MsgDotationStock_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDotationStock, ressource_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDotationStock, quantite_disponible_),
  };
  MsgDotationStock_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDotationStock_descriptor_,
      MsgDotationStock::default_instance_,
      MsgDotationStock_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDotationStock, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDotationStock, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDotationStock));
  MsgHeading_descriptor_ = file->message_type(6);
  static const int MsgHeading_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHeading, heading_),
  };
  MsgHeading_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgHeading_descriptor_,
      MsgHeading::default_instance_,
      MsgHeading_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHeading, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHeading, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgHeading));
  MsgUnitType_descriptor_ = file->message_type(7);
  static const int MsgUnitType_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitType, type_),
  };
  MsgUnitType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgUnitType_descriptor_,
      MsgUnitType::default_instance_,
      MsgUnitType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgUnitType));
  MsgListOID_descriptor_ = file->message_type(8);
  static const int MsgListOID_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgListOID, elem_),
  };
  MsgListOID_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgListOID_descriptor_,
      MsgListOID::default_instance_,
      MsgListOID_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgListOID, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgListOID, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgListOID));
  MsgDateTime_descriptor_ = file->message_type(9);
  static const int MsgDateTime_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDateTime, data_),
  };
  MsgDateTime_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDateTime_descriptor_,
      MsgDateTime::default_instance_,
      MsgDateTime_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDateTime, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDateTime, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDateTime));
  MsgDotationQuota_descriptor_ = file->message_type(10);
  static const int MsgDotationQuota_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDotationQuota, ressource_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDotationQuota, quota_disponible_),
  };
  MsgDotationQuota_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDotationQuota_descriptor_,
      MsgDotationQuota::default_instance_,
      MsgDotationQuota_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDotationQuota, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDotationQuota, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDotationQuota));
  SeqOfDotationQuota_descriptor_ = file->message_type(11);
  static const int SeqOfDotationQuota_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeqOfDotationQuota, elem_),
  };
  SeqOfDotationQuota_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SeqOfDotationQuota_descriptor_,
      SeqOfDotationQuota::default_instance_,
      SeqOfDotationQuota_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeqOfDotationQuota, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeqOfDotationQuota, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SeqOfDotationQuota));
  MsgControlStop_descriptor_ = file->message_type(12);
  static const int MsgControlStop_offsets_[1] = {
  };
  MsgControlStop_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgControlStop_descriptor_,
      MsgControlStop::default_instance_,
      MsgControlStop_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlStop, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlStop, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgControlStop));
  MsgControlPause_descriptor_ = file->message_type(13);
  static const int MsgControlPause_offsets_[1] = {
  };
  MsgControlPause_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgControlPause_descriptor_,
      MsgControlPause::default_instance_,
      MsgControlPause_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlPause, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlPause, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgControlPause));
  MsgControlResume_descriptor_ = file->message_type(14);
  static const int MsgControlResume_offsets_[1] = {
  };
  MsgControlResume_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgControlResume_descriptor_,
      MsgControlResume::default_instance_,
      MsgControlResume_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlResume, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlResume, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgControlResume));
  MsgLine_descriptor_ = file->message_type(15);
  static const int MsgLine_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLine, location_),
  };
  MsgLine_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLine_descriptor_,
      MsgLine::default_instance_,
      MsgLine_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLine, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLine, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLine));
  MsgControlChangeTimeFactor_descriptor_ = file->message_type(16);
  static const int MsgControlChangeTimeFactor_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlChangeTimeFactor, time_factor_),
  };
  MsgControlChangeTimeFactor_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgControlChangeTimeFactor_descriptor_,
      MsgControlChangeTimeFactor::default_instance_,
      MsgControlChangeTimeFactor_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlChangeTimeFactor, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgControlChangeTimeFactor, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgControlChangeTimeFactor));
  MsgAutomatChangeKnowledgeGroup_descriptor_ = file->message_type(17);
  static const int MsgAutomatChangeKnowledgeGroup_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomatChangeKnowledgeGroup, oid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomatChangeKnowledgeGroup, oid_camp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomatChangeKnowledgeGroup, oid_groupe_connaissance_),
  };
  MsgAutomatChangeKnowledgeGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgAutomatChangeKnowledgeGroup_descriptor_,
      MsgAutomatChangeKnowledgeGroup::default_instance_,
      MsgAutomatChangeKnowledgeGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomatChangeKnowledgeGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomatChangeKnowledgeGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgAutomatChangeKnowledgeGroup));
  MsgAutomatChangeLogisticLinks_descriptor_ = file->message_type(18);
  static const int MsgAutomatChangeLogisticLinks_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomatChangeLogisticLinks, oid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomatChangeLogisticLinks, oid_tc2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomatChangeLogisticLinks, oid_maintenance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomatChangeLogisticLinks, oid_sante_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomatChangeLogisticLinks, oid_ravitaillement_),
  };
  MsgAutomatChangeLogisticLinks_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgAutomatChangeLogisticLinks_descriptor_,
      MsgAutomatChangeLogisticLinks::default_instance_,
      MsgAutomatChangeLogisticLinks_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomatChangeLogisticLinks, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomatChangeLogisticLinks, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgAutomatChangeLogisticLinks));
  MsgAutomatChangeSuperior_oid_superior_descriptor_ = file->message_type(19);
  static const int MsgAutomatChangeSuperior_oid_superior_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomatChangeSuperior_oid_superior, formation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomatChangeSuperior_oid_superior, automate_),
  };
  MsgAutomatChangeSuperior_oid_superior_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgAutomatChangeSuperior_oid_superior_descriptor_,
      MsgAutomatChangeSuperior_oid_superior::default_instance_,
      MsgAutomatChangeSuperior_oid_superior_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomatChangeSuperior_oid_superior, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomatChangeSuperior_oid_superior, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgAutomatChangeSuperior_oid_superior));
  MsgAutomatChangeSuperior_descriptor_ = file->message_type(20);
  static const int MsgAutomatChangeSuperior_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomatChangeSuperior, oid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomatChangeSuperior, oid_superior_),
  };
  MsgAutomatChangeSuperior_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgAutomatChangeSuperior_descriptor_,
      MsgAutomatChangeSuperior::default_instance_,
      MsgAutomatChangeSuperior_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomatChangeSuperior, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomatChangeSuperior, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgAutomatChangeSuperior));
  MsgUnitChangeSuperior_descriptor_ = file->message_type(21);
  static const int MsgUnitChangeSuperior_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitChangeSuperior, oid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitChangeSuperior, oid_automate_),
  };
  MsgUnitChangeSuperior_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgUnitChangeSuperior_descriptor_,
      MsgUnitChangeSuperior::default_instance_,
      MsgUnitChangeSuperior_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitChangeSuperior, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitChangeSuperior, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgUnitChangeSuperior));
  MsgAutomatList_descriptor_ = file->message_type(22);
  static const int MsgAutomatList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomatList, elem_),
  };
  MsgAutomatList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgAutomatList_descriptor_,
      MsgAutomatList::default_instance_,
      MsgAutomatList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomatList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomatList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgAutomatList));
  MsgLogMedicalPriorities_descriptor_ = file->message_type(23);
  static const int MsgLogMedicalPriorities_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogMedicalPriorities, elem_),
  };
  MsgLogMedicalPriorities_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLogMedicalPriorities_descriptor_,
      MsgLogMedicalPriorities::default_instance_,
      MsgLogMedicalPriorities_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogMedicalPriorities, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogMedicalPriorities, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLogMedicalPriorities));
  MsgPolygon_descriptor_ = file->message_type(24);
  static const int MsgPolygon_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPolygon, location_),
  };
  MsgPolygon_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgPolygon_descriptor_,
      MsgPolygon::default_instance_,
      MsgPolygon_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPolygon, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPolygon, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgPolygon));
  MsgPath_descriptor_ = file->message_type(25);
  static const int MsgPath_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPath, location_),
  };
  MsgPath_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgPath_descriptor_,
      MsgPath::default_instance_,
      MsgPath_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPath, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPath, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgPath));
  MsgPathList_descriptor_ = file->message_type(26);
  static const int MsgPathList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPathList, elem_),
  };
  MsgPathList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgPathList_descriptor_,
      MsgPathList::default_instance_,
      MsgPathList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPathList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPathList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgPathList));
  MsgCoordLatLong_descriptor_ = file->message_type(27);
  static const int MsgCoordLatLong_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCoordLatLong, latitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCoordLatLong, longitude_),
  };
  MsgCoordLatLong_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgCoordLatLong_descriptor_,
      MsgCoordLatLong::default_instance_,
      MsgCoordLatLong_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCoordLatLong, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCoordLatLong, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgCoordLatLong));
  MsgCoordLatLongList_descriptor_ = file->message_type(28);
  static const int MsgCoordLatLongList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCoordLatLongList, elem_),
  };
  MsgCoordLatLongList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgCoordLatLongList_descriptor_,
      MsgCoordLatLongList::default_instance_,
      MsgCoordLatLongList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCoordLatLongList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCoordLatLongList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgCoordLatLongList));
  MsgLocation_descriptor_ = file->message_type(29);
  static const int MsgLocation_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLocation, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLocation, coordinates_),
  };
  MsgLocation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLocation_descriptor_,
      MsgLocation::default_instance_,
      MsgLocation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLocation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLocation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLocation));
  MsgLocation_Geometry_descriptor_ = MsgLocation_descriptor_->enum_type(0);
  MsgPoint_descriptor_ = file->message_type(30);
  static const int MsgPoint_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPoint, location_),
  };
  MsgPoint_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgPoint_descriptor_,
      MsgPoint::default_instance_,
      MsgPoint_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPoint, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPoint, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgPoint));
  MsgUnitList_descriptor_ = file->message_type(31);
  static const int MsgUnitList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitList, elem_),
  };
  MsgUnitList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgUnitList_descriptor_,
      MsgUnitList::default_instance_,
      MsgUnitList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgUnitList));
  MsgPointList_descriptor_ = file->message_type(32);
  static const int MsgPointList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPointList, elem_),
  };
  MsgPointList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgPointList_descriptor_,
      MsgPointList::default_instance_,
      MsgPointList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPointList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPointList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgPointList));
  MsgPolygonList_descriptor_ = file->message_type(33);
  static const int MsgPolygonList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPolygonList, elem_),
  };
  MsgPolygonList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgPolygonList_descriptor_,
      MsgPolygonList::default_instance_,
      MsgPolygonList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPolygonList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPolygonList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgPolygonList));
  MsgLocationList_descriptor_ = file->message_type(34);
  static const int MsgLocationList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLocationList, elem_),
  };
  MsgLocationList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLocationList_descriptor_,
      MsgLocationList::default_instance_,
      MsgLocationList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLocationList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLocationList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLocationList));
  MsgUnitKnowledge_descriptor_ = file->message_type(35);
  static const int MsgUnitKnowledge_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitKnowledge, oid_),
  };
  MsgUnitKnowledge_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgUnitKnowledge_descriptor_,
      MsgUnitKnowledge::default_instance_,
      MsgUnitKnowledge_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitKnowledge, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitKnowledge, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgUnitKnowledge));
  MsgUnitKnowledgeList_descriptor_ = file->message_type(36);
  static const int MsgUnitKnowledgeList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitKnowledgeList, elem_),
  };
  MsgUnitKnowledgeList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgUnitKnowledgeList_descriptor_,
      MsgUnitKnowledgeList::default_instance_,
      MsgUnitKnowledgeList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitKnowledgeList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitKnowledgeList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgUnitKnowledgeList));
  MsgObjectKnowledge_descriptor_ = file->message_type(37);
  static const int MsgObjectKnowledge_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectKnowledge, oid_),
  };
  MsgObjectKnowledge_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgObjectKnowledge_descriptor_,
      MsgObjectKnowledge::default_instance_,
      MsgObjectKnowledge_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectKnowledge, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectKnowledge, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgObjectKnowledge));
  MsgObjectKnowledgeList_descriptor_ = file->message_type(38);
  static const int MsgObjectKnowledgeList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectKnowledgeList, elem_),
  };
  MsgObjectKnowledgeList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgObjectKnowledgeList_descriptor_,
      MsgObjectKnowledgeList::default_instance_,
      MsgObjectKnowledgeList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectKnowledgeList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectKnowledgeList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgObjectKnowledgeList));
  ObstacleType_descriptor_ = file->message_type(39);
  static const int ObstacleType_offsets_[1] = {
  };
  ObstacleType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ObstacleType_descriptor_,
      ObstacleType::default_instance_,
      ObstacleType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObstacleType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObstacleType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ObstacleType));
  ObstacleType_DemolitionTargetType_descriptor_ = ObstacleType_descriptor_->enum_type(0);
  MsgPlannedWork_descriptor_ = file->message_type(40);
  static const int MsgPlannedWork_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPlannedWork, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPlannedWork, position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPlannedWork, type_obstacle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPlannedWork, densite_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPlannedWork, tc2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPlannedWork, activity_time_),
  };
  MsgPlannedWork_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgPlannedWork_descriptor_,
      MsgPlannedWork::default_instance_,
      MsgPlannedWork_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPlannedWork, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPlannedWork, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgPlannedWork));
  MsgPlannedWorkList_descriptor_ = file->message_type(41);
  static const int MsgPlannedWorkList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPlannedWorkList, elem_),
  };
  MsgPlannedWorkList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgPlannedWorkList_descriptor_,
      MsgPlannedWorkList::default_instance_,
      MsgPlannedWorkList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPlannedWorkList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPlannedWorkList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgPlannedWorkList));
  MsgLogMaintenancePriorities_descriptor_ = file->message_type(42);
  static const int MsgLogMaintenancePriorities_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogMaintenancePriorities, elem_),
  };
  MsgLogMaintenancePriorities_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLogMaintenancePriorities_descriptor_,
      MsgLogMaintenancePriorities::default_instance_,
      MsgLogMaintenancePriorities_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogMaintenancePriorities, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogMaintenancePriorities, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLogMaintenancePriorities));
  MsgMissionObjective_descriptor_ = file->message_type(43);
  static const int MsgMissionObjective_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionObjective, localisation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionObjective, horaire_),
  };
  MsgMissionObjective_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMissionObjective_descriptor_,
      MsgMissionObjective::default_instance_,
      MsgMissionObjective_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionObjective, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionObjective, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMissionObjective));
  MsgMissionObjectiveList_descriptor_ = file->message_type(44);
  static const int MsgMissionObjectiveList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionObjectiveList, elem_),
  };
  MsgMissionObjectiveList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMissionObjectiveList_descriptor_,
      MsgMissionObjectiveList::default_instance_,
      MsgMissionObjectiveList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionObjectiveList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionObjectiveList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMissionObjectiveList));
  MsgLimaOrder_descriptor_ = file->message_type(45);
  static const int MsgLimaOrder_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaOrder, lima_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaOrder, horaire_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaOrder, fonctions_),
  };
  MsgLimaOrder_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLimaOrder_descriptor_,
      MsgLimaOrder::default_instance_,
      MsgLimaOrder_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaOrder, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimaOrder, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLimaOrder));
  MsgLimaOrder_Function_descriptor_ = MsgLimaOrder_descriptor_->enum_type(0);
  MsgLimasOrder_descriptor_ = file->message_type(46);
  static const int MsgLimasOrder_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimasOrder, elem_),
  };
  MsgLimasOrder_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLimasOrder_descriptor_,
      MsgLimasOrder::default_instance_,
      MsgLimasOrder_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimasOrder, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLimasOrder, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLimasOrder));
  SeqOfDotationStock_descriptor_ = file->message_type(47);
  static const int SeqOfDotationStock_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeqOfDotationStock, elem_),
  };
  SeqOfDotationStock_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SeqOfDotationStock_descriptor_,
      SeqOfDotationStock::default_instance_,
      SeqOfDotationStock_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeqOfDotationStock, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeqOfDotationStock, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SeqOfDotationStock));
  MsgPopulationKnowledge_descriptor_ = file->message_type(48);
  static const int MsgPopulationKnowledge_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPopulationKnowledge, oid_),
  };
  MsgPopulationKnowledge_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgPopulationKnowledge_descriptor_,
      MsgPopulationKnowledge::default_instance_,
      MsgPopulationKnowledge_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPopulationKnowledge, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPopulationKnowledge, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgPopulationKnowledge));
  MsgIntelligence_descriptor_ = file->message_type(49);
  static const int MsgIntelligence_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligence, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligence, nature_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligence, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligence, embarked_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligence, location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligence, diplomacy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligence, formation_),
  };
  MsgIntelligence_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgIntelligence_descriptor_,
      MsgIntelligence::default_instance_,
      MsgIntelligence_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligence, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligence, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgIntelligence));
  MsgIntelligenceList_descriptor_ = file->message_type(50);
  static const int MsgIntelligenceList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceList, elem_),
  };
  MsgIntelligenceList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgIntelligenceList_descriptor_,
      MsgIntelligenceList::default_instance_,
      MsgIntelligenceList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntelligenceList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgIntelligenceList));
  MsgChangeDiplomacy_descriptor_ = file->message_type(51);
  static const int MsgChangeDiplomacy_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgChangeDiplomacy, oid_camp1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgChangeDiplomacy, oid_camp2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgChangeDiplomacy, diplomatie_),
  };
  MsgChangeDiplomacy_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgChangeDiplomacy_descriptor_,
      MsgChangeDiplomacy::default_instance_,
      MsgChangeDiplomacy_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgChangeDiplomacy, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgChangeDiplomacy, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgChangeDiplomacy));
  MsgAtlasNature_descriptor_ = file->message_type(52);
  static const int MsgAtlasNature_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAtlasNature, nature_),
  };
  MsgAtlasNature_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgAtlasNature_descriptor_,
      MsgAtlasNature::default_instance_,
      MsgAtlasNature_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAtlasNature, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAtlasNature, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgAtlasNature));
  MsgAtlasNature_AtlasNature_descriptor_ = MsgAtlasNature_descriptor_->enum_type(0);
  MsgEquipmentType_descriptor_ = file->message_type(53);
  static const int MsgEquipmentType_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEquipmentType, equipment_),
  };
  MsgEquipmentType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgEquipmentType_descriptor_,
      MsgEquipmentType::default_instance_,
      MsgEquipmentType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEquipmentType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEquipmentType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgEquipmentType));
  MsgDotationType_descriptor_ = file->message_type(54);
  static const int MsgDotationType_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDotationType, oid_),
  };
  MsgDotationType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDotationType_descriptor_,
      MsgDotationType::default_instance_,
      MsgDotationType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDotationType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDotationType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDotationType));
  MsgUrbanBlock_descriptor_ = file->message_type(55);
  static const int MsgUrbanBlock_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUrbanBlock, oid_),
  };
  MsgUrbanBlock_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgUrbanBlock_descriptor_,
      MsgUrbanBlock::default_instance_,
      MsgUrbanBlock_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUrbanBlock, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUrbanBlock, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgUrbanBlock));
  MsgUrbanKnowledge_descriptor_ = file->message_type(56);
  static const int MsgUrbanKnowledge_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUrbanKnowledge, oid_),
  };
  MsgUrbanKnowledge_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgUrbanKnowledge_descriptor_,
      MsgUrbanKnowledge::default_instance_,
      MsgUrbanKnowledge_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUrbanKnowledge, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUrbanKnowledge, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgUrbanKnowledge));
  MsgMissionParameter_descriptor_ = file->message_type(57);
  static const int MsgMissionParameter_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter, null_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter, value_),
  };
  MsgMissionParameter_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMissionParameter_descriptor_,
      MsgMissionParameter::default_instance_,
      MsgMissionParameter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMissionParameter));
  MsgMissionParameter_Value_descriptor_ = MsgMissionParameter_descriptor_->nested_type(0);
  static const int MsgMissionParameter_Value_offsets_[43] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, abool_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, areal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, enumeration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, pathlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, pointlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, polygon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, polygonlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, locationlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, heading_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, atlasnature_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, unit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, unitlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, automat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, automatlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, unitknowledge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, unitknowledgelist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, objectknowledge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, objectknowledgelist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, populationknowledge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, plannedwork_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, plannedworklist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, dotationtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, equipmenttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, tirindirect_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, datetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, logmaintenancepriorities_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, logmedicalpriorities_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, acharstr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, missionobjective_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, missionobjectivelist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, line_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, limasorder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, intelligencelist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, urbanblock_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, army_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, formation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, identifier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, quantity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, knowledgegroup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, list_),
  };
  MsgMissionParameter_Value_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMissionParameter_Value_descriptor_,
      MsgMissionParameter_Value::default_instance_,
      MsgMissionParameter_Value_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameter_Value, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMissionParameter_Value));
  MsgMissionParameters_descriptor_ = file->message_type(58);
  static const int MsgMissionParameters_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameters, elem_),
  };
  MsgMissionParameters_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMissionParameters_descriptor_,
      MsgMissionParameters::default_instance_,
      MsgMissionParameters_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameters, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParameters, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMissionParameters));
  MsgShape_descriptor_ = file->message_type(59);
  static const int MsgShape_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShape, category_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShape, color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShape, template__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShape, points_),
  };
  MsgShape_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgShape_descriptor_,
      MsgShape::default_instance_,
      MsgShape_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShape, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShape, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgShape));
  MsgChatTarget_descriptor_ = file->message_type(60);
  static const int MsgChatTarget_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgChatTarget, profile_),
  };
  MsgChatTarget_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgChatTarget_descriptor_,
      MsgChatTarget::default_instance_,
      MsgChatTarget_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgChatTarget, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgChatTarget, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgChatTarget));
  MsgTextMessage_descriptor_ = file->message_type(61);
  static const int MsgTextMessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTextMessage, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTextMessage, target_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTextMessage, message_),
  };
  MsgTextMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgTextMessage_descriptor_,
      MsgTextMessage::default_instance_,
      MsgTextMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTextMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTextMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgTextMessage));
  MsgTacticalLine_descriptor_ = file->message_type(62);
  static const int MsgTacticalLine_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTacticalLine, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTacticalLine, geometry_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTacticalLine, diffusion_),
  };
  MsgTacticalLine_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgTacticalLine_descriptor_,
      MsgTacticalLine::default_instance_,
      MsgTacticalLine_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTacticalLine, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTacticalLine, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgTacticalLine));
  MsgTacticalLine_Diffusion_descriptor_ = MsgTacticalLine_descriptor_->nested_type(0);
  static const int MsgTacticalLine_Diffusion_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTacticalLine_Diffusion, automat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTacticalLine_Diffusion, formation_),
  };
  MsgTacticalLine_Diffusion_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgTacticalLine_Diffusion_descriptor_,
      MsgTacticalLine_Diffusion::default_instance_,
      MsgTacticalLine_Diffusion_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTacticalLine_Diffusion, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTacticalLine_Diffusion, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgTacticalLine_Diffusion));
  MsgFormation_descriptor_ = file->message_type(63);
  static const int MsgFormation_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFormation, oid_),
  };
  MsgFormation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgFormation_descriptor_,
      MsgFormation::default_instance_,
      MsgFormation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFormation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFormation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgFormation));
  MsgFormationCreation_descriptor_ = file->message_type(64);
  static const int MsgFormationCreation_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFormationCreation, oid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFormationCreation, oid_camp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFormationCreation, oid_formation_parente_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFormationCreation, niveau_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFormationCreation, nom_),
  };
  MsgFormationCreation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgFormationCreation_descriptor_,
      MsgFormationCreation::default_instance_,
      MsgFormationCreation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFormationCreation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFormationCreation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgFormationCreation));
  MsgUnitOrder_descriptor_ = file->message_type(65);
  static const int MsgUnitOrder_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitOrder, oid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitOrder, mission_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitOrder, parametres_),
  };
  MsgUnitOrder_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgUnitOrder_descriptor_,
      MsgUnitOrder::default_instance_,
      MsgUnitOrder_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitOrder, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitOrder, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgUnitOrder));
  MsgAutomatOrder_descriptor_ = file->message_type(66);
  static const int MsgAutomatOrder_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomatOrder, oid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomatOrder, mission_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomatOrder, parametres_),
  };
  MsgAutomatOrder_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgAutomatOrder_descriptor_,
      MsgAutomatOrder::default_instance_,
      MsgAutomatOrder_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomatOrder, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAutomatOrder, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgAutomatOrder));
  MsgPopulationOrder_descriptor_ = file->message_type(67);
  static const int MsgPopulationOrder_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPopulationOrder, oid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPopulationOrder, mission_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPopulationOrder, parametres_),
  };
  MsgPopulationOrder_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgPopulationOrder_descriptor_,
      MsgPopulationOrder::default_instance_,
      MsgPopulationOrder_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPopulationOrder, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPopulationOrder, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgPopulationOrder));
  MsgObjectAttributeConstruction_descriptor_ = file->message_type(68);
  static const int MsgObjectAttributeConstruction_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeConstruction, dotation_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeConstruction, dotation_nbr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeConstruction, density_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeConstruction, percentage_),
  };
  MsgObjectAttributeConstruction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgObjectAttributeConstruction_descriptor_,
      MsgObjectAttributeConstruction::default_instance_,
      MsgObjectAttributeConstruction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeConstruction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeConstruction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgObjectAttributeConstruction));
  MsgObjectAttributeMine_descriptor_ = file->message_type(69);
  static const int MsgObjectAttributeMine_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeMine, dotation_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeMine, dotation_nbr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeMine, density_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeMine, percentage_),
  };
  MsgObjectAttributeMine_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgObjectAttributeMine_descriptor_,
      MsgObjectAttributeMine::default_instance_,
      MsgObjectAttributeMine_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeMine, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeMine, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgObjectAttributeMine));
  MsgObjectAttributeLogistic_descriptor_ = file->message_type(70);
  static const int MsgObjectAttributeLogistic_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeLogistic, tc2_),
  };
  MsgObjectAttributeLogistic_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgObjectAttributeLogistic_descriptor_,
      MsgObjectAttributeLogistic::default_instance_,
      MsgObjectAttributeLogistic_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeLogistic, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeLogistic, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgObjectAttributeLogistic));
  MsgObjectAttributeInteractionHeight_descriptor_ = file->message_type(71);
  static const int MsgObjectAttributeInteractionHeight_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeInteractionHeight, height_),
  };
  MsgObjectAttributeInteractionHeight_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgObjectAttributeInteractionHeight_descriptor_,
      MsgObjectAttributeInteractionHeight::default_instance_,
      MsgObjectAttributeInteractionHeight_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeInteractionHeight, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeInteractionHeight, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgObjectAttributeInteractionHeight));
  MsgObjectAttributeObstacle_descriptor_ = file->message_type(72);
  static const int MsgObjectAttributeObstacle_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeObstacle, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeObstacle, activated_),
  };
  MsgObjectAttributeObstacle_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgObjectAttributeObstacle_descriptor_,
      MsgObjectAttributeObstacle::default_instance_,
      MsgObjectAttributeObstacle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeObstacle, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeObstacle, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgObjectAttributeObstacle));
  MsgObjectAttributeActivityTime_descriptor_ = file->message_type(73);
  static const int MsgObjectAttributeActivityTime_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeActivityTime, value_),
  };
  MsgObjectAttributeActivityTime_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgObjectAttributeActivityTime_descriptor_,
      MsgObjectAttributeActivityTime::default_instance_,
      MsgObjectAttributeActivityTime_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeActivityTime, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeActivityTime, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgObjectAttributeActivityTime));
  MsgObjectAttributeBypass_descriptor_ = file->message_type(74);
  static const int MsgObjectAttributeBypass_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeBypass, percentage_),
  };
  MsgObjectAttributeBypass_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgObjectAttributeBypass_descriptor_,
      MsgObjectAttributeBypass::default_instance_,
      MsgObjectAttributeBypass_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeBypass, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeBypass, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgObjectAttributeBypass));
  MsgObjectAttributeNBC_descriptor_ = file->message_type(75);
  static const int MsgObjectAttributeNBC_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeNBC, danger_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeNBC, nbc_agents_),
  };
  MsgObjectAttributeNBC_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgObjectAttributeNBC_descriptor_,
      MsgObjectAttributeNBC::default_instance_,
      MsgObjectAttributeNBC_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeNBC, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeNBC, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgObjectAttributeNBC));
  StockResource_descriptor_ = file->message_type(76);
  static const int StockResource_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockResource, dotation_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockResource, current_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockResource, max_),
  };
  StockResource_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StockResource_descriptor_,
      StockResource::default_instance_,
      StockResource_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockResource, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockResource, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StockResource));
  MsgObjectAttributeStock_descriptor_ = file->message_type(77);
  static const int MsgObjectAttributeStock_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeStock, resources_),
  };
  MsgObjectAttributeStock_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgObjectAttributeStock_descriptor_,
      MsgObjectAttributeStock::default_instance_,
      MsgObjectAttributeStock_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeStock, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeStock, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgObjectAttributeStock));
  MsgObjectAttributeCrossingSite_descriptor_ = file->message_type(78);
  static const int MsgObjectAttributeCrossingSite_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeCrossingSite, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeCrossingSite, depth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeCrossingSite, flow_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeCrossingSite, banks_require_fitting_),
  };
  MsgObjectAttributeCrossingSite_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgObjectAttributeCrossingSite_descriptor_,
      MsgObjectAttributeCrossingSite::default_instance_,
      MsgObjectAttributeCrossingSite_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeCrossingSite, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeCrossingSite, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgObjectAttributeCrossingSite));
  MsgObjectAttributeSupplyRoute_descriptor_ = file->message_type(79);
  static const int MsgObjectAttributeSupplyRoute_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeSupplyRoute, equipped_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeSupplyRoute, max_weight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeSupplyRoute, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeSupplyRoute, length_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeSupplyRoute, flow_rate_),
  };
  MsgObjectAttributeSupplyRoute_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgObjectAttributeSupplyRoute_descriptor_,
      MsgObjectAttributeSupplyRoute::default_instance_,
      MsgObjectAttributeSupplyRoute_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeSupplyRoute, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeSupplyRoute, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgObjectAttributeSupplyRoute));
  MsgLocatedQuantity_descriptor_ = file->message_type(80);
  static const int MsgLocatedQuantity_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLocatedQuantity, coordinate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLocatedQuantity, quantity_),
  };
  MsgLocatedQuantity_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLocatedQuantity_descriptor_,
      MsgLocatedQuantity::default_instance_,
      MsgLocatedQuantity_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLocatedQuantity, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLocatedQuantity, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLocatedQuantity));
  MsgLocatedQuantityList_descriptor_ = file->message_type(81);
  static const int MsgLocatedQuantityList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLocatedQuantityList, elem_),
  };
  MsgLocatedQuantityList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLocatedQuantityList_descriptor_,
      MsgLocatedQuantityList::default_instance_,
      MsgLocatedQuantityList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLocatedQuantityList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLocatedQuantityList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLocatedQuantityList));
  MsgObjectAttributeToxicCloud_descriptor_ = file->message_type(82);
  static const int MsgObjectAttributeToxicCloud_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeToxicCloud, quantities_),
  };
  MsgObjectAttributeToxicCloud_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgObjectAttributeToxicCloud_descriptor_,
      MsgObjectAttributeToxicCloud::default_instance_,
      MsgObjectAttributeToxicCloud_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeToxicCloud, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeToxicCloud, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgObjectAttributeToxicCloud));
  MsgObjectAttributeFire_descriptor_ = file->message_type(83);
  static const int MsgObjectAttributeFire_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeFire, class_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeFire, heat_),
  };
  MsgObjectAttributeFire_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgObjectAttributeFire_descriptor_,
      MsgObjectAttributeFire::default_instance_,
      MsgObjectAttributeFire_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeFire, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeFire, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgObjectAttributeFire));
  MsgObjectAttributeMedicalTreatment_descriptor_ = file->message_type(84);
  static const int MsgObjectAttributeMedicalTreatment_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeMedicalTreatment, type_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeMedicalTreatment, beds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeMedicalTreatment, available_beds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeMedicalTreatment, doctors_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeMedicalTreatment, available_doctors_),
  };
  MsgObjectAttributeMedicalTreatment_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgObjectAttributeMedicalTreatment_descriptor_,
      MsgObjectAttributeMedicalTreatment::default_instance_,
      MsgObjectAttributeMedicalTreatment_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeMedicalTreatment, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeMedicalTreatment, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgObjectAttributeMedicalTreatment));
  MsgObjectAttributeNBCType_descriptor_ = file->message_type(85);
  static const int MsgObjectAttributeNBCType_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeNBCType, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeNBCType, concentration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeNBCType, source_life_duration_),
  };
  MsgObjectAttributeNBCType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgObjectAttributeNBCType_descriptor_,
      MsgObjectAttributeNBCType::default_instance_,
      MsgObjectAttributeNBCType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeNBCType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributeNBCType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgObjectAttributeNBCType));
  MsgObjectAttributes_descriptor_ = file->message_type(86);
  static const int MsgObjectAttributes_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributes, construction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributes, obstacle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributes, mine_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributes, activity_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributes, bypass_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributes, logistic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributes, nbc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributes, crossing_site_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributes, supply_route_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributes, toxic_cloud_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributes, fire_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributes, medical_treatment_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributes, interaction_height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributes, stock_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributes, nbc_agent_),
  };
  MsgObjectAttributes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgObjectAttributes_descriptor_,
      MsgObjectAttributes::default_instance_,
      MsgObjectAttributes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectAttributes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgObjectAttributes));
  MsgNote_descriptor_ = file->message_type(87);
  static const int MsgNote_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNote, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNote, number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNote, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNote, parent_),
  };
  MsgNote_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgNote_descriptor_,
      MsgNote::default_instance_,
      MsgNote_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNote, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNote, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgNote));
  MsgMeteoAttributes_descriptor_ = file->message_type(88);
  static const int MsgMeteoAttributes_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMeteoAttributes, temperature_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMeteoAttributes, wind_speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMeteoAttributes, wind_direction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMeteoAttributes, cloud_floor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMeteoAttributes, cloud_ceiling_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMeteoAttributes, cloud_density_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMeteoAttributes, precipitation_),
  };
  MsgMeteoAttributes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMeteoAttributes_descriptor_,
      MsgMeteoAttributes::default_instance_,
      MsgMeteoAttributes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMeteoAttributes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMeteoAttributes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMeteoAttributes));
  EnumDotationFamily_descriptor_ = file->enum_type(0);
  EnumAmmunitionFamily_descriptor_ = file->enum_type(1);
  EnumPrecipitationType_descriptor_ = file->enum_type(2);
  EnumLogMaintenanceHandlingStatus_descriptor_ = file->enum_type(3);
  EnumLogMedicalHandlingStatus_descriptor_ = file->enum_type(4);
  EnumUnitVisibility_descriptor_ = file->enum_type(5);
  EnumFireEffectType_descriptor_ = file->enum_type(6);
  EnumSimulationState_descriptor_ = file->enum_type(7);
  EnumMeetingEngagementStatus_descriptor_ = file->enum_type(8);
  EnumOperationalStatus_descriptor_ = file->enum_type(9);
  MsgStartUnitFire_type_descriptor_ = file->enum_type(10);
  EnumAutomatMode_descriptor_ = file->enum_type(11);
  EnumPopulationAttitude_descriptor_ = file->enum_type(12);
  EnumUnitTiredness_descriptor_ = file->enum_type(13);
  EnumUnitMorale_descriptor_ = file->enum_type(14);
  EnumUnitExperience_descriptor_ = file->enum_type(15);
  EnumHumanRank_descriptor_ = file->enum_type(16);
  EnumDiplomacy_descriptor_ = file->enum_type(17);
  EnumHumanWound_descriptor_ = file->enum_type(18);
  EnumLogMaintenanceRegimeTravail_descriptor_ = file->enum_type(19);
  EnumNatureLevel_descriptor_ = file->enum_type(20);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Common_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgTeam_descriptor_, &MsgTeam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgPopulation_descriptor_, &MsgPopulation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgAutomat_descriptor_, &MsgAutomat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgUnit_descriptor_, &MsgUnit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgUnitFire_descriptor_, &MsgUnitFire::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDotationStock_descriptor_, &MsgDotationStock::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgHeading_descriptor_, &MsgHeading::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgUnitType_descriptor_, &MsgUnitType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgListOID_descriptor_, &MsgListOID::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDateTime_descriptor_, &MsgDateTime::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDotationQuota_descriptor_, &MsgDotationQuota::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SeqOfDotationQuota_descriptor_, &SeqOfDotationQuota::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgControlStop_descriptor_, &MsgControlStop::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgControlPause_descriptor_, &MsgControlPause::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgControlResume_descriptor_, &MsgControlResume::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLine_descriptor_, &MsgLine::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgControlChangeTimeFactor_descriptor_, &MsgControlChangeTimeFactor::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgAutomatChangeKnowledgeGroup_descriptor_, &MsgAutomatChangeKnowledgeGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgAutomatChangeLogisticLinks_descriptor_, &MsgAutomatChangeLogisticLinks::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgAutomatChangeSuperior_oid_superior_descriptor_, &MsgAutomatChangeSuperior_oid_superior::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgAutomatChangeSuperior_descriptor_, &MsgAutomatChangeSuperior::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgUnitChangeSuperior_descriptor_, &MsgUnitChangeSuperior::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgAutomatList_descriptor_, &MsgAutomatList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLogMedicalPriorities_descriptor_, &MsgLogMedicalPriorities::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgPolygon_descriptor_, &MsgPolygon::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgPath_descriptor_, &MsgPath::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgPathList_descriptor_, &MsgPathList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgCoordLatLong_descriptor_, &MsgCoordLatLong::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgCoordLatLongList_descriptor_, &MsgCoordLatLongList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLocation_descriptor_, &MsgLocation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgPoint_descriptor_, &MsgPoint::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgUnitList_descriptor_, &MsgUnitList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgPointList_descriptor_, &MsgPointList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgPolygonList_descriptor_, &MsgPolygonList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLocationList_descriptor_, &MsgLocationList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgUnitKnowledge_descriptor_, &MsgUnitKnowledge::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgUnitKnowledgeList_descriptor_, &MsgUnitKnowledgeList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgObjectKnowledge_descriptor_, &MsgObjectKnowledge::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgObjectKnowledgeList_descriptor_, &MsgObjectKnowledgeList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ObstacleType_descriptor_, &ObstacleType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgPlannedWork_descriptor_, &MsgPlannedWork::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgPlannedWorkList_descriptor_, &MsgPlannedWorkList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLogMaintenancePriorities_descriptor_, &MsgLogMaintenancePriorities::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMissionObjective_descriptor_, &MsgMissionObjective::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMissionObjectiveList_descriptor_, &MsgMissionObjectiveList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLimaOrder_descriptor_, &MsgLimaOrder::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLimasOrder_descriptor_, &MsgLimasOrder::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SeqOfDotationStock_descriptor_, &SeqOfDotationStock::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgPopulationKnowledge_descriptor_, &MsgPopulationKnowledge::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgIntelligence_descriptor_, &MsgIntelligence::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgIntelligenceList_descriptor_, &MsgIntelligenceList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgChangeDiplomacy_descriptor_, &MsgChangeDiplomacy::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgAtlasNature_descriptor_, &MsgAtlasNature::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgEquipmentType_descriptor_, &MsgEquipmentType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDotationType_descriptor_, &MsgDotationType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgUrbanBlock_descriptor_, &MsgUrbanBlock::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgUrbanKnowledge_descriptor_, &MsgUrbanKnowledge::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMissionParameter_descriptor_, &MsgMissionParameter::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMissionParameter_Value_descriptor_, &MsgMissionParameter_Value::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMissionParameters_descriptor_, &MsgMissionParameters::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgShape_descriptor_, &MsgShape::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgChatTarget_descriptor_, &MsgChatTarget::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgTextMessage_descriptor_, &MsgTextMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgTacticalLine_descriptor_, &MsgTacticalLine::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgTacticalLine_Diffusion_descriptor_, &MsgTacticalLine_Diffusion::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgFormation_descriptor_, &MsgFormation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgFormationCreation_descriptor_, &MsgFormationCreation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgUnitOrder_descriptor_, &MsgUnitOrder::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgAutomatOrder_descriptor_, &MsgAutomatOrder::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgPopulationOrder_descriptor_, &MsgPopulationOrder::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgObjectAttributeConstruction_descriptor_, &MsgObjectAttributeConstruction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgObjectAttributeMine_descriptor_, &MsgObjectAttributeMine::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgObjectAttributeLogistic_descriptor_, &MsgObjectAttributeLogistic::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgObjectAttributeInteractionHeight_descriptor_, &MsgObjectAttributeInteractionHeight::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgObjectAttributeObstacle_descriptor_, &MsgObjectAttributeObstacle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgObjectAttributeActivityTime_descriptor_, &MsgObjectAttributeActivityTime::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgObjectAttributeBypass_descriptor_, &MsgObjectAttributeBypass::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgObjectAttributeNBC_descriptor_, &MsgObjectAttributeNBC::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StockResource_descriptor_, &StockResource::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgObjectAttributeStock_descriptor_, &MsgObjectAttributeStock::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgObjectAttributeCrossingSite_descriptor_, &MsgObjectAttributeCrossingSite::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgObjectAttributeSupplyRoute_descriptor_, &MsgObjectAttributeSupplyRoute::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLocatedQuantity_descriptor_, &MsgLocatedQuantity::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLocatedQuantityList_descriptor_, &MsgLocatedQuantityList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgObjectAttributeToxicCloud_descriptor_, &MsgObjectAttributeToxicCloud::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgObjectAttributeFire_descriptor_, &MsgObjectAttributeFire::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgObjectAttributeMedicalTreatment_descriptor_, &MsgObjectAttributeMedicalTreatment::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgObjectAttributeNBCType_descriptor_, &MsgObjectAttributeNBCType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgObjectAttributes_descriptor_, &MsgObjectAttributes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgNote_descriptor_, &MsgNote::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMeteoAttributes_descriptor_, &MsgMeteoAttributes::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Common_2eproto() {
  delete MsgTeam::default_instance_;
  delete MsgTeam_reflection_;
  delete MsgPopulation::default_instance_;
  delete MsgPopulation_reflection_;
  delete MsgAutomat::default_instance_;
  delete MsgAutomat_reflection_;
  delete MsgUnit::default_instance_;
  delete MsgUnit_reflection_;
  delete MsgUnitFire::default_instance_;
  delete MsgUnitFire_reflection_;
  delete MsgDotationStock::default_instance_;
  delete MsgDotationStock_reflection_;
  delete MsgHeading::default_instance_;
  delete MsgHeading_reflection_;
  delete MsgUnitType::default_instance_;
  delete MsgUnitType_reflection_;
  delete MsgListOID::default_instance_;
  delete MsgListOID_reflection_;
  delete MsgDateTime::default_instance_;
  delete MsgDateTime_reflection_;
  delete MsgDotationQuota::default_instance_;
  delete MsgDotationQuota_reflection_;
  delete SeqOfDotationQuota::default_instance_;
  delete SeqOfDotationQuota_reflection_;
  delete MsgControlStop::default_instance_;
  delete MsgControlStop_reflection_;
  delete MsgControlPause::default_instance_;
  delete MsgControlPause_reflection_;
  delete MsgControlResume::default_instance_;
  delete MsgControlResume_reflection_;
  delete MsgLine::default_instance_;
  delete MsgLine_reflection_;
  delete MsgControlChangeTimeFactor::default_instance_;
  delete MsgControlChangeTimeFactor_reflection_;
  delete MsgAutomatChangeKnowledgeGroup::default_instance_;
  delete MsgAutomatChangeKnowledgeGroup_reflection_;
  delete MsgAutomatChangeLogisticLinks::default_instance_;
  delete MsgAutomatChangeLogisticLinks_reflection_;
  delete MsgAutomatChangeSuperior_oid_superior::default_instance_;
  delete MsgAutomatChangeSuperior_oid_superior_reflection_;
  delete MsgAutomatChangeSuperior::default_instance_;
  delete MsgAutomatChangeSuperior_reflection_;
  delete MsgUnitChangeSuperior::default_instance_;
  delete MsgUnitChangeSuperior_reflection_;
  delete MsgAutomatList::default_instance_;
  delete MsgAutomatList_reflection_;
  delete MsgLogMedicalPriorities::default_instance_;
  delete MsgLogMedicalPriorities_reflection_;
  delete MsgPolygon::default_instance_;
  delete MsgPolygon_reflection_;
  delete MsgPath::default_instance_;
  delete MsgPath_reflection_;
  delete MsgPathList::default_instance_;
  delete MsgPathList_reflection_;
  delete MsgCoordLatLong::default_instance_;
  delete MsgCoordLatLong_reflection_;
  delete MsgCoordLatLongList::default_instance_;
  delete MsgCoordLatLongList_reflection_;
  delete MsgLocation::default_instance_;
  delete MsgLocation_reflection_;
  delete MsgPoint::default_instance_;
  delete MsgPoint_reflection_;
  delete MsgUnitList::default_instance_;
  delete MsgUnitList_reflection_;
  delete MsgPointList::default_instance_;
  delete MsgPointList_reflection_;
  delete MsgPolygonList::default_instance_;
  delete MsgPolygonList_reflection_;
  delete MsgLocationList::default_instance_;
  delete MsgLocationList_reflection_;
  delete MsgUnitKnowledge::default_instance_;
  delete MsgUnitKnowledge_reflection_;
  delete MsgUnitKnowledgeList::default_instance_;
  delete MsgUnitKnowledgeList_reflection_;
  delete MsgObjectKnowledge::default_instance_;
  delete MsgObjectKnowledge_reflection_;
  delete MsgObjectKnowledgeList::default_instance_;
  delete MsgObjectKnowledgeList_reflection_;
  delete ObstacleType::default_instance_;
  delete ObstacleType_reflection_;
  delete MsgPlannedWork::default_instance_;
  delete MsgPlannedWork_reflection_;
  delete MsgPlannedWorkList::default_instance_;
  delete MsgPlannedWorkList_reflection_;
  delete MsgLogMaintenancePriorities::default_instance_;
  delete MsgLogMaintenancePriorities_reflection_;
  delete MsgMissionObjective::default_instance_;
  delete MsgMissionObjective_reflection_;
  delete MsgMissionObjectiveList::default_instance_;
  delete MsgMissionObjectiveList_reflection_;
  delete MsgLimaOrder::default_instance_;
  delete MsgLimaOrder_reflection_;
  delete MsgLimasOrder::default_instance_;
  delete MsgLimasOrder_reflection_;
  delete SeqOfDotationStock::default_instance_;
  delete SeqOfDotationStock_reflection_;
  delete MsgPopulationKnowledge::default_instance_;
  delete MsgPopulationKnowledge_reflection_;
  delete MsgIntelligence::default_instance_;
  delete MsgIntelligence_reflection_;
  delete MsgIntelligenceList::default_instance_;
  delete MsgIntelligenceList_reflection_;
  delete MsgChangeDiplomacy::default_instance_;
  delete MsgChangeDiplomacy_reflection_;
  delete MsgAtlasNature::default_instance_;
  delete MsgAtlasNature_reflection_;
  delete MsgEquipmentType::default_instance_;
  delete MsgEquipmentType_reflection_;
  delete MsgDotationType::default_instance_;
  delete MsgDotationType_reflection_;
  delete MsgUrbanBlock::default_instance_;
  delete MsgUrbanBlock_reflection_;
  delete MsgUrbanKnowledge::default_instance_;
  delete MsgUrbanKnowledge_reflection_;
  delete MsgMissionParameter::default_instance_;
  delete MsgMissionParameter_reflection_;
  delete MsgMissionParameter_Value::default_instance_;
  delete MsgMissionParameter_Value_reflection_;
  delete MsgMissionParameters::default_instance_;
  delete MsgMissionParameters_reflection_;
  delete MsgShape::default_instance_;
  delete MsgShape_reflection_;
  delete MsgChatTarget::default_instance_;
  delete MsgChatTarget_reflection_;
  delete MsgTextMessage::default_instance_;
  delete MsgTextMessage_reflection_;
  delete MsgTacticalLine::default_instance_;
  delete MsgTacticalLine_reflection_;
  delete MsgTacticalLine_Diffusion::default_instance_;
  delete MsgTacticalLine_Diffusion_reflection_;
  delete MsgFormation::default_instance_;
  delete MsgFormation_reflection_;
  delete MsgFormationCreation::default_instance_;
  delete MsgFormationCreation_reflection_;
  delete MsgUnitOrder::default_instance_;
  delete MsgUnitOrder_reflection_;
  delete MsgAutomatOrder::default_instance_;
  delete MsgAutomatOrder_reflection_;
  delete MsgPopulationOrder::default_instance_;
  delete MsgPopulationOrder_reflection_;
  delete MsgObjectAttributeConstruction::default_instance_;
  delete MsgObjectAttributeConstruction_reflection_;
  delete MsgObjectAttributeMine::default_instance_;
  delete MsgObjectAttributeMine_reflection_;
  delete MsgObjectAttributeLogistic::default_instance_;
  delete MsgObjectAttributeLogistic_reflection_;
  delete MsgObjectAttributeInteractionHeight::default_instance_;
  delete MsgObjectAttributeInteractionHeight_reflection_;
  delete MsgObjectAttributeObstacle::default_instance_;
  delete MsgObjectAttributeObstacle_reflection_;
  delete MsgObjectAttributeActivityTime::default_instance_;
  delete MsgObjectAttributeActivityTime_reflection_;
  delete MsgObjectAttributeBypass::default_instance_;
  delete MsgObjectAttributeBypass_reflection_;
  delete MsgObjectAttributeNBC::default_instance_;
  delete MsgObjectAttributeNBC_reflection_;
  delete StockResource::default_instance_;
  delete StockResource_reflection_;
  delete MsgObjectAttributeStock::default_instance_;
  delete MsgObjectAttributeStock_reflection_;
  delete MsgObjectAttributeCrossingSite::default_instance_;
  delete MsgObjectAttributeCrossingSite_reflection_;
  delete MsgObjectAttributeSupplyRoute::default_instance_;
  delete MsgObjectAttributeSupplyRoute_reflection_;
  delete MsgLocatedQuantity::default_instance_;
  delete MsgLocatedQuantity_reflection_;
  delete MsgLocatedQuantityList::default_instance_;
  delete MsgLocatedQuantityList_reflection_;
  delete MsgObjectAttributeToxicCloud::default_instance_;
  delete MsgObjectAttributeToxicCloud_reflection_;
  delete MsgObjectAttributeFire::default_instance_;
  delete MsgObjectAttributeFire_reflection_;
  delete MsgObjectAttributeMedicalTreatment::default_instance_;
  delete MsgObjectAttributeMedicalTreatment_reflection_;
  delete MsgObjectAttributeNBCType::default_instance_;
  delete MsgObjectAttributeNBCType_reflection_;
  delete MsgObjectAttributes::default_instance_;
  delete MsgObjectAttributes_reflection_;
  delete MsgNote::default_instance_;
  delete MsgNote_reflection_;
  delete MsgMeteoAttributes::default_instance_;
  delete MsgMeteoAttributes_reflection_;
}

void protobuf_AddDesc_Common_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014Common.proto\022\006Common\"\026\n\007MsgTeam\022\013\n\003oid"
    "\030\001 \002(\005\"\034\n\rMsgPopulation\022\013\n\003oid\030\001 \002(\005\"\031\n\n"
    "MsgAutomat\022\013\n\003oid\030\001 \002(\005\"\026\n\007MsgUnit\022\013\n\003oi"
    "d\030\001 \002(\005\"\032\n\013MsgUnitFire\022\013\n\003oid\030\001 \002(\005\"E\n\020M"
    "sgDotationStock\022\024\n\014ressource_id\030\001 \002(\005\022\033\n"
    "\023quantite_disponible\030\002 \002(\005\"\035\n\nMsgHeading"
    "\022\017\n\007heading\030\001 \002(\005\"\033\n\013MsgUnitType\022\014\n\004type"
    "\030\001 \002(\005\"\032\n\nMsgListOID\022\014\n\004elem\030\001 \003(\005\"\033\n\013Ms"
    "gDateTime\022\014\n\004data\030\001 \002(\t\"B\n\020MsgDotationQu"
    "ota\022\024\n\014ressource_id\030\001 \002(\005\022\030\n\020quota_dispo"
    "nible\030\002 \002(\005\"<\n\022SeqOfDotationQuota\022&\n\004ele"
    "m\030\001 \003(\0132\030.Common.MsgDotationQuota\"\020\n\016Msg"
    "ControlStop\"\021\n\017MsgControlPause\"\022\n\020MsgCon"
    "trolResume\"0\n\007MsgLine\022%\n\010location\030\001 \002(\0132"
    "\023.Common.MsgLocation\"1\n\032MsgControlChange"
    "TimeFactor\022\023\n\013time_factor\030\001 \002(\005\"`\n\036MsgAu"
    "tomatChangeKnowledgeGroup\022\013\n\003oid\030\001 \002(\005\022\020"
    "\n\010oid_camp\030\002 \002(\005\022\037\n\027oid_groupe_connaissa"
    "nce\030\003 \002(\005\"\205\001\n\035MsgAutomatChangeLogisticLi"
    "nks\022\013\n\003oid\030\001 \002(\005\022\017\n\007oid_tc2\030\002 \001(\005\022\027\n\017oid"
    "_maintenance\030\003 \001(\005\022\021\n\toid_sante\030\004 \001(\005\022\032\n"
    "\022oid_ravitaillement\030\005 \001(\005\"v\n%MsgAutomatC"
    "hangeSuperior_oid_superior\022\'\n\tformation\030"
    "\001 \001(\0132\024.Common.MsgFormation\022$\n\010automate\030"
    "\002 \001(\0132\022.Common.MsgAutomat\"l\n\030MsgAutomatC"
    "hangeSuperior\022\013\n\003oid\030\001 \002(\005\022C\n\014oid_superi"
    "or\030\002 \002(\0132-.Common.MsgAutomatChangeSuperi"
    "or_oid_superior\":\n\025MsgUnitChangeSuperior"
    "\022\013\n\003oid\030\001 \002(\r\022\024\n\014oid_automate\030\002 \002(\r\"2\n\016M"
    "sgAutomatList\022 \n\004elem\030\001 \003(\0132\022.Common.Msg"
    "Automat\"?\n\027MsgLogMedicalPriorities\022$\n\004el"
    "em\030\001 \003(\0162\026.Common.EnumHumanWound\"3\n\nMsgP"
    "olygon\022%\n\010location\030\001 \002(\0132\023.Common.MsgLoc"
    "ation\"0\n\007MsgPath\022%\n\010location\030\001 \002(\0132\023.Com"
    "mon.MsgLocation\",\n\013MsgPathList\022\035\n\004elem\030\001"
    " \003(\0132\017.Common.MsgPath\"6\n\017MsgCoordLatLong"
    "\022\020\n\010latitude\030\001 \002(\001\022\021\n\tlongitude\030\002 \002(\001\"<\n"
    "\023MsgCoordLatLongList\022%\n\004elem\030\002 \003(\0132\027.Com"
    "mon.MsgCoordLatLong\"\327\001\n\013MsgLocation\022*\n\004t"
    "ype\030\001 \002(\0162\034.Common.MsgLocation.Geometry\022"
    "0\n\013coordinates\030\002 \001(\0132\033.Common.MsgCoordLa"
    "tLongList\"j\n\010Geometry\022\n\n\006circle\020\000\022\013\n\007ell"
    "ipse\020\001\022\010\n\004line\020\002\022\r\n\trectangle\020\003\022\013\n\007polyg"
    "on\020\004\022\t\n\005point\020\005\022\n\n\006sector\020\006\022\010\n\004none\020\007\"1\n"
    "\010MsgPoint\022%\n\010location\030\001 \002(\0132\023.Common.Msg"
    "Location\",\n\013MsgUnitList\022\035\n\004elem\030\001 \003(\0132\017."
    "Common.MsgUnit\".\n\014MsgPointList\022\036\n\004elem\030\001"
    " \003(\0132\020.Common.MsgPoint\"2\n\016MsgPolygonList"
    "\022 \n\004elem\030\001 \003(\0132\022.Common.MsgPolygon\"4\n\017Ms"
    "gLocationList\022!\n\004elem\030\001 \003(\0132\023.Common.Msg"
    "Location\"\037\n\020MsgUnitKnowledge\022\013\n\003oid\030\001 \002("
    "\r\">\n\024MsgUnitKnowledgeList\022&\n\004elem\030\001 \003(\0132"
    "\030.Common.MsgUnitKnowledge\"!\n\022MsgObjectKn"
    "owledge\022\013\n\003oid\030\001 \002(\r\"B\n\026MsgObjectKnowled"
    "geList\022(\n\004elem\030\001 \003(\0132\032.Common.MsgObjectK"
    "nowledge\"E\n\014ObstacleType\"5\n\024DemolitionTa"
    "rgetType\022\017\n\013preliminary\020\000\022\014\n\010reserved\020\001\""
    "\322\001\n\016MsgPlannedWork\022\014\n\004type\030\001 \002(\t\022%\n\010posi"
    "tion\030\002 \002(\0132\023.Common.MsgLocation\022M\n\rtype_"
    "obstacle\030\003 \001(\0162).Common.ObstacleType.Dem"
    "olitionTargetType:\013preliminary\022\022\n\007densit"
    "e\030\004 \001(\002:\0010\022\016\n\003tc2\030\005 \001(\r:\0010\022\030\n\ractivity_t"
    "ime\030\006 \001(\005:\0010\":\n\022MsgPlannedWorkList\022$\n\004el"
    "em\030\001 \003(\0132\026.Common.MsgPlannedWork\"E\n\033MsgL"
    "ogMaintenancePriorities\022&\n\004elem\030\001 \003(\0132\030."
    "Common.MsgEquipmentType\"f\n\023MsgMissionObj"
    "ective\022)\n\014localisation\030\001 \002(\0132\023.Common.Ms"
    "gLocation\022$\n\007horaire\030\002 \002(\0132\023.Common.MsgD"
    "ateTime\"D\n\027MsgMissionObjectiveList\022)\n\004el"
    "em\030\001 \003(\0132\033.Common.MsgMissionObjective\"\201\003"
    "\n\014MsgLimaOrder\022\035\n\004lima\030\001 \002(\0132\017.Common.Ms"
    "gLine\022$\n\007horaire\030\002 \002(\0132\023.Common.MsgDateT"
    "ime\0220\n\tfonctions\030\003 \003(\0162\035.Common.MsgLimaO"
    "rder.Function\"\371\001\n\010Function\022\022\n\016ligne_debo"
    "uche\020\000\022\035\n\031ligne_changement_attitude\020\001\022\026\n"
    "\022ligne_coordination\020\002\022\023\n\017ligne_interdire"
    "\020\003\022\022\n\016ligne_objectif\020\004\022\024\n\020ligne_coup_arr"
    "et\020\005\022\021\n\rligne_recueil\020\006\022\027\n\023ligne_debut_m"
    "ission\020\007\022\025\n\021ligne_fin_mission\020\010\022 \n\034ligne"
    "_identification_accueil\020\t\"3\n\rMsgLimasOrd"
    "er\022\"\n\004elem\030\001 \003(\0132\024.Common.MsgLimaOrder\"<"
    "\n\022SeqOfDotationStock\022&\n\004elem\030\001 \003(\0132\030.Com"
    "mon.MsgDotationStock\"%\n\026MsgPopulationKno"
    "wledge\022\013\n\003oid\030\001 \002(\r\"\347\001\n\017MsgIntelligence\022"
    "\014\n\004name\030\001 \002(\t\022\016\n\006nature\030\002 \002(\t\022&\n\005level\030\003"
    " \002(\0162\027.Common.EnumNatureLevel\022\020\n\010embarke"
    "d\030\004 \002(\010\022)\n\010location\030\005 \002(\0132\027.Common.MsgCo"
    "ordLatLong\022(\n\tdiplomacy\030\006 \002(\0162\025.Common.E"
    "numDiplomacy\022\'\n\tformation\030\007 \002(\0132\024.Common"
    ".MsgFormation\"<\n\023MsgIntelligenceList\022%\n\004"
    "elem\030\001 \003(\0132\027.Common.MsgIntelligence\"e\n\022M"
    "sgChangeDiplomacy\022\021\n\toid_camp1\030\001 \002(\r\022\021\n\t"
    "oid_camp2\030\002 \002(\r\022)\n\ndiplomatie\030\003 \002(\0162\025.Co"
    "mmon.EnumDiplomacy\"\322\001\n\016MsgAtlasNature\022\016\n"
    "\006nature\030\001 \002(\005\"\257\001\n\013AtlasNature\022\n\n\006blinde\020"
    "\001\022\007\n\003ass\020\002\022\006\n\002pc\020\004\022\007\n\003log\020\010\022\013\n\007mortier\020\020"
    "\022\022\n\016lance_roquette\020 \022\014\n\010vehicule\020@\022\025\n\020pe"
    "rsonnel_a_pied\020\200\001\022\020\n\013helicoptere\020\200\002\022\r\n\010i"
    "ndefini\020\200\004\022\010\n\003asa\020\200\010\022\t\n\004none\020\200\020\"%\n\020MsgEq"
    "uipmentType\022\021\n\tequipment\030\001 \002(\r\"\036\n\017MsgDot"
    "ationType\022\013\n\003oid\030\001 \002(\r\"\034\n\rMsgUrbanBlock\022"
    "\013\n\003oid\030\001 \002(\r\" \n\021MsgUrbanKnowledge\022\013\n\003oid"
    "\030\001 \002(\r\"\242\016\n\023MsgMissionParameter\022\031\n\nnull_v"
    "alue\030\001 \001(\010:\005false\0220\n\005value\030\002 \001(\0132!.Commo"
    "n.MsgMissionParameter.Value\032\275\r\n\005Value\022\r\n"
    "\005aBool\030\001 \001(\010\022\r\n\005aReal\030\002 \001(\002\022\023\n\013enumerati"
    "on\030\003 \001(\005\022\035\n\004path\030\004 \001(\0132\017.Common.MsgPath\022"
    "%\n\010pathList\030\005 \001(\0132\023.Common.MsgPathList\022\037"
    "\n\005point\030\006 \001(\0132\020.Common.MsgPoint\022\'\n\tpoint"
    "List\030\007 \001(\0132\024.Common.MsgPointList\022#\n\007poly"
    "gon\030\010 \001(\0132\022.Common.MsgPolygon\022+\n\013polygon"
    "List\030\t \001(\0132\026.Common.MsgPolygonList\022%\n\010lo"
    "cation\030\n \001(\0132\023.Common.MsgLocation\022-\n\014loc"
    "ationList\030\013 \001(\0132\027.Common.MsgLocationList"
    "\022#\n\007heading\030\014 \001(\0132\022.Common.MsgHeading\022+\n"
    "\013atlasNature\030\r \001(\0132\026.Common.MsgAtlasNatu"
    "re\022\035\n\004unit\030\016 \001(\0132\017.Common.MsgUnit\022%\n\010uni"
    "tList\030\017 \001(\0132\023.Common.MsgUnitList\022#\n\007auto"
    "mat\030\020 \001(\0132\022.Common.MsgAutomat\022+\n\013automat"
    "List\030\021 \001(\0132\026.Common.MsgAutomatList\022/\n\run"
    "itKnowledge\030\022 \001(\0132\030.Common.MsgUnitKnowle"
    "dge\0227\n\021unitKnowledgeList\030\023 \001(\0132\034.Common."
    "MsgUnitKnowledgeList\0223\n\017objectKnowledge\030"
    "\024 \001(\0132\032.Common.MsgObjectKnowledge\022;\n\023obj"
    "ectKnowledgeList\030\025 \001(\0132\036.Common.MsgObjec"
    "tKnowledgeList\022;\n\023populationKnowledge\030\026 "
    "\001(\0132\036.Common.MsgPopulationKnowledge\022+\n\013p"
    "lannedWork\030\027 \001(\0132\026.Common.MsgPlannedWork"
    "\0223\n\017plannedWorkList\030\030 \001(\0132\032.Common.MsgPl"
    "annedWorkList\022-\n\014dotationType\030\031 \001(\0132\027.Co"
    "mmon.MsgDotationType\022/\n\requipmentType\030\032 "
    "\001(\0132\030.Common.MsgEquipmentType\022\023\n\013tirIndi"
    "rect\030\033 \001(\005\022%\n\010dateTime\030\034 \001(\0132\023.Common.Ms"
    "gDateTime\022E\n\030logMaintenancePriorities\030\035 "
    "\001(\0132#.Common.MsgLogMaintenancePriorities"
    "\022=\n\024logMedicalPriorities\030\036 \001(\0132\037.Common."
    "MsgLogMedicalPriorities\022\020\n\010aCharStr\030\037 \001("
    "\t\0225\n\020missionObjective\030  \001(\0132\033.Common.Msg"
    "MissionObjective\022=\n\024missionObjectiveList"
    "\030! \001(\0132\037.Common.MsgMissionObjectiveList\022"
    "\035\n\004line\030\" \001(\0132\017.Common.MsgLine\022)\n\nlimasO"
    "rder\030# \001(\0132\025.Common.MsgLimasOrder\0225\n\020int"
    "elligenceList\030$ \001(\0132\033.Common.MsgIntellig"
    "enceList\022)\n\nurbanBlock\030% \001(\0132\025.Common.Ms"
    "gUrbanBlock\022\014\n\004army\030& \001(\005\022\021\n\tformation\030\'"
    " \001(\005\022\022\n\nidentifier\030( \001(\r\022\020\n\010quantity\030) \001"
    "(\005\022\026\n\016knowledgeGroup\030* \001(\005\022/\n\004list\030+ \003(\013"
    "2!.Common.MsgMissionParameter.Value\"A\n\024M"
    "sgMissionParameters\022)\n\004elem\030\001 \003(\0132\033.Comm"
    "on.MsgMissionParameter\"k\n\010MsgShape\022\020\n\010ca"
    "tegory\030\001 \002(\t\022\r\n\005color\030\002 \002(\t\022\021\n\ttemplate_"
    "\030\003 \002(\t\022+\n\006points\030\004 \002(\0132\033.Common.MsgCoord"
    "LatLongList\" \n\rMsgChatTarget\022\017\n\007profile\030"
    "\001 \002(\t\"o\n\016MsgTextMessage\022%\n\006source\030\001 \002(\0132"
    "\025.Common.MsgChatTarget\022%\n\006target\030\002 \002(\0132\025"
    ".Common.MsgChatTarget\022\017\n\007message\030\003 \002(\t\"\255"
    "\001\n\017MsgTacticalLine\022\014\n\004name\030\001 \002(\t\022%\n\010geom"
    "etry\030\002 \002(\0132\023.Common.MsgLocation\0224\n\tdiffu"
    "sion\030\003 \002(\0132!.Common.MsgTacticalLine.Diff"
    "usion\032/\n\tDiffusion\022\017\n\007automat\030\001 \001(\r\022\021\n\tf"
    "ormation\030\002 \001(\r\"\033\n\014MsgFormation\022\013\n\003oid\030\001 "
    "\002(\005\"\215\001\n\024MsgFormationCreation\022\013\n\003oid\030\001 \002("
    "\005\022\020\n\010oid_camp\030\002 \002(\005\022 \n\025oid_formation_par"
    "ente\030\003 \001(\005:\0010\022\'\n\006niveau\030\004 \002(\0162\027.Common.E"
    "numNatureLevel\022\013\n\003nom\030\005 \002(\t\"^\n\014MsgUnitOr"
    "der\022\013\n\003oid\030\001 \002(\005\022\017\n\007mission\030\002 \002(\005\0220\n\npar"
    "ametres\030\003 \001(\0132\034.Common.MsgMissionParamet"
    "ers\"a\n\017MsgAutomatOrder\022\013\n\003oid\030\001 \002(\005\022\017\n\007m"
    "ission\030\002 \002(\005\0220\n\nparametres\030\003 \001(\0132\034.Commo"
    "n.MsgMissionParameters\"d\n\022MsgPopulationO"
    "rder\022\013\n\003oid\030\001 \002(\005\022\017\n\007mission\030\002 \002(\005\0220\n\npa"
    "rametres\030\003 \001(\0132\034.Common.MsgMissionParame"
    "ters\"~\n\036MsgObjectAttributeConstruction\022\030"
    "\n\rdotation_type\030\001 \001(\005:\0010\022\027\n\014dotation_nbr"
    "\030\002 \001(\005:\0010\022\022\n\007density\030\003 \001(\002:\0010\022\025\n\npercent"
    "age\030\004 \001(\005:\0010\"v\n\026MsgObjectAttributeMine\022\030"
    "\n\rdotation_type\030\001 \001(\005:\0010\022\027\n\014dotation_nbr"
    "\030\002 \001(\005:\0010\022\022\n\007density\030\003 \001(\002:\0010\022\025\n\npercent"
    "age\030\004 \001(\005:\0010\")\n\032MsgObjectAttributeLogist"
    "ic\022\013\n\003tc2\030\001 \002(\005\"5\n#MsgObjectAttributeInt"
    "eractionHeight\022\016\n\006height\030\001 \002(\002\"h\n\032MsgObj"
    "ectAttributeObstacle\0227\n\004type\030\001 \002(\0162).Com"
    "mon.ObstacleType.DemolitionTargetType\022\021\n"
    "\tactivated\030\002 \001(\010\"/\n\036MsgObjectAttributeAc"
    "tivityTime\022\r\n\005value\030\001 \002(\005\"1\n\030MsgObjectAt"
    "tributeBypass\022\025\n\npercentage\030\001 \001(\005:\0010\"U\n\025"
    "MsgObjectAttributeNBC\022\024\n\014danger_level\030\001 "
    "\002(\005\022&\n\nnbc_agents\030\002 \002(\0132\022.Common.MsgList"
    "OID\"]\n\rStockResource\022.\n\rdotation_type\030\001 "
    "\002(\0132\027.Common.MsgDotationType\022\017\n\007current\030"
    "\002 \002(\005\022\013\n\003max\030\003 \001(\005\"C\n\027MsgObjectAttribute"
    "Stock\022(\n\tresources\030\001 \003(\0132\025.Common.StockR"
    "esource\"p\n\036MsgObjectAttributeCrossingSit"
    "e\022\r\n\005width\030\001 \002(\005\022\r\n\005depth\030\002 \002(\005\022\021\n\tflow_"
    "rate\030\003 \002(\005\022\035\n\025banks_require_fitting\030\004 \002("
    "\010\"w\n\035MsgObjectAttributeSupplyRoute\022\020\n\010eq"
    "uipped\030\001 \002(\010\022\022\n\nmax_weight\030\002 \002(\005\022\r\n\005widt"
    "h\030\003 \002(\005\022\016\n\006length\030\004 \002(\005\022\021\n\tflow_rate\030\005 \002"
    "(\005\"S\n\022MsgLocatedQuantity\022+\n\ncoordinate\030\001"
    " \002(\0132\027.Common.MsgCoordLatLong\022\020\n\010quantit"
    "y\030\002 \002(\002\"B\n\026MsgLocatedQuantityList\022(\n\004ele"
    "m\030\001 \003(\0132\032.Common.MsgLocatedQuantity\"R\n\034M"
    "sgObjectAttributeToxicCloud\0222\n\nquantitie"
    "s\030\001 \002(\0132\036.Common.MsgLocatedQuantityList\""
    "8\n\026MsgObjectAttributeFire\022\020\n\010class_id\030\001 "
    "\002(\005\022\014\n\004heat\030\002 \002(\005\"\233\001\n\"MsgObjectAttribute"
    "MedicalTreatment\022#\n\007type_id\030\001 \002(\0132\022.Comm"
    "on.MsgListOID\022\014\n\004beds\030\002 \002(\005\022\026\n\016available"
    "_beds\030\003 \002(\005\022\017\n\007doctors\030\004 \002(\005\022\031\n\021availabl"
    "e_doctors\030\005 \002(\005\"b\n\031MsgObjectAttributeNBC"
    "Type\022\020\n\010agent_id\030\001 \002(\005\022\025\n\rconcentration\030"
    "\002 \002(\005\022\034\n\024source_life_duration\030\003 \002(\005\"\345\006\n\023"
    "MsgObjectAttributes\022<\n\014construction\030\001 \001("
    "\0132&.Common.MsgObjectAttributeConstructio"
    "n\0224\n\010obstacle\030\002 \001(\0132\".Common.MsgObjectAt"
    "tributeObstacle\022,\n\004mine\030\003 \001(\0132\036.Common.M"
    "sgObjectAttributeMine\022=\n\ractivity_time\030\004"
    " \001(\0132&.Common.MsgObjectAttributeActivity"
    "Time\0220\n\006bypass\030\005 \001(\0132 .Common.MsgObjectA"
    "ttributeBypass\0224\n\010logistic\030\006 \001(\0132\".Commo"
    "n.MsgObjectAttributeLogistic\022*\n\003nbc\030\007 \001("
    "\0132\035.Common.MsgObjectAttributeNBC\022=\n\rcros"
    "sing_site\030\010 \001(\0132&.Common.MsgObjectAttrib"
    "uteCrossingSite\022;\n\014supply_route\030\t \001(\0132%."
    "Common.MsgObjectAttributeSupplyRoute\0229\n\013"
    "toxic_cloud\030\n \001(\0132$.Common.MsgObjectAttr"
    "ibuteToxicCloud\022,\n\004fire\030\013 \001(\0132\036.Common.M"
    "sgObjectAttributeFire\022E\n\021medical_treatme"
    "nt\030\014 \001(\0132*.Common.MsgObjectAttributeMedi"
    "calTreatment\022G\n\022interaction_height\030\r \001(\013"
    "2+.Common.MsgObjectAttributeInteractionH"
    "eight\022.\n\005stock\030\016 \001(\0132\037.Common.MsgObjectA"
    "ttributeStock\0224\n\tnbc_agent\030\017 \001(\0132!.Commo"
    "n.MsgObjectAttributeNBCType\"L\n\007MsgNote\022\014"
    "\n\004name\030\001 \002(\t\022\016\n\006number\030\002 \002(\t\022\023\n\013descript"
    "ion\030\003 \002(\t\022\016\n\006parent\030\004 \002(\r\"\342\001\n\022MsgMeteoAt"
    "tributes\022\023\n\013temperature\030\001 \002(\005\022\022\n\nwind_sp"
    "eed\030\002 \002(\005\022*\n\016wind_direction\030\003 \002(\0132\022.Comm"
    "on.MsgHeading\022\023\n\013cloud_floor\030\004 \002(\005\022\025\n\rcl"
    "oud_ceiling\030\005 \002(\005\022\025\n\rcloud_density\030\006 \002(\005"
    "\0224\n\rprecipitation\030\007 \002(\0162\035.Common.EnumPre"
    "cipitationType*m\n\022EnumDotationFamily\022\014\n\010"
    "munition\020\000\022\r\n\tcarburant\020\001\022\014\n\010explosif\020\002\022"
    "\010\n\004mine\020\003\022\013\n\007barbele\020\004\022\t\n\005piece\020\005\022\n\n\006rat"
    "ion\020\006*Q\n\024EnumAmmunitionFamily\022\010\n\004obus\020\000\022"
    "\017\n\013missile_sol\020\001\022\017\n\013missile_air\020\002\022\r\n\tmit"
    "raille\020\003*w\n\025EnumPrecipitationType\022\030\n\024pas"
    "_de_precipitation\020\000\022\021\n\rtempete_sable\020\001\022\016"
    "\n\nbrouillard\020\002\022\013\n\007crachin\020\003\022\t\n\005pluie\020\004\022\t"
    "\n\005neige\020\005*\264\003\n EnumLogMaintenanceHandling"
    "Status\022\033\n\027deplacement_vers_chaine\020\000\022$\n a"
    "ttente_disponibilite_remorqueur\020\001\022 \n\034rem"
    "orqueur_deplacement_aller\020\002\022\031\n\025remorqueu"
    "r_chargement\020\003\022!\n\035remorqueur_deplacement"
    "_retour\020\004\022\033\n\027remorqueur_dechargement\020\005\022\034"
    "\n\030diagnostique_maintenance\020\006\0220\n,attente_"
    "prise_en_charge_par_niveau_superieur\020\007\022 "
    "\n\034attente_disponibilite_pieces\020\010\022$\n atte"
    "nte_disponibilite_reparateur\020\t\022\016\n\nrepara"
    "tion\020\n\022\017\n\013retour_pion\020\013\022\027\n\023termine_maint"
    "enance\020\014*\364\005\n\034EnumLogMedicalHandlingStatu"
    "s\022*\n&attente_disponibilite_ambulance_rel"
    "eve\020\000\022&\n\"ambulance_releve_deplacement_al"
    "ler\020\001\022\037\n\033ambulance_releve_chargement\020\002\022/"
    "\n+attente_chargement_complet_ambulance_r"
    "eleve\020\003\022\'\n#ambulance_releve_deplacement_"
    "retour\020\004\022!\n\035ambulance_releve_dechargemen"
    "t\020\005\0223\n/attente_disponibilite_medecin_pou"
    "r_diagnostique\020\006\022\020\n\014diagnostique\020\007\022\031\n\025re"
    "cherche_secteur_tri\020\010\022*\n&attente_disponi"
    "bilite_medecin_pour_tri\020\t\022\007\n\003tri\020\n\022\032\n\026re"
    "cherche_secteur_soin\020\013\022+\n\'attente_dispon"
    "ibilite_medecin_pour_soin\020\014\022\010\n\004soin\020\r\022\023\n"
    "\017hospitalisation\020\016\022-\n)attente_disponibil"
    "ite_ambulance_ramassage\020\017\022\"\n\036ambulance_r"
    "amassage_chargement\020\020\0222\n.attente_chargem"
    "ent_complet_ambulance_ramassage\020\021\022)\n%amb"
    "ulance_ramassage_deplacement_aller\020\022\022$\n "
    "ambulance_ramassage_dechargement\020\023\022\013\n\007te"
    "rmine\020\024*_\n\022EnumUnitVisibility\022\r\n\tinvisib"
    "le\020\000\022\014\n\010detected\020\001\022\016\n\nrecognized\020\002\022\016\n\nid"
    "entified\020\003\022\014\n\010recorded\020\004*1\n\022EnumFireEffe"
    "ctType\022\014\n\010fumigene\020\000\022\r\n\teclairant\020\001*H\n\023E"
    "numSimulationState\022\013\n\007running\020\000\022\n\n\006pause"
    "d\020\001\022\013\n\007stopped\020\002\022\013\n\007loading\020\003*l\n\033EnumMee"
    "tingEngagementStatus\022\020\n\014none_meeting\020\000\022\020"
    "\n\014etat_esquive\020\001\022\r\n\tetat_fixe\020\002\022\032\n\026etat_"
    "poursuite_mission\020\003*[\n\025EnumOperationalSt"
    "atus\022\026\n\022detruit_totalement\020\000\022\030\n\024detruit_"
    "tactiquement\020\001\022\020\n\014operationnel\020\002*1\n\025MsgS"
    "tartUnitFire_type\022\n\n\006direct\020\000\022\014\n\010indirec"
    "t\020\001*+\n\017EnumAutomatMode\022\013\n\007embraye\020\000\022\013\n\007d"
    "ebraye\020\001*K\n\026EnumPopulationAttitude\022\t\n\005ca"
    "lme\020\000\022\n\n\006agitee\020\001\022\013\n\007excitee\020\002\022\r\n\tagress"
    "ive\020\003*8\n\021EnumUnitTiredness\022\n\n\006normal\020\000\022\013"
    "\n\007fatigue\020\001\022\n\n\006epuise\020\002*@\n\016EnumUnitMoral"
    "e\022\r\n\tfanatique\020\000\022\007\n\003bon\020\001\022\t\n\005moyen\020\002\022\013\n\007"
    "mauvais\020\003*@\n\022EnumUnitExperience\022\013\n\007veter"
    "an\020\000\022\017\n\013experimente\020\001\022\014\n\010conscrit\020\002*8\n\rE"
    "numHumanRank\022\014\n\010officier\020\000\022\020\n\014sous_offic"
    "er\020\001\022\007\n\003mdr\020\002*X\n\rEnumDiplomacy\022\021\n\runknow"
    "n_diplo\020\000\022\020\n\014friend_diplo\020\001\022\017\n\013enemy_dip"
    "lo\020\002\022\021\n\rneutral_diplo\020\003*\210\001\n\016EnumHumanWou"
    "nd\022\016\n\nnon_blesse\020\000\022\010\n\004mort\020\001\022\024\n\020blesse_u"
    "rgence_1\020\002\022\024\n\020blesse_urgence_2\020\003\022\024\n\020bles"
    "se_urgence_3\020\004\022\032\n\026blesse_urgence_extreme"
    "\020\005*Y\n\037EnumLogMaintenanceRegimeTravail\022\014\n"
    "\010regime_1\020\000\022\014\n\010regime_2\020\001\022\014\n\010regime_3\020\002\022"
    "\014\n\010regime_4\020\003*\204\001\n\017EnumNatureLevel\022\024\n\020non"
    "e_naturelevel\020\000\022\005\n\001o\020\001\022\006\n\002oo\020\002\022\007\n\003ooo\020\003\022"
    "\005\n\001i\020\004\022\006\n\002ii\020\005\022\007\n\003iii\020\006\022\005\n\001x\020\007\022\006\n\002xx\020\010\022\007"
    "\n\003xxx\020\t\022\010\n\004xxxx\020\n\022\t\n\005xxxxx\020\013", 12468);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Common.proto", &protobuf_RegisterTypes);
  MsgTeam::default_instance_ = new MsgTeam();
  MsgPopulation::default_instance_ = new MsgPopulation();
  MsgAutomat::default_instance_ = new MsgAutomat();
  MsgUnit::default_instance_ = new MsgUnit();
  MsgUnitFire::default_instance_ = new MsgUnitFire();
  MsgDotationStock::default_instance_ = new MsgDotationStock();
  MsgHeading::default_instance_ = new MsgHeading();
  MsgUnitType::default_instance_ = new MsgUnitType();
  MsgListOID::default_instance_ = new MsgListOID();
  MsgDateTime::default_instance_ = new MsgDateTime();
  MsgDotationQuota::default_instance_ = new MsgDotationQuota();
  SeqOfDotationQuota::default_instance_ = new SeqOfDotationQuota();
  MsgControlStop::default_instance_ = new MsgControlStop();
  MsgControlPause::default_instance_ = new MsgControlPause();
  MsgControlResume::default_instance_ = new MsgControlResume();
  MsgLine::default_instance_ = new MsgLine();
  MsgControlChangeTimeFactor::default_instance_ = new MsgControlChangeTimeFactor();
  MsgAutomatChangeKnowledgeGroup::default_instance_ = new MsgAutomatChangeKnowledgeGroup();
  MsgAutomatChangeLogisticLinks::default_instance_ = new MsgAutomatChangeLogisticLinks();
  MsgAutomatChangeSuperior_oid_superior::default_instance_ = new MsgAutomatChangeSuperior_oid_superior();
  MsgAutomatChangeSuperior::default_instance_ = new MsgAutomatChangeSuperior();
  MsgUnitChangeSuperior::default_instance_ = new MsgUnitChangeSuperior();
  MsgAutomatList::default_instance_ = new MsgAutomatList();
  MsgLogMedicalPriorities::default_instance_ = new MsgLogMedicalPriorities();
  MsgPolygon::default_instance_ = new MsgPolygon();
  MsgPath::default_instance_ = new MsgPath();
  MsgPathList::default_instance_ = new MsgPathList();
  MsgCoordLatLong::default_instance_ = new MsgCoordLatLong();
  MsgCoordLatLongList::default_instance_ = new MsgCoordLatLongList();
  MsgLocation::default_instance_ = new MsgLocation();
  MsgPoint::default_instance_ = new MsgPoint();
  MsgUnitList::default_instance_ = new MsgUnitList();
  MsgPointList::default_instance_ = new MsgPointList();
  MsgPolygonList::default_instance_ = new MsgPolygonList();
  MsgLocationList::default_instance_ = new MsgLocationList();
  MsgUnitKnowledge::default_instance_ = new MsgUnitKnowledge();
  MsgUnitKnowledgeList::default_instance_ = new MsgUnitKnowledgeList();
  MsgObjectKnowledge::default_instance_ = new MsgObjectKnowledge();
  MsgObjectKnowledgeList::default_instance_ = new MsgObjectKnowledgeList();
  ObstacleType::default_instance_ = new ObstacleType();
  MsgPlannedWork::default_instance_ = new MsgPlannedWork();
  MsgPlannedWorkList::default_instance_ = new MsgPlannedWorkList();
  MsgLogMaintenancePriorities::default_instance_ = new MsgLogMaintenancePriorities();
  MsgMissionObjective::default_instance_ = new MsgMissionObjective();
  MsgMissionObjectiveList::default_instance_ = new MsgMissionObjectiveList();
  MsgLimaOrder::default_instance_ = new MsgLimaOrder();
  MsgLimasOrder::default_instance_ = new MsgLimasOrder();
  SeqOfDotationStock::default_instance_ = new SeqOfDotationStock();
  MsgPopulationKnowledge::default_instance_ = new MsgPopulationKnowledge();
  MsgIntelligence::default_instance_ = new MsgIntelligence();
  MsgIntelligenceList::default_instance_ = new MsgIntelligenceList();
  MsgChangeDiplomacy::default_instance_ = new MsgChangeDiplomacy();
  MsgAtlasNature::default_instance_ = new MsgAtlasNature();
  MsgEquipmentType::default_instance_ = new MsgEquipmentType();
  MsgDotationType::default_instance_ = new MsgDotationType();
  MsgUrbanBlock::default_instance_ = new MsgUrbanBlock();
  MsgUrbanKnowledge::default_instance_ = new MsgUrbanKnowledge();
  MsgMissionParameter::default_instance_ = new MsgMissionParameter();
  MsgMissionParameter_Value::default_instance_ = new MsgMissionParameter_Value();
  MsgMissionParameters::default_instance_ = new MsgMissionParameters();
  MsgShape::default_instance_ = new MsgShape();
  MsgChatTarget::default_instance_ = new MsgChatTarget();
  MsgTextMessage::default_instance_ = new MsgTextMessage();
  MsgTacticalLine::default_instance_ = new MsgTacticalLine();
  MsgTacticalLine_Diffusion::default_instance_ = new MsgTacticalLine_Diffusion();
  MsgFormation::default_instance_ = new MsgFormation();
  MsgFormationCreation::default_instance_ = new MsgFormationCreation();
  MsgUnitOrder::default_instance_ = new MsgUnitOrder();
  MsgAutomatOrder::default_instance_ = new MsgAutomatOrder();
  MsgPopulationOrder::default_instance_ = new MsgPopulationOrder();
  MsgObjectAttributeConstruction::default_instance_ = new MsgObjectAttributeConstruction();
  MsgObjectAttributeMine::default_instance_ = new MsgObjectAttributeMine();
  MsgObjectAttributeLogistic::default_instance_ = new MsgObjectAttributeLogistic();
  MsgObjectAttributeInteractionHeight::default_instance_ = new MsgObjectAttributeInteractionHeight();
  MsgObjectAttributeObstacle::default_instance_ = new MsgObjectAttributeObstacle();
  MsgObjectAttributeActivityTime::default_instance_ = new MsgObjectAttributeActivityTime();
  MsgObjectAttributeBypass::default_instance_ = new MsgObjectAttributeBypass();
  MsgObjectAttributeNBC::default_instance_ = new MsgObjectAttributeNBC();
  StockResource::default_instance_ = new StockResource();
  MsgObjectAttributeStock::default_instance_ = new MsgObjectAttributeStock();
  MsgObjectAttributeCrossingSite::default_instance_ = new MsgObjectAttributeCrossingSite();
  MsgObjectAttributeSupplyRoute::default_instance_ = new MsgObjectAttributeSupplyRoute();
  MsgLocatedQuantity::default_instance_ = new MsgLocatedQuantity();
  MsgLocatedQuantityList::default_instance_ = new MsgLocatedQuantityList();
  MsgObjectAttributeToxicCloud::default_instance_ = new MsgObjectAttributeToxicCloud();
  MsgObjectAttributeFire::default_instance_ = new MsgObjectAttributeFire();
  MsgObjectAttributeMedicalTreatment::default_instance_ = new MsgObjectAttributeMedicalTreatment();
  MsgObjectAttributeNBCType::default_instance_ = new MsgObjectAttributeNBCType();
  MsgObjectAttributes::default_instance_ = new MsgObjectAttributes();
  MsgNote::default_instance_ = new MsgNote();
  MsgMeteoAttributes::default_instance_ = new MsgMeteoAttributes();
  MsgTeam::default_instance_->InitAsDefaultInstance();
  MsgPopulation::default_instance_->InitAsDefaultInstance();
  MsgAutomat::default_instance_->InitAsDefaultInstance();
  MsgUnit::default_instance_->InitAsDefaultInstance();
  MsgUnitFire::default_instance_->InitAsDefaultInstance();
  MsgDotationStock::default_instance_->InitAsDefaultInstance();
  MsgHeading::default_instance_->InitAsDefaultInstance();
  MsgUnitType::default_instance_->InitAsDefaultInstance();
  MsgListOID::default_instance_->InitAsDefaultInstance();
  MsgDateTime::default_instance_->InitAsDefaultInstance();
  MsgDotationQuota::default_instance_->InitAsDefaultInstance();
  SeqOfDotationQuota::default_instance_->InitAsDefaultInstance();
  MsgControlStop::default_instance_->InitAsDefaultInstance();
  MsgControlPause::default_instance_->InitAsDefaultInstance();
  MsgControlResume::default_instance_->InitAsDefaultInstance();
  MsgLine::default_instance_->InitAsDefaultInstance();
  MsgControlChangeTimeFactor::default_instance_->InitAsDefaultInstance();
  MsgAutomatChangeKnowledgeGroup::default_instance_->InitAsDefaultInstance();
  MsgAutomatChangeLogisticLinks::default_instance_->InitAsDefaultInstance();
  MsgAutomatChangeSuperior_oid_superior::default_instance_->InitAsDefaultInstance();
  MsgAutomatChangeSuperior::default_instance_->InitAsDefaultInstance();
  MsgUnitChangeSuperior::default_instance_->InitAsDefaultInstance();
  MsgAutomatList::default_instance_->InitAsDefaultInstance();
  MsgLogMedicalPriorities::default_instance_->InitAsDefaultInstance();
  MsgPolygon::default_instance_->InitAsDefaultInstance();
  MsgPath::default_instance_->InitAsDefaultInstance();
  MsgPathList::default_instance_->InitAsDefaultInstance();
  MsgCoordLatLong::default_instance_->InitAsDefaultInstance();
  MsgCoordLatLongList::default_instance_->InitAsDefaultInstance();
  MsgLocation::default_instance_->InitAsDefaultInstance();
  MsgPoint::default_instance_->InitAsDefaultInstance();
  MsgUnitList::default_instance_->InitAsDefaultInstance();
  MsgPointList::default_instance_->InitAsDefaultInstance();
  MsgPolygonList::default_instance_->InitAsDefaultInstance();
  MsgLocationList::default_instance_->InitAsDefaultInstance();
  MsgUnitKnowledge::default_instance_->InitAsDefaultInstance();
  MsgUnitKnowledgeList::default_instance_->InitAsDefaultInstance();
  MsgObjectKnowledge::default_instance_->InitAsDefaultInstance();
  MsgObjectKnowledgeList::default_instance_->InitAsDefaultInstance();
  ObstacleType::default_instance_->InitAsDefaultInstance();
  MsgPlannedWork::default_instance_->InitAsDefaultInstance();
  MsgPlannedWorkList::default_instance_->InitAsDefaultInstance();
  MsgLogMaintenancePriorities::default_instance_->InitAsDefaultInstance();
  MsgMissionObjective::default_instance_->InitAsDefaultInstance();
  MsgMissionObjectiveList::default_instance_->InitAsDefaultInstance();
  MsgLimaOrder::default_instance_->InitAsDefaultInstance();
  MsgLimasOrder::default_instance_->InitAsDefaultInstance();
  SeqOfDotationStock::default_instance_->InitAsDefaultInstance();
  MsgPopulationKnowledge::default_instance_->InitAsDefaultInstance();
  MsgIntelligence::default_instance_->InitAsDefaultInstance();
  MsgIntelligenceList::default_instance_->InitAsDefaultInstance();
  MsgChangeDiplomacy::default_instance_->InitAsDefaultInstance();
  MsgAtlasNature::default_instance_->InitAsDefaultInstance();
  MsgEquipmentType::default_instance_->InitAsDefaultInstance();
  MsgDotationType::default_instance_->InitAsDefaultInstance();
  MsgUrbanBlock::default_instance_->InitAsDefaultInstance();
  MsgUrbanKnowledge::default_instance_->InitAsDefaultInstance();
  MsgMissionParameter::default_instance_->InitAsDefaultInstance();
  MsgMissionParameter_Value::default_instance_->InitAsDefaultInstance();
  MsgMissionParameters::default_instance_->InitAsDefaultInstance();
  MsgShape::default_instance_->InitAsDefaultInstance();
  MsgChatTarget::default_instance_->InitAsDefaultInstance();
  MsgTextMessage::default_instance_->InitAsDefaultInstance();
  MsgTacticalLine::default_instance_->InitAsDefaultInstance();
  MsgTacticalLine_Diffusion::default_instance_->InitAsDefaultInstance();
  MsgFormation::default_instance_->InitAsDefaultInstance();
  MsgFormationCreation::default_instance_->InitAsDefaultInstance();
  MsgUnitOrder::default_instance_->InitAsDefaultInstance();
  MsgAutomatOrder::default_instance_->InitAsDefaultInstance();
  MsgPopulationOrder::default_instance_->InitAsDefaultInstance();
  MsgObjectAttributeConstruction::default_instance_->InitAsDefaultInstance();
  MsgObjectAttributeMine::default_instance_->InitAsDefaultInstance();
  MsgObjectAttributeLogistic::default_instance_->InitAsDefaultInstance();
  MsgObjectAttributeInteractionHeight::default_instance_->InitAsDefaultInstance();
  MsgObjectAttributeObstacle::default_instance_->InitAsDefaultInstance();
  MsgObjectAttributeActivityTime::default_instance_->InitAsDefaultInstance();
  MsgObjectAttributeBypass::default_instance_->InitAsDefaultInstance();
  MsgObjectAttributeNBC::default_instance_->InitAsDefaultInstance();
  StockResource::default_instance_->InitAsDefaultInstance();
  MsgObjectAttributeStock::default_instance_->InitAsDefaultInstance();
  MsgObjectAttributeCrossingSite::default_instance_->InitAsDefaultInstance();
  MsgObjectAttributeSupplyRoute::default_instance_->InitAsDefaultInstance();
  MsgLocatedQuantity::default_instance_->InitAsDefaultInstance();
  MsgLocatedQuantityList::default_instance_->InitAsDefaultInstance();
  MsgObjectAttributeToxicCloud::default_instance_->InitAsDefaultInstance();
  MsgObjectAttributeFire::default_instance_->InitAsDefaultInstance();
  MsgObjectAttributeMedicalTreatment::default_instance_->InitAsDefaultInstance();
  MsgObjectAttributeNBCType::default_instance_->InitAsDefaultInstance();
  MsgObjectAttributes::default_instance_->InitAsDefaultInstance();
  MsgNote::default_instance_->InitAsDefaultInstance();
  MsgMeteoAttributes::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Common_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Common_2eproto {
  StaticDescriptorInitializer_Common_2eproto() {
    protobuf_AddDesc_Common_2eproto();
  }
} static_descriptor_initializer_Common_2eproto_;

const ::google::protobuf::EnumDescriptor* EnumDotationFamily_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnumDotationFamily_descriptor_;
}
bool EnumDotationFamily_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EnumAmmunitionFamily_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnumAmmunitionFamily_descriptor_;
}
bool EnumAmmunitionFamily_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EnumPrecipitationType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnumPrecipitationType_descriptor_;
}
bool EnumPrecipitationType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EnumLogMaintenanceHandlingStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnumLogMaintenanceHandlingStatus_descriptor_;
}
bool EnumLogMaintenanceHandlingStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EnumLogMedicalHandlingStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnumLogMedicalHandlingStatus_descriptor_;
}
bool EnumLogMedicalHandlingStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EnumUnitVisibility_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnumUnitVisibility_descriptor_;
}
bool EnumUnitVisibility_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EnumFireEffectType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnumFireEffectType_descriptor_;
}
bool EnumFireEffectType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EnumSimulationState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnumSimulationState_descriptor_;
}
bool EnumSimulationState_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EnumMeetingEngagementStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnumMeetingEngagementStatus_descriptor_;
}
bool EnumMeetingEngagementStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EnumOperationalStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnumOperationalStatus_descriptor_;
}
bool EnumOperationalStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MsgStartUnitFire_type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgStartUnitFire_type_descriptor_;
}
bool MsgStartUnitFire_type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EnumAutomatMode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnumAutomatMode_descriptor_;
}
bool EnumAutomatMode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EnumPopulationAttitude_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnumPopulationAttitude_descriptor_;
}
bool EnumPopulationAttitude_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EnumUnitTiredness_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnumUnitTiredness_descriptor_;
}
bool EnumUnitTiredness_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EnumUnitMorale_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnumUnitMorale_descriptor_;
}
bool EnumUnitMorale_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EnumUnitExperience_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnumUnitExperience_descriptor_;
}
bool EnumUnitExperience_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EnumHumanRank_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnumHumanRank_descriptor_;
}
bool EnumHumanRank_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EnumDiplomacy_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnumDiplomacy_descriptor_;
}
bool EnumDiplomacy_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EnumHumanWound_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnumHumanWound_descriptor_;
}
bool EnumHumanWound_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EnumLogMaintenanceRegimeTravail_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnumLogMaintenanceRegimeTravail_descriptor_;
}
bool EnumLogMaintenanceRegimeTravail_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EnumNatureLevel_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnumNatureLevel_descriptor_;
}
bool EnumNatureLevel_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int MsgTeam::kOidFieldNumber;
#endif  // !_MSC_VER

MsgTeam::MsgTeam() {
  SharedCtor();
}

void MsgTeam::InitAsDefaultInstance() {
}

MsgTeam::MsgTeam(const MsgTeam& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgTeam::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgTeam::~MsgTeam() {
  SharedDtor();
}

void MsgTeam::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgTeam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgTeam_descriptor_;
}

const MsgTeam& MsgTeam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgTeam* MsgTeam::default_instance_ = NULL;

MsgTeam* MsgTeam::New() const {
  return new MsgTeam;
}

void MsgTeam::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgTeam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgTeam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgTeam::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->oid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgTeam::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->oid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgTeam::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgTeam::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgTeam* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgTeam*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgTeam::MergeFrom(const MsgTeam& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgTeam::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgTeam::CopyFrom(const MsgTeam& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgTeam::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgTeam::Swap(MsgTeam* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgTeam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgTeam_descriptor_;
  metadata.reflection = MsgTeam_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgPopulation::kOidFieldNumber;
#endif  // !_MSC_VER

MsgPopulation::MsgPopulation() {
  SharedCtor();
}

void MsgPopulation::InitAsDefaultInstance() {
}

MsgPopulation::MsgPopulation(const MsgPopulation& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgPopulation::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgPopulation::~MsgPopulation() {
  SharedDtor();
}

void MsgPopulation::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgPopulation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgPopulation_descriptor_;
}

const MsgPopulation& MsgPopulation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgPopulation* MsgPopulation::default_instance_ = NULL;

MsgPopulation* MsgPopulation::New() const {
  return new MsgPopulation;
}

void MsgPopulation::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgPopulation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgPopulation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgPopulation::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->oid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgPopulation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->oid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgPopulation::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgPopulation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgPopulation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgPopulation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgPopulation::MergeFrom(const MsgPopulation& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgPopulation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgPopulation::CopyFrom(const MsgPopulation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgPopulation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgPopulation::Swap(MsgPopulation* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgPopulation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgPopulation_descriptor_;
  metadata.reflection = MsgPopulation_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgAutomat::kOidFieldNumber;
#endif  // !_MSC_VER

MsgAutomat::MsgAutomat() {
  SharedCtor();
}

void MsgAutomat::InitAsDefaultInstance() {
}

MsgAutomat::MsgAutomat(const MsgAutomat& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgAutomat::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgAutomat::~MsgAutomat() {
  SharedDtor();
}

void MsgAutomat::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgAutomat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgAutomat_descriptor_;
}

const MsgAutomat& MsgAutomat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgAutomat* MsgAutomat::default_instance_ = NULL;

MsgAutomat* MsgAutomat::New() const {
  return new MsgAutomat;
}

void MsgAutomat::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgAutomat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgAutomat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgAutomat::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->oid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgAutomat::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->oid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgAutomat::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgAutomat::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgAutomat* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgAutomat*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgAutomat::MergeFrom(const MsgAutomat& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgAutomat::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgAutomat::CopyFrom(const MsgAutomat& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgAutomat::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgAutomat::Swap(MsgAutomat* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgAutomat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgAutomat_descriptor_;
  metadata.reflection = MsgAutomat_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgUnit::kOidFieldNumber;
#endif  // !_MSC_VER

MsgUnit::MsgUnit() {
  SharedCtor();
}

void MsgUnit::InitAsDefaultInstance() {
}

MsgUnit::MsgUnit(const MsgUnit& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgUnit::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgUnit::~MsgUnit() {
  SharedDtor();
}

void MsgUnit::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgUnit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgUnit_descriptor_;
}

const MsgUnit& MsgUnit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgUnit* MsgUnit::default_instance_ = NULL;

MsgUnit* MsgUnit::New() const {
  return new MsgUnit;
}

void MsgUnit::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgUnit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgUnit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgUnit::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->oid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgUnit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->oid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgUnit::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgUnit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgUnit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgUnit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgUnit::MergeFrom(const MsgUnit& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgUnit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgUnit::CopyFrom(const MsgUnit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUnit::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgUnit::Swap(MsgUnit* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgUnit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgUnit_descriptor_;
  metadata.reflection = MsgUnit_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgUnitFire::kOidFieldNumber;
#endif  // !_MSC_VER

MsgUnitFire::MsgUnitFire() {
  SharedCtor();
}

void MsgUnitFire::InitAsDefaultInstance() {
}

MsgUnitFire::MsgUnitFire(const MsgUnitFire& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgUnitFire::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgUnitFire::~MsgUnitFire() {
  SharedDtor();
}

void MsgUnitFire::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgUnitFire::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgUnitFire_descriptor_;
}

const MsgUnitFire& MsgUnitFire::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgUnitFire* MsgUnitFire::default_instance_ = NULL;

MsgUnitFire* MsgUnitFire::New() const {
  return new MsgUnitFire;
}

void MsgUnitFire::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgUnitFire::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgUnitFire::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgUnitFire::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->oid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgUnitFire::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->oid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgUnitFire::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgUnitFire::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgUnitFire* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgUnitFire*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgUnitFire::MergeFrom(const MsgUnitFire& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgUnitFire::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgUnitFire::CopyFrom(const MsgUnitFire& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUnitFire::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgUnitFire::Swap(MsgUnitFire* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgUnitFire::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgUnitFire_descriptor_;
  metadata.reflection = MsgUnitFire_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDotationStock::kRessourceIdFieldNumber;
const int MsgDotationStock::kQuantiteDisponibleFieldNumber;
#endif  // !_MSC_VER

MsgDotationStock::MsgDotationStock() {
  SharedCtor();
}

void MsgDotationStock::InitAsDefaultInstance() {
}

MsgDotationStock::MsgDotationStock(const MsgDotationStock& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgDotationStock::SharedCtor() {
  _cached_size_ = 0;
  ressource_id_ = 0;
  quantite_disponible_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDotationStock::~MsgDotationStock() {
  SharedDtor();
}

void MsgDotationStock::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgDotationStock::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDotationStock_descriptor_;
}

const MsgDotationStock& MsgDotationStock::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgDotationStock* MsgDotationStock::default_instance_ = NULL;

MsgDotationStock* MsgDotationStock::New() const {
  return new MsgDotationStock;
}

void MsgDotationStock::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ressource_id_ = 0;
    quantite_disponible_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDotationStock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ressource_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &ressource_id_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_quantite_disponible;
        break;
      }
      
      // required int32 quantite_disponible = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_quantite_disponible:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &quantite_disponible_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgDotationStock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgDotationStock::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 ressource_id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ressource_id(), output);
  }
  
  // required int32 quantite_disponible = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->quantite_disponible(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgDotationStock::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 ressource_id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ressource_id(), target);
  }
  
  // required int32 quantite_disponible = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->quantite_disponible(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgDotationStock::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ressource_id = 1;
    if (has_ressource_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ressource_id());
    }
    
    // required int32 quantite_disponible = 2;
    if (has_quantite_disponible()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->quantite_disponible());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgDotationStock::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDotationStock* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDotationStock*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDotationStock::MergeFrom(const MsgDotationStock& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_ressource_id(from.ressource_id());
    }
    if (from._has_bit(1)) {
      set_quantite_disponible(from.quantite_disponible());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDotationStock::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDotationStock::CopyFrom(const MsgDotationStock& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDotationStock::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void MsgDotationStock::Swap(MsgDotationStock* other) {
  if (other != this) {
    std::swap(ressource_id_, other->ressource_id_);
    std::swap(quantite_disponible_, other->quantite_disponible_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDotationStock::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDotationStock_descriptor_;
  metadata.reflection = MsgDotationStock_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgHeading::kHeadingFieldNumber;
#endif  // !_MSC_VER

MsgHeading::MsgHeading() {
  SharedCtor();
}

void MsgHeading::InitAsDefaultInstance() {
}

MsgHeading::MsgHeading(const MsgHeading& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgHeading::SharedCtor() {
  _cached_size_ = 0;
  heading_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgHeading::~MsgHeading() {
  SharedDtor();
}

void MsgHeading::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgHeading::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgHeading_descriptor_;
}

const MsgHeading& MsgHeading::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgHeading* MsgHeading::default_instance_ = NULL;

MsgHeading* MsgHeading::New() const {
  return new MsgHeading;
}

void MsgHeading::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    heading_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgHeading::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 heading = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &heading_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgHeading::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgHeading::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 heading = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->heading(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgHeading::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 heading = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->heading(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgHeading::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 heading = 1;
    if (has_heading()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->heading());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgHeading::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgHeading* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgHeading*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgHeading::MergeFrom(const MsgHeading& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_heading(from.heading());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgHeading::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHeading::CopyFrom(const MsgHeading& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHeading::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgHeading::Swap(MsgHeading* other) {
  if (other != this) {
    std::swap(heading_, other->heading_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgHeading::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgHeading_descriptor_;
  metadata.reflection = MsgHeading_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgUnitType::kTypeFieldNumber;
#endif  // !_MSC_VER

MsgUnitType::MsgUnitType() {
  SharedCtor();
}

void MsgUnitType::InitAsDefaultInstance() {
}

MsgUnitType::MsgUnitType(const MsgUnitType& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgUnitType::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgUnitType::~MsgUnitType() {
  SharedDtor();
}

void MsgUnitType::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgUnitType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgUnitType_descriptor_;
}

const MsgUnitType& MsgUnitType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgUnitType* MsgUnitType::default_instance_ = NULL;

MsgUnitType* MsgUnitType::New() const {
  return new MsgUnitType;
}

void MsgUnitType::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgUnitType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &type_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgUnitType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgUnitType::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 type = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgUnitType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 type = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgUnitType::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgUnitType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgUnitType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgUnitType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgUnitType::MergeFrom(const MsgUnitType& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgUnitType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgUnitType::CopyFrom(const MsgUnitType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUnitType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgUnitType::Swap(MsgUnitType* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgUnitType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgUnitType_descriptor_;
  metadata.reflection = MsgUnitType_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgListOID::kElemFieldNumber;
#endif  // !_MSC_VER

MsgListOID::MsgListOID() {
  SharedCtor();
}

void MsgListOID::InitAsDefaultInstance() {
}

MsgListOID::MsgListOID(const MsgListOID& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgListOID::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgListOID::~MsgListOID() {
  SharedDtor();
}

void MsgListOID::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgListOID::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgListOID_descriptor_;
}

const MsgListOID& MsgListOID::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgListOID* MsgListOID::default_instance_ = NULL;

MsgListOID* MsgListOID::New() const {
  return new MsgListOID;
}

void MsgListOID::Clear() {
  elem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgListOID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 elem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_elem:
        ::google::protobuf::int32 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &value));
        add_elem(value);
        if (input->ExpectTag(8)) goto parse_elem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgListOID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgListOID::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated int32 elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->elem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgListOID::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->elem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgListOID::ByteSize() const {
  int total_size = 0;
  
  // repeated int32 elem = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->elem_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->elem(i));
    }
    total_size += 1 * this->elem_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgListOID::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgListOID* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgListOID*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgListOID::MergeFrom(const MsgListOID& from) {
  GOOGLE_CHECK_NE(&from, this);
  elem_.MergeFrom(from.elem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgListOID::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgListOID::CopyFrom(const MsgListOID& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgListOID::IsInitialized() const {
  
  return true;
}

void MsgListOID::Swap(MsgListOID* other) {
  if (other != this) {
    elem_.Swap(&other->elem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgListOID::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgListOID_descriptor_;
  metadata.reflection = MsgListOID_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgDateTime::_default_data_;
#ifndef _MSC_VER
const int MsgDateTime::kDataFieldNumber;
#endif  // !_MSC_VER

MsgDateTime::MsgDateTime() {
  SharedCtor();
}

void MsgDateTime::InitAsDefaultInstance() {
}

MsgDateTime::MsgDateTime(const MsgDateTime& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgDateTime::SharedCtor() {
  _cached_size_ = 0;
  data_ = const_cast< ::std::string*>(&_default_data_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDateTime::~MsgDateTime() {
  SharedDtor();
}

void MsgDateTime::SharedDtor() {
  if (data_ != &_default_data_) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgDateTime::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDateTime_descriptor_;
}

const MsgDateTime& MsgDateTime::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgDateTime* MsgDateTime::default_instance_ = NULL;

MsgDateTime* MsgDateTime::New() const {
  return new MsgDateTime;
}

void MsgDateTime::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (data_ != &_default_data_) {
        data_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDateTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string data = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_data()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->data().data(), this->data().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgDateTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgDateTime::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required string data = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->data(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgDateTime::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string data = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgDateTime::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->data());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgDateTime::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDateTime* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDateTime*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDateTime::MergeFrom(const MsgDateTime& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDateTime::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDateTime::CopyFrom(const MsgDateTime& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDateTime::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgDateTime::Swap(MsgDateTime* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDateTime::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDateTime_descriptor_;
  metadata.reflection = MsgDateTime_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDotationQuota::kRessourceIdFieldNumber;
const int MsgDotationQuota::kQuotaDisponibleFieldNumber;
#endif  // !_MSC_VER

MsgDotationQuota::MsgDotationQuota() {
  SharedCtor();
}

void MsgDotationQuota::InitAsDefaultInstance() {
}

MsgDotationQuota::MsgDotationQuota(const MsgDotationQuota& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgDotationQuota::SharedCtor() {
  _cached_size_ = 0;
  ressource_id_ = 0;
  quota_disponible_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDotationQuota::~MsgDotationQuota() {
  SharedDtor();
}

void MsgDotationQuota::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgDotationQuota::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDotationQuota_descriptor_;
}

const MsgDotationQuota& MsgDotationQuota::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgDotationQuota* MsgDotationQuota::default_instance_ = NULL;

MsgDotationQuota* MsgDotationQuota::New() const {
  return new MsgDotationQuota;
}

void MsgDotationQuota::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ressource_id_ = 0;
    quota_disponible_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDotationQuota::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ressource_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &ressource_id_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_quota_disponible;
        break;
      }
      
      // required int32 quota_disponible = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_quota_disponible:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &quota_disponible_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgDotationQuota::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgDotationQuota::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 ressource_id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ressource_id(), output);
  }
  
  // required int32 quota_disponible = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->quota_disponible(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgDotationQuota::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 ressource_id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ressource_id(), target);
  }
  
  // required int32 quota_disponible = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->quota_disponible(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgDotationQuota::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ressource_id = 1;
    if (has_ressource_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ressource_id());
    }
    
    // required int32 quota_disponible = 2;
    if (has_quota_disponible()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->quota_disponible());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgDotationQuota::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDotationQuota* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDotationQuota*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDotationQuota::MergeFrom(const MsgDotationQuota& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_ressource_id(from.ressource_id());
    }
    if (from._has_bit(1)) {
      set_quota_disponible(from.quota_disponible());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDotationQuota::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDotationQuota::CopyFrom(const MsgDotationQuota& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDotationQuota::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void MsgDotationQuota::Swap(MsgDotationQuota* other) {
  if (other != this) {
    std::swap(ressource_id_, other->ressource_id_);
    std::swap(quota_disponible_, other->quota_disponible_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDotationQuota::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDotationQuota_descriptor_;
  metadata.reflection = MsgDotationQuota_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SeqOfDotationQuota::kElemFieldNumber;
#endif  // !_MSC_VER

SeqOfDotationQuota::SeqOfDotationQuota() {
  SharedCtor();
}

void SeqOfDotationQuota::InitAsDefaultInstance() {
}

SeqOfDotationQuota::SeqOfDotationQuota(const SeqOfDotationQuota& from) {
  SharedCtor();
  MergeFrom(from);
}

void SeqOfDotationQuota::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SeqOfDotationQuota::~SeqOfDotationQuota() {
  SharedDtor();
}

void SeqOfDotationQuota::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* SeqOfDotationQuota::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SeqOfDotationQuota_descriptor_;
}

const SeqOfDotationQuota& SeqOfDotationQuota::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

SeqOfDotationQuota* SeqOfDotationQuota::default_instance_ = NULL;

SeqOfDotationQuota* SeqOfDotationQuota::New() const {
  return new SeqOfDotationQuota;
}

void SeqOfDotationQuota::Clear() {
  elem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SeqOfDotationQuota::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Common.MsgDotationQuota elem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_elem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_elem()));
        if (input->ExpectTag(10)) goto parse_elem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SeqOfDotationQuota::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    SeqOfDotationQuota::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .Common.MsgDotationQuota elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->elem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SeqOfDotationQuota::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Common.MsgDotationQuota elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->elem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SeqOfDotationQuota::ByteSize() const {
  int total_size = 0;
  
  // repeated .Common.MsgDotationQuota elem = 1;
  total_size += 1 * this->elem_size();
  for (int i = 0; i < this->elem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elem(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void SeqOfDotationQuota::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SeqOfDotationQuota* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SeqOfDotationQuota*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SeqOfDotationQuota::MergeFrom(const SeqOfDotationQuota& from) {
  GOOGLE_CHECK_NE(&from, this);
  elem_.MergeFrom(from.elem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SeqOfDotationQuota::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SeqOfDotationQuota::CopyFrom(const SeqOfDotationQuota& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SeqOfDotationQuota::IsInitialized() const {
  
  for (int i = 0; i < elem_size(); i++) {
    if (!this->elem(i).IsInitialized()) return false;
  }
  return true;
}

void SeqOfDotationQuota::Swap(SeqOfDotationQuota* other) {
  if (other != this) {
    elem_.Swap(&other->elem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SeqOfDotationQuota::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SeqOfDotationQuota_descriptor_;
  metadata.reflection = SeqOfDotationQuota_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MsgControlStop::MsgControlStop() {
  SharedCtor();
}

void MsgControlStop::InitAsDefaultInstance() {
}

MsgControlStop::MsgControlStop(const MsgControlStop& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgControlStop::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgControlStop::~MsgControlStop() {
  SharedDtor();
}

void MsgControlStop::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgControlStop::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlStop_descriptor_;
}

const MsgControlStop& MsgControlStop::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgControlStop* MsgControlStop::default_instance_ = NULL;

MsgControlStop* MsgControlStop::New() const {
  return new MsgControlStop;
}

void MsgControlStop::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgControlStop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void MsgControlStop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgControlStop::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgControlStop::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgControlStop::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgControlStop::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgControlStop* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgControlStop*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgControlStop::MergeFrom(const MsgControlStop& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgControlStop::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgControlStop::CopyFrom(const MsgControlStop& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgControlStop::IsInitialized() const {
  
  return true;
}

void MsgControlStop::Swap(MsgControlStop* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgControlStop::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgControlStop_descriptor_;
  metadata.reflection = MsgControlStop_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MsgControlPause::MsgControlPause() {
  SharedCtor();
}

void MsgControlPause::InitAsDefaultInstance() {
}

MsgControlPause::MsgControlPause(const MsgControlPause& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgControlPause::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgControlPause::~MsgControlPause() {
  SharedDtor();
}

void MsgControlPause::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgControlPause::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlPause_descriptor_;
}

const MsgControlPause& MsgControlPause::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgControlPause* MsgControlPause::default_instance_ = NULL;

MsgControlPause* MsgControlPause::New() const {
  return new MsgControlPause;
}

void MsgControlPause::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgControlPause::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void MsgControlPause::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgControlPause::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgControlPause::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgControlPause::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgControlPause::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgControlPause* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgControlPause*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgControlPause::MergeFrom(const MsgControlPause& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgControlPause::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgControlPause::CopyFrom(const MsgControlPause& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgControlPause::IsInitialized() const {
  
  return true;
}

void MsgControlPause::Swap(MsgControlPause* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgControlPause::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgControlPause_descriptor_;
  metadata.reflection = MsgControlPause_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MsgControlResume::MsgControlResume() {
  SharedCtor();
}

void MsgControlResume::InitAsDefaultInstance() {
}

MsgControlResume::MsgControlResume(const MsgControlResume& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgControlResume::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgControlResume::~MsgControlResume() {
  SharedDtor();
}

void MsgControlResume::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgControlResume::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlResume_descriptor_;
}

const MsgControlResume& MsgControlResume::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgControlResume* MsgControlResume::default_instance_ = NULL;

MsgControlResume* MsgControlResume::New() const {
  return new MsgControlResume;
}

void MsgControlResume::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgControlResume::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void MsgControlResume::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgControlResume::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgControlResume::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgControlResume::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgControlResume::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgControlResume* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgControlResume*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgControlResume::MergeFrom(const MsgControlResume& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgControlResume::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgControlResume::CopyFrom(const MsgControlResume& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgControlResume::IsInitialized() const {
  
  return true;
}

void MsgControlResume::Swap(MsgControlResume* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgControlResume::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgControlResume_descriptor_;
  metadata.reflection = MsgControlResume_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLine::kLocationFieldNumber;
#endif  // !_MSC_VER

MsgLine::MsgLine() {
  SharedCtor();
}

void MsgLine::InitAsDefaultInstance() {
  location_ = const_cast< ::Common::MsgLocation*>(&::Common::MsgLocation::default_instance());
}

MsgLine::MsgLine(const MsgLine& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLine::SharedCtor() {
  _cached_size_ = 0;
  location_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLine::~MsgLine() {
  SharedDtor();
}

void MsgLine::SharedDtor() {
  if (this != default_instance_) {
    delete location_;
  }
}

const ::google::protobuf::Descriptor* MsgLine::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLine_descriptor_;
}

const MsgLine& MsgLine::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgLine* MsgLine::default_instance_ = NULL;

MsgLine* MsgLine::New() const {
  return new MsgLine;
}

void MsgLine::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (location_ != NULL) location_->::Common::MsgLocation::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MsgLocation location = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_location()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLine::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MsgLocation location = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->location(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLine::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MsgLocation location = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->location(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLine::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MsgLocation location = 1;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->location());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLine::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLine* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLine*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLine::MergeFrom(const MsgLine& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_location()->::Common::MsgLocation::MergeFrom(from.location());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLine::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLine::CopyFrom(const MsgLine& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLine::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_location()) {
    if (!this->location().IsInitialized()) return false;
  }
  return true;
}

void MsgLine::Swap(MsgLine* other) {
  if (other != this) {
    std::swap(location_, other->location_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLine::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLine_descriptor_;
  metadata.reflection = MsgLine_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgControlChangeTimeFactor::kTimeFactorFieldNumber;
#endif  // !_MSC_VER

MsgControlChangeTimeFactor::MsgControlChangeTimeFactor() {
  SharedCtor();
}

void MsgControlChangeTimeFactor::InitAsDefaultInstance() {
}

MsgControlChangeTimeFactor::MsgControlChangeTimeFactor(const MsgControlChangeTimeFactor& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgControlChangeTimeFactor::SharedCtor() {
  _cached_size_ = 0;
  time_factor_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgControlChangeTimeFactor::~MsgControlChangeTimeFactor() {
  SharedDtor();
}

void MsgControlChangeTimeFactor::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgControlChangeTimeFactor::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgControlChangeTimeFactor_descriptor_;
}

const MsgControlChangeTimeFactor& MsgControlChangeTimeFactor::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgControlChangeTimeFactor* MsgControlChangeTimeFactor::default_instance_ = NULL;

MsgControlChangeTimeFactor* MsgControlChangeTimeFactor::New() const {
  return new MsgControlChangeTimeFactor;
}

void MsgControlChangeTimeFactor::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    time_factor_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgControlChangeTimeFactor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 time_factor = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &time_factor_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgControlChangeTimeFactor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgControlChangeTimeFactor::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 time_factor = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->time_factor(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgControlChangeTimeFactor::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 time_factor = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->time_factor(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgControlChangeTimeFactor::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 time_factor = 1;
    if (has_time_factor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->time_factor());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgControlChangeTimeFactor::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgControlChangeTimeFactor* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgControlChangeTimeFactor*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgControlChangeTimeFactor::MergeFrom(const MsgControlChangeTimeFactor& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_time_factor(from.time_factor());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgControlChangeTimeFactor::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgControlChangeTimeFactor::CopyFrom(const MsgControlChangeTimeFactor& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgControlChangeTimeFactor::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgControlChangeTimeFactor::Swap(MsgControlChangeTimeFactor* other) {
  if (other != this) {
    std::swap(time_factor_, other->time_factor_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgControlChangeTimeFactor::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgControlChangeTimeFactor_descriptor_;
  metadata.reflection = MsgControlChangeTimeFactor_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgAutomatChangeKnowledgeGroup::kOidFieldNumber;
const int MsgAutomatChangeKnowledgeGroup::kOidCampFieldNumber;
const int MsgAutomatChangeKnowledgeGroup::kOidGroupeConnaissanceFieldNumber;
#endif  // !_MSC_VER

MsgAutomatChangeKnowledgeGroup::MsgAutomatChangeKnowledgeGroup() {
  SharedCtor();
}

void MsgAutomatChangeKnowledgeGroup::InitAsDefaultInstance() {
}

MsgAutomatChangeKnowledgeGroup::MsgAutomatChangeKnowledgeGroup(const MsgAutomatChangeKnowledgeGroup& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgAutomatChangeKnowledgeGroup::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0;
  oid_camp_ = 0;
  oid_groupe_connaissance_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgAutomatChangeKnowledgeGroup::~MsgAutomatChangeKnowledgeGroup() {
  SharedDtor();
}

void MsgAutomatChangeKnowledgeGroup::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgAutomatChangeKnowledgeGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgAutomatChangeKnowledgeGroup_descriptor_;
}

const MsgAutomatChangeKnowledgeGroup& MsgAutomatChangeKnowledgeGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgAutomatChangeKnowledgeGroup* MsgAutomatChangeKnowledgeGroup::default_instance_ = NULL;

MsgAutomatChangeKnowledgeGroup* MsgAutomatChangeKnowledgeGroup::New() const {
  return new MsgAutomatChangeKnowledgeGroup;
}

void MsgAutomatChangeKnowledgeGroup::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0;
    oid_camp_ = 0;
    oid_groupe_connaissance_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgAutomatChangeKnowledgeGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_oid_camp;
        break;
      }
      
      // required int32 oid_camp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_oid_camp:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oid_camp_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_oid_groupe_connaissance;
        break;
      }
      
      // required int32 oid_groupe_connaissance = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_oid_groupe_connaissance:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oid_groupe_connaissance_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgAutomatChangeKnowledgeGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgAutomatChangeKnowledgeGroup::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->oid(), output);
  }
  
  // required int32 oid_camp = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->oid_camp(), output);
  }
  
  // required int32 oid_groupe_connaissance = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->oid_groupe_connaissance(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgAutomatChangeKnowledgeGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->oid(), target);
  }
  
  // required int32 oid_camp = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->oid_camp(), target);
  }
  
  // required int32 oid_groupe_connaissance = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->oid_groupe_connaissance(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgAutomatChangeKnowledgeGroup::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oid());
    }
    
    // required int32 oid_camp = 2;
    if (has_oid_camp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oid_camp());
    }
    
    // required int32 oid_groupe_connaissance = 3;
    if (has_oid_groupe_connaissance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oid_groupe_connaissance());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgAutomatChangeKnowledgeGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgAutomatChangeKnowledgeGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgAutomatChangeKnowledgeGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgAutomatChangeKnowledgeGroup::MergeFrom(const MsgAutomatChangeKnowledgeGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
    if (from._has_bit(1)) {
      set_oid_camp(from.oid_camp());
    }
    if (from._has_bit(2)) {
      set_oid_groupe_connaissance(from.oid_groupe_connaissance());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgAutomatChangeKnowledgeGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgAutomatChangeKnowledgeGroup::CopyFrom(const MsgAutomatChangeKnowledgeGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgAutomatChangeKnowledgeGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  return true;
}

void MsgAutomatChangeKnowledgeGroup::Swap(MsgAutomatChangeKnowledgeGroup* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(oid_camp_, other->oid_camp_);
    std::swap(oid_groupe_connaissance_, other->oid_groupe_connaissance_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgAutomatChangeKnowledgeGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgAutomatChangeKnowledgeGroup_descriptor_;
  metadata.reflection = MsgAutomatChangeKnowledgeGroup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgAutomatChangeLogisticLinks::kOidFieldNumber;
const int MsgAutomatChangeLogisticLinks::kOidTc2FieldNumber;
const int MsgAutomatChangeLogisticLinks::kOidMaintenanceFieldNumber;
const int MsgAutomatChangeLogisticLinks::kOidSanteFieldNumber;
const int MsgAutomatChangeLogisticLinks::kOidRavitaillementFieldNumber;
#endif  // !_MSC_VER

MsgAutomatChangeLogisticLinks::MsgAutomatChangeLogisticLinks() {
  SharedCtor();
}

void MsgAutomatChangeLogisticLinks::InitAsDefaultInstance() {
}

MsgAutomatChangeLogisticLinks::MsgAutomatChangeLogisticLinks(const MsgAutomatChangeLogisticLinks& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgAutomatChangeLogisticLinks::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0;
  oid_tc2_ = 0;
  oid_maintenance_ = 0;
  oid_sante_ = 0;
  oid_ravitaillement_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgAutomatChangeLogisticLinks::~MsgAutomatChangeLogisticLinks() {
  SharedDtor();
}

void MsgAutomatChangeLogisticLinks::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgAutomatChangeLogisticLinks::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgAutomatChangeLogisticLinks_descriptor_;
}

const MsgAutomatChangeLogisticLinks& MsgAutomatChangeLogisticLinks::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgAutomatChangeLogisticLinks* MsgAutomatChangeLogisticLinks::default_instance_ = NULL;

MsgAutomatChangeLogisticLinks* MsgAutomatChangeLogisticLinks::New() const {
  return new MsgAutomatChangeLogisticLinks;
}

void MsgAutomatChangeLogisticLinks::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0;
    oid_tc2_ = 0;
    oid_maintenance_ = 0;
    oid_sante_ = 0;
    oid_ravitaillement_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgAutomatChangeLogisticLinks::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_oid_tc2;
        break;
      }
      
      // optional int32 oid_tc2 = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_oid_tc2:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oid_tc2_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_oid_maintenance;
        break;
      }
      
      // optional int32 oid_maintenance = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_oid_maintenance:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oid_maintenance_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_oid_sante;
        break;
      }
      
      // optional int32 oid_sante = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_oid_sante:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oid_sante_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_oid_ravitaillement;
        break;
      }
      
      // optional int32 oid_ravitaillement = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_oid_ravitaillement:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oid_ravitaillement_));
        _set_bit(4);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgAutomatChangeLogisticLinks::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgAutomatChangeLogisticLinks::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->oid(), output);
  }
  
  // optional int32 oid_tc2 = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->oid_tc2(), output);
  }
  
  // optional int32 oid_maintenance = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->oid_maintenance(), output);
  }
  
  // optional int32 oid_sante = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->oid_sante(), output);
  }
  
  // optional int32 oid_ravitaillement = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->oid_ravitaillement(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgAutomatChangeLogisticLinks::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->oid(), target);
  }
  
  // optional int32 oid_tc2 = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->oid_tc2(), target);
  }
  
  // optional int32 oid_maintenance = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->oid_maintenance(), target);
  }
  
  // optional int32 oid_sante = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->oid_sante(), target);
  }
  
  // optional int32 oid_ravitaillement = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->oid_ravitaillement(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgAutomatChangeLogisticLinks::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oid());
    }
    
    // optional int32 oid_tc2 = 2;
    if (has_oid_tc2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oid_tc2());
    }
    
    // optional int32 oid_maintenance = 3;
    if (has_oid_maintenance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oid_maintenance());
    }
    
    // optional int32 oid_sante = 4;
    if (has_oid_sante()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oid_sante());
    }
    
    // optional int32 oid_ravitaillement = 5;
    if (has_oid_ravitaillement()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oid_ravitaillement());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgAutomatChangeLogisticLinks::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgAutomatChangeLogisticLinks* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgAutomatChangeLogisticLinks*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgAutomatChangeLogisticLinks::MergeFrom(const MsgAutomatChangeLogisticLinks& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
    if (from._has_bit(1)) {
      set_oid_tc2(from.oid_tc2());
    }
    if (from._has_bit(2)) {
      set_oid_maintenance(from.oid_maintenance());
    }
    if (from._has_bit(3)) {
      set_oid_sante(from.oid_sante());
    }
    if (from._has_bit(4)) {
      set_oid_ravitaillement(from.oid_ravitaillement());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgAutomatChangeLogisticLinks::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgAutomatChangeLogisticLinks::CopyFrom(const MsgAutomatChangeLogisticLinks& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgAutomatChangeLogisticLinks::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgAutomatChangeLogisticLinks::Swap(MsgAutomatChangeLogisticLinks* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(oid_tc2_, other->oid_tc2_);
    std::swap(oid_maintenance_, other->oid_maintenance_);
    std::swap(oid_sante_, other->oid_sante_);
    std::swap(oid_ravitaillement_, other->oid_ravitaillement_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgAutomatChangeLogisticLinks::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgAutomatChangeLogisticLinks_descriptor_;
  metadata.reflection = MsgAutomatChangeLogisticLinks_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgAutomatChangeSuperior_oid_superior::kFormationFieldNumber;
const int MsgAutomatChangeSuperior_oid_superior::kAutomateFieldNumber;
#endif  // !_MSC_VER

MsgAutomatChangeSuperior_oid_superior::MsgAutomatChangeSuperior_oid_superior() {
  SharedCtor();
}

void MsgAutomatChangeSuperior_oid_superior::InitAsDefaultInstance() {
  formation_ = const_cast< ::Common::MsgFormation*>(&::Common::MsgFormation::default_instance());
  automate_ = const_cast< ::Common::MsgAutomat*>(&::Common::MsgAutomat::default_instance());
}

MsgAutomatChangeSuperior_oid_superior::MsgAutomatChangeSuperior_oid_superior(const MsgAutomatChangeSuperior_oid_superior& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgAutomatChangeSuperior_oid_superior::SharedCtor() {
  _cached_size_ = 0;
  formation_ = NULL;
  automate_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgAutomatChangeSuperior_oid_superior::~MsgAutomatChangeSuperior_oid_superior() {
  SharedDtor();
}

void MsgAutomatChangeSuperior_oid_superior::SharedDtor() {
  if (this != default_instance_) {
    delete formation_;
    delete automate_;
  }
}

const ::google::protobuf::Descriptor* MsgAutomatChangeSuperior_oid_superior::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgAutomatChangeSuperior_oid_superior_descriptor_;
}

const MsgAutomatChangeSuperior_oid_superior& MsgAutomatChangeSuperior_oid_superior::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgAutomatChangeSuperior_oid_superior* MsgAutomatChangeSuperior_oid_superior::default_instance_ = NULL;

MsgAutomatChangeSuperior_oid_superior* MsgAutomatChangeSuperior_oid_superior::New() const {
  return new MsgAutomatChangeSuperior_oid_superior;
}

void MsgAutomatChangeSuperior_oid_superior::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (formation_ != NULL) formation_->::Common::MsgFormation::Clear();
    }
    if (_has_bit(1)) {
      if (automate_ != NULL) automate_->::Common::MsgAutomat::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgAutomatChangeSuperior_oid_superior::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Common.MsgFormation formation = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_formation()));
        if (input->ExpectTag(18)) goto parse_automate;
        break;
      }
      
      // optional .Common.MsgAutomat automate = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_automate:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_automate()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgAutomatChangeSuperior_oid_superior::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgAutomatChangeSuperior_oid_superior::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .Common.MsgFormation formation = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->formation(), output);
  }
  
  // optional .Common.MsgAutomat automate = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->automate(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgAutomatChangeSuperior_oid_superior::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .Common.MsgFormation formation = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->formation(), target);
  }
  
  // optional .Common.MsgAutomat automate = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->automate(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgAutomatChangeSuperior_oid_superior::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Common.MsgFormation formation = 1;
    if (has_formation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->formation());
    }
    
    // optional .Common.MsgAutomat automate = 2;
    if (has_automate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->automate());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgAutomatChangeSuperior_oid_superior::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgAutomatChangeSuperior_oid_superior* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgAutomatChangeSuperior_oid_superior*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgAutomatChangeSuperior_oid_superior::MergeFrom(const MsgAutomatChangeSuperior_oid_superior& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_formation()->::Common::MsgFormation::MergeFrom(from.formation());
    }
    if (from._has_bit(1)) {
      mutable_automate()->::Common::MsgAutomat::MergeFrom(from.automate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgAutomatChangeSuperior_oid_superior::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgAutomatChangeSuperior_oid_superior::CopyFrom(const MsgAutomatChangeSuperior_oid_superior& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgAutomatChangeSuperior_oid_superior::IsInitialized() const {
  
  if (has_formation()) {
    if (!this->formation().IsInitialized()) return false;
  }
  if (has_automate()) {
    if (!this->automate().IsInitialized()) return false;
  }
  return true;
}

void MsgAutomatChangeSuperior_oid_superior::Swap(MsgAutomatChangeSuperior_oid_superior* other) {
  if (other != this) {
    std::swap(formation_, other->formation_);
    std::swap(automate_, other->automate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgAutomatChangeSuperior_oid_superior::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgAutomatChangeSuperior_oid_superior_descriptor_;
  metadata.reflection = MsgAutomatChangeSuperior_oid_superior_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgAutomatChangeSuperior::kOidFieldNumber;
const int MsgAutomatChangeSuperior::kOidSuperiorFieldNumber;
#endif  // !_MSC_VER

MsgAutomatChangeSuperior::MsgAutomatChangeSuperior() {
  SharedCtor();
}

void MsgAutomatChangeSuperior::InitAsDefaultInstance() {
  oid_superior_ = const_cast< ::Common::MsgAutomatChangeSuperior_oid_superior*>(&::Common::MsgAutomatChangeSuperior_oid_superior::default_instance());
}

MsgAutomatChangeSuperior::MsgAutomatChangeSuperior(const MsgAutomatChangeSuperior& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgAutomatChangeSuperior::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0;
  oid_superior_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgAutomatChangeSuperior::~MsgAutomatChangeSuperior() {
  SharedDtor();
}

void MsgAutomatChangeSuperior::SharedDtor() {
  if (this != default_instance_) {
    delete oid_superior_;
  }
}

const ::google::protobuf::Descriptor* MsgAutomatChangeSuperior::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgAutomatChangeSuperior_descriptor_;
}

const MsgAutomatChangeSuperior& MsgAutomatChangeSuperior::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgAutomatChangeSuperior* MsgAutomatChangeSuperior::default_instance_ = NULL;

MsgAutomatChangeSuperior* MsgAutomatChangeSuperior::New() const {
  return new MsgAutomatChangeSuperior;
}

void MsgAutomatChangeSuperior::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0;
    if (_has_bit(1)) {
      if (oid_superior_ != NULL) oid_superior_->::Common::MsgAutomatChangeSuperior_oid_superior::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgAutomatChangeSuperior::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_oid_superior;
        break;
      }
      
      // required .Common.MsgAutomatChangeSuperior_oid_superior oid_superior = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_oid_superior:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_oid_superior()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgAutomatChangeSuperior::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgAutomatChangeSuperior::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->oid(), output);
  }
  
  // required .Common.MsgAutomatChangeSuperior_oid_superior oid_superior = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->oid_superior(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgAutomatChangeSuperior::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->oid(), target);
  }
  
  // required .Common.MsgAutomatChangeSuperior_oid_superior oid_superior = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->oid_superior(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgAutomatChangeSuperior::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oid());
    }
    
    // required .Common.MsgAutomatChangeSuperior_oid_superior oid_superior = 2;
    if (has_oid_superior()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->oid_superior());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgAutomatChangeSuperior::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgAutomatChangeSuperior* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgAutomatChangeSuperior*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgAutomatChangeSuperior::MergeFrom(const MsgAutomatChangeSuperior& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
    if (from._has_bit(1)) {
      mutable_oid_superior()->::Common::MsgAutomatChangeSuperior_oid_superior::MergeFrom(from.oid_superior());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgAutomatChangeSuperior::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgAutomatChangeSuperior::CopyFrom(const MsgAutomatChangeSuperior& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgAutomatChangeSuperior::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_oid_superior()) {
    if (!this->oid_superior().IsInitialized()) return false;
  }
  return true;
}

void MsgAutomatChangeSuperior::Swap(MsgAutomatChangeSuperior* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(oid_superior_, other->oid_superior_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgAutomatChangeSuperior::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgAutomatChangeSuperior_descriptor_;
  metadata.reflection = MsgAutomatChangeSuperior_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgUnitChangeSuperior::kOidFieldNumber;
const int MsgUnitChangeSuperior::kOidAutomateFieldNumber;
#endif  // !_MSC_VER

MsgUnitChangeSuperior::MsgUnitChangeSuperior() {
  SharedCtor();
}

void MsgUnitChangeSuperior::InitAsDefaultInstance() {
}

MsgUnitChangeSuperior::MsgUnitChangeSuperior(const MsgUnitChangeSuperior& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgUnitChangeSuperior::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0u;
  oid_automate_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgUnitChangeSuperior::~MsgUnitChangeSuperior() {
  SharedDtor();
}

void MsgUnitChangeSuperior::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgUnitChangeSuperior::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgUnitChangeSuperior_descriptor_;
}

const MsgUnitChangeSuperior& MsgUnitChangeSuperior::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgUnitChangeSuperior* MsgUnitChangeSuperior::default_instance_ = NULL;

MsgUnitChangeSuperior* MsgUnitChangeSuperior::New() const {
  return new MsgUnitChangeSuperior;
}

void MsgUnitChangeSuperior::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0u;
    oid_automate_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgUnitChangeSuperior::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_oid_automate;
        break;
      }
      
      // required uint32 oid_automate = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_oid_automate:
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_automate_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgUnitChangeSuperior::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgUnitChangeSuperior::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->oid(), output);
  }
  
  // required uint32 oid_automate = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->oid_automate(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgUnitChangeSuperior::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->oid(), target);
  }
  
  // required uint32 oid_automate = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->oid_automate(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgUnitChangeSuperior::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid());
    }
    
    // required uint32 oid_automate = 2;
    if (has_oid_automate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid_automate());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgUnitChangeSuperior::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgUnitChangeSuperior* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgUnitChangeSuperior*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgUnitChangeSuperior::MergeFrom(const MsgUnitChangeSuperior& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
    if (from._has_bit(1)) {
      set_oid_automate(from.oid_automate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgUnitChangeSuperior::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgUnitChangeSuperior::CopyFrom(const MsgUnitChangeSuperior& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUnitChangeSuperior::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void MsgUnitChangeSuperior::Swap(MsgUnitChangeSuperior* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(oid_automate_, other->oid_automate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgUnitChangeSuperior::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgUnitChangeSuperior_descriptor_;
  metadata.reflection = MsgUnitChangeSuperior_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgAutomatList::kElemFieldNumber;
#endif  // !_MSC_VER

MsgAutomatList::MsgAutomatList() {
  SharedCtor();
}

void MsgAutomatList::InitAsDefaultInstance() {
}

MsgAutomatList::MsgAutomatList(const MsgAutomatList& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgAutomatList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgAutomatList::~MsgAutomatList() {
  SharedDtor();
}

void MsgAutomatList::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgAutomatList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgAutomatList_descriptor_;
}

const MsgAutomatList& MsgAutomatList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgAutomatList* MsgAutomatList::default_instance_ = NULL;

MsgAutomatList* MsgAutomatList::New() const {
  return new MsgAutomatList;
}

void MsgAutomatList::Clear() {
  elem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgAutomatList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Common.MsgAutomat elem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_elem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_elem()));
        if (input->ExpectTag(10)) goto parse_elem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgAutomatList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgAutomatList::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .Common.MsgAutomat elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->elem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgAutomatList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Common.MsgAutomat elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->elem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgAutomatList::ByteSize() const {
  int total_size = 0;
  
  // repeated .Common.MsgAutomat elem = 1;
  total_size += 1 * this->elem_size();
  for (int i = 0; i < this->elem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elem(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgAutomatList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgAutomatList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgAutomatList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgAutomatList::MergeFrom(const MsgAutomatList& from) {
  GOOGLE_CHECK_NE(&from, this);
  elem_.MergeFrom(from.elem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgAutomatList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgAutomatList::CopyFrom(const MsgAutomatList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgAutomatList::IsInitialized() const {
  
  for (int i = 0; i < elem_size(); i++) {
    if (!this->elem(i).IsInitialized()) return false;
  }
  return true;
}

void MsgAutomatList::Swap(MsgAutomatList* other) {
  if (other != this) {
    elem_.Swap(&other->elem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgAutomatList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgAutomatList_descriptor_;
  metadata.reflection = MsgAutomatList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLogMedicalPriorities::kElemFieldNumber;
#endif  // !_MSC_VER

MsgLogMedicalPriorities::MsgLogMedicalPriorities() {
  SharedCtor();
}

void MsgLogMedicalPriorities::InitAsDefaultInstance() {
}

MsgLogMedicalPriorities::MsgLogMedicalPriorities(const MsgLogMedicalPriorities& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLogMedicalPriorities::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLogMedicalPriorities::~MsgLogMedicalPriorities() {
  SharedDtor();
}

void MsgLogMedicalPriorities::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgLogMedicalPriorities::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLogMedicalPriorities_descriptor_;
}

const MsgLogMedicalPriorities& MsgLogMedicalPriorities::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgLogMedicalPriorities* MsgLogMedicalPriorities::default_instance_ = NULL;

MsgLogMedicalPriorities* MsgLogMedicalPriorities::New() const {
  return new MsgLogMedicalPriorities;
}

void MsgLogMedicalPriorities::Clear() {
  elem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLogMedicalPriorities::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Common.EnumHumanWound elem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_elem:
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (Common::EnumHumanWound_IsValid(value)) {
          add_elem(static_cast< Common::EnumHumanWound >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectTag(8)) goto parse_elem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLogMedicalPriorities::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLogMedicalPriorities::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .Common.EnumHumanWound elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->elem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLogMedicalPriorities::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Common.EnumHumanWound elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->elem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLogMedicalPriorities::ByteSize() const {
  int total_size = 0;
  
  // repeated .Common.EnumHumanWound elem = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->elem_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->elem(i));
    }
    total_size += 1 * this->elem_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLogMedicalPriorities::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLogMedicalPriorities* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLogMedicalPriorities*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLogMedicalPriorities::MergeFrom(const MsgLogMedicalPriorities& from) {
  GOOGLE_CHECK_NE(&from, this);
  elem_.MergeFrom(from.elem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLogMedicalPriorities::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLogMedicalPriorities::CopyFrom(const MsgLogMedicalPriorities& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLogMedicalPriorities::IsInitialized() const {
  
  return true;
}

void MsgLogMedicalPriorities::Swap(MsgLogMedicalPriorities* other) {
  if (other != this) {
    elem_.Swap(&other->elem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLogMedicalPriorities::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLogMedicalPriorities_descriptor_;
  metadata.reflection = MsgLogMedicalPriorities_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgPolygon::kLocationFieldNumber;
#endif  // !_MSC_VER

MsgPolygon::MsgPolygon() {
  SharedCtor();
}

void MsgPolygon::InitAsDefaultInstance() {
  location_ = const_cast< ::Common::MsgLocation*>(&::Common::MsgLocation::default_instance());
}

MsgPolygon::MsgPolygon(const MsgPolygon& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgPolygon::SharedCtor() {
  _cached_size_ = 0;
  location_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgPolygon::~MsgPolygon() {
  SharedDtor();
}

void MsgPolygon::SharedDtor() {
  if (this != default_instance_) {
    delete location_;
  }
}

const ::google::protobuf::Descriptor* MsgPolygon::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgPolygon_descriptor_;
}

const MsgPolygon& MsgPolygon::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgPolygon* MsgPolygon::default_instance_ = NULL;

MsgPolygon* MsgPolygon::New() const {
  return new MsgPolygon;
}

void MsgPolygon::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (location_ != NULL) location_->::Common::MsgLocation::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgPolygon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MsgLocation location = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_location()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgPolygon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgPolygon::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MsgLocation location = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->location(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgPolygon::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MsgLocation location = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->location(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgPolygon::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MsgLocation location = 1;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->location());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgPolygon::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgPolygon* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgPolygon*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgPolygon::MergeFrom(const MsgPolygon& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_location()->::Common::MsgLocation::MergeFrom(from.location());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgPolygon::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgPolygon::CopyFrom(const MsgPolygon& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgPolygon::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_location()) {
    if (!this->location().IsInitialized()) return false;
  }
  return true;
}

void MsgPolygon::Swap(MsgPolygon* other) {
  if (other != this) {
    std::swap(location_, other->location_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgPolygon::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgPolygon_descriptor_;
  metadata.reflection = MsgPolygon_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgPath::kLocationFieldNumber;
#endif  // !_MSC_VER

MsgPath::MsgPath() {
  SharedCtor();
}

void MsgPath::InitAsDefaultInstance() {
  location_ = const_cast< ::Common::MsgLocation*>(&::Common::MsgLocation::default_instance());
}

MsgPath::MsgPath(const MsgPath& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgPath::SharedCtor() {
  _cached_size_ = 0;
  location_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgPath::~MsgPath() {
  SharedDtor();
}

void MsgPath::SharedDtor() {
  if (this != default_instance_) {
    delete location_;
  }
}

const ::google::protobuf::Descriptor* MsgPath::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgPath_descriptor_;
}

const MsgPath& MsgPath::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgPath* MsgPath::default_instance_ = NULL;

MsgPath* MsgPath::New() const {
  return new MsgPath;
}

void MsgPath::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (location_ != NULL) location_->::Common::MsgLocation::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgPath::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MsgLocation location = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_location()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgPath::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgPath::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MsgLocation location = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->location(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgPath::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MsgLocation location = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->location(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgPath::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MsgLocation location = 1;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->location());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgPath::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgPath* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgPath*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgPath::MergeFrom(const MsgPath& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_location()->::Common::MsgLocation::MergeFrom(from.location());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgPath::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgPath::CopyFrom(const MsgPath& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgPath::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_location()) {
    if (!this->location().IsInitialized()) return false;
  }
  return true;
}

void MsgPath::Swap(MsgPath* other) {
  if (other != this) {
    std::swap(location_, other->location_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgPath::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgPath_descriptor_;
  metadata.reflection = MsgPath_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgPathList::kElemFieldNumber;
#endif  // !_MSC_VER

MsgPathList::MsgPathList() {
  SharedCtor();
}

void MsgPathList::InitAsDefaultInstance() {
}

MsgPathList::MsgPathList(const MsgPathList& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgPathList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgPathList::~MsgPathList() {
  SharedDtor();
}

void MsgPathList::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgPathList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgPathList_descriptor_;
}

const MsgPathList& MsgPathList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgPathList* MsgPathList::default_instance_ = NULL;

MsgPathList* MsgPathList::New() const {
  return new MsgPathList;
}

void MsgPathList::Clear() {
  elem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgPathList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Common.MsgPath elem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_elem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_elem()));
        if (input->ExpectTag(10)) goto parse_elem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgPathList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgPathList::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .Common.MsgPath elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->elem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgPathList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Common.MsgPath elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->elem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgPathList::ByteSize() const {
  int total_size = 0;
  
  // repeated .Common.MsgPath elem = 1;
  total_size += 1 * this->elem_size();
  for (int i = 0; i < this->elem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elem(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgPathList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgPathList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgPathList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgPathList::MergeFrom(const MsgPathList& from) {
  GOOGLE_CHECK_NE(&from, this);
  elem_.MergeFrom(from.elem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgPathList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgPathList::CopyFrom(const MsgPathList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgPathList::IsInitialized() const {
  
  for (int i = 0; i < elem_size(); i++) {
    if (!this->elem(i).IsInitialized()) return false;
  }
  return true;
}

void MsgPathList::Swap(MsgPathList* other) {
  if (other != this) {
    elem_.Swap(&other->elem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgPathList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgPathList_descriptor_;
  metadata.reflection = MsgPathList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgCoordLatLong::kLatitudeFieldNumber;
const int MsgCoordLatLong::kLongitudeFieldNumber;
#endif  // !_MSC_VER

MsgCoordLatLong::MsgCoordLatLong() {
  SharedCtor();
}

void MsgCoordLatLong::InitAsDefaultInstance() {
}

MsgCoordLatLong::MsgCoordLatLong(const MsgCoordLatLong& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgCoordLatLong::SharedCtor() {
  _cached_size_ = 0;
  latitude_ = 0;
  longitude_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgCoordLatLong::~MsgCoordLatLong() {
  SharedDtor();
}

void MsgCoordLatLong::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgCoordLatLong::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgCoordLatLong_descriptor_;
}

const MsgCoordLatLong& MsgCoordLatLong::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgCoordLatLong* MsgCoordLatLong::default_instance_ = NULL;

MsgCoordLatLong* MsgCoordLatLong::New() const {
  return new MsgCoordLatLong;
}

void MsgCoordLatLong::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    latitude_ = 0;
    longitude_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgCoordLatLong::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double latitude = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadDouble(
              input, &latitude_));
        _set_bit(0);
        if (input->ExpectTag(17)) goto parse_longitude;
        break;
      }
      
      // required double longitude = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
          goto handle_uninterpreted;
        }
       parse_longitude:
        DO_(::google::protobuf::internal::WireFormatLite::ReadDouble(
              input, &longitude_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgCoordLatLong::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgCoordLatLong::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required double latitude = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->latitude(), output);
  }
  
  // required double longitude = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->longitude(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgCoordLatLong::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required double latitude = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->latitude(), target);
  }
  
  // required double longitude = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->longitude(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgCoordLatLong::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double latitude = 1;
    if (has_latitude()) {
      total_size += 1 + 8;
    }
    
    // required double longitude = 2;
    if (has_longitude()) {
      total_size += 1 + 8;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgCoordLatLong::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgCoordLatLong* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgCoordLatLong*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgCoordLatLong::MergeFrom(const MsgCoordLatLong& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_latitude(from.latitude());
    }
    if (from._has_bit(1)) {
      set_longitude(from.longitude());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgCoordLatLong::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgCoordLatLong::CopyFrom(const MsgCoordLatLong& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCoordLatLong::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void MsgCoordLatLong::Swap(MsgCoordLatLong* other) {
  if (other != this) {
    std::swap(latitude_, other->latitude_);
    std::swap(longitude_, other->longitude_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgCoordLatLong::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgCoordLatLong_descriptor_;
  metadata.reflection = MsgCoordLatLong_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgCoordLatLongList::kElemFieldNumber;
#endif  // !_MSC_VER

MsgCoordLatLongList::MsgCoordLatLongList() {
  SharedCtor();
}

void MsgCoordLatLongList::InitAsDefaultInstance() {
}

MsgCoordLatLongList::MsgCoordLatLongList(const MsgCoordLatLongList& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgCoordLatLongList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgCoordLatLongList::~MsgCoordLatLongList() {
  SharedDtor();
}

void MsgCoordLatLongList::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgCoordLatLongList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgCoordLatLongList_descriptor_;
}

const MsgCoordLatLongList& MsgCoordLatLongList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgCoordLatLongList* MsgCoordLatLongList::default_instance_ = NULL;

MsgCoordLatLongList* MsgCoordLatLongList::New() const {
  return new MsgCoordLatLongList;
}

void MsgCoordLatLongList::Clear() {
  elem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgCoordLatLongList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Common.MsgCoordLatLong elem = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_elem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_elem()));
        if (input->ExpectTag(18)) goto parse_elem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgCoordLatLongList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgCoordLatLongList::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .Common.MsgCoordLatLong elem = 2;
  for (int i = 0; i < this->elem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->elem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgCoordLatLongList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Common.MsgCoordLatLong elem = 2;
  for (int i = 0; i < this->elem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->elem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgCoordLatLongList::ByteSize() const {
  int total_size = 0;
  
  // repeated .Common.MsgCoordLatLong elem = 2;
  total_size += 1 * this->elem_size();
  for (int i = 0; i < this->elem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elem(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgCoordLatLongList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgCoordLatLongList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgCoordLatLongList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgCoordLatLongList::MergeFrom(const MsgCoordLatLongList& from) {
  GOOGLE_CHECK_NE(&from, this);
  elem_.MergeFrom(from.elem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgCoordLatLongList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgCoordLatLongList::CopyFrom(const MsgCoordLatLongList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCoordLatLongList::IsInitialized() const {
  
  for (int i = 0; i < elem_size(); i++) {
    if (!this->elem(i).IsInitialized()) return false;
  }
  return true;
}

void MsgCoordLatLongList::Swap(MsgCoordLatLongList* other) {
  if (other != this) {
    elem_.Swap(&other->elem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgCoordLatLongList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgCoordLatLongList_descriptor_;
  metadata.reflection = MsgCoordLatLongList_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgLocation_Geometry_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLocation_Geometry_descriptor_;
}
bool MsgLocation_Geometry_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgLocation_Geometry MsgLocation::circle;
const MsgLocation_Geometry MsgLocation::ellipse;
const MsgLocation_Geometry MsgLocation::line;
const MsgLocation_Geometry MsgLocation::rectangle;
const MsgLocation_Geometry MsgLocation::polygon;
const MsgLocation_Geometry MsgLocation::point;
const MsgLocation_Geometry MsgLocation::sector;
const MsgLocation_Geometry MsgLocation::none;
const MsgLocation_Geometry MsgLocation::Geometry_MIN;
const MsgLocation_Geometry MsgLocation::Geometry_MAX;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgLocation::kTypeFieldNumber;
const int MsgLocation::kCoordinatesFieldNumber;
#endif  // !_MSC_VER

MsgLocation::MsgLocation() {
  SharedCtor();
}

void MsgLocation::InitAsDefaultInstance() {
  coordinates_ = const_cast< ::Common::MsgCoordLatLongList*>(&::Common::MsgCoordLatLongList::default_instance());
}

MsgLocation::MsgLocation(const MsgLocation& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLocation::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  coordinates_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLocation::~MsgLocation() {
  SharedDtor();
}

void MsgLocation::SharedDtor() {
  if (this != default_instance_) {
    delete coordinates_;
  }
}

const ::google::protobuf::Descriptor* MsgLocation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLocation_descriptor_;
}

const MsgLocation& MsgLocation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgLocation* MsgLocation::default_instance_ = NULL;

MsgLocation* MsgLocation::New() const {
  return new MsgLocation;
}

void MsgLocation::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    if (_has_bit(1)) {
      if (coordinates_ != NULL) coordinates_->::Common::MsgCoordLatLongList::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MsgLocation.Geometry type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::Common::MsgLocation_Geometry_IsValid(value)) {
          set_type(static_cast< ::Common::MsgLocation_Geometry >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectTag(18)) goto parse_coordinates;
        break;
      }
      
      // optional .Common.MsgCoordLatLongList coordinates = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_coordinates:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_coordinates()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLocation::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MsgLocation.Geometry type = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }
  
  // optional .Common.MsgCoordLatLongList coordinates = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->coordinates(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLocation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MsgLocation.Geometry type = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }
  
  // optional .Common.MsgCoordLatLongList coordinates = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->coordinates(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLocation::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MsgLocation.Geometry type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }
    
    // optional .Common.MsgCoordLatLongList coordinates = 2;
    if (has_coordinates()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->coordinates());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLocation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLocation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLocation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLocation::MergeFrom(const MsgLocation& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_type(from.type());
    }
    if (from._has_bit(1)) {
      mutable_coordinates()->::Common::MsgCoordLatLongList::MergeFrom(from.coordinates());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLocation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLocation::CopyFrom(const MsgLocation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLocation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_coordinates()) {
    if (!this->coordinates().IsInitialized()) return false;
  }
  return true;
}

void MsgLocation::Swap(MsgLocation* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(coordinates_, other->coordinates_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLocation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLocation_descriptor_;
  metadata.reflection = MsgLocation_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgPoint::kLocationFieldNumber;
#endif  // !_MSC_VER

MsgPoint::MsgPoint() {
  SharedCtor();
}

void MsgPoint::InitAsDefaultInstance() {
  location_ = const_cast< ::Common::MsgLocation*>(&::Common::MsgLocation::default_instance());
}

MsgPoint::MsgPoint(const MsgPoint& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgPoint::SharedCtor() {
  _cached_size_ = 0;
  location_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgPoint::~MsgPoint() {
  SharedDtor();
}

void MsgPoint::SharedDtor() {
  if (this != default_instance_) {
    delete location_;
  }
}

const ::google::protobuf::Descriptor* MsgPoint::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgPoint_descriptor_;
}

const MsgPoint& MsgPoint::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgPoint* MsgPoint::default_instance_ = NULL;

MsgPoint* MsgPoint::New() const {
  return new MsgPoint;
}

void MsgPoint::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (location_ != NULL) location_->::Common::MsgLocation::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MsgLocation location = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_location()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgPoint::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MsgLocation location = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->location(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgPoint::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MsgLocation location = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->location(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgPoint::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MsgLocation location = 1;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->location());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgPoint::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgPoint* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgPoint*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgPoint::MergeFrom(const MsgPoint& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_location()->::Common::MsgLocation::MergeFrom(from.location());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgPoint::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgPoint::CopyFrom(const MsgPoint& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgPoint::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_location()) {
    if (!this->location().IsInitialized()) return false;
  }
  return true;
}

void MsgPoint::Swap(MsgPoint* other) {
  if (other != this) {
    std::swap(location_, other->location_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgPoint::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgPoint_descriptor_;
  metadata.reflection = MsgPoint_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgUnitList::kElemFieldNumber;
#endif  // !_MSC_VER

MsgUnitList::MsgUnitList() {
  SharedCtor();
}

void MsgUnitList::InitAsDefaultInstance() {
}

MsgUnitList::MsgUnitList(const MsgUnitList& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgUnitList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgUnitList::~MsgUnitList() {
  SharedDtor();
}

void MsgUnitList::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgUnitList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgUnitList_descriptor_;
}

const MsgUnitList& MsgUnitList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgUnitList* MsgUnitList::default_instance_ = NULL;

MsgUnitList* MsgUnitList::New() const {
  return new MsgUnitList;
}

void MsgUnitList::Clear() {
  elem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgUnitList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Common.MsgUnit elem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_elem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_elem()));
        if (input->ExpectTag(10)) goto parse_elem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgUnitList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgUnitList::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .Common.MsgUnit elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->elem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgUnitList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Common.MsgUnit elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->elem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgUnitList::ByteSize() const {
  int total_size = 0;
  
  // repeated .Common.MsgUnit elem = 1;
  total_size += 1 * this->elem_size();
  for (int i = 0; i < this->elem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elem(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgUnitList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgUnitList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgUnitList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgUnitList::MergeFrom(const MsgUnitList& from) {
  GOOGLE_CHECK_NE(&from, this);
  elem_.MergeFrom(from.elem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgUnitList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgUnitList::CopyFrom(const MsgUnitList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUnitList::IsInitialized() const {
  
  for (int i = 0; i < elem_size(); i++) {
    if (!this->elem(i).IsInitialized()) return false;
  }
  return true;
}

void MsgUnitList::Swap(MsgUnitList* other) {
  if (other != this) {
    elem_.Swap(&other->elem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgUnitList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgUnitList_descriptor_;
  metadata.reflection = MsgUnitList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgPointList::kElemFieldNumber;
#endif  // !_MSC_VER

MsgPointList::MsgPointList() {
  SharedCtor();
}

void MsgPointList::InitAsDefaultInstance() {
}

MsgPointList::MsgPointList(const MsgPointList& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgPointList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgPointList::~MsgPointList() {
  SharedDtor();
}

void MsgPointList::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgPointList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgPointList_descriptor_;
}

const MsgPointList& MsgPointList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgPointList* MsgPointList::default_instance_ = NULL;

MsgPointList* MsgPointList::New() const {
  return new MsgPointList;
}

void MsgPointList::Clear() {
  elem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgPointList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Common.MsgPoint elem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_elem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_elem()));
        if (input->ExpectTag(10)) goto parse_elem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgPointList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgPointList::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .Common.MsgPoint elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->elem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgPointList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Common.MsgPoint elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->elem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgPointList::ByteSize() const {
  int total_size = 0;
  
  // repeated .Common.MsgPoint elem = 1;
  total_size += 1 * this->elem_size();
  for (int i = 0; i < this->elem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elem(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgPointList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgPointList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgPointList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgPointList::MergeFrom(const MsgPointList& from) {
  GOOGLE_CHECK_NE(&from, this);
  elem_.MergeFrom(from.elem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgPointList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgPointList::CopyFrom(const MsgPointList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgPointList::IsInitialized() const {
  
  for (int i = 0; i < elem_size(); i++) {
    if (!this->elem(i).IsInitialized()) return false;
  }
  return true;
}

void MsgPointList::Swap(MsgPointList* other) {
  if (other != this) {
    elem_.Swap(&other->elem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgPointList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgPointList_descriptor_;
  metadata.reflection = MsgPointList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgPolygonList::kElemFieldNumber;
#endif  // !_MSC_VER

MsgPolygonList::MsgPolygonList() {
  SharedCtor();
}

void MsgPolygonList::InitAsDefaultInstance() {
}

MsgPolygonList::MsgPolygonList(const MsgPolygonList& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgPolygonList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgPolygonList::~MsgPolygonList() {
  SharedDtor();
}

void MsgPolygonList::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgPolygonList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgPolygonList_descriptor_;
}

const MsgPolygonList& MsgPolygonList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgPolygonList* MsgPolygonList::default_instance_ = NULL;

MsgPolygonList* MsgPolygonList::New() const {
  return new MsgPolygonList;
}

void MsgPolygonList::Clear() {
  elem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgPolygonList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Common.MsgPolygon elem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_elem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_elem()));
        if (input->ExpectTag(10)) goto parse_elem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgPolygonList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgPolygonList::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .Common.MsgPolygon elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->elem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgPolygonList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Common.MsgPolygon elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->elem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgPolygonList::ByteSize() const {
  int total_size = 0;
  
  // repeated .Common.MsgPolygon elem = 1;
  total_size += 1 * this->elem_size();
  for (int i = 0; i < this->elem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elem(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgPolygonList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgPolygonList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgPolygonList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgPolygonList::MergeFrom(const MsgPolygonList& from) {
  GOOGLE_CHECK_NE(&from, this);
  elem_.MergeFrom(from.elem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgPolygonList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgPolygonList::CopyFrom(const MsgPolygonList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgPolygonList::IsInitialized() const {
  
  for (int i = 0; i < elem_size(); i++) {
    if (!this->elem(i).IsInitialized()) return false;
  }
  return true;
}

void MsgPolygonList::Swap(MsgPolygonList* other) {
  if (other != this) {
    elem_.Swap(&other->elem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgPolygonList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgPolygonList_descriptor_;
  metadata.reflection = MsgPolygonList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLocationList::kElemFieldNumber;
#endif  // !_MSC_VER

MsgLocationList::MsgLocationList() {
  SharedCtor();
}

void MsgLocationList::InitAsDefaultInstance() {
}

MsgLocationList::MsgLocationList(const MsgLocationList& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLocationList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLocationList::~MsgLocationList() {
  SharedDtor();
}

void MsgLocationList::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgLocationList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLocationList_descriptor_;
}

const MsgLocationList& MsgLocationList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgLocationList* MsgLocationList::default_instance_ = NULL;

MsgLocationList* MsgLocationList::New() const {
  return new MsgLocationList;
}

void MsgLocationList::Clear() {
  elem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLocationList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Common.MsgLocation elem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_elem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_elem()));
        if (input->ExpectTag(10)) goto parse_elem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLocationList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLocationList::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .Common.MsgLocation elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->elem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLocationList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Common.MsgLocation elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->elem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLocationList::ByteSize() const {
  int total_size = 0;
  
  // repeated .Common.MsgLocation elem = 1;
  total_size += 1 * this->elem_size();
  for (int i = 0; i < this->elem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elem(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLocationList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLocationList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLocationList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLocationList::MergeFrom(const MsgLocationList& from) {
  GOOGLE_CHECK_NE(&from, this);
  elem_.MergeFrom(from.elem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLocationList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLocationList::CopyFrom(const MsgLocationList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLocationList::IsInitialized() const {
  
  for (int i = 0; i < elem_size(); i++) {
    if (!this->elem(i).IsInitialized()) return false;
  }
  return true;
}

void MsgLocationList::Swap(MsgLocationList* other) {
  if (other != this) {
    elem_.Swap(&other->elem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLocationList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLocationList_descriptor_;
  metadata.reflection = MsgLocationList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgUnitKnowledge::kOidFieldNumber;
#endif  // !_MSC_VER

MsgUnitKnowledge::MsgUnitKnowledge() {
  SharedCtor();
}

void MsgUnitKnowledge::InitAsDefaultInstance() {
}

MsgUnitKnowledge::MsgUnitKnowledge(const MsgUnitKnowledge& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgUnitKnowledge::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgUnitKnowledge::~MsgUnitKnowledge() {
  SharedDtor();
}

void MsgUnitKnowledge::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgUnitKnowledge::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgUnitKnowledge_descriptor_;
}

const MsgUnitKnowledge& MsgUnitKnowledge::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgUnitKnowledge* MsgUnitKnowledge::default_instance_ = NULL;

MsgUnitKnowledge* MsgUnitKnowledge::New() const {
  return new MsgUnitKnowledge;
}

void MsgUnitKnowledge::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgUnitKnowledge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgUnitKnowledge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgUnitKnowledge::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->oid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgUnitKnowledge::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->oid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgUnitKnowledge::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgUnitKnowledge::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgUnitKnowledge* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgUnitKnowledge*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgUnitKnowledge::MergeFrom(const MsgUnitKnowledge& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgUnitKnowledge::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgUnitKnowledge::CopyFrom(const MsgUnitKnowledge& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUnitKnowledge::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgUnitKnowledge::Swap(MsgUnitKnowledge* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgUnitKnowledge::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgUnitKnowledge_descriptor_;
  metadata.reflection = MsgUnitKnowledge_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgUnitKnowledgeList::kElemFieldNumber;
#endif  // !_MSC_VER

MsgUnitKnowledgeList::MsgUnitKnowledgeList() {
  SharedCtor();
}

void MsgUnitKnowledgeList::InitAsDefaultInstance() {
}

MsgUnitKnowledgeList::MsgUnitKnowledgeList(const MsgUnitKnowledgeList& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgUnitKnowledgeList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgUnitKnowledgeList::~MsgUnitKnowledgeList() {
  SharedDtor();
}

void MsgUnitKnowledgeList::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgUnitKnowledgeList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgUnitKnowledgeList_descriptor_;
}

const MsgUnitKnowledgeList& MsgUnitKnowledgeList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgUnitKnowledgeList* MsgUnitKnowledgeList::default_instance_ = NULL;

MsgUnitKnowledgeList* MsgUnitKnowledgeList::New() const {
  return new MsgUnitKnowledgeList;
}

void MsgUnitKnowledgeList::Clear() {
  elem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgUnitKnowledgeList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Common.MsgUnitKnowledge elem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_elem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_elem()));
        if (input->ExpectTag(10)) goto parse_elem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgUnitKnowledgeList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgUnitKnowledgeList::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .Common.MsgUnitKnowledge elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->elem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgUnitKnowledgeList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Common.MsgUnitKnowledge elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->elem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgUnitKnowledgeList::ByteSize() const {
  int total_size = 0;
  
  // repeated .Common.MsgUnitKnowledge elem = 1;
  total_size += 1 * this->elem_size();
  for (int i = 0; i < this->elem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elem(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgUnitKnowledgeList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgUnitKnowledgeList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgUnitKnowledgeList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgUnitKnowledgeList::MergeFrom(const MsgUnitKnowledgeList& from) {
  GOOGLE_CHECK_NE(&from, this);
  elem_.MergeFrom(from.elem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgUnitKnowledgeList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgUnitKnowledgeList::CopyFrom(const MsgUnitKnowledgeList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUnitKnowledgeList::IsInitialized() const {
  
  for (int i = 0; i < elem_size(); i++) {
    if (!this->elem(i).IsInitialized()) return false;
  }
  return true;
}

void MsgUnitKnowledgeList::Swap(MsgUnitKnowledgeList* other) {
  if (other != this) {
    elem_.Swap(&other->elem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgUnitKnowledgeList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgUnitKnowledgeList_descriptor_;
  metadata.reflection = MsgUnitKnowledgeList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjectKnowledge::kOidFieldNumber;
#endif  // !_MSC_VER

MsgObjectKnowledge::MsgObjectKnowledge() {
  SharedCtor();
}

void MsgObjectKnowledge::InitAsDefaultInstance() {
}

MsgObjectKnowledge::MsgObjectKnowledge(const MsgObjectKnowledge& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgObjectKnowledge::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjectKnowledge::~MsgObjectKnowledge() {
  SharedDtor();
}

void MsgObjectKnowledge::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgObjectKnowledge::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjectKnowledge_descriptor_;
}

const MsgObjectKnowledge& MsgObjectKnowledge::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgObjectKnowledge* MsgObjectKnowledge::default_instance_ = NULL;

MsgObjectKnowledge* MsgObjectKnowledge::New() const {
  return new MsgObjectKnowledge;
}

void MsgObjectKnowledge::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgObjectKnowledge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgObjectKnowledge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgObjectKnowledge::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->oid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgObjectKnowledge::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->oid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgObjectKnowledge::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgObjectKnowledge::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgObjectKnowledge* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgObjectKnowledge*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgObjectKnowledge::MergeFrom(const MsgObjectKnowledge& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgObjectKnowledge::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgObjectKnowledge::CopyFrom(const MsgObjectKnowledge& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjectKnowledge::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgObjectKnowledge::Swap(MsgObjectKnowledge* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgObjectKnowledge::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgObjectKnowledge_descriptor_;
  metadata.reflection = MsgObjectKnowledge_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjectKnowledgeList::kElemFieldNumber;
#endif  // !_MSC_VER

MsgObjectKnowledgeList::MsgObjectKnowledgeList() {
  SharedCtor();
}

void MsgObjectKnowledgeList::InitAsDefaultInstance() {
}

MsgObjectKnowledgeList::MsgObjectKnowledgeList(const MsgObjectKnowledgeList& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgObjectKnowledgeList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjectKnowledgeList::~MsgObjectKnowledgeList() {
  SharedDtor();
}

void MsgObjectKnowledgeList::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgObjectKnowledgeList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjectKnowledgeList_descriptor_;
}

const MsgObjectKnowledgeList& MsgObjectKnowledgeList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgObjectKnowledgeList* MsgObjectKnowledgeList::default_instance_ = NULL;

MsgObjectKnowledgeList* MsgObjectKnowledgeList::New() const {
  return new MsgObjectKnowledgeList;
}

void MsgObjectKnowledgeList::Clear() {
  elem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgObjectKnowledgeList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Common.MsgObjectKnowledge elem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_elem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_elem()));
        if (input->ExpectTag(10)) goto parse_elem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgObjectKnowledgeList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgObjectKnowledgeList::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .Common.MsgObjectKnowledge elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->elem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgObjectKnowledgeList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Common.MsgObjectKnowledge elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->elem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgObjectKnowledgeList::ByteSize() const {
  int total_size = 0;
  
  // repeated .Common.MsgObjectKnowledge elem = 1;
  total_size += 1 * this->elem_size();
  for (int i = 0; i < this->elem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elem(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgObjectKnowledgeList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgObjectKnowledgeList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgObjectKnowledgeList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgObjectKnowledgeList::MergeFrom(const MsgObjectKnowledgeList& from) {
  GOOGLE_CHECK_NE(&from, this);
  elem_.MergeFrom(from.elem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgObjectKnowledgeList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgObjectKnowledgeList::CopyFrom(const MsgObjectKnowledgeList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjectKnowledgeList::IsInitialized() const {
  
  for (int i = 0; i < elem_size(); i++) {
    if (!this->elem(i).IsInitialized()) return false;
  }
  return true;
}

void MsgObjectKnowledgeList::Swap(MsgObjectKnowledgeList* other) {
  if (other != this) {
    elem_.Swap(&other->elem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgObjectKnowledgeList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgObjectKnowledgeList_descriptor_;
  metadata.reflection = MsgObjectKnowledgeList_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* ObstacleType_DemolitionTargetType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObstacleType_DemolitionTargetType_descriptor_;
}
bool ObstacleType_DemolitionTargetType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const ObstacleType_DemolitionTargetType ObstacleType::preliminary;
const ObstacleType_DemolitionTargetType ObstacleType::reserved;
const ObstacleType_DemolitionTargetType ObstacleType::DemolitionTargetType_MIN;
const ObstacleType_DemolitionTargetType ObstacleType::DemolitionTargetType_MAX;
#endif  // _MSC_VER
#ifndef _MSC_VER
#endif  // !_MSC_VER

ObstacleType::ObstacleType() {
  SharedCtor();
}

void ObstacleType::InitAsDefaultInstance() {
}

ObstacleType::ObstacleType(const ObstacleType& from) {
  SharedCtor();
  MergeFrom(from);
}

void ObstacleType::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObstacleType::~ObstacleType() {
  SharedDtor();
}

void ObstacleType::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* ObstacleType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObstacleType_descriptor_;
}

const ObstacleType& ObstacleType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

ObstacleType* ObstacleType::default_instance_ = NULL;

ObstacleType* ObstacleType::New() const {
  return new ObstacleType;
}

void ObstacleType::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ObstacleType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ObstacleType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    ObstacleType::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ObstacleType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ObstacleType::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void ObstacleType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ObstacleType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ObstacleType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ObstacleType::MergeFrom(const ObstacleType& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ObstacleType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObstacleType::CopyFrom(const ObstacleType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObstacleType::IsInitialized() const {
  
  return true;
}

void ObstacleType::Swap(ObstacleType* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ObstacleType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObstacleType_descriptor_;
  metadata.reflection = ObstacleType_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgPlannedWork::_default_type_;
#ifndef _MSC_VER
const int MsgPlannedWork::kTypeFieldNumber;
const int MsgPlannedWork::kPositionFieldNumber;
const int MsgPlannedWork::kTypeObstacleFieldNumber;
const int MsgPlannedWork::kDensiteFieldNumber;
const int MsgPlannedWork::kTc2FieldNumber;
const int MsgPlannedWork::kActivityTimeFieldNumber;
#endif  // !_MSC_VER

MsgPlannedWork::MsgPlannedWork() {
  SharedCtor();
}

void MsgPlannedWork::InitAsDefaultInstance() {
  position_ = const_cast< ::Common::MsgLocation*>(&::Common::MsgLocation::default_instance());
}

MsgPlannedWork::MsgPlannedWork(const MsgPlannedWork& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgPlannedWork::SharedCtor() {
  _cached_size_ = 0;
  type_ = const_cast< ::std::string*>(&_default_type_);
  position_ = NULL;
  type_obstacle_ = 0;
  densite_ = 0;
  tc2_ = 0u;
  activity_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgPlannedWork::~MsgPlannedWork() {
  SharedDtor();
}

void MsgPlannedWork::SharedDtor() {
  if (type_ != &_default_type_) {
    delete type_;
  }
  if (this != default_instance_) {
    delete position_;
  }
}

const ::google::protobuf::Descriptor* MsgPlannedWork::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgPlannedWork_descriptor_;
}

const MsgPlannedWork& MsgPlannedWork::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgPlannedWork* MsgPlannedWork::default_instance_ = NULL;

MsgPlannedWork* MsgPlannedWork::New() const {
  return new MsgPlannedWork;
}

void MsgPlannedWork::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (type_ != &_default_type_) {
        type_->clear();
      }
    }
    if (_has_bit(1)) {
      if (position_ != NULL) position_->::Common::MsgLocation::Clear();
    }
    type_obstacle_ = 0;
    densite_ = 0;
    tc2_ = 0u;
    activity_time_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgPlannedWork::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_type()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->type().data(), this->type().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(18)) goto parse_position;
        break;
      }
      
      // required .Common.MsgLocation position = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_position:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_position()));
        if (input->ExpectTag(24)) goto parse_type_obstacle;
        break;
      }
      
      // optional .Common.ObstacleType.DemolitionTargetType type_obstacle = 3 [default = preliminary];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_type_obstacle:
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::Common::ObstacleType_DemolitionTargetType_IsValid(value)) {
          set_type_obstacle(static_cast< ::Common::ObstacleType_DemolitionTargetType >(value));
        } else {
          mutable_unknown_fields()->AddVarint(3, value);
        }
        if (input->ExpectTag(37)) goto parse_densite;
        break;
      }
      
      // optional float densite = 4 [default = 0];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
          goto handle_uninterpreted;
        }
       parse_densite:
        DO_(::google::protobuf::internal::WireFormatLite::ReadFloat(
              input, &densite_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_tc2;
        break;
      }
      
      // optional uint32 tc2 = 5 [default = 0];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_tc2:
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &tc2_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_activity_time;
        break;
      }
      
      // optional int32 activity_time = 6 [default = 0];
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_activity_time:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &activity_time_));
        _set_bit(5);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgPlannedWork::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgPlannedWork::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required string type = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->type(), output);
  }
  
  // required .Common.MsgLocation position = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->position(), output);
  }
  
  // optional .Common.ObstacleType.DemolitionTargetType type_obstacle = 3 [default = preliminary];
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type_obstacle(), output);
  }
  
  // optional float densite = 4 [default = 0];
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->densite(), output);
  }
  
  // optional uint32 tc2 = 5 [default = 0];
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->tc2(), output);
  }
  
  // optional int32 activity_time = 6 [default = 0];
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->activity_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgPlannedWork::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string type = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }
  
  // required .Common.MsgLocation position = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->position(), target);
  }
  
  // optional .Common.ObstacleType.DemolitionTargetType type_obstacle = 3 [default = preliminary];
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type_obstacle(), target);
  }
  
  // optional float densite = 4 [default = 0];
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->densite(), target);
  }
  
  // optional uint32 tc2 = 5 [default = 0];
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->tc2(), target);
  }
  
  // optional int32 activity_time = 6 [default = 0];
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->activity_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgPlannedWork::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }
    
    // required .Common.MsgLocation position = 2;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->position());
    }
    
    // optional .Common.ObstacleType.DemolitionTargetType type_obstacle = 3 [default = preliminary];
    if (has_type_obstacle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type_obstacle());
    }
    
    // optional float densite = 4 [default = 0];
    if (has_densite()) {
      total_size += 1 + 4;
    }
    
    // optional uint32 tc2 = 5 [default = 0];
    if (has_tc2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tc2());
    }
    
    // optional int32 activity_time = 6 [default = 0];
    if (has_activity_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgPlannedWork::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgPlannedWork* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgPlannedWork*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgPlannedWork::MergeFrom(const MsgPlannedWork& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_type(from.type());
    }
    if (from._has_bit(1)) {
      mutable_position()->::Common::MsgLocation::MergeFrom(from.position());
    }
    if (from._has_bit(2)) {
      set_type_obstacle(from.type_obstacle());
    }
    if (from._has_bit(3)) {
      set_densite(from.densite());
    }
    if (from._has_bit(4)) {
      set_tc2(from.tc2());
    }
    if (from._has_bit(5)) {
      set_activity_time(from.activity_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgPlannedWork::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgPlannedWork::CopyFrom(const MsgPlannedWork& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgPlannedWork::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_position()) {
    if (!this->position().IsInitialized()) return false;
  }
  return true;
}

void MsgPlannedWork::Swap(MsgPlannedWork* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(position_, other->position_);
    std::swap(type_obstacle_, other->type_obstacle_);
    std::swap(densite_, other->densite_);
    std::swap(tc2_, other->tc2_);
    std::swap(activity_time_, other->activity_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgPlannedWork::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgPlannedWork_descriptor_;
  metadata.reflection = MsgPlannedWork_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgPlannedWorkList::kElemFieldNumber;
#endif  // !_MSC_VER

MsgPlannedWorkList::MsgPlannedWorkList() {
  SharedCtor();
}

void MsgPlannedWorkList::InitAsDefaultInstance() {
}

MsgPlannedWorkList::MsgPlannedWorkList(const MsgPlannedWorkList& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgPlannedWorkList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgPlannedWorkList::~MsgPlannedWorkList() {
  SharedDtor();
}

void MsgPlannedWorkList::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgPlannedWorkList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgPlannedWorkList_descriptor_;
}

const MsgPlannedWorkList& MsgPlannedWorkList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgPlannedWorkList* MsgPlannedWorkList::default_instance_ = NULL;

MsgPlannedWorkList* MsgPlannedWorkList::New() const {
  return new MsgPlannedWorkList;
}

void MsgPlannedWorkList::Clear() {
  elem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgPlannedWorkList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Common.MsgPlannedWork elem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_elem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_elem()));
        if (input->ExpectTag(10)) goto parse_elem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgPlannedWorkList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgPlannedWorkList::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .Common.MsgPlannedWork elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->elem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgPlannedWorkList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Common.MsgPlannedWork elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->elem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgPlannedWorkList::ByteSize() const {
  int total_size = 0;
  
  // repeated .Common.MsgPlannedWork elem = 1;
  total_size += 1 * this->elem_size();
  for (int i = 0; i < this->elem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elem(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgPlannedWorkList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgPlannedWorkList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgPlannedWorkList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgPlannedWorkList::MergeFrom(const MsgPlannedWorkList& from) {
  GOOGLE_CHECK_NE(&from, this);
  elem_.MergeFrom(from.elem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgPlannedWorkList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgPlannedWorkList::CopyFrom(const MsgPlannedWorkList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgPlannedWorkList::IsInitialized() const {
  
  for (int i = 0; i < elem_size(); i++) {
    if (!this->elem(i).IsInitialized()) return false;
  }
  return true;
}

void MsgPlannedWorkList::Swap(MsgPlannedWorkList* other) {
  if (other != this) {
    elem_.Swap(&other->elem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgPlannedWorkList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgPlannedWorkList_descriptor_;
  metadata.reflection = MsgPlannedWorkList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLogMaintenancePriorities::kElemFieldNumber;
#endif  // !_MSC_VER

MsgLogMaintenancePriorities::MsgLogMaintenancePriorities() {
  SharedCtor();
}

void MsgLogMaintenancePriorities::InitAsDefaultInstance() {
}

MsgLogMaintenancePriorities::MsgLogMaintenancePriorities(const MsgLogMaintenancePriorities& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLogMaintenancePriorities::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLogMaintenancePriorities::~MsgLogMaintenancePriorities() {
  SharedDtor();
}

void MsgLogMaintenancePriorities::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgLogMaintenancePriorities::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLogMaintenancePriorities_descriptor_;
}

const MsgLogMaintenancePriorities& MsgLogMaintenancePriorities::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgLogMaintenancePriorities* MsgLogMaintenancePriorities::default_instance_ = NULL;

MsgLogMaintenancePriorities* MsgLogMaintenancePriorities::New() const {
  return new MsgLogMaintenancePriorities;
}

void MsgLogMaintenancePriorities::Clear() {
  elem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLogMaintenancePriorities::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Common.MsgEquipmentType elem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_elem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_elem()));
        if (input->ExpectTag(10)) goto parse_elem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLogMaintenancePriorities::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLogMaintenancePriorities::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .Common.MsgEquipmentType elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->elem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLogMaintenancePriorities::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Common.MsgEquipmentType elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->elem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLogMaintenancePriorities::ByteSize() const {
  int total_size = 0;
  
  // repeated .Common.MsgEquipmentType elem = 1;
  total_size += 1 * this->elem_size();
  for (int i = 0; i < this->elem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elem(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLogMaintenancePriorities::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLogMaintenancePriorities* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLogMaintenancePriorities*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLogMaintenancePriorities::MergeFrom(const MsgLogMaintenancePriorities& from) {
  GOOGLE_CHECK_NE(&from, this);
  elem_.MergeFrom(from.elem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLogMaintenancePriorities::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLogMaintenancePriorities::CopyFrom(const MsgLogMaintenancePriorities& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLogMaintenancePriorities::IsInitialized() const {
  
  for (int i = 0; i < elem_size(); i++) {
    if (!this->elem(i).IsInitialized()) return false;
  }
  return true;
}

void MsgLogMaintenancePriorities::Swap(MsgLogMaintenancePriorities* other) {
  if (other != this) {
    elem_.Swap(&other->elem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLogMaintenancePriorities::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLogMaintenancePriorities_descriptor_;
  metadata.reflection = MsgLogMaintenancePriorities_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMissionObjective::kLocalisationFieldNumber;
const int MsgMissionObjective::kHoraireFieldNumber;
#endif  // !_MSC_VER

MsgMissionObjective::MsgMissionObjective() {
  SharedCtor();
}

void MsgMissionObjective::InitAsDefaultInstance() {
  localisation_ = const_cast< ::Common::MsgLocation*>(&::Common::MsgLocation::default_instance());
  horaire_ = const_cast< ::Common::MsgDateTime*>(&::Common::MsgDateTime::default_instance());
}

MsgMissionObjective::MsgMissionObjective(const MsgMissionObjective& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMissionObjective::SharedCtor() {
  _cached_size_ = 0;
  localisation_ = NULL;
  horaire_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMissionObjective::~MsgMissionObjective() {
  SharedDtor();
}

void MsgMissionObjective::SharedDtor() {
  if (this != default_instance_) {
    delete localisation_;
    delete horaire_;
  }
}

const ::google::protobuf::Descriptor* MsgMissionObjective::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMissionObjective_descriptor_;
}

const MsgMissionObjective& MsgMissionObjective::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgMissionObjective* MsgMissionObjective::default_instance_ = NULL;

MsgMissionObjective* MsgMissionObjective::New() const {
  return new MsgMissionObjective;
}

void MsgMissionObjective::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (localisation_ != NULL) localisation_->::Common::MsgLocation::Clear();
    }
    if (_has_bit(1)) {
      if (horaire_ != NULL) horaire_->::Common::MsgDateTime::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMissionObjective::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MsgLocation localisation = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_localisation()));
        if (input->ExpectTag(18)) goto parse_horaire;
        break;
      }
      
      // required .Common.MsgDateTime horaire = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_horaire:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_horaire()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMissionObjective::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMissionObjective::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MsgLocation localisation = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->localisation(), output);
  }
  
  // required .Common.MsgDateTime horaire = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->horaire(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMissionObjective::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MsgLocation localisation = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->localisation(), target);
  }
  
  // required .Common.MsgDateTime horaire = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->horaire(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMissionObjective::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MsgLocation localisation = 1;
    if (has_localisation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->localisation());
    }
    
    // required .Common.MsgDateTime horaire = 2;
    if (has_horaire()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->horaire());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMissionObjective::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMissionObjective* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMissionObjective*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMissionObjective::MergeFrom(const MsgMissionObjective& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_localisation()->::Common::MsgLocation::MergeFrom(from.localisation());
    }
    if (from._has_bit(1)) {
      mutable_horaire()->::Common::MsgDateTime::MergeFrom(from.horaire());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMissionObjective::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMissionObjective::CopyFrom(const MsgMissionObjective& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMissionObjective::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_localisation()) {
    if (!this->localisation().IsInitialized()) return false;
  }
  if (has_horaire()) {
    if (!this->horaire().IsInitialized()) return false;
  }
  return true;
}

void MsgMissionObjective::Swap(MsgMissionObjective* other) {
  if (other != this) {
    std::swap(localisation_, other->localisation_);
    std::swap(horaire_, other->horaire_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMissionObjective::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMissionObjective_descriptor_;
  metadata.reflection = MsgMissionObjective_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMissionObjectiveList::kElemFieldNumber;
#endif  // !_MSC_VER

MsgMissionObjectiveList::MsgMissionObjectiveList() {
  SharedCtor();
}

void MsgMissionObjectiveList::InitAsDefaultInstance() {
}

MsgMissionObjectiveList::MsgMissionObjectiveList(const MsgMissionObjectiveList& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMissionObjectiveList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMissionObjectiveList::~MsgMissionObjectiveList() {
  SharedDtor();
}

void MsgMissionObjectiveList::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgMissionObjectiveList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMissionObjectiveList_descriptor_;
}

const MsgMissionObjectiveList& MsgMissionObjectiveList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgMissionObjectiveList* MsgMissionObjectiveList::default_instance_ = NULL;

MsgMissionObjectiveList* MsgMissionObjectiveList::New() const {
  return new MsgMissionObjectiveList;
}

void MsgMissionObjectiveList::Clear() {
  elem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMissionObjectiveList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Common.MsgMissionObjective elem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_elem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_elem()));
        if (input->ExpectTag(10)) goto parse_elem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMissionObjectiveList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMissionObjectiveList::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .Common.MsgMissionObjective elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->elem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMissionObjectiveList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Common.MsgMissionObjective elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->elem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMissionObjectiveList::ByteSize() const {
  int total_size = 0;
  
  // repeated .Common.MsgMissionObjective elem = 1;
  total_size += 1 * this->elem_size();
  for (int i = 0; i < this->elem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elem(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMissionObjectiveList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMissionObjectiveList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMissionObjectiveList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMissionObjectiveList::MergeFrom(const MsgMissionObjectiveList& from) {
  GOOGLE_CHECK_NE(&from, this);
  elem_.MergeFrom(from.elem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMissionObjectiveList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMissionObjectiveList::CopyFrom(const MsgMissionObjectiveList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMissionObjectiveList::IsInitialized() const {
  
  for (int i = 0; i < elem_size(); i++) {
    if (!this->elem(i).IsInitialized()) return false;
  }
  return true;
}

void MsgMissionObjectiveList::Swap(MsgMissionObjectiveList* other) {
  if (other != this) {
    elem_.Swap(&other->elem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMissionObjectiveList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMissionObjectiveList_descriptor_;
  metadata.reflection = MsgMissionObjectiveList_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgLimaOrder_Function_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLimaOrder_Function_descriptor_;
}
bool MsgLimaOrder_Function_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgLimaOrder_Function MsgLimaOrder::ligne_debouche;
const MsgLimaOrder_Function MsgLimaOrder::ligne_changement_attitude;
const MsgLimaOrder_Function MsgLimaOrder::ligne_coordination;
const MsgLimaOrder_Function MsgLimaOrder::ligne_interdire;
const MsgLimaOrder_Function MsgLimaOrder::ligne_objectif;
const MsgLimaOrder_Function MsgLimaOrder::ligne_coup_arret;
const MsgLimaOrder_Function MsgLimaOrder::ligne_recueil;
const MsgLimaOrder_Function MsgLimaOrder::ligne_debut_mission;
const MsgLimaOrder_Function MsgLimaOrder::ligne_fin_mission;
const MsgLimaOrder_Function MsgLimaOrder::ligne_identification_accueil;
const MsgLimaOrder_Function MsgLimaOrder::Function_MIN;
const MsgLimaOrder_Function MsgLimaOrder::Function_MAX;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgLimaOrder::kLimaFieldNumber;
const int MsgLimaOrder::kHoraireFieldNumber;
const int MsgLimaOrder::kFonctionsFieldNumber;
#endif  // !_MSC_VER

MsgLimaOrder::MsgLimaOrder() {
  SharedCtor();
}

void MsgLimaOrder::InitAsDefaultInstance() {
  lima_ = const_cast< ::Common::MsgLine*>(&::Common::MsgLine::default_instance());
  horaire_ = const_cast< ::Common::MsgDateTime*>(&::Common::MsgDateTime::default_instance());
}

MsgLimaOrder::MsgLimaOrder(const MsgLimaOrder& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLimaOrder::SharedCtor() {
  _cached_size_ = 0;
  lima_ = NULL;
  horaire_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLimaOrder::~MsgLimaOrder() {
  SharedDtor();
}

void MsgLimaOrder::SharedDtor() {
  if (this != default_instance_) {
    delete lima_;
    delete horaire_;
  }
}

const ::google::protobuf::Descriptor* MsgLimaOrder::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLimaOrder_descriptor_;
}

const MsgLimaOrder& MsgLimaOrder::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgLimaOrder* MsgLimaOrder::default_instance_ = NULL;

MsgLimaOrder* MsgLimaOrder::New() const {
  return new MsgLimaOrder;
}

void MsgLimaOrder::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (lima_ != NULL) lima_->::Common::MsgLine::Clear();
    }
    if (_has_bit(1)) {
      if (horaire_ != NULL) horaire_->::Common::MsgDateTime::Clear();
    }
  }
  fonctions_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLimaOrder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MsgLine lima = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_lima()));
        if (input->ExpectTag(18)) goto parse_horaire;
        break;
      }
      
      // required .Common.MsgDateTime horaire = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_horaire:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_horaire()));
        if (input->ExpectTag(24)) goto parse_fonctions;
        break;
      }
      
      // repeated .Common.MsgLimaOrder.Function fonctions = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_fonctions:
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::Common::MsgLimaOrder_Function_IsValid(value)) {
          add_fonctions(static_cast< ::Common::MsgLimaOrder_Function >(value));
        } else {
          mutable_unknown_fields()->AddVarint(3, value);
        }
        if (input->ExpectTag(24)) goto parse_fonctions;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLimaOrder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLimaOrder::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MsgLine lima = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->lima(), output);
  }
  
  // required .Common.MsgDateTime horaire = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->horaire(), output);
  }
  
  // repeated .Common.MsgLimaOrder.Function fonctions = 3;
  for (int i = 0; i < this->fonctions_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->fonctions(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLimaOrder::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MsgLine lima = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->lima(), target);
  }
  
  // required .Common.MsgDateTime horaire = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->horaire(), target);
  }
  
  // repeated .Common.MsgLimaOrder.Function fonctions = 3;
  for (int i = 0; i < this->fonctions_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->fonctions(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLimaOrder::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MsgLine lima = 1;
    if (has_lima()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->lima());
    }
    
    // required .Common.MsgDateTime horaire = 2;
    if (has_horaire()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->horaire());
    }
    
  }
  // repeated .Common.MsgLimaOrder.Function fonctions = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->fonctions_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->fonctions(i));
    }
    total_size += 1 * this->fonctions_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLimaOrder::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLimaOrder* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLimaOrder*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLimaOrder::MergeFrom(const MsgLimaOrder& from) {
  GOOGLE_CHECK_NE(&from, this);
  fonctions_.MergeFrom(from.fonctions_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_lima()->::Common::MsgLine::MergeFrom(from.lima());
    }
    if (from._has_bit(1)) {
      mutable_horaire()->::Common::MsgDateTime::MergeFrom(from.horaire());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLimaOrder::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLimaOrder::CopyFrom(const MsgLimaOrder& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLimaOrder::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_lima()) {
    if (!this->lima().IsInitialized()) return false;
  }
  if (has_horaire()) {
    if (!this->horaire().IsInitialized()) return false;
  }
  return true;
}

void MsgLimaOrder::Swap(MsgLimaOrder* other) {
  if (other != this) {
    std::swap(lima_, other->lima_);
    std::swap(horaire_, other->horaire_);
    fonctions_.Swap(&other->fonctions_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLimaOrder::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLimaOrder_descriptor_;
  metadata.reflection = MsgLimaOrder_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLimasOrder::kElemFieldNumber;
#endif  // !_MSC_VER

MsgLimasOrder::MsgLimasOrder() {
  SharedCtor();
}

void MsgLimasOrder::InitAsDefaultInstance() {
}

MsgLimasOrder::MsgLimasOrder(const MsgLimasOrder& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLimasOrder::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLimasOrder::~MsgLimasOrder() {
  SharedDtor();
}

void MsgLimasOrder::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgLimasOrder::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLimasOrder_descriptor_;
}

const MsgLimasOrder& MsgLimasOrder::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgLimasOrder* MsgLimasOrder::default_instance_ = NULL;

MsgLimasOrder* MsgLimasOrder::New() const {
  return new MsgLimasOrder;
}

void MsgLimasOrder::Clear() {
  elem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLimasOrder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Common.MsgLimaOrder elem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_elem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_elem()));
        if (input->ExpectTag(10)) goto parse_elem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLimasOrder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLimasOrder::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .Common.MsgLimaOrder elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->elem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLimasOrder::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Common.MsgLimaOrder elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->elem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLimasOrder::ByteSize() const {
  int total_size = 0;
  
  // repeated .Common.MsgLimaOrder elem = 1;
  total_size += 1 * this->elem_size();
  for (int i = 0; i < this->elem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elem(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLimasOrder::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLimasOrder* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLimasOrder*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLimasOrder::MergeFrom(const MsgLimasOrder& from) {
  GOOGLE_CHECK_NE(&from, this);
  elem_.MergeFrom(from.elem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLimasOrder::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLimasOrder::CopyFrom(const MsgLimasOrder& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLimasOrder::IsInitialized() const {
  
  for (int i = 0; i < elem_size(); i++) {
    if (!this->elem(i).IsInitialized()) return false;
  }
  return true;
}

void MsgLimasOrder::Swap(MsgLimasOrder* other) {
  if (other != this) {
    elem_.Swap(&other->elem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLimasOrder::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLimasOrder_descriptor_;
  metadata.reflection = MsgLimasOrder_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SeqOfDotationStock::kElemFieldNumber;
#endif  // !_MSC_VER

SeqOfDotationStock::SeqOfDotationStock() {
  SharedCtor();
}

void SeqOfDotationStock::InitAsDefaultInstance() {
}

SeqOfDotationStock::SeqOfDotationStock(const SeqOfDotationStock& from) {
  SharedCtor();
  MergeFrom(from);
}

void SeqOfDotationStock::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SeqOfDotationStock::~SeqOfDotationStock() {
  SharedDtor();
}

void SeqOfDotationStock::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* SeqOfDotationStock::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SeqOfDotationStock_descriptor_;
}

const SeqOfDotationStock& SeqOfDotationStock::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

SeqOfDotationStock* SeqOfDotationStock::default_instance_ = NULL;

SeqOfDotationStock* SeqOfDotationStock::New() const {
  return new SeqOfDotationStock;
}

void SeqOfDotationStock::Clear() {
  elem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SeqOfDotationStock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Common.MsgDotationStock elem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_elem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_elem()));
        if (input->ExpectTag(10)) goto parse_elem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SeqOfDotationStock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    SeqOfDotationStock::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .Common.MsgDotationStock elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->elem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SeqOfDotationStock::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Common.MsgDotationStock elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->elem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SeqOfDotationStock::ByteSize() const {
  int total_size = 0;
  
  // repeated .Common.MsgDotationStock elem = 1;
  total_size += 1 * this->elem_size();
  for (int i = 0; i < this->elem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elem(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void SeqOfDotationStock::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SeqOfDotationStock* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SeqOfDotationStock*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SeqOfDotationStock::MergeFrom(const SeqOfDotationStock& from) {
  GOOGLE_CHECK_NE(&from, this);
  elem_.MergeFrom(from.elem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SeqOfDotationStock::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SeqOfDotationStock::CopyFrom(const SeqOfDotationStock& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SeqOfDotationStock::IsInitialized() const {
  
  for (int i = 0; i < elem_size(); i++) {
    if (!this->elem(i).IsInitialized()) return false;
  }
  return true;
}

void SeqOfDotationStock::Swap(SeqOfDotationStock* other) {
  if (other != this) {
    elem_.Swap(&other->elem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SeqOfDotationStock::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SeqOfDotationStock_descriptor_;
  metadata.reflection = SeqOfDotationStock_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgPopulationKnowledge::kOidFieldNumber;
#endif  // !_MSC_VER

MsgPopulationKnowledge::MsgPopulationKnowledge() {
  SharedCtor();
}

void MsgPopulationKnowledge::InitAsDefaultInstance() {
}

MsgPopulationKnowledge::MsgPopulationKnowledge(const MsgPopulationKnowledge& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgPopulationKnowledge::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgPopulationKnowledge::~MsgPopulationKnowledge() {
  SharedDtor();
}

void MsgPopulationKnowledge::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgPopulationKnowledge::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgPopulationKnowledge_descriptor_;
}

const MsgPopulationKnowledge& MsgPopulationKnowledge::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgPopulationKnowledge* MsgPopulationKnowledge::default_instance_ = NULL;

MsgPopulationKnowledge* MsgPopulationKnowledge::New() const {
  return new MsgPopulationKnowledge;
}

void MsgPopulationKnowledge::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgPopulationKnowledge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgPopulationKnowledge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgPopulationKnowledge::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->oid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgPopulationKnowledge::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->oid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgPopulationKnowledge::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgPopulationKnowledge::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgPopulationKnowledge* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgPopulationKnowledge*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgPopulationKnowledge::MergeFrom(const MsgPopulationKnowledge& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgPopulationKnowledge::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgPopulationKnowledge::CopyFrom(const MsgPopulationKnowledge& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgPopulationKnowledge::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgPopulationKnowledge::Swap(MsgPopulationKnowledge* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgPopulationKnowledge::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgPopulationKnowledge_descriptor_;
  metadata.reflection = MsgPopulationKnowledge_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgIntelligence::_default_name_;
const ::std::string MsgIntelligence::_default_nature_;
#ifndef _MSC_VER
const int MsgIntelligence::kNameFieldNumber;
const int MsgIntelligence::kNatureFieldNumber;
const int MsgIntelligence::kLevelFieldNumber;
const int MsgIntelligence::kEmbarkedFieldNumber;
const int MsgIntelligence::kLocationFieldNumber;
const int MsgIntelligence::kDiplomacyFieldNumber;
const int MsgIntelligence::kFormationFieldNumber;
#endif  // !_MSC_VER

MsgIntelligence::MsgIntelligence() {
  SharedCtor();
}

void MsgIntelligence::InitAsDefaultInstance() {
  location_ = const_cast< ::Common::MsgCoordLatLong*>(&::Common::MsgCoordLatLong::default_instance());
  formation_ = const_cast< ::Common::MsgFormation*>(&::Common::MsgFormation::default_instance());
}

MsgIntelligence::MsgIntelligence(const MsgIntelligence& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgIntelligence::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&_default_name_);
  nature_ = const_cast< ::std::string*>(&_default_nature_);
  level_ = 0;
  embarked_ = false;
  location_ = NULL;
  diplomacy_ = 0;
  formation_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgIntelligence::~MsgIntelligence() {
  SharedDtor();
}

void MsgIntelligence::SharedDtor() {
  if (name_ != &_default_name_) {
    delete name_;
  }
  if (nature_ != &_default_nature_) {
    delete nature_;
  }
  if (this != default_instance_) {
    delete location_;
    delete formation_;
  }
}

const ::google::protobuf::Descriptor* MsgIntelligence::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgIntelligence_descriptor_;
}

const MsgIntelligence& MsgIntelligence::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgIntelligence* MsgIntelligence::default_instance_ = NULL;

MsgIntelligence* MsgIntelligence::New() const {
  return new MsgIntelligence;
}

void MsgIntelligence::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (name_ != &_default_name_) {
        name_->clear();
      }
    }
    if (_has_bit(1)) {
      if (nature_ != &_default_nature_) {
        nature_->clear();
      }
    }
    level_ = 0;
    embarked_ = false;
    if (_has_bit(4)) {
      if (location_ != NULL) location_->::Common::MsgCoordLatLong::Clear();
    }
    diplomacy_ = 0;
    if (_has_bit(6)) {
      if (formation_ != NULL) formation_->::Common::MsgFormation::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgIntelligence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_name()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->name().data(), this->name().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(18)) goto parse_nature;
        break;
      }
      
      // required string nature = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_nature:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_nature()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->nature().data(), this->nature().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(24)) goto parse_level;
        break;
      }
      
      // required .Common.EnumNatureLevel level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_level:
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (Common::EnumNatureLevel_IsValid(value)) {
          set_level(static_cast< Common::EnumNatureLevel >(value));
        } else {
          mutable_unknown_fields()->AddVarint(3, value);
        }
        if (input->ExpectTag(32)) goto parse_embarked;
        break;
      }
      
      // required bool embarked = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_embarked:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &embarked_));
        _set_bit(3);
        if (input->ExpectTag(42)) goto parse_location;
        break;
      }
      
      // required .Common.MsgCoordLatLong location = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_location:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_location()));
        if (input->ExpectTag(48)) goto parse_diplomacy;
        break;
      }
      
      // required .Common.EnumDiplomacy diplomacy = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_diplomacy:
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (Common::EnumDiplomacy_IsValid(value)) {
          set_diplomacy(static_cast< Common::EnumDiplomacy >(value));
        } else {
          mutable_unknown_fields()->AddVarint(6, value);
        }
        if (input->ExpectTag(58)) goto parse_formation;
        break;
      }
      
      // required .Common.MsgFormation formation = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_formation:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_formation()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgIntelligence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgIntelligence::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required string name = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }
  
  // required string nature = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nature().data(), this->nature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->nature(), output);
  }
  
  // required .Common.EnumNatureLevel level = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->level(), output);
  }
  
  // required bool embarked = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->embarked(), output);
  }
  
  // required .Common.MsgCoordLatLong location = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      5, this->location(), output);
  }
  
  // required .Common.EnumDiplomacy diplomacy = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->diplomacy(), output);
  }
  
  // required .Common.MsgFormation formation = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      7, this->formation(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgIntelligence::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }
  
  // required string nature = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nature().data(), this->nature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nature(), target);
  }
  
  // required .Common.EnumNatureLevel level = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->level(), target);
  }
  
  // required bool embarked = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->embarked(), target);
  }
  
  // required .Common.MsgCoordLatLong location = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->location(), target);
  }
  
  // required .Common.EnumDiplomacy diplomacy = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->diplomacy(), target);
  }
  
  // required .Common.MsgFormation formation = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->formation(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgIntelligence::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // required string nature = 2;
    if (has_nature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nature());
    }
    
    // required .Common.EnumNatureLevel level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->level());
    }
    
    // required bool embarked = 4;
    if (has_embarked()) {
      total_size += 1 + 1;
    }
    
    // required .Common.MsgCoordLatLong location = 5;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->location());
    }
    
    // required .Common.EnumDiplomacy diplomacy = 6;
    if (has_diplomacy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->diplomacy());
    }
    
    // required .Common.MsgFormation formation = 7;
    if (has_formation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->formation());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgIntelligence::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgIntelligence* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgIntelligence*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgIntelligence::MergeFrom(const MsgIntelligence& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_name(from.name());
    }
    if (from._has_bit(1)) {
      set_nature(from.nature());
    }
    if (from._has_bit(2)) {
      set_level(from.level());
    }
    if (from._has_bit(3)) {
      set_embarked(from.embarked());
    }
    if (from._has_bit(4)) {
      mutable_location()->::Common::MsgCoordLatLong::MergeFrom(from.location());
    }
    if (from._has_bit(5)) {
      set_diplomacy(from.diplomacy());
    }
    if (from._has_bit(6)) {
      mutable_formation()->::Common::MsgFormation::MergeFrom(from.formation());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgIntelligence::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgIntelligence::CopyFrom(const MsgIntelligence& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgIntelligence::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;
  
  if (has_location()) {
    if (!this->location().IsInitialized()) return false;
  }
  if (has_formation()) {
    if (!this->formation().IsInitialized()) return false;
  }
  return true;
}

void MsgIntelligence::Swap(MsgIntelligence* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(nature_, other->nature_);
    std::swap(level_, other->level_);
    std::swap(embarked_, other->embarked_);
    std::swap(location_, other->location_);
    std::swap(diplomacy_, other->diplomacy_);
    std::swap(formation_, other->formation_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgIntelligence::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgIntelligence_descriptor_;
  metadata.reflection = MsgIntelligence_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgIntelligenceList::kElemFieldNumber;
#endif  // !_MSC_VER

MsgIntelligenceList::MsgIntelligenceList() {
  SharedCtor();
}

void MsgIntelligenceList::InitAsDefaultInstance() {
}

MsgIntelligenceList::MsgIntelligenceList(const MsgIntelligenceList& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgIntelligenceList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgIntelligenceList::~MsgIntelligenceList() {
  SharedDtor();
}

void MsgIntelligenceList::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgIntelligenceList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgIntelligenceList_descriptor_;
}

const MsgIntelligenceList& MsgIntelligenceList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgIntelligenceList* MsgIntelligenceList::default_instance_ = NULL;

MsgIntelligenceList* MsgIntelligenceList::New() const {
  return new MsgIntelligenceList;
}

void MsgIntelligenceList::Clear() {
  elem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgIntelligenceList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Common.MsgIntelligence elem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_elem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_elem()));
        if (input->ExpectTag(10)) goto parse_elem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgIntelligenceList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgIntelligenceList::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .Common.MsgIntelligence elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->elem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgIntelligenceList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Common.MsgIntelligence elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->elem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgIntelligenceList::ByteSize() const {
  int total_size = 0;
  
  // repeated .Common.MsgIntelligence elem = 1;
  total_size += 1 * this->elem_size();
  for (int i = 0; i < this->elem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elem(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgIntelligenceList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgIntelligenceList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgIntelligenceList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgIntelligenceList::MergeFrom(const MsgIntelligenceList& from) {
  GOOGLE_CHECK_NE(&from, this);
  elem_.MergeFrom(from.elem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgIntelligenceList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgIntelligenceList::CopyFrom(const MsgIntelligenceList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgIntelligenceList::IsInitialized() const {
  
  for (int i = 0; i < elem_size(); i++) {
    if (!this->elem(i).IsInitialized()) return false;
  }
  return true;
}

void MsgIntelligenceList::Swap(MsgIntelligenceList* other) {
  if (other != this) {
    elem_.Swap(&other->elem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgIntelligenceList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgIntelligenceList_descriptor_;
  metadata.reflection = MsgIntelligenceList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgChangeDiplomacy::kOidCamp1FieldNumber;
const int MsgChangeDiplomacy::kOidCamp2FieldNumber;
const int MsgChangeDiplomacy::kDiplomatieFieldNumber;
#endif  // !_MSC_VER

MsgChangeDiplomacy::MsgChangeDiplomacy() {
  SharedCtor();
}

void MsgChangeDiplomacy::InitAsDefaultInstance() {
}

MsgChangeDiplomacy::MsgChangeDiplomacy(const MsgChangeDiplomacy& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgChangeDiplomacy::SharedCtor() {
  _cached_size_ = 0;
  oid_camp1_ = 0u;
  oid_camp2_ = 0u;
  diplomatie_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgChangeDiplomacy::~MsgChangeDiplomacy() {
  SharedDtor();
}

void MsgChangeDiplomacy::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgChangeDiplomacy::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgChangeDiplomacy_descriptor_;
}

const MsgChangeDiplomacy& MsgChangeDiplomacy::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgChangeDiplomacy* MsgChangeDiplomacy::default_instance_ = NULL;

MsgChangeDiplomacy* MsgChangeDiplomacy::New() const {
  return new MsgChangeDiplomacy;
}

void MsgChangeDiplomacy::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_camp1_ = 0u;
    oid_camp2_ = 0u;
    diplomatie_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgChangeDiplomacy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 oid_camp1 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_camp1_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_oid_camp2;
        break;
      }
      
      // required uint32 oid_camp2 = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_oid_camp2:
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_camp2_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_diplomatie;
        break;
      }
      
      // required .Common.EnumDiplomacy diplomatie = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_diplomatie:
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (Common::EnumDiplomacy_IsValid(value)) {
          set_diplomatie(static_cast< Common::EnumDiplomacy >(value));
        } else {
          mutable_unknown_fields()->AddVarint(3, value);
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgChangeDiplomacy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgChangeDiplomacy::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required uint32 oid_camp1 = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->oid_camp1(), output);
  }
  
  // required uint32 oid_camp2 = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->oid_camp2(), output);
  }
  
  // required .Common.EnumDiplomacy diplomatie = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->diplomatie(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgChangeDiplomacy::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 oid_camp1 = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->oid_camp1(), target);
  }
  
  // required uint32 oid_camp2 = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->oid_camp2(), target);
  }
  
  // required .Common.EnumDiplomacy diplomatie = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->diplomatie(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgChangeDiplomacy::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 oid_camp1 = 1;
    if (has_oid_camp1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid_camp1());
    }
    
    // required uint32 oid_camp2 = 2;
    if (has_oid_camp2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid_camp2());
    }
    
    // required .Common.EnumDiplomacy diplomatie = 3;
    if (has_diplomatie()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->diplomatie());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgChangeDiplomacy::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgChangeDiplomacy* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgChangeDiplomacy*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgChangeDiplomacy::MergeFrom(const MsgChangeDiplomacy& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid_camp1(from.oid_camp1());
    }
    if (from._has_bit(1)) {
      set_oid_camp2(from.oid_camp2());
    }
    if (from._has_bit(2)) {
      set_diplomatie(from.diplomatie());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgChangeDiplomacy::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgChangeDiplomacy::CopyFrom(const MsgChangeDiplomacy& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgChangeDiplomacy::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  return true;
}

void MsgChangeDiplomacy::Swap(MsgChangeDiplomacy* other) {
  if (other != this) {
    std::swap(oid_camp1_, other->oid_camp1_);
    std::swap(oid_camp2_, other->oid_camp2_);
    std::swap(diplomatie_, other->diplomatie_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgChangeDiplomacy::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgChangeDiplomacy_descriptor_;
  metadata.reflection = MsgChangeDiplomacy_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgAtlasNature_AtlasNature_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgAtlasNature_AtlasNature_descriptor_;
}
bool MsgAtlasNature_AtlasNature_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgAtlasNature_AtlasNature MsgAtlasNature::blinde;
const MsgAtlasNature_AtlasNature MsgAtlasNature::ass;
const MsgAtlasNature_AtlasNature MsgAtlasNature::pc;
const MsgAtlasNature_AtlasNature MsgAtlasNature::log;
const MsgAtlasNature_AtlasNature MsgAtlasNature::mortier;
const MsgAtlasNature_AtlasNature MsgAtlasNature::lance_roquette;
const MsgAtlasNature_AtlasNature MsgAtlasNature::vehicule;
const MsgAtlasNature_AtlasNature MsgAtlasNature::personnel_a_pied;
const MsgAtlasNature_AtlasNature MsgAtlasNature::helicoptere;
const MsgAtlasNature_AtlasNature MsgAtlasNature::indefini;
const MsgAtlasNature_AtlasNature MsgAtlasNature::asa;
const MsgAtlasNature_AtlasNature MsgAtlasNature::none;
const MsgAtlasNature_AtlasNature MsgAtlasNature::AtlasNature_MIN;
const MsgAtlasNature_AtlasNature MsgAtlasNature::AtlasNature_MAX;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgAtlasNature::kNatureFieldNumber;
#endif  // !_MSC_VER

MsgAtlasNature::MsgAtlasNature() {
  SharedCtor();
}

void MsgAtlasNature::InitAsDefaultInstance() {
}

MsgAtlasNature::MsgAtlasNature(const MsgAtlasNature& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgAtlasNature::SharedCtor() {
  _cached_size_ = 0;
  nature_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgAtlasNature::~MsgAtlasNature() {
  SharedDtor();
}

void MsgAtlasNature::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgAtlasNature::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgAtlasNature_descriptor_;
}

const MsgAtlasNature& MsgAtlasNature::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgAtlasNature* MsgAtlasNature::default_instance_ = NULL;

MsgAtlasNature* MsgAtlasNature::New() const {
  return new MsgAtlasNature;
}

void MsgAtlasNature::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    nature_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgAtlasNature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 nature = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &nature_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgAtlasNature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgAtlasNature::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 nature = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nature(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgAtlasNature::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 nature = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nature(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgAtlasNature::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 nature = 1;
    if (has_nature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nature());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgAtlasNature::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgAtlasNature* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgAtlasNature*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgAtlasNature::MergeFrom(const MsgAtlasNature& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_nature(from.nature());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgAtlasNature::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgAtlasNature::CopyFrom(const MsgAtlasNature& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgAtlasNature::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgAtlasNature::Swap(MsgAtlasNature* other) {
  if (other != this) {
    std::swap(nature_, other->nature_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgAtlasNature::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgAtlasNature_descriptor_;
  metadata.reflection = MsgAtlasNature_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgEquipmentType::kEquipmentFieldNumber;
#endif  // !_MSC_VER

MsgEquipmentType::MsgEquipmentType() {
  SharedCtor();
}

void MsgEquipmentType::InitAsDefaultInstance() {
}

MsgEquipmentType::MsgEquipmentType(const MsgEquipmentType& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgEquipmentType::SharedCtor() {
  _cached_size_ = 0;
  equipment_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgEquipmentType::~MsgEquipmentType() {
  SharedDtor();
}

void MsgEquipmentType::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgEquipmentType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgEquipmentType_descriptor_;
}

const MsgEquipmentType& MsgEquipmentType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgEquipmentType* MsgEquipmentType::default_instance_ = NULL;

MsgEquipmentType* MsgEquipmentType::New() const {
  return new MsgEquipmentType;
}

void MsgEquipmentType::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    equipment_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgEquipmentType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 equipment = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &equipment_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgEquipmentType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgEquipmentType::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required uint32 equipment = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->equipment(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgEquipmentType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 equipment = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->equipment(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgEquipmentType::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 equipment = 1;
    if (has_equipment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->equipment());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgEquipmentType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgEquipmentType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgEquipmentType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgEquipmentType::MergeFrom(const MsgEquipmentType& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_equipment(from.equipment());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgEquipmentType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgEquipmentType::CopyFrom(const MsgEquipmentType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgEquipmentType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgEquipmentType::Swap(MsgEquipmentType* other) {
  if (other != this) {
    std::swap(equipment_, other->equipment_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgEquipmentType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgEquipmentType_descriptor_;
  metadata.reflection = MsgEquipmentType_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDotationType::kOidFieldNumber;
#endif  // !_MSC_VER

MsgDotationType::MsgDotationType() {
  SharedCtor();
}

void MsgDotationType::InitAsDefaultInstance() {
}

MsgDotationType::MsgDotationType(const MsgDotationType& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgDotationType::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDotationType::~MsgDotationType() {
  SharedDtor();
}

void MsgDotationType::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgDotationType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDotationType_descriptor_;
}

const MsgDotationType& MsgDotationType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgDotationType* MsgDotationType::default_instance_ = NULL;

MsgDotationType* MsgDotationType::New() const {
  return new MsgDotationType;
}

void MsgDotationType::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDotationType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgDotationType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgDotationType::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->oid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgDotationType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->oid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgDotationType::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgDotationType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDotationType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDotationType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDotationType::MergeFrom(const MsgDotationType& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDotationType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDotationType::CopyFrom(const MsgDotationType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDotationType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgDotationType::Swap(MsgDotationType* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDotationType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDotationType_descriptor_;
  metadata.reflection = MsgDotationType_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgUrbanBlock::kOidFieldNumber;
#endif  // !_MSC_VER

MsgUrbanBlock::MsgUrbanBlock() {
  SharedCtor();
}

void MsgUrbanBlock::InitAsDefaultInstance() {
}

MsgUrbanBlock::MsgUrbanBlock(const MsgUrbanBlock& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgUrbanBlock::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgUrbanBlock::~MsgUrbanBlock() {
  SharedDtor();
}

void MsgUrbanBlock::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgUrbanBlock::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgUrbanBlock_descriptor_;
}

const MsgUrbanBlock& MsgUrbanBlock::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgUrbanBlock* MsgUrbanBlock::default_instance_ = NULL;

MsgUrbanBlock* MsgUrbanBlock::New() const {
  return new MsgUrbanBlock;
}

void MsgUrbanBlock::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgUrbanBlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgUrbanBlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgUrbanBlock::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->oid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgUrbanBlock::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->oid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgUrbanBlock::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgUrbanBlock::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgUrbanBlock* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgUrbanBlock*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgUrbanBlock::MergeFrom(const MsgUrbanBlock& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgUrbanBlock::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgUrbanBlock::CopyFrom(const MsgUrbanBlock& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUrbanBlock::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgUrbanBlock::Swap(MsgUrbanBlock* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgUrbanBlock::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgUrbanBlock_descriptor_;
  metadata.reflection = MsgUrbanBlock_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgUrbanKnowledge::kOidFieldNumber;
#endif  // !_MSC_VER

MsgUrbanKnowledge::MsgUrbanKnowledge() {
  SharedCtor();
}

void MsgUrbanKnowledge::InitAsDefaultInstance() {
}

MsgUrbanKnowledge::MsgUrbanKnowledge(const MsgUrbanKnowledge& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgUrbanKnowledge::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgUrbanKnowledge::~MsgUrbanKnowledge() {
  SharedDtor();
}

void MsgUrbanKnowledge::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgUrbanKnowledge::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgUrbanKnowledge_descriptor_;
}

const MsgUrbanKnowledge& MsgUrbanKnowledge::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgUrbanKnowledge* MsgUrbanKnowledge::default_instance_ = NULL;

MsgUrbanKnowledge* MsgUrbanKnowledge::New() const {
  return new MsgUrbanKnowledge;
}

void MsgUrbanKnowledge::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgUrbanKnowledge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgUrbanKnowledge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgUrbanKnowledge::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->oid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgUrbanKnowledge::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->oid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgUrbanKnowledge::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgUrbanKnowledge::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgUrbanKnowledge* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgUrbanKnowledge*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgUrbanKnowledge::MergeFrom(const MsgUrbanKnowledge& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgUrbanKnowledge::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgUrbanKnowledge::CopyFrom(const MsgUrbanKnowledge& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUrbanKnowledge::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgUrbanKnowledge::Swap(MsgUrbanKnowledge* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgUrbanKnowledge::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgUrbanKnowledge_descriptor_;
  metadata.reflection = MsgUrbanKnowledge_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgMissionParameter_Value::_default_acharstr_;
#ifndef _MSC_VER
const int MsgMissionParameter_Value::kABoolFieldNumber;
const int MsgMissionParameter_Value::kARealFieldNumber;
const int MsgMissionParameter_Value::kEnumerationFieldNumber;
const int MsgMissionParameter_Value::kPathFieldNumber;
const int MsgMissionParameter_Value::kPathListFieldNumber;
const int MsgMissionParameter_Value::kPointFieldNumber;
const int MsgMissionParameter_Value::kPointListFieldNumber;
const int MsgMissionParameter_Value::kPolygonFieldNumber;
const int MsgMissionParameter_Value::kPolygonListFieldNumber;
const int MsgMissionParameter_Value::kLocationFieldNumber;
const int MsgMissionParameter_Value::kLocationListFieldNumber;
const int MsgMissionParameter_Value::kHeadingFieldNumber;
const int MsgMissionParameter_Value::kAtlasNatureFieldNumber;
const int MsgMissionParameter_Value::kUnitFieldNumber;
const int MsgMissionParameter_Value::kUnitListFieldNumber;
const int MsgMissionParameter_Value::kAutomatFieldNumber;
const int MsgMissionParameter_Value::kAutomatListFieldNumber;
const int MsgMissionParameter_Value::kUnitKnowledgeFieldNumber;
const int MsgMissionParameter_Value::kUnitKnowledgeListFieldNumber;
const int MsgMissionParameter_Value::kObjectKnowledgeFieldNumber;
const int MsgMissionParameter_Value::kObjectKnowledgeListFieldNumber;
const int MsgMissionParameter_Value::kPopulationKnowledgeFieldNumber;
const int MsgMissionParameter_Value::kPlannedWorkFieldNumber;
const int MsgMissionParameter_Value::kPlannedWorkListFieldNumber;
const int MsgMissionParameter_Value::kDotationTypeFieldNumber;
const int MsgMissionParameter_Value::kEquipmentTypeFieldNumber;
const int MsgMissionParameter_Value::kTirIndirectFieldNumber;
const int MsgMissionParameter_Value::kDateTimeFieldNumber;
const int MsgMissionParameter_Value::kLogMaintenancePrioritiesFieldNumber;
const int MsgMissionParameter_Value::kLogMedicalPrioritiesFieldNumber;
const int MsgMissionParameter_Value::kACharStrFieldNumber;
const int MsgMissionParameter_Value::kMissionObjectiveFieldNumber;
const int MsgMissionParameter_Value::kMissionObjectiveListFieldNumber;
const int MsgMissionParameter_Value::kLineFieldNumber;
const int MsgMissionParameter_Value::kLimasOrderFieldNumber;
const int MsgMissionParameter_Value::kIntelligenceListFieldNumber;
const int MsgMissionParameter_Value::kUrbanBlockFieldNumber;
const int MsgMissionParameter_Value::kArmyFieldNumber;
const int MsgMissionParameter_Value::kFormationFieldNumber;
const int MsgMissionParameter_Value::kIdentifierFieldNumber;
const int MsgMissionParameter_Value::kQuantityFieldNumber;
const int MsgMissionParameter_Value::kKnowledgeGroupFieldNumber;
const int MsgMissionParameter_Value::kListFieldNumber;
#endif  // !_MSC_VER

MsgMissionParameter_Value::MsgMissionParameter_Value() {
  SharedCtor();
}

void MsgMissionParameter_Value::InitAsDefaultInstance() {
  path_ = const_cast< ::Common::MsgPath*>(&::Common::MsgPath::default_instance());
  pathlist_ = const_cast< ::Common::MsgPathList*>(&::Common::MsgPathList::default_instance());
  point_ = const_cast< ::Common::MsgPoint*>(&::Common::MsgPoint::default_instance());
  pointlist_ = const_cast< ::Common::MsgPointList*>(&::Common::MsgPointList::default_instance());
  polygon_ = const_cast< ::Common::MsgPolygon*>(&::Common::MsgPolygon::default_instance());
  polygonlist_ = const_cast< ::Common::MsgPolygonList*>(&::Common::MsgPolygonList::default_instance());
  location_ = const_cast< ::Common::MsgLocation*>(&::Common::MsgLocation::default_instance());
  locationlist_ = const_cast< ::Common::MsgLocationList*>(&::Common::MsgLocationList::default_instance());
  heading_ = const_cast< ::Common::MsgHeading*>(&::Common::MsgHeading::default_instance());
  atlasnature_ = const_cast< ::Common::MsgAtlasNature*>(&::Common::MsgAtlasNature::default_instance());
  unit_ = const_cast< ::Common::MsgUnit*>(&::Common::MsgUnit::default_instance());
  unitlist_ = const_cast< ::Common::MsgUnitList*>(&::Common::MsgUnitList::default_instance());
  automat_ = const_cast< ::Common::MsgAutomat*>(&::Common::MsgAutomat::default_instance());
  automatlist_ = const_cast< ::Common::MsgAutomatList*>(&::Common::MsgAutomatList::default_instance());
  unitknowledge_ = const_cast< ::Common::MsgUnitKnowledge*>(&::Common::MsgUnitKnowledge::default_instance());
  unitknowledgelist_ = const_cast< ::Common::MsgUnitKnowledgeList*>(&::Common::MsgUnitKnowledgeList::default_instance());
  objectknowledge_ = const_cast< ::Common::MsgObjectKnowledge*>(&::Common::MsgObjectKnowledge::default_instance());
  objectknowledgelist_ = const_cast< ::Common::MsgObjectKnowledgeList*>(&::Common::MsgObjectKnowledgeList::default_instance());
  populationknowledge_ = const_cast< ::Common::MsgPopulationKnowledge*>(&::Common::MsgPopulationKnowledge::default_instance());
  plannedwork_ = const_cast< ::Common::MsgPlannedWork*>(&::Common::MsgPlannedWork::default_instance());
  plannedworklist_ = const_cast< ::Common::MsgPlannedWorkList*>(&::Common::MsgPlannedWorkList::default_instance());
  dotationtype_ = const_cast< ::Common::MsgDotationType*>(&::Common::MsgDotationType::default_instance());
  equipmenttype_ = const_cast< ::Common::MsgEquipmentType*>(&::Common::MsgEquipmentType::default_instance());
  datetime_ = const_cast< ::Common::MsgDateTime*>(&::Common::MsgDateTime::default_instance());
  logmaintenancepriorities_ = const_cast< ::Common::MsgLogMaintenancePriorities*>(&::Common::MsgLogMaintenancePriorities::default_instance());
  logmedicalpriorities_ = const_cast< ::Common::MsgLogMedicalPriorities*>(&::Common::MsgLogMedicalPriorities::default_instance());
  missionobjective_ = const_cast< ::Common::MsgMissionObjective*>(&::Common::MsgMissionObjective::default_instance());
  missionobjectivelist_ = const_cast< ::Common::MsgMissionObjectiveList*>(&::Common::MsgMissionObjectiveList::default_instance());
  line_ = const_cast< ::Common::MsgLine*>(&::Common::MsgLine::default_instance());
  limasorder_ = const_cast< ::Common::MsgLimasOrder*>(&::Common::MsgLimasOrder::default_instance());
  intelligencelist_ = const_cast< ::Common::MsgIntelligenceList*>(&::Common::MsgIntelligenceList::default_instance());
  urbanblock_ = const_cast< ::Common::MsgUrbanBlock*>(&::Common::MsgUrbanBlock::default_instance());
}

MsgMissionParameter_Value::MsgMissionParameter_Value(const MsgMissionParameter_Value& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMissionParameter_Value::SharedCtor() {
  _cached_size_ = 0;
  abool_ = false;
  areal_ = 0;
  enumeration_ = 0;
  path_ = NULL;
  pathlist_ = NULL;
  point_ = NULL;
  pointlist_ = NULL;
  polygon_ = NULL;
  polygonlist_ = NULL;
  location_ = NULL;
  locationlist_ = NULL;
  heading_ = NULL;
  atlasnature_ = NULL;
  unit_ = NULL;
  unitlist_ = NULL;
  automat_ = NULL;
  automatlist_ = NULL;
  unitknowledge_ = NULL;
  unitknowledgelist_ = NULL;
  objectknowledge_ = NULL;
  objectknowledgelist_ = NULL;
  populationknowledge_ = NULL;
  plannedwork_ = NULL;
  plannedworklist_ = NULL;
  dotationtype_ = NULL;
  equipmenttype_ = NULL;
  tirindirect_ = 0;
  datetime_ = NULL;
  logmaintenancepriorities_ = NULL;
  logmedicalpriorities_ = NULL;
  acharstr_ = const_cast< ::std::string*>(&_default_acharstr_);
  missionobjective_ = NULL;
  missionobjectivelist_ = NULL;
  line_ = NULL;
  limasorder_ = NULL;
  intelligencelist_ = NULL;
  urbanblock_ = NULL;
  army_ = 0;
  formation_ = 0;
  identifier_ = 0u;
  quantity_ = 0;
  knowledgegroup_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMissionParameter_Value::~MsgMissionParameter_Value() {
  SharedDtor();
}

void MsgMissionParameter_Value::SharedDtor() {
  if (acharstr_ != &_default_acharstr_) {
    delete acharstr_;
  }
  if (this != default_instance_) {
    delete path_;
    delete pathlist_;
    delete point_;
    delete pointlist_;
    delete polygon_;
    delete polygonlist_;
    delete location_;
    delete locationlist_;
    delete heading_;
    delete atlasnature_;
    delete unit_;
    delete unitlist_;
    delete automat_;
    delete automatlist_;
    delete unitknowledge_;
    delete unitknowledgelist_;
    delete objectknowledge_;
    delete objectknowledgelist_;
    delete populationknowledge_;
    delete plannedwork_;
    delete plannedworklist_;
    delete dotationtype_;
    delete equipmenttype_;
    delete datetime_;
    delete logmaintenancepriorities_;
    delete logmedicalpriorities_;
    delete missionobjective_;
    delete missionobjectivelist_;
    delete line_;
    delete limasorder_;
    delete intelligencelist_;
    delete urbanblock_;
  }
}

const ::google::protobuf::Descriptor* MsgMissionParameter_Value::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMissionParameter_Value_descriptor_;
}

const MsgMissionParameter_Value& MsgMissionParameter_Value::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgMissionParameter_Value* MsgMissionParameter_Value::default_instance_ = NULL;

MsgMissionParameter_Value* MsgMissionParameter_Value::New() const {
  return new MsgMissionParameter_Value;
}

void MsgMissionParameter_Value::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    abool_ = false;
    areal_ = 0;
    enumeration_ = 0;
    if (_has_bit(3)) {
      if (path_ != NULL) path_->::Common::MsgPath::Clear();
    }
    if (_has_bit(4)) {
      if (pathlist_ != NULL) pathlist_->::Common::MsgPathList::Clear();
    }
    if (_has_bit(5)) {
      if (point_ != NULL) point_->::Common::MsgPoint::Clear();
    }
    if (_has_bit(6)) {
      if (pointlist_ != NULL) pointlist_->::Common::MsgPointList::Clear();
    }
    if (_has_bit(7)) {
      if (polygon_ != NULL) polygon_->::Common::MsgPolygon::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (_has_bit(8)) {
      if (polygonlist_ != NULL) polygonlist_->::Common::MsgPolygonList::Clear();
    }
    if (_has_bit(9)) {
      if (location_ != NULL) location_->::Common::MsgLocation::Clear();
    }
    if (_has_bit(10)) {
      if (locationlist_ != NULL) locationlist_->::Common::MsgLocationList::Clear();
    }
    if (_has_bit(11)) {
      if (heading_ != NULL) heading_->::Common::MsgHeading::Clear();
    }
    if (_has_bit(12)) {
      if (atlasnature_ != NULL) atlasnature_->::Common::MsgAtlasNature::Clear();
    }
    if (_has_bit(13)) {
      if (unit_ != NULL) unit_->::Common::MsgUnit::Clear();
    }
    if (_has_bit(14)) {
      if (unitlist_ != NULL) unitlist_->::Common::MsgUnitList::Clear();
    }
    if (_has_bit(15)) {
      if (automat_ != NULL) automat_->::Common::MsgAutomat::Clear();
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (_has_bit(16)) {
      if (automatlist_ != NULL) automatlist_->::Common::MsgAutomatList::Clear();
    }
    if (_has_bit(17)) {
      if (unitknowledge_ != NULL) unitknowledge_->::Common::MsgUnitKnowledge::Clear();
    }
    if (_has_bit(18)) {
      if (unitknowledgelist_ != NULL) unitknowledgelist_->::Common::MsgUnitKnowledgeList::Clear();
    }
    if (_has_bit(19)) {
      if (objectknowledge_ != NULL) objectknowledge_->::Common::MsgObjectKnowledge::Clear();
    }
    if (_has_bit(20)) {
      if (objectknowledgelist_ != NULL) objectknowledgelist_->::Common::MsgObjectKnowledgeList::Clear();
    }
    if (_has_bit(21)) {
      if (populationknowledge_ != NULL) populationknowledge_->::Common::MsgPopulationKnowledge::Clear();
    }
    if (_has_bit(22)) {
      if (plannedwork_ != NULL) plannedwork_->::Common::MsgPlannedWork::Clear();
    }
    if (_has_bit(23)) {
      if (plannedworklist_ != NULL) plannedworklist_->::Common::MsgPlannedWorkList::Clear();
    }
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (_has_bit(24)) {
      if (dotationtype_ != NULL) dotationtype_->::Common::MsgDotationType::Clear();
    }
    if (_has_bit(25)) {
      if (equipmenttype_ != NULL) equipmenttype_->::Common::MsgEquipmentType::Clear();
    }
    tirindirect_ = 0;
    if (_has_bit(27)) {
      if (datetime_ != NULL) datetime_->::Common::MsgDateTime::Clear();
    }
    if (_has_bit(28)) {
      if (logmaintenancepriorities_ != NULL) logmaintenancepriorities_->::Common::MsgLogMaintenancePriorities::Clear();
    }
    if (_has_bit(29)) {
      if (logmedicalpriorities_ != NULL) logmedicalpriorities_->::Common::MsgLogMedicalPriorities::Clear();
    }
    if (_has_bit(30)) {
      if (acharstr_ != &_default_acharstr_) {
        acharstr_->clear();
      }
    }
    if (_has_bit(31)) {
      if (missionobjective_ != NULL) missionobjective_->::Common::MsgMissionObjective::Clear();
    }
  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (_has_bit(32)) {
      if (missionobjectivelist_ != NULL) missionobjectivelist_->::Common::MsgMissionObjectiveList::Clear();
    }
    if (_has_bit(33)) {
      if (line_ != NULL) line_->::Common::MsgLine::Clear();
    }
    if (_has_bit(34)) {
      if (limasorder_ != NULL) limasorder_->::Common::MsgLimasOrder::Clear();
    }
    if (_has_bit(35)) {
      if (intelligencelist_ != NULL) intelligencelist_->::Common::MsgIntelligenceList::Clear();
    }
    if (_has_bit(36)) {
      if (urbanblock_ != NULL) urbanblock_->::Common::MsgUrbanBlock::Clear();
    }
    army_ = 0;
    formation_ = 0;
    identifier_ = 0u;
  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    quantity_ = 0;
    knowledgegroup_ = 0;
  }
  list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMissionParameter_Value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool aBool = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &abool_));
        _set_bit(0);
        if (input->ExpectTag(21)) goto parse_aReal;
        break;
      }
      
      // optional float aReal = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
          goto handle_uninterpreted;
        }
       parse_aReal:
        DO_(::google::protobuf::internal::WireFormatLite::ReadFloat(
              input, &areal_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_enumeration;
        break;
      }
      
      // optional int32 enumeration = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_enumeration:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &enumeration_));
        _set_bit(2);
        if (input->ExpectTag(34)) goto parse_path;
        break;
      }
      
      // optional .Common.MsgPath path = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_path:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_path()));
        if (input->ExpectTag(42)) goto parse_pathList;
        break;
      }
      
      // optional .Common.MsgPathList pathList = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_pathList:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_pathlist()));
        if (input->ExpectTag(50)) goto parse_point;
        break;
      }
      
      // optional .Common.MsgPoint point = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_point:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_point()));
        if (input->ExpectTag(58)) goto parse_pointList;
        break;
      }
      
      // optional .Common.MsgPointList pointList = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_pointList:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_pointlist()));
        if (input->ExpectTag(66)) goto parse_polygon;
        break;
      }
      
      // optional .Common.MsgPolygon polygon = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_polygon:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_polygon()));
        if (input->ExpectTag(74)) goto parse_polygonList;
        break;
      }
      
      // optional .Common.MsgPolygonList polygonList = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_polygonList:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_polygonlist()));
        if (input->ExpectTag(82)) goto parse_location;
        break;
      }
      
      // optional .Common.MsgLocation location = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_location:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_location()));
        if (input->ExpectTag(90)) goto parse_locationList;
        break;
      }
      
      // optional .Common.MsgLocationList locationList = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_locationList:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_locationlist()));
        if (input->ExpectTag(98)) goto parse_heading;
        break;
      }
      
      // optional .Common.MsgHeading heading = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_heading:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_heading()));
        if (input->ExpectTag(106)) goto parse_atlasNature;
        break;
      }
      
      // optional .Common.MsgAtlasNature atlasNature = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_atlasNature:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_atlasnature()));
        if (input->ExpectTag(114)) goto parse_unit;
        break;
      }
      
      // optional .Common.MsgUnit unit = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_unit:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_unit()));
        if (input->ExpectTag(122)) goto parse_unitList;
        break;
      }
      
      // optional .Common.MsgUnitList unitList = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_unitList:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_unitlist()));
        if (input->ExpectTag(130)) goto parse_automat;
        break;
      }
      
      // optional .Common.MsgAutomat automat = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_automat:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_automat()));
        if (input->ExpectTag(138)) goto parse_automatList;
        break;
      }
      
      // optional .Common.MsgAutomatList automatList = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_automatList:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_automatlist()));
        if (input->ExpectTag(146)) goto parse_unitKnowledge;
        break;
      }
      
      // optional .Common.MsgUnitKnowledge unitKnowledge = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_unitKnowledge:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_unitknowledge()));
        if (input->ExpectTag(154)) goto parse_unitKnowledgeList;
        break;
      }
      
      // optional .Common.MsgUnitKnowledgeList unitKnowledgeList = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_unitKnowledgeList:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_unitknowledgelist()));
        if (input->ExpectTag(162)) goto parse_objectKnowledge;
        break;
      }
      
      // optional .Common.MsgObjectKnowledge objectKnowledge = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_objectKnowledge:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_objectknowledge()));
        if (input->ExpectTag(170)) goto parse_objectKnowledgeList;
        break;
      }
      
      // optional .Common.MsgObjectKnowledgeList objectKnowledgeList = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_objectKnowledgeList:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_objectknowledgelist()));
        if (input->ExpectTag(178)) goto parse_populationKnowledge;
        break;
      }
      
      // optional .Common.MsgPopulationKnowledge populationKnowledge = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_populationKnowledge:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_populationknowledge()));
        if (input->ExpectTag(186)) goto parse_plannedWork;
        break;
      }
      
      // optional .Common.MsgPlannedWork plannedWork = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_plannedWork:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_plannedwork()));
        if (input->ExpectTag(194)) goto parse_plannedWorkList;
        break;
      }
      
      // optional .Common.MsgPlannedWorkList plannedWorkList = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_plannedWorkList:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_plannedworklist()));
        if (input->ExpectTag(202)) goto parse_dotationType;
        break;
      }
      
      // optional .Common.MsgDotationType dotationType = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_dotationType:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_dotationtype()));
        if (input->ExpectTag(210)) goto parse_equipmentType;
        break;
      }
      
      // optional .Common.MsgEquipmentType equipmentType = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_equipmentType:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_equipmenttype()));
        if (input->ExpectTag(216)) goto parse_tirIndirect;
        break;
      }
      
      // optional int32 tirIndirect = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_tirIndirect:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &tirindirect_));
        _set_bit(26);
        if (input->ExpectTag(226)) goto parse_dateTime;
        break;
      }
      
      // optional .Common.MsgDateTime dateTime = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_dateTime:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_datetime()));
        if (input->ExpectTag(234)) goto parse_logMaintenancePriorities;
        break;
      }
      
      // optional .Common.MsgLogMaintenancePriorities logMaintenancePriorities = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_logMaintenancePriorities:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_logmaintenancepriorities()));
        if (input->ExpectTag(242)) goto parse_logMedicalPriorities;
        break;
      }
      
      // optional .Common.MsgLogMedicalPriorities logMedicalPriorities = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_logMedicalPriorities:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_logmedicalpriorities()));
        if (input->ExpectTag(250)) goto parse_aCharStr;
        break;
      }
      
      // optional string aCharStr = 31;
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_aCharStr:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_acharstr()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->acharstr().data(), this->acharstr().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(258)) goto parse_missionObjective;
        break;
      }
      
      // optional .Common.MsgMissionObjective missionObjective = 32;
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_missionObjective:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_missionobjective()));
        if (input->ExpectTag(266)) goto parse_missionObjectiveList;
        break;
      }
      
      // optional .Common.MsgMissionObjectiveList missionObjectiveList = 33;
      case 33: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_missionObjectiveList:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_missionobjectivelist()));
        if (input->ExpectTag(274)) goto parse_line;
        break;
      }
      
      // optional .Common.MsgLine line = 34;
      case 34: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_line:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_line()));
        if (input->ExpectTag(282)) goto parse_limasOrder;
        break;
      }
      
      // optional .Common.MsgLimasOrder limasOrder = 35;
      case 35: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_limasOrder:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_limasorder()));
        if (input->ExpectTag(290)) goto parse_intelligenceList;
        break;
      }
      
      // optional .Common.MsgIntelligenceList intelligenceList = 36;
      case 36: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_intelligenceList:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_intelligencelist()));
        if (input->ExpectTag(298)) goto parse_urbanBlock;
        break;
      }
      
      // optional .Common.MsgUrbanBlock urbanBlock = 37;
      case 37: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_urbanBlock:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_urbanblock()));
        if (input->ExpectTag(304)) goto parse_army;
        break;
      }
      
      // optional int32 army = 38;
      case 38: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_army:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &army_));
        _set_bit(37);
        if (input->ExpectTag(312)) goto parse_formation;
        break;
      }
      
      // optional int32 formation = 39;
      case 39: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_formation:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &formation_));
        _set_bit(38);
        if (input->ExpectTag(320)) goto parse_identifier;
        break;
      }
      
      // optional uint32 identifier = 40;
      case 40: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_identifier:
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &identifier_));
        _set_bit(39);
        if (input->ExpectTag(328)) goto parse_quantity;
        break;
      }
      
      // optional int32 quantity = 41;
      case 41: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_quantity:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &quantity_));
        _set_bit(40);
        if (input->ExpectTag(336)) goto parse_knowledgeGroup;
        break;
      }
      
      // optional int32 knowledgeGroup = 42;
      case 42: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_knowledgeGroup:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &knowledgegroup_));
        _set_bit(41);
        if (input->ExpectTag(346)) goto parse_list;
        break;
      }
      
      // repeated .Common.MsgMissionParameter.Value list = 43;
      case 43: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_list:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_list()));
        if (input->ExpectTag(346)) goto parse_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMissionParameter_Value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMissionParameter_Value::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional bool aBool = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->abool(), output);
  }
  
  // optional float aReal = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->areal(), output);
  }
  
  // optional int32 enumeration = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->enumeration(), output);
  }
  
  // optional .Common.MsgPath path = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      4, this->path(), output);
  }
  
  // optional .Common.MsgPathList pathList = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      5, this->pathlist(), output);
  }
  
  // optional .Common.MsgPoint point = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      6, this->point(), output);
  }
  
  // optional .Common.MsgPointList pointList = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      7, this->pointlist(), output);
  }
  
  // optional .Common.MsgPolygon polygon = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      8, this->polygon(), output);
  }
  
  // optional .Common.MsgPolygonList polygonList = 9;
  if (_has_bit(8)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      9, this->polygonlist(), output);
  }
  
  // optional .Common.MsgLocation location = 10;
  if (_has_bit(9)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      10, this->location(), output);
  }
  
  // optional .Common.MsgLocationList locationList = 11;
  if (_has_bit(10)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      11, this->locationlist(), output);
  }
  
  // optional .Common.MsgHeading heading = 12;
  if (_has_bit(11)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      12, this->heading(), output);
  }
  
  // optional .Common.MsgAtlasNature atlasNature = 13;
  if (_has_bit(12)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      13, this->atlasnature(), output);
  }
  
  // optional .Common.MsgUnit unit = 14;
  if (_has_bit(13)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      14, this->unit(), output);
  }
  
  // optional .Common.MsgUnitList unitList = 15;
  if (_has_bit(14)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      15, this->unitlist(), output);
  }
  
  // optional .Common.MsgAutomat automat = 16;
  if (_has_bit(15)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      16, this->automat(), output);
  }
  
  // optional .Common.MsgAutomatList automatList = 17;
  if (_has_bit(16)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      17, this->automatlist(), output);
  }
  
  // optional .Common.MsgUnitKnowledge unitKnowledge = 18;
  if (_has_bit(17)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      18, this->unitknowledge(), output);
  }
  
  // optional .Common.MsgUnitKnowledgeList unitKnowledgeList = 19;
  if (_has_bit(18)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      19, this->unitknowledgelist(), output);
  }
  
  // optional .Common.MsgObjectKnowledge objectKnowledge = 20;
  if (_has_bit(19)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      20, this->objectknowledge(), output);
  }
  
  // optional .Common.MsgObjectKnowledgeList objectKnowledgeList = 21;
  if (_has_bit(20)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      21, this->objectknowledgelist(), output);
  }
  
  // optional .Common.MsgPopulationKnowledge populationKnowledge = 22;
  if (_has_bit(21)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      22, this->populationknowledge(), output);
  }
  
  // optional .Common.MsgPlannedWork plannedWork = 23;
  if (_has_bit(22)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      23, this->plannedwork(), output);
  }
  
  // optional .Common.MsgPlannedWorkList plannedWorkList = 24;
  if (_has_bit(23)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      24, this->plannedworklist(), output);
  }
  
  // optional .Common.MsgDotationType dotationType = 25;
  if (_has_bit(24)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      25, this->dotationtype(), output);
  }
  
  // optional .Common.MsgEquipmentType equipmentType = 26;
  if (_has_bit(25)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      26, this->equipmenttype(), output);
  }
  
  // optional int32 tirIndirect = 27;
  if (_has_bit(26)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->tirindirect(), output);
  }
  
  // optional .Common.MsgDateTime dateTime = 28;
  if (_has_bit(27)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      28, this->datetime(), output);
  }
  
  // optional .Common.MsgLogMaintenancePriorities logMaintenancePriorities = 29;
  if (_has_bit(28)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      29, this->logmaintenancepriorities(), output);
  }
  
  // optional .Common.MsgLogMedicalPriorities logMedicalPriorities = 30;
  if (_has_bit(29)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      30, this->logmedicalpriorities(), output);
  }
  
  // optional string aCharStr = 31;
  if (_has_bit(30)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->acharstr().data(), this->acharstr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      31, this->acharstr(), output);
  }
  
  // optional .Common.MsgMissionObjective missionObjective = 32;
  if (_has_bit(31)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      32, this->missionobjective(), output);
  }
  
  // optional .Common.MsgMissionObjectiveList missionObjectiveList = 33;
  if (_has_bit(32)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      33, this->missionobjectivelist(), output);
  }
  
  // optional .Common.MsgLine line = 34;
  if (_has_bit(33)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      34, this->line(), output);
  }
  
  // optional .Common.MsgLimasOrder limasOrder = 35;
  if (_has_bit(34)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      35, this->limasorder(), output);
  }
  
  // optional .Common.MsgIntelligenceList intelligenceList = 36;
  if (_has_bit(35)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      36, this->intelligencelist(), output);
  }
  
  // optional .Common.MsgUrbanBlock urbanBlock = 37;
  if (_has_bit(36)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      37, this->urbanblock(), output);
  }
  
  // optional int32 army = 38;
  if (_has_bit(37)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(38, this->army(), output);
  }
  
  // optional int32 formation = 39;
  if (_has_bit(38)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(39, this->formation(), output);
  }
  
  // optional uint32 identifier = 40;
  if (_has_bit(39)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(40, this->identifier(), output);
  }
  
  // optional int32 quantity = 41;
  if (_has_bit(40)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(41, this->quantity(), output);
  }
  
  // optional int32 knowledgeGroup = 42;
  if (_has_bit(41)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(42, this->knowledgegroup(), output);
  }
  
  // repeated .Common.MsgMissionParameter.Value list = 43;
  for (int i = 0; i < this->list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      43, this->list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMissionParameter_Value::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bool aBool = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->abool(), target);
  }
  
  // optional float aReal = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->areal(), target);
  }
  
  // optional int32 enumeration = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->enumeration(), target);
  }
  
  // optional .Common.MsgPath path = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->path(), target);
  }
  
  // optional .Common.MsgPathList pathList = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->pathlist(), target);
  }
  
  // optional .Common.MsgPoint point = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->point(), target);
  }
  
  // optional .Common.MsgPointList pointList = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->pointlist(), target);
  }
  
  // optional .Common.MsgPolygon polygon = 8;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->polygon(), target);
  }
  
  // optional .Common.MsgPolygonList polygonList = 9;
  if (_has_bit(8)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->polygonlist(), target);
  }
  
  // optional .Common.MsgLocation location = 10;
  if (_has_bit(9)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->location(), target);
  }
  
  // optional .Common.MsgLocationList locationList = 11;
  if (_has_bit(10)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->locationlist(), target);
  }
  
  // optional .Common.MsgHeading heading = 12;
  if (_has_bit(11)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->heading(), target);
  }
  
  // optional .Common.MsgAtlasNature atlasNature = 13;
  if (_has_bit(12)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->atlasnature(), target);
  }
  
  // optional .Common.MsgUnit unit = 14;
  if (_has_bit(13)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->unit(), target);
  }
  
  // optional .Common.MsgUnitList unitList = 15;
  if (_has_bit(14)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->unitlist(), target);
  }
  
  // optional .Common.MsgAutomat automat = 16;
  if (_has_bit(15)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->automat(), target);
  }
  
  // optional .Common.MsgAutomatList automatList = 17;
  if (_has_bit(16)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->automatlist(), target);
  }
  
  // optional .Common.MsgUnitKnowledge unitKnowledge = 18;
  if (_has_bit(17)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->unitknowledge(), target);
  }
  
  // optional .Common.MsgUnitKnowledgeList unitKnowledgeList = 19;
  if (_has_bit(18)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->unitknowledgelist(), target);
  }
  
  // optional .Common.MsgObjectKnowledge objectKnowledge = 20;
  if (_has_bit(19)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->objectknowledge(), target);
  }
  
  // optional .Common.MsgObjectKnowledgeList objectKnowledgeList = 21;
  if (_has_bit(20)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->objectknowledgelist(), target);
  }
  
  // optional .Common.MsgPopulationKnowledge populationKnowledge = 22;
  if (_has_bit(21)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        22, this->populationknowledge(), target);
  }
  
  // optional .Common.MsgPlannedWork plannedWork = 23;
  if (_has_bit(22)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        23, this->plannedwork(), target);
  }
  
  // optional .Common.MsgPlannedWorkList plannedWorkList = 24;
  if (_has_bit(23)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        24, this->plannedworklist(), target);
  }
  
  // optional .Common.MsgDotationType dotationType = 25;
  if (_has_bit(24)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        25, this->dotationtype(), target);
  }
  
  // optional .Common.MsgEquipmentType equipmentType = 26;
  if (_has_bit(25)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        26, this->equipmenttype(), target);
  }
  
  // optional int32 tirIndirect = 27;
  if (_has_bit(26)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->tirindirect(), target);
  }
  
  // optional .Common.MsgDateTime dateTime = 28;
  if (_has_bit(27)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        28, this->datetime(), target);
  }
  
  // optional .Common.MsgLogMaintenancePriorities logMaintenancePriorities = 29;
  if (_has_bit(28)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        29, this->logmaintenancepriorities(), target);
  }
  
  // optional .Common.MsgLogMedicalPriorities logMedicalPriorities = 30;
  if (_has_bit(29)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        30, this->logmedicalpriorities(), target);
  }
  
  // optional string aCharStr = 31;
  if (_has_bit(30)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->acharstr().data(), this->acharstr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        31, this->acharstr(), target);
  }
  
  // optional .Common.MsgMissionObjective missionObjective = 32;
  if (_has_bit(31)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        32, this->missionobjective(), target);
  }
  
  // optional .Common.MsgMissionObjectiveList missionObjectiveList = 33;
  if (_has_bit(32)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        33, this->missionobjectivelist(), target);
  }
  
  // optional .Common.MsgLine line = 34;
  if (_has_bit(33)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        34, this->line(), target);
  }
  
  // optional .Common.MsgLimasOrder limasOrder = 35;
  if (_has_bit(34)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        35, this->limasorder(), target);
  }
  
  // optional .Common.MsgIntelligenceList intelligenceList = 36;
  if (_has_bit(35)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        36, this->intelligencelist(), target);
  }
  
  // optional .Common.MsgUrbanBlock urbanBlock = 37;
  if (_has_bit(36)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        37, this->urbanblock(), target);
  }
  
  // optional int32 army = 38;
  if (_has_bit(37)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(38, this->army(), target);
  }
  
  // optional int32 formation = 39;
  if (_has_bit(38)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(39, this->formation(), target);
  }
  
  // optional uint32 identifier = 40;
  if (_has_bit(39)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(40, this->identifier(), target);
  }
  
  // optional int32 quantity = 41;
  if (_has_bit(40)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(41, this->quantity(), target);
  }
  
  // optional int32 knowledgeGroup = 42;
  if (_has_bit(41)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(42, this->knowledgegroup(), target);
  }
  
  // repeated .Common.MsgMissionParameter.Value list = 43;
  for (int i = 0; i < this->list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        43, this->list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMissionParameter_Value::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool aBool = 1;
    if (has_abool()) {
      total_size += 1 + 1;
    }
    
    // optional float aReal = 2;
    if (has_areal()) {
      total_size += 1 + 4;
    }
    
    // optional int32 enumeration = 3;
    if (has_enumeration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->enumeration());
    }
    
    // optional .Common.MsgPath path = 4;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->path());
    }
    
    // optional .Common.MsgPathList pathList = 5;
    if (has_pathlist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pathlist());
    }
    
    // optional .Common.MsgPoint point = 6;
    if (has_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->point());
    }
    
    // optional .Common.MsgPointList pointList = 7;
    if (has_pointlist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pointlist());
    }
    
    // optional .Common.MsgPolygon polygon = 8;
    if (has_polygon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->polygon());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .Common.MsgPolygonList polygonList = 9;
    if (has_polygonlist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->polygonlist());
    }
    
    // optional .Common.MsgLocation location = 10;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->location());
    }
    
    // optional .Common.MsgLocationList locationList = 11;
    if (has_locationlist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->locationlist());
    }
    
    // optional .Common.MsgHeading heading = 12;
    if (has_heading()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->heading());
    }
    
    // optional .Common.MsgAtlasNature atlasNature = 13;
    if (has_atlasnature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->atlasnature());
    }
    
    // optional .Common.MsgUnit unit = 14;
    if (has_unit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->unit());
    }
    
    // optional .Common.MsgUnitList unitList = 15;
    if (has_unitlist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->unitlist());
    }
    
    // optional .Common.MsgAutomat automat = 16;
    if (has_automat()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->automat());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional .Common.MsgAutomatList automatList = 17;
    if (has_automatlist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->automatlist());
    }
    
    // optional .Common.MsgUnitKnowledge unitKnowledge = 18;
    if (has_unitknowledge()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->unitknowledge());
    }
    
    // optional .Common.MsgUnitKnowledgeList unitKnowledgeList = 19;
    if (has_unitknowledgelist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->unitknowledgelist());
    }
    
    // optional .Common.MsgObjectKnowledge objectKnowledge = 20;
    if (has_objectknowledge()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->objectknowledge());
    }
    
    // optional .Common.MsgObjectKnowledgeList objectKnowledgeList = 21;
    if (has_objectknowledgelist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->objectknowledgelist());
    }
    
    // optional .Common.MsgPopulationKnowledge populationKnowledge = 22;
    if (has_populationknowledge()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->populationknowledge());
    }
    
    // optional .Common.MsgPlannedWork plannedWork = 23;
    if (has_plannedwork()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->plannedwork());
    }
    
    // optional .Common.MsgPlannedWorkList plannedWorkList = 24;
    if (has_plannedworklist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->plannedworklist());
    }
    
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional .Common.MsgDotationType dotationType = 25;
    if (has_dotationtype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dotationtype());
    }
    
    // optional .Common.MsgEquipmentType equipmentType = 26;
    if (has_equipmenttype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->equipmenttype());
    }
    
    // optional int32 tirIndirect = 27;
    if (has_tirindirect()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tirindirect());
    }
    
    // optional .Common.MsgDateTime dateTime = 28;
    if (has_datetime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->datetime());
    }
    
    // optional .Common.MsgLogMaintenancePriorities logMaintenancePriorities = 29;
    if (has_logmaintenancepriorities()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->logmaintenancepriorities());
    }
    
    // optional .Common.MsgLogMedicalPriorities logMedicalPriorities = 30;
    if (has_logmedicalpriorities()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->logmedicalpriorities());
    }
    
    // optional string aCharStr = 31;
    if (has_acharstr()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->acharstr());
    }
    
    // optional .Common.MsgMissionObjective missionObjective = 32;
    if (has_missionobjective()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->missionobjective());
    }
    
  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    // optional .Common.MsgMissionObjectiveList missionObjectiveList = 33;
    if (has_missionobjectivelist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->missionobjectivelist());
    }
    
    // optional .Common.MsgLine line = 34;
    if (has_line()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->line());
    }
    
    // optional .Common.MsgLimasOrder limasOrder = 35;
    if (has_limasorder()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->limasorder());
    }
    
    // optional .Common.MsgIntelligenceList intelligenceList = 36;
    if (has_intelligencelist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intelligencelist());
    }
    
    // optional .Common.MsgUrbanBlock urbanBlock = 37;
    if (has_urbanblock()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->urbanblock());
    }
    
    // optional int32 army = 38;
    if (has_army()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->army());
    }
    
    // optional int32 formation = 39;
    if (has_formation()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->formation());
    }
    
    // optional uint32 identifier = 40;
    if (has_identifier()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->identifier());
    }
    
  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    // optional int32 quantity = 41;
    if (has_quantity()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->quantity());
    }
    
    // optional int32 knowledgeGroup = 42;
    if (has_knowledgegroup()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->knowledgegroup());
    }
    
  }
  // repeated .Common.MsgMissionParameter.Value list = 43;
  total_size += 2 * this->list_size();
  for (int i = 0; i < this->list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMissionParameter_Value::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMissionParameter_Value* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMissionParameter_Value*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMissionParameter_Value::MergeFrom(const MsgMissionParameter_Value& from) {
  GOOGLE_CHECK_NE(&from, this);
  list_.MergeFrom(from.list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_abool(from.abool());
    }
    if (from._has_bit(1)) {
      set_areal(from.areal());
    }
    if (from._has_bit(2)) {
      set_enumeration(from.enumeration());
    }
    if (from._has_bit(3)) {
      mutable_path()->::Common::MsgPath::MergeFrom(from.path());
    }
    if (from._has_bit(4)) {
      mutable_pathlist()->::Common::MsgPathList::MergeFrom(from.pathlist());
    }
    if (from._has_bit(5)) {
      mutable_point()->::Common::MsgPoint::MergeFrom(from.point());
    }
    if (from._has_bit(6)) {
      mutable_pointlist()->::Common::MsgPointList::MergeFrom(from.pointlist());
    }
    if (from._has_bit(7)) {
      mutable_polygon()->::Common::MsgPolygon::MergeFrom(from.polygon());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from._has_bit(8)) {
      mutable_polygonlist()->::Common::MsgPolygonList::MergeFrom(from.polygonlist());
    }
    if (from._has_bit(9)) {
      mutable_location()->::Common::MsgLocation::MergeFrom(from.location());
    }
    if (from._has_bit(10)) {
      mutable_locationlist()->::Common::MsgLocationList::MergeFrom(from.locationlist());
    }
    if (from._has_bit(11)) {
      mutable_heading()->::Common::MsgHeading::MergeFrom(from.heading());
    }
    if (from._has_bit(12)) {
      mutable_atlasnature()->::Common::MsgAtlasNature::MergeFrom(from.atlasnature());
    }
    if (from._has_bit(13)) {
      mutable_unit()->::Common::MsgUnit::MergeFrom(from.unit());
    }
    if (from._has_bit(14)) {
      mutable_unitlist()->::Common::MsgUnitList::MergeFrom(from.unitlist());
    }
    if (from._has_bit(15)) {
      mutable_automat()->::Common::MsgAutomat::MergeFrom(from.automat());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from._has_bit(16)) {
      mutable_automatlist()->::Common::MsgAutomatList::MergeFrom(from.automatlist());
    }
    if (from._has_bit(17)) {
      mutable_unitknowledge()->::Common::MsgUnitKnowledge::MergeFrom(from.unitknowledge());
    }
    if (from._has_bit(18)) {
      mutable_unitknowledgelist()->::Common::MsgUnitKnowledgeList::MergeFrom(from.unitknowledgelist());
    }
    if (from._has_bit(19)) {
      mutable_objectknowledge()->::Common::MsgObjectKnowledge::MergeFrom(from.objectknowledge());
    }
    if (from._has_bit(20)) {
      mutable_objectknowledgelist()->::Common::MsgObjectKnowledgeList::MergeFrom(from.objectknowledgelist());
    }
    if (from._has_bit(21)) {
      mutable_populationknowledge()->::Common::MsgPopulationKnowledge::MergeFrom(from.populationknowledge());
    }
    if (from._has_bit(22)) {
      mutable_plannedwork()->::Common::MsgPlannedWork::MergeFrom(from.plannedwork());
    }
    if (from._has_bit(23)) {
      mutable_plannedworklist()->::Common::MsgPlannedWorkList::MergeFrom(from.plannedworklist());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from._has_bit(24)) {
      mutable_dotationtype()->::Common::MsgDotationType::MergeFrom(from.dotationtype());
    }
    if (from._has_bit(25)) {
      mutable_equipmenttype()->::Common::MsgEquipmentType::MergeFrom(from.equipmenttype());
    }
    if (from._has_bit(26)) {
      set_tirindirect(from.tirindirect());
    }
    if (from._has_bit(27)) {
      mutable_datetime()->::Common::MsgDateTime::MergeFrom(from.datetime());
    }
    if (from._has_bit(28)) {
      mutable_logmaintenancepriorities()->::Common::MsgLogMaintenancePriorities::MergeFrom(from.logmaintenancepriorities());
    }
    if (from._has_bit(29)) {
      mutable_logmedicalpriorities()->::Common::MsgLogMedicalPriorities::MergeFrom(from.logmedicalpriorities());
    }
    if (from._has_bit(30)) {
      set_acharstr(from.acharstr());
    }
    if (from._has_bit(31)) {
      mutable_missionobjective()->::Common::MsgMissionObjective::MergeFrom(from.missionobjective());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from._has_bit(32)) {
      mutable_missionobjectivelist()->::Common::MsgMissionObjectiveList::MergeFrom(from.missionobjectivelist());
    }
    if (from._has_bit(33)) {
      mutable_line()->::Common::MsgLine::MergeFrom(from.line());
    }
    if (from._has_bit(34)) {
      mutable_limasorder()->::Common::MsgLimasOrder::MergeFrom(from.limasorder());
    }
    if (from._has_bit(35)) {
      mutable_intelligencelist()->::Common::MsgIntelligenceList::MergeFrom(from.intelligencelist());
    }
    if (from._has_bit(36)) {
      mutable_urbanblock()->::Common::MsgUrbanBlock::MergeFrom(from.urbanblock());
    }
    if (from._has_bit(37)) {
      set_army(from.army());
    }
    if (from._has_bit(38)) {
      set_formation(from.formation());
    }
    if (from._has_bit(39)) {
      set_identifier(from.identifier());
    }
  }
  if (from._has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    if (from._has_bit(40)) {
      set_quantity(from.quantity());
    }
    if (from._has_bit(41)) {
      set_knowledgegroup(from.knowledgegroup());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMissionParameter_Value::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMissionParameter_Value::CopyFrom(const MsgMissionParameter_Value& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMissionParameter_Value::IsInitialized() const {
  
  if (has_path()) {
    if (!this->path().IsInitialized()) return false;
  }
  if (has_pathlist()) {
    if (!this->pathlist().IsInitialized()) return false;
  }
  if (has_point()) {
    if (!this->point().IsInitialized()) return false;
  }
  if (has_pointlist()) {
    if (!this->pointlist().IsInitialized()) return false;
  }
  if (has_polygon()) {
    if (!this->polygon().IsInitialized()) return false;
  }
  if (has_polygonlist()) {
    if (!this->polygonlist().IsInitialized()) return false;
  }
  if (has_location()) {
    if (!this->location().IsInitialized()) return false;
  }
  if (has_locationlist()) {
    if (!this->locationlist().IsInitialized()) return false;
  }
  if (has_heading()) {
    if (!this->heading().IsInitialized()) return false;
  }
  if (has_atlasnature()) {
    if (!this->atlasnature().IsInitialized()) return false;
  }
  if (has_unit()) {
    if (!this->unit().IsInitialized()) return false;
  }
  if (has_unitlist()) {
    if (!this->unitlist().IsInitialized()) return false;
  }
  if (has_automat()) {
    if (!this->automat().IsInitialized()) return false;
  }
  if (has_automatlist()) {
    if (!this->automatlist().IsInitialized()) return false;
  }
  if (has_unitknowledge()) {
    if (!this->unitknowledge().IsInitialized()) return false;
  }
  if (has_unitknowledgelist()) {
    if (!this->unitknowledgelist().IsInitialized()) return false;
  }
  if (has_objectknowledge()) {
    if (!this->objectknowledge().IsInitialized()) return false;
  }
  if (has_objectknowledgelist()) {
    if (!this->objectknowledgelist().IsInitialized()) return false;
  }
  if (has_populationknowledge()) {
    if (!this->populationknowledge().IsInitialized()) return false;
  }
  if (has_plannedwork()) {
    if (!this->plannedwork().IsInitialized()) return false;
  }
  if (has_plannedworklist()) {
    if (!this->plannedworklist().IsInitialized()) return false;
  }
  if (has_dotationtype()) {
    if (!this->dotationtype().IsInitialized()) return false;
  }
  if (has_equipmenttype()) {
    if (!this->equipmenttype().IsInitialized()) return false;
  }
  if (has_datetime()) {
    if (!this->datetime().IsInitialized()) return false;
  }
  if (has_logmaintenancepriorities()) {
    if (!this->logmaintenancepriorities().IsInitialized()) return false;
  }
  if (has_missionobjective()) {
    if (!this->missionobjective().IsInitialized()) return false;
  }
  if (has_missionobjectivelist()) {
    if (!this->missionobjectivelist().IsInitialized()) return false;
  }
  if (has_line()) {
    if (!this->line().IsInitialized()) return false;
  }
  if (has_limasorder()) {
    if (!this->limasorder().IsInitialized()) return false;
  }
  if (has_intelligencelist()) {
    if (!this->intelligencelist().IsInitialized()) return false;
  }
  if (has_urbanblock()) {
    if (!this->urbanblock().IsInitialized()) return false;
  }
  for (int i = 0; i < list_size(); i++) {
    if (!this->list(i).IsInitialized()) return false;
  }
  return true;
}

void MsgMissionParameter_Value::Swap(MsgMissionParameter_Value* other) {
  if (other != this) {
    std::swap(abool_, other->abool_);
    std::swap(areal_, other->areal_);
    std::swap(enumeration_, other->enumeration_);
    std::swap(path_, other->path_);
    std::swap(pathlist_, other->pathlist_);
    std::swap(point_, other->point_);
    std::swap(pointlist_, other->pointlist_);
    std::swap(polygon_, other->polygon_);
    std::swap(polygonlist_, other->polygonlist_);
    std::swap(location_, other->location_);
    std::swap(locationlist_, other->locationlist_);
    std::swap(heading_, other->heading_);
    std::swap(atlasnature_, other->atlasnature_);
    std::swap(unit_, other->unit_);
    std::swap(unitlist_, other->unitlist_);
    std::swap(automat_, other->automat_);
    std::swap(automatlist_, other->automatlist_);
    std::swap(unitknowledge_, other->unitknowledge_);
    std::swap(unitknowledgelist_, other->unitknowledgelist_);
    std::swap(objectknowledge_, other->objectknowledge_);
    std::swap(objectknowledgelist_, other->objectknowledgelist_);
    std::swap(populationknowledge_, other->populationknowledge_);
    std::swap(plannedwork_, other->plannedwork_);
    std::swap(plannedworklist_, other->plannedworklist_);
    std::swap(dotationtype_, other->dotationtype_);
    std::swap(equipmenttype_, other->equipmenttype_);
    std::swap(tirindirect_, other->tirindirect_);
    std::swap(datetime_, other->datetime_);
    std::swap(logmaintenancepriorities_, other->logmaintenancepriorities_);
    std::swap(logmedicalpriorities_, other->logmedicalpriorities_);
    std::swap(acharstr_, other->acharstr_);
    std::swap(missionobjective_, other->missionobjective_);
    std::swap(missionobjectivelist_, other->missionobjectivelist_);
    std::swap(line_, other->line_);
    std::swap(limasorder_, other->limasorder_);
    std::swap(intelligencelist_, other->intelligencelist_);
    std::swap(urbanblock_, other->urbanblock_);
    std::swap(army_, other->army_);
    std::swap(formation_, other->formation_);
    std::swap(identifier_, other->identifier_);
    std::swap(quantity_, other->quantity_);
    std::swap(knowledgegroup_, other->knowledgegroup_);
    list_.Swap(&other->list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMissionParameter_Value::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMissionParameter_Value_descriptor_;
  metadata.reflection = MsgMissionParameter_Value_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MsgMissionParameter::kNullValueFieldNumber;
const int MsgMissionParameter::kValueFieldNumber;
#endif  // !_MSC_VER

MsgMissionParameter::MsgMissionParameter() {
  SharedCtor();
}

void MsgMissionParameter::InitAsDefaultInstance() {
  value_ = const_cast< ::Common::MsgMissionParameter_Value*>(&::Common::MsgMissionParameter_Value::default_instance());
}

MsgMissionParameter::MsgMissionParameter(const MsgMissionParameter& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMissionParameter::SharedCtor() {
  _cached_size_ = 0;
  null_value_ = false;
  value_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMissionParameter::~MsgMissionParameter() {
  SharedDtor();
}

void MsgMissionParameter::SharedDtor() {
  if (this != default_instance_) {
    delete value_;
  }
}

const ::google::protobuf::Descriptor* MsgMissionParameter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMissionParameter_descriptor_;
}

const MsgMissionParameter& MsgMissionParameter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgMissionParameter* MsgMissionParameter::default_instance_ = NULL;

MsgMissionParameter* MsgMissionParameter::New() const {
  return new MsgMissionParameter;
}

void MsgMissionParameter::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    null_value_ = false;
    if (_has_bit(1)) {
      if (value_ != NULL) value_->::Common::MsgMissionParameter_Value::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMissionParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool null_value = 1 [default = false];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &null_value_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }
      
      // optional .Common.MsgMissionParameter.Value value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_value:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_value()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMissionParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMissionParameter::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional bool null_value = 1 [default = false];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->null_value(), output);
  }
  
  // optional .Common.MsgMissionParameter.Value value = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMissionParameter::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bool null_value = 1 [default = false];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->null_value(), target);
  }
  
  // optional .Common.MsgMissionParameter.Value value = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMissionParameter::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool null_value = 1 [default = false];
    if (has_null_value()) {
      total_size += 1 + 1;
    }
    
    // optional .Common.MsgMissionParameter.Value value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->value());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMissionParameter::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMissionParameter* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMissionParameter*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMissionParameter::MergeFrom(const MsgMissionParameter& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_null_value(from.null_value());
    }
    if (from._has_bit(1)) {
      mutable_value()->::Common::MsgMissionParameter_Value::MergeFrom(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMissionParameter::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMissionParameter::CopyFrom(const MsgMissionParameter& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMissionParameter::IsInitialized() const {
  
  if (has_value()) {
    if (!this->value().IsInitialized()) return false;
  }
  return true;
}

void MsgMissionParameter::Swap(MsgMissionParameter* other) {
  if (other != this) {
    std::swap(null_value_, other->null_value_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMissionParameter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMissionParameter_descriptor_;
  metadata.reflection = MsgMissionParameter_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMissionParameters::kElemFieldNumber;
#endif  // !_MSC_VER

MsgMissionParameters::MsgMissionParameters() {
  SharedCtor();
}

void MsgMissionParameters::InitAsDefaultInstance() {
}

MsgMissionParameters::MsgMissionParameters(const MsgMissionParameters& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMissionParameters::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMissionParameters::~MsgMissionParameters() {
  SharedDtor();
}

void MsgMissionParameters::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgMissionParameters::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMissionParameters_descriptor_;
}

const MsgMissionParameters& MsgMissionParameters::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgMissionParameters* MsgMissionParameters::default_instance_ = NULL;

MsgMissionParameters* MsgMissionParameters::New() const {
  return new MsgMissionParameters;
}

void MsgMissionParameters::Clear() {
  elem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMissionParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Common.MsgMissionParameter elem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_elem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_elem()));
        if (input->ExpectTag(10)) goto parse_elem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMissionParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMissionParameters::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .Common.MsgMissionParameter elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->elem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMissionParameters::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Common.MsgMissionParameter elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->elem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMissionParameters::ByteSize() const {
  int total_size = 0;
  
  // repeated .Common.MsgMissionParameter elem = 1;
  total_size += 1 * this->elem_size();
  for (int i = 0; i < this->elem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elem(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMissionParameters::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMissionParameters* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMissionParameters*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMissionParameters::MergeFrom(const MsgMissionParameters& from) {
  GOOGLE_CHECK_NE(&from, this);
  elem_.MergeFrom(from.elem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMissionParameters::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMissionParameters::CopyFrom(const MsgMissionParameters& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMissionParameters::IsInitialized() const {
  
  for (int i = 0; i < elem_size(); i++) {
    if (!this->elem(i).IsInitialized()) return false;
  }
  return true;
}

void MsgMissionParameters::Swap(MsgMissionParameters* other) {
  if (other != this) {
    elem_.Swap(&other->elem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMissionParameters::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMissionParameters_descriptor_;
  metadata.reflection = MsgMissionParameters_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgShape::_default_category_;
const ::std::string MsgShape::_default_color_;
const ::std::string MsgShape::_default_template__;
#ifndef _MSC_VER
const int MsgShape::kCategoryFieldNumber;
const int MsgShape::kColorFieldNumber;
const int MsgShape::kTemplateFieldNumber;
const int MsgShape::kPointsFieldNumber;
#endif  // !_MSC_VER

MsgShape::MsgShape() {
  SharedCtor();
}

void MsgShape::InitAsDefaultInstance() {
  points_ = const_cast< ::Common::MsgCoordLatLongList*>(&::Common::MsgCoordLatLongList::default_instance());
}

MsgShape::MsgShape(const MsgShape& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgShape::SharedCtor() {
  _cached_size_ = 0;
  category_ = const_cast< ::std::string*>(&_default_category_);
  color_ = const_cast< ::std::string*>(&_default_color_);
  template__ = const_cast< ::std::string*>(&_default_template__);
  points_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgShape::~MsgShape() {
  SharedDtor();
}

void MsgShape::SharedDtor() {
  if (category_ != &_default_category_) {
    delete category_;
  }
  if (color_ != &_default_color_) {
    delete color_;
  }
  if (template__ != &_default_template__) {
    delete template__;
  }
  if (this != default_instance_) {
    delete points_;
  }
}

const ::google::protobuf::Descriptor* MsgShape::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgShape_descriptor_;
}

const MsgShape& MsgShape::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgShape* MsgShape::default_instance_ = NULL;

MsgShape* MsgShape::New() const {
  return new MsgShape;
}

void MsgShape::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (category_ != &_default_category_) {
        category_->clear();
      }
    }
    if (_has_bit(1)) {
      if (color_ != &_default_color_) {
        color_->clear();
      }
    }
    if (_has_bit(2)) {
      if (template__ != &_default_template__) {
        template__->clear();
      }
    }
    if (_has_bit(3)) {
      if (points_ != NULL) points_->::Common::MsgCoordLatLongList::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgShape::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string category = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_category()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->category().data(), this->category().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(18)) goto parse_color;
        break;
      }
      
      // required string color = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_color:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_color()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->color().data(), this->color().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(26)) goto parse_template_;
        break;
      }
      
      // required string template_ = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_template_:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_template_()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->template_().data(), this->template_().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(34)) goto parse_points;
        break;
      }
      
      // required .Common.MsgCoordLatLongList points = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_points:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_points()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgShape::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgShape::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required string category = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->category().data(), this->category().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->category(), output);
  }
  
  // required string color = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->color().data(), this->color().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->color(), output);
  }
  
  // required string template_ = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->template_().data(), this->template_().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->template_(), output);
  }
  
  // required .Common.MsgCoordLatLongList points = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      4, this->points(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgShape::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string category = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->category().data(), this->category().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->category(), target);
  }
  
  // required string color = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->color().data(), this->color().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->color(), target);
  }
  
  // required string template_ = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->template_().data(), this->template_().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->template_(), target);
  }
  
  // required .Common.MsgCoordLatLongList points = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->points(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgShape::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string category = 1;
    if (has_category()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->category());
    }
    
    // required string color = 2;
    if (has_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->color());
    }
    
    // required string template_ = 3;
    if (has_template_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->template_());
    }
    
    // required .Common.MsgCoordLatLongList points = 4;
    if (has_points()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->points());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgShape::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgShape* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgShape*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgShape::MergeFrom(const MsgShape& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_category(from.category());
    }
    if (from._has_bit(1)) {
      set_color(from.color());
    }
    if (from._has_bit(2)) {
      set_template_(from.template_());
    }
    if (from._has_bit(3)) {
      mutable_points()->::Common::MsgCoordLatLongList::MergeFrom(from.points());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgShape::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgShape::CopyFrom(const MsgShape& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgShape::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  
  if (has_points()) {
    if (!this->points().IsInitialized()) return false;
  }
  return true;
}

void MsgShape::Swap(MsgShape* other) {
  if (other != this) {
    std::swap(category_, other->category_);
    std::swap(color_, other->color_);
    std::swap(template__, other->template__);
    std::swap(points_, other->points_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgShape::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgShape_descriptor_;
  metadata.reflection = MsgShape_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgChatTarget::_default_profile_;
#ifndef _MSC_VER
const int MsgChatTarget::kProfileFieldNumber;
#endif  // !_MSC_VER

MsgChatTarget::MsgChatTarget() {
  SharedCtor();
}

void MsgChatTarget::InitAsDefaultInstance() {
}

MsgChatTarget::MsgChatTarget(const MsgChatTarget& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgChatTarget::SharedCtor() {
  _cached_size_ = 0;
  profile_ = const_cast< ::std::string*>(&_default_profile_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgChatTarget::~MsgChatTarget() {
  SharedDtor();
}

void MsgChatTarget::SharedDtor() {
  if (profile_ != &_default_profile_) {
    delete profile_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgChatTarget::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgChatTarget_descriptor_;
}

const MsgChatTarget& MsgChatTarget::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgChatTarget* MsgChatTarget::default_instance_ = NULL;

MsgChatTarget* MsgChatTarget::New() const {
  return new MsgChatTarget;
}

void MsgChatTarget::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (profile_ != &_default_profile_) {
        profile_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgChatTarget::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string profile = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_profile()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->profile().data(), this->profile().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgChatTarget::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgChatTarget::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required string profile = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->profile().data(), this->profile().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->profile(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgChatTarget::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string profile = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->profile().data(), this->profile().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->profile(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgChatTarget::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string profile = 1;
    if (has_profile()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->profile());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgChatTarget::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgChatTarget* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgChatTarget*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgChatTarget::MergeFrom(const MsgChatTarget& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_profile(from.profile());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgChatTarget::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgChatTarget::CopyFrom(const MsgChatTarget& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgChatTarget::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgChatTarget::Swap(MsgChatTarget* other) {
  if (other != this) {
    std::swap(profile_, other->profile_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgChatTarget::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgChatTarget_descriptor_;
  metadata.reflection = MsgChatTarget_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgTextMessage::_default_message_;
#ifndef _MSC_VER
const int MsgTextMessage::kSourceFieldNumber;
const int MsgTextMessage::kTargetFieldNumber;
const int MsgTextMessage::kMessageFieldNumber;
#endif  // !_MSC_VER

MsgTextMessage::MsgTextMessage() {
  SharedCtor();
}

void MsgTextMessage::InitAsDefaultInstance() {
  source_ = const_cast< ::Common::MsgChatTarget*>(&::Common::MsgChatTarget::default_instance());
  target_ = const_cast< ::Common::MsgChatTarget*>(&::Common::MsgChatTarget::default_instance());
}

MsgTextMessage::MsgTextMessage(const MsgTextMessage& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgTextMessage::SharedCtor() {
  _cached_size_ = 0;
  source_ = NULL;
  target_ = NULL;
  message_ = const_cast< ::std::string*>(&_default_message_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgTextMessage::~MsgTextMessage() {
  SharedDtor();
}

void MsgTextMessage::SharedDtor() {
  if (message_ != &_default_message_) {
    delete message_;
  }
  if (this != default_instance_) {
    delete source_;
    delete target_;
  }
}

const ::google::protobuf::Descriptor* MsgTextMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgTextMessage_descriptor_;
}

const MsgTextMessage& MsgTextMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgTextMessage* MsgTextMessage::default_instance_ = NULL;

MsgTextMessage* MsgTextMessage::New() const {
  return new MsgTextMessage;
}

void MsgTextMessage::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (source_ != NULL) source_->::Common::MsgChatTarget::Clear();
    }
    if (_has_bit(1)) {
      if (target_ != NULL) target_->::Common::MsgChatTarget::Clear();
    }
    if (_has_bit(2)) {
      if (message_ != &_default_message_) {
        message_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgTextMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MsgChatTarget source = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_source()));
        if (input->ExpectTag(18)) goto parse_target;
        break;
      }
      
      // required .Common.MsgChatTarget target = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_target:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_target()));
        if (input->ExpectTag(26)) goto parse_message;
        break;
      }
      
      // required string message = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_message:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_message()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->message().data(), this->message().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgTextMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgTextMessage::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MsgChatTarget source = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->source(), output);
  }
  
  // required .Common.MsgChatTarget target = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->target(), output);
  }
  
  // required string message = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->message(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgTextMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MsgChatTarget source = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->source(), target);
  }
  
  // required .Common.MsgChatTarget target = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->target(), target);
  }
  
  // required string message = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgTextMessage::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MsgChatTarget source = 1;
    if (has_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->source());
    }
    
    // required .Common.MsgChatTarget target = 2;
    if (has_target()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->target());
    }
    
    // required string message = 3;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgTextMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgTextMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgTextMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgTextMessage::MergeFrom(const MsgTextMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_source()->::Common::MsgChatTarget::MergeFrom(from.source());
    }
    if (from._has_bit(1)) {
      mutable_target()->::Common::MsgChatTarget::MergeFrom(from.target());
    }
    if (from._has_bit(2)) {
      set_message(from.message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgTextMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgTextMessage::CopyFrom(const MsgTextMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgTextMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  if (has_source()) {
    if (!this->source().IsInitialized()) return false;
  }
  if (has_target()) {
    if (!this->target().IsInitialized()) return false;
  }
  return true;
}

void MsgTextMessage::Swap(MsgTextMessage* other) {
  if (other != this) {
    std::swap(source_, other->source_);
    std::swap(target_, other->target_);
    std::swap(message_, other->message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgTextMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgTextMessage_descriptor_;
  metadata.reflection = MsgTextMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgTacticalLine_Diffusion::kAutomatFieldNumber;
const int MsgTacticalLine_Diffusion::kFormationFieldNumber;
#endif  // !_MSC_VER

MsgTacticalLine_Diffusion::MsgTacticalLine_Diffusion() {
  SharedCtor();
}

void MsgTacticalLine_Diffusion::InitAsDefaultInstance() {
}

MsgTacticalLine_Diffusion::MsgTacticalLine_Diffusion(const MsgTacticalLine_Diffusion& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgTacticalLine_Diffusion::SharedCtor() {
  _cached_size_ = 0;
  automat_ = 0u;
  formation_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgTacticalLine_Diffusion::~MsgTacticalLine_Diffusion() {
  SharedDtor();
}

void MsgTacticalLine_Diffusion::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgTacticalLine_Diffusion::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgTacticalLine_Diffusion_descriptor_;
}

const MsgTacticalLine_Diffusion& MsgTacticalLine_Diffusion::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgTacticalLine_Diffusion* MsgTacticalLine_Diffusion::default_instance_ = NULL;

MsgTacticalLine_Diffusion* MsgTacticalLine_Diffusion::New() const {
  return new MsgTacticalLine_Diffusion;
}

void MsgTacticalLine_Diffusion::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    automat_ = 0u;
    formation_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgTacticalLine_Diffusion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 automat = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &automat_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_formation;
        break;
      }
      
      // optional uint32 formation = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_formation:
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &formation_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgTacticalLine_Diffusion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgTacticalLine_Diffusion::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 automat = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->automat(), output);
  }
  
  // optional uint32 formation = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->formation(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgTacticalLine_Diffusion::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 automat = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->automat(), target);
  }
  
  // optional uint32 formation = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->formation(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgTacticalLine_Diffusion::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 automat = 1;
    if (has_automat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->automat());
    }
    
    // optional uint32 formation = 2;
    if (has_formation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->formation());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgTacticalLine_Diffusion::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgTacticalLine_Diffusion* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgTacticalLine_Diffusion*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgTacticalLine_Diffusion::MergeFrom(const MsgTacticalLine_Diffusion& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_automat(from.automat());
    }
    if (from._has_bit(1)) {
      set_formation(from.formation());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgTacticalLine_Diffusion::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgTacticalLine_Diffusion::CopyFrom(const MsgTacticalLine_Diffusion& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgTacticalLine_Diffusion::IsInitialized() const {
  
  return true;
}

void MsgTacticalLine_Diffusion::Swap(MsgTacticalLine_Diffusion* other) {
  if (other != this) {
    std::swap(automat_, other->automat_);
    std::swap(formation_, other->formation_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgTacticalLine_Diffusion::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgTacticalLine_Diffusion_descriptor_;
  metadata.reflection = MsgTacticalLine_Diffusion_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

const ::std::string MsgTacticalLine::_default_name_;
#ifndef _MSC_VER
const int MsgTacticalLine::kNameFieldNumber;
const int MsgTacticalLine::kGeometryFieldNumber;
const int MsgTacticalLine::kDiffusionFieldNumber;
#endif  // !_MSC_VER

MsgTacticalLine::MsgTacticalLine() {
  SharedCtor();
}

void MsgTacticalLine::InitAsDefaultInstance() {
  geometry_ = const_cast< ::Common::MsgLocation*>(&::Common::MsgLocation::default_instance());
  diffusion_ = const_cast< ::Common::MsgTacticalLine_Diffusion*>(&::Common::MsgTacticalLine_Diffusion::default_instance());
}

MsgTacticalLine::MsgTacticalLine(const MsgTacticalLine& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgTacticalLine::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&_default_name_);
  geometry_ = NULL;
  diffusion_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgTacticalLine::~MsgTacticalLine() {
  SharedDtor();
}

void MsgTacticalLine::SharedDtor() {
  if (name_ != &_default_name_) {
    delete name_;
  }
  if (this != default_instance_) {
    delete geometry_;
    delete diffusion_;
  }
}

const ::google::protobuf::Descriptor* MsgTacticalLine::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgTacticalLine_descriptor_;
}

const MsgTacticalLine& MsgTacticalLine::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgTacticalLine* MsgTacticalLine::default_instance_ = NULL;

MsgTacticalLine* MsgTacticalLine::New() const {
  return new MsgTacticalLine;
}

void MsgTacticalLine::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (name_ != &_default_name_) {
        name_->clear();
      }
    }
    if (_has_bit(1)) {
      if (geometry_ != NULL) geometry_->::Common::MsgLocation::Clear();
    }
    if (_has_bit(2)) {
      if (diffusion_ != NULL) diffusion_->::Common::MsgTacticalLine_Diffusion::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgTacticalLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_name()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->name().data(), this->name().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(18)) goto parse_geometry;
        break;
      }
      
      // required .Common.MsgLocation geometry = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_geometry:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_geometry()));
        if (input->ExpectTag(26)) goto parse_diffusion;
        break;
      }
      
      // required .Common.MsgTacticalLine.Diffusion diffusion = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_diffusion:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_diffusion()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgTacticalLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgTacticalLine::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required string name = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }
  
  // required .Common.MsgLocation geometry = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->geometry(), output);
  }
  
  // required .Common.MsgTacticalLine.Diffusion diffusion = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->diffusion(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgTacticalLine::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }
  
  // required .Common.MsgLocation geometry = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->geometry(), target);
  }
  
  // required .Common.MsgTacticalLine.Diffusion diffusion = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->diffusion(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgTacticalLine::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // required .Common.MsgLocation geometry = 2;
    if (has_geometry()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->geometry());
    }
    
    // required .Common.MsgTacticalLine.Diffusion diffusion = 3;
    if (has_diffusion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->diffusion());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgTacticalLine::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgTacticalLine* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgTacticalLine*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgTacticalLine::MergeFrom(const MsgTacticalLine& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_name(from.name());
    }
    if (from._has_bit(1)) {
      mutable_geometry()->::Common::MsgLocation::MergeFrom(from.geometry());
    }
    if (from._has_bit(2)) {
      mutable_diffusion()->::Common::MsgTacticalLine_Diffusion::MergeFrom(from.diffusion());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgTacticalLine::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgTacticalLine::CopyFrom(const MsgTacticalLine& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgTacticalLine::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  if (has_geometry()) {
    if (!this->geometry().IsInitialized()) return false;
  }
  return true;
}

void MsgTacticalLine::Swap(MsgTacticalLine* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(geometry_, other->geometry_);
    std::swap(diffusion_, other->diffusion_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgTacticalLine::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgTacticalLine_descriptor_;
  metadata.reflection = MsgTacticalLine_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgFormation::kOidFieldNumber;
#endif  // !_MSC_VER

MsgFormation::MsgFormation() {
  SharedCtor();
}

void MsgFormation::InitAsDefaultInstance() {
}

MsgFormation::MsgFormation(const MsgFormation& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgFormation::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgFormation::~MsgFormation() {
  SharedDtor();
}

void MsgFormation::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgFormation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgFormation_descriptor_;
}

const MsgFormation& MsgFormation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgFormation* MsgFormation::default_instance_ = NULL;

MsgFormation* MsgFormation::New() const {
  return new MsgFormation;
}

void MsgFormation::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgFormation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgFormation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgFormation::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->oid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgFormation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->oid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgFormation::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgFormation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgFormation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgFormation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgFormation::MergeFrom(const MsgFormation& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgFormation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgFormation::CopyFrom(const MsgFormation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgFormation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgFormation::Swap(MsgFormation* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgFormation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgFormation_descriptor_;
  metadata.reflection = MsgFormation_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgFormationCreation::_default_nom_;
#ifndef _MSC_VER
const int MsgFormationCreation::kOidFieldNumber;
const int MsgFormationCreation::kOidCampFieldNumber;
const int MsgFormationCreation::kOidFormationParenteFieldNumber;
const int MsgFormationCreation::kNiveauFieldNumber;
const int MsgFormationCreation::kNomFieldNumber;
#endif  // !_MSC_VER

MsgFormationCreation::MsgFormationCreation() {
  SharedCtor();
}

void MsgFormationCreation::InitAsDefaultInstance() {
}

MsgFormationCreation::MsgFormationCreation(const MsgFormationCreation& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgFormationCreation::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0;
  oid_camp_ = 0;
  oid_formation_parente_ = 0;
  niveau_ = 0;
  nom_ = const_cast< ::std::string*>(&_default_nom_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgFormationCreation::~MsgFormationCreation() {
  SharedDtor();
}

void MsgFormationCreation::SharedDtor() {
  if (nom_ != &_default_nom_) {
    delete nom_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgFormationCreation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgFormationCreation_descriptor_;
}

const MsgFormationCreation& MsgFormationCreation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgFormationCreation* MsgFormationCreation::default_instance_ = NULL;

MsgFormationCreation* MsgFormationCreation::New() const {
  return new MsgFormationCreation;
}

void MsgFormationCreation::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0;
    oid_camp_ = 0;
    oid_formation_parente_ = 0;
    niveau_ = 0;
    if (_has_bit(4)) {
      if (nom_ != &_default_nom_) {
        nom_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgFormationCreation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_oid_camp;
        break;
      }
      
      // required int32 oid_camp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_oid_camp:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oid_camp_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_oid_formation_parente;
        break;
      }
      
      // optional int32 oid_formation_parente = 3 [default = 0];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_oid_formation_parente:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oid_formation_parente_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_niveau;
        break;
      }
      
      // required .Common.EnumNatureLevel niveau = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_niveau:
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (Common::EnumNatureLevel_IsValid(value)) {
          set_niveau(static_cast< Common::EnumNatureLevel >(value));
        } else {
          mutable_unknown_fields()->AddVarint(4, value);
        }
        if (input->ExpectTag(42)) goto parse_nom;
        break;
      }
      
      // required string nom = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_nom:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_nom()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->nom().data(), this->nom().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgFormationCreation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgFormationCreation::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->oid(), output);
  }
  
  // required int32 oid_camp = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->oid_camp(), output);
  }
  
  // optional int32 oid_formation_parente = 3 [default = 0];
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->oid_formation_parente(), output);
  }
  
  // required .Common.EnumNatureLevel niveau = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->niveau(), output);
  }
  
  // required string nom = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nom().data(), this->nom().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->nom(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgFormationCreation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->oid(), target);
  }
  
  // required int32 oid_camp = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->oid_camp(), target);
  }
  
  // optional int32 oid_formation_parente = 3 [default = 0];
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->oid_formation_parente(), target);
  }
  
  // required .Common.EnumNatureLevel niveau = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->niveau(), target);
  }
  
  // required string nom = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nom().data(), this->nom().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->nom(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgFormationCreation::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oid());
    }
    
    // required int32 oid_camp = 2;
    if (has_oid_camp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oid_camp());
    }
    
    // optional int32 oid_formation_parente = 3 [default = 0];
    if (has_oid_formation_parente()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oid_formation_parente());
    }
    
    // required .Common.EnumNatureLevel niveau = 4;
    if (has_niveau()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->niveau());
    }
    
    // required string nom = 5;
    if (has_nom()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nom());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgFormationCreation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgFormationCreation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgFormationCreation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgFormationCreation::MergeFrom(const MsgFormationCreation& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
    if (from._has_bit(1)) {
      set_oid_camp(from.oid_camp());
    }
    if (from._has_bit(2)) {
      set_oid_formation_parente(from.oid_formation_parente());
    }
    if (from._has_bit(3)) {
      set_niveau(from.niveau());
    }
    if (from._has_bit(4)) {
      set_nom(from.nom());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgFormationCreation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgFormationCreation::CopyFrom(const MsgFormationCreation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgFormationCreation::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001b) != 0x0000001b) return false;
  
  return true;
}

void MsgFormationCreation::Swap(MsgFormationCreation* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(oid_camp_, other->oid_camp_);
    std::swap(oid_formation_parente_, other->oid_formation_parente_);
    std::swap(niveau_, other->niveau_);
    std::swap(nom_, other->nom_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgFormationCreation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgFormationCreation_descriptor_;
  metadata.reflection = MsgFormationCreation_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgUnitOrder::kOidFieldNumber;
const int MsgUnitOrder::kMissionFieldNumber;
const int MsgUnitOrder::kParametresFieldNumber;
#endif  // !_MSC_VER

MsgUnitOrder::MsgUnitOrder() {
  SharedCtor();
}

void MsgUnitOrder::InitAsDefaultInstance() {
  parametres_ = const_cast< ::Common::MsgMissionParameters*>(&::Common::MsgMissionParameters::default_instance());
}

MsgUnitOrder::MsgUnitOrder(const MsgUnitOrder& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgUnitOrder::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0;
  mission_ = 0;
  parametres_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgUnitOrder::~MsgUnitOrder() {
  SharedDtor();
}

void MsgUnitOrder::SharedDtor() {
  if (this != default_instance_) {
    delete parametres_;
  }
}

const ::google::protobuf::Descriptor* MsgUnitOrder::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgUnitOrder_descriptor_;
}

const MsgUnitOrder& MsgUnitOrder::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgUnitOrder* MsgUnitOrder::default_instance_ = NULL;

MsgUnitOrder* MsgUnitOrder::New() const {
  return new MsgUnitOrder;
}

void MsgUnitOrder::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0;
    mission_ = 0;
    if (_has_bit(2)) {
      if (parametres_ != NULL) parametres_->::Common::MsgMissionParameters::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgUnitOrder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_mission;
        break;
      }
      
      // required int32 mission = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_mission:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &mission_));
        _set_bit(1);
        if (input->ExpectTag(26)) goto parse_parametres;
        break;
      }
      
      // optional .Common.MsgMissionParameters parametres = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_parametres:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_parametres()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgUnitOrder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgUnitOrder::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->oid(), output);
  }
  
  // required int32 mission = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mission(), output);
  }
  
  // optional .Common.MsgMissionParameters parametres = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->parametres(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgUnitOrder::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->oid(), target);
  }
  
  // required int32 mission = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mission(), target);
  }
  
  // optional .Common.MsgMissionParameters parametres = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->parametres(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgUnitOrder::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oid());
    }
    
    // required int32 mission = 2;
    if (has_mission()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mission());
    }
    
    // optional .Common.MsgMissionParameters parametres = 3;
    if (has_parametres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parametres());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgUnitOrder::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgUnitOrder* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgUnitOrder*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgUnitOrder::MergeFrom(const MsgUnitOrder& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
    if (from._has_bit(1)) {
      set_mission(from.mission());
    }
    if (from._has_bit(2)) {
      mutable_parametres()->::Common::MsgMissionParameters::MergeFrom(from.parametres());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgUnitOrder::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgUnitOrder::CopyFrom(const MsgUnitOrder& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUnitOrder::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_parametres()) {
    if (!this->parametres().IsInitialized()) return false;
  }
  return true;
}

void MsgUnitOrder::Swap(MsgUnitOrder* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(mission_, other->mission_);
    std::swap(parametres_, other->parametres_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgUnitOrder::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgUnitOrder_descriptor_;
  metadata.reflection = MsgUnitOrder_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgAutomatOrder::kOidFieldNumber;
const int MsgAutomatOrder::kMissionFieldNumber;
const int MsgAutomatOrder::kParametresFieldNumber;
#endif  // !_MSC_VER

MsgAutomatOrder::MsgAutomatOrder() {
  SharedCtor();
}

void MsgAutomatOrder::InitAsDefaultInstance() {
  parametres_ = const_cast< ::Common::MsgMissionParameters*>(&::Common::MsgMissionParameters::default_instance());
}

MsgAutomatOrder::MsgAutomatOrder(const MsgAutomatOrder& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgAutomatOrder::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0;
  mission_ = 0;
  parametres_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgAutomatOrder::~MsgAutomatOrder() {
  SharedDtor();
}

void MsgAutomatOrder::SharedDtor() {
  if (this != default_instance_) {
    delete parametres_;
  }
}

const ::google::protobuf::Descriptor* MsgAutomatOrder::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgAutomatOrder_descriptor_;
}

const MsgAutomatOrder& MsgAutomatOrder::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgAutomatOrder* MsgAutomatOrder::default_instance_ = NULL;

MsgAutomatOrder* MsgAutomatOrder::New() const {
  return new MsgAutomatOrder;
}

void MsgAutomatOrder::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0;
    mission_ = 0;
    if (_has_bit(2)) {
      if (parametres_ != NULL) parametres_->::Common::MsgMissionParameters::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgAutomatOrder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_mission;
        break;
      }
      
      // required int32 mission = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_mission:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &mission_));
        _set_bit(1);
        if (input->ExpectTag(26)) goto parse_parametres;
        break;
      }
      
      // optional .Common.MsgMissionParameters parametres = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_parametres:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_parametres()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgAutomatOrder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgAutomatOrder::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->oid(), output);
  }
  
  // required int32 mission = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mission(), output);
  }
  
  // optional .Common.MsgMissionParameters parametres = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->parametres(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgAutomatOrder::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->oid(), target);
  }
  
  // required int32 mission = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mission(), target);
  }
  
  // optional .Common.MsgMissionParameters parametres = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->parametres(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgAutomatOrder::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oid());
    }
    
    // required int32 mission = 2;
    if (has_mission()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mission());
    }
    
    // optional .Common.MsgMissionParameters parametres = 3;
    if (has_parametres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parametres());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgAutomatOrder::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgAutomatOrder* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgAutomatOrder*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgAutomatOrder::MergeFrom(const MsgAutomatOrder& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
    if (from._has_bit(1)) {
      set_mission(from.mission());
    }
    if (from._has_bit(2)) {
      mutable_parametres()->::Common::MsgMissionParameters::MergeFrom(from.parametres());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgAutomatOrder::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgAutomatOrder::CopyFrom(const MsgAutomatOrder& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgAutomatOrder::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_parametres()) {
    if (!this->parametres().IsInitialized()) return false;
  }
  return true;
}

void MsgAutomatOrder::Swap(MsgAutomatOrder* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(mission_, other->mission_);
    std::swap(parametres_, other->parametres_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgAutomatOrder::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgAutomatOrder_descriptor_;
  metadata.reflection = MsgAutomatOrder_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgPopulationOrder::kOidFieldNumber;
const int MsgPopulationOrder::kMissionFieldNumber;
const int MsgPopulationOrder::kParametresFieldNumber;
#endif  // !_MSC_VER

MsgPopulationOrder::MsgPopulationOrder() {
  SharedCtor();
}

void MsgPopulationOrder::InitAsDefaultInstance() {
  parametres_ = const_cast< ::Common::MsgMissionParameters*>(&::Common::MsgMissionParameters::default_instance());
}

MsgPopulationOrder::MsgPopulationOrder(const MsgPopulationOrder& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgPopulationOrder::SharedCtor() {
  _cached_size_ = 0;
  oid_ = 0;
  mission_ = 0;
  parametres_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgPopulationOrder::~MsgPopulationOrder() {
  SharedDtor();
}

void MsgPopulationOrder::SharedDtor() {
  if (this != default_instance_) {
    delete parametres_;
  }
}

const ::google::protobuf::Descriptor* MsgPopulationOrder::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgPopulationOrder_descriptor_;
}

const MsgPopulationOrder& MsgPopulationOrder::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgPopulationOrder* MsgPopulationOrder::default_instance_ = NULL;

MsgPopulationOrder* MsgPopulationOrder::New() const {
  return new MsgPopulationOrder;
}

void MsgPopulationOrder::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oid_ = 0;
    mission_ = 0;
    if (_has_bit(2)) {
      if (parametres_ != NULL) parametres_->::Common::MsgMissionParameters::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgPopulationOrder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 oid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_mission;
        break;
      }
      
      // required int32 mission = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_mission:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &mission_));
        _set_bit(1);
        if (input->ExpectTag(26)) goto parse_parametres;
        break;
      }
      
      // optional .Common.MsgMissionParameters parametres = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_parametres:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_parametres()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgPopulationOrder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgPopulationOrder::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 oid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->oid(), output);
  }
  
  // required int32 mission = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mission(), output);
  }
  
  // optional .Common.MsgMissionParameters parametres = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->parametres(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgPopulationOrder::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 oid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->oid(), target);
  }
  
  // required int32 mission = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mission(), target);
  }
  
  // optional .Common.MsgMissionParameters parametres = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->parametres(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgPopulationOrder::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 oid = 1;
    if (has_oid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oid());
    }
    
    // required int32 mission = 2;
    if (has_mission()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mission());
    }
    
    // optional .Common.MsgMissionParameters parametres = 3;
    if (has_parametres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parametres());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgPopulationOrder::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgPopulationOrder* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgPopulationOrder*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgPopulationOrder::MergeFrom(const MsgPopulationOrder& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oid(from.oid());
    }
    if (from._has_bit(1)) {
      set_mission(from.mission());
    }
    if (from._has_bit(2)) {
      mutable_parametres()->::Common::MsgMissionParameters::MergeFrom(from.parametres());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgPopulationOrder::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgPopulationOrder::CopyFrom(const MsgPopulationOrder& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgPopulationOrder::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_parametres()) {
    if (!this->parametres().IsInitialized()) return false;
  }
  return true;
}

void MsgPopulationOrder::Swap(MsgPopulationOrder* other) {
  if (other != this) {
    std::swap(oid_, other->oid_);
    std::swap(mission_, other->mission_);
    std::swap(parametres_, other->parametres_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgPopulationOrder::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgPopulationOrder_descriptor_;
  metadata.reflection = MsgPopulationOrder_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjectAttributeConstruction::kDotationTypeFieldNumber;
const int MsgObjectAttributeConstruction::kDotationNbrFieldNumber;
const int MsgObjectAttributeConstruction::kDensityFieldNumber;
const int MsgObjectAttributeConstruction::kPercentageFieldNumber;
#endif  // !_MSC_VER

MsgObjectAttributeConstruction::MsgObjectAttributeConstruction() {
  SharedCtor();
}

void MsgObjectAttributeConstruction::InitAsDefaultInstance() {
}

MsgObjectAttributeConstruction::MsgObjectAttributeConstruction(const MsgObjectAttributeConstruction& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgObjectAttributeConstruction::SharedCtor() {
  _cached_size_ = 0;
  dotation_type_ = 0;
  dotation_nbr_ = 0;
  density_ = 0;
  percentage_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjectAttributeConstruction::~MsgObjectAttributeConstruction() {
  SharedDtor();
}

void MsgObjectAttributeConstruction::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgObjectAttributeConstruction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjectAttributeConstruction_descriptor_;
}

const MsgObjectAttributeConstruction& MsgObjectAttributeConstruction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgObjectAttributeConstruction* MsgObjectAttributeConstruction::default_instance_ = NULL;

MsgObjectAttributeConstruction* MsgObjectAttributeConstruction::New() const {
  return new MsgObjectAttributeConstruction;
}

void MsgObjectAttributeConstruction::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    dotation_type_ = 0;
    dotation_nbr_ = 0;
    density_ = 0;
    percentage_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgObjectAttributeConstruction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 dotation_type = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &dotation_type_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_dotation_nbr;
        break;
      }
      
      // optional int32 dotation_nbr = 2 [default = 0];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_dotation_nbr:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &dotation_nbr_));
        _set_bit(1);
        if (input->ExpectTag(29)) goto parse_density;
        break;
      }
      
      // optional float density = 3 [default = 0];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
          goto handle_uninterpreted;
        }
       parse_density:
        DO_(::google::protobuf::internal::WireFormatLite::ReadFloat(
              input, &density_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_percentage;
        break;
      }
      
      // optional int32 percentage = 4 [default = 0];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_percentage:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &percentage_));
        _set_bit(3);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgObjectAttributeConstruction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgObjectAttributeConstruction::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 dotation_type = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dotation_type(), output);
  }
  
  // optional int32 dotation_nbr = 2 [default = 0];
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->dotation_nbr(), output);
  }
  
  // optional float density = 3 [default = 0];
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->density(), output);
  }
  
  // optional int32 percentage = 4 [default = 0];
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->percentage(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgObjectAttributeConstruction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 dotation_type = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dotation_type(), target);
  }
  
  // optional int32 dotation_nbr = 2 [default = 0];
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->dotation_nbr(), target);
  }
  
  // optional float density = 3 [default = 0];
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->density(), target);
  }
  
  // optional int32 percentage = 4 [default = 0];
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->percentage(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgObjectAttributeConstruction::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 dotation_type = 1 [default = 0];
    if (has_dotation_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dotation_type());
    }
    
    // optional int32 dotation_nbr = 2 [default = 0];
    if (has_dotation_nbr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dotation_nbr());
    }
    
    // optional float density = 3 [default = 0];
    if (has_density()) {
      total_size += 1 + 4;
    }
    
    // optional int32 percentage = 4 [default = 0];
    if (has_percentage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->percentage());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgObjectAttributeConstruction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgObjectAttributeConstruction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgObjectAttributeConstruction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgObjectAttributeConstruction::MergeFrom(const MsgObjectAttributeConstruction& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_dotation_type(from.dotation_type());
    }
    if (from._has_bit(1)) {
      set_dotation_nbr(from.dotation_nbr());
    }
    if (from._has_bit(2)) {
      set_density(from.density());
    }
    if (from._has_bit(3)) {
      set_percentage(from.percentage());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgObjectAttributeConstruction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgObjectAttributeConstruction::CopyFrom(const MsgObjectAttributeConstruction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjectAttributeConstruction::IsInitialized() const {
  
  return true;
}

void MsgObjectAttributeConstruction::Swap(MsgObjectAttributeConstruction* other) {
  if (other != this) {
    std::swap(dotation_type_, other->dotation_type_);
    std::swap(dotation_nbr_, other->dotation_nbr_);
    std::swap(density_, other->density_);
    std::swap(percentage_, other->percentage_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgObjectAttributeConstruction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgObjectAttributeConstruction_descriptor_;
  metadata.reflection = MsgObjectAttributeConstruction_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjectAttributeMine::kDotationTypeFieldNumber;
const int MsgObjectAttributeMine::kDotationNbrFieldNumber;
const int MsgObjectAttributeMine::kDensityFieldNumber;
const int MsgObjectAttributeMine::kPercentageFieldNumber;
#endif  // !_MSC_VER

MsgObjectAttributeMine::MsgObjectAttributeMine() {
  SharedCtor();
}

void MsgObjectAttributeMine::InitAsDefaultInstance() {
}

MsgObjectAttributeMine::MsgObjectAttributeMine(const MsgObjectAttributeMine& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgObjectAttributeMine::SharedCtor() {
  _cached_size_ = 0;
  dotation_type_ = 0;
  dotation_nbr_ = 0;
  density_ = 0;
  percentage_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjectAttributeMine::~MsgObjectAttributeMine() {
  SharedDtor();
}

void MsgObjectAttributeMine::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgObjectAttributeMine::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjectAttributeMine_descriptor_;
}

const MsgObjectAttributeMine& MsgObjectAttributeMine::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgObjectAttributeMine* MsgObjectAttributeMine::default_instance_ = NULL;

MsgObjectAttributeMine* MsgObjectAttributeMine::New() const {
  return new MsgObjectAttributeMine;
}

void MsgObjectAttributeMine::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    dotation_type_ = 0;
    dotation_nbr_ = 0;
    density_ = 0;
    percentage_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgObjectAttributeMine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 dotation_type = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &dotation_type_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_dotation_nbr;
        break;
      }
      
      // optional int32 dotation_nbr = 2 [default = 0];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_dotation_nbr:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &dotation_nbr_));
        _set_bit(1);
        if (input->ExpectTag(29)) goto parse_density;
        break;
      }
      
      // optional float density = 3 [default = 0];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
          goto handle_uninterpreted;
        }
       parse_density:
        DO_(::google::protobuf::internal::WireFormatLite::ReadFloat(
              input, &density_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_percentage;
        break;
      }
      
      // optional int32 percentage = 4 [default = 0];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_percentage:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &percentage_));
        _set_bit(3);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgObjectAttributeMine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgObjectAttributeMine::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 dotation_type = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dotation_type(), output);
  }
  
  // optional int32 dotation_nbr = 2 [default = 0];
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->dotation_nbr(), output);
  }
  
  // optional float density = 3 [default = 0];
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->density(), output);
  }
  
  // optional int32 percentage = 4 [default = 0];
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->percentage(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgObjectAttributeMine::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 dotation_type = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dotation_type(), target);
  }
  
  // optional int32 dotation_nbr = 2 [default = 0];
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->dotation_nbr(), target);
  }
  
  // optional float density = 3 [default = 0];
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->density(), target);
  }
  
  // optional int32 percentage = 4 [default = 0];
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->percentage(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgObjectAttributeMine::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 dotation_type = 1 [default = 0];
    if (has_dotation_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dotation_type());
    }
    
    // optional int32 dotation_nbr = 2 [default = 0];
    if (has_dotation_nbr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dotation_nbr());
    }
    
    // optional float density = 3 [default = 0];
    if (has_density()) {
      total_size += 1 + 4;
    }
    
    // optional int32 percentage = 4 [default = 0];
    if (has_percentage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->percentage());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgObjectAttributeMine::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgObjectAttributeMine* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgObjectAttributeMine*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgObjectAttributeMine::MergeFrom(const MsgObjectAttributeMine& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_dotation_type(from.dotation_type());
    }
    if (from._has_bit(1)) {
      set_dotation_nbr(from.dotation_nbr());
    }
    if (from._has_bit(2)) {
      set_density(from.density());
    }
    if (from._has_bit(3)) {
      set_percentage(from.percentage());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgObjectAttributeMine::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgObjectAttributeMine::CopyFrom(const MsgObjectAttributeMine& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjectAttributeMine::IsInitialized() const {
  
  return true;
}

void MsgObjectAttributeMine::Swap(MsgObjectAttributeMine* other) {
  if (other != this) {
    std::swap(dotation_type_, other->dotation_type_);
    std::swap(dotation_nbr_, other->dotation_nbr_);
    std::swap(density_, other->density_);
    std::swap(percentage_, other->percentage_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgObjectAttributeMine::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgObjectAttributeMine_descriptor_;
  metadata.reflection = MsgObjectAttributeMine_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjectAttributeLogistic::kTc2FieldNumber;
#endif  // !_MSC_VER

MsgObjectAttributeLogistic::MsgObjectAttributeLogistic() {
  SharedCtor();
}

void MsgObjectAttributeLogistic::InitAsDefaultInstance() {
}

MsgObjectAttributeLogistic::MsgObjectAttributeLogistic(const MsgObjectAttributeLogistic& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgObjectAttributeLogistic::SharedCtor() {
  _cached_size_ = 0;
  tc2_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjectAttributeLogistic::~MsgObjectAttributeLogistic() {
  SharedDtor();
}

void MsgObjectAttributeLogistic::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgObjectAttributeLogistic::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjectAttributeLogistic_descriptor_;
}

const MsgObjectAttributeLogistic& MsgObjectAttributeLogistic::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgObjectAttributeLogistic* MsgObjectAttributeLogistic::default_instance_ = NULL;

MsgObjectAttributeLogistic* MsgObjectAttributeLogistic::New() const {
  return new MsgObjectAttributeLogistic;
}

void MsgObjectAttributeLogistic::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    tc2_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgObjectAttributeLogistic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 tc2 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &tc2_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgObjectAttributeLogistic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgObjectAttributeLogistic::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 tc2 = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tc2(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgObjectAttributeLogistic::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 tc2 = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tc2(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgObjectAttributeLogistic::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 tc2 = 1;
    if (has_tc2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tc2());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgObjectAttributeLogistic::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgObjectAttributeLogistic* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgObjectAttributeLogistic*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgObjectAttributeLogistic::MergeFrom(const MsgObjectAttributeLogistic& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_tc2(from.tc2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgObjectAttributeLogistic::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgObjectAttributeLogistic::CopyFrom(const MsgObjectAttributeLogistic& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjectAttributeLogistic::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgObjectAttributeLogistic::Swap(MsgObjectAttributeLogistic* other) {
  if (other != this) {
    std::swap(tc2_, other->tc2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgObjectAttributeLogistic::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgObjectAttributeLogistic_descriptor_;
  metadata.reflection = MsgObjectAttributeLogistic_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjectAttributeInteractionHeight::kHeightFieldNumber;
#endif  // !_MSC_VER

MsgObjectAttributeInteractionHeight::MsgObjectAttributeInteractionHeight() {
  SharedCtor();
}

void MsgObjectAttributeInteractionHeight::InitAsDefaultInstance() {
}

MsgObjectAttributeInteractionHeight::MsgObjectAttributeInteractionHeight(const MsgObjectAttributeInteractionHeight& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgObjectAttributeInteractionHeight::SharedCtor() {
  _cached_size_ = 0;
  height_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjectAttributeInteractionHeight::~MsgObjectAttributeInteractionHeight() {
  SharedDtor();
}

void MsgObjectAttributeInteractionHeight::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgObjectAttributeInteractionHeight::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjectAttributeInteractionHeight_descriptor_;
}

const MsgObjectAttributeInteractionHeight& MsgObjectAttributeInteractionHeight::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgObjectAttributeInteractionHeight* MsgObjectAttributeInteractionHeight::default_instance_ = NULL;

MsgObjectAttributeInteractionHeight* MsgObjectAttributeInteractionHeight::New() const {
  return new MsgObjectAttributeInteractionHeight;
}

void MsgObjectAttributeInteractionHeight::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    height_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgObjectAttributeInteractionHeight::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float height = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadFloat(
              input, &height_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgObjectAttributeInteractionHeight::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgObjectAttributeInteractionHeight::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required float height = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->height(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgObjectAttributeInteractionHeight::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required float height = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->height(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgObjectAttributeInteractionHeight::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required float height = 1;
    if (has_height()) {
      total_size += 1 + 4;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgObjectAttributeInteractionHeight::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgObjectAttributeInteractionHeight* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgObjectAttributeInteractionHeight*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgObjectAttributeInteractionHeight::MergeFrom(const MsgObjectAttributeInteractionHeight& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_height(from.height());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgObjectAttributeInteractionHeight::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgObjectAttributeInteractionHeight::CopyFrom(const MsgObjectAttributeInteractionHeight& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjectAttributeInteractionHeight::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgObjectAttributeInteractionHeight::Swap(MsgObjectAttributeInteractionHeight* other) {
  if (other != this) {
    std::swap(height_, other->height_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgObjectAttributeInteractionHeight::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgObjectAttributeInteractionHeight_descriptor_;
  metadata.reflection = MsgObjectAttributeInteractionHeight_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjectAttributeObstacle::kTypeFieldNumber;
const int MsgObjectAttributeObstacle::kActivatedFieldNumber;
#endif  // !_MSC_VER

MsgObjectAttributeObstacle::MsgObjectAttributeObstacle() {
  SharedCtor();
}

void MsgObjectAttributeObstacle::InitAsDefaultInstance() {
}

MsgObjectAttributeObstacle::MsgObjectAttributeObstacle(const MsgObjectAttributeObstacle& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgObjectAttributeObstacle::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  activated_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjectAttributeObstacle::~MsgObjectAttributeObstacle() {
  SharedDtor();
}

void MsgObjectAttributeObstacle::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgObjectAttributeObstacle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjectAttributeObstacle_descriptor_;
}

const MsgObjectAttributeObstacle& MsgObjectAttributeObstacle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgObjectAttributeObstacle* MsgObjectAttributeObstacle::default_instance_ = NULL;

MsgObjectAttributeObstacle* MsgObjectAttributeObstacle::New() const {
  return new MsgObjectAttributeObstacle;
}

void MsgObjectAttributeObstacle::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    activated_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgObjectAttributeObstacle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.ObstacleType.DemolitionTargetType type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (::Common::ObstacleType_DemolitionTargetType_IsValid(value)) {
          set_type(static_cast< ::Common::ObstacleType_DemolitionTargetType >(value));
        } else {
          mutable_unknown_fields()->AddVarint(1, value);
        }
        if (input->ExpectTag(16)) goto parse_activated;
        break;
      }
      
      // optional bool activated = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_activated:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &activated_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgObjectAttributeObstacle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgObjectAttributeObstacle::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.ObstacleType.DemolitionTargetType type = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }
  
  // optional bool activated = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->activated(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgObjectAttributeObstacle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.ObstacleType.DemolitionTargetType type = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }
  
  // optional bool activated = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->activated(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgObjectAttributeObstacle::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.ObstacleType.DemolitionTargetType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }
    
    // optional bool activated = 2;
    if (has_activated()) {
      total_size += 1 + 1;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgObjectAttributeObstacle::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgObjectAttributeObstacle* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgObjectAttributeObstacle*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgObjectAttributeObstacle::MergeFrom(const MsgObjectAttributeObstacle& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_type(from.type());
    }
    if (from._has_bit(1)) {
      set_activated(from.activated());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgObjectAttributeObstacle::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgObjectAttributeObstacle::CopyFrom(const MsgObjectAttributeObstacle& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjectAttributeObstacle::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgObjectAttributeObstacle::Swap(MsgObjectAttributeObstacle* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(activated_, other->activated_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgObjectAttributeObstacle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgObjectAttributeObstacle_descriptor_;
  metadata.reflection = MsgObjectAttributeObstacle_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjectAttributeActivityTime::kValueFieldNumber;
#endif  // !_MSC_VER

MsgObjectAttributeActivityTime::MsgObjectAttributeActivityTime() {
  SharedCtor();
}

void MsgObjectAttributeActivityTime::InitAsDefaultInstance() {
}

MsgObjectAttributeActivityTime::MsgObjectAttributeActivityTime(const MsgObjectAttributeActivityTime& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgObjectAttributeActivityTime::SharedCtor() {
  _cached_size_ = 0;
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjectAttributeActivityTime::~MsgObjectAttributeActivityTime() {
  SharedDtor();
}

void MsgObjectAttributeActivityTime::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgObjectAttributeActivityTime::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjectAttributeActivityTime_descriptor_;
}

const MsgObjectAttributeActivityTime& MsgObjectAttributeActivityTime::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgObjectAttributeActivityTime* MsgObjectAttributeActivityTime::default_instance_ = NULL;

MsgObjectAttributeActivityTime* MsgObjectAttributeActivityTime::New() const {
  return new MsgObjectAttributeActivityTime;
}

void MsgObjectAttributeActivityTime::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgObjectAttributeActivityTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &value_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgObjectAttributeActivityTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgObjectAttributeActivityTime::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 value = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgObjectAttributeActivityTime::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 value = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgObjectAttributeActivityTime::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 value = 1;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgObjectAttributeActivityTime::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgObjectAttributeActivityTime* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgObjectAttributeActivityTime*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgObjectAttributeActivityTime::MergeFrom(const MsgObjectAttributeActivityTime& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgObjectAttributeActivityTime::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgObjectAttributeActivityTime::CopyFrom(const MsgObjectAttributeActivityTime& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjectAttributeActivityTime::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void MsgObjectAttributeActivityTime::Swap(MsgObjectAttributeActivityTime* other) {
  if (other != this) {
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgObjectAttributeActivityTime::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgObjectAttributeActivityTime_descriptor_;
  metadata.reflection = MsgObjectAttributeActivityTime_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjectAttributeBypass::kPercentageFieldNumber;
#endif  // !_MSC_VER

MsgObjectAttributeBypass::MsgObjectAttributeBypass() {
  SharedCtor();
}

void MsgObjectAttributeBypass::InitAsDefaultInstance() {
}

MsgObjectAttributeBypass::MsgObjectAttributeBypass(const MsgObjectAttributeBypass& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgObjectAttributeBypass::SharedCtor() {
  _cached_size_ = 0;
  percentage_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjectAttributeBypass::~MsgObjectAttributeBypass() {
  SharedDtor();
}

void MsgObjectAttributeBypass::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgObjectAttributeBypass::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjectAttributeBypass_descriptor_;
}

const MsgObjectAttributeBypass& MsgObjectAttributeBypass::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgObjectAttributeBypass* MsgObjectAttributeBypass::default_instance_ = NULL;

MsgObjectAttributeBypass* MsgObjectAttributeBypass::New() const {
  return new MsgObjectAttributeBypass;
}

void MsgObjectAttributeBypass::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    percentage_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgObjectAttributeBypass::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 percentage = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &percentage_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgObjectAttributeBypass::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgObjectAttributeBypass::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 percentage = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->percentage(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgObjectAttributeBypass::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 percentage = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->percentage(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgObjectAttributeBypass::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 percentage = 1 [default = 0];
    if (has_percentage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->percentage());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgObjectAttributeBypass::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgObjectAttributeBypass* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgObjectAttributeBypass*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgObjectAttributeBypass::MergeFrom(const MsgObjectAttributeBypass& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_percentage(from.percentage());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgObjectAttributeBypass::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgObjectAttributeBypass::CopyFrom(const MsgObjectAttributeBypass& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjectAttributeBypass::IsInitialized() const {
  
  return true;
}

void MsgObjectAttributeBypass::Swap(MsgObjectAttributeBypass* other) {
  if (other != this) {
    std::swap(percentage_, other->percentage_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgObjectAttributeBypass::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgObjectAttributeBypass_descriptor_;
  metadata.reflection = MsgObjectAttributeBypass_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjectAttributeNBC::kDangerLevelFieldNumber;
const int MsgObjectAttributeNBC::kNbcAgentsFieldNumber;
#endif  // !_MSC_VER

MsgObjectAttributeNBC::MsgObjectAttributeNBC() {
  SharedCtor();
}

void MsgObjectAttributeNBC::InitAsDefaultInstance() {
  nbc_agents_ = const_cast< ::Common::MsgListOID*>(&::Common::MsgListOID::default_instance());
}

MsgObjectAttributeNBC::MsgObjectAttributeNBC(const MsgObjectAttributeNBC& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgObjectAttributeNBC::SharedCtor() {
  _cached_size_ = 0;
  danger_level_ = 0;
  nbc_agents_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjectAttributeNBC::~MsgObjectAttributeNBC() {
  SharedDtor();
}

void MsgObjectAttributeNBC::SharedDtor() {
  if (this != default_instance_) {
    delete nbc_agents_;
  }
}

const ::google::protobuf::Descriptor* MsgObjectAttributeNBC::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjectAttributeNBC_descriptor_;
}

const MsgObjectAttributeNBC& MsgObjectAttributeNBC::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgObjectAttributeNBC* MsgObjectAttributeNBC::default_instance_ = NULL;

MsgObjectAttributeNBC* MsgObjectAttributeNBC::New() const {
  return new MsgObjectAttributeNBC;
}

void MsgObjectAttributeNBC::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    danger_level_ = 0;
    if (_has_bit(1)) {
      if (nbc_agents_ != NULL) nbc_agents_->::Common::MsgListOID::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgObjectAttributeNBC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 danger_level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &danger_level_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_nbc_agents;
        break;
      }
      
      // required .Common.MsgListOID nbc_agents = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_nbc_agents:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_nbc_agents()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgObjectAttributeNBC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgObjectAttributeNBC::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 danger_level = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->danger_level(), output);
  }
  
  // required .Common.MsgListOID nbc_agents = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->nbc_agents(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgObjectAttributeNBC::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 danger_level = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->danger_level(), target);
  }
  
  // required .Common.MsgListOID nbc_agents = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->nbc_agents(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgObjectAttributeNBC::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 danger_level = 1;
    if (has_danger_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->danger_level());
    }
    
    // required .Common.MsgListOID nbc_agents = 2;
    if (has_nbc_agents()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->nbc_agents());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgObjectAttributeNBC::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgObjectAttributeNBC* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgObjectAttributeNBC*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgObjectAttributeNBC::MergeFrom(const MsgObjectAttributeNBC& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_danger_level(from.danger_level());
    }
    if (from._has_bit(1)) {
      mutable_nbc_agents()->::Common::MsgListOID::MergeFrom(from.nbc_agents());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgObjectAttributeNBC::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgObjectAttributeNBC::CopyFrom(const MsgObjectAttributeNBC& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjectAttributeNBC::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void MsgObjectAttributeNBC::Swap(MsgObjectAttributeNBC* other) {
  if (other != this) {
    std::swap(danger_level_, other->danger_level_);
    std::swap(nbc_agents_, other->nbc_agents_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgObjectAttributeNBC::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgObjectAttributeNBC_descriptor_;
  metadata.reflection = MsgObjectAttributeNBC_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StockResource::kDotationTypeFieldNumber;
const int StockResource::kCurrentFieldNumber;
const int StockResource::kMaxFieldNumber;
#endif  // !_MSC_VER

StockResource::StockResource() {
  SharedCtor();
}

void StockResource::InitAsDefaultInstance() {
  dotation_type_ = const_cast< ::Common::MsgDotationType*>(&::Common::MsgDotationType::default_instance());
}

StockResource::StockResource(const StockResource& from) {
  SharedCtor();
  MergeFrom(from);
}

void StockResource::SharedCtor() {
  _cached_size_ = 0;
  dotation_type_ = NULL;
  current_ = 0;
  max_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StockResource::~StockResource() {
  SharedDtor();
}

void StockResource::SharedDtor() {
  if (this != default_instance_) {
    delete dotation_type_;
  }
}

const ::google::protobuf::Descriptor* StockResource::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StockResource_descriptor_;
}

const StockResource& StockResource::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

StockResource* StockResource::default_instance_ = NULL;

StockResource* StockResource::New() const {
  return new StockResource;
}

void StockResource::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (dotation_type_ != NULL) dotation_type_->::Common::MsgDotationType::Clear();
    }
    current_ = 0;
    max_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StockResource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MsgDotationType dotation_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_dotation_type()));
        if (input->ExpectTag(16)) goto parse_current;
        break;
      }
      
      // required int32 current = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_current:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &current_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_max;
        break;
      }
      
      // optional int32 max = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_max:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &max_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StockResource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    StockResource::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MsgDotationType dotation_type = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->dotation_type(), output);
  }
  
  // required int32 current = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->current(), output);
  }
  
  // optional int32 max = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->max(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StockResource::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MsgDotationType dotation_type = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->dotation_type(), target);
  }
  
  // required int32 current = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->current(), target);
  }
  
  // optional int32 max = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->max(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StockResource::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MsgDotationType dotation_type = 1;
    if (has_dotation_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dotation_type());
    }
    
    // required int32 current = 2;
    if (has_current()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->current());
    }
    
    // optional int32 max = 3;
    if (has_max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void StockResource::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StockResource* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StockResource*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StockResource::MergeFrom(const StockResource& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_dotation_type()->::Common::MsgDotationType::MergeFrom(from.dotation_type());
    }
    if (from._has_bit(1)) {
      set_current(from.current());
    }
    if (from._has_bit(2)) {
      set_max(from.max());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StockResource::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StockResource::CopyFrom(const StockResource& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StockResource::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_dotation_type()) {
    if (!this->dotation_type().IsInitialized()) return false;
  }
  return true;
}

void StockResource::Swap(StockResource* other) {
  if (other != this) {
    std::swap(dotation_type_, other->dotation_type_);
    std::swap(current_, other->current_);
    std::swap(max_, other->max_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StockResource::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StockResource_descriptor_;
  metadata.reflection = StockResource_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjectAttributeStock::kResourcesFieldNumber;
#endif  // !_MSC_VER

MsgObjectAttributeStock::MsgObjectAttributeStock() {
  SharedCtor();
}

void MsgObjectAttributeStock::InitAsDefaultInstance() {
}

MsgObjectAttributeStock::MsgObjectAttributeStock(const MsgObjectAttributeStock& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgObjectAttributeStock::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjectAttributeStock::~MsgObjectAttributeStock() {
  SharedDtor();
}

void MsgObjectAttributeStock::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgObjectAttributeStock::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjectAttributeStock_descriptor_;
}

const MsgObjectAttributeStock& MsgObjectAttributeStock::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgObjectAttributeStock* MsgObjectAttributeStock::default_instance_ = NULL;

MsgObjectAttributeStock* MsgObjectAttributeStock::New() const {
  return new MsgObjectAttributeStock;
}

void MsgObjectAttributeStock::Clear() {
  resources_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgObjectAttributeStock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Common.StockResource resources = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_resources:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_resources()));
        if (input->ExpectTag(10)) goto parse_resources;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgObjectAttributeStock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgObjectAttributeStock::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .Common.StockResource resources = 1;
  for (int i = 0; i < this->resources_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->resources(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgObjectAttributeStock::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Common.StockResource resources = 1;
  for (int i = 0; i < this->resources_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->resources(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgObjectAttributeStock::ByteSize() const {
  int total_size = 0;
  
  // repeated .Common.StockResource resources = 1;
  total_size += 1 * this->resources_size();
  for (int i = 0; i < this->resources_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->resources(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgObjectAttributeStock::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgObjectAttributeStock* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgObjectAttributeStock*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgObjectAttributeStock::MergeFrom(const MsgObjectAttributeStock& from) {
  GOOGLE_CHECK_NE(&from, this);
  resources_.MergeFrom(from.resources_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgObjectAttributeStock::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgObjectAttributeStock::CopyFrom(const MsgObjectAttributeStock& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjectAttributeStock::IsInitialized() const {
  
  for (int i = 0; i < resources_size(); i++) {
    if (!this->resources(i).IsInitialized()) return false;
  }
  return true;
}

void MsgObjectAttributeStock::Swap(MsgObjectAttributeStock* other) {
  if (other != this) {
    resources_.Swap(&other->resources_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgObjectAttributeStock::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgObjectAttributeStock_descriptor_;
  metadata.reflection = MsgObjectAttributeStock_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjectAttributeCrossingSite::kWidthFieldNumber;
const int MsgObjectAttributeCrossingSite::kDepthFieldNumber;
const int MsgObjectAttributeCrossingSite::kFlowRateFieldNumber;
const int MsgObjectAttributeCrossingSite::kBanksRequireFittingFieldNumber;
#endif  // !_MSC_VER

MsgObjectAttributeCrossingSite::MsgObjectAttributeCrossingSite() {
  SharedCtor();
}

void MsgObjectAttributeCrossingSite::InitAsDefaultInstance() {
}

MsgObjectAttributeCrossingSite::MsgObjectAttributeCrossingSite(const MsgObjectAttributeCrossingSite& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgObjectAttributeCrossingSite::SharedCtor() {
  _cached_size_ = 0;
  width_ = 0;
  depth_ = 0;
  flow_rate_ = 0;
  banks_require_fitting_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjectAttributeCrossingSite::~MsgObjectAttributeCrossingSite() {
  SharedDtor();
}

void MsgObjectAttributeCrossingSite::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgObjectAttributeCrossingSite::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjectAttributeCrossingSite_descriptor_;
}

const MsgObjectAttributeCrossingSite& MsgObjectAttributeCrossingSite::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgObjectAttributeCrossingSite* MsgObjectAttributeCrossingSite::default_instance_ = NULL;

MsgObjectAttributeCrossingSite* MsgObjectAttributeCrossingSite::New() const {
  return new MsgObjectAttributeCrossingSite;
}

void MsgObjectAttributeCrossingSite::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    width_ = 0;
    depth_ = 0;
    flow_rate_ = 0;
    banks_require_fitting_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgObjectAttributeCrossingSite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 width = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &width_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_depth;
        break;
      }
      
      // required int32 depth = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_depth:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &depth_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_flow_rate;
        break;
      }
      
      // required int32 flow_rate = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_flow_rate:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &flow_rate_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_banks_require_fitting;
        break;
      }
      
      // required bool banks_require_fitting = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_banks_require_fitting:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &banks_require_fitting_));
        _set_bit(3);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgObjectAttributeCrossingSite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgObjectAttributeCrossingSite::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 width = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->width(), output);
  }
  
  // required int32 depth = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->depth(), output);
  }
  
  // required int32 flow_rate = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->flow_rate(), output);
  }
  
  // required bool banks_require_fitting = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->banks_require_fitting(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgObjectAttributeCrossingSite::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 width = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->width(), target);
  }
  
  // required int32 depth = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->depth(), target);
  }
  
  // required int32 flow_rate = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->flow_rate(), target);
  }
  
  // required bool banks_require_fitting = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->banks_require_fitting(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgObjectAttributeCrossingSite::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 width = 1;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->width());
    }
    
    // required int32 depth = 2;
    if (has_depth()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->depth());
    }
    
    // required int32 flow_rate = 3;
    if (has_flow_rate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flow_rate());
    }
    
    // required bool banks_require_fitting = 4;
    if (has_banks_require_fitting()) {
      total_size += 1 + 1;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgObjectAttributeCrossingSite::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgObjectAttributeCrossingSite* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgObjectAttributeCrossingSite*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgObjectAttributeCrossingSite::MergeFrom(const MsgObjectAttributeCrossingSite& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_width(from.width());
    }
    if (from._has_bit(1)) {
      set_depth(from.depth());
    }
    if (from._has_bit(2)) {
      set_flow_rate(from.flow_rate());
    }
    if (from._has_bit(3)) {
      set_banks_require_fitting(from.banks_require_fitting());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgObjectAttributeCrossingSite::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgObjectAttributeCrossingSite::CopyFrom(const MsgObjectAttributeCrossingSite& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjectAttributeCrossingSite::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  
  return true;
}

void MsgObjectAttributeCrossingSite::Swap(MsgObjectAttributeCrossingSite* other) {
  if (other != this) {
    std::swap(width_, other->width_);
    std::swap(depth_, other->depth_);
    std::swap(flow_rate_, other->flow_rate_);
    std::swap(banks_require_fitting_, other->banks_require_fitting_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgObjectAttributeCrossingSite::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgObjectAttributeCrossingSite_descriptor_;
  metadata.reflection = MsgObjectAttributeCrossingSite_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjectAttributeSupplyRoute::kEquippedFieldNumber;
const int MsgObjectAttributeSupplyRoute::kMaxWeightFieldNumber;
const int MsgObjectAttributeSupplyRoute::kWidthFieldNumber;
const int MsgObjectAttributeSupplyRoute::kLengthFieldNumber;
const int MsgObjectAttributeSupplyRoute::kFlowRateFieldNumber;
#endif  // !_MSC_VER

MsgObjectAttributeSupplyRoute::MsgObjectAttributeSupplyRoute() {
  SharedCtor();
}

void MsgObjectAttributeSupplyRoute::InitAsDefaultInstance() {
}

MsgObjectAttributeSupplyRoute::MsgObjectAttributeSupplyRoute(const MsgObjectAttributeSupplyRoute& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgObjectAttributeSupplyRoute::SharedCtor() {
  _cached_size_ = 0;
  equipped_ = false;
  max_weight_ = 0;
  width_ = 0;
  length_ = 0;
  flow_rate_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjectAttributeSupplyRoute::~MsgObjectAttributeSupplyRoute() {
  SharedDtor();
}

void MsgObjectAttributeSupplyRoute::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgObjectAttributeSupplyRoute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjectAttributeSupplyRoute_descriptor_;
}

const MsgObjectAttributeSupplyRoute& MsgObjectAttributeSupplyRoute::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgObjectAttributeSupplyRoute* MsgObjectAttributeSupplyRoute::default_instance_ = NULL;

MsgObjectAttributeSupplyRoute* MsgObjectAttributeSupplyRoute::New() const {
  return new MsgObjectAttributeSupplyRoute;
}

void MsgObjectAttributeSupplyRoute::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    equipped_ = false;
    max_weight_ = 0;
    width_ = 0;
    length_ = 0;
    flow_rate_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgObjectAttributeSupplyRoute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool equipped = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &equipped_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_max_weight;
        break;
      }
      
      // required int32 max_weight = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_max_weight:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &max_weight_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_width;
        break;
      }
      
      // required int32 width = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_width:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &width_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_length;
        break;
      }
      
      // required int32 length = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_length:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &length_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_flow_rate;
        break;
      }
      
      // required int32 flow_rate = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_flow_rate:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &flow_rate_));
        _set_bit(4);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgObjectAttributeSupplyRoute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgObjectAttributeSupplyRoute::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required bool equipped = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->equipped(), output);
  }
  
  // required int32 max_weight = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->max_weight(), output);
  }
  
  // required int32 width = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->width(), output);
  }
  
  // required int32 length = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->length(), output);
  }
  
  // required int32 flow_rate = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->flow_rate(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgObjectAttributeSupplyRoute::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool equipped = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->equipped(), target);
  }
  
  // required int32 max_weight = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->max_weight(), target);
  }
  
  // required int32 width = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->width(), target);
  }
  
  // required int32 length = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->length(), target);
  }
  
  // required int32 flow_rate = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->flow_rate(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgObjectAttributeSupplyRoute::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool equipped = 1;
    if (has_equipped()) {
      total_size += 1 + 1;
    }
    
    // required int32 max_weight = 2;
    if (has_max_weight()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_weight());
    }
    
    // required int32 width = 3;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->width());
    }
    
    // required int32 length = 4;
    if (has_length()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->length());
    }
    
    // required int32 flow_rate = 5;
    if (has_flow_rate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flow_rate());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgObjectAttributeSupplyRoute::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgObjectAttributeSupplyRoute* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgObjectAttributeSupplyRoute*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgObjectAttributeSupplyRoute::MergeFrom(const MsgObjectAttributeSupplyRoute& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_equipped(from.equipped());
    }
    if (from._has_bit(1)) {
      set_max_weight(from.max_weight());
    }
    if (from._has_bit(2)) {
      set_width(from.width());
    }
    if (from._has_bit(3)) {
      set_length(from.length());
    }
    if (from._has_bit(4)) {
      set_flow_rate(from.flow_rate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgObjectAttributeSupplyRoute::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgObjectAttributeSupplyRoute::CopyFrom(const MsgObjectAttributeSupplyRoute& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjectAttributeSupplyRoute::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  
  return true;
}

void MsgObjectAttributeSupplyRoute::Swap(MsgObjectAttributeSupplyRoute* other) {
  if (other != this) {
    std::swap(equipped_, other->equipped_);
    std::swap(max_weight_, other->max_weight_);
    std::swap(width_, other->width_);
    std::swap(length_, other->length_);
    std::swap(flow_rate_, other->flow_rate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgObjectAttributeSupplyRoute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgObjectAttributeSupplyRoute_descriptor_;
  metadata.reflection = MsgObjectAttributeSupplyRoute_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLocatedQuantity::kCoordinateFieldNumber;
const int MsgLocatedQuantity::kQuantityFieldNumber;
#endif  // !_MSC_VER

MsgLocatedQuantity::MsgLocatedQuantity() {
  SharedCtor();
}

void MsgLocatedQuantity::InitAsDefaultInstance() {
  coordinate_ = const_cast< ::Common::MsgCoordLatLong*>(&::Common::MsgCoordLatLong::default_instance());
}

MsgLocatedQuantity::MsgLocatedQuantity(const MsgLocatedQuantity& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLocatedQuantity::SharedCtor() {
  _cached_size_ = 0;
  coordinate_ = NULL;
  quantity_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLocatedQuantity::~MsgLocatedQuantity() {
  SharedDtor();
}

void MsgLocatedQuantity::SharedDtor() {
  if (this != default_instance_) {
    delete coordinate_;
  }
}

const ::google::protobuf::Descriptor* MsgLocatedQuantity::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLocatedQuantity_descriptor_;
}

const MsgLocatedQuantity& MsgLocatedQuantity::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgLocatedQuantity* MsgLocatedQuantity::default_instance_ = NULL;

MsgLocatedQuantity* MsgLocatedQuantity::New() const {
  return new MsgLocatedQuantity;
}

void MsgLocatedQuantity::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (coordinate_ != NULL) coordinate_->::Common::MsgCoordLatLong::Clear();
    }
    quantity_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLocatedQuantity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MsgCoordLatLong coordinate = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_coordinate()));
        if (input->ExpectTag(21)) goto parse_quantity;
        break;
      }
      
      // required float quantity = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
          goto handle_uninterpreted;
        }
       parse_quantity:
        DO_(::google::protobuf::internal::WireFormatLite::ReadFloat(
              input, &quantity_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLocatedQuantity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLocatedQuantity::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MsgCoordLatLong coordinate = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->coordinate(), output);
  }
  
  // required float quantity = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->quantity(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLocatedQuantity::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MsgCoordLatLong coordinate = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->coordinate(), target);
  }
  
  // required float quantity = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->quantity(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLocatedQuantity::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MsgCoordLatLong coordinate = 1;
    if (has_coordinate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->coordinate());
    }
    
    // required float quantity = 2;
    if (has_quantity()) {
      total_size += 1 + 4;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLocatedQuantity::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLocatedQuantity* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLocatedQuantity*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLocatedQuantity::MergeFrom(const MsgLocatedQuantity& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_coordinate()->::Common::MsgCoordLatLong::MergeFrom(from.coordinate());
    }
    if (from._has_bit(1)) {
      set_quantity(from.quantity());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLocatedQuantity::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLocatedQuantity::CopyFrom(const MsgLocatedQuantity& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLocatedQuantity::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_coordinate()) {
    if (!this->coordinate().IsInitialized()) return false;
  }
  return true;
}

void MsgLocatedQuantity::Swap(MsgLocatedQuantity* other) {
  if (other != this) {
    std::swap(coordinate_, other->coordinate_);
    std::swap(quantity_, other->quantity_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLocatedQuantity::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLocatedQuantity_descriptor_;
  metadata.reflection = MsgLocatedQuantity_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLocatedQuantityList::kElemFieldNumber;
#endif  // !_MSC_VER

MsgLocatedQuantityList::MsgLocatedQuantityList() {
  SharedCtor();
}

void MsgLocatedQuantityList::InitAsDefaultInstance() {
}

MsgLocatedQuantityList::MsgLocatedQuantityList(const MsgLocatedQuantityList& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgLocatedQuantityList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLocatedQuantityList::~MsgLocatedQuantityList() {
  SharedDtor();
}

void MsgLocatedQuantityList::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgLocatedQuantityList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLocatedQuantityList_descriptor_;
}

const MsgLocatedQuantityList& MsgLocatedQuantityList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgLocatedQuantityList* MsgLocatedQuantityList::default_instance_ = NULL;

MsgLocatedQuantityList* MsgLocatedQuantityList::New() const {
  return new MsgLocatedQuantityList;
}

void MsgLocatedQuantityList::Clear() {
  elem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLocatedQuantityList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Common.MsgLocatedQuantity elem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_elem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_elem()));
        if (input->ExpectTag(10)) goto parse_elem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLocatedQuantityList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgLocatedQuantityList::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .Common.MsgLocatedQuantity elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->elem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLocatedQuantityList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Common.MsgLocatedQuantity elem = 1;
  for (int i = 0; i < this->elem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->elem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLocatedQuantityList::ByteSize() const {
  int total_size = 0;
  
  // repeated .Common.MsgLocatedQuantity elem = 1;
  total_size += 1 * this->elem_size();
  for (int i = 0; i < this->elem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elem(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgLocatedQuantityList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLocatedQuantityList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLocatedQuantityList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLocatedQuantityList::MergeFrom(const MsgLocatedQuantityList& from) {
  GOOGLE_CHECK_NE(&from, this);
  elem_.MergeFrom(from.elem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLocatedQuantityList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLocatedQuantityList::CopyFrom(const MsgLocatedQuantityList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLocatedQuantityList::IsInitialized() const {
  
  for (int i = 0; i < elem_size(); i++) {
    if (!this->elem(i).IsInitialized()) return false;
  }
  return true;
}

void MsgLocatedQuantityList::Swap(MsgLocatedQuantityList* other) {
  if (other != this) {
    elem_.Swap(&other->elem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLocatedQuantityList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLocatedQuantityList_descriptor_;
  metadata.reflection = MsgLocatedQuantityList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjectAttributeToxicCloud::kQuantitiesFieldNumber;
#endif  // !_MSC_VER

MsgObjectAttributeToxicCloud::MsgObjectAttributeToxicCloud() {
  SharedCtor();
}

void MsgObjectAttributeToxicCloud::InitAsDefaultInstance() {
  quantities_ = const_cast< ::Common::MsgLocatedQuantityList*>(&::Common::MsgLocatedQuantityList::default_instance());
}

MsgObjectAttributeToxicCloud::MsgObjectAttributeToxicCloud(const MsgObjectAttributeToxicCloud& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgObjectAttributeToxicCloud::SharedCtor() {
  _cached_size_ = 0;
  quantities_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjectAttributeToxicCloud::~MsgObjectAttributeToxicCloud() {
  SharedDtor();
}

void MsgObjectAttributeToxicCloud::SharedDtor() {
  if (this != default_instance_) {
    delete quantities_;
  }
}

const ::google::protobuf::Descriptor* MsgObjectAttributeToxicCloud::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjectAttributeToxicCloud_descriptor_;
}

const MsgObjectAttributeToxicCloud& MsgObjectAttributeToxicCloud::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgObjectAttributeToxicCloud* MsgObjectAttributeToxicCloud::default_instance_ = NULL;

MsgObjectAttributeToxicCloud* MsgObjectAttributeToxicCloud::New() const {
  return new MsgObjectAttributeToxicCloud;
}

void MsgObjectAttributeToxicCloud::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (quantities_ != NULL) quantities_->::Common::MsgLocatedQuantityList::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgObjectAttributeToxicCloud::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MsgLocatedQuantityList quantities = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_quantities()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgObjectAttributeToxicCloud::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgObjectAttributeToxicCloud::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MsgLocatedQuantityList quantities = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->quantities(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgObjectAttributeToxicCloud::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MsgLocatedQuantityList quantities = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->quantities(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgObjectAttributeToxicCloud::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MsgLocatedQuantityList quantities = 1;
    if (has_quantities()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->quantities());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgObjectAttributeToxicCloud::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgObjectAttributeToxicCloud* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgObjectAttributeToxicCloud*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgObjectAttributeToxicCloud::MergeFrom(const MsgObjectAttributeToxicCloud& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_quantities()->::Common::MsgLocatedQuantityList::MergeFrom(from.quantities());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgObjectAttributeToxicCloud::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgObjectAttributeToxicCloud::CopyFrom(const MsgObjectAttributeToxicCloud& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjectAttributeToxicCloud::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_quantities()) {
    if (!this->quantities().IsInitialized()) return false;
  }
  return true;
}

void MsgObjectAttributeToxicCloud::Swap(MsgObjectAttributeToxicCloud* other) {
  if (other != this) {
    std::swap(quantities_, other->quantities_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgObjectAttributeToxicCloud::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgObjectAttributeToxicCloud_descriptor_;
  metadata.reflection = MsgObjectAttributeToxicCloud_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjectAttributeFire::kClassIdFieldNumber;
const int MsgObjectAttributeFire::kHeatFieldNumber;
#endif  // !_MSC_VER

MsgObjectAttributeFire::MsgObjectAttributeFire() {
  SharedCtor();
}

void MsgObjectAttributeFire::InitAsDefaultInstance() {
}

MsgObjectAttributeFire::MsgObjectAttributeFire(const MsgObjectAttributeFire& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgObjectAttributeFire::SharedCtor() {
  _cached_size_ = 0;
  class_id_ = 0;
  heat_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjectAttributeFire::~MsgObjectAttributeFire() {
  SharedDtor();
}

void MsgObjectAttributeFire::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgObjectAttributeFire::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjectAttributeFire_descriptor_;
}

const MsgObjectAttributeFire& MsgObjectAttributeFire::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgObjectAttributeFire* MsgObjectAttributeFire::default_instance_ = NULL;

MsgObjectAttributeFire* MsgObjectAttributeFire::New() const {
  return new MsgObjectAttributeFire;
}

void MsgObjectAttributeFire::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    class_id_ = 0;
    heat_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgObjectAttributeFire::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 class_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &class_id_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_heat;
        break;
      }
      
      // required int32 heat = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_heat:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &heat_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgObjectAttributeFire::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgObjectAttributeFire::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 class_id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->class_id(), output);
  }
  
  // required int32 heat = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->heat(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgObjectAttributeFire::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 class_id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->class_id(), target);
  }
  
  // required int32 heat = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->heat(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgObjectAttributeFire::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 class_id = 1;
    if (has_class_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->class_id());
    }
    
    // required int32 heat = 2;
    if (has_heat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->heat());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgObjectAttributeFire::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgObjectAttributeFire* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgObjectAttributeFire*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgObjectAttributeFire::MergeFrom(const MsgObjectAttributeFire& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_class_id(from.class_id());
    }
    if (from._has_bit(1)) {
      set_heat(from.heat());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgObjectAttributeFire::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgObjectAttributeFire::CopyFrom(const MsgObjectAttributeFire& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjectAttributeFire::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void MsgObjectAttributeFire::Swap(MsgObjectAttributeFire* other) {
  if (other != this) {
    std::swap(class_id_, other->class_id_);
    std::swap(heat_, other->heat_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgObjectAttributeFire::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgObjectAttributeFire_descriptor_;
  metadata.reflection = MsgObjectAttributeFire_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjectAttributeMedicalTreatment::kTypeIdFieldNumber;
const int MsgObjectAttributeMedicalTreatment::kBedsFieldNumber;
const int MsgObjectAttributeMedicalTreatment::kAvailableBedsFieldNumber;
const int MsgObjectAttributeMedicalTreatment::kDoctorsFieldNumber;
const int MsgObjectAttributeMedicalTreatment::kAvailableDoctorsFieldNumber;
#endif  // !_MSC_VER

MsgObjectAttributeMedicalTreatment::MsgObjectAttributeMedicalTreatment() {
  SharedCtor();
}

void MsgObjectAttributeMedicalTreatment::InitAsDefaultInstance() {
  type_id_ = const_cast< ::Common::MsgListOID*>(&::Common::MsgListOID::default_instance());
}

MsgObjectAttributeMedicalTreatment::MsgObjectAttributeMedicalTreatment(const MsgObjectAttributeMedicalTreatment& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgObjectAttributeMedicalTreatment::SharedCtor() {
  _cached_size_ = 0;
  type_id_ = NULL;
  beds_ = 0;
  available_beds_ = 0;
  doctors_ = 0;
  available_doctors_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjectAttributeMedicalTreatment::~MsgObjectAttributeMedicalTreatment() {
  SharedDtor();
}

void MsgObjectAttributeMedicalTreatment::SharedDtor() {
  if (this != default_instance_) {
    delete type_id_;
  }
}

const ::google::protobuf::Descriptor* MsgObjectAttributeMedicalTreatment::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjectAttributeMedicalTreatment_descriptor_;
}

const MsgObjectAttributeMedicalTreatment& MsgObjectAttributeMedicalTreatment::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgObjectAttributeMedicalTreatment* MsgObjectAttributeMedicalTreatment::default_instance_ = NULL;

MsgObjectAttributeMedicalTreatment* MsgObjectAttributeMedicalTreatment::New() const {
  return new MsgObjectAttributeMedicalTreatment;
}

void MsgObjectAttributeMedicalTreatment::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (type_id_ != NULL) type_id_->::Common::MsgListOID::Clear();
    }
    beds_ = 0;
    available_beds_ = 0;
    doctors_ = 0;
    available_doctors_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgObjectAttributeMedicalTreatment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.MsgListOID type_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_type_id()));
        if (input->ExpectTag(16)) goto parse_beds;
        break;
      }
      
      // required int32 beds = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_beds:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &beds_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_available_beds;
        break;
      }
      
      // required int32 available_beds = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_available_beds:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &available_beds_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_doctors;
        break;
      }
      
      // required int32 doctors = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_doctors:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &doctors_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_available_doctors;
        break;
      }
      
      // required int32 available_doctors = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_available_doctors:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &available_doctors_));
        _set_bit(4);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgObjectAttributeMedicalTreatment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgObjectAttributeMedicalTreatment::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required .Common.MsgListOID type_id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->type_id(), output);
  }
  
  // required int32 beds = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->beds(), output);
  }
  
  // required int32 available_beds = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->available_beds(), output);
  }
  
  // required int32 doctors = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->doctors(), output);
  }
  
  // required int32 available_doctors = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->available_doctors(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgObjectAttributeMedicalTreatment::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Common.MsgListOID type_id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->type_id(), target);
  }
  
  // required int32 beds = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->beds(), target);
  }
  
  // required int32 available_beds = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->available_beds(), target);
  }
  
  // required int32 doctors = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->doctors(), target);
  }
  
  // required int32 available_doctors = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->available_doctors(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgObjectAttributeMedicalTreatment::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Common.MsgListOID type_id = 1;
    if (has_type_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->type_id());
    }
    
    // required int32 beds = 2;
    if (has_beds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->beds());
    }
    
    // required int32 available_beds = 3;
    if (has_available_beds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->available_beds());
    }
    
    // required int32 doctors = 4;
    if (has_doctors()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->doctors());
    }
    
    // required int32 available_doctors = 5;
    if (has_available_doctors()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->available_doctors());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgObjectAttributeMedicalTreatment::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgObjectAttributeMedicalTreatment* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgObjectAttributeMedicalTreatment*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgObjectAttributeMedicalTreatment::MergeFrom(const MsgObjectAttributeMedicalTreatment& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_type_id()->::Common::MsgListOID::MergeFrom(from.type_id());
    }
    if (from._has_bit(1)) {
      set_beds(from.beds());
    }
    if (from._has_bit(2)) {
      set_available_beds(from.available_beds());
    }
    if (from._has_bit(3)) {
      set_doctors(from.doctors());
    }
    if (from._has_bit(4)) {
      set_available_doctors(from.available_doctors());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgObjectAttributeMedicalTreatment::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgObjectAttributeMedicalTreatment::CopyFrom(const MsgObjectAttributeMedicalTreatment& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjectAttributeMedicalTreatment::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  
  return true;
}

void MsgObjectAttributeMedicalTreatment::Swap(MsgObjectAttributeMedicalTreatment* other) {
  if (other != this) {
    std::swap(type_id_, other->type_id_);
    std::swap(beds_, other->beds_);
    std::swap(available_beds_, other->available_beds_);
    std::swap(doctors_, other->doctors_);
    std::swap(available_doctors_, other->available_doctors_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgObjectAttributeMedicalTreatment::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgObjectAttributeMedicalTreatment_descriptor_;
  metadata.reflection = MsgObjectAttributeMedicalTreatment_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjectAttributeNBCType::kAgentIdFieldNumber;
const int MsgObjectAttributeNBCType::kConcentrationFieldNumber;
const int MsgObjectAttributeNBCType::kSourceLifeDurationFieldNumber;
#endif  // !_MSC_VER

MsgObjectAttributeNBCType::MsgObjectAttributeNBCType() {
  SharedCtor();
}

void MsgObjectAttributeNBCType::InitAsDefaultInstance() {
}

MsgObjectAttributeNBCType::MsgObjectAttributeNBCType(const MsgObjectAttributeNBCType& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgObjectAttributeNBCType::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = 0;
  concentration_ = 0;
  source_life_duration_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjectAttributeNBCType::~MsgObjectAttributeNBCType() {
  SharedDtor();
}

void MsgObjectAttributeNBCType::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgObjectAttributeNBCType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjectAttributeNBCType_descriptor_;
}

const MsgObjectAttributeNBCType& MsgObjectAttributeNBCType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgObjectAttributeNBCType* MsgObjectAttributeNBCType::default_instance_ = NULL;

MsgObjectAttributeNBCType* MsgObjectAttributeNBCType::New() const {
  return new MsgObjectAttributeNBCType;
}

void MsgObjectAttributeNBCType::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    agent_id_ = 0;
    concentration_ = 0;
    source_life_duration_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgObjectAttributeNBCType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 agent_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &agent_id_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_concentration;
        break;
      }
      
      // required int32 concentration = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_concentration:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &concentration_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_source_life_duration;
        break;
      }
      
      // required int32 source_life_duration = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_source_life_duration:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &source_life_duration_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgObjectAttributeNBCType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgObjectAttributeNBCType::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 agent_id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->agent_id(), output);
  }
  
  // required int32 concentration = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->concentration(), output);
  }
  
  // required int32 source_life_duration = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->source_life_duration(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgObjectAttributeNBCType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 agent_id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->agent_id(), target);
  }
  
  // required int32 concentration = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->concentration(), target);
  }
  
  // required int32 source_life_duration = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->source_life_duration(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgObjectAttributeNBCType::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 agent_id = 1;
    if (has_agent_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->agent_id());
    }
    
    // required int32 concentration = 2;
    if (has_concentration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->concentration());
    }
    
    // required int32 source_life_duration = 3;
    if (has_source_life_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->source_life_duration());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgObjectAttributeNBCType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgObjectAttributeNBCType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgObjectAttributeNBCType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgObjectAttributeNBCType::MergeFrom(const MsgObjectAttributeNBCType& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_agent_id(from.agent_id());
    }
    if (from._has_bit(1)) {
      set_concentration(from.concentration());
    }
    if (from._has_bit(2)) {
      set_source_life_duration(from.source_life_duration());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgObjectAttributeNBCType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgObjectAttributeNBCType::CopyFrom(const MsgObjectAttributeNBCType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjectAttributeNBCType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  return true;
}

void MsgObjectAttributeNBCType::Swap(MsgObjectAttributeNBCType* other) {
  if (other != this) {
    std::swap(agent_id_, other->agent_id_);
    std::swap(concentration_, other->concentration_);
    std::swap(source_life_duration_, other->source_life_duration_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgObjectAttributeNBCType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgObjectAttributeNBCType_descriptor_;
  metadata.reflection = MsgObjectAttributeNBCType_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjectAttributes::kConstructionFieldNumber;
const int MsgObjectAttributes::kObstacleFieldNumber;
const int MsgObjectAttributes::kMineFieldNumber;
const int MsgObjectAttributes::kActivityTimeFieldNumber;
const int MsgObjectAttributes::kBypassFieldNumber;
const int MsgObjectAttributes::kLogisticFieldNumber;
const int MsgObjectAttributes::kNbcFieldNumber;
const int MsgObjectAttributes::kCrossingSiteFieldNumber;
const int MsgObjectAttributes::kSupplyRouteFieldNumber;
const int MsgObjectAttributes::kToxicCloudFieldNumber;
const int MsgObjectAttributes::kFireFieldNumber;
const int MsgObjectAttributes::kMedicalTreatmentFieldNumber;
const int MsgObjectAttributes::kInteractionHeightFieldNumber;
const int MsgObjectAttributes::kStockFieldNumber;
const int MsgObjectAttributes::kNbcAgentFieldNumber;
#endif  // !_MSC_VER

MsgObjectAttributes::MsgObjectAttributes() {
  SharedCtor();
}

void MsgObjectAttributes::InitAsDefaultInstance() {
  construction_ = const_cast< ::Common::MsgObjectAttributeConstruction*>(&::Common::MsgObjectAttributeConstruction::default_instance());
  obstacle_ = const_cast< ::Common::MsgObjectAttributeObstacle*>(&::Common::MsgObjectAttributeObstacle::default_instance());
  mine_ = const_cast< ::Common::MsgObjectAttributeMine*>(&::Common::MsgObjectAttributeMine::default_instance());
  activity_time_ = const_cast< ::Common::MsgObjectAttributeActivityTime*>(&::Common::MsgObjectAttributeActivityTime::default_instance());
  bypass_ = const_cast< ::Common::MsgObjectAttributeBypass*>(&::Common::MsgObjectAttributeBypass::default_instance());
  logistic_ = const_cast< ::Common::MsgObjectAttributeLogistic*>(&::Common::MsgObjectAttributeLogistic::default_instance());
  nbc_ = const_cast< ::Common::MsgObjectAttributeNBC*>(&::Common::MsgObjectAttributeNBC::default_instance());
  crossing_site_ = const_cast< ::Common::MsgObjectAttributeCrossingSite*>(&::Common::MsgObjectAttributeCrossingSite::default_instance());
  supply_route_ = const_cast< ::Common::MsgObjectAttributeSupplyRoute*>(&::Common::MsgObjectAttributeSupplyRoute::default_instance());
  toxic_cloud_ = const_cast< ::Common::MsgObjectAttributeToxicCloud*>(&::Common::MsgObjectAttributeToxicCloud::default_instance());
  fire_ = const_cast< ::Common::MsgObjectAttributeFire*>(&::Common::MsgObjectAttributeFire::default_instance());
  medical_treatment_ = const_cast< ::Common::MsgObjectAttributeMedicalTreatment*>(&::Common::MsgObjectAttributeMedicalTreatment::default_instance());
  interaction_height_ = const_cast< ::Common::MsgObjectAttributeInteractionHeight*>(&::Common::MsgObjectAttributeInteractionHeight::default_instance());
  stock_ = const_cast< ::Common::MsgObjectAttributeStock*>(&::Common::MsgObjectAttributeStock::default_instance());
  nbc_agent_ = const_cast< ::Common::MsgObjectAttributeNBCType*>(&::Common::MsgObjectAttributeNBCType::default_instance());
}

MsgObjectAttributes::MsgObjectAttributes(const MsgObjectAttributes& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgObjectAttributes::SharedCtor() {
  _cached_size_ = 0;
  construction_ = NULL;
  obstacle_ = NULL;
  mine_ = NULL;
  activity_time_ = NULL;
  bypass_ = NULL;
  logistic_ = NULL;
  nbc_ = NULL;
  crossing_site_ = NULL;
  supply_route_ = NULL;
  toxic_cloud_ = NULL;
  fire_ = NULL;
  medical_treatment_ = NULL;
  interaction_height_ = NULL;
  stock_ = NULL;
  nbc_agent_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjectAttributes::~MsgObjectAttributes() {
  SharedDtor();
}

void MsgObjectAttributes::SharedDtor() {
  if (this != default_instance_) {
    delete construction_;
    delete obstacle_;
    delete mine_;
    delete activity_time_;
    delete bypass_;
    delete logistic_;
    delete nbc_;
    delete crossing_site_;
    delete supply_route_;
    delete toxic_cloud_;
    delete fire_;
    delete medical_treatment_;
    delete interaction_height_;
    delete stock_;
    delete nbc_agent_;
  }
}

const ::google::protobuf::Descriptor* MsgObjectAttributes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjectAttributes_descriptor_;
}

const MsgObjectAttributes& MsgObjectAttributes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgObjectAttributes* MsgObjectAttributes::default_instance_ = NULL;

MsgObjectAttributes* MsgObjectAttributes::New() const {
  return new MsgObjectAttributes;
}

void MsgObjectAttributes::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (construction_ != NULL) construction_->::Common::MsgObjectAttributeConstruction::Clear();
    }
    if (_has_bit(1)) {
      if (obstacle_ != NULL) obstacle_->::Common::MsgObjectAttributeObstacle::Clear();
    }
    if (_has_bit(2)) {
      if (mine_ != NULL) mine_->::Common::MsgObjectAttributeMine::Clear();
    }
    if (_has_bit(3)) {
      if (activity_time_ != NULL) activity_time_->::Common::MsgObjectAttributeActivityTime::Clear();
    }
    if (_has_bit(4)) {
      if (bypass_ != NULL) bypass_->::Common::MsgObjectAttributeBypass::Clear();
    }
    if (_has_bit(5)) {
      if (logistic_ != NULL) logistic_->::Common::MsgObjectAttributeLogistic::Clear();
    }
    if (_has_bit(6)) {
      if (nbc_ != NULL) nbc_->::Common::MsgObjectAttributeNBC::Clear();
    }
    if (_has_bit(7)) {
      if (crossing_site_ != NULL) crossing_site_->::Common::MsgObjectAttributeCrossingSite::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (_has_bit(8)) {
      if (supply_route_ != NULL) supply_route_->::Common::MsgObjectAttributeSupplyRoute::Clear();
    }
    if (_has_bit(9)) {
      if (toxic_cloud_ != NULL) toxic_cloud_->::Common::MsgObjectAttributeToxicCloud::Clear();
    }
    if (_has_bit(10)) {
      if (fire_ != NULL) fire_->::Common::MsgObjectAttributeFire::Clear();
    }
    if (_has_bit(11)) {
      if (medical_treatment_ != NULL) medical_treatment_->::Common::MsgObjectAttributeMedicalTreatment::Clear();
    }
    if (_has_bit(12)) {
      if (interaction_height_ != NULL) interaction_height_->::Common::MsgObjectAttributeInteractionHeight::Clear();
    }
    if (_has_bit(13)) {
      if (stock_ != NULL) stock_->::Common::MsgObjectAttributeStock::Clear();
    }
    if (_has_bit(14)) {
      if (nbc_agent_ != NULL) nbc_agent_->::Common::MsgObjectAttributeNBCType::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgObjectAttributes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Common.MsgObjectAttributeConstruction construction = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_construction()));
        if (input->ExpectTag(18)) goto parse_obstacle;
        break;
      }
      
      // optional .Common.MsgObjectAttributeObstacle obstacle = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_obstacle:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_obstacle()));
        if (input->ExpectTag(26)) goto parse_mine;
        break;
      }
      
      // optional .Common.MsgObjectAttributeMine mine = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_mine:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_mine()));
        if (input->ExpectTag(34)) goto parse_activity_time;
        break;
      }
      
      // optional .Common.MsgObjectAttributeActivityTime activity_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_activity_time:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_activity_time()));
        if (input->ExpectTag(42)) goto parse_bypass;
        break;
      }
      
      // optional .Common.MsgObjectAttributeBypass bypass = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_bypass:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_bypass()));
        if (input->ExpectTag(50)) goto parse_logistic;
        break;
      }
      
      // optional .Common.MsgObjectAttributeLogistic logistic = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_logistic:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_logistic()));
        if (input->ExpectTag(58)) goto parse_nbc;
        break;
      }
      
      // optional .Common.MsgObjectAttributeNBC nbc = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_nbc:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_nbc()));
        if (input->ExpectTag(66)) goto parse_crossing_site;
        break;
      }
      
      // optional .Common.MsgObjectAttributeCrossingSite crossing_site = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_crossing_site:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_crossing_site()));
        if (input->ExpectTag(74)) goto parse_supply_route;
        break;
      }
      
      // optional .Common.MsgObjectAttributeSupplyRoute supply_route = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_supply_route:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_supply_route()));
        if (input->ExpectTag(82)) goto parse_toxic_cloud;
        break;
      }
      
      // optional .Common.MsgObjectAttributeToxicCloud toxic_cloud = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_toxic_cloud:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_toxic_cloud()));
        if (input->ExpectTag(90)) goto parse_fire;
        break;
      }
      
      // optional .Common.MsgObjectAttributeFire fire = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_fire:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_fire()));
        if (input->ExpectTag(98)) goto parse_medical_treatment;
        break;
      }
      
      // optional .Common.MsgObjectAttributeMedicalTreatment medical_treatment = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_medical_treatment:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_medical_treatment()));
        if (input->ExpectTag(106)) goto parse_interaction_height;
        break;
      }
      
      // optional .Common.MsgObjectAttributeInteractionHeight interaction_height = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_interaction_height:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_interaction_height()));
        if (input->ExpectTag(114)) goto parse_stock;
        break;
      }
      
      // optional .Common.MsgObjectAttributeStock stock = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_stock:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_stock()));
        if (input->ExpectTag(122)) goto parse_nbc_agent;
        break;
      }
      
      // optional .Common.MsgObjectAttributeNBCType nbc_agent = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_nbc_agent:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_nbc_agent()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgObjectAttributes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgObjectAttributes::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .Common.MsgObjectAttributeConstruction construction = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->construction(), output);
  }
  
  // optional .Common.MsgObjectAttributeObstacle obstacle = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->obstacle(), output);
  }
  
  // optional .Common.MsgObjectAttributeMine mine = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->mine(), output);
  }
  
  // optional .Common.MsgObjectAttributeActivityTime activity_time = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      4, this->activity_time(), output);
  }
  
  // optional .Common.MsgObjectAttributeBypass bypass = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      5, this->bypass(), output);
  }
  
  // optional .Common.MsgObjectAttributeLogistic logistic = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      6, this->logistic(), output);
  }
  
  // optional .Common.MsgObjectAttributeNBC nbc = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      7, this->nbc(), output);
  }
  
  // optional .Common.MsgObjectAttributeCrossingSite crossing_site = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      8, this->crossing_site(), output);
  }
  
  // optional .Common.MsgObjectAttributeSupplyRoute supply_route = 9;
  if (_has_bit(8)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      9, this->supply_route(), output);
  }
  
  // optional .Common.MsgObjectAttributeToxicCloud toxic_cloud = 10;
  if (_has_bit(9)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      10, this->toxic_cloud(), output);
  }
  
  // optional .Common.MsgObjectAttributeFire fire = 11;
  if (_has_bit(10)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      11, this->fire(), output);
  }
  
  // optional .Common.MsgObjectAttributeMedicalTreatment medical_treatment = 12;
  if (_has_bit(11)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      12, this->medical_treatment(), output);
  }
  
  // optional .Common.MsgObjectAttributeInteractionHeight interaction_height = 13;
  if (_has_bit(12)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      13, this->interaction_height(), output);
  }
  
  // optional .Common.MsgObjectAttributeStock stock = 14;
  if (_has_bit(13)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      14, this->stock(), output);
  }
  
  // optional .Common.MsgObjectAttributeNBCType nbc_agent = 15;
  if (_has_bit(14)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      15, this->nbc_agent(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgObjectAttributes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .Common.MsgObjectAttributeConstruction construction = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->construction(), target);
  }
  
  // optional .Common.MsgObjectAttributeObstacle obstacle = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->obstacle(), target);
  }
  
  // optional .Common.MsgObjectAttributeMine mine = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->mine(), target);
  }
  
  // optional .Common.MsgObjectAttributeActivityTime activity_time = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->activity_time(), target);
  }
  
  // optional .Common.MsgObjectAttributeBypass bypass = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->bypass(), target);
  }
  
  // optional .Common.MsgObjectAttributeLogistic logistic = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->logistic(), target);
  }
  
  // optional .Common.MsgObjectAttributeNBC nbc = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->nbc(), target);
  }
  
  // optional .Common.MsgObjectAttributeCrossingSite crossing_site = 8;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->crossing_site(), target);
  }
  
  // optional .Common.MsgObjectAttributeSupplyRoute supply_route = 9;
  if (_has_bit(8)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->supply_route(), target);
  }
  
  // optional .Common.MsgObjectAttributeToxicCloud toxic_cloud = 10;
  if (_has_bit(9)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->toxic_cloud(), target);
  }
  
  // optional .Common.MsgObjectAttributeFire fire = 11;
  if (_has_bit(10)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->fire(), target);
  }
  
  // optional .Common.MsgObjectAttributeMedicalTreatment medical_treatment = 12;
  if (_has_bit(11)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->medical_treatment(), target);
  }
  
  // optional .Common.MsgObjectAttributeInteractionHeight interaction_height = 13;
  if (_has_bit(12)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->interaction_height(), target);
  }
  
  // optional .Common.MsgObjectAttributeStock stock = 14;
  if (_has_bit(13)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->stock(), target);
  }
  
  // optional .Common.MsgObjectAttributeNBCType nbc_agent = 15;
  if (_has_bit(14)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->nbc_agent(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgObjectAttributes::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Common.MsgObjectAttributeConstruction construction = 1;
    if (has_construction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->construction());
    }
    
    // optional .Common.MsgObjectAttributeObstacle obstacle = 2;
    if (has_obstacle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->obstacle());
    }
    
    // optional .Common.MsgObjectAttributeMine mine = 3;
    if (has_mine()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->mine());
    }
    
    // optional .Common.MsgObjectAttributeActivityTime activity_time = 4;
    if (has_activity_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->activity_time());
    }
    
    // optional .Common.MsgObjectAttributeBypass bypass = 5;
    if (has_bypass()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bypass());
    }
    
    // optional .Common.MsgObjectAttributeLogistic logistic = 6;
    if (has_logistic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->logistic());
    }
    
    // optional .Common.MsgObjectAttributeNBC nbc = 7;
    if (has_nbc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->nbc());
    }
    
    // optional .Common.MsgObjectAttributeCrossingSite crossing_site = 8;
    if (has_crossing_site()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->crossing_site());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .Common.MsgObjectAttributeSupplyRoute supply_route = 9;
    if (has_supply_route()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->supply_route());
    }
    
    // optional .Common.MsgObjectAttributeToxicCloud toxic_cloud = 10;
    if (has_toxic_cloud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->toxic_cloud());
    }
    
    // optional .Common.MsgObjectAttributeFire fire = 11;
    if (has_fire()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fire());
    }
    
    // optional .Common.MsgObjectAttributeMedicalTreatment medical_treatment = 12;
    if (has_medical_treatment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->medical_treatment());
    }
    
    // optional .Common.MsgObjectAttributeInteractionHeight interaction_height = 13;
    if (has_interaction_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->interaction_height());
    }
    
    // optional .Common.MsgObjectAttributeStock stock = 14;
    if (has_stock()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stock());
    }
    
    // optional .Common.MsgObjectAttributeNBCType nbc_agent = 15;
    if (has_nbc_agent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->nbc_agent());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgObjectAttributes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgObjectAttributes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgObjectAttributes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgObjectAttributes::MergeFrom(const MsgObjectAttributes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_construction()->::Common::MsgObjectAttributeConstruction::MergeFrom(from.construction());
    }
    if (from._has_bit(1)) {
      mutable_obstacle()->::Common::MsgObjectAttributeObstacle::MergeFrom(from.obstacle());
    }
    if (from._has_bit(2)) {
      mutable_mine()->::Common::MsgObjectAttributeMine::MergeFrom(from.mine());
    }
    if (from._has_bit(3)) {
      mutable_activity_time()->::Common::MsgObjectAttributeActivityTime::MergeFrom(from.activity_time());
    }
    if (from._has_bit(4)) {
      mutable_bypass()->::Common::MsgObjectAttributeBypass::MergeFrom(from.bypass());
    }
    if (from._has_bit(5)) {
      mutable_logistic()->::Common::MsgObjectAttributeLogistic::MergeFrom(from.logistic());
    }
    if (from._has_bit(6)) {
      mutable_nbc()->::Common::MsgObjectAttributeNBC::MergeFrom(from.nbc());
    }
    if (from._has_bit(7)) {
      mutable_crossing_site()->::Common::MsgObjectAttributeCrossingSite::MergeFrom(from.crossing_site());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from._has_bit(8)) {
      mutable_supply_route()->::Common::MsgObjectAttributeSupplyRoute::MergeFrom(from.supply_route());
    }
    if (from._has_bit(9)) {
      mutable_toxic_cloud()->::Common::MsgObjectAttributeToxicCloud::MergeFrom(from.toxic_cloud());
    }
    if (from._has_bit(10)) {
      mutable_fire()->::Common::MsgObjectAttributeFire::MergeFrom(from.fire());
    }
    if (from._has_bit(11)) {
      mutable_medical_treatment()->::Common::MsgObjectAttributeMedicalTreatment::MergeFrom(from.medical_treatment());
    }
    if (from._has_bit(12)) {
      mutable_interaction_height()->::Common::MsgObjectAttributeInteractionHeight::MergeFrom(from.interaction_height());
    }
    if (from._has_bit(13)) {
      mutable_stock()->::Common::MsgObjectAttributeStock::MergeFrom(from.stock());
    }
    if (from._has_bit(14)) {
      mutable_nbc_agent()->::Common::MsgObjectAttributeNBCType::MergeFrom(from.nbc_agent());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgObjectAttributes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgObjectAttributes::CopyFrom(const MsgObjectAttributes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjectAttributes::IsInitialized() const {
  
  if (has_obstacle()) {
    if (!this->obstacle().IsInitialized()) return false;
  }
  if (has_activity_time()) {
    if (!this->activity_time().IsInitialized()) return false;
  }
  if (has_logistic()) {
    if (!this->logistic().IsInitialized()) return false;
  }
  if (has_nbc()) {
    if (!this->nbc().IsInitialized()) return false;
  }
  if (has_crossing_site()) {
    if (!this->crossing_site().IsInitialized()) return false;
  }
  if (has_supply_route()) {
    if (!this->supply_route().IsInitialized()) return false;
  }
  if (has_toxic_cloud()) {
    if (!this->toxic_cloud().IsInitialized()) return false;
  }
  if (has_fire()) {
    if (!this->fire().IsInitialized()) return false;
  }
  if (has_medical_treatment()) {
    if (!this->medical_treatment().IsInitialized()) return false;
  }
  if (has_interaction_height()) {
    if (!this->interaction_height().IsInitialized()) return false;
  }
  if (has_stock()) {
    if (!this->stock().IsInitialized()) return false;
  }
  if (has_nbc_agent()) {
    if (!this->nbc_agent().IsInitialized()) return false;
  }
  return true;
}

void MsgObjectAttributes::Swap(MsgObjectAttributes* other) {
  if (other != this) {
    std::swap(construction_, other->construction_);
    std::swap(obstacle_, other->obstacle_);
    std::swap(mine_, other->mine_);
    std::swap(activity_time_, other->activity_time_);
    std::swap(bypass_, other->bypass_);
    std::swap(logistic_, other->logistic_);
    std::swap(nbc_, other->nbc_);
    std::swap(crossing_site_, other->crossing_site_);
    std::swap(supply_route_, other->supply_route_);
    std::swap(toxic_cloud_, other->toxic_cloud_);
    std::swap(fire_, other->fire_);
    std::swap(medical_treatment_, other->medical_treatment_);
    std::swap(interaction_height_, other->interaction_height_);
    std::swap(stock_, other->stock_);
    std::swap(nbc_agent_, other->nbc_agent_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgObjectAttributes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgObjectAttributes_descriptor_;
  metadata.reflection = MsgObjectAttributes_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgNote::_default_name_;
const ::std::string MsgNote::_default_number_;
const ::std::string MsgNote::_default_description_;
#ifndef _MSC_VER
const int MsgNote::kNameFieldNumber;
const int MsgNote::kNumberFieldNumber;
const int MsgNote::kDescriptionFieldNumber;
const int MsgNote::kParentFieldNumber;
#endif  // !_MSC_VER

MsgNote::MsgNote() {
  SharedCtor();
}

void MsgNote::InitAsDefaultInstance() {
}

MsgNote::MsgNote(const MsgNote& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgNote::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&_default_name_);
  number_ = const_cast< ::std::string*>(&_default_number_);
  description_ = const_cast< ::std::string*>(&_default_description_);
  parent_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgNote::~MsgNote() {
  SharedDtor();
}

void MsgNote::SharedDtor() {
  if (name_ != &_default_name_) {
    delete name_;
  }
  if (number_ != &_default_number_) {
    delete number_;
  }
  if (description_ != &_default_description_) {
    delete description_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgNote::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgNote_descriptor_;
}

const MsgNote& MsgNote::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgNote* MsgNote::default_instance_ = NULL;

MsgNote* MsgNote::New() const {
  return new MsgNote;
}

void MsgNote::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (name_ != &_default_name_) {
        name_->clear();
      }
    }
    if (_has_bit(1)) {
      if (number_ != &_default_number_) {
        number_->clear();
      }
    }
    if (_has_bit(2)) {
      if (description_ != &_default_description_) {
        description_->clear();
      }
    }
    parent_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgNote::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_name()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->name().data(), this->name().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(18)) goto parse_number;
        break;
      }
      
      // required string number = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_number:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_number()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->number().data(), this->number().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(26)) goto parse_description;
        break;
      }
      
      // required string description = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_description:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_description()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->description().data(), this->description().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(32)) goto parse_parent;
        break;
      }
      
      // required uint32 parent = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_parent:
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &parent_));
        _set_bit(3);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgNote::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgNote::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required string name = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }
  
  // required string number = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->number().data(), this->number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->number(), output);
  }
  
  // required string description = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->description(), output);
  }
  
  // required uint32 parent = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->parent(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgNote::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }
  
  // required string number = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->number().data(), this->number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->number(), target);
  }
  
  // required string description = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }
  
  // required uint32 parent = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->parent(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgNote::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // required string number = 2;
    if (has_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->number());
    }
    
    // required string description = 3;
    if (has_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }
    
    // required uint32 parent = 4;
    if (has_parent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->parent());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgNote::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgNote* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgNote*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgNote::MergeFrom(const MsgNote& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_name(from.name());
    }
    if (from._has_bit(1)) {
      set_number(from.number());
    }
    if (from._has_bit(2)) {
      set_description(from.description());
    }
    if (from._has_bit(3)) {
      set_parent(from.parent());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgNote::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgNote::CopyFrom(const MsgNote& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgNote::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  
  return true;
}

void MsgNote::Swap(MsgNote* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(number_, other->number_);
    std::swap(description_, other->description_);
    std::swap(parent_, other->parent_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgNote::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgNote_descriptor_;
  metadata.reflection = MsgNote_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMeteoAttributes::kTemperatureFieldNumber;
const int MsgMeteoAttributes::kWindSpeedFieldNumber;
const int MsgMeteoAttributes::kWindDirectionFieldNumber;
const int MsgMeteoAttributes::kCloudFloorFieldNumber;
const int MsgMeteoAttributes::kCloudCeilingFieldNumber;
const int MsgMeteoAttributes::kCloudDensityFieldNumber;
const int MsgMeteoAttributes::kPrecipitationFieldNumber;
#endif  // !_MSC_VER

MsgMeteoAttributes::MsgMeteoAttributes() {
  SharedCtor();
}

void MsgMeteoAttributes::InitAsDefaultInstance() {
  wind_direction_ = const_cast< ::Common::MsgHeading*>(&::Common::MsgHeading::default_instance());
}

MsgMeteoAttributes::MsgMeteoAttributes(const MsgMeteoAttributes& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMeteoAttributes::SharedCtor() {
  _cached_size_ = 0;
  temperature_ = 0;
  wind_speed_ = 0;
  wind_direction_ = NULL;
  cloud_floor_ = 0;
  cloud_ceiling_ = 0;
  cloud_density_ = 0;
  precipitation_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMeteoAttributes::~MsgMeteoAttributes() {
  SharedDtor();
}

void MsgMeteoAttributes::SharedDtor() {
  if (this != default_instance_) {
    delete wind_direction_;
  }
}

const ::google::protobuf::Descriptor* MsgMeteoAttributes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMeteoAttributes_descriptor_;
}

const MsgMeteoAttributes& MsgMeteoAttributes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();  return *default_instance_;
}

MsgMeteoAttributes* MsgMeteoAttributes::default_instance_ = NULL;

MsgMeteoAttributes* MsgMeteoAttributes::New() const {
  return new MsgMeteoAttributes;
}

void MsgMeteoAttributes::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    temperature_ = 0;
    wind_speed_ = 0;
    if (_has_bit(2)) {
      if (wind_direction_ != NULL) wind_direction_->::Common::MsgHeading::Clear();
    }
    cloud_floor_ = 0;
    cloud_ceiling_ = 0;
    cloud_density_ = 0;
    precipitation_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMeteoAttributes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 temperature = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &temperature_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_wind_speed;
        break;
      }
      
      // required int32 wind_speed = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_wind_speed:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &wind_speed_));
        _set_bit(1);
        if (input->ExpectTag(26)) goto parse_wind_direction;
        break;
      }
      
      // required .Common.MsgHeading wind_direction = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_wind_direction:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_wind_direction()));
        if (input->ExpectTag(32)) goto parse_cloud_floor;
        break;
      }
      
      // required int32 cloud_floor = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_cloud_floor:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &cloud_floor_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_cloud_ceiling;
        break;
      }
      
      // required int32 cloud_ceiling = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_cloud_ceiling:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &cloud_ceiling_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_cloud_density;
        break;
      }
      
      // required int32 cloud_density = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_cloud_density:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &cloud_density_));
        _set_bit(5);
        if (input->ExpectTag(56)) goto parse_precipitation;
        break;
      }
      
      // required .Common.EnumPrecipitationType precipitation = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_precipitation:
        int value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadEnum(input, &value));
        if (Common::EnumPrecipitationType_IsValid(value)) {
          set_precipitation(static_cast< Common::EnumPrecipitationType >(value));
        } else {
          mutable_unknown_fields()->AddVarint(7, value);
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMeteoAttributes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMeteoAttributes::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 temperature = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->temperature(), output);
  }
  
  // required int32 wind_speed = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->wind_speed(), output);
  }
  
  // required .Common.MsgHeading wind_direction = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->wind_direction(), output);
  }
  
  // required int32 cloud_floor = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->cloud_floor(), output);
  }
  
  // required int32 cloud_ceiling = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->cloud_ceiling(), output);
  }
  
  // required int32 cloud_density = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->cloud_density(), output);
  }
  
  // required .Common.EnumPrecipitationType precipitation = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->precipitation(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMeteoAttributes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 temperature = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->temperature(), target);
  }
  
  // required int32 wind_speed = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->wind_speed(), target);
  }
  
  // required .Common.MsgHeading wind_direction = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->wind_direction(), target);
  }
  
  // required int32 cloud_floor = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->cloud_floor(), target);
  }
  
  // required int32 cloud_ceiling = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->cloud_ceiling(), target);
  }
  
  // required int32 cloud_density = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->cloud_density(), target);
  }
  
  // required .Common.EnumPrecipitationType precipitation = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->precipitation(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMeteoAttributes::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 temperature = 1;
    if (has_temperature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->temperature());
    }
    
    // required int32 wind_speed = 2;
    if (has_wind_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wind_speed());
    }
    
    // required .Common.MsgHeading wind_direction = 3;
    if (has_wind_direction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->wind_direction());
    }
    
    // required int32 cloud_floor = 4;
    if (has_cloud_floor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cloud_floor());
    }
    
    // required int32 cloud_ceiling = 5;
    if (has_cloud_ceiling()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cloud_ceiling());
    }
    
    // required int32 cloud_density = 6;
    if (has_cloud_density()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cloud_density());
    }
    
    // required .Common.EnumPrecipitationType precipitation = 7;
    if (has_precipitation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->precipitation());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMeteoAttributes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMeteoAttributes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMeteoAttributes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMeteoAttributes::MergeFrom(const MsgMeteoAttributes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_temperature(from.temperature());
    }
    if (from._has_bit(1)) {
      set_wind_speed(from.wind_speed());
    }
    if (from._has_bit(2)) {
      mutable_wind_direction()->::Common::MsgHeading::MergeFrom(from.wind_direction());
    }
    if (from._has_bit(3)) {
      set_cloud_floor(from.cloud_floor());
    }
    if (from._has_bit(4)) {
      set_cloud_ceiling(from.cloud_ceiling());
    }
    if (from._has_bit(5)) {
      set_cloud_density(from.cloud_density());
    }
    if (from._has_bit(6)) {
      set_precipitation(from.precipitation());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMeteoAttributes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMeteoAttributes::CopyFrom(const MsgMeteoAttributes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMeteoAttributes::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;
  
  if (has_wind_direction()) {
    if (!this->wind_direction().IsInitialized()) return false;
  }
  return true;
}

void MsgMeteoAttributes::Swap(MsgMeteoAttributes* other) {
  if (other != this) {
    std::swap(temperature_, other->temperature_);
    std::swap(wind_speed_, other->wind_speed_);
    std::swap(wind_direction_, other->wind_direction_);
    std::swap(cloud_floor_, other->cloud_floor_);
    std::swap(cloud_ceiling_, other->cloud_ceiling_);
    std::swap(cloud_density_, other->cloud_density_);
    std::swap(precipitation_, other->precipitation_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMeteoAttributes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMeteoAttributes_descriptor_;
  metadata.reflection = MsgMeteoAttributes_reflection_;
  return metadata;
}


}  // namespace Common
