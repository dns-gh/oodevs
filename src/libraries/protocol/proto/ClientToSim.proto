package MsgsClientToSim;

import "Common.proto"; 

message MsgControlDatetimeChange {
   required Common.MsgDateTime date_time = 1;
}

message MsgControlMeteo {
   required Common.MsgMissionParameters parametres = 1;
}

message MsgControlCheckPointSaveNow {
   optional string name = 1;
}

message MsgFragOrder {
   required uint32                      oid        = 1;
   required uint32                      frag_order = 2;
   optional Common.MsgMissionParameters parametres = 3;
}

message MsgSetAutomatMode {
   required int32                  oid  = 1;
   required Common.EnumAutomatMode mode = 2;
}

message MsgUnitCreationRequest {
   required uint32                 type_pion    = 1;
   required uint32                 oid_automate = 2;
   required Common.MsgCoordLatLong position     = 3;
}

// Magic Action
message MsgUnitMagicAction {
   enum Type {
        move_to                      = 0;
        surrender_to                 = 1;
        cancel_surrender             = 2;
        recover_transporters         = 3;
        destroy_component            = 4;
        recover_all                  = 5;
        recover_troops               = 6;
        recover_equipments           = 7;
        recover_resources            = 8;
        destroy_all                  = 9;
        change_human_factors         = 10;
        partial_recovery             = 11;
        unit_creation                = 12;
        create_fire_order            = 13;
        population_total_destruction = 14;
        population_kill              = 15;
        population_resurrect         = 16;
        population_change_attitude   = 17;
        change_knowledge_group       = 18;
        change_logistic_links        = 19;
        unit_change_superior         = 20;
        change_automat_superior      = 21;
        change_formation_superior    = 22;
        knowledge_group_update       = 23;
        log_supply_push_flow         = 24;
        log_supply_change_quotas     = 25;
    }
   required uint32                      oid        = 1;
   required Type                        type       = 2;
   required Common.MsgMissionParameters parametres = 3;
}

message MsgKnowledgeMagicAction {
   enum Type {
        enable                 = 0;
        update_side            = 1;
        update_side_parent     = 2;
        update_type            = 3;
    }
   required uint32                      oid        = 1;
   required Type                        type       = 2;
   required Common.MsgMissionParameters parametres = 3;
}

message MsgMagicActionCreateObject {
   required string                     type       = 1;
   required Common.MsgLocation         location   = 2;
   required string                     name       = 3;
   required int32                      team       = 4;
   required Common.MsgObjectAttributes attributes = 5;
}

message MsgMagicActionUpdateObject {
   required int32                      oid        = 1;
   required Common.MsgObjectAttributes attributes = 2;
}

message MsgObjectMagicAction_action {
   optional MsgMagicActionCreateObject create_object  = 1;
   optional MsgMagicActionUpdateObject update_object  = 2;
   optional int32                      destroy_object = 3;
}

message MsgObjectMagicAction {
   enum Type {
        create  = 0;
        update  = 1;
        destroy = 2;
   }
   
   enum Attribute {
        construction       = 0;
        obstacle           = 1;
        mine               = 2;
        activity_time      = 3;
        bypass             = 4;
        logistic           = 5;
        nbc                = 6;
        crossing_site      = 7;
        supply_route       = 8;
        toxic_cloud        = 9;
        fire               = 10;
        medical_treatment  = 11;
        interaction_height = 12;
        stock              = 13;
        nbc_agent          = 14;
   }
   
   required uint32                      oid        = 1;
   required Type                        type       = 2;
   required Common.MsgMissionParameters parametres = 3;
}

message MsgLogSupplyPushFlow {
   required uint32                    oid_donneur  = 1;
   required uint32                    oid_receveur = 2;
   required Common.SeqOfDotationStock stocks       = 3;
}

message MsgLogSupplyChangeQuotas {
   required uint32                    oid_donneur  = 1;
   required uint32                    oid_receveur = 2;
   required Common.SeqOfDotationQuota quotas       = 3;
}

message MsgControlCheckPointSetFrequency {
   required int32 frequency = 1;
}

message MsgControlToggleVisionCones {
   required bool vision_cones = 1;
}

message MsgKnowledgeGroupCreationRequest {
   required uint32 oid_camp    = 1;
   optional uint32 oid_parent  = 2;
   required string type        = 3;
}

message MsgKnowledgeGroupUpdateRequest {
   required uint32 oid        = 1;
   optional uint32 oid_camp   = 2;
   optional uint32 oid_parent = 3;
   optional bool   enabled    = 4;
   optional string type       = 5;
}


message MsgClientToSim {
    message Content {
       optional Common.MsgControlStop                  control_stop                         = 1;
       optional Common.MsgControlPause                 control_pause                        = 2;
       optional Common.MsgControlResume                control_resume                       = 3;
       optional Common.MsgControlChangeTimeFactor      control_change_time_factor           = 4;
       optional MsgControlDatetimeChange               control_date_time_change             = 5;
       optional MsgControlMeteo                        control_meteo                        = 6;
       optional MsgControlCheckPointSaveNow            control_checkpoint_save_now          = 7;
       optional MsgControlCheckPointSetFrequency       control_checkpoint_set_frequency     = 8;
       optional MsgControlToggleVisionCones            control_toggle_vision_cones          = 9;
       optional Common.MsgUnitOrder                    unit_order                           = 10;
       optional Common.MsgAutomatOrder                 automat_order                        = 11;
       optional Common.MsgPopulationOrder              population_order                     = 12;
       optional MsgFragOrder                           frag_order                           = 13;
       optional MsgSetAutomatMode                      set_automat_mode                     = 14;
       optional MsgUnitCreationRequest                 unit_creation_request                = 15;
       optional MsgUnitMagicAction                     unit_magic_action                    = 16;
       optional MsgObjectMagicAction                   object_magic_action                  = 17;
       optional Common.MsgChangeDiplomacy              change_diplomacy                     = 18;
       optional MsgKnowledgeMagicAction                knowledge_magic_action               = 19;
       optional MsgKnowledgeGroupCreationRequest       knowledge_group_creation_request     = 20;
    }
    optional int32   context = 1 [default = 0];
    required Content message = 2;
}