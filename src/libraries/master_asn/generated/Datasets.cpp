/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 5.31, Date: 31-Jan-2007.
 */
#include "Datasets.h"

/**************************************************************/
/*                                                            */
/*  DatasetsIncludes                                          */
/*                                                            */
/**************************************************************/

ASN1C_DatasetsIncludes::ASN1C_DatasetsIncludes (
   ASN1MessageBuffer& msgBuf, ASN1T_DatasetsIncludes& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_DatasetsIncludes (ASN1CTXT* ctxt_p, ASN1T_DatasetsIncludes* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PE_DatasetsIncludes: start\n");


   rtdiag ("asn1PE_DatasetsIncludes: end\n");
   return (stat);
}

int ASN1C_DatasetsIncludes::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_DatasetsIncludes (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_DatasetsIncludes (ASN1CTXT* ctxt_p, ASN1T_DatasetsIncludes* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PD_DatasetsIncludes: start\n");

   /* decode  */

   PU_PUSHNAME (ctxt_p, "");


   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PD_DatasetsIncludes: end\n");

   return (stat);
}

int ASN1C_DatasetsIncludes::Decode ()
{
   return asn1PD_DatasetsIncludes (mpContext->GetPtr(), &msgData);
}

/**************************************************************/
/*                                                            */
/*  DatasetsExports                                           */
/*                                                            */
/**************************************************************/

ASN1C_DatasetsExports::ASN1C_DatasetsExports (
   ASN1MessageBuffer& msgBuf) :
   ASN1CType(msgBuf)
{}

EXTERN int asn1PE_DatasetsExports (ASN1CTXT* ctxt_p)
{
   int stat = ASN_OK;

   rtdiag ("asn1PE_DatasetsExports: start\n");

   /* NULL */

   rtdiag ("asn1PE_DatasetsExports: end\n");
   return (stat);
}

int ASN1C_DatasetsExports::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_DatasetsExports (mpContext->GetPtr());
   return stat;
}

EXTERN int asn1PD_DatasetsExports (ASN1CTXT* ctxt_p)
{
   int stat = ASN_OK;

   rtdiag ("asn1PD_DatasetsExports: start\n");

   /* NULL */

   rtdiag ("asn1PD_DatasetsExports: end\n");

   return (stat);
}

int ASN1C_DatasetsExports::Decode ()
{
   return asn1PD_DatasetsExports (mpContext->GetPtr());
}

/**************************************************************/
/*                                                            */
/*  Dataset                                                   */
/*                                                            */
/**************************************************************/

ASN1C_Dataset::ASN1C_Dataset (
   ASN1MessageBuffer& msgBuf, ASN1T_Dataset& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_Dataset (ASN1CTXT* ctxt_p, ASN1T_Dataset* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PE_Dataset: start\n");

   /* encode name */

   PU_PUSHNAME (ctxt_p, "name");

   stat = pe_VisibleString (ctxt_p, pvalue->name, 0);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);
   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PE_Dataset: end\n");
   return (stat);
}

int ASN1C_Dataset::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_Dataset (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_Dataset (ASN1CTXT* ctxt_p, ASN1T_Dataset* pvalue)
{
   int stat = ASN_OK;

   rtdiag ("asn1PD_Dataset: start\n");

   /* decode name */

   PU_PUSHNAME (ctxt_p, "name");

   stat = pd_VisibleString (ctxt_p, &pvalue->name, 0);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);

   PU_POPNAME (ctxt_p);


   rtdiag ("asn1PD_Dataset: end\n");

   return (stat);
}

int ASN1C_Dataset::Decode ()
{
   return asn1PD_Dataset (mpContext->GetPtr(), &msgData);
}

/**************************************************************/
/*                                                            */
/*  DatasetList                                               */
/*                                                            */
/**************************************************************/

ASN1C_DatasetList::ASN1C_DatasetList (
   ASN1MessageBuffer& msgBuf, ASN1T_DatasetList& data) :
   ASN1CType(msgBuf), msgData(data)
{}

EXTERN int asn1PE_DatasetList (ASN1CTXT* ctxt_p, ASN1T_DatasetList* pvalue)
{
   int stat = ASN_OK;
   ASN1UINT xx1;

   rtdiag ("asn1PE_DatasetList: start\n");

   /* encode length determinant */

   PU_PUSHNAME (ctxt_p, "n");

   stat = pe_Length (ctxt_p, pvalue->n);
   if (stat < 0) return LOG_ASN1ERR (ctxt_p, stat);

   PU_POPNAME (ctxt_p);

   /* encode elements */

   for (xx1 = 0; xx1 < pvalue->n; xx1++) {
      PU_PUSHELEMNAME (ctxt_p, xx1);

      stat = asn1PE_Dataset (ctxt_p, &pvalue->elem[xx1]);
      if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);
      PU_POPNAME (ctxt_p);
   }

   rtdiag ("asn1PE_DatasetList: end\n");
   return (stat);
}

int ASN1C_DatasetList::Encode ()
{
   mMsgBuf.Init ();
   int stat = asn1PE_DatasetList (mpContext->GetPtr(), &msgData);
   return stat;
}

EXTERN int asn1PD_DatasetList (ASN1CTXT* ctxt_p, ASN1T_DatasetList* pvalue)
{
   int stat = ASN_OK;
   ASN1UINT xx1;

   rtdiag ("asn1PD_DatasetList: start\n");

   /* decode length determinant */

   PU_PUSHNAME (ctxt_p, "n");

   stat = pd_Length (ctxt_p, &pvalue->n);
   if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);

   PU_POPNAME (ctxt_p);

   /* decode elements */

   ALLOC_ASN1ARRAY (ctxt_p, pvalue, ASN1T_Dataset);

   for (xx1 = 0; xx1 < pvalue->n; xx1++) {
      PU_PUSHELEMNAME (ctxt_p, xx1);

      stat = asn1PD_Dataset (ctxt_p, &pvalue->elem[xx1]);
      if (stat != ASN_OK) return LOG_ASN1ERR (ctxt_p, stat);

      PU_POPNAME (ctxt_p);
   }


   rtdiag ("asn1PD_DatasetList: end\n");

   return (stat);
}

int ASN1C_DatasetList::Decode ()
{
   return asn1PD_DatasetList (mpContext->GetPtr(), &msgData);
}

