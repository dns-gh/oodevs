// *****************************************************************************
//
// This file is part of a MASA library or program.
// Refer to the included end-user license agreement for restrictions.
//
// Copyright (c) 2010 MASA Group
//
// *****************************************************************************

#include "shield_test_pch.h"
#include "ClientTools.h"

using namespace shield;

BOOST_FIXTURE_TEST_CASE( control_date_time_change_from_client_is_converted, ContextFixture< MsgsClientToSim::MsgClientToSim > )
{
    content.mutable_control_date_time_change()->mutable_date_time()->set_data( "data" );
    MOCK_EXPECT( server, SendClientToSim ).once().with( constraint( msg, "context: 42 message { control_date_time_change { date_time { data: \"data\" } } }" ) );
    converter.ReceiveClientToSim( msg );
}

BOOST_FIXTURE_TEST_CASE( control_checkpoint_save_now_from_client_is_converted, ContextFixture< MsgsClientToSim::MsgClientToSim > )
{
    content.mutable_control_checkpoint_save_now()->set_name( "name" );
    MOCK_EXPECT( server, SendClientToSim ).once().with( constraint( msg, "context: 42 message { control_checkpoint_save_now { name: \"name\" } }" ) );
    converter.ReceiveClientToSim( msg );
}

BOOST_FIXTURE_TEST_CASE( control_checkpoint_set_frequency_from_client_is_converted, ContextFixture< MsgsClientToSim::MsgClientToSim > )
{
    content.mutable_control_checkpoint_set_frequency()->set_frequency( 7 );
    MOCK_EXPECT( server, SendClientToSim ).once().with( constraint( msg, "context: 42 message { control_checkpoint_set_frequency { frequency: 7 } }" ) );
    converter.ReceiveClientToSim( msg );
}

BOOST_FIXTURE_TEST_CASE( control_toggle_vision_cones_from_client_is_converted, ContextFixture< MsgsClientToSim::MsgClientToSim > )
{
    content.mutable_control_toggle_vision_cones()->set_vision_cones( true );
    MOCK_EXPECT( server, SendClientToSim ).once().with( constraint( msg, "context: 42 message { control_toggle_vision_cones { vision_cones: true } }" ) );
    converter.ReceiveClientToSim( msg );
}

namespace
{
    template< typename W >
    void FillPlannedWork( W* w )
    {
        w->set_type( "type" );
        FillLocation( w->mutable_position() );
        w->set_type_obstacle( Common::ObstacleType::reserved );
        w->set_densite( 1.23f );
        w->mutable_tc2()->set_id( 40 );
        w->set_activity_time( 41 );
        w->set_name( "obstacleName" );
    }
    template< typename O >
    void FillMissionObjective( O* o )
    {
        FillLocation( o->mutable_localisation() );
        o->mutable_horaire()->set_data( "horaire" );
    }
    template< typename O >
    void FillLimaOrder( O* o )
    {
        FillLocation( o->mutable_lima()->mutable_location() );
        o->mutable_horaire()->set_data( "horaire2" );
        o->add_fonctions( Common::MsgLimaOrder::ligne_recueil );
        o->add_fonctions( Common::MsgLimaOrder::ligne_objectif );
    }
    template< typename V >
    void FillParameterValue( V* v )
    {
        v->set_booleanvalue( true );
        v->set_intvalue( 2 );
        v->mutable_heading()->set_heading( 3 );
        v->set_enumeration( 4 );
        v->mutable_datetime()->set_data( "data2" );
        FillLocation( v->mutable_point()->mutable_location() );
        FillLocation( v->mutable_area()->mutable_location() );
        FillLocation( v->mutable_path()->mutable_location() );
        FillLocation( v->mutable_limit()->mutable_location() );
        FillLimaOrder( v->mutable_phaseline()->add_elem() );
        FillLimaOrder( v->mutable_phaseline()->add_elem() );
        v->mutable_automat()->set_id( 5 );
        v->mutable_agent()->set_id( 6 );
        v->mutable_agentknowledge()->set_id( 7 );
        v->mutable_crowdknowledge()->set_id( 8 );
        v->mutable_objectknowledge()->set_id( 9 );
        v->mutable_urbanknowledge()->set_id( 10 );
        FillPlannedWork( v->mutable_plannedwork() );
        v->mutable_atlasnature()->set_nature( 11 );
        v->mutable_resourcetype()->set_id( 50 );
        v->mutable_logmaintenancepriorities()->add_elem()->set_id( 51 );
        v->mutable_logmaintenancepriorities()->add_elem()->set_id( 52 );
        v->mutable_logmedicalpriorities()->add_elem( Common::mort );
        v->mutable_logmedicalpriorities()->add_elem( Common::non_blesse );
        v->set_areal( 3.14f );
        FillLocation( v->mutable_pathlist()->add_elem()->mutable_location() );
        FillLocation( v->mutable_pathlist()->add_elem()->mutable_location() );
        FillLocation( v->mutable_pointlist()->add_elem()->mutable_location() );
        FillLocation( v->mutable_pointlist()->add_elem()->mutable_location() );
        FillLocation( v->mutable_polygonlist()->add_elem()->mutable_location() );
        FillLocation( v->mutable_polygonlist()->add_elem()->mutable_location() );
        FillLocation( v->mutable_locationlist()->add_elem() );
        FillLocation( v->mutable_locationlist()->add_elem() );
        v->mutable_unitlist()->add_elem()->set_id( 60 );
        v->mutable_unitlist()->add_elem()->set_id( 61 );
        v->mutable_automatlist()->add_elem()->set_id( 63 );
        v->mutable_automatlist()->add_elem()->set_id( 64 );
        v->mutable_unitknowledgelist()->add_elem()->set_id( 66 );
        v->mutable_unitknowledgelist()->add_elem()->set_id( 67 );
        v->mutable_objectknowledgelist()->add_elem()->set_id( 69 );
        v->mutable_objectknowledgelist()->add_elem()->set_id( 70 );
        v->mutable_equipmenttype()->set_id( 71 );
        v->mutable_tirindirect()->set_id( 72 );
        v->set_acharstr( "acharstr" );
        FillMissionObjective( v->mutable_missionobjective() );
        FillMissionObjective( v->mutable_missionobjectivelist()->add_elem() );
        FillMissionObjective( v->mutable_missionobjectivelist()->add_elem() );
        v->mutable_object()->set_id( 73 );
        v->mutable_party()->set_id( 74 );
        v->mutable_formation()->set_id( 75 );
        v->set_identifier( 76u );
        v->set_quantity( 77 );
        v->mutable_knowledgegroup()->set_id( 78 );
        v->add_list()->set_booleanvalue( true );
        v->add_list()->set_booleanvalue( false );
    }
    template< typename P >
    void FillParameter( P* p )
    {
        p->set_null_value( true );
        FillParameterValue( p->add_value() );
    }
    template< typename O >
    void FillOrder( O* o )
    {
        o->mutable_tasker()->set_id( 7 );
        o->mutable_type()->set_id( 8 );
        FillParameter( o->mutable_parameters()->add_elem() );
        FillParameter( o->mutable_parameters()->add_elem() );
        o->set_label( "label" );
        o->mutable_start_time()->set_data( "data" );
        FillLocation( o->mutable_symbollocation() );
    }
}

BOOST_FIXTURE_TEST_CASE( unit_order_from_client_is_converted, ContextFixture< MsgsClientToSim::MsgClientToSim > )
{
    FillOrder( content.mutable_unit_order() );
    MOCK_EXPECT( server, SendClientToSim ).once().with( constraint( msg, "context: 42 message { unit_order { tasker { id: 7 } type { id: 8 } parameters { elem { null_value: true value { booleanValue: true intValue: 2 heading { heading: 3 } enumeration: 4 dateTime { data: \"data2\" } point { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } area { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } path { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } limit { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } phaseLine { elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } } automat { id: 5 } agent { id: 6 } agentKnowledge { id: 7 } crowdKnowledge { id: 8 } objectKnowledge { id: 9 } urbanKnowledge { id: 10 } plannedWork { type: \"type\" position { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } type_obstacle: reserved density: 1.23 combat_train { id: 40 } activity_time: 41 name: \"obstacleName\" } nature { flags: 11 } resourceType { id: 50 } logMaintenancePriorities { elem { id: 51 } elem { id: 52 } } logMedicalPriorities { elem: dead elem: unwounded } aReal: 3.14 pathList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } pointList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } polygonList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } locationList { elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } unitList { elem { id: 60 } elem { id: 61 } } automatList { elem { id: 63 } elem { id: 64 } } unitKnowledgeList { elem { id: 66 } elem { id: 67 } } objectKnowledgeList { elem { id: 69 } elem { id: 70 } } equipmentType { id: 71 } indirectFire { id: 72 } aCharStr: \"acharstr\" missionObjective { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } missionObjectiveList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } } object { id: 73 } party { id: 74 } formation { id: 75 } identifier: 76 quantity: 77 knowledgeGroup { id: 78 } list { booleanValue: true } list { booleanValue: false } } } elem { null_value: true value { booleanValue: true intValue: 2 heading { heading: 3 } enumeration: 4 dateTime { data: \"data2\" } point { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } area { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } path { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } limit { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } phaseLine { elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } } automat { id: 5 } agent { id: 6 } agentKnowledge { id: 7 } crowdKnowledge { id: 8 } objectKnowledge { id: 9 } urbanKnowledge { id: 10 } plannedWork { type: \"type\" position { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } type_obstacle: reserved density: 1.23 combat_train { id: 40 } activity_time: 41 name: \"obstacleName\" } nature { flags: 11 } resourceType { id: 50 } logMaintenancePriorities { elem { id: 51 } elem { id: 52 } } logMedicalPriorities { elem: dead elem: unwounded } aReal: 3.14 pathList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } pointList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } polygonList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } locationList { elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } unitList { elem { id: 60 } elem { id: 61 } } automatList { elem { id: 63 } elem { id: 64 } } unitKnowledgeList { elem { id: 66 } elem { id: 67 } } objectKnowledgeList { elem { id: 69 } elem { id: 70 } } equipmentType { id: 71 } indirectFire { id: 72 } aCharStr: \"acharstr\" missionObjective { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } missionObjectiveList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } } object { id: 73 } party { id: 74 } formation { id: 75 } identifier: 76 quantity: 77 knowledgeGroup { id: 78 } list { booleanValue: true } list { booleanValue: false } } } } label: \"label\" symbolLocation { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } start_time { data: \"data\" } } }" ) );
    converter.ReceiveClientToSim( msg );
}

BOOST_FIXTURE_TEST_CASE( automat_order_from_client_is_converted, ContextFixture< MsgsClientToSim::MsgClientToSim > )
{
    FillOrder( content.mutable_automat_order() );
    MOCK_EXPECT( server, SendClientToSim ).once().with( constraint( msg, "context: 42 message { automat_order { tasker { id: 7 } type { id: 8 } parameters { elem { null_value: true value { booleanValue: true intValue: 2 heading { heading: 3 } enumeration: 4 dateTime { data: \"data2\" } point { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } area { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } path { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } limit { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } phaseLine { elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } } automat { id: 5 } agent { id: 6 } agentKnowledge { id: 7 } crowdKnowledge { id: 8 } objectKnowledge { id: 9 } urbanKnowledge { id: 10 } plannedWork { type: \"type\" position { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } type_obstacle: reserved density: 1.23 combat_train { id: 40 } activity_time: 41 name: \"obstacleName\" } nature { flags: 11 } resourceType { id: 50 } logMaintenancePriorities { elem { id: 51 } elem { id: 52 } } logMedicalPriorities { elem: dead elem: unwounded } aReal: 3.14 pathList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } pointList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } polygonList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } locationList { elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } unitList { elem { id: 60 } elem { id: 61 } } automatList { elem { id: 63 } elem { id: 64 } } unitKnowledgeList { elem { id: 66 } elem { id: 67 } } objectKnowledgeList { elem { id: 69 } elem { id: 70 } } equipmentType { id: 71 } indirectFire { id: 72 } aCharStr: \"acharstr\" missionObjective { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } missionObjectiveList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } } object { id: 73 } party { id: 74 } formation { id: 75 } identifier: 76 quantity: 77 knowledgeGroup { id: 78 } list { booleanValue: true } list { booleanValue: false } } } elem { null_value: true value { booleanValue: true intValue: 2 heading { heading: 3 } enumeration: 4 dateTime { data: \"data2\" } point { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } area { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } path { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } limit { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } phaseLine { elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } } automat { id: 5 } agent { id: 6 } agentKnowledge { id: 7 } crowdKnowledge { id: 8 } objectKnowledge { id: 9 } urbanKnowledge { id: 10 } plannedWork { type: \"type\" position { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } type_obstacle: reserved density: 1.23 combat_train { id: 40 } activity_time: 41 name: \"obstacleName\" } nature { flags: 11 } resourceType { id: 50 } logMaintenancePriorities { elem { id: 51 } elem { id: 52 } } logMedicalPriorities { elem: dead elem: unwounded } aReal: 3.14 pathList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } pointList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } polygonList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } locationList { elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } unitList { elem { id: 60 } elem { id: 61 } } automatList { elem { id: 63 } elem { id: 64 } } unitKnowledgeList { elem { id: 66 } elem { id: 67 } } objectKnowledgeList { elem { id: 69 } elem { id: 70 } } equipmentType { id: 71 } indirectFire { id: 72 } aCharStr: \"acharstr\" missionObjective { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } missionObjectiveList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } } object { id: 73 } party { id: 74 } formation { id: 75 } identifier: 76 quantity: 77 knowledgeGroup { id: 78 } list { booleanValue: true } list { booleanValue: false } } } } label: \"label\" symbolLocation { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } start_time { data: \"data\" } } }" ) );
    converter.ReceiveClientToSim( msg );
}

BOOST_FIXTURE_TEST_CASE( crowd_order_from_client_is_converted, ContextFixture< MsgsClientToSim::MsgClientToSim > )
{
    FillOrder( content.mutable_crowd_order() );
    MOCK_EXPECT( server, SendClientToSim ).once().with( constraint( msg, "context: 42 message { crowd_order { tasker { id: 7 } type { id: 8 } parameters { elem { null_value: true value { booleanValue: true intValue: 2 heading { heading: 3 } enumeration: 4 dateTime { data: \"data2\" } point { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } area { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } path { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } limit { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } phaseLine { elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } } automat { id: 5 } agent { id: 6 } agentKnowledge { id: 7 } crowdKnowledge { id: 8 } objectKnowledge { id: 9 } urbanKnowledge { id: 10 } plannedWork { type: \"type\" position { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } type_obstacle: reserved density: 1.23 combat_train { id: 40 } activity_time: 41 name: \"obstacleName\" } nature { flags: 11 } resourceType { id: 50 } logMaintenancePriorities { elem { id: 51 } elem { id: 52 } } logMedicalPriorities { elem: dead elem: unwounded } aReal: 3.14 pathList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } pointList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } polygonList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } locationList { elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } unitList { elem { id: 60 } elem { id: 61 } } automatList { elem { id: 63 } elem { id: 64 } } unitKnowledgeList { elem { id: 66 } elem { id: 67 } } objectKnowledgeList { elem { id: 69 } elem { id: 70 } } equipmentType { id: 71 } indirectFire { id: 72 } aCharStr: \"acharstr\" missionObjective { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } missionObjectiveList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } } object { id: 73 } party { id: 74 } formation { id: 75 } identifier: 76 quantity: 77 knowledgeGroup { id: 78 } list { booleanValue: true } list { booleanValue: false } } } elem { null_value: true value { booleanValue: true intValue: 2 heading { heading: 3 } enumeration: 4 dateTime { data: \"data2\" } point { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } area { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } path { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } limit { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } phaseLine { elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } } automat { id: 5 } agent { id: 6 } agentKnowledge { id: 7 } crowdKnowledge { id: 8 } objectKnowledge { id: 9 } urbanKnowledge { id: 10 } plannedWork { type: \"type\" position { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } type_obstacle: reserved density: 1.23 combat_train { id: 40 } activity_time: 41 name: \"obstacleName\" } nature { flags: 11 } resourceType { id: 50 } logMaintenancePriorities { elem { id: 51 } elem { id: 52 } } logMedicalPriorities { elem: dead elem: unwounded } aReal: 3.14 pathList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } pointList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } polygonList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } locationList { elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } unitList { elem { id: 60 } elem { id: 61 } } automatList { elem { id: 63 } elem { id: 64 } } unitKnowledgeList { elem { id: 66 } elem { id: 67 } } objectKnowledgeList { elem { id: 69 } elem { id: 70 } } equipmentType { id: 71 } indirectFire { id: 72 } aCharStr: \"acharstr\" missionObjective { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } missionObjectiveList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } } object { id: 73 } party { id: 74 } formation { id: 75 } identifier: 76 quantity: 77 knowledgeGroup { id: 78 } list { booleanValue: true } list { booleanValue: false } } } } label: \"label\" symbolLocation { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } start_time { data: \"data\" } } }" ) );
    converter.ReceiveClientToSim( msg );
}

BOOST_FIXTURE_TEST_CASE( frag_order_from_client_is_converted, ContextFixture< MsgsClientToSim::MsgClientToSim > )
{
    FillTasker( content.mutable_frag_order()->mutable_tasker() );
    content.mutable_frag_order()->mutable_frag_order()->set_id( 21 );
    FillParameter( content.mutable_frag_order()->mutable_parameters()->add_elem() );
    FillParameter( content.mutable_frag_order()->mutable_parameters()->add_elem() );
    MOCK_EXPECT( server, SendClientToSim ).once().with( constraint( msg, "context: 42 message { frag_order { tasker { automat { id: 7 } formation { id: 8 } crowd { id: 9 } unit { id: 10 } party { id: 11 } } type { id: 21 } parameters { elem { null_value: true value { booleanValue: true intValue: 2 heading { heading: 3 } enumeration: 4 dateTime { data: \"data2\" } point { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } area { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } path { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } limit { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } phaseLine { elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } } automat { id: 5 } agent { id: 6 } agentKnowledge { id: 7 } crowdKnowledge { id: 8 } objectKnowledge { id: 9 } urbanKnowledge { id: 10 } plannedWork { type: \"type\" position { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } type_obstacle: reserved density: 1.23 combat_train { id: 40 } activity_time: 41 name: \"obstacleName\" } nature { flags: 11 } resourceType { id: 50 } logMaintenancePriorities { elem { id: 51 } elem { id: 52 } } logMedicalPriorities { elem: dead elem: unwounded } aReal: 3.14 pathList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } pointList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } polygonList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } locationList { elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } unitList { elem { id: 60 } elem { id: 61 } } automatList { elem { id: 63 } elem { id: 64 } } unitKnowledgeList { elem { id: 66 } elem { id: 67 } } objectKnowledgeList { elem { id: 69 } elem { id: 70 } } equipmentType { id: 71 } indirectFire { id: 72 } aCharStr: \"acharstr\" missionObjective { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } missionObjectiveList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } } object { id: 73 } party { id: 74 } formation { id: 75 } identifier: 76 quantity: 77 knowledgeGroup { id: 78 } list { booleanValue: true } list { booleanValue: false } } } elem { null_value: true value { booleanValue: true intValue: 2 heading { heading: 3 } enumeration: 4 dateTime { data: \"data2\" } point { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } area { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } path { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } limit { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } phaseLine { elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } } automat { id: 5 } agent { id: 6 } agentKnowledge { id: 7 } crowdKnowledge { id: 8 } objectKnowledge { id: 9 } urbanKnowledge { id: 10 } plannedWork { type: \"type\" position { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } type_obstacle: reserved density: 1.23 combat_train { id: 40 } activity_time: 41 name: \"obstacleName\" } nature { flags: 11 } resourceType { id: 50 } logMaintenancePriorities { elem { id: 51 } elem { id: 52 } } logMedicalPriorities { elem: dead elem: unwounded } aReal: 3.14 pathList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } pointList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } polygonList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } locationList { elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } unitList { elem { id: 60 } elem { id: 61 } } automatList { elem { id: 63 } elem { id: 64 } } unitKnowledgeList { elem { id: 66 } elem { id: 67 } } objectKnowledgeList { elem { id: 69 } elem { id: 70 } } equipmentType { id: 71 } indirectFire { id: 72 } aCharStr: \"acharstr\" missionObjective { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } missionObjectiveList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } } object { id: 73 } party { id: 74 } formation { id: 75 } identifier: 76 quantity: 77 knowledgeGroup { id: 78 } list { booleanValue: true } list { booleanValue: false } } } } } }" ) );
    converter.ReceiveClientToSim( msg );
}

BOOST_FIXTURE_TEST_CASE( set_automat_mode_from_client_is_converted, ContextFixture< MsgsClientToSim::MsgClientToSim > )
{
    content.mutable_set_automat_mode()->mutable_automate()->set_id( 7 );
    content.mutable_set_automat_mode()->set_mode( Common::debraye );
    MOCK_EXPECT( server, SendClientToSim ).once().with( constraint( msg, "context: 42 message { set_automat_mode { automate { id: 7 } mode: disengaged } }" ) );
    converter.ReceiveClientToSim( msg );
}

BOOST_FIXTURE_TEST_CASE( unit_magic_action_from_client_is_converted, ContextFixture< MsgsClientToSim::MsgClientToSim > )
{
    FillTasker( content.mutable_unit_magic_action()->mutable_tasker() );
    content.mutable_unit_magic_action()->set_type( Common::crowd_change_health_state );
    FillParameter( content.mutable_unit_magic_action()->mutable_parameters()->add_elem() );
    FillParameter( content.mutable_unit_magic_action()->mutable_parameters()->add_elem() );
    MOCK_EXPECT( server, SendClientToSim ).once().with( constraint( msg, "context: 42 message { unit_magic_action { tasker { automat { id: 7 } formation { id: 8 } crowd { id: 9 } unit { id: 10 } party { id: 11 } } type: crowd_change_health_state parameters { elem { null_value: true value { booleanValue: true intValue: 2 heading { heading: 3 } enumeration: 4 dateTime { data: \"data2\" } point { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } area { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } path { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } limit { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } phaseLine { elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } } automat { id: 5 } agent { id: 6 } agentKnowledge { id: 7 } crowdKnowledge { id: 8 } objectKnowledge { id: 9 } urbanKnowledge { id: 10 } plannedWork { type: \"type\" position { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } type_obstacle: reserved density: 1.23 combat_train { id: 40 } activity_time: 41 name: \"obstacleName\" } nature { flags: 11 } resourceType { id: 50 } logMaintenancePriorities { elem { id: 51 } elem { id: 52 } } logMedicalPriorities { elem: dead elem: unwounded } aReal: 3.14 pathList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } pointList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } polygonList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } locationList { elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } unitList { elem { id: 60 } elem { id: 61 } } automatList { elem { id: 63 } elem { id: 64 } } unitKnowledgeList { elem { id: 66 } elem { id: 67 } } objectKnowledgeList { elem { id: 69 } elem { id: 70 } } equipmentType { id: 71 } indirectFire { id: 72 } aCharStr: \"acharstr\" missionObjective { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } missionObjectiveList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } } object { id: 73 } party { id: 74 } formation { id: 75 } identifier: 76 quantity: 77 knowledgeGroup { id: 78 } list { booleanValue: true } list { booleanValue: false } } } elem { null_value: true value { booleanValue: true intValue: 2 heading { heading: 3 } enumeration: 4 dateTime { data: \"data2\" } point { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } area { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } path { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } limit { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } phaseLine { elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } } automat { id: 5 } agent { id: 6 } agentKnowledge { id: 7 } crowdKnowledge { id: 8 } objectKnowledge { id: 9 } urbanKnowledge { id: 10 } plannedWork { type: \"type\" position { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } type_obstacle: reserved density: 1.23 combat_train { id: 40 } activity_time: 41 name: \"obstacleName\" } nature { flags: 11 } resourceType { id: 50 } logMaintenancePriorities { elem { id: 51 } elem { id: 52 } } logMedicalPriorities { elem: dead elem: unwounded } aReal: 3.14 pathList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } pointList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } polygonList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } locationList { elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } unitList { elem { id: 60 } elem { id: 61 } } automatList { elem { id: 63 } elem { id: 64 } } unitKnowledgeList { elem { id: 66 } elem { id: 67 } } objectKnowledgeList { elem { id: 69 } elem { id: 70 } } equipmentType { id: 71 } indirectFire { id: 72 } aCharStr: \"acharstr\" missionObjective { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } missionObjectiveList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } } object { id: 73 } party { id: 74 } formation { id: 75 } identifier: 76 quantity: 77 knowledgeGroup { id: 78 } list { booleanValue: true } list { booleanValue: false } } } } } }" ) );
    converter.ReceiveClientToSim( msg );
}

BOOST_FIXTURE_TEST_CASE( object_magic_action_from_client_is_converted, ContextFixture< MsgsClientToSim::MsgClientToSim > )
{
    content.mutable_object_magic_action()->mutable_object()->set_id( 7 );
    content.mutable_object_magic_action()->set_type( Common::update );
    FillParameter( content.mutable_object_magic_action()->mutable_parameters()->add_elem() );
    FillParameter( content.mutable_object_magic_action()->mutable_parameters()->add_elem() );
    MOCK_EXPECT( server, SendClientToSim ).once().with( constraint( msg, "context: 42 message { object_magic_action { object { id: 7 } type: update parameters { elem { null_value: true value { booleanValue: true intValue: 2 heading { heading: 3 } enumeration: 4 dateTime { data: \"data2\" } point { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } area { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } path { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } limit { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } phaseLine { elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } } automat { id: 5 } agent { id: 6 } agentKnowledge { id: 7 } crowdKnowledge { id: 8 } objectKnowledge { id: 9 } urbanKnowledge { id: 10 } plannedWork { type: \"type\" position { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } type_obstacle: reserved density: 1.23 combat_train { id: 40 } activity_time: 41 name: \"obstacleName\" } nature { flags: 11 } resourceType { id: 50 } logMaintenancePriorities { elem { id: 51 } elem { id: 52 } } logMedicalPriorities { elem: dead elem: unwounded } aReal: 3.14 pathList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } pointList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } polygonList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } locationList { elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } unitList { elem { id: 60 } elem { id: 61 } } automatList { elem { id: 63 } elem { id: 64 } } unitKnowledgeList { elem { id: 66 } elem { id: 67 } } objectKnowledgeList { elem { id: 69 } elem { id: 70 } } equipmentType { id: 71 } indirectFire { id: 72 } aCharStr: \"acharstr\" missionObjective { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } missionObjectiveList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } } object { id: 73 } party { id: 74 } formation { id: 75 } identifier: 76 quantity: 77 knowledgeGroup { id: 78 } list { booleanValue: true } list { booleanValue: false } } } elem { null_value: true value { booleanValue: true intValue: 2 heading { heading: 3 } enumeration: 4 dateTime { data: \"data2\" } point { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } area { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } path { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } limit { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } phaseLine { elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } } automat { id: 5 } agent { id: 6 } agentKnowledge { id: 7 } crowdKnowledge { id: 8 } objectKnowledge { id: 9 } urbanKnowledge { id: 10 } plannedWork { type: \"type\" position { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } type_obstacle: reserved density: 1.23 combat_train { id: 40 } activity_time: 41 name: \"obstacleName\" } nature { flags: 11 } resourceType { id: 50 } logMaintenancePriorities { elem { id: 51 } elem { id: 52 } } logMedicalPriorities { elem: dead elem: unwounded } aReal: 3.14 pathList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } pointList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } polygonList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } locationList { elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } unitList { elem { id: 60 } elem { id: 61 } } automatList { elem { id: 63 } elem { id: 64 } } unitKnowledgeList { elem { id: 66 } elem { id: 67 } } objectKnowledgeList { elem { id: 69 } elem { id: 70 } } equipmentType { id: 71 } indirectFire { id: 72 } aCharStr: \"acharstr\" missionObjective { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } missionObjectiveList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } } object { id: 73 } party { id: 74 } formation { id: 75 } identifier: 76 quantity: 77 knowledgeGroup { id: 78 } list { booleanValue: true } list { booleanValue: false } } } } } }" ) );
    converter.ReceiveClientToSim( msg );
}

BOOST_FIXTURE_TEST_CASE( knowledge_magic_action_from_client_is_converted, ContextFixture< MsgsClientToSim::MsgClientToSim > )
{
    content.mutable_knowledge_magic_action()->mutable_knowledge_group()->set_id( 7 );
    content.mutable_knowledge_magic_action()->set_type( Common::update_type );
    FillParameter( content.mutable_knowledge_magic_action()->mutable_parameters()->add_elem() );
    FillParameter( content.mutable_knowledge_magic_action()->mutable_parameters()->add_elem() );
    MOCK_EXPECT( server, SendClientToSim ).once().with( constraint( msg, "context: 42 message { knowledge_magic_action { knowledge_group { id: 7 } type: update_type parameters { elem { null_value: true value { booleanValue: true intValue: 2 heading { heading: 3 } enumeration: 4 dateTime { data: \"data2\" } point { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } area { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } path { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } limit { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } phaseLine { elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } } automat { id: 5 } agent { id: 6 } agentKnowledge { id: 7 } crowdKnowledge { id: 8 } objectKnowledge { id: 9 } urbanKnowledge { id: 10 } plannedWork { type: \"type\" position { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } type_obstacle: reserved density: 1.23 combat_train { id: 40 } activity_time: 41 name: \"obstacleName\" } nature { flags: 11 } resourceType { id: 50 } logMaintenancePriorities { elem { id: 51 } elem { id: 52 } } logMedicalPriorities { elem: dead elem: unwounded } aReal: 3.14 pathList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } pointList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } polygonList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } locationList { elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } unitList { elem { id: 60 } elem { id: 61 } } automatList { elem { id: 63 } elem { id: 64 } } unitKnowledgeList { elem { id: 66 } elem { id: 67 } } objectKnowledgeList { elem { id: 69 } elem { id: 70 } } equipmentType { id: 71 } indirectFire { id: 72 } aCharStr: \"acharstr\" missionObjective { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } missionObjectiveList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } } object { id: 73 } party { id: 74 } formation { id: 75 } identifier: 76 quantity: 77 knowledgeGroup { id: 78 } list { booleanValue: true } list { booleanValue: false } } } elem { null_value: true value { booleanValue: true intValue: 2 heading { heading: 3 } enumeration: 4 dateTime { data: \"data2\" } point { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } area { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } path { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } limit { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } phaseLine { elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } } automat { id: 5 } agent { id: 6 } agentKnowledge { id: 7 } crowdKnowledge { id: 8 } objectKnowledge { id: 9 } urbanKnowledge { id: 10 } plannedWork { type: \"type\" position { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } type_obstacle: reserved density: 1.23 combat_train { id: 40 } activity_time: 41 name: \"obstacleName\" } nature { flags: 11 } resourceType { id: 50 } logMaintenancePriorities { elem { id: 51 } elem { id: 52 } } logMedicalPriorities { elem: dead elem: unwounded } aReal: 3.14 pathList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } pointList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } polygonList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } locationList { elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } unitList { elem { id: 60 } elem { id: 61 } } automatList { elem { id: 63 } elem { id: 64 } } unitKnowledgeList { elem { id: 66 } elem { id: 67 } } objectKnowledgeList { elem { id: 69 } elem { id: 70 } } equipmentType { id: 71 } indirectFire { id: 72 } aCharStr: \"acharstr\" missionObjective { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } missionObjectiveList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } } object { id: 73 } party { id: 74 } formation { id: 75 } identifier: 76 quantity: 77 knowledgeGroup { id: 78 } list { booleanValue: true } list { booleanValue: false } } } } } }" ) );
    converter.ReceiveClientToSim( msg );
}

BOOST_FIXTURE_TEST_CASE( magic_action_from_client_is_converted, ContextFixture< MsgsClientToSim::MsgClientToSim > )
{
    content.mutable_magic_action()->set_type( Common::local_weather );
    FillParameter( content.mutable_magic_action()->mutable_parameters()->add_elem() );
    FillParameter( content.mutable_magic_action()->mutable_parameters()->add_elem() );
    MOCK_EXPECT( server, SendClientToSim ).once().with( constraint( msg, "context: 42 message { magic_action { type: local_weather parameters { elem { null_value: true value { booleanValue: true intValue: 2 heading { heading: 3 } enumeration: 4 dateTime { data: \"data2\" } point { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } area { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } path { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } limit { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } phaseLine { elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } } automat { id: 5 } agent { id: 6 } agentKnowledge { id: 7 } crowdKnowledge { id: 8 } objectKnowledge { id: 9 } urbanKnowledge { id: 10 } plannedWork { type: \"type\" position { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } type_obstacle: reserved density: 1.23 combat_train { id: 40 } activity_time: 41 name: \"obstacleName\" } nature { flags: 11 } resourceType { id: 50 } logMaintenancePriorities { elem { id: 51 } elem { id: 52 } } logMedicalPriorities { elem: dead elem: unwounded } aReal: 3.14 pathList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } pointList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } polygonList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } locationList { elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } unitList { elem { id: 60 } elem { id: 61 } } automatList { elem { id: 63 } elem { id: 64 } } unitKnowledgeList { elem { id: 66 } elem { id: 67 } } objectKnowledgeList { elem { id: 69 } elem { id: 70 } } equipmentType { id: 71 } indirectFire { id: 72 } aCharStr: \"acharstr\" missionObjective { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } missionObjectiveList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } } object { id: 73 } party { id: 74 } formation { id: 75 } identifier: 76 quantity: 77 knowledgeGroup { id: 78 } list { booleanValue: true } list { booleanValue: false } } } elem { null_value: true value { booleanValue: true intValue: 2 heading { heading: 3 } enumeration: 4 dateTime { data: \"data2\" } point { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } area { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } path { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } limit { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } phaseLine { elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } elem { line { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } time { data: \"horaire2\" } fonctions: handover_line fonctions: objective_line } } automat { id: 5 } agent { id: 6 } agentKnowledge { id: 7 } crowdKnowledge { id: 8 } objectKnowledge { id: 9 } urbanKnowledge { id: 10 } plannedWork { type: \"type\" position { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } type_obstacle: reserved density: 1.23 combat_train { id: 40 } activity_time: 41 name: \"obstacleName\" } nature { flags: 11 } resourceType { id: 50 } logMaintenancePriorities { elem { id: 51 } elem { id: 52 } } logMedicalPriorities { elem: dead elem: unwounded } aReal: 3.14 pathList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } pointList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } polygonList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } } locationList { elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } elem { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } } unitList { elem { id: 60 } elem { id: 61 } } automatList { elem { id: 63 } elem { id: 64 } } unitKnowledgeList { elem { id: 66 } elem { id: 67 } } objectKnowledgeList { elem { id: 69 } elem { id: 70 } } equipmentType { id: 71 } indirectFire { id: 72 } aCharStr: \"acharstr\" missionObjective { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } missionObjectiveList { elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } elem { location { type: rectangle coordinates { elem { latitude: 17.23 longitude: 23.17 } elem { latitude: 17.23 longitude: 23.17 } } } time { data: \"horaire\" } } } object { id: 73 } party { id: 74 } formation { id: 75 } identifier: 76 quantity: 77 knowledgeGroup { id: 78 } list { booleanValue: true } list { booleanValue: false } } } } } }" ) );
    converter.ReceiveClientToSim( msg );
}

BOOST_FIXTURE_TEST_CASE( control_checkpoint_list_request_from_client_is_converted, ContextFixture< MsgsClientToSim::MsgClientToSim > )
{
    content.mutable_control_checkpoint_list_request();
    MOCK_EXPECT( server, SendClientToSim ).once().with( constraint( msg, "context: 42 message { control_checkpoint_list_request { } }" ) );
    converter.ReceiveClientToSim( msg );
}

BOOST_FIXTURE_TEST_CASE( control_checkpoint_delete_request_from_client_is_converted, ContextFixture< MsgsClientToSim::MsgClientToSim > )
{
    content.mutable_control_checkpoint_delete_request()->set_checkpoint( "checkpoint" );
    MOCK_EXPECT( server, SendClientToSim ).once().with( constraint( msg, "context: 42 message { control_checkpoint_delete_request { checkpoint: \"checkpoint\" } }" ) );
    converter.ReceiveClientToSim( msg );
}

BOOST_FIXTURE_TEST_CASE( order_stream_from_client_is_converted, ContextFixture< MsgsClientToSim::MsgClientToSim > )
{
    content.mutable_order_stream()->set_serialized_order( "order" );
    MOCK_EXPECT( server, SendClientToSim ).once().with( constraint( msg, "context: 42 message { order_stream { serialized_order: \"order\" } }" ) );
    converter.ReceiveClientToSim( msg );
}

BOOST_FIXTURE_TEST_CASE( order_log_history_request_for_play_is_converted, ContextFixture< MsgsClientToSim::MsgClientToSim > )
{
    content.mutable_log_history_request_for_play()->set_exercise( "exercise" );
    content.mutable_log_history_request_for_play()->set_profile( "profile" );
    content.mutable_log_history_request_for_play()->mutable_date_time()->set_data( "date" );
    content.mutable_log_history_request_for_play()->set_session( "session" );
    MOCK_EXPECT( server, SendClientToSim ).once().with( constraint( msg, "context: 42 message { log_history_request_for_play { exercise: \"exercise\" profile: \"profile\" date_time { data: \"date\" } session: \"session\" } }" ) );
    converter.ReceiveClientToSim( msg );
}
